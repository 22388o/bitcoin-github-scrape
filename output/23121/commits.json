[
  {
    "sha": "258f184a6a8955398a1666f22562a0c173d499cf",
    "node_id": "C_kwDOABII59oAKDI1OGYxODRhNmE4OTU1Mzk4YTE2NjZmMjI1NjJhMGMxNzNkNDk5Y2Y",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-07T15:18:09Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-09T20:29:53Z"
      },
      "message": "[validation] require replacement tx to have higher ancestor score",
      "tree": {
        "sha": "6621fae911fda72f4ae89dc98f5f95bab00b5890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6621fae911fda72f4ae89dc98f5f95bab00b5890"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/258f184a6a8955398a1666f22562a0c173d499cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/258f184a6a8955398a1666f22562a0c173d499cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/258f184a6a8955398a1666f22562a0c173d499cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/258f184a6a8955398a1666f22562a0c173d499cf/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ae4ba481ce8f7da173bef24432729c87a36cb70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ae4ba481ce8f7da173bef24432729c87a36cb70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ae4ba481ce8f7da173bef24432729c87a36cb70"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 50,
      "deletions": 8
    },
    "files": [
      {
        "sha": "976653f9fa83b419c956021d61e6fd473528686e",
        "filename": "src/policy/rbf.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 7,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/258f184a6a8955398a1666f22562a0c173d499cf/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/258f184a6a8955398a1666f22562a0c173d499cf/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=258f184a6a8955398a1666f22562a0c173d499cf",
        "patch": "@@ -88,13 +88,6 @@ std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n     }\n \n     for (unsigned int j = 0; j < tx.vin.size(); j++) {\n-        // BIP125 Rule #2: We don't want to accept replacements that require low feerate junk to be\n-        // mined first.  Ideally we'd keep track of the ancestor feerates and make the decision\n-        // based on that, but for now requiring all new inputs to be confirmed works.\n-        //\n-        // Note that if you relax this to make RBF a little more useful, this may break the\n-        // CalculateMempoolAncestors RBF relaxation which subtracts the conflict count/size from the\n-        // descendant limit.\n         if (!parents_of_conflicts.count(tx.vin[j].prevout.hash)) {\n             // Rather than check the UTXO set - potentially expensive - it's cheaper to just check\n             // if the new input refers to a tx that's in the mempool.\n@@ -174,3 +167,35 @@ std::optional<std::string> PaysForRBF(CAmount original_fees,\n     }\n     return std::nullopt;\n }\n+\n+std::optional<std::string> CheckAncestorScores(CAmount replacement_fees,\n+                                               int64_t replacement_vsize,\n+                                               const CTxMemPool::setEntries& ancestors,\n+                                               const CTxMemPool::setEntries& all_conflicts)\n+{\n+    assert(!all_conflicts.empty());\n+    // Ancestor score is the total modified fees divided by the total size.\n+    // To get the ancestor score, add up all the individual modified fees and sizes. Don't try to\n+    // use the cached ancestor fees and sizes, because entries may have overlapping ancestors.\n+    for (CTxMemPool::txiter it : ancestors) {\n+        replacement_fees += it->GetModifiedFee();\n+        replacement_vsize += it->GetTxSize();\n+    }\n+    const CFeeRate replacement_ancestor_score(replacement_fees, replacement_vsize);\n+    for (CTxMemPool::txiter it : all_conflicts) {\n+        const CFeeRate ancestor_score(it->GetModFeesWithAncestors(), it->GetSizeWithAncestors());\n+        if (replacement_ancestor_score < ancestor_score) {\n+            // Mining code will select transactions in order of ancestor score. Require the ancestor\n+            // score of replacement transaction(s) to be at least as high as the ancestor score of\n+            // every mempool transaction it's trying to replace. In other words, our replacement\n+            // transaction must be a better (i.e. more economical) candidate for mining than the\n+            // best transaction it conflicts with, otherwise it could be lowering the fee of the\n+            // next block. This must be paired with Rule #4 to ensure that the replacements are also\n+            // paying for their relay fees.\n+            return strprintf(\"replacement ancestor score too low; %s < %s\",\n+                             FormatMoney(replacement_fees),\n+                             FormatMoney(ancestor_score.GetFee(replacement_vsize)));\n+        }\n+    }\n+    return std::nullopt;\n+}"
      },
      {
        "sha": "fb2991d7327c384490a7476be464d7dc66b2eb06",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/258f184a6a8955398a1666f22562a0c173d499cf/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/258f184a6a8955398a1666f22562a0c173d499cf/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=258f184a6a8955398a1666f22562a0c173d499cf",
        "patch": "@@ -99,4 +99,15 @@ std::optional<std::string> PaysForRBF(CAmount original_fees,\n                                       CFeeRate relay_fee,\n                                       const uint256& txid);\n \n+/** Check that the ancestor score of replacement transaction(s) is higher than the ancestor scores\n+ * of every mempool transaction it conflicts with.\n+ * @param[in]   replacement_fees    Modified fees of the replacement tx.\n+ * @param[in]   replacement_vsize   Virtual size of the replacement tx.\n+ * @param[in]   ancestors           All of the replacement transaction's mempool ancestors.\n+ * @param[in]   all_conflicts       All mempool transactions that would be replaced.\n+ * */\n+std::optional<std::string> CheckAncestorScores(CAmount replacement_fees,\n+                                               int64_t replacement_vsize,\n+                                               const CTxMemPool::setEntries& ancestors,\n+                                               const CTxMemPool::setEntries& all_conflicts);\n #endif // BITCOIN_POLICY_RBF_H"
      },
      {
        "sha": "7c2e0bdd8cff86a28da63d30a8a8c8c3588c4071",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/258f184a6a8955398a1666f22562a0c173d499cf/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/258f184a6a8955398a1666f22562a0c173d499cf/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=258f184a6a8955398a1666f22562a0c173d499cf",
        "patch": "@@ -842,7 +842,6 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n     const CTransaction& tx = *ws.m_ptx;\n     const uint256& hash = ws.m_hash;\n     TxValidationState& state = ws.m_state;\n-\n     CFeeRate newFeeRate(ws.m_modified_fees, ws.m_vsize);\n     // It's possible that the replacement pays more fees than its direct conflicts but not more\n     // than all conflicts (i.e. the direct conflicts have high-fee descendants). However, if the\n@@ -864,6 +863,13 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n         return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n                              \"replacement-adds-unconfirmed\", *err_string);\n     }\n+    // Require that the replacement transaction have a higher ancestor score than that of all\n+    // transactions it's trying to replace.\n+    if (const auto err_string{CheckAncestorScores(ws.m_modified_fees, ws.m_vsize,\n+                                                  ws.m_ancestors, ws.m_all_conflicting)}) {\n+        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\", *err_string);\n+    }\n+\n     // Check if it's economically rational to mine this transaction rather than the ones it\n     // replaces and pays for its own relay fees. Enforce BIP125 Rules #3 and #4.\n     for (CTxMemPool::txiter it : ws.m_all_conflicting) {"
      }
    ]
  },
  {
    "sha": "8afab375beeaf274452d5383f76573b40923f44d",
    "node_id": "C_kwDOABII59oAKDhhZmFiMzc1YmVlYWYyNzQ0NTJkNTM4M2Y3NjU3M2I0MDkyM2Y0NGQ",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-28T15:38:59Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-09T20:29:53Z"
      },
      "message": "[unit test] for CheckAncestorScores",
      "tree": {
        "sha": "d90940a03dcb4057eb5da5bc86f39623b95a8254",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d90940a03dcb4057eb5da5bc86f39623b95a8254"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8afab375beeaf274452d5383f76573b40923f44d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8afab375beeaf274452d5383f76573b40923f44d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8afab375beeaf274452d5383f76573b40923f44d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8afab375beeaf274452d5383f76573b40923f44d/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "258f184a6a8955398a1666f22562a0c173d499cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/258f184a6a8955398a1666f22562a0c173d499cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/258f184a6a8955398a1666f22562a0c173d499cf"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 116,
      "deletions": 0
    },
    "files": [
      {
        "sha": "544cc4e1f8c55777702422e93e953f5e00f697cf",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8afab375beeaf274452d5383f76573b40923f44d/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8afab375beeaf274452d5383f76573b40923f44d/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=8afab375beeaf274452d5383f76573b40923f44d",
        "patch": "@@ -114,6 +114,7 @@ BITCOIN_TESTS =\\\n   test/prevector_tests.cpp \\\n   test/raii_event_tests.cpp \\\n   test/random_tests.cpp \\\n+  test/rbf_tests.cpp \\\n   test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\"
      },
      {
        "sha": "6e3eb23422b320bfe41b28d302408c9aaf4121d1",
        "filename": "src/test/rbf_tests.cpp",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8afab375beeaf274452d5383f76573b40923f44d/src/test/rbf_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8afab375beeaf274452d5383f76573b40923f44d/src/test/rbf_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rbf_tests.cpp?ref=8afab375beeaf274452d5383f76573b40923f44d",
        "patch": "@@ -0,0 +1,115 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <txmempool.h>\n+#include <util/system.h>\n+#include <util/time.h>\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <optional>\n+#include <vector>\n+\n+BOOST_FIXTURE_TEST_SUITE(rbf_tests, TestingSetup)\n+\n+inline CTransactionRef make_tx(std::vector<CAmount>&& output_values,\n+                               std::vector<CTransactionRef>&& inputs=std::vector<CTransactionRef>(),\n+                               std::vector<uint32_t>&& input_indices=std::vector<uint32_t>())\n+{\n+    CMutableTransaction tx = CMutableTransaction();\n+    tx.vin.resize(inputs.size());\n+    tx.vout.resize(output_values.size());\n+    for (size_t i = 0; i < inputs.size(); ++i) {\n+        tx.vin[i].prevout.hash = inputs[i]->GetHash();\n+        tx.vin[i].prevout.n = input_indices.size() > i ? input_indices[i] : 0;\n+    }\n+    for (size_t i = 0; i < output_values.size(); ++i) {\n+        tx.vout[i].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n+        tx.vout[i].nValue = output_values[i];\n+    }\n+    return MakeTransactionRef(tx);\n+}\n+\n+BOOST_AUTO_TEST_CASE(AncestorScoreTests)\n+{\n+    CTxMemPool pool;\n+    LOCK2(cs_main, pool.cs);\n+    TestMemPoolEntryHelper entry;\n+\n+    const CAmount low_fee{100};\n+    const CAmount normal_fee{10000};\n+    const CAmount high_fee{1 * COIN};\n+\n+    // Create a parent and child with \"fees\" manually set to normal:\n+    // [tx1].0 <- [tx2].0\n+    //\n+    CTransactionRef tx1 = make_tx(/* output_values */ {10 * COIN});\n+    pool.addUnchecked(entry.Fee(normal_fee).FromTx(tx1));\n+    CTransactionRef tx2 = make_tx(/* output_values */ {995 * CENT}, /* inputs */ {tx1});\n+    pool.addUnchecked(entry.Fee(normal_fee).FromTx(tx2));\n+    CTxMemPool::setEntries normal_normal = pool.GetIterSet({tx1->GetHash(), tx2->GetHash()});\n+\n+    /* Create a parent and child where the child has a very high \"fee\". */\n+    //\n+    // [tx3] <- [tx4]\n+    //\n+    CTransactionRef tx3 = make_tx(/* output_values */ {1099 * CENT});\n+    pool.addUnchecked(entry.Fee(low_fee).FromTx(tx3));\n+    CTransactionRef tx4 = make_tx(/* output_values */ {999 * CENT}, /* inputs */ {tx3});\n+    pool.addUnchecked(entry.Fee(high_fee).FromTx(tx4));\n+    CTxMemPool::setEntries cpfp = pool.GetIterSet({tx3->GetHash(), tx4->GetHash()});\n+\n+    /* Create a parent and child where both have very low \"fees\". */\n+    //\n+    // [tx5] <- [tx6]\n+    //\n+    CTransactionRef tx5 = make_tx(/* output_values */ {1099 * CENT});\n+    pool.addUnchecked(entry.Fee(low_fee).FromTx(tx5));\n+    CTransactionRef tx6 = make_tx(/* output_values */ {1098 * CENT}, /* inputs */ {tx3});\n+    pool.addUnchecked(entry.Fee(low_fee).FromTx(tx6));\n+    CTxMemPool::setEntries low_low = pool.GetIterSet({tx5->GetHash(), tx6->GetHash()});\n+\n+    const auto tx1_fee = pool.GetIter(tx1->GetHash()).value()->GetFee();\n+    const auto tx2_fee = pool.GetIter(tx2->GetHash()).value()->GetFee();\n+    const auto tx3_fee = pool.GetIter(tx3->GetHash()).value()->GetFee();\n+    const auto tx4_fee = pool.GetIter(tx4->GetHash()).value()->GetFee();\n+    const auto tx5_fee = pool.GetIter(tx5->GetHash()).value()->GetFee();\n+    const auto tx6_fee = pool.GetIter(tx6->GetHash()).value()->GetFee();\n+\n+    BOOST_CHECK_EQUAL(tx1_fee, normal_fee);\n+    BOOST_CHECK_EQUAL(tx2_fee, normal_fee);\n+    BOOST_CHECK_EQUAL(tx3_fee, low_fee);\n+    BOOST_CHECK_EQUAL(tx4_fee, high_fee);\n+    BOOST_CHECK_EQUAL(tx5_fee, low_fee);\n+    BOOST_CHECK_EQUAL(tx6_fee, low_fee);\n+\n+    // Hypothetical replacement transaction virtual size.\n+    const int64_t replacement_vsize{300};\n+    const int64_t huge_replacement_vsize{99999};\n+\n+    // We don't allow replacements with a low ancestor score\n+    BOOST_CHECK(CheckAncestorScores(/* replacement_fees */ normal_fee, replacement_vsize,\n+                                    /* ancestors */ low_low, /* conflicts */ cpfp));\n+    BOOST_CHECK(CheckAncestorScores(/* replacement_fees */ normal_fee, replacement_vsize,\n+                                    /* ancestors */ low_low, /* conflicts */ normal_normal));\n+    BOOST_CHECK(CheckAncestorScores(/* replacement_fees */ high_fee, huge_replacement_vsize,\n+                                    /* ancestors */ low_low, /* conflicts */ cpfp));\n+    BOOST_CHECK(CheckAncestorScores(/* replacement_fees */ low_fee, replacement_vsize,\n+                                    /* ancestors */ low_low, /* conflicts */ normal_normal));\n+\n+    // We do allow replacements with a higher ancestor score\n+    BOOST_CHECK(!CheckAncestorScores(/* replacement_fees */ normal_fee, replacement_vsize,\n+                                     /* ancestors */ normal_normal,\n+                                     /* conflicts */ low_low));\n+    BOOST_CHECK(!CheckAncestorScores(/* replacement_fees */ normal_fee, replacement_vsize,\n+                                     /* ancestors */ cpfp,\n+                                     /* conflicts */ normal_normal));\n+    BOOST_CHECK(!CheckAncestorScores(/* replacement_fees */ high_fee, replacement_vsize,\n+                                     /* ancestors */ low_low,\n+                                     /* conflicts */ normal_normal));\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "4d45f5350bafc9553210e8bddb07ff5a15ec3962",
    "node_id": "C_kwDOABII59oAKDRkNDVmNTM1MGJhZmM5NTUzMjEwZThiZGRiMDdmZjVhMTVlYzM5NjI",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-28T14:38:23Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-09T20:29:53Z"
      },
      "message": "[validation] gate CMPA relaxation by HasNoNewUnconfirmedInputs",
      "tree": {
        "sha": "8ec79ea667430cee1afae1e6a2c8938b63b7b80d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ec79ea667430cee1afae1e6a2c8938b63b7b80d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d45f5350bafc9553210e8bddb07ff5a15ec3962",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d45f5350bafc9553210e8bddb07ff5a15ec3962",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d45f5350bafc9553210e8bddb07ff5a15ec3962",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d45f5350bafc9553210e8bddb07ff5a15ec3962/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8afab375beeaf274452d5383f76573b40923f44d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8afab375beeaf274452d5383f76573b40923f44d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8afab375beeaf274452d5383f76573b40923f44d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 8,
      "deletions": 11
    },
    "files": [
      {
        "sha": "8cb1bd1b3da0893b0225fba4a8b46c61ad0e4360",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 11,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d45f5350bafc9553210e8bddb07ff5a15ec3962/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d45f5350bafc9553210e8bddb07ff5a15ec3962/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=4d45f5350bafc9553210e8bddb07ff5a15ec3962",
        "patch": "@@ -763,7 +763,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     ws.m_iters_conflicting = m_pool.GetIterSet(ws.m_conflicts);\n     // Calculate in-mempool ancestors, up to a limit.\n-    if (ws.m_conflicts.size() == 1) {\n+    if (ws.m_conflicts.size() == 1 && HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting) == std::nullopt) {\n         // In general, when we receive an RBF transaction with mempool conflicts, we want to know whether we\n         // would meet the chain limits after the conflicts have been removed. However, there isn't a practical\n         // way to do this short of calculating the ancestor and descendant sets with an overlay cache of\n@@ -773,16 +773,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         // the below carve-out are able to be RBF'ed, without impacting the security the carve-out provides\n         // for off-chain contract systems (see link in the comment below).\n         //\n-        // Specifically, the subset of RBF transactions which we allow despite chain limits are those which\n-        // conflict directly with exactly one other transaction (but may evict children of said transaction),\n-        // and which are not adding any new mempool dependencies. Note that the \"no new mempool dependencies\"\n-        // check is accomplished later, so we don't bother doing anything about it here, but if BIP 125 is\n-        // amended, we may need to move that check to here instead of removing it wholesale.\n-        //\n-        // Such transactions are clearly not merging any existing packages, so we are only concerned with\n-        // ensuring that (a) no package is growing past the package size (not count) limits and (b) we are\n-        // not allowing something to effectively use the (below) carve-out spot when it shouldn't be allowed\n-        // to.\n+        // Specifically, the subset of RBF transactions which we allow despite chain limits are\n+        // those which conflict directly with exactly one other transaction (but may evict children\n+        // of said transaction), and which are not adding any new mempool dependencies. Such\n+        // transactions are clearly not merging any existing packages, so we are only concerned with\n+        // ensuring that (a) no package is growing past the package size (not count) limits and (b)\n+        // we are not allowing something to effectively use the (below) carve-out spot when it\n+        // shouldn't be allowed to.\n         //\n         // To check these we first check if we meet the RBF criteria, above, and increment the descendant\n         // limits by the direct conflict and its descendants (as these are recalculated in"
      }
    ]
  },
  {
    "sha": "677e884aeafcfe17823680f87aefdc57499c2b92",
    "node_id": "C_kwDOABII59oAKDY3N2U4ODRhZWFmY2ZlMTc4MjM2ODBmODdhZWZkYzU3NDk5YzJiOTI",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-28T14:50:56Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-09T20:29:53Z"
      },
      "message": "[policy] remove BIP125 Rule 2\n\nNow that we check the ancestor scores of replacement transactions, this\nrule is no longer needed. The HasNoNewUnconfirmedInputs check still\nneeds to be done for CMPA relaxation in PreChecks.",
      "tree": {
        "sha": "3eebbaf7762122f3412d109f5226389de957eeb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3eebbaf7762122f3412d109f5226389de957eeb8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/677e884aeafcfe17823680f87aefdc57499c2b92",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/677e884aeafcfe17823680f87aefdc57499c2b92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/677e884aeafcfe17823680f87aefdc57499c2b92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/677e884aeafcfe17823680f87aefdc57499c2b92/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d45f5350bafc9553210e8bddb07ff5a15ec3962",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d45f5350bafc9553210e8bddb07ff5a15ec3962",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d45f5350bafc9553210e8bddb07ff5a15ec3962"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 0,
      "deletions": 27
    },
    "files": [
      {
        "sha": "e49642d8b9de9bbef9ac9e07ce8d7ff50513467c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/677e884aeafcfe17823680f87aefdc57499c2b92/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/677e884aeafcfe17823680f87aefdc57499c2b92/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=677e884aeafcfe17823680f87aefdc57499c2b92",
        "patch": "@@ -855,11 +855,6 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n         return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n                              \"too many potential replacements\", *err_string);\n     }\n-    // Enforce BIP125 Rule #2.\n-    if (const auto err_string{HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n-                             \"replacement-adds-unconfirmed\", *err_string);\n-    }\n     // Require that the replacement transaction have a higher ancestor score than that of all\n     // transactions it's trying to replace.\n     if (const auto err_string{CheckAncestorScores(ws.m_modified_fees, ws.m_vsize,"
      },
      {
        "sha": "5af0d182d3ce22f8fd5e6ce8f24e6ad842ed25d3",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/677e884aeafcfe17823680f87aefdc57499c2b92/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/677e884aeafcfe17823680f87aefdc57499c2b92/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=677e884aeafcfe17823680f87aefdc57499c2b92",
        "patch": "@@ -66,9 +66,6 @@ def run_test(self):\n         self.log.info(\"Running test spends of conflicting outputs...\")\n         self.test_spends_of_conflicting_outputs()\n \n-        self.log.info(\"Running test new unconfirmed inputs...\")\n-        self.test_new_unconfirmed_inputs()\n-\n         self.log.info(\"Running test too many replacements...\")\n         self.test_too_many_replacements()\n \n@@ -324,25 +321,6 @@ def test_spends_of_conflicting_outputs(self):\n         # This will raise an exception\n         assert_raises_rpc_error(-26, \"bad-txns-spends-conflicting-tx\", self.nodes[0].sendrawtransaction, tx2_hex, 0)\n \n-    def test_new_unconfirmed_inputs(self):\n-        \"\"\"Replacements that add new unconfirmed inputs are rejected\"\"\"\n-        confirmed_utxo = self.make_utxo(self.nodes[0], int(1.1 * COIN))\n-        unconfirmed_utxo = self.make_utxo(self.nodes[0], int(0.1 * COIN), False)\n-\n-        tx1 = CTransaction()\n-        tx1.vin = [CTxIn(confirmed_utxo)]\n-        tx1.vout = [CTxOut(1 * COIN, DUMMY_P2WPKH_SCRIPT)]\n-        tx1_hex = tx1.serialize().hex()\n-        self.nodes[0].sendrawtransaction(tx1_hex, 0)\n-\n-        tx2 = CTransaction()\n-        tx2.vin = [CTxIn(confirmed_utxo), CTxIn(unconfirmed_utxo)]\n-        tx2.vout = tx1.vout\n-        tx2_hex = tx2.serialize().hex()\n-\n-        # This will raise an exception\n-        assert_raises_rpc_error(-26, \"replacement-adds-unconfirmed\", self.nodes[0].sendrawtransaction, tx2_hex, 0)\n-\n     def test_too_many_replacements(self):\n         \"\"\"Replacements that evict too many transactions are rejected\"\"\"\n         # Try directly replacing more than MAX_REPLACEMENT_LIMIT"
      }
    ]
  },
  {
    "sha": "8cc41100d329dced988c708cc9e84fe086023fea",
    "node_id": "C_kwDOABII59oAKDhjYzQxMTAwZDMyOWRjZWQ5ODhjNzA4Y2M5ZTg0ZmUwODYwMjNmZWE",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-07T16:39:08Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-09T20:29:53Z"
      },
      "message": "[functional test] RBF with new unconfirmed input but low ancestor scores",
      "tree": {
        "sha": "db57d7f03cc63906b0ea7f319a940cde2f6b7d2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db57d7f03cc63906b0ea7f319a940cde2f6b7d2a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cc41100d329dced988c708cc9e84fe086023fea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cc41100d329dced988c708cc9e84fe086023fea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8cc41100d329dced988c708cc9e84fe086023fea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cc41100d329dced988c708cc9e84fe086023fea/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "677e884aeafcfe17823680f87aefdc57499c2b92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/677e884aeafcfe17823680f87aefdc57499c2b92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/677e884aeafcfe17823680f87aefdc57499c2b92"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 34,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9c4cec4ec5c9c3cc5aa94896c3b766d5fe55cdec",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 34,
        "deletions": 1,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cc41100d329dced988c708cc9e84fe086023fea/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cc41100d329dced988c708cc9e84fe086023fea/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=8cc41100d329dced988c708cc9e84fe086023fea",
        "patch": "@@ -84,9 +84,12 @@ def run_test(self):\n         self.log.info(\"Running test replacement relay fee...\")\n         self.test_replacement_relay_fee()\n \n+        self.log.info(\"Running test replacements with low ancestor score...\")\n+        self.test_low_ancestor_score()\n+\n         self.log.info(\"Passed\")\n \n-    def make_utxo(self, node, amount, confirmed=True, scriptPubKey=DUMMY_P2WPKH_SCRIPT):\n+    def make_utxo(self, node, amount, confirmed=True, fee=0.0001*COIN, scriptPubKey=DUMMY_P2WPKH_SCRIPT):\n         \"\"\"Create a txout with a given amount and scriptPubKey\n \n         confirmed - txouts created will be confirmed in the blockchain;\n@@ -601,5 +604,35 @@ def test_replacement_relay_fee(self):\n         tx.vout[0].nValue -= 1\n         assert_raises_rpc_error(-26, \"insufficient fee\", self.nodes[0].sendrawtransaction, tx.serialize().hex())\n \n+    def test_low_ancestor_score(self):\n+        \"\"\"Replacement transaction can have new unconfirmed inputs, but should be rejected if its\n+        ancestor score is worse than the original transaction.\n+        \"\"\"\n+        confirmed_utxo = self.make_utxo(self.nodes[0], int(1 * COIN))\n+        confirmed_utxo_2 = self.make_utxo(self.nodes[0], int(0.0001 * COIN), True, 0.00001 * COIN)\n+        unconfirmed_utxo = self.make_utxo(self.nodes[0], int(0.00011 * COIN), False, 0.00001 * COIN)\n+\n+        # Original transaction\n+        tx1 = CTransaction()\n+        tx1.vin = [CTxIn(confirmed_utxo), CTxIn(confirmed_utxo_2)] # 1.0001\n+        tx1.vout = [CTxOut(1 * COIN, DUMMY_P2WPKH_SCRIPT)] # fee = 0.0001\n+        tx1_hex = tx1.serialize().hex()\n+        self.nodes[0].sendrawtransaction(tx1_hex, 0)\n+\n+        # Replacement transaction with low ancestor score\n+        tx2 = CTransaction()\n+        tx2.vin = [CTxIn(confirmed_utxo), CTxIn(unconfirmed_utxo)] # 1.0001\n+        tx2.vout = [CTxOut(1 * COIN, DUMMY_P2WPKH_SCRIPT)] # fee = 0.00011\n+        tx2_hex = tx2.serialize().hex()\n+        assert_raises_rpc_error(-26, \"insufficient fee\", self.nodes[0].sendrawtransaction, tx2_hex, 0)\n+\n+        # Replacement transaction with high ancestor score\n+        tx3 = CTransaction()\n+        tx3.vin = [CTxIn(confirmed_utxo), CTxIn(unconfirmed_utxo)] # 1.0001\n+        tx3.vout = [CTxOut(int(0.999 * COIN), DUMMY_P2WPKH_SCRIPT)] # fee = 0.00011\n+        tx3_hex = tx3.serialize().hex()\n+        self.nodes[0].sendrawtransaction(tx3_hex)\n+\n+\n if __name__ == '__main__':\n     ReplaceByFeeTest().main()"
      }
    ]
  },
  {
    "sha": "c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
    "node_id": "C_kwDOABII59oAKGM1ZDBiMzg5OGI2ZWEyNTk1ZDY1YjM4MWQzNTRjMzU2ZTNjMWRkYmU",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-28T15:02:16Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-09T20:29:53Z"
      },
      "message": "change HasNoNewUnconfirmed to return bool",
      "tree": {
        "sha": "1c6205ea69df95bbb88b5ade6fd77f40fa64f36b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c6205ea69df95bbb88b5ade6fd77f40fa64f36b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8cc41100d329dced988c708cc9e84fe086023fea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cc41100d329dced988c708cc9e84fe086023fea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8cc41100d329dced988c708cc9e84fe086023fea"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 9,
      "deletions": 14
    },
    "files": [
      {
        "sha": "8e88f8ba3daa4c2e51a5612452694a2263e0eeb2",
        "filename": "src/policy/rbf.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
        "patch": "@@ -75,9 +75,8 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n     return std::nullopt;\n }\n \n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n+bool HasNoNewUnconfirmed(const CTransaction& tx, const CTxMemPool& pool,\n+                         const CTxMemPool::setEntries& iters_conflicting)\n {\n     AssertLockHeld(pool.cs);\n     std::set<uint256> parents_of_conflicts;\n@@ -91,13 +90,10 @@ std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n         if (!parents_of_conflicts.count(tx.vin[j].prevout.hash)) {\n             // Rather than check the UTXO set - potentially expensive - it's cheaper to just check\n             // if the new input refers to a tx that's in the mempool.\n-            if (pool.exists(GenTxid::Txid(tx.vin[j].prevout.hash))) {\n-                return strprintf(\"replacement %s adds unconfirmed input, idx %d\",\n-                                 tx.GetHash().ToString(), j);\n-            }\n+            if (pool.exists(GenTxid::Txid(tx.vin[j].prevout.hash))) return false;\n         }\n     }\n-    return std::nullopt;\n+    return true;\n }\n \n std::optional<std::string> EntriesAndTxidsDisjoint(const CTxMemPool::setEntries& ancestors,"
      },
      {
        "sha": "85bc943a40581ef7c3ee07b7b2db3b70b61325c5",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
        "patch": "@@ -55,11 +55,10 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx, CTxMem\n                                                   CTxMemPool::setEntries& all_conflicts)\n     EXCLUSIVE_LOCKS_REQUIRED(pool.cs);\n \n-/** BIP125 Rule #2: \"The replacement transaction may only include an unconfirmed input if that input\n- * was included in one of the original transactions.\"\n- * @returns error message if Rule #2 is broken, otherwise std::nullopt. */\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx, const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n+/** Returns whether tx includes any unconfirmed inputs that aren't spent by any of the transactions\n+ * in iters_conflicting. */\n+bool HasNoNewUnconfirmed(const CTransaction& tx, const CTxMemPool& pool,\n+                         const CTxMemPool::setEntries& iters_conflicting)\n     EXCLUSIVE_LOCKS_REQUIRED(pool.cs);\n \n /** Check the intersection between two sets of transactions (a set of mempool entries and a set of"
      },
      {
        "sha": "9e743f30c7b9b4e8380d50347b42844d56039c60",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
        "patch": "@@ -763,7 +763,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     ws.m_iters_conflicting = m_pool.GetIterSet(ws.m_conflicts);\n     // Calculate in-mempool ancestors, up to a limit.\n-    if (ws.m_conflicts.size() == 1 && HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting) == std::nullopt) {\n+    if (ws.m_conflicts.size() == 1 && HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting)) {\n         // In general, when we receive an RBF transaction with mempool conflicts, we want to know whether we\n         // would meet the chain limits after the conflicts have been removed. However, there isn't a practical\n         // way to do this short of calculating the ancestor and descendant sets with an overlay cache of"
      }
    ]
  },
  {
    "sha": "3847e4178676ebf041f3bda6ff9e9b8c5733cb48",
    "node_id": "C_kwDOABII59oAKDM4NDdlNDE3ODY3NmViZjA0MWYzYmRhNmZmOWU5YjhjNTczM2NiNDg",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-10-22T13:20:06Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-09T20:29:53Z"
      },
      "message": "[doc] document RBF policy, note differences with BIP125",
      "tree": {
        "sha": "067c67f0524db9e76ee72d4ce70579b8a7b84fdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/067c67f0524db9e76ee72d4ce70579b8a7b84fdc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3847e4178676ebf041f3bda6ff9e9b8c5733cb48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3847e4178676ebf041f3bda6ff9e9b8c5733cb48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3847e4178676ebf041f3bda6ff9e9b8c5733cb48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3847e4178676ebf041f3bda6ff9e9b8c5733cb48/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5d0b3898b6ea2595d65b381d354c356e3c1ddbe"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 37,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b9c996c5265c7b291515779c1950c69a5352ffca",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3847e4178676ebf041f3bda6ff9e9b8c5733cb48/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3847e4178676ebf041f3bda6ff9e9b8c5733cb48/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=3847e4178676ebf041f3bda6ff9e9b8c5733cb48",
        "patch": "@@ -32,7 +32,8 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v22.0**):\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n * [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n-* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)). Enabled by default in the wallet GUI as of **v0.18.1** ([PR #11605](https://github.com/bitcoin/bitcoin/pull/11605))\n+* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): partially\n+  implemented. See doc/policy/rbf.md for details on Replace by Fee policy.\n * [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n * [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n * [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060))."
      },
      {
        "sha": "56fa008749c6596703636198401b35f4abf97119",
        "filename": "doc/policy/rbf.md",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3847e4178676ebf041f3bda6ff9e9b8c5733cb48/doc/policy/rbf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3847e4178676ebf041f3bda6ff9e9b8c5733cb48/doc/policy/rbf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/policy/rbf.md?ref=3847e4178676ebf041f3bda6ff9e9b8c5733cb48",
        "patch": "@@ -0,0 +1,35 @@\n+# Replace By Fee\n+\n+## Current Policy\n+\n+A transaction conflicts with an in-mempool transaction (\"directly conflicting transaction\") if they\n+spend the same inputs. A transaction (\"replacement transaction\") may replace its directly\n+conflicting transactions and all of their in-mempool descendants (\"original transactions\" together)\n+if the following conditions are met:\n+\n+* The directly conflicting transactions signal replaceability explicitly.\n+\n+* The replacement transaction pays an absolute fee of at least the sum paid by the original\n+  transactions.\n+\n+* The replacement transaction must also pay for its own bandwidth at or above the rate set by the\n+node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the\n+replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500\n+satoshis higher than the sum of the originals.\n+\n+* The number of original transactions must not exceed 100.\n+\n+* The ancestor feerate of the replacement transaction must be greater than the ancestor feerate of\n+  each of the original transactions.\n+\n+## History\n+\n+* Opt-in full replace-by-fee (without inherited signaling) honoured in mempool and mining as of\n+  **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n+\n+* [BIP125](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki) defined based on\n+  Bitcoin Core implementation.\n+\n+* RBF enabled by default in the wallet GUI as of **v0.18.1** ([PR #11605](https://github.com/bitcoin/bitcoin/pull/11605)).\n+\n+* Restriction on replacement transaction's inputs (BIP125 Rule #2) removed in ([PR #23121](https://github.com/bitcoin/bitcoin/pull/23121))."
      }
    ]
  }
]