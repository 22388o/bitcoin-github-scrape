jtimon,2014-12-21T12:58:52Z,"utACK. I also wonder if this check should be part of the node's policy as in #5071 or it should be left in main. At least ""chainActive.Height() + 1"" doesn't seem to be something you should call from policy.o, at most pass it as parameter.\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-67769675,67769675,
petertodd,2014-12-21T14:44:52Z,@jtimon How is this sanely a node policy thing? We're talking about whether or not we accept transactions that can't be mined to the mempool; remember the nLockTime can be any amount in the future.\n,https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-67772453,67772453,
jtimon,2014-12-21T14:59:56Z,"That's what I'm saying, this probably shouldn't go with the policy code. Thus this change is good for a later move of `Params().RequireStandard() && !IsStandardTx(tx, reason)` to policy.\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-67772899,67772899,
petertodd,2014-12-21T15:08:16Z,"@jtimon Oh, you mean should #5071 include this pull-req? Sure, but anyway IMO this pull-req makes sense to merge regardless of what we do with policy in a wider sense.\n\nFWIW I keep meaning to making IsStandard() something you can turn off via a command-line flag, as it makes testing software on testnet/regtest annoying due to the differences in behavior.\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-67773139,67773139,
jtimon,2014-12-21T15:53:16Z,"Yes, this PR makes sense independently, just saying that it also makes sense from the policy-encapsulation perspective. \nAbout decoupling policy selection from network (chainparams) selection, in #5180 I proposed to turn `bool CChainParams::RequireStandard()` into `std::string CChainParams::DefaultPolicy()` so that the user selection of policy overwrites the default per-network while remaining ba",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-67774488,67774488,
petertodd,2014-12-21T16:09:13Z,"@jtimon Yup, ACK DefaultPolicy()\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-67774957,67774957,
jtimon,2014-12-27T20:15:06Z,"A few questions:\n\n1) Doesn't the access to `chainActive.Height()` require you to `AssertLockHeld(cs_main)` even though it's going to be checked again in IsFinalTx() ?\n\n2)  After removing that access to chainActive from IsStandardTx(), why does it need to `AssertLockHeld(cs_main)`? Only for fIsBareMultisigStd and minRelayTxFee? Aren't those set only on init?\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68188961,68188961,
jtimon,2014-12-29T15:16:44Z,"To be clear, this is what I'm suggesting: https://github.com/jtimon/bitcoin/commits/5521\nMaybe it is a bad suggestion for some reason I'm missing.\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68265403,68265403,
petertodd,2015-01-03T04:31:26Z,"@jtimon AcceptToMemoryPool has an AssertLockHeld(cs_main); at the beginning of the function, so we don't need another. That said I do think you are correct that IsStandardTx() doesn't need to have cs_main locked anymore.\n\n@sipa @gmaxwell @laanwj Care to confirm this?\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68582967,68582967,
jtimon,2015-01-03T15:17:47Z,"Yeah, the main point is that it is not required in IsStandardTx(), that if it was needed, it was only for the access to activeChain, making the function more independent from main to move it out later.\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68597956,68597956,
gmaxwell,2015-01-04T17:58:23Z,utACK. Just wrote a almost bytewise identical patch (my update to the comment was slightly more minimal).\n\n(Lock can be removed in another patch)\n,https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68641983,68641983,
jtimon,2015-01-04T18:21:29Z,@gmaxwell thoughts on removing AssertLockHeld(cs_main); from IsStandardTx() within this PR?\n,https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68642784,68642784,
gmaxwell,2015-01-04T19:06:10Z,I think it's fine to remove.\n,https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68644448,68644448,
petertodd,2015-01-04T19:22:49Z,@jtimon @gmaxwell Removed.\n,https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68645097,68645097,
jtimon,2015-01-04T22:46:55Z,reACK\n,https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68653121,68653121,
rnicoll,2015-01-05T00:44:57Z, Tested ACK\n,https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-68657435,68657435,
laanwj,2015-01-07T15:27:26Z,"@petertodd I've also checked and indeed, nothing is being done that requires cs_main lock anymore.\n\nACK\n",https://github.com/bitcoin/bitcoin/pull/5521#issuecomment-69037108,69037108,
jtimon,2014-12-29T22:45:34Z,"s/reason/""non-final""\n",https://github.com/bitcoin/bitcoin/pull/5521#discussion_r22332475,22332475,src/main.cpp
petertodd,2015-01-03T04:35:03Z,Thanks!\n,https://github.com/bitcoin/bitcoin/pull/5521#discussion_r22429542,22429542,src/main.cpp
