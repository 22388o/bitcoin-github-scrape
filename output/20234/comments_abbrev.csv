vasild,2020-10-24 19:26:39,"This is a followup to #19991, cc @hebasto ",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-716043291,716043291,
luke-jr,2020-10-24 19:47:32,How does Tor continue to function after this?,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-716045914,716045914,
DrahtBot,2020-10-25 05:25:24,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20196 by vasild\n\nIf you consider this pull request important, please also help to review the conflicting pull requests.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-716096785,716096785,
jonatack,2020-10-28 17:42:19,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718099515,718099515,
laanwj,2020-10-29 11:14:49,"@vasild, like any contributor, is **part of** ""The Bitcoin Core developers""\nThis is not the place for copyright discussion in any case. Please keep the discussion focused on the code change done here.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718676432,718676432,
gmaxwell,2020-10-29 11:28:31,"Unless I am misunderstanding this PR, this will break tor configuration for any user with an explicit bind configuration.  Not binding to localhost is extremely weird, I can't think of any other program I've encountered doing that.\n\nIs there an actual usecase for not binding localhost?\n\nMight it be better to just document that localhost binds are implicit and then, if there is a need for n",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718691565,718691565,
vasild,2020-10-29 12:09:47,"@gmaxwell \n\n> this will break tor configuration for any user with an explicit bind configuration. Not binding to localhost is extremely weird\n\nYou found a bug! Not in this PR, but in 0.20.1:\n\n```\n$ bitcoind --version\nBitcoin Core version v0.20.1.0-36355f128f8b\n\n$ bitcoind -bind=1.1.1.1:8333 -listenonion=1\n...\n2020-10-29T11:51:58Z tor: Got service ID 7hgc4pgtuexasesn, advert",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718711498,718711498,
gmaxwell,2020-10-29 12:32:21,"rpc bind is a separate configuration from 'bind', as is whitebind, perhaps the onion should be its own bind statement (that users normally never touch)",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718722537,718722537,
vasild,2020-10-30 08:23:08,Fixed the test failure on Travis (confirmed on my local fork).,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719404559,719404559,
hebasto,2020-10-30 14:06:16,">  - If only `-bind=addr` is given (without `-bind=...=onion`) then we\n>   would bind to `addr` _and_ to `127.0.0.1:8334` in addition...\n\nOne could _expect_ binding to the default `127.0.0.1:8334` as no `-bind=...=onion` is provided explicitly.\n\n> ... which may\n>   be unexpected assuming the perception of `-bind=addr` is\n>   ""bind _only_ to `addr`"".\n\nIf perception of an option is",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719572616,719572616,
vasild,2020-10-30 14:32:46,"> I understand, that all statements above look like `-bind=...` and `-bind=...=onion` are two independent options. Are they?\n\nI think all 3 of `-bind=...`, `-bind=...=onion` and `-whitebind=` should be considered ""the same"" because all of them control where to listen for P2P connections.\n\nFor example, if `-whitebind=` is present and `-bind=` is not, then we do not bind on `0.0.0.0` anymore",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719587574,719587574,
hebasto,2020-10-30 14:39:09,"> For example, if `-whitebind=` is present and `-bind=` is not, then we do not bind on `0.0.0.0` anymore:\n\nThis behavior seems to need to be properly documented as well :)",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719591261,719591261,
vasild,2020-11-04 11:32:05,"This PR seems to have derailed in direction of documentation, but I think the code needs to be changed.\n\nTake any popular server - Apache, PostgreSQL, MySQL, OpenSSH, Tor, Bitcoin Core 0.20.1 (but not the current `master`). They all listen for some service and if the user explicitly specifies to listen/bind only on a given address:port, they would not listen for that service on other addresses",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-721679202,721679202,
MarcoFalke,2020-11-05 19:07:44,"The 0.21 milestone has been removed for now. And this is not a regression anyway, AFAICT",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-722580280,722580280,
wodry,2020-12-06 08:58:16,"> I understand, that all statements above look like `-bind=...` and `-bind=...=onion` are two independent options. Are they?\n\nIt looks to me that they are.\n\nI find the current `-bind` option documentation with the optional `=onion` suffix rather confusing.\n\nCould it be possible to introduce a new option `-onionbind` (analog to names rpcbind, whitebind) to set the onion bind address exp",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-739474554,739474554,
vasild,2020-12-18 12:49:50,"Rebased due to conflicts.\n\n@wodry what you are suggesting is out of the scope of this PR.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-748067481,748067481,
vasild,2021-01-14 10:46:36,da8e632fb...9580d0605: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-760115399,760115399,
vasild,2021-05-19 11:39:37,`9580d06052...a6b8fc9012`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-844019748,844019748,
jonatack,2021-05-19 11:41:58,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-844021313,844021313,
laanwj,2021-05-25 13:40:26,"The idea for extending the `-bind` syntax, instead of adding `-onionbind` was that not every supported overlay network needs its own set  of options. I think this was a good idea in itself. We already have way too many different bitcoind options.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-847879792,847879792,
achow101,2021-06-14 18:29:08,"ACK a6b8fc90129be2ae78f5d38a537dc64353124439\n\nReviewed code and verified that the test fails on master and passes with this PR.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-860899660,860899660,
laanwj,2021-06-21 06:33:18,Code review ACK a6b8fc90129be2ae78f5d38a537dc64353124439,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-864767076,864767076,
hebasto,2021-07-01 12:27:51,">  - If only `-bind=addr` is given (without `-bind=...=onion`) then bind to\n>       `addr` (only). If we are creating tor hidden service then use `addr`\n>       as target. Same behavior as before #19991.\n\n`-bind=addr` does not mention onion network, but it _does_ change onion-related behavior, i.e., it prevents recognizing of incoming connections that come via Tor.\n\nThis new behavior i",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872204497,872204497,
gruve-p,2021-07-01 14:10:05,ACK https://github.com/bitcoin/bitcoin/pull/20234/commits/a6b8fc90129be2ae78f5d38a537dc64353124439,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872280393,872280393,
vasild,2021-07-01 14:37:06,"@hebasto, that is similar to how it operates with other networks - if the user restricts the binds to only some networks, then all other networks are ditched (affected) wrt listening/binding.\n\nFor example, assume a machine has an IPv4 address `1.2.3.4` and an IPv6 address. By default if no `-bind` is given it would bind to both addresses. If `-bind=1.2.3.4` is given it would _not_ bind on the ",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872301568,872301568,
hebasto,2021-07-01 14:45:30,"> For example, assume a machine has an IPv4 address `1.2.3.4` and an IPv6 address. By default if no `-bind` is given it would bind to both addresses. If `-bind=1.2.3.4` is given it would _not_ bind on the IPv6 address.\n\nRight. But my concerns are not about binding itself, rather about behavior that users might expect -- the distinguishing incoming Tor connections.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872308140,872308140,
jonatack,2021-07-01 15:01:03,"> distinguishing incoming Tor connections\n\nRight, `CNode::m_inbound_onion` and `CNode::ConnectedThroughNetwork()` need to remain pertinent, as the logic is used by the inbound eviction protection and by getpeerinfo, -netinfo, and the GUI peers window.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872319703,872319703,
vasild,2021-07-01 15:05:38,"I see. So it is about judging which expectation to fail:\n\n* Fail the expectation that `-bind=addr` only binds to `addr` (leave this PR unmerged). This might have security implications: if a user specifies `-bind=1.2.3.4:8333` and expects that this is the only listen address:port and sets up his firewall rules according to that expectation. Especially that this was the case before Oct 2020 (see",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872323594,872323594,
vasild,2021-07-02 08:08:36,"@hebasto, what do you think about the second change in this PR? That is - the second item from the PR description: ""* If only `-bind=addr=onion` is given..."". If that is not contentious then maybe it would make sense that I split the PR in two.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872806235,872806235,
hebasto,2021-07-02 08:44:41,"> @hebasto, what do you think about the second change in this PR? That is - the second item from the PR description: ""* If only `-bind=addr=onion` is given..."". If that is not contentious then maybe it would make sense that I split the PR in two.\n\nsgtm",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872829592,872829592,
vasild,2021-07-06 12:12:43,"` a6b8fc9...a004833`: remove the controversial part of this PR (the behavior when `-bind=...` is given without `-bind=...=onion` -- behave as in `master`), take review suggestions",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-874706683,874706683,
vasild,2021-07-06 12:18:27,"> > @hebasto, what do you think about the second change in this PR? That is - the second item from the PR description: ""* If only `-bind=addr=onion` is given..."". If that is not contentious then maybe it would make sense that I split the PR in two.\n> \n> sgtm\n\nDone! Updated PR title and description.",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-874710429,874710429,
Rspigler,2021-07-06 23:59:26,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-875160770,875160770,
vasild,2021-07-07 13:49:02,"`a0048331a1...2feec3ce31`: remove commented tests - they can be resurrected later if needed and contained a typo (thanks, @jonatack for testing even commented out stuff!)",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-875620172,875620172,
laanwj,2021-07-08 14:38:22,Code review ACK 2feec3ce3130961f98ceb030951d0e46d3b9096c,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-876495632,876495632,
jonatack,2021-07-08 14:39:53,utACK 2feec3ce3130961f98ceb030951d0e46d3b9096c per `git diff a004833 2feec3c`,https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-876496762,876496762,
jonatack,2021-07-08 14:45:41,"Note: This PR is tagged for 0.22, but 2 Tor/I2P PRs that should probably be priority for 0.22 but are not tagged are https://github.com/bitcoin/bitcoin/pull/22179 and https://github.com/bitcoin/bitcoin/pull/22211. ",https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-876501146,876501146,
jonatack,2020-10-28 18:25:21,"The report error flag was previously absent for the onion binds, while present for the others. This was added in bb145c9050203, @hebasto WDYT, just an oversight?",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513669709,513669709,src/net.cpp
jonatack,2020-10-28 19:09:46,"This assertion fails for me with errors like\n```\nAssertionError: not(\n{('00000000', 11340), ('7f000001', 16340), ('00000000000000000000000000000000', 11340), ('7f000001', 18445)} ==\n{('00000000', 11340), ('7f000001', 16340), ('7f000001', 18445)})\n```\nThis fixes it, but it's not pretty and might be treating the symptoms more than the problem:\n```diff\n--- a/test/functional/test_frame",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513695973,513695973,test/functional/feature_bind_extra.py
sipa,2020-10-28 21:34:45,"I am not a lawyer, but my understanding is that:\n* The copyright notice here has no legal meaning, and copyright is retained by whoever authored it regardless of what is stated in the file's header.\n* ""Bitcoin Core developers"" is no legal entity, and can't own any copyright. It's just there to indicate ""various contributors over time"" without the need for being specific.\n\nSo there is no pr",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513775322,513775322,test/functional/feature_bind_extra.py
luke-jr,2020-10-29 00:37:19,"This PR is by @vasild. He can legally put any copyright line he wants on code he wrote (IANAL).\n\nAnd again, there is no ""Bitcoin Core developers"" entity. It simply means each author retains his own copyright.",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513842057,513842057,test/functional/feature_bind_extra.py
sipa,2020-10-29 02:02:53,@JabbaDesilijicTiure My comment was purely about the individual files' copyright notices. The project falls under the MIT license as specified in the COPYING file at the root of the repository.,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513875883,513875883,test/functional/feature_bind_extra.py
luke-jr,2020-10-29 04:30:22,@JabbaDesilijicTiure You don't know what you're talking about. Copyright does not depend on any notice at all. There are plenty of places you can learn more - this isn't the place for it.,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513958005,513958005,test/functional/feature_bind_extra.py
fanquake,2020-10-29 10:59:57,@JabbaDesilijicTiure I've removed your comment. This repository is obviously not the place for that.,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514172232,514172232,test/functional/feature_bind_extra.py
vasild,2020-10-30 08:16:40,"Finally I figured out what is going on!\n\n`test_ipv6_local()` tries to connect to `::1` in order to check if the system has IPv6 support.\n\nSome (all?) Travis machines do support IPv6, but `::1` is not configured on the loopback interface (!?). On those machines connecting to `::1` fails with `[Errno 99] Cannot assign requested address`. However it is possible to successfully bind on `::`.\",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514932334,514932334,test/functional/feature_bind_extra.py
vasild,2020-10-30 08:20:36,"Yeah. https://github.com/bitcoin/bitcoin/pull/19991#discussion_r498721063\n\nI think it is reasonable to inform the user that his request couldn't be fulfilled. E.g. if he specifies `-bind=1.2.3.4:8334=onion` and we can't bind on that address and port.",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514934105,514934105,src/net.cpp
hebasto,2020-10-30 13:17:44,"> @hebasto WDYT, just an oversight?\n\nGood catch! I think the `BF_REPORT_ERROR` flag was missed for no reason.",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r515088889,515088889,src/net.cpp
jonatack,2021-06-14 16:06:55,"```suggestion\n# From chainparamsbase.cpp:CreateBaseChainParams(), regtest default port 18444\n```",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651083629,651083629,test/functional/feature_bind_extra.py
jonatack,2021-06-14 16:08:00,"```diff\n     def set_test_params(self):\n+        self.setup_clean_chain = True\n         # Avoid any -bind= on the command line. Force the framework to avoid\n         # adding -bind=127.0.0.1.\n-        self.setup_clean_chain = True\n         self.bind_to_localhost_only = False\n```\n",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651084399,651084399,test/functional/feature_bind_extra.py
jonatack,2021-06-14 16:34:31,"```suggestion\n                [f'-bind=127.0.0.1:{port}'],\n\n```",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651103851,651103851,test/functional/feature_bind_extra.py
jonatack,2021-06-14 16:35:35,"```suggestion\n                [f'-bind=127.0.0.1:{port}=onion'],\n```",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651104573,651104573,test/functional/feature_bind_extra.py
jonatack,2021-06-14 16:37:41,"```suggestion\n                [f'-bind=127.0.0.1:{port}', f'-bind=127.0.0.1:{port + 1}=onion'],\n```",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651106026,651106026,test/functional/feature_bind_extra.py
jonatack,2021-06-14 16:49:44,"`pprint`ing these values shows that they increase on each run of the test, IDK if our test framework should be cleaning them up.",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651114207,651114207,test/functional/feature_bind_extra.py
jonatack,2021-06-14 16:54:59,"```diff\n+        # Set extra_args to:\n+        # [[],\n+        #  ['-bind=127.0.0.1:<port>'],\n+        #  ['-bind=127.0.0.1:<port+1>=onion'],\n+        #  ['-bind=127.0.0.1:<port+2>', '-bind=127.0.0.1:<port+3>=onion']]\n         self.extra_args = list(map(lambda e: e[0], self.expected))\n```\n",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651117933,651117933,test/functional/feature_bind_extra.py
jonatack,2021-06-18 13:50:26,see discussion at https://www.erisian.com.au/bitcoin-core-dev/log-2021-06-18.html#l-200 regarding naming or a comment here,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r654447184,654447184,src/init.cpp
laanwj,2021-06-18 17:50:06,I'm no longer sure a comment or rename is necessary. I do think the interaction with `-listen` is not completely obvious when reading this code.,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r654595301,654595301,src/init.cpp
hebasto,2021-06-29 12:32:06,Are we still able to distinguish incoming connection via Tor from one via clearnet?,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r660569525,660569525,src/init.cpp
vasild,2021-06-29 12:54:28,"In this case - no (only `-bind=addr` is given, without `-bind=...=onion`).",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r660587277,660587277,src/init.cpp
vasild,2021-07-06 12:14:40,"Both ""regtest"" and ""18444"" are redundant with the line that follows: `REGTEST_TOR_TARGET_PORT = 18445`",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499454,664499454,test/functional/feature_bind_extra.py
vasild,2021-07-06 12:15:04,Done,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499731,664499731,test/functional/feature_bind_extra.py
vasild,2021-07-06 12:15:13,Done,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499833,664499833,test/functional/feature_bind_extra.py
vasild,2021-07-06 12:15:21,Done,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499934,664499934,test/functional/feature_bind_extra.py
vasild,2021-07-06 12:15:28,Done,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664500006,664500006,test/functional/feature_bind_extra.py
vasild,2021-07-06 12:16:47,You mean that `actual_without_ipv6` contains more entries on each run of the test? Then the test should fail?,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664500888,664500888,test/functional/feature_bind_extra.py
vasild,2021-07-06 12:17:17,The comment would be prone to becoming outdated.,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664501193,664501193,test/functional/feature_bind_extra.py
vasild,2021-07-06 12:17:48,Removed this code.,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664501651,664501651,src/init.cpp
vasild,2021-07-06 12:38:25,"[Stripping down](https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872829592) this PR I had to remove the `BF_REPORT_ERROR` flag.\n\nIf one runs two bitcoinds with explicit `-bind=...` that do not conflict one may expect that they would start successfully. The functional testing framework expects this! However they both try to bind on the same default onion target `127.0.0.1:8334`, one ",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664515973,664515973,src/net.cpp
jonatack,2021-07-07 08:17:55,"IIRC no, the values in the entries increased. This no longer occurs with the latest push  a0048331a1d2d (and processes and sockstats are stable).",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665149324,665149324,test/functional/feature_bind_extra.py
jonatack,2021-07-07 10:08:58,"Per offline discussion with @vasild:\n\n```suggestion\n        #        [(any_ipv4, p2p_port(2)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n```\n\nand running the commented-out tests requires not having bitcoind -regtest up due to port conflict.\n```\n$ netstat -na | grep 18445\ntcp        0      0 127.0.0.1:18445         0.0.0.0:*               LISTEN \n```\n\nMaybe remove the commen",https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665232888,665232888,test/functional/feature_bind_extra.py
vasild,2021-07-07 13:49:29,Done.,https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665389752,665389752,test/functional/feature_bind_extra.py
