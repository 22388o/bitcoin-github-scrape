[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716043291",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-716043291",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 716043291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjA0MzI5MQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-24T19:26:39Z",
    "updated_at": "2020-10-24T19:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a followup to #19991, cc @hebasto ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716043291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716045914",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-716045914",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 716045914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjA0NTkxNA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-24T19:47:32Z",
    "updated_at": "2020-10-24T19:47:32Z",
    "author_association": "MEMBER",
    "body": "How does Tor continue to function after this?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716045914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716096785",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-716096785",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 716096785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjA5Njc4NQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-25T05:25:24Z",
    "updated_at": "2021-06-24T18:05:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20196 by vasild\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716096785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718099515",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718099515",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 718099515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODA5OTUxNQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-28T17:42:19Z",
    "updated_at": "2020-10-28T17:42:19Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718099515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718676432",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718676432",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 718676432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODY3NjQzMg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T11:14:49Z",
    "updated_at": "2020-10-29T11:14:49Z",
    "author_association": "MEMBER",
    "body": "@vasild, like any contributor, is **part of** \"The Bitcoin Core developers\"\r\nThis is not the place for copyright discussion in any case. Please keep the discussion focused on the code change done here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718676432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718691565",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718691565",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 718691565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODY5MTU2NQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T11:28:31Z",
    "updated_at": "2020-10-29T11:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unless I am misunderstanding this PR, this will break tor configuration for any user with an explicit bind configuration.  Not binding to localhost is extremely weird, I can't think of any other program I've encountered doing that.\r\n\r\nIs there an actual usecase for not binding localhost?\r\n\r\nMight it be better to just document that localhost binds are implicit and then, if there is a need for not binding to localhost, have an argument to specifically disable that?\r\n\r\nIn other words, I think what you're actually pointing to is just a doc bug where the documentation isn't pedantically correct, but where the behaviour is what 99.999% of users would prefer. If so-- change the doc.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718691565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718711498",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718711498",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 718711498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODcxMTQ5OA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T12:09:47Z",
    "updated_at": "2020-10-29T12:09:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gmaxwell \r\n\r\n> this will break tor configuration for any user with an explicit bind configuration. Not binding to localhost is extremely weird\r\n\r\nYou found a bug! Not in this PR, but in 0.20.1:\r\n\r\n```\r\n$ bitcoind --version\r\nBitcoin Core version v0.20.1.0-36355f128f8b\r\n\r\n$ bitcoind -bind=1.1.1.1:8333 -listenonion=1\r\n...\r\n2020-10-29T11:51:58Z tor: Got service ID 7hgc4pgtuexasesn, advertising service 7hgc4pgtuexasesn.onion:8333\r\n...\r\n```\r\n\r\n`bitcoind` tells the Tor daemon to redirect incoming connections to `127.0.0.1:8333`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/v0.20.1/src/torcontrol.cpp#L539\r\n\r\nbut then it does not listen on `127.0.0.1:8333`:\r\n\r\n```\r\n$ sockstat -l |grep bitcoin\r\nvd       bitcoind   95898 6  tcp4   127.0.0.1:8332        *:*\r\nvd       bitcoind   95898 21 tcp4   1.1.1.1:8333          *:*\r\n$ telnet 127.0.0.1 8333\r\nTrying 127.0.0.1...\r\ntelnet: connect to address 127.0.0.1: Connection refused\r\n```\r\n\r\nThat bug was fixed by #19991 by removing the hardcoded `127.0.0.1`.\r\n\r\nWhen only `-bind=` is provided (without `-bind=...=onion`), this PR would keep the same behavior as 0.20.1 as above - it would bind only on `1.1.1.1:8333` as requested. However it would tell the Tor daemon to redirect connections to `1.1.1.1:8333` instead of the bogus `127.0.0.1:8333` - as a side effect of the change from #19991 now we use the proper address instead of hardcoding `127.0.0.1`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718711498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718722537",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718722537",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 718722537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODcyMjUzNw==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T12:32:21Z",
    "updated_at": "2020-10-29T12:32:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "rpc bind is a separate configuration from 'bind', as is whitebind, perhaps the onion should be its own bind statement (that users normally never touch)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718722537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719404559",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719404559",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 719404559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQwNDU1OQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T08:23:08Z",
    "updated_at": "2020-10-30T08:23:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed the test failure on Travis (confirmed on my local fork).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719404559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719572616",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719572616",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 719572616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTU3MjYxNg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T14:06:16Z",
    "updated_at": "2020-10-30T14:06:16Z",
    "author_association": "MEMBER",
    "body": ">  - If only `-bind=addr` is given (without `-bind=...=onion`) then we\r\n>   would bind to `addr` _and_ to `127.0.0.1:8334` in addition...\r\n\r\nOne could _expect_ binding to the default `127.0.0.1:8334` as no `-bind=...=onion` is provided explicitly.\r\n\r\n> ... which may\r\n>   be unexpected assuming the perception of `-bind=addr` is\r\n>   \"bind _only_ to `addr`\".\r\n\r\nIf perception of an option is ambiguous the option docs require improvement, no?\r\n\r\n>  - If only `-bind=addr=onion` is given (without ordinary `-bind=`)\r\n>   then we would bind to `addr` _and_ to `0.0.0.0` in addition.\r\n\r\nAgain, binding to the default `0.0.0.0:8333` is reasonable as no `-bind=...` is provided explicitly.\r\n\r\nI understand, that all statements above look like `-bind=...` and `-bind=...=onion` are two independent options. Are they?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719572616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719587574",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719587574",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 719587574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTU4NzU3NA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T14:32:46Z",
    "updated_at": "2020-10-30T14:44:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I understand, that all statements above look like `-bind=...` and `-bind=...=onion` are two independent options. Are they?\r\n\r\nI think all 3 of `-bind=...`, `-bind=...=onion` and `-whitebind=` should be considered \"the same\" because all of them control where to listen for P2P connections.\r\n\r\nFor example, if `-whitebind=` is present and `-bind=` is not, then we do not bind on `0.0.0.0` anymore:\r\n\r\n```\r\n$ bitcoind -whitebind=1.1.1.1:8888\r\n...\r\n$ sockstat -l |grep bitcoind\r\nvd       bitcoind   46471 6  tcp4   127.0.0.1:8332        *:*\r\nvd       bitcoind   46471 19 tcp4   1.1.1.1:8888          *:*\r\n$\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719587574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719591261",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-719591261",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 719591261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTU5MTI2MQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T14:39:09Z",
    "updated_at": "2020-10-30T14:39:09Z",
    "author_association": "MEMBER",
    "body": "> For example, if `-whitebind=` is present and `-bind=` is not, then we do not bind on `0.0.0.0` anymore:\r\n\r\nThis behavior seems to need to be properly documented as well :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719591261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721679202",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-721679202",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 721679202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTY3OTIwMg==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T11:32:05Z",
    "updated_at": "2020-11-05T08:32:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR seems to have derailed in direction of documentation, but I think the code needs to be changed.\r\n\r\nTake any popular server - Apache, PostgreSQL, MySQL, OpenSSH, Tor, Bitcoin Core 0.20.1 (but not the current `master`). They all listen for some service and if the user explicitly specifies to listen/bind only on a given address:port, they would not listen for that service on other addresses/ports in addition.\r\n\r\nApache, for example has `Listen 80` which binds on `0.0.0.0:80`, but when changed to `Listen 1.1.1.1:80` it would only bind on `1.1.1.1:80`.\r\n\r\nThe current `master` does not abide to the above and even if requested to bind on a specific address:port to listen for P2P, it may bind to `127.0.0.1` or `0.0.0.0` in addition (details are in the OP). IMO this violates [the principle of least surprise](https://en.m.wikipedia.org/wiki/Principle_of_least_astonishment).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721679202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722580280",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-722580280",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 722580280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjU4MDI4MA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-05T19:07:44Z",
    "updated_at": "2020-11-05T19:07:44Z",
    "author_association": "MEMBER",
    "body": "The 0.21 milestone has been removed for now. And this is not a regression anyway, AFAICT",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722580280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739474554",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-739474554",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 739474554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQ3NDU1NA==",
    "user": {
      "login": "wodry",
      "id": 8447873,
      "node_id": "MDQ6VXNlcjg0NDc4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8447873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wodry",
      "html_url": "https://github.com/wodry",
      "followers_url": "https://api.github.com/users/wodry/followers",
      "following_url": "https://api.github.com/users/wodry/following{/other_user}",
      "gists_url": "https://api.github.com/users/wodry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wodry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wodry/subscriptions",
      "organizations_url": "https://api.github.com/users/wodry/orgs",
      "repos_url": "https://api.github.com/users/wodry/repos",
      "events_url": "https://api.github.com/users/wodry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wodry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-06T08:58:16Z",
    "updated_at": "2020-12-07T02:37:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I understand, that all statements above look like `-bind=...` and `-bind=...=onion` are two independent options. Are they?\r\n\r\nIt looks to me that they are.\r\n\r\nI find the current `-bind` option documentation with the optional `=onion` suffix rather confusing.\r\n\r\nCould it be possible to introduce a new option `-onionbind` (analog to names rpcbind, whitebind) to set the onion bind address explicitly and prevent confusing mixing?\r\n\r\nBoth `-bind` and `-onionbind` should be able to be unset (e.g. set to 'none') to explicitly disable them. E.g. if one would only want to \"onion bind\" and not to bind to clearnet at all, one could set `-bind=none`, while for `-onionbind` the default would take effect.\r\n\r\nHere a suggestion of the documentation that could be then, which I think would be clearer:\r\n```\r\n  -bind=<addr>[:<port>]|none\r\n       Bind to given address and always listen on it (default: 0.0.0.0). Use\r\n       [host]:port notation for IPv6.\r\n\r\n  -onionbind=<addr>[:<port>]|none\r\n       Bind onion to given address, always listen on it and tag any incoming\r\n       connections to that address and port as incoming Tor connections.\r\n       (defaults: 127.0.0.1:8334, testnet: 127.0.0.1:18334,\r\n       signet: 127.0.0.1:38334, regtest: 127.0.0.1:18445)\r\n       Use [host]:port notation for IPv6.\r\n\r\n```\r\nUnfortunately, I only now came to know of to the `=onion` suffix introduced in #19991.\r\n\r\nEdit: gmaxwell suggested similar (https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-718722537)\r\n_\"perhaps the onion should be its own bind statement (that users normally never touch)\"_",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739474554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748067481",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-748067481",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 748067481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODA2NzQ4MQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-18T12:49:50Z",
    "updated_at": "2020-12-18T12:49:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased due to conflicts.\r\n\r\n@wodry what you are suggesting is out of the scope of this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748067481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760115399",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-760115399",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 760115399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDExNTM5OQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-14T10:46:36Z",
    "updated_at": "2021-01-14T10:46:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "da8e632fb...9580d0605: rebase due to conflicts",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760115399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844019748",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-844019748",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 844019748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDAxOTc0OA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T11:39:37Z",
    "updated_at": "2021-05-19T11:39:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "`9580d06052...a6b8fc9012`: rebase due to conflicts",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844019748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844021313",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-844021313",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 844021313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDAyMTMxMw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T11:41:58Z",
    "updated_at": "2021-05-19T11:41:58Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844021313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847879792",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-847879792",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 847879792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0Nzg3OTc5Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-25T13:40:26Z",
    "updated_at": "2021-05-25T13:40:47Z",
    "author_association": "MEMBER",
    "body": "The idea for extending the `-bind` syntax, instead of adding `-onionbind` was that not every supported overlay network needs its own set  of options. I think this was a good idea in itself. We already have way too many different bitcoind options.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847879792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860899660",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-860899660",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 860899660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDg5OTY2MA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-14T18:29:08Z",
    "updated_at": "2021-06-14T18:29:08Z",
    "author_association": "MEMBER",
    "body": "ACK a6b8fc90129be2ae78f5d38a537dc64353124439\r\n\r\nReviewed code and verified that the test fails on master and passes with this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860899660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864767076",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-864767076",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 864767076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDc2NzA3Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-21T06:33:18Z",
    "updated_at": "2021-06-21T06:33:18Z",
    "author_association": "MEMBER",
    "body": "Code review ACK a6b8fc90129be2ae78f5d38a537dc64353124439",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864767076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872204497",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872204497",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872204497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjIwNDQ5Nw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T12:27:51Z",
    "updated_at": "2021-07-01T12:27:51Z",
    "author_association": "MEMBER",
    "body": ">  - If only `-bind=addr` is given (without `-bind=...=onion`) then bind to\r\n>       `addr` (only). If we are creating tor hidden service then use `addr`\r\n>       as target. Same behavior as before #19991.\r\n\r\n`-bind=addr` does not mention onion network, but it _does_ change onion-related behavior, i.e., it prevents recognizing of incoming connections that come via Tor.\r\n\r\nThis new behavior is confusing (at least to me), and I don't agree with it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872204497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872280393",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872280393",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872280393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjI4MDM5Mw==",
    "user": {
      "login": "gruve-p",
      "id": 11212268,
      "node_id": "MDQ6VXNlcjExMjEyMjY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11212268?u=908bbd03f97241182a7e108fdca2e048b6bf462d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gruve-p",
      "html_url": "https://github.com/gruve-p",
      "followers_url": "https://api.github.com/users/gruve-p/followers",
      "following_url": "https://api.github.com/users/gruve-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/gruve-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gruve-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gruve-p/subscriptions",
      "organizations_url": "https://api.github.com/users/gruve-p/orgs",
      "repos_url": "https://api.github.com/users/gruve-p/repos",
      "events_url": "https://api.github.com/users/gruve-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gruve-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T14:10:05Z",
    "updated_at": "2021-07-01T14:10:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK https://github.com/bitcoin/bitcoin/pull/20234/commits/a6b8fc90129be2ae78f5d38a537dc64353124439",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872280393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872301568",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872301568",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872301568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjMwMTU2OA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T14:37:06Z",
    "updated_at": "2021-07-01T14:37:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hebasto, that is similar to how it operates with other networks - if the user restricts the binds to only some networks, then all other networks are ditched (affected) wrt listening/binding.\r\n\r\nFor example, assume a machine has an IPv4 address `1.2.3.4` and an IPv6 address. By default if no `-bind` is given it would bind to both addresses. If `-bind=1.2.3.4` is given it would _not_ bind on the IPv6 address. Now this statement:\r\n\r\n\"`-bind=addr` does not mention IPv6, but it does change IPv6-related behavior...\"\r\n\r\nWould this change to `-bind=` description help?\r\n```diff\r\n  -bind=<addr>[:<port>][=onion]\r\n-       Bind to given address...\r\n+       Bind only to given address...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872301568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872308140",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872308140",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872308140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjMwODE0MA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T14:45:30Z",
    "updated_at": "2021-07-01T14:45:30Z",
    "author_association": "MEMBER",
    "body": "> For example, assume a machine has an IPv4 address `1.2.3.4` and an IPv6 address. By default if no `-bind` is given it would bind to both addresses. If `-bind=1.2.3.4` is given it would _not_ bind on the IPv6 address.\r\n\r\nRight. But my concerns are not about binding itself, rather about behavior that users might expect -- the distinguishing incoming Tor connections.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872308140/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872319703",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872319703",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872319703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjMxOTcwMw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T15:01:03Z",
    "updated_at": "2021-07-01T15:01:16Z",
    "author_association": "MEMBER",
    "body": "> distinguishing incoming Tor connections\r\n\r\nRight, `CNode::m_inbound_onion` and `CNode::ConnectedThroughNetwork()` need to remain pertinent, as the logic is used by the inbound eviction protection and by getpeerinfo, -netinfo, and the GUI peers window.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872319703/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872323594",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872323594",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872323594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjMyMzU5NA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T15:05:38Z",
    "updated_at": "2021-07-01T15:05:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see. So it is about judging which expectation to fail:\r\n\r\n* Fail the expectation that `-bind=addr` only binds to `addr` (leave this PR unmerged). This might have security implications: if a user specifies `-bind=1.2.3.4:8333` and expects that this is the only listen address:port and sets up his firewall rules according to that expectation. Especially that this was the case before Oct 2020 (see below).\r\n\r\n* Fail the expectation that we distinguish incoming Tor connections if `-bind=addr` is given (merge this PR). We do that only after #19991 which was merged 9 months ago (in Oct 2020). Btw, in peer eviction we semi-distinguish Tor connections even in that case - we protect localhost peers in addition to Tor ones.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872323594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872806235",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872806235",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872806235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjgwNjIzNQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T08:08:36Z",
    "updated_at": "2021-07-02T08:08:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hebasto, what do you think about the second change in this PR? That is - the second item from the PR description: \"* If only `-bind=addr=onion` is given...\". If that is not contentious then maybe it would make sense that I split the PR in two.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872806235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872829592",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872829592",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 872829592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjgyOTU5Mg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T08:44:41Z",
    "updated_at": "2021-07-02T08:44:41Z",
    "author_association": "MEMBER",
    "body": "> @hebasto, what do you think about the second change in this PR? That is - the second item from the PR description: \"* If only `-bind=addr=onion` is given...\". If that is not contentious then maybe it would make sense that I split the PR in two.\r\n\r\nsgtm",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872829592/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874706683",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-874706683",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 874706683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDcwNjY4Mw==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-06T12:12:43Z",
    "updated_at": "2021-07-06T12:13:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "` a6b8fc9...a004833`: remove the controversial part of this PR (the behavior when `-bind=...` is given without `-bind=...=onion` -- behave as in `master`), take review suggestions",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874706683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874710429",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-874710429",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 874710429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDcxMDQyOQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-06T12:18:27Z",
    "updated_at": "2021-07-06T12:20:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > @hebasto, what do you think about the second change in this PR? That is - the second item from the PR description: \"* If only `-bind=addr=onion` is given...\". If that is not contentious then maybe it would make sense that I split the PR in two.\r\n> \r\n> sgtm\r\n\r\nDone! Updated PR title and description.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874710429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875160770",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-875160770",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 875160770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTE2MDc3MA==",
    "user": {
      "login": "Rspigler",
      "id": 24482484,
      "node_id": "MDQ6VXNlcjI0NDgyNDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24482484?u=7354800fee53a3db4ba3c6aa40de4ea8c3bf58f0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rspigler",
      "html_url": "https://github.com/Rspigler",
      "followers_url": "https://api.github.com/users/Rspigler/followers",
      "following_url": "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
      "organizations_url": "https://api.github.com/users/Rspigler/orgs",
      "repos_url": "https://api.github.com/users/Rspigler/repos",
      "events_url": "https://api.github.com/users/Rspigler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rspigler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-06T23:59:26Z",
    "updated_at": "2021-07-06T23:59:26Z",
    "author_association": "NONE",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875160770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875620172",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-875620172",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 875620172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTYyMDE3Mg==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T13:49:02Z",
    "updated_at": "2021-07-07T13:49:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "`a0048331a1...2feec3ce31`: remove commented tests - they can be resurrected later if needed and contained a typo (thanks, @jonatack for testing even commented out stuff!)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875620172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876495632",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-876495632",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 876495632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjQ5NTYzMg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T14:38:22Z",
    "updated_at": "2021-07-08T14:38:22Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876495632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876496762",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-876496762",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 876496762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjQ5Njc2Mg==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T14:39:53Z",
    "updated_at": "2021-07-08T14:39:53Z",
    "author_association": "MEMBER",
    "body": "utACK 2feec3ce3130961f98ceb030951d0e46d3b9096c per `git diff a004833 2feec3c`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876496762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876501146",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-876501146",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20234",
    "id": 876501146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjUwMTE0Ng==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T14:45:41Z",
    "updated_at": "2021-07-08T14:45:41Z",
    "author_association": "MEMBER",
    "body": "Note: This PR is tagged for 0.22, but 2 Tor/I2P PRs that should probably be priority for 0.22 but are not tagged are https://github.com/bitcoin/bitcoin/pull/22179 and https://github.com/bitcoin/bitcoin/pull/22211. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876501146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513669709",
    "pull_request_review_id": 518965400,
    "id": 513669709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY2OTcwOQ==",
    "diff_hunk": "@@ -2391,30 +2391,25 @@ bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags\n     return true;\n }\n \n-bool CConnman::InitBinds(\n-    const std::vector<CService>& binds,\n-    const std::vector<NetWhitebindPermissions>& whiteBinds,\n-    const std::vector<CService>& onion_binds)\n+bool CConnman::InitBinds(const Options& options)\n {\n     bool fBound = false;\n-    for (const auto& addrBind : binds) {\n+    for (const auto& addrBind : options.vBinds) {\n         fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR), NetPermissionFlags::PF_NONE);\n     }\n-    for (const auto& addrBind : whiteBinds) {\n+    for (const auto& addrBind : options.vWhiteBinds) {\n         fBound |= Bind(addrBind.m_service, (BF_EXPLICIT | BF_REPORT_ERROR), addrBind.m_flags);\n     }\n-    if (binds.empty() && whiteBinds.empty()) {\n+    for (const auto& addr_bind : options.onion_binds) {\n+        fBound |= Bind(addr_bind, BF_EXPLICIT | BF_REPORT_ERROR | BF_DONT_ADVERTISE, NetPermissionFlags::PF_NONE);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The report error flag was previously absent for the onion binds, while present for the others. This was added in bb145c9050203, @hebasto WDYT, just an oversight?",
    "created_at": "2020-10-28T18:25:21Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513669709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513669709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513669709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513669709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2337,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513695973",
    "pull_request_review_id": 518965400,
    "id": 513695973,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NTk3Mw==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+    test_ipv6_local,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        self.have_ipv6 = test_ipv6_local()\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        any_ipv6 = addr_to_hex('::')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+        loopback_ipv6 = addr_to_hex('::1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+        if self.have_ipv6:\n+            self.expected[0][1].append((any_ipv6, p2p_port(0)))\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Add RPC ports to the list of expected ports to bind to for all nodes.\n+        # They are not relevant for this test.\n+        for i in range(len(self.expected)):\n+            self.expected[i][1].append((loopback_ipv4, rpc_port(i)))\n+            if self.have_ipv6:\n+                self.expected[i][1].append((loopback_ipv6, rpc_port(i)))\n+\n+        self.extra_args = list(map(lambda e: e[0], self.expected))\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        for i in range(len(self.expected)):\n+            pid = self.nodes[i].process.pid\n+            assert_equal(set(get_bind_addrs(pid)), set(self.expected[i][1]))",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 114,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This assertion fails for me with errors like\r\n```\r\nAssertionError: not(\r\n{('00000000', 11340), ('7f000001', 16340), ('00000000000000000000000000000000', 11340), ('7f000001', 18445)} ==\r\n{('00000000', 11340), ('7f000001', 16340), ('7f000001', 18445)})\r\n```\r\nThis fixes it, but it's not pretty and might be treating the symptoms more than the problem:\r\n```diff\r\n--- a/test/functional/test_framework/netutil.py\r\n+++ b/test/functional/test_framework/netutil.py\r\n@@ -81,7 +81,10 @@ def get_bind_addrs(pid):\r\n     bind_addrs = []\r\n     for conn in netstat('tcp') + netstat('tcp6'):\r\n         if conn[3] == STATE_LISTEN and conn[4] in inodes:\r\n-            bind_addrs.append(conn[1])\r\n+            if conn[1][0] == '00000000000000000000000000000000':\r\n+                bind_addrs.append(('00000000', conn[1][1]))\r\n+            else:\r\n+                bind_addrs.append(conn[1])\r\n     return bind_addrs\r\n```",
    "created_at": "2020-10-28T19:09:46Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513695973",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513695973"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513695973"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513695973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 114,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513775322",
    "pull_request_review_id": 519102207,
    "id": 513775322,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3NTMyMg==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 2,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am not a lawyer, but my understanding is that:\r\n* The copyright notice here has no legal meaning, and copyright is retained by whoever authored it regardless of what is stated in the file's header.\r\n* \"Bitcoin Core developers\" is no legal entity, and can't own any copyright. It's just there to indicate \"various contributors over time\" without the need for being specific.\r\n\r\nSo there is no problem with using either your own name, or using the collective term - except the latter avoids the need for keeping it up to date as more contributors work on it. Most code I've written for Bitcoin Core is in files with \"Bitcoin Core developers\" notices, FWIW.",
    "created_at": "2020-10-28T21:34:45Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513775322",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513775322"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513775322"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513775322/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 513760171
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513842057",
    "pull_request_review_id": 519222895,
    "id": 513842057,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg0MjA1Nw==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 2,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR is by @vasild. He can legally put any copyright line he wants on code he wrote (IANAL).\r\n\r\nAnd again, there is no \"Bitcoin Core developers\" entity. It simply means each author retains his own copyright.",
    "created_at": "2020-10-29T00:37:19Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513842057",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513842057"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513842057"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513842057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 513760171
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513875883",
    "pull_request_review_id": 519278947,
    "id": 513875883,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg3NTg4Mw==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 2,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@JabbaDesilijicTiure My comment was purely about the individual files' copyright notices. The project falls under the MIT license as specified in the COPYING file at the root of the repository.",
    "created_at": "2020-10-29T02:02:53Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513875883",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513875883"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513875883"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513875883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 513760171
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513958005",
    "pull_request_review_id": 519325406,
    "id": 513958005,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk1ODAwNQ==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 2,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@JabbaDesilijicTiure You don't know what you're talking about. Copyright does not depend on any notice at all. There are plenty of places you can learn more - this isn't the place for it.",
    "created_at": "2020-10-29T04:30:22Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513958005",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513958005"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r513958005"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513958005/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 513760171
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514172232",
    "pull_request_review_id": 519549596,
    "id": 514172232,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE3MjIzMg==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 2,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@JabbaDesilijicTiure I've removed your comment. This repository is obviously not the place for that.",
    "created_at": "2020-10-29T10:59:57Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514172232",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514172232"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514172232"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514172232/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 513760171
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514932334",
    "pull_request_review_id": 520450732,
    "id": 514932334,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkzMjMzNA==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+    test_ipv6_local,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        self.have_ipv6 = test_ipv6_local()\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        any_ipv6 = addr_to_hex('::')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+        loopback_ipv6 = addr_to_hex('::1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+        if self.have_ipv6:\n+            self.expected[0][1].append((any_ipv6, p2p_port(0)))\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Add RPC ports to the list of expected ports to bind to for all nodes.\n+        # They are not relevant for this test.\n+        for i in range(len(self.expected)):\n+            self.expected[i][1].append((loopback_ipv4, rpc_port(i)))\n+            if self.have_ipv6:\n+                self.expected[i][1].append((loopback_ipv6, rpc_port(i)))\n+\n+        self.extra_args = list(map(lambda e: e[0], self.expected))\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        for i in range(len(self.expected)):\n+            pid = self.nodes[i].process.pid\n+            assert_equal(set(get_bind_addrs(pid)), set(self.expected[i][1]))",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 114,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Finally I figured out what is going on!\r\n\r\n`test_ipv6_local()` tries to connect to `::1` in order to check if the system has IPv6 support.\r\n\r\nSome (all?) Travis machines do support IPv6, but `::1` is not configured on the loopback interface (!?). On those machines connecting to `::1` fails with `[Errno 99] Cannot assign requested address`. However it is possible to successfully bind on `::`.\r\n\r\n`bitcoind` tries to bind on `::` and `::1` and the above makes it difficult for the test to set reasonable expectations.\r\n\r\nResolved by ignoring all IPv6 addresses.",
    "created_at": "2020-10-30T08:16:40Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514932334",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514932334"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514932334"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514932334/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 114,
    "side": "RIGHT",
    "in_reply_to_id": 513695973
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514934105",
    "pull_request_review_id": 520452970,
    "id": 514934105,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkzNDEwNQ==",
    "diff_hunk": "@@ -2391,30 +2391,25 @@ bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags\n     return true;\n }\n \n-bool CConnman::InitBinds(\n-    const std::vector<CService>& binds,\n-    const std::vector<NetWhitebindPermissions>& whiteBinds,\n-    const std::vector<CService>& onion_binds)\n+bool CConnman::InitBinds(const Options& options)\n {\n     bool fBound = false;\n-    for (const auto& addrBind : binds) {\n+    for (const auto& addrBind : options.vBinds) {\n         fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR), NetPermissionFlags::PF_NONE);\n     }\n-    for (const auto& addrBind : whiteBinds) {\n+    for (const auto& addrBind : options.vWhiteBinds) {\n         fBound |= Bind(addrBind.m_service, (BF_EXPLICIT | BF_REPORT_ERROR), addrBind.m_flags);\n     }\n-    if (binds.empty() && whiteBinds.empty()) {\n+    for (const auto& addr_bind : options.onion_binds) {\n+        fBound |= Bind(addr_bind, BF_EXPLICIT | BF_REPORT_ERROR | BF_DONT_ADVERTISE, NetPermissionFlags::PF_NONE);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah. https://github.com/bitcoin/bitcoin/pull/19991#discussion_r498721063\r\n\r\nI think it is reasonable to inform the user that his request couldn't be fulfilled. E.g. if he specifies `-bind=1.2.3.4:8334=onion` and we can't bind on that address and port.",
    "created_at": "2020-10-30T08:20:36Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514934105",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514934105"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r514934105"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/514934105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2337,
    "side": "RIGHT",
    "in_reply_to_id": 513669709
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515088889",
    "pull_request_review_id": 520656212,
    "id": 515088889,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4ODg4OQ==",
    "diff_hunk": "@@ -2391,30 +2391,25 @@ bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags\n     return true;\n }\n \n-bool CConnman::InitBinds(\n-    const std::vector<CService>& binds,\n-    const std::vector<NetWhitebindPermissions>& whiteBinds,\n-    const std::vector<CService>& onion_binds)\n+bool CConnman::InitBinds(const Options& options)\n {\n     bool fBound = false;\n-    for (const auto& addrBind : binds) {\n+    for (const auto& addrBind : options.vBinds) {\n         fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR), NetPermissionFlags::PF_NONE);\n     }\n-    for (const auto& addrBind : whiteBinds) {\n+    for (const auto& addrBind : options.vWhiteBinds) {\n         fBound |= Bind(addrBind.m_service, (BF_EXPLICIT | BF_REPORT_ERROR), addrBind.m_flags);\n     }\n-    if (binds.empty() && whiteBinds.empty()) {\n+    for (const auto& addr_bind : options.onion_binds) {\n+        fBound |= Bind(addr_bind, BF_EXPLICIT | BF_REPORT_ERROR | BF_DONT_ADVERTISE, NetPermissionFlags::PF_NONE);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> @hebasto WDYT, just an oversight?\r\n\r\nGood catch! I think the `BF_REPORT_ERROR` flag was missed for no reason.",
    "created_at": "2020-10-30T13:17:44Z",
    "updated_at": "2021-01-14T10:46:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r515088889",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515088889"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r515088889"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515088889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2337,
    "side": "RIGHT",
    "in_reply_to_id": 513669709
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651083629",
    "pull_request_review_id": 683077821,
    "id": 651083629,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTA4MzYyOQ==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 28,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n# From chainparamsbase.cpp:CreateBaseChainParams(), regtest default port 18444\r\n```",
    "created_at": "2021-06-14T16:06:55Z",
    "updated_at": "2021-06-14T17:04:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651083629",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651083629"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651083629"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651083629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651084399",
    "pull_request_review_id": 683077821,
    "id": 651084399,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTA4NDM5OQ==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False",
    "path": "test/functional/feature_bind_extra.py",
    "position": 32,
    "original_position": 36,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```diff\r\n     def set_test_params(self):\r\n+        self.setup_clean_chain = True\r\n         # Avoid any -bind= on the command line. Force the framework to avoid\r\n         # adding -bind=127.0.0.1.\r\n-        self.setup_clean_chain = True\r\n         self.bind_to_localhost_only = False\r\n```\r\n",
    "created_at": "2021-06-14T16:08:00Z",
    "updated_at": "2021-06-14T17:04:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651084399",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651084399"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651084399"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651084399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 32,
    "original_line": 32,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651103851",
    "pull_request_review_id": 683077821,
    "id": 651103851,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTEwMzg1MQ==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 70,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                [f'-bind=127.0.0.1:{port}'],\r\n\r\n```",
    "created_at": "2021-06-14T16:34:31Z",
    "updated_at": "2021-06-14T17:04:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651103851",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651103851"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651103851"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651103851/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 70,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651104573",
    "pull_request_review_id": 683077821,
    "id": 651104573,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTEwNDU3Mw==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 79,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                [f'-bind=127.0.0.1:{port}=onion'],\r\n```",
    "created_at": "2021-06-14T16:35:35Z",
    "updated_at": "2021-06-14T17:04:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651104573",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651104573"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651104573"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651104573/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651106026",
    "pull_request_review_id": 683077821,
    "id": 651106026,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTEwNjAyNg==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 88,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                [f'-bind=127.0.0.1:{port}', f'-bind=127.0.0.1:{port + 1}=onion'],\r\n```",
    "created_at": "2021-06-14T16:37:41Z",
    "updated_at": "2021-06-14T17:04:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651106026",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651106026"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651106026"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651106026/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651114207",
    "pull_request_review_id": 683077821,
    "id": 651114207,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTExNDIwNw==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Add RPC ports to the list of expected ports to bind to for all nodes.\n+        # They are not relevant for this test.\n+        for i in range(len(self.expected)):\n+            self.expected[i][1].append((loopback_ipv4, rpc_port(i)))\n+\n+        self.extra_args = list(map(lambda e: e[0], self.expected))\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        for i in range(len(self.expected)):\n+            pid = self.nodes[i].process.pid\n+            actual = set(get_bind_addrs(pid))\n+            # Remove IPv6 addresses because on some CI environments \"::1\" is not configured\n+            # on the system (so our test_ipv6_local() would return False), but it is\n+            # possible to bind on \"::\". This makes it unpredictable whether to expect\n+            # that bitcoind has bound on \"::1\" (for RPC) and \"::\" (for P2P).\n+            actual_without_ipv6 = set(filter(lambda e: len(e[0]) != 32, actual))",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 110,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`pprint`ing these values shows that they increase on each run of the test, IDK if our test framework should be cleaning them up.",
    "created_at": "2021-06-14T16:49:44Z",
    "updated_at": "2021-06-14T17:04:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651114207",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651114207"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651114207"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651114207/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 110,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651117933",
    "pull_request_review_id": 683077821,
    "id": 651117933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTExNzkzMw==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Add RPC ports to the list of expected ports to bind to for all nodes.\n+        # They are not relevant for this test.\n+        for i in range(len(self.expected)):\n+            self.expected[i][1].append((loopback_ipv4, rpc_port(i)))\n+\n+        self.extra_args = list(map(lambda e: e[0], self.expected))",
    "path": "test/functional/feature_bind_extra.py",
    "position": 72,
    "original_position": 99,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```diff\r\n+        # Set extra_args to:\r\n+        # [[],\r\n+        #  ['-bind=127.0.0.1:<port>'],\r\n+        #  ['-bind=127.0.0.1:<port+1>=onion'],\r\n+        #  ['-bind=127.0.0.1:<port+2>', '-bind=127.0.0.1:<port+3>=onion']]\r\n         self.extra_args = list(map(lambda e: e[0], self.expected))\r\n```\r\n",
    "created_at": "2021-06-14T16:54:59Z",
    "updated_at": "2021-06-14T17:04:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651117933",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651117933"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r651117933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651117933/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654447184",
    "pull_request_review_id": 687431578,
    "id": 654447184,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDQ0NzE4NA==",
    "diff_hunk": "@@ -1721,25 +1721,39 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return InitError(ResolveErrMsg(\"bind\", bind_arg));\n     }\n \n-    if (connOptions.onion_binds.empty()) {\n-        connOptions.onion_binds.push_back(DefaultOnionServiceTarget());\n-    }\n-\n-    if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION)) {\n-        const auto bind_addr = connOptions.onion_binds.front();\n-        if (connOptions.onion_binds.size() > 1) {\n-            InitWarning(strprintf(_(\"More than one onion bind address is provided. Using %s for the automatically created Tor onion service.\"), bind_addr.ToStringIPPort()));\n-        }\n-        StartTorControl(bind_addr);\n-    }\n-\n     for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n         NetWhitebindPermissions whitebind;\n         bilingual_str error;\n         if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n         connOptions.vWhiteBinds.push_back(whitebind);\n     }\n \n+    // If the user did not specify -bind= or -whitebind= then we bind\n+    // on any address - 0.0.0.0 (IPv4) and :: (IPv6).\n+    connOptions.bind_on_any = args.GetArgs(\"-bind\").empty() && args.GetArgs(\"-whitebind\").empty();\n+\n+    CService onion_service_target;\n+    if (!connOptions.onion_binds.empty()) {\n+        onion_service_target = connOptions.onion_binds.front();\n+    } else if (!connOptions.vBinds.empty()) {\n+        onion_service_target = connOptions.vBinds.front();\n+    } else if (!connOptions.vWhiteBinds.empty()) {\n+        onion_service_target = connOptions.vWhiteBinds.front().m_service;\n+    } else {\n+        assert(connOptions.bind_on_any);",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "see discussion at https://www.erisian.com.au/bitcoin-core-dev/log-2021-06-18.html#l-200 regarding naming or a comment here",
    "created_at": "2021-06-18T13:50:26Z",
    "updated_at": "2021-06-18T13:50:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r654447184",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654447184"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r654447184"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654447184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1743,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654595301",
    "pull_request_review_id": 687625171,
    "id": 654595301,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDU5NTMwMQ==",
    "diff_hunk": "@@ -1721,25 +1721,39 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return InitError(ResolveErrMsg(\"bind\", bind_arg));\n     }\n \n-    if (connOptions.onion_binds.empty()) {\n-        connOptions.onion_binds.push_back(DefaultOnionServiceTarget());\n-    }\n-\n-    if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION)) {\n-        const auto bind_addr = connOptions.onion_binds.front();\n-        if (connOptions.onion_binds.size() > 1) {\n-            InitWarning(strprintf(_(\"More than one onion bind address is provided. Using %s for the automatically created Tor onion service.\"), bind_addr.ToStringIPPort()));\n-        }\n-        StartTorControl(bind_addr);\n-    }\n-\n     for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n         NetWhitebindPermissions whitebind;\n         bilingual_str error;\n         if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n         connOptions.vWhiteBinds.push_back(whitebind);\n     }\n \n+    // If the user did not specify -bind= or -whitebind= then we bind\n+    // on any address - 0.0.0.0 (IPv4) and :: (IPv6).\n+    connOptions.bind_on_any = args.GetArgs(\"-bind\").empty() && args.GetArgs(\"-whitebind\").empty();\n+\n+    CService onion_service_target;\n+    if (!connOptions.onion_binds.empty()) {\n+        onion_service_target = connOptions.onion_binds.front();\n+    } else if (!connOptions.vBinds.empty()) {\n+        onion_service_target = connOptions.vBinds.front();\n+    } else if (!connOptions.vWhiteBinds.empty()) {\n+        onion_service_target = connOptions.vWhiteBinds.front().m_service;\n+    } else {\n+        assert(connOptions.bind_on_any);",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm no longer sure a comment or rename is necessary. I do think the interaction with `-listen` is not completely obvious when reading this code.",
    "created_at": "2021-06-18T17:50:06Z",
    "updated_at": "2021-06-18T17:50:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r654595301",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654595301"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r654595301"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654595301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1743,
    "side": "RIGHT",
    "in_reply_to_id": 654447184
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/660569525",
    "pull_request_review_id": 694970426,
    "id": 660569525,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDU2OTUyNQ==",
    "diff_hunk": "@@ -1721,25 +1721,39 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return InitError(ResolveErrMsg(\"bind\", bind_arg));\n     }\n \n-    if (connOptions.onion_binds.empty()) {\n-        connOptions.onion_binds.push_back(DefaultOnionServiceTarget());\n-    }\n-\n-    if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION)) {\n-        const auto bind_addr = connOptions.onion_binds.front();\n-        if (connOptions.onion_binds.size() > 1) {\n-            InitWarning(strprintf(_(\"More than one onion bind address is provided. Using %s for the automatically created Tor onion service.\"), bind_addr.ToStringIPPort()));\n-        }\n-        StartTorControl(bind_addr);\n-    }\n-\n     for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n         NetWhitebindPermissions whitebind;\n         bilingual_str error;\n         if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n         connOptions.vWhiteBinds.push_back(whitebind);\n     }\n \n+    // If the user did not specify -bind= or -whitebind= then we bind\n+    // on any address - 0.0.0.0 (IPv4) and :: (IPv6).\n+    connOptions.bind_on_any = args.GetArgs(\"-bind\").empty() && args.GetArgs(\"-whitebind\").empty();\n+\n+    CService onion_service_target;\n+    if (!connOptions.onion_binds.empty()) {\n+        onion_service_target = connOptions.onion_binds.front();\n+    } else if (!connOptions.vBinds.empty()) {\n+        onion_service_target = connOptions.vBinds.front();",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Are we still able to distinguish incoming connection via Tor from one via clearnet?",
    "created_at": "2021-06-29T12:32:06Z",
    "updated_at": "2021-06-29T12:32:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r660569525",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/660569525"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r660569525"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/660569525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1738,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1739,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/660587277",
    "pull_request_review_id": 694994042,
    "id": 660587277,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MDU4NzI3Nw==",
    "diff_hunk": "@@ -1721,25 +1721,39 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return InitError(ResolveErrMsg(\"bind\", bind_arg));\n     }\n \n-    if (connOptions.onion_binds.empty()) {\n-        connOptions.onion_binds.push_back(DefaultOnionServiceTarget());\n-    }\n-\n-    if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION)) {\n-        const auto bind_addr = connOptions.onion_binds.front();\n-        if (connOptions.onion_binds.size() > 1) {\n-            InitWarning(strprintf(_(\"More than one onion bind address is provided. Using %s for the automatically created Tor onion service.\"), bind_addr.ToStringIPPort()));\n-        }\n-        StartTorControl(bind_addr);\n-    }\n-\n     for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n         NetWhitebindPermissions whitebind;\n         bilingual_str error;\n         if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n         connOptions.vWhiteBinds.push_back(whitebind);\n     }\n \n+    // If the user did not specify -bind= or -whitebind= then we bind\n+    // on any address - 0.0.0.0 (IPv4) and :: (IPv6).\n+    connOptions.bind_on_any = args.GetArgs(\"-bind\").empty() && args.GetArgs(\"-whitebind\").empty();\n+\n+    CService onion_service_target;\n+    if (!connOptions.onion_binds.empty()) {\n+        onion_service_target = connOptions.onion_binds.front();\n+    } else if (!connOptions.vBinds.empty()) {\n+        onion_service_target = connOptions.vBinds.front();",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In this case - no (only `-bind=addr` is given, without `-bind=...=onion`).",
    "created_at": "2021-06-29T12:54:28Z",
    "updated_at": "2021-06-29T12:54:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r660587277",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/660587277"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r660587277"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/660587277/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1738,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1739,
    "side": "RIGHT",
    "in_reply_to_id": 660569525
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499454",
    "pull_request_review_id": 699877957,
    "id": 664499454,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDQ5OTQ1NA==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 28,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Both \"regtest\" and \"18444\" are redundant with the line that follows: `REGTEST_TOR_TARGET_PORT = 18445`",
    "created_at": "2021-07-06T12:14:40Z",
    "updated_at": "2021-07-06T12:14:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499454",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499454"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499454"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 651083629
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499731",
    "pull_request_review_id": 699878337,
    "id": 664499731,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDQ5OTczMQ==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False",
    "path": "test/functional/feature_bind_extra.py",
    "position": 32,
    "original_position": 36,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-06T12:15:04Z",
    "updated_at": "2021-07-06T12:15:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499731",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499731"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499731"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 32,
    "original_line": 32,
    "side": "RIGHT",
    "in_reply_to_id": 651084399
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499833",
    "pull_request_review_id": 699878470,
    "id": 664499833,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDQ5OTgzMw==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 70,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-06T12:15:13Z",
    "updated_at": "2021-07-06T12:15:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499833",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499833"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499833"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 70,
    "side": "RIGHT",
    "in_reply_to_id": 651103851
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499934",
    "pull_request_review_id": 699878597,
    "id": 664499934,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDQ5OTkzNA==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 79,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-06T12:15:21Z",
    "updated_at": "2021-07-06T12:15:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499934",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499934"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664499934"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664499934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 79,
    "side": "RIGHT",
    "in_reply_to_id": 651104573
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664500006",
    "pull_request_review_id": 699878698,
    "id": 664500006,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDUwMDAwNg==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 88,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-06T12:15:28Z",
    "updated_at": "2021-07-06T12:15:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664500006",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664500006"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664500006"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664500006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT",
    "in_reply_to_id": 651106026
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664500888",
    "pull_request_review_id": 699879840,
    "id": 664500888,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDUwMDg4OA==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Add RPC ports to the list of expected ports to bind to for all nodes.\n+        # They are not relevant for this test.\n+        for i in range(len(self.expected)):\n+            self.expected[i][1].append((loopback_ipv4, rpc_port(i)))\n+\n+        self.extra_args = list(map(lambda e: e[0], self.expected))\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        for i in range(len(self.expected)):\n+            pid = self.nodes[i].process.pid\n+            actual = set(get_bind_addrs(pid))\n+            # Remove IPv6 addresses because on some CI environments \"::1\" is not configured\n+            # on the system (so our test_ipv6_local() would return False), but it is\n+            # possible to bind on \"::\". This makes it unpredictable whether to expect\n+            # that bitcoind has bound on \"::1\" (for RPC) and \"::\" (for P2P).\n+            actual_without_ipv6 = set(filter(lambda e: len(e[0]) != 32, actual))",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 110,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You mean that `actual_without_ipv6` contains more entries on each run of the test? Then the test should fail?",
    "created_at": "2021-07-06T12:16:47Z",
    "updated_at": "2021-07-06T12:16:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664500888",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664500888"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664500888"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664500888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 110,
    "side": "RIGHT",
    "in_reply_to_id": 651114207
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664501193",
    "pull_request_review_id": 699880259,
    "id": 664501193,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDUwMTE5Mw==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Add RPC ports to the list of expected ports to bind to for all nodes.\n+        # They are not relevant for this test.\n+        for i in range(len(self.expected)):\n+            self.expected[i][1].append((loopback_ipv4, rpc_port(i)))\n+\n+        self.extra_args = list(map(lambda e: e[0], self.expected))",
    "path": "test/functional/feature_bind_extra.py",
    "position": 72,
    "original_position": 99,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The comment would be prone to becoming outdated.",
    "created_at": "2021-07-06T12:17:17Z",
    "updated_at": "2021-07-06T12:17:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664501193",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664501193"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664501193"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664501193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT",
    "in_reply_to_id": 651117933
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664501651",
    "pull_request_review_id": 699880701,
    "id": 664501651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDUwMTY1MQ==",
    "diff_hunk": "@@ -1721,25 +1721,39 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return InitError(ResolveErrMsg(\"bind\", bind_arg));\n     }\n \n-    if (connOptions.onion_binds.empty()) {\n-        connOptions.onion_binds.push_back(DefaultOnionServiceTarget());\n-    }\n-\n-    if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION)) {\n-        const auto bind_addr = connOptions.onion_binds.front();\n-        if (connOptions.onion_binds.size() > 1) {\n-            InitWarning(strprintf(_(\"More than one onion bind address is provided. Using %s for the automatically created Tor onion service.\"), bind_addr.ToStringIPPort()));\n-        }\n-        StartTorControl(bind_addr);\n-    }\n-\n     for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n         NetWhitebindPermissions whitebind;\n         bilingual_str error;\n         if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n         connOptions.vWhiteBinds.push_back(whitebind);\n     }\n \n+    // If the user did not specify -bind= or -whitebind= then we bind\n+    // on any address - 0.0.0.0 (IPv4) and :: (IPv6).\n+    connOptions.bind_on_any = args.GetArgs(\"-bind\").empty() && args.GetArgs(\"-whitebind\").empty();\n+\n+    CService onion_service_target;\n+    if (!connOptions.onion_binds.empty()) {\n+        onion_service_target = connOptions.onion_binds.front();\n+    } else if (!connOptions.vBinds.empty()) {\n+        onion_service_target = connOptions.vBinds.front();",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed this code.",
    "created_at": "2021-07-06T12:17:48Z",
    "updated_at": "2021-07-06T12:17:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664501651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664501651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664501651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664501651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1738,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1739,
    "side": "RIGHT",
    "in_reply_to_id": 660569525
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664515973",
    "pull_request_review_id": 699899902,
    "id": 664515973,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDUxNTk3Mw==",
    "diff_hunk": "@@ -2391,30 +2391,25 @@ bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags\n     return true;\n }\n \n-bool CConnman::InitBinds(\n-    const std::vector<CService>& binds,\n-    const std::vector<NetWhitebindPermissions>& whiteBinds,\n-    const std::vector<CService>& onion_binds)\n+bool CConnman::InitBinds(const Options& options)\n {\n     bool fBound = false;\n-    for (const auto& addrBind : binds) {\n+    for (const auto& addrBind : options.vBinds) {\n         fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR), NetPermissionFlags::PF_NONE);\n     }\n-    for (const auto& addrBind : whiteBinds) {\n+    for (const auto& addrBind : options.vWhiteBinds) {\n         fBound |= Bind(addrBind.m_service, (BF_EXPLICIT | BF_REPORT_ERROR), addrBind.m_flags);\n     }\n-    if (binds.empty() && whiteBinds.empty()) {\n+    for (const auto& addr_bind : options.onion_binds) {\n+        fBound |= Bind(addr_bind, BF_EXPLICIT | BF_REPORT_ERROR | BF_DONT_ADVERTISE, NetPermissionFlags::PF_NONE);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "db2d6f323836f286f37d4e826c6edcfce6cde29b",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Stripping down](https://github.com/bitcoin/bitcoin/pull/20234#issuecomment-872829592) this PR I had to remove the `BF_REPORT_ERROR` flag.\r\n\r\nIf one runs two bitcoinds with explicit `-bind=...` that do not conflict one may expect that they would start successfully. The functional testing framework expects this! However they both try to bind on the same default onion target `127.0.0.1:8334`, one of them succeeds and the other fails. That failure is muted by the absence of `BF_REPORT_ERROR`. Apparently no test cares whether that bind has failed or not. To observe the problem, in `master`, add `BF_REPORT_ERROR` and run `./test/functional/test_runner.py`, observe random tests failures with errors like \"unable to bind to 127.0.0.1:8334\".\r\n\r\n(the full version of this PR used to fix that and thus the presence of `BF_REPORT_ERROR` did not cause tests to brick)\r\n",
    "created_at": "2021-07-06T12:38:25Z",
    "updated_at": "2021-07-06T12:38:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664515973",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664515973"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r664515973"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664515973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2337,
    "side": "RIGHT",
    "in_reply_to_id": 513669709
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665149324",
    "pull_request_review_id": 700712327,
    "id": 665149324,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTE0OTMyNA==",
    "diff_hunk": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    p2p_port,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.setup_clean_chain = True\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        any_ipv4 = addr_to_hex('0.0.0.0')\n+        loopback_ipv4 = addr_to_hex('127.0.0.1')\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no -bind, expected to bind on any + tor target.\n+        self.expected.append(\n+            [\n+                [],\n+                [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\n+            ]\n+        )\n+\n+        # Node1, no -bind=...=onion, thus no extra port for Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node2, no normal -bind, thus only the Tor target.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}=onion'.format(port)],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node3, both -bind and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                ['-bind=127.0.0.1:{}'.format(port), '-bind=127.0.0.1:{}=onion'.format(port + 1)],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Add RPC ports to the list of expected ports to bind to for all nodes.\n+        # They are not relevant for this test.\n+        for i in range(len(self.expected)):\n+            self.expected[i][1].append((loopback_ipv4, rpc_port(i)))\n+\n+        self.extra_args = list(map(lambda e: e[0], self.expected))\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        for i in range(len(self.expected)):\n+            pid = self.nodes[i].process.pid\n+            actual = set(get_bind_addrs(pid))\n+            # Remove IPv6 addresses because on some CI environments \"::1\" is not configured\n+            # on the system (so our test_ipv6_local() would return False), but it is\n+            # possible to bind on \"::\". This makes it unpredictable whether to expect\n+            # that bitcoind has bound on \"::1\" (for RPC) and \"::\" (for P2P).\n+            actual_without_ipv6 = set(filter(lambda e: len(e[0]) != 32, actual))",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 110,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a6b8fc90129be2ae78f5d38a537dc64353124439",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IIRC no, the values in the entries increased. This no longer occurs with the latest push  a0048331a1d2d (and processes and sockstats are stable).",
    "created_at": "2021-07-07T08:17:55Z",
    "updated_at": "2021-07-07T08:28:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665149324",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665149324"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665149324"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665149324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 110,
    "side": "RIGHT",
    "in_reply_to_id": 651114207
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665232888",
    "pull_request_review_id": 700822717,
    "id": 665232888,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTIzMjg4OA==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 2\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        loopback_ipv4 = addr_to_hex(\"127.0.0.1\")\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no normal -bind=... with -bind=...=onion, thus only the tor target.\n+        self.expected.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}=onion\"],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node1, both -bind=... and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Node2 and Node3 are disabled because binding on the default tor port\n+        # (REGTEST_TOR_TARGET_PORT) is unreliable - it may or may not happen\n+        # because other tests (bitcoinds) that run in parallel may have already\n+        # bound to that and thus we may not succeed. The bind error is muted in\n+        # CConnman::InitBinds() so tests do not fail normally.\n+\n+        #any_ipv4 = addr_to_hex(\"0.0.0.0\")\n+\n+        # Node2, no -bind, expected to bind on any + tor target.\n+        #self.expected.append(\n+        #    [\n+        #        [],\n+        #        [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 87,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a0048331a1d2dda24cbdc7b41041ae00bf46ee7a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Per offline discussion with @vasild:\r\n\r\n```suggestion\r\n        #        [(any_ipv4, p2p_port(2)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]\r\n```\r\n\r\nand running the commented-out tests requires not having bitcoind -regtest up due to port conflict.\r\n```\r\n$ netstat -na | grep 18445\r\ntcp        0      0 127.0.0.1:18445         0.0.0.0:*               LISTEN \r\n```\r\n\r\nMaybe remove the commented-out tests for now.",
    "created_at": "2021-07-07T10:08:58Z",
    "updated_at": "2021-07-07T10:10:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665232888",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665232888"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665232888"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665232888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 87,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665389752",
    "pull_request_review_id": 701031624,
    "id": 665389752,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTM4OTc1Mg==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test starting bitcoind with -bind and/or -bind=...=onion and confirm\n+that bind happens on the expected ports.\n+\"\"\"\n+\n+import sys\n+\n+from test_framework.netutil import (\n+    addr_to_hex,\n+    get_bind_addrs,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+    SkipTest,\n+)\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+    rpc_port,\n+)\n+\n+# From chainparamsbase.cpp:CreateBaseChainParams().\n+REGTEST_TOR_TARGET_PORT = 18445\n+\n+class BindExtraTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        # Avoid any -bind= on the command line. Force the framework to avoid\n+        # adding -bind=127.0.0.1.\n+        self.bind_to_localhost_only = False\n+        self.num_nodes = 2\n+\n+    def setup_network(self):\n+        # Override setup_network() because we want to put the result of\n+        # p2p_port() in self.extra_args[], before the nodes are started.\n+        # p2p_port() is not usable in set_test_params() because PortSeed.n is\n+        # not set at that time.\n+\n+        # Due to OS-specific network stats queries, we only run on Linux.\n+        self.log.info(\"Checking for Linux\")\n+        if not sys.platform.startswith('linux'):\n+            raise SkipTest(\"This test can only be run on Linux.\")\n+\n+        loopback_ipv4 = addr_to_hex(\"127.0.0.1\")\n+\n+        # Start custom ports after p2p and rpc ports.\n+        port = PORT_MIN + 2 * PORT_RANGE\n+\n+        # Array of tuples [command line arguments, expected bind addresses].\n+        self.expected = []\n+\n+        # Node0, no normal -bind=... with -bind=...=onion, thus only the tor target.\n+        self.expected.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}=onion\"],\n+                [(loopback_ipv4, port)]\n+            ],\n+        )\n+        port += 1\n+\n+        # Node1, both -bind=... and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Node2 and Node3 are disabled because binding on the default tor port\n+        # (REGTEST_TOR_TARGET_PORT) is unreliable - it may or may not happen\n+        # because other tests (bitcoinds) that run in parallel may have already\n+        # bound to that and thus we may not succeed. The bind error is muted in\n+        # CConnman::InitBinds() so tests do not fail normally.\n+\n+        #any_ipv4 = addr_to_hex(\"0.0.0.0\")\n+\n+        # Node2, no -bind, expected to bind on any + tor target.\n+        #self.expected.append(\n+        #    [\n+        #        [],\n+        #        [(any_ipv4, p2p_port(0)), (loopback_ipv4, REGTEST_TOR_TARGET_PORT)]",
    "path": "test/functional/feature_bind_extra.py",
    "position": null,
    "original_position": 87,
    "commit_id": "2feec3ce3130961f98ceb030951d0e46d3b9096c",
    "original_commit_id": "a0048331a1d2dda24cbdc7b41041ae00bf46ee7a",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-07T13:49:29Z",
    "updated_at": "2021-07-07T13:49:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665389752",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665389752"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20234#discussion_r665389752"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20234"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665389752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 87,
    "side": "RIGHT",
    "in_reply_to_id": 665232888
  }
]