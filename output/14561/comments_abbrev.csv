promag,2018-10-24T15:21:31Z,I will rebase once base is merged.,https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-432703708,432703708,
promag,2018-10-24T19:26:20Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-432795920,432795920,
promag,2018-10-25T14:02:09Z,@ryanofsky @ken2812221 please review updated version which inlines the function.,https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-433063286,433063286,
laanwj,2018-10-25T14:02:59Z,utACK,https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-433063640,433063640,
promag,2018-10-25T14:35:27Z,Squashed.,https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-433075934,433075934,
laanwj,2018-10-25T14:48:45Z,"> utACK a0daca2 which inlines the lexically relative logic again. I think this is less readable and more fragile than what I suggested, but it's fine if others like this approach.\n\nwe had some discussion about this on IRC. I was fine with having it an utility function, I just believe utility functions need proper error handling and not 'assert', that was my only point that caused @promag to ch",https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-433081014,433081014,
promag,2018-10-25T14:53:32Z,"Honestly I don't want to provide the utility function, it wasn't needed until now, I doubt it will be needed and sadly boost 1.47 doesn't have it. But if needed this can be extracted and unit tested. Until then this is covered by listwalletdir RPC and soon also exposed in the UI.\n\nI'm also happy to follow up with previous @ryanofsky suggestions. I just think that the goal should be to fix boos",https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-433082950,433082950,
kallewoof,2018-10-25T23:28:00Z,Compiles and tests run fine on Debian Jessie PPC (big endian).,https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-433238426,433238426,
laanwj,2018-10-26T11:25:20Z,"> Honestly I don't want to provide the utility function, it wasn't needed until now, I doubt it will be needed \n\nThank you for being clear, that's completely acceptable. \n\nFWIW to me, too, it seems to small of a code unit to have much advantage of clarity of factoring it out. Let's just leave it at this.\n",https://github.com/bitcoin/bitcoin/pull/14561#issuecomment-433376526,433376526,
ryanofsky,2018-10-24T14:00:04Z,"It might be good to pull this logic out into a reusable `fs::path LexicallyRelative(fs::path path, fs::path base)` function. Then later we could replace it with standard [lexically_relative](https://en.cppreference.com/w/cpp/filesystem/path/lexically_normal).",https://github.com/bitcoin/bitcoin/pull/14561#discussion_r227800715,227800715,src/wallet/walletutil.cpp
promag,2018-10-24T14:33:37Z,Done.,https://github.com/bitcoin/bitcoin/pull/14561#discussion_r227815798,227815798,src/wallet/walletutil.cpp
laanwj,2018-10-25T13:07:08Z,I don't like using assert as error handling here,https://github.com/bitcoin/bitcoin/pull/14561#discussion_r228164624,228164624,src/wallet/walletutil.cpp
ryanofsky,2018-10-25T14:16:01Z,"> I don't like using assert as error handling here\n\nI previously suggested an exception instead of aborting (https://github.com/bitcoin/bitcoin/pull/14561#pullrequestreview-167964007), but this isn't runtime error handling. It is checking an assumption the list code is making about the behavior of recursive_directory_iterator. In the new version of this PR that drops the assert, the assumption",https://github.com/bitcoin/bitcoin/pull/14561#discussion_r228191200,228191200,src/wallet/walletutil.cpp
