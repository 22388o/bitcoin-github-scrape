[
  {
    "sha": "9d14e689c86a395c11a530767db4ddf895446ba8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDE0ZTY4OWM4NmEzOTVjMTFhNTMwNzY3ZGI0ZGRmODk1NDQ2YmE4",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-08-28T22:41:46Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-08-28T22:49:51Z"
      },
      "message": "[raw] reject insanely high fees by default in sendrawtransaction\n\nThere have been several incidents where mainnet experimentation with\n raw transactions  resulted in insane fees.  This is hard to prevent\n in the raw transaction api because the inputs may not be known.\n Since sending doesn't work if the inputs aren't known, we can catch\n it there.\n\nThis rejects fees > than 10000 * nMinRelayTxFee or 1 BTC with the\n defaults and can be overridden with a bool at the rpc.",
      "tree": {
        "sha": "b02fee2fa8d600da274cb1871bb7d7e56aad60de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b02fee2fa8d600da274cb1871bb7d7e56aad60de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d14e689c86a395c11a530767db4ddf895446ba8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d14e689c86a395c11a530767db4ddf895446ba8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d14e689c86a395c11a530767db4ddf895446ba8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d14e689c86a395c11a530767db4ddf895446ba8/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb7d0fc12fcfbb2a91e39cb49f2a0873344dbae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb7d0fc12fcfbb2a91e39cb49f2a0873344dbae0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb7d0fc12fcfbb2a91e39cb49f2a0873344dbae0"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 15,
      "deletions": 5
    },
    "files": [
      {
        "sha": "95c0680345791295e1163a5b97f321823e30d55e",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d14e689c86a395c11a530767db4ddf895446ba8/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d14e689c86a395c11a530767db4ddf895446ba8/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=9d14e689c86a395c11a530767db4ddf895446ba8",
        "patch": "@@ -1193,6 +1193,7 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n     if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n     if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n+    if (strMethod == \"sendrawtransaction\"     && n > 1) ConvertTo<bool>(params[1], true);\n     if (strMethod == \"gettxout\"               && n > 1) ConvertTo<boost::int64_t>(params[1]);\n     if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n     if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);"
      },
      {
        "sha": "b21e98413d9d75f88a2de24bd098d9957bc2401c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d14e689c86a395c11a530767db4ddf895446ba8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d14e689c86a395c11a530767db4ddf895446ba8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9d14e689c86a395c11a530767db4ddf895446ba8",
        "patch": "@@ -787,7 +787,7 @@ void CTxMemPool::pruneSpent(const uint256 &hashTx, CCoins &coins)\n }\n \n bool CTxMemPool::accept(CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs)\n+                        bool* pfMissingInputs, bool fRejectInsaneFee)\n {\n     if (pfMissingInputs)\n         *pfMissingInputs = false;\n@@ -921,6 +921,11 @@ bool CTxMemPool::accept(CValidationState &state, const CTransaction &tx, bool fL\n             dFreeCount += nSize;\n         }\n \n+        if (fRejectInsaneFee && nFees > CTransaction::nMinRelayTxFee * 10000)\n+            return error(\"CTxMemPool::accept() : insane fees %s, %\"PRI64d\" > %\"PRI64d,\n+                         hash.ToString().c_str(),\n+                         nFees, CTransaction::nMinRelayTxFee * 10000);\n+\n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n         if (!CheckInputs(tx, state, view, true, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC))"
      },
      {
        "sha": "09e4700fbbd14fd39efce087c67051a3338a3843",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d14e689c86a395c11a530767db4ddf895446ba8/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d14e689c86a395c11a530767db4ddf895446ba8/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=9d14e689c86a395c11a530767db4ddf895446ba8",
        "patch": "@@ -1082,7 +1082,7 @@ class CTxMemPool\n     std::map<uint256, CTransaction> mapTx;\n     std::map<COutPoint, CInPoint> mapNextTx;\n \n-    bool accept(CValidationState &state, const CTransaction &tx, bool fLimitFree, bool* pfMissingInputs);\n+    bool accept(CValidationState &state, const CTransaction &tx, bool fLimitFree, bool* pfMissingInputs, bool fRejectInsaneFee = false);\n     bool addUnchecked(const uint256& hash, const CTransaction &tx);\n     bool remove(const CTransaction &tx, bool fRecursive = false);\n     bool removeConflicts(const CTransaction &tx);"
      },
      {
        "sha": "3359e94cce5f1e899e07f2e8e74cbe53238c49b8",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d14e689c86a395c11a530767db4ddf895446ba8/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d14e689c86a395c11a530767db4ddf895446ba8/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=9d14e689c86a395c11a530767db4ddf895446ba8",
        "patch": "@@ -527,16 +527,20 @@ Value signrawtransaction(const Array& params, bool fHelp)\n \n Value sendrawtransaction(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 1 || params.size() > 1)\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n-            \"sendrawtransaction <hex string>\\n\"\n+            \"sendrawtransaction <hex string> [allowhighfees=false]\\n\"\n             \"Submits raw transaction (serialized, hex-encoded) to local node and network.\");\n \n     // parse hex string from parameter\n     vector<unsigned char> txData(ParseHexV(params[0], \"parameter\"));\n     CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);\n     CTransaction tx;\n \n+    bool fOverrideFees = false;\n+    if (params.size() > 1)\n+        fOverrideFees = params[1].get_bool();\n+\n     // deserialize binary data stream\n     try {\n         ssData >> tx;\n@@ -554,7 +558,7 @@ Value sendrawtransaction(const Array& params, bool fHelp)\n         if (!fHave) {\n             // push to local node\n             CValidationState state;\n-            if (!mempool.accept(state, tx, false, NULL))\n+            if (!mempool.accept(state, tx, false, NULL, !fOverrideFees))\n                 throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX rejected\"); // TODO: report validation state\n         }\n     }"
      }
    ]
  }
]