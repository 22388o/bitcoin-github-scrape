laanwj,2014-09-25T07:07:37Z,"I'd say we need something more RAII-ish here.\n\nEasiest would be to make CBufferedFile take ownership of the FILE\* - ie, close it on destruction, like CAutoFile. This is the only place CBufferedFile is used so there would be no other impact.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56781867,56781867,
Diapolo,2014-09-25T07:25:46Z,"@laanwj You also could have been saying ""Hey, nice catch, but..."" :-P. I agree on your suggestion anyway.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56783220,56783220,
laanwj,2014-09-25T07:29:23Z,"Yes, nice catch that there is a potential leak here!\n\nI just don't think the current solution solves it completely. Other exceptions that are not directly catched will still cause the file not to be closed.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56783552,56783552,
Diapolo,2014-09-25T12:07:22Z,@laanwj Converted to a RAII-style wrapper and removed the manual fclose().\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56809222,56809222,
laanwj,2014-09-25T12:11:06Z,Looks good to me now.\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56809547,56809547,
theuni,2014-09-25T19:55:22Z,"You may want to make a note here that CBufferedFile  is non-refcounted. Not a huge deal since there's only one user of it now, but I suppose that could change. Problem would be (stupid example):\n\n```\nCBufferedFile foo(fd,...);\n{\n    CBufferedFile bar(fd2,...);\n    foo=bar;\n}\nfoo.read(...)\n```\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56874239,56874239,
Diapolo,2014-09-25T20:53:22Z,@theuni Should I place that comment in serialize.h above the class?\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56882215,56882215,
theuni,2014-09-25T21:48:17Z,@Diapolo sounds good. Probably not a bad idea to make the copy ctor and operator= private for good measure.\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56889333,56889333,
theuni,2014-09-25T23:28:52Z,@Diapolo I took a look at CAutoFile and it has the same behavior. See #4986.\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-56900142,56900142,
Diapolo,2014-09-28T13:41:39Z,"Updated to include:\n- update CAutoFile destructor to match CBufferdFile destructor\n- CBufferedFile: make src protected, nType and nVersion private\n- CAutoFile: make nType and nVersion private\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57085823,57085823,
laanwj,2014-09-29T12:59:32Z,That's a lot of red...\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57156437,57156437,
Diapolo,2014-09-29T13:17:31Z,"@laanwj I didn't check the Travis build :-/. It was caused by the now missing CAutoFile::fclose() function, which was called by CAddrDB explicitly. I removed them now as it seemed save to me. We may aswell add a CAutoFile::close() instead to still allow closing a file explicitly.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57158589,57158589,
laanwj,2014-09-29T13:24:38Z,"Well IMO it's fine to have a method to close the file explicitly, but it should be optional, so if the object goes out of scope the file is closed nevertheless.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57159492,57159492,
Diapolo,2014-09-29T14:12:01Z,"Now it's green :). Shall I add an explicit `close()` to CAutoFile and CBufferedFile via this pull? Btw. can you first verify, if the current changes are correct perhaps :-D?\n\nEdit: Since the commits are rather easy to review, I added the `close()` as a fifth commit.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57166277,57166277,
BitcoinPullTester,2014-09-29T19:33:24Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/p4978_d26ef84ff33bc384671bf9b18b0fd2018ec339f2/ for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/p",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57215617,57215617,
Diapolo,2014-10-01T13:28:30Z,"@laanwj Green, finally... wohooo!\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57462594,57462594,
theuni,2014-10-02T00:19:31Z,"Why are the File*'s left protected? Keeping anything protected is just inviting inheritance, which would surely be disastrous for these. I'd make em private.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57561730,57561730,
sipa,2014-10-02T02:04:29Z,Agree with @theuni.\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57570829,57570829,
Diapolo,2014-10-02T08:35:44Z,"@theuni @sipa I changed them back to private for CBufferedFile and also made FILE\* private for CAutoFile. Thanks for your feedback. If I get some ACKs I'll squash the commits to be not 5, but rather 2 I guess.\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57598554,57598554,
Diapolo,2014-10-02T09:03:03Z,@laanwj Squashed into 3 much more logical commits now.\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57601456,57601456,
laanwj,2014-10-02T09:53:26Z,Looks good to me now. utACK.\n,https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57606552,57606552,
theuni,2014-10-02T19:01:47Z,"utACK.\n\nSidenote: the mix of RAII/non-RAII in CAutoFile is really scary. Lots of outside functions rely on them decaying to FILE\* (see FileCommit for a nasty example). That violates the principle of least surprise in a big way, imo.\n\nWould there be much objection to trying to reign that in by slowly extending CAutoFile (or something new) to be more full-featured, and slowly eliminating bare F",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57688226,57688226,
laanwj,2014-10-02T19:20:37Z,"@theuni In principle I agree, but let's not spend too much time here unless there are concrete problems. I suppose we could pretty easily convert it to more C++ish ifstream/ofstream which is RAII by default (instead of inventing Yet Another File Wrapper which a new contributor has to learn). But on the other hand I'm afraid fiddling too much with this code will risk breaking things with no clear g",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57690944,57690944,
Diapolo,2014-10-03T12:17:13Z,"@theuni @laanwj I have a working CAutoFile implementation based on std::fstream in my local build. Remeber, I tried to get this changed once and am willing to just create a new pull at any time :).\n",https://github.com/bitcoin/bitcoin/pull/4978#issuecomment-57787245,57787245,
sipa,2014-09-26T18:38:53Z,ewww\n,https://github.com/bitcoin/bitcoin/pull/4978#discussion_r18106013,18106013,src/serialize.h
Diapolo,2014-09-27T11:33:15Z,@sipa I took that from `CAutoFile` and can't interpret your comment. Should I just directly do this in the destructor?\n\n<pre>\nif (src)\n    fclose(src);\n</pre>\n,https://github.com/bitcoin/bitcoin/pull/4978#discussion_r18123087,18123087,src/serialize.h
laanwj,2014-09-27T14:04:34Z,"Agreed, and I'd say remove it from CAutoFile as well\n",https://github.com/bitcoin/bitcoin/pull/4978#discussion_r18123771,18123771,src/serialize.h
sipa,2014-09-27T17:41:40Z,Agree.\n,https://github.com/bitcoin/bitcoin/pull/4978#discussion_r18124827,18124827,src/serialize.h
laanwj,2014-10-02T07:58:44Z,"Keep this explicit fclose; we do a rename after it, that's a valid reason to want it closed.\n(either that, or make sure it is out of scope)\n",https://github.com/bitcoin/bitcoin/pull/4978#discussion_r18326311,18326311,src/net.cpp
Diapolo,2014-10-02T08:36:08Z,Yeah makes sense.\n,https://github.com/bitcoin/bitcoin/pull/4978#discussion_r18327565,18327565,src/net.cpp
