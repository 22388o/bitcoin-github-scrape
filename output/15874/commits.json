[
  {
    "sha": "fa1c8e297825fbaeda049c8bf36f39de919a9989",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFjOGUyOTc4MjVmYmFlZGEwNDljOGJmMzZmMzlkZTkxOWE5OTg5",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2019-04-23T11:26:06Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2019-04-23T11:26:06Z"
      },
      "message": "Resolve the qt/guiutil <-> qt/optionsmodal CD\n\nThis pull request attempts to resolve the `qt/guiutil` <-> `qt/optionsmodel`\ncircular dependency.\n\nThe circular dependency is resolved by moving the `Intro::getDefaultDataDirectory`\nmember function to `GUIUtil::getDefaultDataDirectory`.",
      "tree": {
        "sha": "3057bb146de690e858fbb24f3bb7821a92f77ceb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3057bb146de690e858fbb24f3bb7821a92f77ceb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1c8e297825fbaeda049c8bf36f39de919a9989",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1c8e297825fbaeda049c8bf36f39de919a9989",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1c8e297825fbaeda049c8bf36f39de919a9989",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1c8e297825fbaeda049c8bf36f39de919a9989/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08bd21a3bda9f621948c535e951880d7e318caa5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08bd21a3bda9f621948c535e951880d7e318caa5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08bd21a3bda9f621948c535e951880d7e318caa5"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 16,
      "deletions": 18
    },
    "files": [
      {
        "sha": "6e76555979518a5ad1668988d1cfd8ee92d44598",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=fa1c8e297825fbaeda049c8bf36f39de919a9989",
        "patch": "@@ -244,6 +244,11 @@ QList<QModelIndex> getEntryData(QAbstractItemView *view, int column)\n     return view->selectionModel()->selectedRows(column);\n }\n \n+QString getDefaultDataDirectory()\n+{\n+    return boostPathToQString(GetDefaultDataDir());\n+}\n+\n QString getSaveFileName(QWidget *parent, const QString &caption, const QString &dir,\n     const QString &filter,\n     QString *selectedSuffixOut)"
      },
      {
        "sha": "bea4a83494b3e9172893a74aee480e6b4d2f575a",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=fa1c8e297825fbaeda049c8bf36f39de919a9989",
        "patch": "@@ -79,6 +79,11 @@ namespace GUIUtil\n \n     void setClipboard(const QString& str);\n \n+    /**\n+     * Determine default data directory for operating system.\n+     */\n+    QString getDefaultDataDirectory();\n+\n     /** Get save filename, mimics QFileDialog::getSaveFileName, except that it appends a default suffix\n         when no suffix is provided by the user.\n "
      },
      {
        "sha": "c595361934c7fc38c6ea3f6c31673d5ecfa11b97",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=fa1c8e297825fbaeda049c8bf36f39de919a9989",
        "patch": "@@ -168,7 +168,7 @@ QString Intro::getDataDirectory()\n void Intro::setDataDirectory(const QString &dataDir)\n {\n     ui->dataDirectory->setText(dataDir);\n-    if(dataDir == getDefaultDataDirectory())\n+    if(dataDir == GUIUtil::getDefaultDataDirectory())\n     {\n         ui->dataDirDefault->setChecked(true);\n         ui->dataDirectory->setEnabled(false);\n@@ -180,11 +180,6 @@ void Intro::setDataDirectory(const QString &dataDir)\n     }\n }\n \n-QString Intro::getDefaultDataDirectory()\n-{\n-    return GUIUtil::boostPathToQString(GetDefaultDataDir());\n-}\n-\n bool Intro::pickDataDirectory(interfaces::Node& node)\n {\n     QSettings settings;\n@@ -193,7 +188,7 @@ bool Intro::pickDataDirectory(interfaces::Node& node)\n     if(!gArgs.GetArg(\"-datadir\", \"\").empty())\n         return true;\n     /* 1) Default data directory for operating system */\n-    QString dataDir = getDefaultDataDirectory();\n+    QString dataDir = GUIUtil::getDefaultDataDirectory();\n     /* 2) Allow QSettings to override default dir */\n     dataDir = settings.value(\"strDataDir\", dataDir).toString();\n \n@@ -239,7 +234,7 @@ bool Intro::pickDataDirectory(interfaces::Node& node)\n      * override -datadir in the bitcoin.conf file in the default data directory\n      * (to be consistent with bitcoind behavior)\n      */\n-    if(dataDir != getDefaultDataDirectory()) {\n+    if(dataDir != GUIUtil::getDefaultDataDirectory()) {\n         node.softSetArg(\"-datadir\", GUIUtil::qstringToBoostPath(dataDir).string()); // use OS locale for path setting\n     }\n     return true;\n@@ -293,7 +288,7 @@ void Intro::on_ellipsisButton_clicked()\n \n void Intro::on_dataDirDefault_clicked()\n {\n-    setDataDirectory(getDefaultDataDirectory());\n+    setDataDirectory(GUIUtil::getDefaultDataDirectory());\n }\n \n void Intro::on_dataDirCustom_clicked()"
      },
      {
        "sha": "c3b26808d41654c37439804adee6d750cc95413e",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=fa1c8e297825fbaeda049c8bf36f39de919a9989",
        "patch": "@@ -48,11 +48,6 @@ class Intro : public QDialog\n      */\n     static bool pickDataDirectory(interfaces::Node& node);\n \n-    /**\n-     * Determine default data directory for operating system.\n-     */\n-    static QString getDefaultDataDirectory();\n-\n Q_SIGNALS:\n     void requestCheck();\n "
      },
      {
        "sha": "5b4fb4cc1873b73aa51f6063e2d84306b006a549",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1c8e297825fbaeda049c8bf36f39de919a9989/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=fa1c8e297825fbaeda049c8bf36f39de919a9989",
        "patch": "@@ -17,7 +17,6 @@\n #include <net.h>\n #include <netbase.h>\n #include <txdb.h> // for -dbcache defaults\n-#include <qt/intro.h>\n \n #include <QNetworkProxy>\n #include <QSettings>\n@@ -110,7 +109,7 @@ void OptionsModel::Init(bool resetSettings)\n         addOverriddenOption(\"-par\");\n \n     if (!settings.contains(\"strDataDir\"))\n-        settings.setValue(\"strDataDir\", Intro::getDefaultDataDirectory());\n+        settings.setValue(\"strDataDir\", GUIUtil::getDefaultDataDirectory());\n \n     // Wallet\n #ifdef ENABLE_WALLET\n@@ -187,7 +186,7 @@ void OptionsModel::Reset()\n     BackupSettings(GetDataDir(true) / \"guisettings.ini.bak\", settings);\n \n     // Save the strDataDir setting\n-    QString dataDir = Intro::getDefaultDataDirectory();\n+    QString dataDir = GUIUtil::getDefaultDataDirectory();\n     dataDir = settings.value(\"strDataDir\", dataDir).toString();\n \n     // Remove all entries from our QSettings object"
      },
      {
        "sha": "e1a99abc49bcb158dc018dae95a33c6a443e8f70",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1c8e297825fbaeda049c8bf36f39de919a9989/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1c8e297825fbaeda049c8bf36f39de919a9989/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=fa1c8e297825fbaeda049c8bf36f39de919a9989",
        "patch": "@@ -36,7 +36,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"txmempool -> validation -> validationinterface -> txmempool\"\n     \"qt/addressbookpage -> qt/bitcoingui -> qt/walletview -> qt/receivecoinsdialog -> qt/addressbookpage\"\n     \"qt/addressbookpage -> qt/bitcoingui -> qt/walletview -> qt/signverifymessagedialog -> qt/addressbookpage\"\n-    \"qt/guiutil -> qt/walletmodel -> qt/optionsmodel -> qt/intro -> qt/guiutil\"\n     \"qt/addressbookpage -> qt/bitcoingui -> qt/walletview -> qt/sendcoinsdialog -> qt/sendcoinsentry -> qt/addressbookpage\"\n )\n "
      }
    ]
  }
]