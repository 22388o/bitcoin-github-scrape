fanquake,2020-05-03 00:11:54,"Looks like this was [pointed out at the time](https://github.com/bitcoin/bitcoin/pull/17219#discussion_r409683229):\n\n> It's not clear to me what this assert is checking for.\n> \n> If `dest` is not empty, we got a change destination and so `scriptChange` is not empty. If dest is empty, then `scriptChange` will be empty. So this just covers all cases and can't fail?\n....\n> I guess it's fi",https://github.com/bitcoin/bitcoin/pull/18853#issuecomment-623032538,623032538,
MarcoFalke,2020-05-03 00:21:57,"At least now the check will fail when the assumption doesn't hold, so it is no longer entirely useless and confusing. I have a slight preference to document this assumption. Either with a `CHECK_NONFATAL`, or a test, or a developer comment, not sure about removing it altogether.",https://github.com/bitcoin/bitcoin/pull/18853#issuecomment-623033405,623033405,
promag,2020-05-03 23:48:24,"Concept ACK, how did you catch this?\n\nCould we also do this?\n```cpp\nCScript GetScriptForDestination(const CTxDestination& dest)\n{\n    CScript script;\n\n    bool result = boost::apply_visitor(CScriptVisitor(&script), dest);\n    assert(result != script.empty());\n    return script;\n}\n```",https://github.com/bitcoin/bitcoin/pull/18853#issuecomment-623203835,623203835,
MarcoFalke,2020-05-03 23:54:27,"> Concept ACK, how did you catch this?\n\nReading the source code and boost documentation ",https://github.com/bitcoin/bitcoin/pull/18853#issuecomment-623204582,623204582,
MarcoFalke,2020-05-04 11:28:24,switched to `IsValidDestination` helper,https://github.com/bitcoin/bitcoin/pull/18853#issuecomment-623408657,623408657,
Sjors,2020-05-04 15:03:00,utACK fa47cf9d95dc2c2822fc96df16f179176935bf96,https://github.com/bitcoin/bitcoin/pull/18853#issuecomment-623517855,623517855,
MarcoFalke,2020-05-04 19:14:50,Open-Close to re-run ci. See https://github.com/bitcoin/bitcoin/issues/15847#issuecomment-487591130,https://github.com/bitcoin/bitcoin/pull/18853#issuecomment-623652457,623652457,
hebasto,2020-05-03 00:30:51,Could the `boost::get()` return value be converted to `bool` explicitly?,https://github.com/bitcoin/bitcoin/pull/18853#discussion_r419026456,419026456,src/wallet/wallet.cpp
MarcoFalke,2020-05-03 12:20:58,"> Could the boost::get() return value be converted to bool explicitly?\n\nYes, for example with the `!!` ""operator"".\n\n```suggestion\n                CHECK_NONFATAL(!!boost::get<CNoDestination>(&dest) == scriptChange.empty());\n```",https://github.com/bitcoin/bitcoin/pull/18853#discussion_r419095784,419095784,src/wallet/wallet.cpp
Sjors,2020-05-04 09:50:46,"Maybe this is more readable:\n```cpp\n// scriptChange must be empty if dest is a dummy CNoDestination\nCHECK_NONFATAL(IsValidDestination(dest) || scriptChange.empty());\n```",https://github.com/bitcoin/bitcoin/pull/18853#discussion_r419324722,419324722,src/wallet/wallet.cpp
MarcoFalke,2020-05-04 11:28:14,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/18853#discussion_r419369634,419369634,src/wallet/wallet.cpp
