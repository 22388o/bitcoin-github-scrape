theuni,2017-02-15T20:34:30Z,"Hmm, I'd expect the sigcache to be bypassed entirely in this case. I suppose this is fine for 0.14, but I think it'd probably be useful to have a SignatureCheckerNoCache to benchmark cache overhead.",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280130568,280130568,
JeremyRubin,2017-02-16T03:04:49Z,"@theuni I'm ambivalent about that approach but I agree that it's likely a better approach (see my comment making the same point (sans solution) in the issue #9759). Ambivalence because more reliance on virtual methods, whereas it might be nice to get rid of the virtual-ness at some point. Running with cache size 0 under this patch means doing some likely unfruitful work every check though so clear",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280217451,280217451,
sipa,2017-02-16T03:06:52Z,"Slightly suboptimal performance with sigcachesize 0 (which is afaik not\nrecommended anywhere) is perfectly acceptable for 0.14, I think - it's not\neven a regression. We can reconsider for 0.15.\n",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280217798,280217798,
laanwj,2017-02-16T09:28:16Z,"I think this is a good pragmatic solution.  What matters here is that it doesn't crash. A user shouldn't set the cache to 0 if the goal is performance.\n~~utACK https://github.com/bitcoin/bitcoin/pull/9770/commits/d72fe44fc1989575ff5de98c882c0010d1de26e7 .~~\nsee below, need decision on what to do with negative values",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280278930,280278930,
laanwj,2017-02-16T09:29:41Z,"BTW: what happens with a negative argument? Will it wrap around and still crash? :)\nedit: bad_alloc, apparently:\n```\n2017-02-16 09:35:27 Using at most 125 automatic connections (1024 file descriptors available)\n2017-02-16 09:35:27 \n\n************************\nEXCEPTION: St9bad_alloc       \nstd::bad_alloc       \nbitcoin in AppInit()       \n\n\n\n************************\nEXCEP",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280279259,280279259,
JeremyRubin,2017-02-16T09:47:19Z,"In #9759 I suggested `setup_bytes(max(0, nMaxCacheSize))` for that reason, but I suppose that's not sufficient either: nMaxCacheSize should be made a signed int of some sort rather than size_t.",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280283544,280283544,
laanwj,2017-02-16T09:48:31Z,"Yeah, `ssize_t` would do the job. Or apply the `std::max()` directly to the GetArg result.\n",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280283802,280283802,
laanwj,2017-02-16T11:19:05Z,"Didn't intend to merge this one yet, sorry.\nAnyhow if we want to cope with the negative amounts, need to do that in a new PR.\n\nEdit: needed to revert anyway - something went wrong with the tooling, the merge was not signed either.",https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280304204,280304204,
fanquake,2017-02-16T12:32:50Z,@jnewbery Can you open a new PR with these changes.,https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280318567,280318567,
jnewbery,2017-02-16T14:19:02Z,@fanquake yes I'll do that today.,https://github.com/bitcoin/bitcoin/pull/9770#issuecomment-280341948,280341948,
