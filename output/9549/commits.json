[
  {
    "sha": "95543d8747cbf7c1945ac36c36031ae40152cf2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTU0M2Q4NzQ3Y2JmN2MxOTQ1YWMzNmMzNjAzMWFlNDAxNTJjZjJm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-02-28T14:49:49Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-02-28T14:49:49Z"
      },
      "message": "[net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(...)\n\nIn the case that the branch ...\n\n    if (itInFlight != mapBlocksInFlight.end() && itInFlight->second.first == nodeid) {\n\n... is taken, there was prior to this commit an implicit assumption that\nMarkBlockAsInFlight(...) was being called with its fifth and optional\nargument (pit) being present (and non-NULL).",
      "tree": {
        "sha": "94044a7d60dcf54024b0a4547d27076838570a8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94044a7d60dcf54024b0a4547d27076838570a8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95543d8747cbf7c1945ac36c36031ae40152cf2f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95543d8747cbf7c1945ac36c36031ae40152cf2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95543d8747cbf7c1945ac36c36031ae40152cf2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95543d8747cbf7c1945ac36c36031ae40152cf2f/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02e5308c1b9f3771bbe49bc5036215fa2bd66aa9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02e5308c1b9f3771bbe49bc5036215fa2bd66aa9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02e5308c1b9f3771bbe49bc5036215fa2bd66aa9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "521dd02ab869b5de0f6ac10e771f87e57f7f032c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95543d8747cbf7c1945ac36c36031ae40152cf2f/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95543d8747cbf7c1945ac36c36031ae40152cf2f/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=95543d8747cbf7c1945ac36c36031ae40152cf2f",
        "patch": "@@ -338,7 +338,9 @@ bool MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const Consensus::Pa\n     // Short-circuit most stuff in case its from the same node\n     map<uint256, pair<NodeId, list<QueuedBlock>::iterator> >::iterator itInFlight = mapBlocksInFlight.find(hash);\n     if (itInFlight != mapBlocksInFlight.end() && itInFlight->second.first == nodeid) {\n-        *pit = &itInFlight->second.second;\n+        if (pit) {\n+            *pit = &itInFlight->second.second;\n+        }\n         return false;\n     }\n "
      }
    ]
  }
]