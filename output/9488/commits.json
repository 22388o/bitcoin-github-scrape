[
  {
    "sha": "53ad9a133a53feb35e31698720cec69c14f56dc1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2FkOWExMzNhNTNmZWIzNWUzMTY5ODcyMGNlYzY5YzE0ZjU2ZGMx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:05Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: fix typo causing the wrong receive buffer size\n\nSurprisingly this hasn't been causing me any issues while testing, probably\nbecause it requires lots of large blocks to be flying around.\n\nSend/Recv corks need tests!",
      "tree": {
        "sha": "4bd8689feeced78e4a8166a7553dda1f361b7662",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4bd8689feeced78e4a8166a7553dda1f361b7662"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53ad9a133a53feb35e31698720cec69c14f56dc1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53ad9a133a53feb35e31698720cec69c14f56dc1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53ad9a133a53feb35e31698720cec69c14f56dc1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53ad9a133a53feb35e31698720cec69c14f56dc1/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e7c7cf011c19e101c81ae4be4fe39bf6260447b8",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53ad9a133a53feb35e31698720cec69c14f56dc1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53ad9a133a53feb35e31698720cec69c14f56dc1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=53ad9a133a53feb35e31698720cec69c14f56dc1",
        "patch": "@@ -2102,7 +2102,7 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     nMaxFeeler = connOptions.nMaxFeeler;\n \n     nSendBufferMaxSize = connOptions.nSendBufferMaxSize;\n-    nReceiveFloodSize = connOptions.nSendBufferMaxSize;\n+    nReceiveFloodSize = connOptions.nReceiveFloodSize;\n \n     nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n     nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;"
      }
    ]
  },
  {
    "sha": "e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWJjZDljODRmZDMxMDczMjFmZjZkYmRlZjA2N2JhMDNmMmI0M2Ni",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:07Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: make vRecvMsg a list so that we can use splice()",
      "tree": {
        "sha": "d13ceab3c2c02ea4a22ec8dc10c5f9d92be0808f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d13ceab3c2c02ea4a22ec8dc10c5f9d92be0808f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53ad9a133a53feb35e31698720cec69c14f56dc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53ad9a133a53feb35e31698720cec69c14f56dc1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53ad9a133a53feb35e31698720cec69c14f56dc1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3478d04a7ef223a62146ee45c7d7c68583ca85b8",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "patch": "@@ -1859,7 +1859,7 @@ void CConnman::ThreadMessageHandler()\n \n                     if (pnode->nSendSize < GetSendBufferSize())\n                     {\n-                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg[0].complete()))\n+                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg.front().complete()))\n                         {\n                             fSleep = false;\n                         }"
      },
      {
        "sha": "f346b07357a1d3580b2a44bd02e89302fff17ace",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "patch": "@@ -605,7 +605,7 @@ class CNode\n     CCriticalSection cs_vSend;\n \n     std::deque<CInv> vRecvGetData;\n-    std::deque<CNetMessage> vRecvMsg;\n+    std::list<CNetMessage> vRecvMsg;\n     CCriticalSection cs_vRecvMsg;\n     uint64_t nRecvBytes;\n     int nRecvVersion;"
      },
      {
        "sha": "f53a4b26364c8cc1538784ec3fe113acba526e3f",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "patch": "@@ -2471,7 +2471,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n     // this maintains the order of responses\n     if (!pfrom->vRecvGetData.empty()) return fOk;\n \n-    std::deque<CNetMessage>::iterator it = pfrom->vRecvMsg.begin();\n+    auto it = pfrom->vRecvMsg.begin();\n     while (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->nSendSize >= nMaxSendBufferSize)"
      }
    ]
  },
  {
    "sha": "5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjRhOGFjNmQ2YjRkOGUxN2I0NDhmMmI0OTI3MDI1ZmIzNTJmN2Fm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:09Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: make GetReceiveFloodSize public\n\nThis will be needed so that the message processor can cork incoming messages",
      "tree": {
        "sha": "604fcf4cf30779e23783c3e57fe19754226af0e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/604fcf4cf30779e23783c3e57fe19754226af0e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a11165c7e37ffbdb3c4c21f2842705c6c4adaee6",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
        "patch": "@@ -324,6 +324,7 @@ class CConnman\n     /** Get a unique deterministic randomizer. */\n     CSipHasher GetDeterministicRandomizer(uint64_t id);\n \n+    unsigned int GetReceiveFloodSize() const;\n private:\n     struct ListenSocket {\n         SOCKET socket;\n@@ -365,8 +366,6 @@ class CConnman\n     void DumpData();\n     void DumpBanlist();\n \n-    unsigned int GetReceiveFloodSize() const;\n-\n     // Network stats\n     void RecordBytesRecv(uint64_t bytes);\n     void RecordBytesSent(uint64_t bytes);"
      }
    ]
  },
  {
    "sha": "f6315e07f9383f3f43e37ada0d6a835810d610b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjMxNWUwN2Y5MzgzZjNmNDNlMzdhZGEwZDZhODM1ODEwZDYxMGI5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:11Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: only disconnect if fDisconnect has been set\n\nThese conditions are problematic to check without locking, and we shouldn't be\nrelying on the refcount to disconnect.",
      "tree": {
        "sha": "86bc02305e6139563197f2bb120172767465bb2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86bc02305e6139563197f2bb120172767465bb2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6315e07f9383f3f43e37ada0d6a835810d610b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "65f1c62ad6f4cee595cde8826f58cd6ac696b5f4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6315e07f9383f3f43e37ada0d6a835810d610b9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6315e07f9383f3f43e37ada0d6a835810d610b9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f6315e07f9383f3f43e37ada0d6a835810d610b9",
        "patch": "@@ -1051,8 +1051,7 @@ void CConnman::ThreadSocketHandler()\n             std::vector<CNode*> vNodesCopy = vNodes;\n             BOOST_FOREACH(CNode* pnode, vNodesCopy)\n             {\n-                if (pnode->fDisconnect ||\n-                    (pnode->GetRefCount() <= 0 && pnode->vRecvMsg.empty() && pnode->nSendSize == 0))\n+                if (pnode->fDisconnect)\n                 {\n                     // remove from vNodes\n                     vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());"
      }
    ]
  },
  {
    "sha": "60425870d78cf2bef1fce926ad53f51166c6a3f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDQyNTg3MGQ3OGNmMmJlZjFmY2U5MjZhZDUzZjUxMTY2YzZhM2Yw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:13Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: wait until the node is destroyed to delete its recv buffer\n\nwhen vRecvMsg becomes a private buffer, it won't make sense to allow other\nthreads to mess with it anymore.",
      "tree": {
        "sha": "6e41ca4685b242752a777bcfc64f49b30cff96d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e41ca4685b242752a777bcfc64f49b30cff96d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60425870d78cf2bef1fce926ad53f51166c6a3f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6315e07f9383f3f43e37ada0d6a835810d610b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6315e07f9383f3f43e37ada0d6a835810d610b9"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 0,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9ce7475bc52e5e68af2b2fe9acf1eda672ccea76",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60425870d78cf2bef1fce926ad53f51166c6a3f0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60425870d78cf2bef1fce926ad53f51166c6a3f0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=60425870d78cf2bef1fce926ad53f51166c6a3f0",
        "patch": "@@ -437,11 +437,6 @@ void CNode::CloseSocketDisconnect()\n         LogPrint(\"net\", \"disconnecting peer=%d\\n\", id);\n         CloseSocket(hSocket);\n     }\n-\n-    // in case this fails, we'll empty the recv buffer when the CNode is deleted\n-    TRY_LOCK(cs_vRecvMsg, lockRecv);\n-    if (lockRecv)\n-        vRecvMsg.clear();\n }\n \n void CConnman::ClearBanned()"
      }
    ]
  },
  {
    "sha": "0e973d970a2114c11f4a95f09721d977da7f0a94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTk3M2Q5NzBhMjExNGMxMWY0YTk1ZjA5NzIxZDk3N2RhN2YwYTk0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:32:29Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: remove redundant max sendbuffer size check\n\nThis is left-over from before there was proper accounting. Hitting 2x the\nsendbuffer size should not be possible.",
      "tree": {
        "sha": "022ac7793bd8263b6ffed1384991931ac5a764d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/022ac7793bd8263b6ffed1384991931ac5a764d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e973d970a2114c11f4a95f09721d977da7f0a94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e973d970a2114c11f4a95f09721d977da7f0a94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e973d970a2114c11f4a95f09721d977da7f0a94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e973d970a2114c11f4a95f09721d977da7f0a94/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60425870d78cf2bef1fce926ad53f51166c6a3f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60425870d78cf2bef1fce926ad53f51166c6a3f0"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 0,
      "deletions": 7
    },
    "files": [
      {
        "sha": "3d38995c50419cf60787e3c59a4077d90b7cc3a1",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e973d970a2114c11f4a95f09721d977da7f0a94/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e973d970a2114c11f4a95f09721d977da7f0a94/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0e973d970a2114c11f4a95f09721d977da7f0a94",
        "patch": "@@ -1059,8 +1059,6 @@ uint32_t GetFetchFlags(CNode* pfrom, CBlockIndex* pprev, const Consensus::Params\n \n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n-    unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n-\n     LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n     if (IsArgSet(\"-dropmessagestest\") && GetRand(GetArg(\"-dropmessagestest\", 0)) == 0)\n     {\n@@ -1413,11 +1411,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n             // Track requests for our stuff\n             GetMainSignals().Inventory(inv.hash);\n-\n-            if (pfrom->nSendSize > (nMaxSendBufferSize * 2)) {\n-                Misbehaving(pfrom->GetId(), 50);\n-                return error(\"send buffer size() = %u\", pfrom->nSendSize);\n-            }\n         }\n \n         if (!vToFetch.empty())"
      }
    ]
  },
  {
    "sha": "56212e20acf1534d443cb910c9bf3a30f84d0f02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjIxMmUyMGFjZjE1MzRkNDQzY2I5MTBjOWJmM2EzMGY4NGQwZjAy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:15Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: set message deserialization version when it's actually time to deserialize\n\nWe'll soon no longer have access to vRecvMsg, and this is more intuitive anyway.",
      "tree": {
        "sha": "5c67422a02655f9c919571ac7f07823fddc35f97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c67422a02655f9c919571ac7f07823fddc35f97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56212e20acf1534d443cb910c9bf3a30f84d0f02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e973d970a2114c11f4a95f09721d977da7f0a94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e973d970a2114c11f4a95f09721d977da7f0a94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e973d970a2114c11f4a95f09721d977da7f0a94"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6d9971a0f1536a01d0775a54d9adb7e53efb5e64",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "patch": "@@ -653,7 +653,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n         // get current incomplete message, or create a new one\n         if (vRecvMsg.empty() ||\n             vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, nRecvVersion));\n+            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n \n         CNetMessage& msg = vRecvMsg.back();\n "
      },
      {
        "sha": "6c12171bf287935f4073350adf9d666dfb62636d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "patch": "@@ -607,7 +607,7 @@ class CNode\n     std::list<CNetMessage> vRecvMsg;\n     CCriticalSection cs_vRecvMsg;\n     uint64_t nRecvBytes;\n-    int nRecvVersion;\n+    std::atomic<int> nRecvVersion;\n \n     int64_t nLastSend;\n     int64_t nLastRecv;\n@@ -747,12 +747,13 @@ class CNode\n     // requires LOCK(cs_vRecvMsg)\n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n \n-    // requires LOCK(cs_vRecvMsg)\n     void SetRecvVersion(int nVersionIn)\n     {\n         nRecvVersion = nVersionIn;\n-        BOOST_FOREACH(CNetMessage &msg, vRecvMsg)\n-            msg.SetVersion(nVersionIn);\n+    }\n+    int GetRecvVersion()\n+    {\n+        return nRecvVersion;\n     }\n     void SetSendVersion(int nVersionIn)\n     {"
      },
      {
        "sha": "556975d1425720d8ff7bd840350d6554aca28245",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "patch": "@@ -2485,6 +2485,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         // at this point, any failure means we can delete the current message\n         it++;\n \n+        msg.SetVersion(pfrom->GetRecvVersion());\n         // Scan for message start\n         if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);"
      }
    ]
  },
  {
    "sha": "cb3456eb3c392cc325a1b2d12329eef8a5a58f84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjM0NTZlYjNjMzkyY2MzMjVhMWIyZDEyMzI5ZWVmOGE1YTU4Zjg0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:17Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: handle message accounting in ReceiveMsgBytes\n\nThis allows locking to be pushed down to only where it's needed\n\nAlso reuse the current time rather than checking multiple times.",
      "tree": {
        "sha": "1ab0e6ddca388494a51657c7bce3a6f50692e0a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ab0e6ddca388494a51657c7bce3a6f50692e0a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb3456eb3c392cc325a1b2d12329eef8a5a58f84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb3456eb3c392cc325a1b2d12329eef8a5a58f84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb3456eb3c392cc325a1b2d12329eef8a5a58f84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb3456eb3c392cc325a1b2d12329eef8a5a58f84/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56212e20acf1534d443cb910c9bf3a30f84d0f02"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "530c831e3d4d0998422c0e7d626df8b0e548250f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb3456eb3c392cc325a1b2d12329eef8a5a58f84/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb3456eb3c392cc325a1b2d12329eef8a5a58f84/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=cb3456eb3c392cc325a1b2d12329eef8a5a58f84",
        "patch": "@@ -648,6 +648,9 @@ void CNode::copyStats(CNodeStats &stats)\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n     complete = false;\n+    int64_t nTime = GetTimeMicros();\n+    nLastRecv = nTime / 1000;\n+    nRecvBytes += nBytes;\n     while (nBytes > 0) {\n \n         // get current incomplete message, or create a new one\n@@ -685,7 +688,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n             assert(i != mapRecvBytesPerMsgCmd.end());\n             i->second += msg.hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n \n-            msg.nTime = GetTimeMicros();\n+            msg.nTime = nTime;\n             complete = true;\n         }\n     }\n@@ -1237,8 +1240,6 @@ void CConnman::ThreadSocketHandler()\n                                 pnode->CloseSocketDisconnect();\n                             if(notify)\n                                 condMsgProc.notify_one();\n-                            pnode->nLastRecv = GetTime();\n-                            pnode->nRecvBytes += nBytes;\n                             RecordBytesRecv(nBytes);\n                         }\n                         else if (nBytes == 0)"
      }
    ]
  },
  {
    "sha": "b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOGY4ZDYxYTY1YTk5OThmZTBkMWNhOWNmMDA3YzRlMWU0NDk5N2Rm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:19Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: record bytes written before notifying the message processor",
      "tree": {
        "sha": "bcd02c8c9ebe59719fd0698b7e7c911775177fbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcd02c8c9ebe59719fd0698b7e7c911775177fbe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb3456eb3c392cc325a1b2d12329eef8a5a58f84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb3456eb3c392cc325a1b2d12329eef8a5a58f84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb3456eb3c392cc325a1b2d12329eef8a5a58f84"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e15f8620dfa956fb4c9847397e17a7a076e09d37",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df",
        "patch": "@@ -1238,9 +1238,9 @@ void CConnman::ThreadSocketHandler()\n                             bool notify = false;\n                             if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                                 pnode->CloseSocketDisconnect();\n+                            RecordBytesRecv(nBytes);\n                             if(notify)\n                                 condMsgProc.notify_one();\n-                            RecordBytesRecv(nBytes);\n                         }\n                         else if (nBytes == 0)\n                         {"
      }
    ]
  },
  {
    "sha": "3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDIzZDlmZTZiNGQ3YjBhZmVhM2M3NTgxNWU3ZDY3ZDdmYTYyMjkz",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:21Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: Add a simple function for waking the message handler\n\nThis may be used publicly in the future",
      "tree": {
        "sha": "fcef11ba5e7a9c4abc3aeb590f1c862ce005cf19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcef11ba5e7a9c4abc3aeb590f1c862ce005cf19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8f8d61a65a9998fe0d1ca9cf007c4e1e44997df"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "368b5b1323e3728f189cfbe3b7a0fcb9fd2f559d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
        "patch": "@@ -1239,8 +1239,8 @@ void CConnman::ThreadSocketHandler()\n                             if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                                 pnode->CloseSocketDisconnect();\n                             RecordBytesRecv(nBytes);\n-                            if(notify)\n-                                condMsgProc.notify_one();\n+                            if (notify)\n+                                WakeMessageHandler();\n                         }\n                         else if (nBytes == 0)\n                         {\n@@ -1315,8 +1315,10 @@ void CConnman::ThreadSocketHandler()\n     }\n }\n \n-\n-\n+void CConnman::WakeMessageHandler()\n+{\n+    condMsgProc.notify_one();\n+}\n \n \n "
      },
      {
        "sha": "cc79cce8521df1277daabb0c0a9b1720b1b3d5dc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
        "patch": "@@ -341,6 +341,8 @@ class CConnman\n     void ThreadSocketHandler();\n     void ThreadDNSAddressSeed();\n \n+    void WakeMessageHandler();\n+\n     uint64_t CalculateKeyedNetGroup(const CAddress& ad);\n \n     CNode* FindNode(const CNetAddr& ip);"
      }
    ]
  },
  {
    "sha": "13234c25af467d71628eb7a253237bfed8347ade",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzIzNGMyNWFmNDY3ZDcxNjI4ZWI3YTI1MzIzN2JmZWQ4MzQ3YWRl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:23Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: remove useless comments",
      "tree": {
        "sha": "7d556c0d2845819facd08786c435bf410a29d4ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d556c0d2845819facd08786c435bf410a29d4ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13234c25af467d71628eb7a253237bfed8347ade",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13234c25af467d71628eb7a253237bfed8347ade",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13234c25af467d71628eb7a253237bfed8347ade",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13234c25af467d71628eb7a253237bfed8347ade/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d23d9fe6b4d7b0afea3c75815e7d67d7fa62293"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "43a97ff71864d5b1bc8c786accf7fce3a1b74af8",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13234c25af467d71628eb7a253237bfed8347ade/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13234c25af467d71628eb7a253237bfed8347ade/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=13234c25af467d71628eb7a253237bfed8347ade",
        "patch": "@@ -2445,9 +2445,6 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n {\n     const CChainParams& chainparams = Params();\n     unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n-    //if (fDebug)\n-    //    LogPrintf(\"%s(%u messages)\\n\", __func__, pfrom->vRecvMsg.size());\n-\n     //\n     // Message format\n     //  (4) message start\n@@ -2473,11 +2470,6 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         // get next message\n         CNetMessage& msg = *it;\n \n-        //if (fDebug)\n-        //    LogPrintf(\"%s(message %u msgsz, %u bytes, complete:%s)\\n\", __func__,\n-        //            msg.hdr.nMessageSize, msg.vRecv.size(),\n-        //            msg.complete() ? \"Y\" : \"N\");\n-\n         // end, if an incomplete message is found\n         if (!msg.complete())\n             break;"
      }
    ]
  },
  {
    "sha": "4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTU3Yzk5Y2Q4MWM1N2RiYzkzNGJlYWRmZGFmMmE0OGE2MTEwYmQw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:26Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: rework the way that the messagehandler sleeps\n\nIn order to sleep accurately, the message handler needs to know if _any_ node\nhas more processing that it should do before the entire thread sleeps.\n\nRather than returning a value that represents whether ProcessMessages\nencountered a message that should trigger a disconnnect, interpret the return\nvalue as whether or not that node has more work to do.\n\nAlso, use a global fProcessSleep value that can be set by other threads,\nwhich takes precedence (for one cycle) over the messagehandler's decision.\n\nNote that the previous behavior was to only process one message per loop\n(except in the case of a bad checksum or invalid header). That was added in\n\nThe only change here in that regard is that the current node now falls to the\nback of the processing queue for the bad checksum/invalid header cases.",
      "tree": {
        "sha": "568009830513724b5a8c771ec16bbf724fa5b198",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/568009830513724b5a8c771ec16bbf724fa5b198"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13234c25af467d71628eb7a253237bfed8347ade",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13234c25af467d71628eb7a253237bfed8347ade",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13234c25af467d71628eb7a253237bfed8347ade"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 37,
      "deletions": 37
    },
    "files": [
      {
        "sha": "05f34d1043d8169f73d70bf23debe0024872ec40",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
        "patch": "@@ -1317,6 +1317,10 @@ void CConnman::ThreadSocketHandler()\n \n void CConnman::WakeMessageHandler()\n {\n+    {\n+        std::lock_guard<std::mutex> lock(mutexMsgProc);\n+        fMsgProcWake = true;\n+    }\n     condMsgProc.notify_one();\n }\n \n@@ -1839,7 +1843,7 @@ void CConnman::ThreadMessageHandler()\n             }\n         }\n \n-        bool fSleep = true;\n+        bool fMoreWork = false;\n \n         BOOST_FOREACH(CNode* pnode, vNodesCopy)\n         {\n@@ -1851,16 +1855,8 @@ void CConnman::ThreadMessageHandler()\n                 TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n                 if (lockRecv)\n                 {\n-                    if (!GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc))\n-                        pnode->CloseSocketDisconnect();\n-\n-                    if (pnode->nSendSize < GetSendBufferSize())\n-                    {\n-                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg.front().complete()))\n-                        {\n-                            fSleep = false;\n-                        }\n-                    }\n+                    bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n+                    fMoreWork |= (fMoreNodeWork && pnode->nSendSize < GetSendBufferSize());\n                 }\n             }\n             if (flagInterruptMsgProc)\n@@ -1882,10 +1878,9 @@ void CConnman::ThreadMessageHandler()\n                 pnode->Release();\n         }\n \n-        if (fSleep) {\n-            std::unique_lock<std::mutex> lock(mutexMsgProc);\n-            condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100));\n-        }\n+        std::unique_lock<std::mutex> lock(mutexMsgProc);\n+        condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100), [this, &fMoreWork] { return fMoreWork || fMsgProcWake; });\n+        fMsgProcWake = false;\n     }\n }\n \n@@ -2156,6 +2151,11 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     interruptNet.reset();\n     flagInterruptMsgProc = false;\n \n+    {\n+        std::unique_lock<std::mutex> lock(mutexMsgProc);\n+        fMsgProcWake = false;\n+    }\n+\n     // Send and receive from sockets, accept connections\n     threadSocketHandler = std::thread(&TraceThread<std::function<void()> >, \"net\", std::function<void()>(std::bind(&CConnman::ThreadSocketHandler, this)));\n "
      },
      {
        "sha": "4fc41bddac602083f73b872101ba0a64f3c78581",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
        "patch": "@@ -424,6 +424,9 @@ class CConnman\n     /** SipHasher seeds for deterministic randomness */\n     const uint64_t nSeed0, nSeed1;\n \n+    /** flag for waking the message processor. */\n+    bool fMsgProcWake;\n+\n     std::condition_variable condMsgProc;\n     std::mutex mutexMsgProc;\n     std::atomic<bool> flagInterruptMsgProc;"
      },
      {
        "sha": "eefb0710761e05d090cdbcf9d9fab9d0b7d6998a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 22,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
        "patch": "@@ -2453,44 +2453,44 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n     //  (4) checksum\n     //  (x) data\n     //\n-    bool fOk = true;\n+    bool fMoreWork = false;\n \n     if (!pfrom->vRecvGetData.empty())\n         ProcessGetData(pfrom, chainparams.GetConsensus(), connman, interruptMsgProc);\n \n     // this maintains the order of responses\n-    if (!pfrom->vRecvGetData.empty()) return fOk;\n+    if (!pfrom->vRecvGetData.empty()) return true;\n \n     auto it = pfrom->vRecvMsg.begin();\n-    while (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n+    if (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->nSendSize >= nMaxSendBufferSize)\n-            break;\n-\n-        // get next message\n-        CNetMessage& msg = *it;\n+            return false;\n \n         // end, if an incomplete message is found\n-        if (!msg.complete())\n-            break;\n+        if (!it->complete())\n+            return false;\n+\n+        // get next message\n+        CNetMessage msg = std::move(*it);\n \n         // at this point, any failure means we can delete the current message\n-        it++;\n+        pfrom->vRecvMsg.erase(pfrom->vRecvMsg.begin());\n \n         msg.SetVersion(pfrom->GetRecvVersion());\n         // Scan for message start\n         if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);\n-            fOk = false;\n-            break;\n+            pfrom->fDisconnect = true;\n+            return false;\n         }\n \n         // Read header\n         CMessageHeader& hdr = msg.hdr;\n         if (!hdr.IsValid(chainparams.MessageStart()))\n         {\n             LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->id);\n-            continue;\n+            return fMoreWork;\n         }\n         string strCommand = hdr.GetCommand();\n \n@@ -2506,7 +2506,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n                SanitizeString(strCommand), nMessageSize,\n                HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n                HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n-            continue;\n+            return fMoreWork;\n         }\n \n         // Process message\n@@ -2515,7 +2515,9 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         {\n             fRet = ProcessMessage(pfrom, strCommand, vRecv, msg.nTime, chainparams, connman, interruptMsgProc);\n             if (interruptMsgProc)\n-                return true;\n+                return false;\n+            if (!pfrom->vRecvGetData.empty())\n+                fMoreWork = true;\n         }\n         catch (const std::ios_base::failure& e)\n         {\n@@ -2548,15 +2550,9 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n \n         if (!fRet)\n             LogPrintf(\"%s(%s, %u bytes) FAILED peer=%d\\n\", __func__, SanitizeString(strCommand), nMessageSize, pfrom->id);\n-\n-        break;\n     }\n \n-    // In case the connection got shut down, its receive buffer was wiped\n-    if (!pfrom->fDisconnect)\n-        pfrom->vRecvMsg.erase(pfrom->vRecvMsg.begin(), it);\n-\n-    return fOk;\n+    return fMoreWork;\n }\n \n class CompareInvMempoolOrder"
      },
      {
        "sha": "1f33def1f7f2f7c6d14b6af7c23127872ada71d7",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4157c99cd81c57dbc934beadfdaf2a48a6110bd0/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
        "patch": "@@ -46,6 +46,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n  * @param[in]   pto             The node which we are sending messages to.\n  * @param[in]   connman         The connection manager for that node.\n  * @param[in]   interrupt       Interrupt condition for processing threads\n+ * @return                      True if there is more work to be done\n  */\n bool SendMessages(CNode* pto, CConnman& connman, std::atomic<bool>& interrupt);\n "
      }
    ]
  },
  {
    "sha": "b5ea4f2199b66fdf2da844b884742b1d97448aab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWVhNGYyMTk5YjY2ZmRmMmRhODQ0Yjg4NDc0MmIxZDk3NDQ4YWFi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:28Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: add a new message queue for the message processor\n\nThis separates the storage of messages from the net and queued messages for\nprocessing, allowing the locks to be split.",
      "tree": {
        "sha": "06bce1776409f7186aade2c837af72bf40316a99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06bce1776409f7186aade2c837af72bf40316a99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ea4f2199b66fdf2da844b884742b1d97448aab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5ea4f2199b66fdf2da844b884742b1d97448aab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ea4f2199b66fdf2da844b884742b1d97448aab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5ea4f2199b66fdf2da844b884742b1d97448aab/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4157c99cd81c57dbc934beadfdaf2a48a6110bd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4157c99cd81c57dbc934beadfdaf2a48a6110bd0"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 27,
      "deletions": 13
    },
    "files": [
      {
        "sha": "dbaec183bed4cf5a4403c0635e55f06ef6000b23",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5ea4f2199b66fdf2da844b884742b1d97448aab/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5ea4f2199b66fdf2da844b884742b1d97448aab/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b5ea4f2199b66fdf2da844b884742b1d97448aab",
        "patch": "@@ -1239,8 +1239,18 @@ void CConnman::ThreadSocketHandler()\n                             if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                                 pnode->CloseSocketDisconnect();\n                             RecordBytesRecv(nBytes);\n-                            if (notify)\n+                            if (notify) {\n+                                auto it(pnode->vRecvMsg.begin());\n+                                for (; it != pnode->vRecvMsg.end(); ++it) {\n+                                    if (!it->complete())\n+                                        break;\n+                                }\n+                                {\n+                                    LOCK(pnode->cs_vProcessMsg);\n+                                    pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                                }\n                                 WakeMessageHandler();\n+                            }\n                         }\n                         else if (nBytes == 0)\n                         {"
      },
      {
        "sha": "21864e73d1ff184b441911be4a94e4dca1e8074b",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5ea4f2199b66fdf2da844b884742b1d97448aab/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5ea4f2199b66fdf2da844b884742b1d97448aab/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b5ea4f2199b66fdf2da844b884742b1d97448aab",
        "patch": "@@ -608,6 +608,9 @@ class CNode\n     std::deque<std::vector<unsigned char>> vSendMsg;\n     CCriticalSection cs_vSend;\n \n+    CCriticalSection cs_vProcessMsg;\n+    std::list<CNetMessage> vProcessMsg;\n+\n     std::deque<CInv> vRecvGetData;\n     std::list<CNetMessage> vRecvMsg;\n     CCriticalSection cs_vRecvMsg;"
      },
      {
        "sha": "77281b39d7a70798a4c4b93a2fb27b513bd4a349",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 12,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5ea4f2199b66fdf2da844b884742b1d97448aab/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5ea4f2199b66fdf2da844b884742b1d97448aab/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b5ea4f2199b66fdf2da844b884742b1d97448aab",
        "patch": "@@ -2461,21 +2461,23 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n     // this maintains the order of responses\n     if (!pfrom->vRecvGetData.empty()) return true;\n \n-    auto it = pfrom->vRecvMsg.begin();\n-    if (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n+    if (pfrom->fDisconnect)\n+        return false;\n+\n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->nSendSize >= nMaxSendBufferSize)\n             return false;\n \n-        // end, if an incomplete message is found\n-        if (!it->complete())\n-            return false;\n-\n-        // get next message\n-        CNetMessage msg = std::move(*it);\n-\n-        // at this point, any failure means we can delete the current message\n-        pfrom->vRecvMsg.erase(pfrom->vRecvMsg.begin());\n+        std::list<CNetMessage> msgs;\n+        {\n+            LOCK(pfrom->cs_vProcessMsg);\n+            if (pfrom->vProcessMsg.empty())\n+                return false;\n+            // Just take one message\n+            msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n+            fMoreWork = !pfrom->vProcessMsg.empty();\n+        }\n+        CNetMessage& msg(msgs.front());\n \n         msg.SetVersion(pfrom->GetRecvVersion());\n         // Scan for message start\n@@ -2550,7 +2552,6 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n \n         if (!fRet)\n             LogPrintf(\"%s(%s, %u bytes) FAILED peer=%d\\n\", __func__, SanitizeString(strCommand), nMessageSize, pfrom->id);\n-    }\n \n     return fMoreWork;\n }"
      }
    ]
  },
  {
    "sha": "a109f7bd1801392bf99994a7165d495200156c4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTA5ZjdiZDE4MDEzOTJiZjk5OTk0YTcxNjVkNDk1MjAwMTU2YzRh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:30Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: add a flag to indicate when a node's process queue is full\n\nMessages are dumped very quickly from the socket handler to the processor, so\nit's the depth of the processing queue that's interesting.\n\nThe socket handler checks the process queue's size during the brief message\nhand-off and pauses if necessary, and the processor possibly unpauses each time\na message is popped off of its queue.",
      "tree": {
        "sha": "5d048ee80added307fc219d040cd6b9cb2b02679",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d048ee80added307fc219d040cd6b9cb2b02679"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a109f7bd1801392bf99994a7165d495200156c4a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a109f7bd1801392bf99994a7165d495200156c4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a109f7bd1801392bf99994a7165d495200156c4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a109f7bd1801392bf99994a7165d495200156c4a/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5ea4f2199b66fdf2da844b884742b1d97448aab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5ea4f2199b66fdf2da844b884742b1d97448aab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ea4f2199b66fdf2da844b884742b1d97448aab"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "b9e965887571151f719b6c4f1ea91a4bf4a749f3",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a109f7bd1801392bf99994a7165d495200156c4a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a109f7bd1801392bf99994a7165d495200156c4a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a109f7bd1801392bf99994a7165d495200156c4a",
        "patch": "@@ -1165,9 +1165,7 @@ void CConnman::ThreadSocketHandler()\n                 }\n                 {\n                     TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                    if (lockRecv && (\n-                        pnode->vRecvMsg.empty() || !pnode->vRecvMsg.front().complete() ||\n-                        pnode->GetTotalRecvSize() <= GetReceiveFloodSize()))\n+                    if (lockRecv && !pnode->fPauseRecv)\n                         FD_SET(pnode->hSocket, &fdsetRecv);\n                 }\n             }\n@@ -1240,14 +1238,17 @@ void CConnman::ThreadSocketHandler()\n                                 pnode->CloseSocketDisconnect();\n                             RecordBytesRecv(nBytes);\n                             if (notify) {\n+                                size_t nSizeAdded = 0;\n                                 auto it(pnode->vRecvMsg.begin());\n                                 for (; it != pnode->vRecvMsg.end(); ++it) {\n                                     if (!it->complete())\n                                         break;\n+                                    nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n                                 }\n                                 {\n                                     LOCK(pnode->cs_vProcessMsg);\n                                     pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                                    pnode->nProcessQueueSize += nSizeAdded;\n                                 }\n                                 WakeMessageHandler();\n                             }\n@@ -2590,6 +2591,8 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     minFeeFilter = 0;\n     lastSentFeeFilter = 0;\n     nextSendTimeFeeFilter = 0;\n+    fPauseRecv = false;\n+    nProcessQueueSize = 0;\n \n     BOOST_FOREACH(const std::string &msg, getAllNetMessageTypes())\n         mapRecvBytesPerMsgCmd[msg] = 0;"
      },
      {
        "sha": "0eb430a8bfcb850772e16388e5f3b71584cf0145",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 9,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a109f7bd1801392bf99994a7165d495200156c4a/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a109f7bd1801392bf99994a7165d495200156c4a/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a109f7bd1801392bf99994a7165d495200156c4a",
        "patch": "@@ -610,6 +610,7 @@ class CNode\n \n     CCriticalSection cs_vProcessMsg;\n     std::list<CNetMessage> vProcessMsg;\n+    size_t nProcessQueueSize;\n \n     std::deque<CInv> vRecvGetData;\n     std::list<CNetMessage> vRecvMsg;\n@@ -650,6 +651,7 @@ class CNode\n     const NodeId id;\n \n     const uint64_t nKeyedNetGroup;\n+    std::atomic_bool fPauseRecv;\n protected:\n \n     mapMsgCmdSize mapSendBytesPerMsgCmd;\n@@ -743,15 +745,6 @@ class CNode\n         return nRefCount;\n     }\n \n-    // requires LOCK(cs_vRecvMsg)\n-    unsigned int GetTotalRecvSize()\n-    {\n-        unsigned int total = 0;\n-        BOOST_FOREACH(const CNetMessage &msg, vRecvMsg)\n-            total += msg.vRecv.size() + 24;\n-        return total;\n-    }\n-\n     // requires LOCK(cs_vRecvMsg)\n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n "
      },
      {
        "sha": "8d784bcfae1c1b4b73d46eae6cfd2056c4457566",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a109f7bd1801392bf99994a7165d495200156c4a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a109f7bd1801392bf99994a7165d495200156c4a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=a109f7bd1801392bf99994a7165d495200156c4a",
        "patch": "@@ -2475,6 +2475,9 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n                 return false;\n             // Just take one message\n             msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n+            pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+            if (pfrom->nProcessQueueSize < connman.GetReceiveFloodSize())\n+                pfrom->fPauseRecv = false;\n             fMoreWork = !pfrom->vProcessMsg.empty();\n         }\n         CNetMessage& msg(msgs.front());"
      }
    ]
  },
  {
    "sha": "e047bde489d7b7fe78147d032c4227ed9f537fa6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDQ3YmRlNDg5ZDdiN2ZlNzgxNDdkMDMyYzQyMjdlZDlmNTM3ZmE2",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:32Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: add a flag to indicate when a node's send buffer is full\n\nSimilar to the recv flag, but this one indicates whether or not the net's send\nbuffer is full.\n\nThe socket handler checks the send queue when a new message is added and pauses\nif necessary, and possibly unpauses after each message is drained from its buffer.",
      "tree": {
        "sha": "f6a650c5b5e2bf84de1b79baaae23f4def831045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6a650c5b5e2bf84de1b79baaae23f4def831045"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e047bde489d7b7fe78147d032c4227ed9f537fa6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e047bde489d7b7fe78147d032c4227ed9f537fa6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e047bde489d7b7fe78147d032c4227ed9f537fa6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e047bde489d7b7fe78147d032c4227ed9f537fa6/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a109f7bd1801392bf99994a7165d495200156c4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a109f7bd1801392bf99994a7165d495200156c4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a109f7bd1801392bf99994a7165d495200156c4a"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 11,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c12c17b816f2390022f19b5e4851e6bca61f3922",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e047bde489d7b7fe78147d032c4227ed9f537fa6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e047bde489d7b7fe78147d032c4227ed9f537fa6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e047bde489d7b7fe78147d032c4227ed9f537fa6",
        "patch": "@@ -1285,8 +1285,11 @@ void CConnman::ThreadSocketHandler()\n                 TRY_LOCK(pnode->cs_vSend, lockSend);\n                 if (lockSend) {\n                     size_t nBytes = SocketSendData(pnode);\n-                    if (nBytes)\n+                    if (nBytes) {\n                         RecordBytesSent(nBytes);\n+                        if (pnode->fPauseSend && pnode->nSendSize < nSendBufferMaxSize)\n+                            pnode->fPauseSend = false;\n+                    }\n                 }\n             }\n \n@@ -1867,7 +1870,7 @@ void CConnman::ThreadMessageHandler()\n                 if (lockRecv)\n                 {\n                     bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n-                    fMoreWork |= (fMoreNodeWork && pnode->nSendSize < GetSendBufferSize());\n+                    fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n                 }\n             }\n             if (flagInterruptMsgProc)\n@@ -2592,6 +2595,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     lastSentFeeFilter = 0;\n     nextSendTimeFeeFilter = 0;\n     fPauseRecv = false;\n+    fPauseSend = false;\n     nProcessQueueSize = 0;\n \n     BOOST_FOREACH(const std::string &msg, getAllNetMessageTypes())\n@@ -2672,6 +2676,8 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n         pnode->mapSendBytesPerMsgCmd[msg.command] += nTotalSize;\n         pnode->nSendSize += nTotalSize;\n \n+        if (pnode->nSendSize > nSendBufferMaxSize)\n+            pnode->fPauseSend = true;\n         pnode->vSendMsg.push_back(std::move(serializedHeader));\n         if (nMessageSize)\n             pnode->vSendMsg.push_back(std::move(msg.data));"
      },
      {
        "sha": "4fe4471cf946072402acf68e52e2f3115cc81416",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e047bde489d7b7fe78147d032c4227ed9f537fa6/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e047bde489d7b7fe78147d032c4227ed9f537fa6/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=e047bde489d7b7fe78147d032c4227ed9f537fa6",
        "patch": "@@ -652,6 +652,7 @@ class CNode\n \n     const uint64_t nKeyedNetGroup;\n     std::atomic_bool fPauseRecv;\n+    std::atomic_bool fPauseSend;\n protected:\n \n     mapMsgCmdSize mapSendBytesPerMsgCmd;"
      },
      {
        "sha": "cf8bd60809edad3795eac78fdfd307bec084348d",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e047bde489d7b7fe78147d032c4227ed9f537fa6/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e047bde489d7b7fe78147d032c4227ed9f537fa6/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e047bde489d7b7fe78147d032c4227ed9f537fa6",
        "patch": "@@ -889,14 +889,13 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman& connma\n void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParams, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n     std::deque<CInv>::iterator it = pfrom->vRecvGetData.begin();\n-    unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n     vector<CInv> vNotFound;\n     CNetMsgMaker msgMaker(pfrom->GetSendVersion());\n     LOCK(cs_main);\n \n     while (it != pfrom->vRecvGetData.end()) {\n         // Don't bother if send buffer is too full to respond anyway\n-        if (pfrom->nSendSize >= nMaxSendBufferSize)\n+        if (pfrom->fPauseSend)\n             break;\n \n         const CInv &inv = *it;\n@@ -2444,7 +2443,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n     const CChainParams& chainparams = Params();\n-    unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n     //\n     // Message format\n     //  (4) message start\n@@ -2465,7 +2463,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         return false;\n \n         // Don't bother if send buffer is too full to respond anyway\n-        if (pfrom->nSendSize >= nMaxSendBufferSize)\n+        if (pfrom->fPauseSend)\n             return false;\n \n         std::list<CNetMessage> msgs;"
      }
    ]
  },
  {
    "sha": "90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MGJmZWIwYzJlNGIxMWRhMjVjMjVmYjYzZjcwZTQwOWMzMzYxZWMw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:34Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: split the message queueing into its own function\n\nThis is representative of how messages will be sent out once processing is\nabstracted out. Makes it clear that the processor _must_ accept all messages.\n\nIt also pushes the use of cs_vProcessMsg to a function with narrow scope.",
      "tree": {
        "sha": "9ef70e0497da98b04b8f3208a63c710fff22f086",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ef70e0497da98b04b8f3208a63c710fff22f086"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e047bde489d7b7fe78147d032c4227ed9f537fa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e047bde489d7b7fe78147d032c4227ed9f537fa6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e047bde489d7b7fe78147d032c4227ed9f537fa6"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 19,
      "deletions": 6
    },
    "files": [
      {
        "sha": "2feb8b018399cfa1d0e8038551fda1cc2fcff614",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 6,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
        "patch": "@@ -1239,18 +1239,16 @@ void CConnman::ThreadSocketHandler()\n                             RecordBytesRecv(nBytes);\n                             if (notify) {\n                                 size_t nSizeAdded = 0;\n+                                std::list<CNetMessage> completeMessages;\n                                 auto it(pnode->vRecvMsg.begin());\n                                 for (; it != pnode->vRecvMsg.end(); ++it) {\n                                     if (!it->complete())\n                                         break;\n                                     nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n                                 }\n-                                {\n-                                    LOCK(pnode->cs_vProcessMsg);\n-                                    pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n-                                    pnode->nProcessQueueSize += nSizeAdded;\n-                                }\n-                                WakeMessageHandler();\n+                                completeMessages.splice(completeMessages.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                                if (!QueueReceivedMessages(pnode, std::move(completeMessages), nSizeAdded))\n+                                    pnode->fPauseRecv = true;\n                             }\n                         }\n                         else if (nBytes == 0)\n@@ -1338,6 +1336,19 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n+bool CConnman::QueueReceivedMessages(CNode* pnode, std::list<CNetMessage>&& completeMessages, size_t nSizeAdded)\n+{\n+    bool ret;\n+    {\n+        LOCK(pnode->cs_vProcessMsg);\n+        pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), std::move(completeMessages));\n+        pnode->nProcessQueueSize += nSizeAdded;\n+        ret = pnode->nProcessQueueSize < nReceiveFloodSize;\n+    }\n+    WakeMessageHandler();\n+    return ret;\n+}\n+\n \n \n "
      },
      {
        "sha": "282742262fa4d7fc519958233b816852d0895ddc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
        "patch": "@@ -118,6 +118,7 @@ struct CSerializedNetMsg\n };\n \n \n+class CNetMessage;\n class CConnman\n {\n public:\n@@ -342,6 +343,7 @@ class CConnman\n     void ThreadDNSAddressSeed();\n \n     void WakeMessageHandler();\n+    bool QueueReceivedMessages(CNode* pnode, std::list<CNetMessage>&& completeMessages, size_t nSizeAdded);\n \n     uint64_t CalculateKeyedNetGroup(const CAddress& ad);\n "
      }
    ]
  },
  {
    "sha": "1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzc3OWE4Y2ZlZmI0NWY1NWYwNjg2ZGUzZmNjYmE1Mjg1ZjVjZDdi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:36Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:36Z"
      },
      "message": "net: drop the receive lock during message processing\n\nIt's now only used for message size/time accounting",
      "tree": {
        "sha": "befa7a57b7f11cb410c39370ae761e29d4884aee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/befa7a57b7f11cb410c39370ae761e29d4884aee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c779a8cfefb45f55f0686de3fccba5285f5cd7b/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90bfeb0c2e4b11da25c25fb63f70e409c3361ec0"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 6,
      "deletions": 21
    },
    "files": [
      {
        "sha": "fad381e9af7c7a5558970705ef7ddaddc4c3445f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 17,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c779a8cfefb45f55f0686de3fccba5285f5cd7b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c779a8cfefb45f55f0686de3fccba5285f5cd7b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
        "patch": "@@ -644,9 +644,9 @@ void CNode::copyStats(CNodeStats &stats)\n }\n #undef X\n \n-// requires LOCK(cs_vRecvMsg)\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n+    LOCK(cs_vRecvMsg);\n     complete = false;\n     int64_t nTime = GetTimeMicros();\n     nLastRecv = nTime / 1000;\n@@ -1079,13 +1079,9 @@ void CConnman::ThreadSocketHandler()\n                         TRY_LOCK(pnode->cs_vSend, lockSend);\n                         if (lockSend)\n                         {\n-                            TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                            if (lockRecv)\n-                            {\n                                 TRY_LOCK(pnode->cs_inventory, lockInv);\n                                 if (lockInv)\n                                     fDelete = true;\n-                            }\n                         }\n                     }\n                     if (fDelete)\n@@ -1164,8 +1160,7 @@ void CConnman::ThreadSocketHandler()\n                     }\n                 }\n                 {\n-                    TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                    if (lockRecv && !pnode->fPauseRecv)\n+                    if (!pnode->fPauseRecv)\n                         FD_SET(pnode->hSocket, &fdsetRecv);\n                 }\n             }\n@@ -1224,8 +1219,6 @@ void CConnman::ThreadSocketHandler()\n                 continue;\n             if (FD_ISSET(pnode->hSocket, &fdsetRecv) || FD_ISSET(pnode->hSocket, &fdsetError))\n             {\n-                TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                if (lockRecv)\n                 {\n                     {\n                         // typical socket buffer is 8K-64K\n@@ -1876,14 +1869,8 @@ void CConnman::ThreadMessageHandler()\n                 continue;\n \n             // Receive messages\n-            {\n-                TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                if (lockRecv)\n-                {\n-                    bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n-                    fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n-                }\n-            }\n+            bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n+            fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n             if (flagInterruptMsgProc)\n                 return;\n "
      },
      {
        "sha": "a0aac2e691763e17e6c15ef61cf3bef1ae2b26e1",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c779a8cfefb45f55f0686de3fccba5285f5cd7b/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c779a8cfefb45f55f0686de3fccba5285f5cd7b/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
        "patch": "@@ -615,8 +615,6 @@ class CNode\n     size_t nProcessQueueSize;\n \n     std::deque<CInv> vRecvGetData;\n-    std::list<CNetMessage> vRecvMsg;\n-    CCriticalSection cs_vRecvMsg;\n     uint64_t nRecvBytes;\n     std::atomic<int> nRecvVersion;\n \n@@ -728,6 +726,8 @@ class CNode\n     const ServiceFlags nLocalServices;\n     const int nMyStartingHeight;\n     int nSendVersion;\n+    std::list<CNetMessage> vRecvMsg;\n+    CCriticalSection cs_vRecvMsg;\n public:\n \n     NodeId GetId() const {\n@@ -748,7 +748,6 @@ class CNode\n         return nRefCount;\n     }\n \n-    // requires LOCK(cs_vRecvMsg)\n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n \n     void SetRecvVersion(int nVersionIn)"
      },
      {
        "sha": "093c3c36cb977f173d9b7c0b24364667d3d0d857",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c779a8cfefb45f55f0686de3fccba5285f5cd7b/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c779a8cfefb45f55f0686de3fccba5285f5cd7b/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
        "patch": "@@ -2439,7 +2439,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     return true;\n }\n \n-// requires LOCK(cs_vRecvMsg)\n bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n     const CChainParams& chainparams = Params();"
      }
    ]
  },
  {
    "sha": "cf35386606818ed48a477c4b0d256e3e38eee3eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjM1Mzg2NjA2ODE4ZWQ0OGE0NzdjNGIwZDI1NmUzZTM4ZWVlM2Vi",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-26T07:17:59Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-05T18:15:48Z"
      },
      "message": "Add a new lock to CNode to process one node at once",
      "tree": {
        "sha": "6ae05310fcf4cf6bb5f1e9bbb2295cfadbf09129",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ae05310fcf4cf6bb5f1e9bbb2295cfadbf09129"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf35386606818ed48a477c4b0d256e3e38eee3eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf35386606818ed48a477c4b0d256e3e38eee3eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf35386606818ed48a477c4b0d256e3e38eee3eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf35386606818ed48a477c4b0d256e3e38eee3eb/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c779a8cfefb45f55f0686de3fccba5285f5cd7b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c779a8cfefb45f55f0686de3fccba5285f5cd7b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c5eeadf13acc9157400c0ede65b9972139f54c9a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf35386606818ed48a477c4b0d256e3e38eee3eb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf35386606818ed48a477c4b0d256e3e38eee3eb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=cf35386606818ed48a477c4b0d256e3e38eee3eb",
        "patch": "@@ -1868,6 +1868,10 @@ void CConnman::ThreadMessageHandler()\n             if (pnode->fDisconnect)\n                 continue;\n \n+            TRY_LOCK(pnode->cs_processing, lockProcessing);\n+            if (!lockProcessing)\n+                continue;\n+\n             // Receive messages\n             bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n             fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);"
      },
      {
        "sha": "05818abe1c634adf5c10f262313b58c3e25f0f26",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf35386606818ed48a477c4b0d256e3e38eee3eb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf35386606818ed48a477c4b0d256e3e38eee3eb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=cf35386606818ed48a477c4b0d256e3e38eee3eb",
        "patch": "@@ -622,6 +622,9 @@ class CNode\n     int64_t nLastRecv;\n     int64_t nTimeConnected;\n     int64_t nTimeOffset;\n+\n+    CCriticalSection cs_processing; // Used only in ThreadMessageHandler\n+\n     const CAddress addr;\n     std::string addrName;\n     CService addrLocal;"
      }
    ]
  },
  {
    "sha": "c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGI2YzkxNDRlZjQyNGU5YzY3Y2Y2ZjM0Y2IyNDZlZjBlMzA3OWM0",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-05T18:16:56Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T05:48:50Z"
      },
      "message": "Make ProcessMessages return whether the next message needs cs_main",
      "tree": {
        "sha": "8cb4c4bda6652c0c6ac826ab1eb8c37957ce40de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8cb4c4bda6652c0c6ac826ab1eb8c37957ce40de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf35386606818ed48a477c4b0d256e3e38eee3eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf35386606818ed48a477c4b0d256e3e38eee3eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf35386606818ed48a477c4b0d256e3e38eee3eb"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 16,
      "deletions": 11
    },
    "files": [
      {
        "sha": "134f106bb22901d9d192405b1ace9f8e7748c998",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
        "patch": "@@ -464,9 +464,14 @@ struct CombinerAll\n };\n \n // Signals for message handling\n+enum ProcessMessagesFlag\n+{\n+    PROCESS_MESSAGES_MORE_WITH_MAIN,\n+    PROCESS_MESSAGES_MORE_AVAILABLE,\n+};\n struct CNodeSignals\n {\n-    boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> ProcessMessages;\n+    boost::signals2::signal<unsigned int (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> ProcessMessages;\n     boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> SendMessages;\n     boost::signals2::signal<void (CNode*, CConnman&)> InitializeNode;\n     boost::signals2::signal<void (NodeId, bool&)> FinalizeNode;"
      },
      {
        "sha": "2048204a4f93354efbf32d78d7a63e1cbbc748be",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
        "patch": "@@ -2439,7 +2439,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     return true;\n }\n \n-bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n+unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n     const CChainParams& chainparams = Params();\n     //\n@@ -2456,20 +2456,20 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         ProcessGetData(pfrom, chainparams.GetConsensus(), connman, interruptMsgProc);\n \n     // this maintains the order of responses\n-    if (!pfrom->vRecvGetData.empty()) return true;\n+    if (!pfrom->vRecvGetData.empty()) return PROCESS_MESSAGES_MORE_WITH_MAIN;\n \n     if (pfrom->fDisconnect)\n-        return false;\n+        return 0;\n \n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->fPauseSend)\n-            return false;\n+            return 0;\n \n         std::list<CNetMessage> msgs;\n         {\n             LOCK(pfrom->cs_vProcessMsg);\n             if (pfrom->vProcessMsg.empty())\n-                return false;\n+                return 0;\n             // Just take one message\n             msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n             pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n@@ -2484,15 +2484,15 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);\n             pfrom->fDisconnect = true;\n-            return false;\n+            return 0;\n         }\n \n         // Read header\n         CMessageHeader& hdr = msg.hdr;\n         if (!hdr.IsValid(chainparams.MessageStart()))\n         {\n             LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->id);\n-            return fMoreWork;\n+            return fMoreWork ? PROCESS_MESSAGES_MORE_AVAILABLE : 0;\n         }\n         string strCommand = hdr.GetCommand();\n \n@@ -2508,7 +2508,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n                SanitizeString(strCommand), nMessageSize,\n                HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n                HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n-            return fMoreWork;\n+            return fMoreWork ? PROCESS_MESSAGES_MORE_AVAILABLE : 0;\n         }\n \n         // Process message\n@@ -2553,7 +2553,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         if (!fRet)\n             LogPrintf(\"%s(%s, %u bytes) FAILED peer=%d\\n\", __func__, SanitizeString(strCommand), nMessageSize, pfrom->id);\n \n-    return fMoreWork;\n+    return fMoreWork ? PROCESS_MESSAGES_MORE_AVAILABLE : 0;\n }\n \n class CompareInvMempoolOrder"
      },
      {
        "sha": "d0a2acab77ead5f11b7f47ed86eee8b0c1c34f78",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
        "patch": "@@ -39,7 +39,7 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n void Misbehaving(NodeId nodeid, int howmuch);\n \n /** Process protocol messages received from a given node */\n-bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interrupt);\n+unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interrupt);\n /**\n  * Send queued protocol messages to be sent to a give node.\n  *"
      }
    ]
  },
  {
    "sha": "6b4a883708e1485846616b273d1b898b6b6a8a50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjRhODgzNzA4ZTE0ODU4NDY2MTZiMjczZDFiODk4YjZiNmE4YTUw",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-05T18:17:12Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T05:48:50Z"
      },
      "message": "Give ProcessMessages a boolean to tell it to avoid cs_main locking",
      "tree": {
        "sha": "928ef97c82a7fdbd734630fe254730e9e3a35c09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/928ef97c82a7fdbd734630fe254730e9e3a35c09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b4a883708e1485846616b273d1b898b6b6a8a50",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4a883708e1485846616b273d1b898b6b6a8a50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b4a883708e1485846616b273d1b898b6b6a8a50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4a883708e1485846616b273d1b898b6b6a8a50/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4b6c9144ef424e9c67cf6f34cb246ef0e3079c4"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 21,
      "deletions": 5
    },
    "files": [
      {
        "sha": "5368104216aab411ebebccab44eef66bfc9a3d46",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=6b4a883708e1485846616b273d1b898b6b6a8a50",
        "patch": "@@ -1873,7 +1873,7 @@ void CConnman::ThreadMessageHandler()\n                 continue;\n \n             // Receive messages\n-            bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n+            bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc, false);\n             fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n             if (flagInterruptMsgProc)\n                 return;"
      },
      {
        "sha": "dc26626222393e240360c0b29b17429f469727c5",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=6b4a883708e1485846616b273d1b898b6b6a8a50",
        "patch": "@@ -471,7 +471,7 @@ enum ProcessMessagesFlag\n };\n struct CNodeSignals\n {\n-    boost::signals2::signal<unsigned int (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> ProcessMessages;\n+    boost::signals2::signal<unsigned int (CNode*, CConnman&, std::atomic<bool>&, bool), CombinerAll> ProcessMessages;\n     boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> SendMessages;\n     boost::signals2::signal<void (CNode*, CConnman&)> InitializeNode;\n     boost::signals2::signal<void (NodeId, bool&)> FinalizeNode;"
      },
      {
        "sha": "4f6b836725b8d9ec2c86e82450bc43261a533aad",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=6b4a883708e1485846616b273d1b898b6b6a8a50",
        "patch": "@@ -2439,7 +2439,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     return true;\n }\n \n-unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n+unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc, bool fAvoidLocking)\n {\n     const CChainParams& chainparams = Params();\n     //\n@@ -2452,8 +2452,11 @@ unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>&\n     //\n     bool fMoreWork = false;\n \n-    if (!pfrom->vRecvGetData.empty())\n+    if (!pfrom->vRecvGetData.empty()) {\n+        if (fAvoidLocking)\n+            return PROCESS_MESSAGES_MORE_WITH_MAIN;\n         ProcessGetData(pfrom, chainparams.GetConsensus(), connman, interruptMsgProc);\n+    }\n \n     // this maintains the order of responses\n     if (!pfrom->vRecvGetData.empty()) return PROCESS_MESSAGES_MORE_WITH_MAIN;\n@@ -2470,6 +2473,19 @@ unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>&\n             LOCK(pfrom->cs_vProcessMsg);\n             if (pfrom->vProcessMsg.empty())\n                 return 0;\n+\n+            // Check if we are supposed to avoid cs_main, but are about to try to lock it\n+            string strCommand = pfrom->vProcessMsg.begin()->hdr.GetCommand();\n+            if (fAvoidLocking &&\n+                    strCommand != NetMsgType::GETADDR &&\n+                    strCommand != NetMsgType::MEMPOOL &&\n+                    strCommand != NetMsgType::PING &&\n+                    strCommand != NetMsgType::PONG &&\n+                    strCommand != NetMsgType::REJECT &&\n+                    strCommand != NetMsgType::FEEFILTER) {\n+                return PROCESS_MESSAGES_MORE_WITH_MAIN;\n+            }\n+\n             // Just take one message\n             msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n             pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;"
      },
      {
        "sha": "d668d3ef046e51b6f775248f30e75e8358925768",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b4a883708e1485846616b273d1b898b6b6a8a50/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=6b4a883708e1485846616b273d1b898b6b6a8a50",
        "patch": "@@ -39,7 +39,7 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n void Misbehaving(NodeId nodeid, int howmuch);\n \n /** Process protocol messages received from a given node */\n-unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interrupt);\n+unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interrupt, bool fAvoidLocking);\n /**\n  * Send queued protocol messages to be sent to a give node.\n  *"
      }
    ]
  },
  {
    "sha": "46326084070a9541dd63e091592d074cdc073f2c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjMyNjA4NDA3MGE5NTQxZGQ2M2UwOTE1OTJkMDc0Y2RjMDczZjJj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-05T18:05:35Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T05:48:50Z"
      },
      "message": "Make ThreadMessageHandler support running in parallel\n\nThis uses the new return value from ProcessMessages which indicates\nwhether the next message might not need cs_main, trying to process\nany messages which do not need cs_main, even while another thread\nis running which takes cs_main for messages.",
      "tree": {
        "sha": "177f731d5eb7869bc1530ae82e6c09f8cf7eded7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/177f731d5eb7869bc1530ae82e6c09f8cf7eded7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46326084070a9541dd63e091592d074cdc073f2c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46326084070a9541dd63e091592d074cdc073f2c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46326084070a9541dd63e091592d074cdc073f2c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46326084070a9541dd63e091592d074cdc073f2c/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b4a883708e1485846616b273d1b898b6b6a8a50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4a883708e1485846616b273d1b898b6b6a8a50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b4a883708e1485846616b273d1b898b6b6a8a50"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 34,
      "deletions": 3
    },
    "files": [
      {
        "sha": "5190ccb42a2be2efbf664cb647bcecfad873e97e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 3,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46326084070a9541dd63e091592d074cdc073f2c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46326084070a9541dd63e091592d074cdc073f2c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=46326084070a9541dd63e091592d074cdc073f2c",
        "patch": "@@ -1861,7 +1861,15 @@ void CConnman::ThreadMessageHandler()\n             }\n         }\n \n-        bool fMoreWork = false;\n+        bool fMoreWorkWithoutMain = false;\n+        bool fMoreWorkWithMain = false;\n+\n+        // We randomly assign a thread as the \"main thread\",\n+        // all others pass fAvoidLocks into ProcessMessages,\n+        // suggesting that cs_main not be taken to avoid blocking\n+        // background threads on the main thread.\n+        static std::atomic_bool main_thread_running(false);\n+        bool fAvoidLocks = main_thread_running.exchange(true);\n \n         BOOST_FOREACH(CNode* pnode, vNodesCopy)\n         {\n@@ -1873,8 +1881,9 @@ void CConnman::ThreadMessageHandler()\n                 continue;\n \n             // Receive messages\n-            bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc, false);\n-            fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n+            unsigned int nMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc, fAvoidLocks);\n+            fMoreWorkWithMain    |= ((nMoreNodeWork & PROCESS_MESSAGES_MORE_WITH_MAIN) && !pnode->fPauseSend);\n+            fMoreWorkWithoutMain |= ((nMoreNodeWork & PROCESS_MESSAGES_MORE_AVAILABLE) && !pnode->fPauseSend);\n             if (flagInterruptMsgProc)\n                 return;\n \n@@ -1888,6 +1897,28 @@ void CConnman::ThreadMessageHandler()\n                 return;\n         }\n \n+        bool fMoreWork = false; // ie if this thread should avoid sleeping\n+        {\n+            static CCriticalSection cs_work_to_do;\n+            LOCK(cs_work_to_do);\n+\n+            static bool main_work_to_do = false;\n+            if (fAvoidLocks) {\n+                // We're in a background thread...\n+                // see if we need to notify the main thread\n+                // or if we can just run again and be it\n+                if (fMoreWorkWithMain)\n+                    main_work_to_do = true;\n+                if (!main_thread_running || fMoreWorkWithoutMain)\n+                    fMoreWork = true;\n+            } else {\n+                if (main_work_to_do || fMoreWorkWithMain || fMoreWorkWithoutMain)\n+                    fMoreWork = true;\n+                main_thread_running = false;\n+                main_work_to_do = false;\n+            }\n+        }\n+\n         {\n             LOCK(cs_vNodes);\n             BOOST_FOREACH(CNode* pnode, vNodesCopy)"
      }
    ]
  },
  {
    "sha": "ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzBhM2FkOTBiYTk5OGZlOTJiMzE4YWI4ZmM0MmEwMzFkMDYxNjBl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-26T07:46:27Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T05:48:50Z"
      },
      "message": "Run multiple (default 2) ProcessMessages threads",
      "tree": {
        "sha": "bf0ef2ef7edd92a44b6715b93cb5333646f839d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf0ef2ef7edd92a44b6715b93cb5333646f839d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac0a3ad90ba998fe92b318ab8fc42a031d06160e/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46326084070a9541dd63e091592d074cdc073f2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46326084070a9541dd63e091592d074cdc073f2c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46326084070a9541dd63e091592d074cdc073f2c"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f180ea41a54a53e471497b51d8a366056ff164d1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac0a3ad90ba998fe92b318ab8fc42a031d06160e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac0a3ad90ba998fe92b318ab8fc42a031d06160e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
        "patch": "@@ -375,6 +375,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxconnections=<n>\", strprintf(_(\"Maintain at most <n> connections to peers (default: %u)\"), DEFAULT_MAX_PEER_CONNECTIONS));\n     strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXRECEIVEBUFFER));\n     strUsage += HelpMessageOpt(\"-maxsendbuffer=<n>\", strprintf(_(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXSENDBUFFER));\n+    strUsage += HelpMessageOpt(\"-messagehandlerthreads=<n>\", strprintf(\"Threads to use for message processing (default: %u)\", DEFAULT_MESSAGE_HANDLER_THREADS));\n     strUsage += HelpMessageOpt(\"-maxtimeadjustment\", strprintf(_(\"Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)\"), DEFAULT_MAX_TIME_ADJUSTMENT));\n     strUsage += HelpMessageOpt(\"-onion=<ip:port>\", strprintf(_(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)\"), \"-proxy\"));\n     strUsage += HelpMessageOpt(\"-onlynet=<net>\", _(\"Only connect to nodes in network <net> (ipv4, ipv6 or onion)\"));"
      },
      {
        "sha": "24a9d516caffc739e796fb1a29f2a24a054c0f4c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac0a3ad90ba998fe92b318ab8fc42a031d06160e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac0a3ad90ba998fe92b318ab8fc42a031d06160e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
        "patch": "@@ -2219,7 +2219,8 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n         threadOpenConnections = std::thread(&TraceThread<std::function<void()> >, \"opencon\", std::function<void()>(std::bind(&CConnman::ThreadOpenConnections, this)));\n \n     // Process messages\n-    threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n+    for (int64_t i = 0; i < GetArg(\"-messagehandlerthreads\", DEFAULT_MESSAGE_HANDLER_THREADS); i++)\n+        threadMessageHandlers.emplace_back(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n \n     // Dump network addresses\n     scheduler.scheduleEvery(boost::bind(&CConnman::DumpData, this), DUMP_ADDRESSES_INTERVAL);\n@@ -2260,8 +2261,11 @@ void CConnman::Interrupt()\n \n void CConnman::Stop()\n {\n-    if (threadMessageHandler.joinable())\n-        threadMessageHandler.join();\n+    for (std::thread& threadMessageHandler : threadMessageHandlers)\n+        if (threadMessageHandler.joinable())\n+            threadMessageHandler.join();\n+    threadMessageHandlers.clear();\n+\n     if (threadOpenConnections.joinable())\n         threadOpenConnections.join();\n     if (threadOpenAddedConnections.joinable())"
      },
      {
        "sha": "1f1e6a3c1d3edb42bacbb88524261bb08387fb1f",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac0a3ad90ba998fe92b318ab8fc42a031d06160e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac0a3ad90ba998fe92b318ab8fc42a031d06160e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
        "patch": "@@ -90,6 +90,8 @@ static const ServiceFlags REQUIRED_SERVICES = NODE_NETWORK;\n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n \n+static const int DEFAULT_MESSAGE_HANDLER_THREADS = 2; // Too much cs_main for any more to be useful\n+\n typedef int NodeId;\n \n struct AddedNodeInfo\n@@ -439,7 +441,7 @@ class CConnman\n     std::thread threadSocketHandler;\n     std::thread threadOpenAddedConnections;\n     std::thread threadOpenConnections;\n-    std::thread threadMessageHandler;\n+    std::list<std::thread> threadMessageHandlers;\n };\n extern std::unique_ptr<CConnman> g_connman;\n void Discover(boost::thread_group& threadGroup);"
      }
    ]
  },
  {
    "sha": "93bbd0a2dcb1e094c33810164dd1b911221faf94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2JiZDBhMmRjYjFlMDk0YzMzODEwMTY0ZGQxYjkxMTIyMWZhZjk0",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T20:30:42Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T21:56:41Z"
      },
      "message": "Add the ability to disallow a lock in DEBUG_LOCKORDER",
      "tree": {
        "sha": "b73617997ec9c846cf8c6f34257bd808a1e974a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b73617997ec9c846cf8c6f34257bd808a1e974a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93bbd0a2dcb1e094c33810164dd1b911221faf94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93bbd0a2dcb1e094c33810164dd1b911221faf94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93bbd0a2dcb1e094c33810164dd1b911221faf94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93bbd0a2dcb1e094c33810164dd1b911221faf94/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac0a3ad90ba998fe92b318ab8fc42a031d06160e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac0a3ad90ba998fe92b318ab8fc42a031d06160e"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 67,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1a7452d51e36a7a80aea93afeddb2e37529a6d3d",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93bbd0a2dcb1e094c33810164dd1b911221faf94/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93bbd0a2dcb1e094c33810164dd1b911221faf94/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=93bbd0a2dcb1e094c33810164dd1b911221faf94",
        "patch": "@@ -58,6 +58,7 @@ struct CLockLocation {\n typedef std::vector<std::pair<void*, CLockLocation> > LockStack;\n typedef std::map<std::pair<void*, void*>, LockStack> LockOrders;\n typedef std::set<std::pair<void*, void*> > InvLockOrders;\n+typedef std::map<void*, std::pair<CLockLocation, int> > DisallowSet;\n \n struct LockData {\n     // Very ugly hack: as the global constructs and destructors run single\n@@ -74,6 +75,7 @@ struct LockData {\n } static lockdata;\n \n boost::thread_specific_ptr<LockStack> lockstack;\n+boost::thread_specific_ptr<DisallowSet> disallowset;\n \n static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)\n {\n@@ -129,9 +131,18 @@ static void push_lock(void* c, const CLockLocation& locklocation, bool fTry)\n {\n     if (lockstack.get() == NULL)\n         lockstack.reset(new LockStack);\n+    if (disallowset.get() == NULL)\n+        disallowset.reset(new DisallowSet);\n \n     boost::unique_lock<boost::mutex> lock(lockdata.dd_mutex);\n \n+    auto disallowit = disallowset->find(c);\n+    if (!fTry && disallowit != disallowset->end()) {\n+        LogPrintf(\"Attempted to take lock that was disallowed: \");\n+        LogPrintf(\"Disallowed at %s, but taken at %s\\n\", disallowit->second.first.ToString(), locklocation.ToString());\n+        assert(false);\n+    }\n+\n     (*lockstack).push_back(std::make_pair(c, locklocation));\n \n     if (!fTry) {\n@@ -206,4 +217,29 @@ void DeleteLock(void* cs)\n     }\n }\n \n+void DisallowLock(const char* pszName, const char* pszFile, int nLine, void* cs)\n+{\n+    if (disallowset.get() == NULL)\n+        disallowset.reset(new DisallowSet);\n+\n+    auto it = disallowset->find(cs);\n+    if (it == disallowset->end()) {\n+        disallowset->emplace(std::piecewise_construct, std::forward_as_tuple(cs),\n+                std::forward_as_tuple(std::piecewise_construct, std::forward_as_tuple(pszName, pszFile, nLine, false), std::forward_as_tuple(1)));\n+    } else {\n+        it->second.second++;\n+    }\n+}\n+\n+void AllowLock(void* cs)\n+{\n+    auto it = disallowset->find(cs);\n+    assert(it != disallowset->end());\n+    it->second.second--;\n+    assert(it->second.second >= 0);\n+    if (it->second.second == 0) {\n+        disallowset->erase(it);\n+    }\n+}\n+\n #endif /* DEBUG_LOCKORDER */"
      },
      {
        "sha": "53185000b71bbf4f93944ff51abb9423b604d581",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93bbd0a2dcb1e094c33810164dd1b911221faf94/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93bbd0a2dcb1e094c33810164dd1b911221faf94/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=93bbd0a2dcb1e094c33810164dd1b911221faf94",
        "patch": "@@ -77,11 +77,15 @@ void LeaveCritical();\n std::string LocksHeld();\n void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n void DeleteLock(void* cs);\n+void DisallowLock(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AllowLock(void* cs);\n #else\n void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}\n void static inline LeaveCritical() {}\n void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) {}\n void static inline DeleteLock(void* cs) {}\n+void static inline DisallowLock(const char* pszName, const char* pszFile, int nLine, void* cs) {}\n+void static inline AllowLock(void* cs) {}\n #endif\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n@@ -171,6 +175,31 @@ class SCOPED_LOCKABLE CMutexLock\n \n typedef CMutexLock<CCriticalSection> CCriticalBlock;\n \n+/** RAII for debug-only DissalowLock/AllowLock */\n+template <typename Mutex>\n+class CDisallowLock\n+{\n+private:\n+    Mutex* pmutex;\n+\n+public:\n+    CDisallowLock(Mutex* pmutexIn, const char* pszName, const char* pszFile, int nLine) : pmutex(pmutexIn)\n+    {\n+        DisallowLock(pszName, pszFile, nLine, pmutex);\n+    }\n+\n+    CDisallowLock(Mutex& mutexIn, const char* pszName, const char* pszFile, int nLine) :\n+        CDisallowLock(&mutexIn, pszName, pszFile, nLine)\n+    { }\n+\n+    ~CDisallowLock()\n+    {\n+        AllowLock(pmutex);\n+    }\n+};\n+\n+typedef CDisallowLock<CCriticalSection> CDisallowBlock;\n+\n #define PASTE(x, y) x ## y\n #define PASTE2(x, y) PASTE(x, y)\n \n@@ -190,6 +219,8 @@ typedef CMutexLock<CCriticalSection> CCriticalBlock;\n         LeaveCritical();           \\\n     }\n \n+#define DISALLOW_LOCK(cs) CDisallowBlock PASTE2(disallowblock, __COUNTER__)(cs, #cs, __FILE__, __LINE__)\n+\n class CSemaphore\n {\n private:"
      }
    ]
  },
  {
    "sha": "2e036fe060d0e0da0c4ca9269947516571f92f75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTAzNmZlMDYwZDBlMGRhMGM0Y2E5MjY5OTQ3NTE2NTcxZjkyZjc1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T21:00:27Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-08T21:56:42Z"
      },
      "message": "Disallow cs_main in ProcessMessages if we have fAvoidLocking",
      "tree": {
        "sha": "8a7b2ca1c8347f07dc7d2b3f8ef75eb884d817c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a7b2ca1c8347f07dc7d2b3f8ef75eb884d817c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e036fe060d0e0da0c4ca9269947516571f92f75",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e036fe060d0e0da0c4ca9269947516571f92f75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e036fe060d0e0da0c4ca9269947516571f92f75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e036fe060d0e0da0c4ca9269947516571f92f75/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93bbd0a2dcb1e094c33810164dd1b911221faf94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93bbd0a2dcb1e094c33810164dd1b911221faf94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93bbd0a2dcb1e094c33810164dd1b911221faf94"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "62cc641e12b63f4c7cc0202dafbb4e643d79d920",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e036fe060d0e0da0c4ca9269947516571f92f75/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e036fe060d0e0da0c4ca9269947516571f92f75/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=2e036fe060d0e0da0c4ca9269947516571f92f75",
        "patch": "@@ -2441,6 +2441,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n unsigned int ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc, bool fAvoidLocking)\n {\n+    if (fAvoidLocking)\n+        DISALLOW_LOCK(cs_main);\n+\n     const CChainParams& chainparams = Params();\n     //\n     // Message format"
      }
    ]
  }
]