[
  {
    "sha": "30930e847e2483c7c8163cc581b392bc288250e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDkzMGU4NDdlMjQ4M2M3YzgxNjNjYzU4MWIzOTJiYzI4ODI1MGU5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-09-29T15:34:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-09-29T15:50:05Z"
      },
      "message": "test: Explicitly set encoding to utf8 when opening text files\n\nThese are text files but their encoding does not depend on the locale.\nNot all of them require utf8 but it is better to fix it at something\nto remove potential unpredictability.\n\nThis is necessary on FreeBSD where no locale is set by default,\nand apparently Python defaults not only the terminal encoding to the locale\nbut that of every text file. So without LOCALE environment it defaults text\nfile encoding to ASCII. This causes problems with e.g. `bitcoin.conf`.\n\nLuckily the locale doesn't affect the default encoding for str.encode() and\nbytes.decode() on Python 3, so this is the only change necessary.",
      "tree": {
        "sha": "2231659b4b0b00ba5e0e347d549ab97d5f254b1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2231659b4b0b00ba5e0e347d549ab97d5f254b1e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30930e847e2483c7c8163cc581b392bc288250e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30930e847e2483c7c8163cc581b392bc288250e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30930e847e2483c7c8163cc581b392bc288250e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30930e847e2483c7c8163cc581b392bc288250e9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f560d9564f74ae8f4b449121b22703b23db3d010",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f560d9564f74ae8f4b449121b22703b23db3d010",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f560d9564f74ae8f4b449121b22703b23db3d010"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "a1901aedab890d92dac8f64b42d0961607b0edb8",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=30930e847e2483c7c8163cc581b392bc288250e9",
        "patch": "@@ -22,7 +22,7 @@ def __init__(self):\n     def setup_network(self):\n         self.nodes = []\n         self.alert_filename = os.path.join(self.options.tmpdir, \"alert.txt\")\n-        with open(self.alert_filename, 'w') as f:\n+        with open(self.alert_filename, 'w', encoding='utf8') as f:\n             pass  # Just open then close to create zero-length file\n         self.nodes.append(start_node(0, self.options.tmpdir,\n                             [\"-blockversion=2\", \"-alertnotify=echo %s >> \\\"\" + self.alert_filename + \"\\\"\"]))\n@@ -44,7 +44,7 @@ def run_test(self):\n         self.nodes[1].generate(1)\n         self.sync_all()\n \n-        with open(self.alert_filename, 'r') as f:\n+        with open(self.alert_filename, 'r', encoding='utf8') as f:\n             alert_text = f.read()\n \n         if len(alert_text) == 0:\n@@ -56,7 +56,7 @@ def run_test(self):\n         self.nodes[1].generate(1)\n         self.sync_all()\n \n-        with open(self.alert_filename, 'r') as f:\n+        with open(self.alert_filename, 'r', encoding='utf8') as f:\n             alert_text2 = f.read()\n \n         if alert_text != alert_text2:"
      },
      {
        "sha": "cdeb94caa09986fa533a264d214b88ef245d9a25",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=30930e847e2483c7c8163cc581b392bc288250e9",
        "patch": "@@ -26,7 +26,7 @@ def setup_chain(self):\n         #Append rpcauth to bitcoin.conf before initialization\n         rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n         rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n-        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a') as f:\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n             f.write(rpcauth+\"\\n\")\n             f.write(rpcauth2+\"\\n\")\n "
      },
      {
        "sha": "cceaa37b3dd75f1b6550b5aebb544841c6feb102",
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=30930e847e2483c7c8163cc581b392bc288250e9",
        "patch": "@@ -72,7 +72,7 @@ def __init__(self):\n     def setup_network(self):\n         self.alert_filename = os.path.join(self.options.tmpdir, \"alert.txt\")\n         # Open and close to create zero-length file\n-        with open(self.alert_filename, 'w') as _:\n+        with open(self.alert_filename, 'w', encoding='utf8') as _:\n             pass\n         self.extra_args = [[\"-debug\", \"-logtimemicros=1\", \"-alertnotify=echo %s >> \\\"\" + self.alert_filename + \"\\\"\"]]\n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, self.extra_args)\n@@ -95,7 +95,7 @@ def send_blocks_with_version(self, peer, numblocks, nVersionToUse):\n         peer.sync_with_ping()\n \n     def test_versionbits_in_alert_file(self):\n-        with open(self.alert_filename, 'r') as f:\n+        with open(self.alert_filename, 'r', encoding='utf8') as f:\n             alert_text = f.read()\n         assert(VB_PATTERN.match(alert_text))\n \n@@ -147,7 +147,7 @@ def run_test(self):\n         stop_node(self.nodes[0], 0)\n         wait_bitcoinds()\n         # Empty out the alert file\n-        with open(self.alert_filename, 'w') as _:\n+        with open(self.alert_filename, 'w', encoding='utf8') as _:\n             pass\n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, self.extra_args)\n "
      },
      {
        "sha": "13b33869f5472d357c4d676a4dc1ebf197a42d31",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=30930e847e2483c7c8163cc581b392bc288250e9",
        "patch": "@@ -50,7 +50,7 @@ def __call__(self, *args, **kwargs):\n         rpc_method = self.auth_service_proxy_instance._service_name\n \n         if self.coverage_logfile:\n-            with open(self.coverage_logfile, 'a+') as f:\n+            with open(self.coverage_logfile, 'a+', encoding='utf8') as f:\n                 f.write(\"%s\\n\" % rpc_method)\n \n         return return_val\n@@ -100,7 +100,7 @@ def write_all_rpc_commands(dirname, node):\n         if line and not line.startswith('='):\n             commands.add(\"%s\\n\" % line.split()[0])\n \n-    with open(filename, 'w') as f:\n+    with open(filename, 'w', encoding='utf8') as f:\n         f.writelines(list(commands))\n \n     return True"
      },
      {
        "sha": "b92a9f6e1ce439fc88a7f27055c6b7c623d6e4b2",
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=30930e847e2483c7c8163cc581b392bc288250e9",
        "patch": "@@ -58,7 +58,7 @@ def netstat(typ='tcp'):\n     To get pid of all network process running on system, you must run this script\n     as superuser\n     '''\n-    with open('/proc/net/'+typ,'r') as f:\n+    with open('/proc/net/'+typ,'r',encoding='utf8') as f:\n         content = f.readlines()\n         content.pop(0)\n     result = []"
      },
      {
        "sha": "2f0d909a6e661ddd3474206de9d53fc9b9477f7f",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=30930e847e2483c7c8163cc581b392bc288250e9",
        "patch": "@@ -161,7 +161,7 @@ def initialize_datadir(dirname, n):\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n     rpc_u, rpc_p = rpc_auth_pair(n)\n-    with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n+    with open(os.path.join(datadir, \"bitcoin.conf\"), 'w', encoding='utf8') as f:\n         f.write(\"regtest=1\\n\")\n         f.write(\"rpcuser=\" + rpc_u + \"\\n\")\n         f.write(\"rpcpassword=\" + rpc_p + \"\\n\")"
      },
      {
        "sha": "a37096a40ce9472c38bbbf15dfd029a4bfb75172",
        "filename": "qa/rpc-tests/wallet-dump.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/wallet-dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30930e847e2483c7c8163cc581b392bc288250e9/qa/rpc-tests/wallet-dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-dump.py?ref=30930e847e2483c7c8163cc581b392bc288250e9",
        "patch": "@@ -12,7 +12,7 @@ def read_dump(file_name, addrs, hd_master_addr_old):\n     Read the given dump, count the addrs that match, count change and reserve.\n     Also check that the old hd_master is inactive\n     \"\"\"\n-    with open(file_name) as inputfile:\n+    with open(file_name, encoding='utf8') as inputfile:\n         found_addr = 0\n         found_addr_chg = 0\n         found_addr_rsv = 0"
      }
    ]
  }
]