[
  {
    "sha": "4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWQzYWUzZjU1MDI2OGE1MmFmOGQ3NzI5YjhmYjhhZGJjZjI4YjIx",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-12-15T13:10:44Z"
      },
      "committer": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2021-02-06T17:02:00Z"
      },
      "message": "[wallet]: Skip creating wallets that include the default_walletdir name.\n\nbugfix. wallets is no longer the safe word ;-)",
      "tree": {
        "sha": "6cb23e3095b4a5c8d70e40af06926087051aeaae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cb23e3095b4a5c8d70e40af06926087051aeaae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6140846f37de8c132b3b6abf09f3d7940554a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6140846f37de8c132b3b6abf09f3d7940554a7"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 61,
      "deletions": 0
    },
    "files": [
      {
        "sha": "342cbb39bdc6c17a06dd9cf9b24b16650d42f7df",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
        "patch": "@@ -249,6 +249,19 @@ std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::strin\n     uint64_t wallet_creation_flags = options.create_flags;\n     const SecureString& passphrase = options.create_passphrase;\n \n+    // Sanity check to prevent creating by typo accident a new wallets subdir for mainchain\n+    std::string chainname = gArgs.GetChainName();\n+    if (chainname == CBaseChainParams::MAIN) {\n+        if (!(fs::is_directory(GetWalletDir() / \"wallets\"))) {\n+            if ((name.length() == 7 && std::memcmp(name.c_str(), \"wallets\", 7) == 0) || std::memcmp(name.c_str(), \"wallets/\", 8) == 0) {\n+                error = Untranslated(\"Please use a different walletname \\\"\") + Untranslated(name) +\n+                        Untranslated(\"\\\" - older wallets could be otherwise inaccessible.\") + Untranslated(\" \") + error;\n+                status = DatabaseStatus::FAILED_CREATE;\n+                return nullptr;\n+            }\n+        }\n+    }\n+\n     if (wallet_creation_flags & WALLET_FLAG_DESCRIPTORS) options.require_format = DatabaseFormat::SQLITE;\n \n     // Indicate that the wallet is actually supposed to be blank and not just blank to make it encrypted"
      },
      {
        "sha": "1257f2472161413e6e83858a78d953387b96094a",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
        "patch": "@@ -111,6 +111,7 @@\n     'wallet_listtransactions.py --legacy-wallet',\n     'wallet_listtransactions.py --descriptors',\n     'feature_taproot.py',\n+    'wallet_mainnet_test.py',\n     # vv Tests less than 60s vv\n     'p2p_sendheaders.py',\n     'wallet_importmulti.py --legacy-wallet',"
      },
      {
        "sha": "aff0b89ba89152bda860b9addce26940395c9ba8",
        "filename": "test/functional/wallet_mainnet_test.py",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21/test/functional/wallet_mainnet_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21/test/functional/wallet_mainnet_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_mainnet_test.py?ref=4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
        "patch": "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test if on mainnet wallets can vanish inaccessible.\n+\n+Verify that a bitcoind mainnet node will not loose wallets on new startup\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+class WalletSanityTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.chain = 'main'\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('test if we still have the original wallets key')\n+        self.log.info(self.nodes[0].listwallets())\n+        if self.nodes[0].listwallets() == []:\n+            self.nodes[0].createwallet('')\n+        assert_equal(self.nodes[0].listwallets(), [''])\n+        self.nodes[0].createwallet('w1')\n+        self.nodes[0].createwallet('w2')\n+        assert_equal(self.nodes[0].listwallets(), ['', 'w1', 'w2'])\n+        self.log.info(self.nodes[0].listwallets())\n+        n = self.nodes[0].get_wallet_rpc('')\n+        address = n.getnewaddress()\n+        assert_raises_rpc_error(-4, \"Please use a different walletname\", self.nodes[0].createwallet, 'wallets')\n+        n = self.nodes[0].get_wallet_rpc('')\n+        self.log.info('now restart node')\n+        self.restart_node(0)\n+        self.log.info(self.nodes[0].listwallets())\n+        n = self.nodes[0].get_wallet_rpc('')\n+        self.log.info('now check if we still have the wallet and the key')\n+        n.dumpprivkey(address)\n+\n+if __name__ == '__main__':\n+    WalletSanityTest().main()"
      }
    ]
  },
  {
    "sha": "c8166e680246747964afcad7d67f1f0c7f2dd4ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODE2NmU2ODAyNDY3NDc5NjRhZmNhZDdkNjdmMWYwYzdmMmRkNGNl",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2021-02-05T10:10:32Z"
      },
      "committer": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2021-02-06T17:02:01Z"
      },
      "message": "Allow self.chain = 'main' in python bitcoin test framework\n\nmainchain and testchains could behave different.\nSo make sure we can now easy test this.",
      "tree": {
        "sha": "8661cc138b9075291387d8d76f17ab2c3e615444",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8661cc138b9075291387d8d76f17ab2c3e615444"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8166e680246747964afcad7d67f1f0c7f2dd4ce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8166e680246747964afcad7d67f1f0c7f2dd4ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8166e680246747964afcad7d67f1f0c7f2dd4ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8166e680246747964afcad7d67f1f0c7f2dd4ce/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed3ae3f550268a52af8d7729b8fb8adbcf28b21"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "81794c49deb1748c03ef1758b81ff3b2e06d1b96",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8166e680246747964afcad7d67f1f0c7f2dd4ce/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8166e680246747964afcad7d67f1f0c7f2dd4ce/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=c8166e680246747964afcad7d67f1f0c7f2dd4ce",
        "patch": "@@ -420,7 +420,8 @@ def init_wallet(self, i):\n             n = self.nodes[i]\n             if wallet_name is not None:\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n-            n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase')\n+            if self.chain != \"main\":\n+                n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase')\n \n     def run_test(self):\n         \"\"\"Tests must override this method to define test logic\"\"\""
      },
      {
        "sha": "24806eab23970fb973971d99d1d1550c5df91954",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8166e680246747964afcad7d67f1f0c7f2dd4ce/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8166e680246747964afcad7d67f1f0c7f2dd4ce/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=c8166e680246747964afcad7d67f1f0c7f2dd4ce",
        "patch": "@@ -399,7 +399,10 @@ def get_auth_cookie(datadir, chain):\n                     assert password is None  # Ensure that there is only one rpcpassword line\n                     password = line.split(\"=\")[1].strip(\"\\n\")\n     try:\n-        with open(os.path.join(datadir, chain, \".cookie\"), 'r', encoding=\"ascii\") as f:\n+        subdir = chain\n+        if subdir == \"main\":\n+            subdir = \"\"\n+        with open(os.path.join(datadir, subdir, \".cookie\"), 'r', encoding=\"ascii\") as f:\n             userpass = f.read()\n             split_userpass = userpass.split(':')\n             user = split_userpass[0]\n@@ -413,7 +416,10 @@ def get_auth_cookie(datadir, chain):\n \n # If a cookie file exists in the given datadir, delete it.\n def delete_cookie_file(datadir, chain):\n-    if os.path.isfile(os.path.join(datadir, chain, \".cookie\")):\n+    subdir = chain\n+    if chain == \"main\":\n+        subdir = \"\"\n+    if os.path.isfile(os.path.join(datadir, subdir, \".cookie\")):\n         logger.debug(\"Deleting leftover cookie file\")\n         os.remove(os.path.join(datadir, chain, \".cookie\"))\n "
      }
    ]
  }
]