jonasschnelli,2017-04-14T07:09:05Z,"Nice. Concept ACK.\nHave you tested this together with the GUI? Are you willing to expand this to the GUI?",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294104643,294104643,
jonasschnelli,2017-04-14T07:09:23Z,Accidentally closed. Reopening.,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294104688,294104688,
kallewoof,2017-04-14T07:11:57Z,"@jonasschnelli I haven't tried with the GUI. Definitely willing to add that, but wonder if that should be a separate PR?",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294105059,294105059,
jonasschnelli,2017-04-14T07:13:02Z,Can be separate if this PR does not break the GUI rescan additions (the popup window).,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294105199,294105199,
kallewoof,2017-04-14T07:14:19Z,Gotcha. I will test the GUI. If it doesn't seem overly complex I'll add support there as well while at it.,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294105344,294105344,
kallewoof,2017-04-14T07:35:12Z,"@jonasschnelli I tested out the GUI. The only way I could find importing keys was the Help > Debug > Console > importprivkey ... route. It brings up the ""Rescanning..."" popup with the progress bar, and locks input so I can't abort the rescan to test that part. But the actual GUI works fine.\n\nAdding an ""Abort"" button to the progress popup seems sensible, but I'm going to declare that as a separ",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294108087,294108087,
sipa,2017-04-14T07:36:23Z,"@kallewoof You can run bitcoin-qt with the -server flag, and then issue command through bitcoin-cli or any other RPC client.",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294108255,294108255,
jonasschnelli,2017-04-14T07:36:45Z,@kallewoof: Great. Yes. Let's fix this in an upcoming PR. I think you can also rescan by `./bitcoin-qt -server` or `./bitcoin-qt -rescan`.,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294108298,294108298,
kallewoof,2017-04-14T07:41:51Z,"@sipa Ahh that let me try abortrescan from CLI while doing import from the GUI. Thanks!\n\n@jonasschnelli GUI fully tested and appears functional.",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294108929,294108929,
NicolasDorier,2017-04-14T10:04:06Z,utACK 33b93f52b4452008075520239f4991440380be1a,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294129405,294129405,
KibbledJiveElkZoo,2017-04-14T19:45:48Z,"""Wallet is being asked to abort rescan despite already pending rescan abort""\n\nI would change ""abort"" to ""abortion""; I believe it may be more grammatically correct, and we need the word abortion in the core code.",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294222688,294222688,
rawodb,2017-04-17T08:39:03Z,ACK,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294432481,294432481,
laanwj,2017-04-17T13:12:41Z,nice! utACK after squash,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294483180,294483180,
kallewoof,2017-04-17T14:27:04Z,Squashed. ~~~Edit: Crap. Fixing...~~~,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294495535,294495535,
kallewoof,2017-04-18T02:55:29Z,"Per https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111800501 I have replaced the RPC throws with true/false for ""did something"" / ""did nothing"" return values in `abortrescan`.\n\nUnsquashed history: [1](https://github.com/kallewoof/bitcoin/commit/75a08e7d17da9db2ac0e9f55a4286dda912385bc) → [2](https://github.com/kallewoof/bitcoin/commit/153d24d073635a98a2206a6455e23fb5fc77d0da) → [3∈2",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294659859,294659859,
laanwj,2017-04-18T06:06:17Z,"This still needs (in follow-up PR):\n- a test in `test/functional`\n- mention in the release notes",https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294696227,294696227,
TheBlueMatt,2017-04-18T19:17:44Z,postumous utACK,https://github.com/bitcoin/bitcoin/pull/10208#issuecomment-294951486,294951486,
NicolasDorier,2017-04-14T06:53:09Z,nits: I don't think it should throw an error. The expected state is correctly reached at the end of the call.,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111537145,111537145,src/wallet/rpcdump.cpp
NicolasDorier,2017-04-14T06:54:23Z,"need to set `fAbortRescan` to false again.\n\nEDIT: Actually it should be fine... I think it is best that the end state of the variable is known though.",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111537232,111537232,src/wallet/wallet.cpp
kallewoof,2017-04-14T06:54:26Z,"It's a response to the RPC caller, so it's more like feedback and less than an actual error. Compare this to the std::runtime_error thrown for the help message.\n\nUltimately, if the scan is not in progress and/or if the rescan flag is already set, the end results will be the same even without throwing.",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111537238,111537238,src/wallet/rpcdump.cpp
kallewoof,2017-04-14T06:55:33Z,It's set at line 1530 above. I was thinking of setting it to false at end but it doesn't really matter as it's reset at top anyway.,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111537335,111537335,src/wallet/wallet.cpp
NicolasDorier,2017-04-14T06:58:18Z,returning a  human readable message feel a bit weird to me.,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111537584,111537584,src/wallet/rpcdump.cpp
kallewoof,2017-04-14T07:02:58Z,I was sure I'd seen that elsewhere but now I'm not so sure. Revisiting that part now.,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111538198,111538198,src/wallet/rpcdump.cpp
jonasschnelli,2017-04-14T07:05:11Z,nit: Usually we have the  `HelpExampleCli` and `HelpExampleRpc` here.,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111538526,111538526,src/wallet/rpcdump.cpp
kallewoof,2017-04-14T07:06:08Z,@jonasschnelli I wasn't sure that was the case even for no-arg commands. Will add.,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111538654,111538654,src/wallet/rpcdump.cpp
jonasschnelli,2017-04-14T07:08:25Z,"From the API consumer perspective, what you want is parsable differentiations between the possible states.\nYour currently use `RPC_WALLET_ERROR` for `fScanningWallet` and `fAbortRescan` leading to the fact the one needs to parse string to get the correct state.",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111538873,111538873,src/wallet/rpcdump.cpp
kallewoof,2017-04-14T07:12:15Z,Added.,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111539274,111539274,src/wallet/rpcdump.cpp
kallewoof,2017-04-14T07:13:27Z,"Right, good point -- I will add error codes for these two and throw those instead.",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111539350,111539350,src/wallet/rpcdump.cpp
rawodb,2017-04-14T20:18:14Z,I would turn both these flags to private standard boolean and use CWallet getters&setters to change them,https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111630062,111630062,src/wallet/wallet.h
kallewoof,2017-04-17T00:45:40Z,"For some reason I didn't think we used getters/setters but clearly we do. Fixed, thanks!",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111695543,111695543,src/wallet/wallet.h
TheBlueMatt,2017-04-17T19:14:37Z,"I have to agree with the previous comment, throwing here is super strange. The direct API we expose is likely fine, but many API wrappers will throw a corresponding exception like we do here, and I'd consider ""not currently scanning"" to be a warning, not a critical error - it would be nice to just return a boolean for ""we did something"".",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111800501,111800501,src/wallet/rpcdump.cpp
kallewoof,2017-04-18T01:14:45Z,"I can't find the previous comment you are referring to? (Did you get this and https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102975099 mixed up, by any chance?)\n\nSince we're throwing when a user types the word `help`, it conceptually feels like a throw is simply a result with a code and a message, rather than a critical error. It's a way to distinguish from ""ACK"" and ""NACK"" even for ",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111854285,111854285,src/wallet/rpcdump.cpp
TheBlueMatt,2017-04-18T01:43:07Z,"I was referring to https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111537145 The help throw, however, is for when you provide bad arguments, which is the correct ""you fucked up"" response. Throwing if not scanning is just a race in client applications, an almost-guaranteed-benign race to boot.",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111856696,111856696,src/wallet/rpcdump.cpp
kallewoof,2017-04-18T02:20:50Z,"I guess the worst thing that happens is that you accidentally target the wrong node and one node ends up scanning the entire wallet even though you asked it not to. That's not a biggie, really, especially if you don't even realize it yourself.\n\nI'll switch to returning true/false for did/didn't do something as you suggest.",https://github.com/bitcoin/bitcoin/pull/10208#discussion_r111859440,111859440,src/wallet/rpcdump.cpp
