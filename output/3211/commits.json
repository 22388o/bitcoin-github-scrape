[
  {
    "sha": "b64187d05f327992c304836fe1fc1d276ec80c36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjQxODdkMDVmMzI3OTkyYzMwNDgzNmZlMWZjMWQyNzZlYzgwYzM2",
    "commit": {
      "author": {
        "name": "Brandon Dahler",
        "email": "brandon.dahler@gmail.com",
        "date": "2013-11-06T01:58:43Z"
      },
      "committer": {
        "name": "Brandon Dahler",
        "email": "brandon.dahler@gmail.com",
        "date": "2013-11-09T00:03:46Z"
      },
      "message": "Rename leveldb.{h,cpp} to leveldbwrapper.{h,cpp}.",
      "tree": {
        "sha": "11db3ecf4745e4dd1ddb7b26b88e586ce9fa03bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11db3ecf4745e4dd1ddb7b26b88e586ce9fa03bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b64187d05f327992c304836fe1fc1d276ec80c36",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b64187d05f327992c304836fe1fc1d276ec80c36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b64187d05f327992c304836fe1fc1d276ec80c36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b64187d05f327992c304836fe1fc1d276ec80c36/comments",
    "author": {
      "login": "brandondahler",
      "id": 1155895,
      "node_id": "MDQ6VXNlcjExNTU4OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1155895?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandondahler",
      "html_url": "https://github.com/brandondahler",
      "followers_url": "https://api.github.com/users/brandondahler/followers",
      "following_url": "https://api.github.com/users/brandondahler/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandondahler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandondahler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandondahler/subscriptions",
      "organizations_url": "https://api.github.com/users/brandondahler/orgs",
      "repos_url": "https://api.github.com/users/brandondahler/repos",
      "events_url": "https://api.github.com/users/brandondahler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandondahler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "brandondahler",
      "id": 1155895,
      "node_id": "MDQ6VXNlcjExNTU4OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1155895?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandondahler",
      "html_url": "https://github.com/brandondahler",
      "followers_url": "https://api.github.com/users/brandondahler/followers",
      "following_url": "https://api.github.com/users/brandondahler/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandondahler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandondahler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandondahler/subscriptions",
      "organizations_url": "https://api.github.com/users/brandondahler/orgs",
      "repos_url": "https://api.github.com/users/brandondahler/repos",
      "events_url": "https://api.github.com/users/brandondahler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandondahler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "995cb284cfb234d3d05e29ad5163cacde9a8384b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/995cb284cfb234d3d05e29ad5163cacde9a8384b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/995cb284cfb234d3d05e29ad5163cacde9a8384b"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 21,
      "deletions": 20
    },
    "files": [
      {
        "sha": "b09c65659779840f5b746bdbcc27119ed3b2049c",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b64187d05f327992c304836fe1fc1d276ec80c36/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b64187d05f327992c304836fe1fc1d276ec80c36/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b64187d05f327992c304836fe1fc1d276ec80c36",
        "patch": "@@ -15,7 +15,7 @@ DIST_SUBDIRS = . qt test\n BITCOIN_CORE_H = addrman.h alert.h allocators.h base58.h bignum.h \\\n   bitcoinrpc.h bloom.h chainparams.h checkpoints.h checkqueue.h \\\n   clientversion.h compat.h core.h crypter.h db.h hash.h init.h \\\n-  key.h keystore.h leveldb.h limitedmap.h main.h miner.h mruset.h \\\n+  key.h keystore.h leveldbwrapper.h limitedmap.h main.h miner.h mruset.h \\\n   netbase.h net.h protocol.h script.h serialize.h sync.h threadsafety.h \\\n   txdb.h txmempool.h ui_interface.h uint256.h util.h version.h walletdb.h wallet.h\n \n@@ -33,7 +33,7 @@ version.o: obj/build.h\n \n libbitcoin_a_SOURCES = addrman.cpp alert.cpp allocators.cpp bitcoinrpc.cpp bloom.cpp \\\n   chainparams.cpp checkpoints.cpp core.cpp crypter.cpp db.cpp hash.cpp \\\n-  init.cpp key.cpp keystore.cpp leveldb.cpp main.cpp miner.cpp \\\n+  init.cpp key.cpp keystore.cpp leveldbwrapper.cpp main.cpp miner.cpp \\\n   netbase.cpp net.cpp noui.cpp protocol.cpp rpcblockchain.cpp rpcdump.cpp \\\n   rpcmining.cpp rpcnet.cpp rpcrawtransaction.cpp rpcwallet.cpp script.cpp \\\n   sync.cpp txdb.cpp txmempool.cpp util.cpp version.cpp wallet.cpp walletdb.cpp $(JSON_H) \\"
      },
      {
        "sha": "399208e66c75c08106fe5899fd6cbb6320a620a0",
        "filename": "src/leveldbwrapper.cpp",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b64187d05f327992c304836fe1fc1d276ec80c36/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b64187d05f327992c304836fe1fc1d276ec80c36/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=b64187d05f327992c304836fe1fc1d276ec80c36",
        "patch": "@@ -1,8 +1,8 @@\n-// Copyright (c) 2012 The Bitcoin developers\n+// Copyright (c) 2012-2013 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"leveldb.h\"\n+#include \"leveldbwrapper.h\"\n #include \"util.h\"\n \n #include <leveldb/env.h>\n@@ -35,7 +35,7 @@ static leveldb::Options GetOptions(size_t nCacheSize) {\n     return options;\n }\n \n-CLevelDB::CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool fMemory, bool fWipe) {\n+CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path &path, size_t nCacheSize, bool fMemory, bool fWipe) {\n     penv = NULL;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n@@ -59,7 +59,7 @@ CLevelDB::CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool\n     LogPrintf(\"Opened LevelDB successfully\\n\");\n }\n \n-CLevelDB::~CLevelDB() {\n+CLevelDBWrapper::~CLevelDBWrapper() {\n     delete pdb;\n     pdb = NULL;\n     delete options.filter_policy;\n@@ -70,7 +70,7 @@ CLevelDB::~CLevelDB() {\n     options.env = NULL;\n }\n \n-bool CLevelDB::WriteBatch(CLevelDBBatch &batch, bool fSync) throw(leveldb_error) {\n+bool CLevelDBWrapper::WriteBatch(CLevelDBBatch &batch, bool fSync) throw(leveldb_error) {\n     leveldb::Status status = pdb->Write(fSync ? syncoptions : writeoptions, &batch.batch);\n     HandleError(status);\n     return true;",
        "previous_filename": "src/leveldb.cpp"
      },
      {
        "sha": "b4cc53b50bf19f7abaec8c8b1b137c6cca314890",
        "filename": "src/leveldbwrapper.h",
        "status": "renamed",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b64187d05f327992c304836fe1fc1d276ec80c36/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b64187d05f327992c304836fe1fc1d276ec80c36/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=b64187d05f327992c304836fe1fc1d276ec80c36",
        "patch": "@@ -1,8 +1,9 @@\n-// Copyright (c) 2012 The Bitcoin developers\n+// Copyright (c) 2012-2013 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#ifndef BITCOIN_LEVELDB_H\n-#define BITCOIN_LEVELDB_H\n+\n+#ifndef BITCOIN_LEVELDBWRAPPER_H\n+#define BITCOIN_LEVELDBWRAPPER_H\n \n #include \"serialize.h\"\n #include \"util.h\"\n@@ -20,10 +21,10 @@ class leveldb_error : public std::runtime_error\n \n void HandleError(const leveldb::Status &status) throw(leveldb_error);\n \n-// Batch of changes queued to be written to a CLevelDB\n+// Batch of changes queued to be written to a CLevelDBWrapper\n class CLevelDBBatch\n {\n-    friend class CLevelDB;\n+    friend class CLevelDBWrapper;\n \n private:\n     leveldb::WriteBatch batch;\n@@ -53,7 +54,7 @@ class CLevelDBBatch\n     }\n };\n \n-class CLevelDB\n+class CLevelDBWrapper\n {\n private:\n     // custom environment this database is using (may be NULL in case of default environment)\n@@ -78,8 +79,8 @@ class CLevelDB\n     leveldb::DB *pdb;\n \n public:\n-    CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool fMemory = false, bool fWipe = false);\n-    ~CLevelDB();\n+    CLevelDBWrapper(const boost::filesystem::path &path, size_t nCacheSize, bool fMemory = false, bool fWipe = false);\n+    ~CLevelDBWrapper();\n \n     template<typename K, typename V> bool Read(const K& key, V& value) throw(leveldb_error) {\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -151,4 +152,4 @@ class CLevelDB\n     }\n };\n \n-#endif // BITCOIN_LEVELDB_H\n+#endif // BITCOIN_LEVELDBWRAPPER_H",
        "previous_filename": "src/leveldb.h"
      },
      {
        "sha": "f459f0c71a55310a5b3a3b54d690fed2ee897637",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b64187d05f327992c304836fe1fc1d276ec80c36/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b64187d05f327992c304836fe1fc1d276ec80c36/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=b64187d05f327992c304836fe1fc1d276ec80c36",
        "patch": "@@ -66,7 +66,7 @@ bool CCoinsViewDB::BatchWrite(const std::map<uint256, CCoins> &mapCoins, CBlockI\n     return db.WriteBatch(batch);\n }\n \n-CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory, bool fWipe) : CLevelDB(GetDataDir() / \"blocks\" / \"index\", nCacheSize, fMemory, fWipe) {\n+CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory, bool fWipe) : CLevelDBWrapper(GetDataDir() / \"blocks\" / \"index\", nCacheSize, fMemory, fWipe) {\n }\n \n bool CBlockTreeDB::WriteBlockIndex(const CDiskBlockIndex& blockindex)"
      },
      {
        "sha": "4bc2902a0b987f6237ad37f37a69e9f1ba0ed66d",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b64187d05f327992c304836fe1fc1d276ec80c36/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b64187d05f327992c304836fe1fc1d276ec80c36/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=b64187d05f327992c304836fe1fc1d276ec80c36",
        "patch": "@@ -6,13 +6,13 @@\n #define BITCOIN_TXDB_LEVELDB_H\n \n #include \"main.h\"\n-#include \"leveldb.h\"\n+#include \"leveldbwrapper.h\"\n \n /** CCoinsView backed by the LevelDB coin database (chainstate/) */\n class CCoinsViewDB : public CCoinsView\n {\n protected:\n-    CLevelDB db;\n+    CLevelDBWrapper db;\n public:\n     CCoinsViewDB(size_t nCacheSize, bool fMemory = false, bool fWipe = false);\n \n@@ -26,7 +26,7 @@ class CCoinsViewDB : public CCoinsView\n };\n \n /** Access to the block database (blocks/index/) */\n-class CBlockTreeDB : public CLevelDB\n+class CBlockTreeDB : public CLevelDBWrapper\n {\n public:\n     CBlockTreeDB(size_t nCacheSize, bool fMemory = false, bool fWipe = false);"
      }
    ]
  }
]