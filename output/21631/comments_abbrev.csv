practicalswift,2021-04-07 21:07:29,As mentioned in https://github.com/bitcoin/bitcoin/pull/21630#issuecomment-815259976: a case for `[[nodiscard]]`? :),https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-815265075,815265075,
vasild,2021-04-08 14:55:33,"`424246e46...1c1467f51`: ditch a change that set `errno` and log a generic message if `Sock::Wait()` fails.\n\n@practicalswift in the `SendComplete()` and `RecvUntilTerminator()` methods and in `sock_tests/wait` we call `Wait()` without checking its return value and that's ok. Do you think it is worth adding `[[nodiscard]]` to `Wait()` and complicating the callers to check it even though it is n",https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-815891441,815891441,
practicalswift,2021-04-09 05:45:43,"@vasild Yes, I still think it makes sense. `(void)foo()` is the idiomatic way to express that one is intentionally ignoring the return value of `foo()`. As always: explicit is better than implicit :)",https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-816424858,816424858,
vasild,2021-04-09 07:50:41,"@practicalswift, I agree in general. In this case however there are 6 callers in total, 3 of them check the return value and 3 would have to be cast to `void`. Hmm, where is the threshold? \n\nAlso, the semantic of `Wait()` is such that ignoring the return value is legit.\n\nAnyway, `[[nodiscard]]` is wider topic and is out of the scope of this PR. I will prepare another one to flag the releva",https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-816490652,816490652,
practicalswift,2021-04-09 15:04:51,"> @practicalswift, I agree in general. In this case however there are 6 callers in total, 3 of them check the return value and 3 would have to be cast to `void`. Hmm, where is the threshold?\n> \n> Also, the semantic of `Wait()` is such that ignoring the return value is legit.\n\nI see your point, and your observation may be an indication that `Wait` could be split up in two functions to cover",https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-816748448,816748448,
laanwj,2021-04-12 12:33:32,"Code review ACK 1c1467f51b6dda92dec974eb59026c2c5ba79ed6\nChecked that the exception is caught (in the same function, even). As this fixes a problem, I think whether to use `[[nodiscard]]` is scope for a separate PR.",https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-817772387,817772387,
practicalswift,2021-04-12 13:07:31,cr ACK 1c1467f51b6dda92dec974eb59026c2c5ba79ed6: patch looks correct and agree with laanwj that `[[nodiscard]]` can be taken in a follow-up PR :),https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-817796257,817796257,
vasild,2021-04-12 13:53:53,`Sock` methods flagged with `[[nodiscard]]` in https://github.com/bitcoin/bitcoin/pull/21659.,https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-817831718,817831718,
MarcoFalke,2021-04-13 04:15:07,(removed `@` from OP),https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-818423806,818423806,
MarcoFalke,2021-04-13 04:16:01,(removed `@` from review comment),https://github.com/bitcoin/bitcoin/pull/21631#issuecomment-818424070,818424070,
laanwj,2021-04-07 13:51:16,Isn't assigning to errno from non-libc code discouraged?,https://github.com/bitcoin/bitcoin/pull/21631#discussion_r608674036,608674036,src/util/sock.cpp
vasild,2021-04-07 14:06:00,"I don't know, why would it be discouraged? There are already some assignments elsewhere in the code.\n\nAn alternative would be to introduce `Wait()`'s own error codes, all of which except one map 1:1 to errno values (as returned by `poll()` or `select()`) and one extra error code for this case where the socket is not selectable. Doesn't sound nice.",https://github.com/bitcoin/bitcoin/pull/21631#discussion_r608687199,608687199,src/util/sock.cpp
laanwj,2021-04-07 14:22:32,"I don't know. It really seems like something the operating system / C library does, not the user code.",https://github.com/bitcoin/bitcoin/pull/21631#discussion_r608702201,608702201,src/util/sock.cpp
vasild,2021-04-08 14:45:59,"No errno, no problem.\n\n(removed this change at the expense of a less detailed error message)",https://github.com/bitcoin/bitcoin/pull/21631#discussion_r609781056,609781056,src/util/sock.cpp
