[
  {
    "sha": "b5f1c28bc7d875681ce5f74ea8e32d601c2557b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWYxYzI4YmM3ZDg3NTY4MWNlNWY3NGVhOGUzMmQ2MDFjMjU1N2Iy",
    "commit": {
      "author": {
        "name": "Mason Simon",
        "email": "masonsimon@gmail.com",
        "date": "2018-07-19T01:48:12Z"
      },
      "committer": {
        "name": "Mason Simon",
        "email": "masonsimon@gmail.com",
        "date": "2018-07-19T16:29:43Z"
      },
      "message": "docs: Document lint tests",
      "tree": {
        "sha": "bee8a02826e738a1d4b6b7fd28b5d5a5a4247e7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bee8a02826e738a1d4b6b7fd28b5d5a5a4247e7e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5f1c28bc7d875681ce5f74ea8e32d601c2557b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5f1c28bc7d875681ce5f74ea8e32d601c2557b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5f1c28bc7d875681ce5f74ea8e32d601c2557b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5f1c28bc7d875681ce5f74ea8e32d601c2557b2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 27,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2ccbf22af2a161c0f884c14f3a0794ea77ec2301",
        "filename": "test/README.md",
        "status": "modified",
        "additions": 27,
        "deletions": 4,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5f1c28bc7d875681ce5f74ea8e32d601c2557b2/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5f1c28bc7d875681ce5f74ea8e32d601c2557b2/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/README.md?ref=b5f1c28bc7d875681ce5f74ea8e32d601c2557b2",
        "patch": "@@ -3,17 +3,18 @@ utilities in their entirety. It does not contain unit tests, which\n can be found in [/src/test](/src/test), [/src/wallet/test](/src/wallet/test),\n etc.\n \n-There are currently two sets of tests in this directory:\n+This directory contains the following sets of tests:\n \n - [functional](/test/functional) which test the functionality of \n bitcoind and bitcoin-qt by interacting with them through the RPC and P2P\n interfaces.\n - [util](/test/util) which tests the bitcoin utilities, currently only\n bitcoin-tx.\n+- [lint](/test/lint/) which perform various static analysis checks.\n \n The util tests are run as part of `make check` target. The functional\n-tests are run by the travis continuous build process whenever a pull\n-request is opened. Both sets of tests can also be run locally.\n+tests and lint scripts are run by the travis continuous build process whenever a pull\n+request is opened. All sets of tests can also be run locally.\n \n # Running tests locally\n \n@@ -30,7 +31,7 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n \n #### Running the tests\n \n-Individual tests can be run by directly calling the test script, eg:\n+Individual tests can be run by directly calling the test script, e.g.:\n \n ```\n test/functional/feature_rbf.py\n@@ -180,6 +181,28 @@ Note: gdb attach step may require `sudo`\n Util tests can be run locally by running `test/util/bitcoin-util-test.py`. \n Use the `-v` option for verbose output.\n \n+### Lint tests\n+\n+#### Dependencies\n+\n+The lint tests require a python library called flake8. To install it: `pip3 install flake8`.\n+\n+#### Running the tests\n+\n+Individual tests can be run by directly calling the test script, e.g.:\n+\n+```\n+test/lint/lint-filenames.sh\n+```\n+\n+You can run all the shell-based lint tests by running:\n+\n+```\n+test/lint/lint-all.sh\n+```\n+\n+NOTE: on macOS you may receive warnings like `grep: empty (sub)expression`. To fix, install GNU grep.\n+\n # Writing functional tests\n \n You are encouraged to write functional tests for new or existing features."
      }
    ]
  }
]