[
  {
    "sha": "2b45345aaca9d0091972f983ac6e5c0b09d14777",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjQ1MzQ1YWFjYTlkMDA5MTk3MmY5ODNhYzZlNWMwYjA5ZDE0Nzc3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-02-10T15:31:06Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-03-11T16:26:05Z"
      },
      "message": "minor style cleanups",
      "tree": {
        "sha": "89799ed466274f175aa316f4c9499d7d30667f31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89799ed466274f175aa316f4c9499d7d30667f31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b45345aaca9d0091972f983ac6e5c0b09d14777",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b45345aaca9d0091972f983ac6e5c0b09d14777",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b45345aaca9d0091972f983ac6e5c0b09d14777",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b45345aaca9d0091972f983ac6e5c0b09d14777/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "fbdf4e5efaa612f05a37b1f0d29e8345b45ae1cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbdf4e5efaa612f05a37b1f0d29e8345b45ae1cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbdf4e5efaa612f05a37b1f0d29e8345b45ae1cb"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "836c86483ad2db72790d2c1bf145b11590fb76d6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b45345aaca9d0091972f983ac6e5c0b09d14777/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b45345aaca9d0091972f983ac6e5c0b09d14777/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2b45345aaca9d0091972f983ac6e5c0b09d14777",
        "patch": "@@ -1823,7 +1823,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n         return state.DoS(100,\n                          error(\"ConnectBlock() : coinbase pays too much (actual=%d vs limit=%d)\",\n                                block.vtx[0].GetValueOut(), GetBlockValue(pindex->nHeight, nFees)),\n-                         REJECT_INVALID, \"bad-cb-amount\");\n+                               REJECT_INVALID, \"bad-cb-amount\");\n \n     if (!control.Wait())\n         return state.DoS(100, false);\n@@ -3244,14 +3244,14 @@ void static ProcessGetData(CNode* pfrom)\n                     int nHeight = mi->second->nHeight;\n                     CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n                     if (pcheckpoint && nHeight < pcheckpoint->nHeight) {\n-                       if (!chainActive.Contains(mi->second))\n-                       {\n-                         LogPrintf(\"ProcessGetData(): ignoring request for old block that isn't in the main chain\\n\");\n-                       } else {\n-                         send = true;\n-                       }\n+                        if (!chainActive.Contains(mi->second))\n+                        {\n+                            LogPrintf(\"ProcessGetData(): ignoring request for old block that isn't in the main chain\\n\");\n+                        } else {\n+                            send = true;\n+                        }\n                     } else {\n-                      send = true;\n+                        send = true;\n                     }\n                 }\n                 if (send)\n@@ -3759,7 +3759,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n-        { \n+        {\n             LogPrint(\"mempool\", \"%s from %s %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n                 pfrom->addr.ToString(), pfrom->cleanSubVer,\n                 state.GetRejectReason());"
      },
      {
        "sha": "5ecf9d836514d4cb899a317482e504dcb8694085",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b45345aaca9d0091972f983ac6e5c0b09d14777/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b45345aaca9d0091972f983ac6e5c0b09d14777/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=2b45345aaca9d0091972f983ac6e5c0b09d14777",
        "patch": "@@ -427,6 +427,7 @@ class CMerkleTx : public CTransaction\n {\n private:\n     int GetDepthInMainChainINTERNAL(CBlockIndex* &pindexRet) const;\n+\n public:\n     uint256 hashBlock;\n     std::vector<uint256> vMerkleBranch;"
      },
      {
        "sha": "67503b200b36c0da68befa13dbeaeedd3f3bb2e4",
        "filename": "src/test/checkblock_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b45345aaca9d0091972f983ac6e5c0b09d14777/src/test/checkblock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b45345aaca9d0091972f983ac6e5c0b09d14777/src/test/checkblock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkblock_tests.cpp?ref=2b45345aaca9d0091972f983ac6e5c0b09d14777",
        "patch": "@@ -15,8 +15,7 @@\n \n BOOST_AUTO_TEST_SUITE(CheckBlock_tests)\n \n-bool\n-read_block(const std::string& filename, CBlock& block)\n+bool read_block(const std::string& filename, CBlock& block)\n {\n     namespace fs = boost::filesystem;\n     fs::path testFile = fs::current_path() / \"data\" / filename;"
      }
    ]
  }
]