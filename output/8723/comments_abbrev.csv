jonasschnelli,2016-09-15T06:27:04Z,@dcousens: Yes. I have thought about the split of the two key-chains (internal/external). But the current keypool concept make it a bit more difficult. I guess it could be combined with the feature to allow public key derivation. \n,https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-247246280,247246280,
jonasschnelli,2016-10-20T08:01:40Z,Rebased.\nI hope we can make some progress regarding the flexibility of our HD wallet feature as well as with pub-child-key-derivation.\n,https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-255036269,255036269,
jonasschnelli,2016-10-20T08:02:56Z,"Accidentally closed, reopen.\n",https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-255036549,255036549,
jonasschnelli,2016-11-25T07:41:51Z,"Added the 0.14 milestone label.\nIMO we should support flexible keypaths as well as wallet creation with an initial xpriv.",https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-262897454,262897454,
jmcorgan,2016-12-02T17:20:23Z,"ACK. It works as is, however, I would like to see either a separate keypath scheme for change keys, or a way of specifying both in the existing one. Of course, you'd need to actually implement the split in the wallet code.\n\nWallet creation with an xpriv/keypathscheme would be very useful, however, it brings up the question of restoring a wallet from only those (scanning, gap policy, etc.), vs.",https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-264509412,264509412,
jtimon,2017-01-10T18:09:59Z,"Concept ACK, needs rebase.",https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-271651954,271651954,
DrahtBot,2018-11-08T23:20:53Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-437192746,437192746,
Sjors,2018-11-10T08:45:55Z,I think this should be revisited after adding descriptor support to `import_multi` #14491 and the [ambition](https://github.com/bitcoin/bitcoin/pull/14646#issuecomment-435574146) to turn wallets into descriptor bags. Once that's done this should be a simple matter of adding optional descriptor arguments to `createwallet` so users can pick whatever derivation scheme they prefer.,https://github.com/bitcoin/bitcoin/pull/8723#issuecomment-437568704,437568704,
luke-jr,2016-09-22T08:54:55Z,Maybe the default here should be the current scheme?\n,https://github.com/bitcoin/bitcoin/pull/8723#discussion_r79998624,79998624,src/wallet/wallet.cpp
jonasschnelli,2016-10-20T07:52:46Z,"The default is the current scheme IMO (`DEFAULT_HD_KEYPATH_SCHEME == ""m/0'/0'/k'"" == current scheme`)\n",https://github.com/bitcoin/bitcoin/pull/8723#discussion_r84228602,84228602,src/wallet/wallet.cpp
Sjors,2018-02-08T17:51:52Z,"`self.logger.info(""Testing flexible keypath scheme ..."")`",https://github.com/bitcoin/bitcoin/pull/8723#discussion_r167015950,167015950,qa/rpc-tests/wallet-hd.py
