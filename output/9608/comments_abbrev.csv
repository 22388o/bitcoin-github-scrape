gmaxwell,2017-01-21T19:31:12Z,"This should use a switch statement, not a long if/else cascade. (the extra rescan and whatever checks can be moved inside their respective functions).",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274282847,274282847,
sipa,2017-01-21T19:35:21Z,You can't switch/case on strings.\n,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274283103,274283103,
gmaxwell,2017-01-21T19:51:53Z,"Well damn, I thought it was an enum now.",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274284057,274284057,
gmaxwell,2017-01-21T19:53:20Z,I feel like this just obscures the control flow. :-/,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274284161,274284161,
rebroad,2017-01-23T07:24:01Z,What problem is this PR fixing?,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274416901,274416901,
dcousens,2017-01-23T12:28:07Z,"@rebroad algorithmic readability,  it is simpler to reason about these algorithms,  IMHO,  by these smaller functions than it is otherwise.\n\nconcept ACK\n\n> I feel like this just obscures the control flow. :-/\n\nHow so? ",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274476131,274476131,
jtimon,2017-01-23T14:17:12Z,"> What problem is this PR fixing?\n\nRight, readability and maintainability (ie ease of review for later changes on ProcessMessage). As noted, this can be indented later (although that obscures the git blame).\nIn other projects, having to read more than X nested control flows in function directly goes against the style and smaller functions can be always a solution to that. Others simply don't",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274498709,274498709,
sipa,2017-01-23T16:54:41Z,"> (although that obscures the git blame).\n\nUse `git blame -w`.",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274545939,274545939,
jtimon,2017-01-23T21:32:06Z,Added a couple of commits to hopefully squash.,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274623660,274623660,
gmaxwell,2017-01-26T08:49:41Z,"How does it obscure the control flow? Because there is only one caller to these functions, and they're all called in order. But now looking at the function to considering its invariants you can no longer see where they are called from, what threads they run, what orders things happen in...  As far as nesting goes... it hardly changes the nesting-- just reduces the indentation by one.  It doesn't c",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-275336146,275336146,
jtimon,2017-01-31T22:55:30Z,Needed rebase. Rebased on top of #9659 some changes to use more const can be made even if the separation is not done.,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-276520273,276520273,
jnewbery,2017-03-02T03:27:44Z,"Concept ACK, as long as you change the function names to `ProcessMsg[type]()`. You're proposing to refactor `SendMessages()` in #9579. I'd prefer that function to be split into `SendMsg[type]()` in that PR if you continue. At the moment you have a function here `MsgFeefilter()` for processing a received feefilter message and a function in #9579 called `MsgFeefilter()` for sending a feefilter messa",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-283545547,283545547,
jtimon,2017-03-07T19:58:58Z,Fixed nits ( https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-283545547 https://github.com/bitcoin/bitcoin/pull/9579#discussion_r103590711 ) and rebased without needing it.,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-284840874,284840874,
dcousens,2017-03-07T22:49:17Z,"once over utACK 1d7a16f\n",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-284886215,284886215,
theuni,2017-03-25T04:09:54Z,"Concept ACK, but I don't see this as an improvement without separating control flow and dispatch. I believe that's part of @gmaxwell's concern as well?\n\nAdded that here: https://github.com/theuni/bitcoin/commit/f1e4e281e3f1eb884f8010ac941c82752174bdbe (needs tests). This has the advantage of moving the rules for message acceptance into one place. If the message is deemed suitable, it can be di",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-289187281,289187281,
jtimon,2017-03-25T16:08:55Z,"@theuni At a first glance that looks like an improvement in readability. I'm happy with that being done before or after this, probably before is less disruptive.\n",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-289221324,289221324,
jtimon,2017-04-04T15:45:41Z,Needed rebase.,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-291542008,291542008,
JeremyRubin,2017-04-05T01:29:59Z,@jtimon can you take a look at #10145 as it now does a similar thing.,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-291703286,291703286,
jtimon,2017-05-18T21:54:48Z,Needed rebase,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-302552448,302552448,
jtimon,2017-08-31T02:39:55Z,Needed rebase.,https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-326173209,326173209,
jtimon,2018-02-08T19:15:27Z,"I can reopen and rebase if there's interest, but it seems there has been no interest for a while, so closing.",https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-364218088,364218088,
MarcoFalke,2017-01-23T18:09:02Z,"According to our style guideline all those  curly brackets are on the ""wrong"" line. If we want to stick to the current style guideline, new code should not violate it. If we don't want to stick with the current style guide, we should weaken in with regard to new lines. ",https://github.com/bitcoin/bitcoin/pull/9608#discussion_r97379526,97379526,src/net_processing.cpp
jtimon,2017-01-23T20:43:13Z,"You are completely right, I'm happy correcting this.",https://github.com/bitcoin/bitcoin/pull/9608#discussion_r97411073,97411073,src/net_processing.cpp
