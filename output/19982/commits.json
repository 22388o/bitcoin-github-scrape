[
  {
    "sha": "c5e3e74f70c29ac8852903ef425f5f327d5da969",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWUzZTc0ZjcwYzI5YWM4ODUyOTAzZWY0MjVmNWYzMjdkNWRhOTY5",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-20T08:33:48Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-10T18:46:29Z"
      },
      "message": "sync: Improve CheckLastCritical()\n\nThis commit adds actual lock stack logging if check fails.",
      "tree": {
        "sha": "4c5dacce17a448d00e01a248d36ef03ce78642b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c5dacce17a448d00e01a248d36ef03ce78642b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5e3e74f70c29ac8852903ef425f5f327d5da969",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/SbQUACgkQQQEIES5+\nqB+m9w/8DSFbC8ILW49k6KEItBg68iDd/yZoiADNI6M2vwvF560L3XiNh3OeidYH\nJKjfqlWSYpY10C3MGHcE5kWYVweN0qj7nSuZ39SW/otsvLOdhsbt7mHUB87yjesH\nyd1eS7jy1reMI9WVoavexyqenzI7ZIahU5akjK+SryNLo/BZ1M3DdfX6C0GROFoB\n6vUb97+O92N4TgHPz8CGRz3//llKWwTNQGMHSjOnGmmzLrIDVFtpsZYgh76WSLIg\naRTDHsspI6IOEAJJTVu0YEGw8HNmOic9ZUOaMWhplzygjsJnJqkpumSGsQCePx8m\nGtY7t5Xi+TVj6bJfNKFpoTVLA0xx/aSnm0XONRT2w4wt/GgXhBnfUNnZeo1GP1mI\nCVuHmd4owyLC+svZIzp7pw9I4QTchEmzhkC46oIcuD8ebcLtQk1rSdRdbc0x88Q0\nssL2d4MDrZORQWYuqxQRp8RDXybDQ8nRWYmKDYqXdyLkPNkB6Y0YUJCf5DzqXdjd\nJ9JwgSz7uKaPo5jmzDhZ0uThSZ0vHQf/fRyh/mP8/LMP+uAlJPDSVqiyeDvZTlM5\niMnuCinRW6V+9T6oFx5sw1wIUtuy8lo4BTXza2jJUHRrEhLiDpyjZJj2FHgF1jhH\nrfovKJ0787d5/77E8+fHp55gwVb0sxPXs+63seMzLz8lIErgq7M=\n=CHVC\n-----END PGP SIGNATURE-----",
        "payload": "tree 4c5dacce17a448d00e01a248d36ef03ce78642b9\nparent da957cd62ecc7fde5fa1dfcd134a73b388c2d438\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600590828 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1607625989 +0200\n\nsync: Improve CheckLastCritical()\n\nThis commit adds actual lock stack logging if check fails.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5e3e74f70c29ac8852903ef425f5f327d5da969",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5e3e74f70c29ac8852903ef425f5f327d5da969",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5e3e74f70c29ac8852903ef425f5f327d5da969/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da957cd62ecc7fde5fa1dfcd134a73b388c2d438",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da957cd62ecc7fde5fa1dfcd134a73b388c2d438",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da957cd62ecc7fde5fa1dfcd134a73b388c2d438"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 26,
      "deletions": 16
    },
    "files": [
      {
        "sha": "acfbe8fe29b2bdad9279c261e06568b7309775b5",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 12,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5e3e74f70c29ac8852903ef425f5f327d5da969/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5e3e74f70c29ac8852903ef425f5f327d5da969/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=c5e3e74f70c29ac8852903ef425f5f327d5da969",
        "patch": "@@ -228,20 +228,28 @@ template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);\n \n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line)\n {\n-    {\n-        LockData& lockdata = GetLockData();\n-        std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n-\n-        const LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n-        if (!lock_stack.empty()) {\n-            const auto& lastlock = lock_stack.back();\n-            if (lastlock.first == cs) {\n-                lockname = lastlock.second.Name();\n-                return;\n-            }\n+    LockData& lockdata = GetLockData();\n+    std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n+\n+    const LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n+    if (!lock_stack.empty()) {\n+        const auto& lastlock = lock_stack.back();\n+        if (lastlock.first == cs) {\n+            lockname = lastlock.second.Name();\n+            return;\n         }\n     }\n-    throw std::system_error(EPERM, std::generic_category(), strprintf(\"%s:%s %s was not most recent critical section locked\", file, line, guardname));\n+\n+    LogPrintf(\"INCONSISTENT LOCK ORDER DETECTED\\n\");\n+    LogPrintf(\"Current lock order (least recent first) is:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"%s:%s %s was not most recent critical section locked, details in debug log.\\n\", file, line, guardname);\n+        abort();\n+    }\n+    throw std::logic_error(strprintf(\"%s was not most recent critical section locked\", guardname));\n }\n \n void LeaveCritical()"
      },
      {
        "sha": "7da364d316eb7e658af972574365c5b00c69be53",
        "filename": "src/test/reverselock_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5e3e74f70c29ac8852903ef425f5f327d5da969/src/test/reverselock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5e3e74f70c29ac8852903ef425f5f327d5da969/src/test/reverselock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/reverselock_tests.cpp?ref=c5e3e74f70c29ac8852903ef425f5f327d5da969",
        "patch": "@@ -48,12 +48,14 @@ BOOST_AUTO_TEST_CASE(reverselock_errors)\n     WAIT_LOCK(mutex, lock);\n \n #ifdef DEBUG_LOCKORDER\n+    bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n     // Make sure trying to reverse lock a previous lock fails\n-    try {\n-        REVERSE_LOCK(lock2);\n-        BOOST_CHECK(false); // REVERSE_LOCK(lock2) succeeded\n-    } catch(...) { }\n+    BOOST_CHECK_EXCEPTION(REVERSE_LOCK(lock2), std::logic_error, HasReason(\"lock2 was not most recent critical section locked\"));\n     BOOST_CHECK(lock2.owns_lock());\n+\n+    g_debug_lockorder_abort = prev;\n #endif\n \n     // Make sure trying to reverse lock an unlocked lock fails"
      }
    ]
  },
  {
    "sha": "cb23fe01c125e1820f3c37348e06d98c93e6aec2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjIzZmUwMWMxMjVlMTgyMGYzYzM3MzQ4ZTA2ZDk4YzkzZTZhZWMy",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-20T08:38:03Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-10T18:46:39Z"
      },
      "message": "[skip ci] sync: Check precondition in LEAVE_CRITICAL_SECTION() macro\n\nThis change reveals a bug in the wallet_tests/CreateWalletFromFile test,\nthat will be fixed in the following commit.",
      "tree": {
        "sha": "c0552f04ef7d8af776d7b5947c03ece0db5707f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0552f04ef7d8af776d7b5947c03ece0db5707f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb23fe01c125e1820f3c37348e06d98c93e6aec2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/SbQ8ACgkQQQEIES5+\nqB80+w/+PQYDRwAdEnOW6G4+s1vdB2KamuVGIYtAMZEO2fb/gZjTTIqigeV6HF8t\nqbTM0Nm1rdWbqdwXworio/YBtd0dvqT5feTAEBM7lLcPv4ObMsqlRuXBuIv8AHcu\nHIhNRRKhznLpaFn5qg4aFyuaKdcm9Un4xet9bgZpq7de2RrW0GsXoW15aMNyVO96\nYBrf6wxEWRz8W90CCAha1MOAdHyrsfPJ2oI66pTXt5XjdOkgjCvAaOJQnwAjKwVi\nxOsKoRGaCj9GBFXn/q5Sv+yehBTlaUmvQW91TSv5mU95e5peDE4NLFy2tzXuKJDf\nHUhd45DfyCyg92GFw7ckHlCpXyR1PA2QoLIo96Jd4Tf4PMworvnV+FKjlflJknaC\nFcdodP1nGsOc7BALjox8mYYrCBfnjmNdTaa/w77dE2NNKbZnLaB/PK8NCMqmdtOw\noH3v0Mx3SPwHEw6wRwgQSOfMZVs8NuMXjHM6LcDPknQ8D1WxSVCY4T665Dd/4qzF\nzsH+V4YXGy5vlU4VPqqaDpS57Ja9+sx1Gmjb/PGCATwgXZrSFysKdnbkehs9k4lD\nkexfRc+7pyB1beF7w+Fl84t0aRhvWOBcTEWPgqperAV12T19+isW1VRjtsYQ1wZB\njlj4aZfpMvyjx9EI/kZMLOBzCX4nZE9RSf6FSziQnypiwsq5Zoo=\n=q282\n-----END PGP SIGNATURE-----",
        "payload": "tree c0552f04ef7d8af776d7b5947c03ece0db5707f1\nparent c5e3e74f70c29ac8852903ef425f5f327d5da969\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600591083 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1607625999 +0200\n\n[skip ci] sync: Check precondition in LEAVE_CRITICAL_SECTION() macro\n\nThis change reveals a bug in the wallet_tests/CreateWalletFromFile test,\nthat will be fixed in the following commit.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb23fe01c125e1820f3c37348e06d98c93e6aec2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb23fe01c125e1820f3c37348e06d98c93e6aec2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb23fe01c125e1820f3c37348e06d98c93e6aec2/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5e3e74f70c29ac8852903ef425f5f327d5da969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5e3e74f70c29ac8852903ef425f5f327d5da969",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5e3e74f70c29ac8852903ef425f5f327d5da969"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 43,
      "deletions": 4
    },
    "files": [
      {
        "sha": "749bf5575c4308e4454f05b57274130b1c6e6809",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb23fe01c125e1820f3c37348e06d98c93e6aec2/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb23fe01c125e1820f3c37348e06d98c93e6aec2/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=cb23fe01c125e1820f3c37348e06d98c93e6aec2",
        "patch": "@@ -242,10 +242,12 @@ using DebugLock = UniqueLock<typename std::remove_reference<typename std::remove\n         (cs).lock();                                          \\\n     }\n \n-#define LEAVE_CRITICAL_SECTION(cs) \\\n-    {                              \\\n-        (cs).unlock();             \\\n-        LeaveCritical();           \\\n+#define LEAVE_CRITICAL_SECTION(cs)                                          \\\n+    {                                                                       \\\n+        std::string lockname;                                               \\\n+        CheckLastCritical((void*)(&cs), lockname, #cs, __FILE__, __LINE__); \\\n+        (cs).unlock();                                                      \\\n+        LeaveCritical();                                                    \\\n     }\n \n //! Run code while locking a mutex."
      },
      {
        "sha": "71275f69d981ded79b1d327d3e416dcd1369da78",
        "filename": "src/test/sync_tests.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb23fe01c125e1820f3c37348e06d98c93e6aec2/src/test/sync_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb23fe01c125e1820f3c37348e06d98c93e6aec2/src/test/sync_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sync_tests.cpp?ref=cb23fe01c125e1820f3c37348e06d98c93e6aec2",
        "patch": "@@ -62,6 +62,19 @@ void TestDoubleLock(bool should_throw)\n     g_debug_lockorder_abort = prev;\n }\n #endif /* DEBUG_LOCKORDER */\n+\n+template <typename MutexType>\n+void TestInconsistentLockOrderDetected(MutexType& mutex1, MutexType& mutex2) NO_THREAD_SAFETY_ANALYSIS\n+{\n+    ENTER_CRITICAL_SECTION(mutex1);\n+    ENTER_CRITICAL_SECTION(mutex2);\n+#ifdef DEBUG_LOCKORDER\n+    BOOST_CHECK_EXCEPTION(LEAVE_CRITICAL_SECTION(mutex1), std::logic_error, HasReason(\"mutex1 was not most recent critical section locked\"));\n+#endif // DEBUG_LOCKORDER\n+    LEAVE_CRITICAL_SECTION(mutex2);\n+    LEAVE_CRITICAL_SECTION(mutex1);\n+    BOOST_CHECK(LockStackEmpty());\n+}\n } // namespace\n \n BOOST_FIXTURE_TEST_SUITE(sync_tests, BasicTestingSetup)\n@@ -108,4 +121,28 @@ BOOST_AUTO_TEST_CASE(double_lock_recursive_mutex)\n }\n #endif /* DEBUG_LOCKORDER */\n \n+BOOST_AUTO_TEST_CASE(inconsistent_lock_order_detected)\n+{\n+#ifdef DEBUG_LOCKORDER\n+    bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+#endif // DEBUG_LOCKORDER\n+\n+    RecursiveMutex rmutex1, rmutex2;\n+    TestInconsistentLockOrderDetected(rmutex1, rmutex2);\n+    // By checking lock order consistency (CheckLastCritical) before any unlocking (LeaveCritical)\n+    // the lock tracking data must not have been broken by exception.\n+    TestInconsistentLockOrderDetected(rmutex1, rmutex2);\n+\n+    Mutex mutex1, mutex2;\n+    TestInconsistentLockOrderDetected(mutex1, mutex2);\n+    // By checking lock order consistency (CheckLastCritical) before any unlocking (LeaveCritical)\n+    // the lock tracking data must not have been broken by exception.\n+    TestInconsistentLockOrderDetected(mutex1, mutex2);\n+\n+#ifdef DEBUG_LOCKORDER\n+    g_debug_lockorder_abort = prev;\n+#endif // DEBUG_LOCKORDER\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMWU2OGI2MzA1YmViNDdlYmY3ZWU0OGYxNGUxMmZkZWJkZmVhMWVm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-20T08:54:58Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-12-10T18:49:06Z"
      },
      "message": "test: Fix inconsistent lock order in wallet_tests/CreateWallet",
      "tree": {
        "sha": "060606159ee6710847fe19658071c2815c3126a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/060606159ee6710847fe19658071c2815c3126a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/SbaIACgkQQQEIES5+\nqB8UdA//T6jrWUsfDSDocq4rIT3QCEBOEoXVYdQE3YDoxOJ18/e2PgRnzgiL2WEJ\ncbEkzrKnYCT0x62MkBN0STOynePfrGfsKv11ctfPXjFFRu0FMRgEgQzs0sxEmBfo\nINvIv/h9+fkwBvAAi8dyEfdvOkv8JxYRHPUa3jyYHhQAxHGGwIYDrqqF9aXyajZs\nCoSQmApyutQVts1XwZWPxSXOOWJjjiQR50jNash1yalbjtyls5paDirD0wcKT09x\nccgHDAjGalip5CkMK68v348rH/xE+orykXVpy+QDQwk/eib+7fLi5swCJ6rVZ4He\n/8OH3/qg/V+oxJmEihkFNQb5sRzjLs3ybYx4jQ65YD/J3xZ6MH5JZigEJj2rVF5u\nAAFPtD6u+DCfF+f/rH6sn7pSYF9BmNutZUvYKCXekTdLBKxBgKRg4WS6r1hatIf6\nD74nSzPWIQXGp/H7sR/0+Yxcb7vxd57V7tnHM52ggC4tDrTNX2+2jSqwa4tvjLe4\nxSAhnC4Ty643iHlm1YvwBPcjvugZLYatWPy764xm1MgZGW0vGrWCip4q3HmpNyyL\nBSp3r7h3qcYVXLkMVpoC8qI6FYSOb/Hu17/Kd5i2BpeuujJpIUhLzS/BKVbNKfyt\n05giqfaReQ9+wIfubTmfOEAd+NQpWxmwrLnlUGqKZ54oNbTsisQ=\n=AjaE\n-----END PGP SIGNATURE-----",
        "payload": "tree 060606159ee6710847fe19658071c2815c3126a3\nparent cb23fe01c125e1820f3c37348e06d98c93e6aec2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600592098 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1607626146 +0200\n\ntest: Fix inconsistent lock order in wallet_tests/CreateWallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb23fe01c125e1820f3c37348e06d98c93e6aec2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb23fe01c125e1820f3c37348e06d98c93e6aec2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb23fe01c125e1820f3c37348e06d98c93e6aec2"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a6db261914074d6cba92148f5490e6a1eeaf77d5",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef",
        "patch": "@@ -28,6 +28,8 @@ RPCHelpMan importmulti();\n RPCHelpMan dumpwallet();\n RPCHelpMan importwallet();\n \n+extern RecursiveMutex cs_wallets;\n+\n // Ensure that fee levels defined in the wallet are at least as high\n // as the default levels for node policy.\n static_assert(DEFAULT_TRANSACTION_MINFEE >= DEFAULT_MIN_RELAY_TX_FEE, \"wallet minimum fee is smaller than default relay fee\");\n@@ -761,16 +763,18 @@ BOOST_FIXTURE_TEST_CASE(CreateWallet, TestChain100Setup)\n     // deadlock during the sync and simulates a new block notification happening\n     // as soon as possible.\n     addtx_count = 0;\n-    auto handler = HandleLoadWallet([&](std::unique_ptr<interfaces::Wallet> wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet->wallet()->cs_wallet) {\n+    auto handler = HandleLoadWallet([&](std::unique_ptr<interfaces::Wallet> wallet) EXCLUSIVE_LOCKS_REQUIRED(wallet->wallet()->cs_wallet, cs_wallets) {\n             BOOST_CHECK(rescan_completed);\n             m_coinbase_txns.push_back(CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n             block_tx = TestSimpleSpend(*m_coinbase_txns[2], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n             m_coinbase_txns.push_back(CreateAndProcessBlock({block_tx}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n             mempool_tx = TestSimpleSpend(*m_coinbase_txns[3], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n             BOOST_CHECK(m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error));\n+            LEAVE_CRITICAL_SECTION(cs_wallets);\n             LEAVE_CRITICAL_SECTION(wallet->wallet()->cs_wallet);\n             SyncWithValidationInterfaceQueue();\n             ENTER_CRITICAL_SECTION(wallet->wallet()->cs_wallet);\n+            ENTER_CRITICAL_SECTION(cs_wallets);\n         });\n     wallet = TestLoadWallet(*m_node.chain);\n     BOOST_CHECK_EQUAL(addtx_count, 4);"
      },
      {
        "sha": "01bda27d57c6f9ee11f5f6f981fe8ddca37ef39f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef",
        "patch": "@@ -52,7 +52,7 @@ const std::map<uint64_t,std::string> WALLET_FLAG_CAVEATS{\n \n static const size_t OUTPUT_GROUP_MAX_ENTRIES = 10;\n \n-static RecursiveMutex cs_wallets;\n+RecursiveMutex cs_wallets;\n static std::vector<std::shared_ptr<CWallet>> vpwallets GUARDED_BY(cs_wallets);\n static std::list<LoadWalletFn> g_load_wallet_fns GUARDED_BY(cs_wallets);\n "
      },
      {
        "sha": "986e096056b8aa218b9bfc9a3b5c73058457968e",
        "filename": "test/sanitizer_suppressions/tsan",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef/test/sanitizer_suppressions/tsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef/test/sanitizer_suppressions/tsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/tsan?ref=e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef",
        "patch": "@@ -32,7 +32,6 @@ deadlock:CConnman::ForNode\n deadlock:CConnman::GetNodeStats\n deadlock:CChainState::ConnectTip\n deadlock:UpdateTip\n-deadlock:wallet_tests::CreateWallet\n \n # WalletBatch (unidentified deadlock)\n deadlock:WalletBatch"
      }
    ]
  }
]