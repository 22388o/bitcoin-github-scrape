DrahtBot,2020-09-20 18:46:55,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-695821539,695821539,
promag,2020-09-21 08:59:20,"> This change reveals a bug in the wallet_tests/CreateWalletFromFile test,\nthat will be fixed in the following commit.\n\n@hebasto I'm not following, how is it revealed?",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-695989792,695989792,
hebasto,2020-09-21 09:18:48,"@promag \n> > This change reveals a bug in the wallet_tests/CreateWalletFromFile test,\n> > that will be fixed in the following commit.\n> \n> @hebasto I'm not following, how is it revealed?\n\n```\n$ git checkout 7ac14ec58740226af85401f879f37f09755b990b\n$ ./autogen.sh && ./configure --enable-debug && make clean && make\n$ src/test/test_bitcoin --run_test=wallet_tests/CreateWalletFromFil",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-695998812,695998812,
promag,2020-09-21 09:25:08,"Thanks @hebasto, I tried `make check` instead. I'd suggest to add `[skip ci]` to that commit body",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-696001691,696001691,
hebasto,2020-09-21 09:43:36,"@promag \n> Thanks @hebasto, I tried `make check` instead.\n\n```\n$ make check\n...\n2020-09-21T09:41:56.850457Z [test] INCONSISTENT LOCK ORDER DETECTED\n2020-09-21T09:41:56.850463Z [test] Current lock order (least recent first) is:\n2020-09-21T09:41:56.850470Z [test]  'walletInstance->cs_wallet' in wallet/wallet.cpp:4007 (in thread 'test')\n2020-09-21T09:41:56.850475Z [test]  'cs_wallet",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-696009891,696009891,
hebasto,2020-09-21 09:53:58,"Updated 283ddf104573fcf2ae648147e5ecf24c776246df -> d89c332c597a1129aa9fd3293bd37e7ab90171eb ([pr19982.03](https://github.com/hebasto/bitcoin/commits/pr19982.03) -> [pr19982.04](https://github.com/hebasto/bitcoin/commits/pr19982.04), [diff](https://github.com/hebasto/bitcoin/compare/pr19982.03..pr19982.04)):\n\n- addressed @promag's [comment](https://github.com/bitcoin/bitcoin/pull/19982#issueco",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-696014749,696014749,
promag,2020-09-21 10:08:22,Oh I did't have `--enable-debug`.,https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-696021266,696021266,
ryanofsky,2020-10-27 20:31:10,"Note to anyone else interested in reviewing this that the change is simpler than it probably looks.\n\nThe actual bugfix in the third commit is very straightforward and just two lines. The first two commits are just improvements to error handling and debug output in lock order code, ignoring a big whitespace diff in the first commit.",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-717520816,717520816,
hebasto,2020-10-27 20:50:57,"@ryanofsky \n> @hebasto if you feel like adding more information to #19049, I'd be curious to know more you debugged this, since I gave up there struggling to figure out which locks were involved\n\nOur own lock stack being printed at some points appears very useful for debugging.",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-717531138,717531138,
hebasto,2020-11-14 19:17:39,"Rebased d89c332c597a1129aa9fd3293bd37e7ab90171eb -> e2dc75f88fed8a4c0ca4baab485715001dce03d0 ([pr19982.04](https://github.com/hebasto/bitcoin/commits/pr19982.04) -> [pr19982.05](https://github.com/hebasto/bitcoin/commits/pr19982.05)) due to the conflict with #20285.\n\nAlso updated comments as [requested](https://github.com/bitcoin/bitcoin/pull/19982#discussion_r493716292) by @ariard.",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-727253125,727253125,
hebasto,2020-11-28 20:16:21,Rebased d15646b4accabc2129fb4fa7049fb09c8def1c56 -> f2933e7a8636df9d428f89afb7208d35bb4c4041 ([pr19982.06](https://github.com/hebasto/bitcoin/commits/pr19982.06) -> [pr19982.07](https://github.com/hebasto/bitcoin/commits/pr19982.07)) due to the conflict with #19337.,https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-735285484,735285484,
ryanofsky,2020-12-02 22:03:34,"Notes that might be helpful to other reviewers: https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-717520816.\n\nThe actual fix is very simple and contained in the third commit. The other two commits are error checking improvements.",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-737523159,737523159,
hebasto,2020-12-03 08:50:00,"Updated f2933e7a8636df9d428f89afb7208d35bb4c4041 -> 608e14a2b69665b33df046cb96c74fefa2613969 ([pr19982.07](https://github.com/hebasto/bitcoin/commits/pr19982.07) -> [pr19982.08](https://github.com/hebasto/bitcoin/commits/pr19982.08), [diff](https://github.com/hebasto/bitcoin/compare/pr19982.07..pr19982.08)):\n\n- addressed @vasild's comments",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-737757832,737757832,
practicalswift,2020-12-03 11:28:31,"Concept ACK\n\nNice work!",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-737883018,737883018,
vasild,2020-12-03 14:31:44,ACK 608e14a,https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-738030499,738030499,
hebasto,2020-12-10 18:56:00,Rebased 608e14a2b69665b33df046cb96c74fefa2613969 -> e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef ([pr19982.08](https://github.com/hebasto/bitcoin/commits/pr19982.08) -> [pr19982.09](https://github.com/hebasto/bitcoin/commits/pr19982.09)) due to the conflict with #19425.,https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-742724911,742724911,
MarcoFalke,2020-12-10 19:21:01,"review ACK e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef ðŸ’‚\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK e1e68b6305beb47ebf7ee48f14e12fdebdfea1ef ðŸ’‚\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjlrAv/QIaj8D90XXyl/5Sw/WeG+cGB2diICRF1Pbv4",https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-742739216,742739216,
promag,2020-09-21 10:18:41,"d89c332c597a1129aa9fd3293bd37e7ab90171eb\n\nCan't we refactor the test to remove these (LEAVE/ENTER)CRITICAL_SECTION? Looks like this block could go after `TestLoadWallet`?",https://github.com/bitcoin/bitcoin/pull/19982#discussion_r491934809,491934809,src/wallet/test/wallet_tests.cpp
hebasto,2020-09-21 10:32:48,I don't think so as `HandleLoadWallet()` puts a lambda closure into the `g_load_wallet_fns` which in turn is used by `CWallet::Create()`: https://github.com/bitcoin/bitcoin/blob/b99a1633b270e0e89479b2bb2ae19a8a8dc0fa05/src/wallet/wallet.cpp#L4090-L4092,https://github.com/bitcoin/bitcoin/pull/19982#discussion_r491941592,491941592,src/wallet/test/wallet_tests.cpp
ariard,2020-09-23 15:55:58,If this throw is only exercised in `reverselock_tests` you can comment it's a testing only code path.,https://github.com/bitcoin/bitcoin/pull/19982#discussion_r493706658,493706658,src/sync.cpp
ariard,2020-09-23 16:09:48,"If I understand correctly, the `CheckLastCritical` call added by this commit in `LEAVE_CRITICAL_SECTION` should detect any inconsistent lock order without any modification on the lock stack.\n\nMaybe ""By checking lock order consistency (CheckLastCritical) before any unlocking (LeaveCritical) the lock tracking data must not have been broken by exception""",https://github.com/bitcoin/bitcoin/pull/19982#discussion_r493716292,493716292,src/test/sync_tests.cpp
ariard,2020-09-23 16:58:07,"Okay I looked on, before this commit, behavior is :\n* `TestLoadWallet()` in `src/wallet/test/wallet_tests.cpp` L794.\n* Calling down `CWallet::Create()` which takes the `cs_wallet` lock in `src/wallet/wallet.cpp` L4007 then `cs_wallets` lock in `src/wallet/wallet.cpp` L4089\n* Calling down this handler, which attempt to leave the former first triggering a lock order inconsistency\n\nFor trac",https://github.com/bitcoin/bitcoin/pull/19982#discussion_r493747361,493747361,src/wallet/test/wallet_tests.cpp
hebasto,2020-10-05 11:42:37,"Also it can throw in ""naked"" `LEAVE_CRITICAL_SECTION` that we have in the code base.",https://github.com/bitcoin/bitcoin/pull/19982#discussion_r499535956,499535956,src/sync.cpp
hebasto,2020-10-05 11:51:18,I'll address this comment if the reviewers request any other changes.,https://github.com/bitcoin/bitcoin/pull/19982#discussion_r499540759,499540759,src/test/sync_tests.cpp
hebasto,2020-11-14 20:01:34,[Updated](https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-727253125).,https://github.com/bitcoin/bitcoin/pull/19982#discussion_r523457299,523457299,src/test/sync_tests.cpp
vasild,2020-12-03 07:16:21,"`BOOST_CHECK_EXCEPTION()` can help simplify this:\n\n```suggestion\n    BOOST_CHECK_EXCEPTION(REVERSE_LOCK(lock2), std::logic_error, HasReason(""lock2 was not most recent critical section locked""));\n```",https://github.com/bitcoin/bitcoin/pull/19982#discussion_r534786959,534786959,src/test/reverselock_tests.cpp
vasild,2020-12-03 07:20:33,"ditto:\n```suggestion\n    BOOST_CHECK_EXCEPTION(LEAVE_CRITICAL_SECTION(mutex1), std::logic_error, HasReason(""mutex1 was not most recent critical section locked""));\n```",https://github.com/bitcoin/bitcoin/pull/19982#discussion_r534793642,534793642,src/test/sync_tests.cpp
hebasto,2020-12-03 08:50:38,Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-737757832).,https://github.com/bitcoin/bitcoin/pull/19982#discussion_r534947897,534947897,src/test/reverselock_tests.cpp
hebasto,2020-12-03 08:50:50,[Updated](https://github.com/bitcoin/bitcoin/pull/19982#issuecomment-737757832).,https://github.com/bitcoin/bitcoin/pull/19982#discussion_r534948302,534948302,src/test/sync_tests.cpp
