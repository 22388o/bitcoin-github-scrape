sipa,2015-06-16T14:55:23Z,"utACK for me, with or without deboostification, but needs rebase.\n",https://github.com/bitcoin/bitcoin/pull/6242#issuecomment-112460915,112460915,
jtimon,2015-06-21T13:48:44Z,"Yes, untested ACK apart from the boost discussion.\n",https://github.com/bitcoin/bitcoin/pull/6242#issuecomment-113903180,113903180,
sipa,2015-07-09T13:51:34Z,Still needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6242#issuecomment-119976067,119976067,
Diapolo,2015-07-09T15:29:59Z,@sipa AFAIK @theuni Is travelling currently.\n,https://github.com/bitcoin/bitcoin/pull/6242#issuecomment-120034868,120034868,
theuni,2015-07-28T19:49:52Z,Rebased and dropped the boost change.\n,https://github.com/bitcoin/bitcoin/pull/6242#issuecomment-125734307,125734307,
jtimon,2015-07-29T11:15:21Z,re-utACK.\n,https://github.com/bitcoin/bitcoin/pull/6242#issuecomment-125921777,125921777,
laanwj,2015-08-20T16:06:02Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6242#issuecomment-133061803,133061803,
laanwj,2015-06-06T07:59:19Z,"I vaguely remember that we already went through this change once, but the other way around. The point to use boost here is that it easily transitions to c++11 lingo. I'd like to leave this alone until we do.\n",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r31865868,31865868,src/chainparams.cpp
laanwj,2015-06-06T08:01:38Z,"Same here. Just like with FOREACH, getting rid of simple boost header-only helpers is IMO not a goal, unless they can be transitioned to the appropriate c++11 constructs (which at least is a clear way forwards).\n",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r31865876,31865876,src/chainparams.cpp
laanwj,2015-06-06T08:07:58Z,"Here,\n- only two years ago this was all changed to list_of in the name of newness: 8388289eb6dfc9add233f8f8b536f84caf771fa6\n- Then you changed it to get rid of the global namespace 856e862f4a736fbdc38daae3b7f0fa34e1da317c\n- Then some list_ofs had to be changed to std::vector again a2b04ddfe6452e7d6274f4096bf3f2aee695a6d9 in the name of c++11\n\n... and now we're full circle, back to C-style ini",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r31865912,31865912,src/chainparams.cpp
theuni,2015-06-06T17:55:51Z,"Well in fairness, the last two steps reduced the boost dependency, this just goes the final step and actually removes it. I agree that the gradual touching and ""improving"" can get annoying, but I don't think there's been any flip-flopping here, just small steps.\n\nI understand if you'd rather hold on this and use initializer lists instead, but I may pick up this fight again if this would be usabl",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r31870095,31870095,src/chainparams.cpp
theuni,2015-06-06T17:59:10Z,"It's certainly a goal for me if it means that boost would be required for a lib. I have no problem with boost in app-level code, but I couldn't justify requiring boost for a lib just for syntactic sugar.\n",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r31870112,31870112,src/chainparams.cpp
theuni,2015-06-06T18:00:28Z,"To clarify the above, I'll certainly concede that point and revert this for now, but I'd like to revisit if that scenario arises.\n",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r31870117,31870117,src/chainparams.cpp
laanwj,2015-06-07T06:47:10Z,"But my point is, and has been for years, that using syntactic sugar such as FOREACH makes sense not because I love boost but because c++11 defines similar constructs. When the source code is (finally) switched over this makes them easy to replace. I'm so tired of making this argument, though, that I hope we switch to c++11 soon and leave this behind us.\n",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r31874418,31874418,src/chainparams.cpp
jtimon,2015-06-21T13:47:06Z,"I was also removing boost dependencies from consensus code, but now I am not sure what is preferred. Chainparams is out of consensus and it seems reasonable to move towards c++11.\nBut maybe we want to eventually have a libconsensus not only exposed but also written in C?\nIn any case, I would really like to have a more clear criterion.\nMy idea was ""remove boost when possible"", then @laanwj told ",https://github.com/bitcoin/bitcoin/pull/6242#discussion_r32893618,32893618,src/chainparams.cpp
dcousens,2015-08-20T22:00:25Z,Is the `typedef` needed?\n,https://github.com/bitcoin/bitcoin/pull/6242#discussion_r37586278,37586278,src/chainparams.h
jtimon,2015-08-20T22:17:58Z,It is true that it doesn't add much readability at this point. Maybe you can fix it with a commit to the trivial branch? \n,https://github.com/bitcoin/bitcoin/pull/6242#discussion_r37587665,37587665,src/chainparams.h
dcousens,2015-08-20T22:29:19Z,@theuni would need to rebase said branch to include this.\n,https://github.com/bitcoin/bitcoin/pull/6242#discussion_r37588651,37588651,src/chainparams.h
