[
  {
    "sha": "fa144e6fde1f546a952023af715032cb6789d948",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE0NGU2ZmRlMWY1NDZhOTUyMDIzYWY3MTUwMzJjYjY3ODlkOTQ4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-23T18:27:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-30T14:01:32Z"
      },
      "message": "rpc: Add generatetodescriptor",
      "tree": {
        "sha": "2eb7751e4cb149397fa436d95c9789c8c15989d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2eb7751e4cb149397fa436d95c9789c8c15989d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa144e6fde1f546a952023af715032cb6789d948",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhSMQwAjCMwKS/Y4VvyGBwSYGwU5SZzhi2hjwA/ze2UsjHHC5T2yDW3nexXbuLS\ndeFkTA4WdV/o+xlWdl5QPtyPnBlTBtcjGFYmAOsmVXAy6SDrO08YjcQcH0ZN2the\npBLUDViTdfqp/MtGM3AhMkrlYMhdtyvSKtzYhdLKvtj97831BRifEFQJwS3Nltnb\nVxY3RBAqjPvQoz/VjGpP1QUMoFuAGFamTD4oPR1qIyPrpcZn9rne2qJ8SpUGk7at\nMcxdZYpw72b3KWc7GEDH/8MfCYeGrJKlpuElArAzHUNz03UEPEq0SqVwaxVYwqLR\nVfeJ+WKTeaVNPHLkGAgLb1BDM2uVDCVHvKI5pgKykKCY4MbrYfxt1tUrOZlcBWum\n8cFYv+wjnfmCZGC1A418SuMQuD21GHnBIjikTDxXG+VR2EcRJPolkrChGS9LH1AS\ngxazJp5urrl3ORkY/DZbyTi96cijBtcbYmWNarwhB+N/1LSG/wtZsKvP+SRyz7pE\nwY13smSG\n=bmFH\n-----END PGP SIGNATURE-----",
        "payload": "tree 2eb7751e4cb149397fa436d95c9789c8c15989d7\nparent ecad0a8019fb9e8503ec92b6057a5e649866e25e\nauthor MarcoFalke <falke.marco@gmail.com> 1569263243 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1572444092 -0400\n\nrpc: Add generatetodescriptor\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa144e6fde1f546a952023af715032cb6789d948",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa144e6fde1f546a952023af715032cb6789d948",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa144e6fde1f546a952023af715032cb6789d948/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ecad0a8019fb9e8503ec92b6057a5e649866e25e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecad0a8019fb9e8503ec92b6057a5e649866e25e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ecad0a8019fb9e8503ec92b6057a5e649866e25e"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 50,
      "deletions": 3
    },
    "files": [
      {
        "sha": "dfca1697c12a5b0e0f9b4e7e8a76c050ef9f179a",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa144e6fde1f546a952023af715032cb6789d948/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa144e6fde1f546a952023af715032cb6789d948/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=fa144e6fde1f546a952023af715032cb6789d948",
        "patch": "@@ -30,6 +30,8 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"utxoupdatepsbt\", 1, \"descriptors\" },\n     { \"generatetoaddress\", 0, \"nblocks\" },\n     { \"generatetoaddress\", 2, \"maxtries\" },\n+    { \"generatetodescriptor\", 0, \"num_blocks\" },\n+    { \"generatetodescriptor\", 2, \"maxtries\" },\n     { \"getnetworkhashps\", 0, \"nblocks\" },\n     { \"getnetworkhashps\", 1, \"height\" },\n     { \"sendtoaddress\", 1, \"amount\" },"
      },
      {
        "sha": "9020a616e36b3f0dd8be64a1a288ade03863c27e",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa144e6fde1f546a952023af715032cb6789d948/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa144e6fde1f546a952023af715032cb6789d948/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=fa144e6fde1f546a952023af715032cb6789d948",
        "patch": "@@ -18,7 +18,9 @@\n #include <rpc/blockchain.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n+#include <script/descriptor.h>\n #include <script/script.h>\n+#include <script/signingprovider.h>\n #include <shutdown.h>\n #include <txmempool.h>\n #include <univalue.h>\n@@ -140,6 +142,47 @@ static UniValue generateBlocks(const CScript& coinbase_script, int nGenerate, ui\n     return blockHashes;\n }\n \n+static UniValue generatetodescriptor(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\n+        \"generatetodescriptor\",\n+        \"\\nMine blocks immediately to a specified descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"num_blocks\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"How many blocks are generated immediately.\"},\n+            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The descriptor to send the newly generated bitcoin to.\"},\n+            {\"maxtries\", RPCArg::Type::NUM, /* default */ \"1000000\", \"How many iterations to try.\"},\n+        },\n+        RPCResult{\n+            \"[ blockhashes ]     (array) hashes of blocks generated\\n\"},\n+        RPCExamples{\n+            \"\\nGenerate 11 blocks to mydesc\\n\" + HelpExampleCli(\"generatetodescriptor\", \"11 \\\"mydesc\\\"\")},\n+    }\n+        .Check(request);\n+\n+    const int num_blocks{request.params[0].get_int()};\n+    const int64_t max_tries{request.params[2].isNull() ? 1000000 : request.params[2].get_int()};\n+\n+    FlatSigningProvider key_provider;\n+    std::string error;\n+    const auto desc = Parse(request.params[1].get_str(), key_provider, error, /* require_checksum = */ false);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (desc->IsRange()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Ranged descriptor not accepted. Maybe pass through deriveaddresses first?\");\n+    }\n+\n+    FlatSigningProvider provider;\n+    std::vector<CScript> coinbase_script;\n+    if (!desc->Expand(0, key_provider, coinbase_script, provider)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+    }\n+\n+    CHECK_NONFATAL(coinbase_script.size() == 1);\n+\n+    return generateBlocks(coinbase_script.at(0), num_blocks, max_tries);\n+}\n+\n static UniValue generatetoaddress(const JSONRPCRequest& request)\n {\n             RPCHelpMan{\"generatetoaddress\",\n@@ -961,6 +1004,7 @@ static const CRPCCommand commands[] =\n \n \n     { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n+    { \"generating\",         \"generatetodescriptor\",   &generatetodescriptor,   {\"num_blocks\",\"descriptor\",\"maxtries\"} },\n \n     { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       {\"conf_target\", \"estimate_mode\"} },\n "
      },
      {
        "sha": "1fdc134f97756aec48d5902e258da869b34b1737",
        "filename": "test/functional/rpc_invalidateblock.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa144e6fde1f546a952023af715032cb6789d948/test/functional/rpc_invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa144e6fde1f546a952023af715032cb6789d948/test/functional/rpc_invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_invalidateblock.py?ref=fa144e6fde1f546a952023af715032cb6789d948",
        "patch": "@@ -5,7 +5,7 @@\n \"\"\"Test the invalidateblock RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR\n from test_framework.util import (\n     assert_equal,\n     connect_nodes,\n@@ -62,7 +62,7 @@ def run_test(self):\n         wait_until(lambda: self.nodes[1].getblockcount() == 4, timeout=5)\n \n         self.log.info(\"Verify that we reconsider all ancestors as well\")\n-        blocks = self.nodes[1].generatetoaddress(10, ADDRESS_BCRT1_UNSPENDABLE)\n+        blocks = self.nodes[1].generatetodescriptor(10, ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR)\n         assert_equal(self.nodes[1].getbestblockhash(), blocks[-1])\n         # Invalidate the two blocks at the tip\n         self.nodes[1].invalidateblock(blocks[-1])\n@@ -74,7 +74,7 @@ def run_test(self):\n         assert_equal(self.nodes[1].getbestblockhash(), blocks[-1])\n \n         self.log.info(\"Verify that we reconsider all descendants\")\n-        blocks = self.nodes[1].generatetoaddress(10, ADDRESS_BCRT1_UNSPENDABLE)\n+        blocks = self.nodes[1].generatetodescriptor(10, ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR)\n         assert_equal(self.nodes[1].getbestblockhash(), blocks[-1])\n         # Invalidate the two blocks at the tip\n         self.nodes[1].invalidateblock(blocks[-2])"
      },
      {
        "sha": "97585fe054cad8a09ef4ba3edc10a029a44096c4",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa144e6fde1f546a952023af715032cb6789d948/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa144e6fde1f546a952023af715032cb6789d948/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=fa144e6fde1f546a952023af715032cb6789d948",
        "patch": "@@ -12,6 +12,7 @@\n from . import segwit_addr\n \n ADDRESS_BCRT1_UNSPENDABLE = 'bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj'\n+ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR = 'addr(bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj)#juyq9d97'\n \n \n class AddressType(enum.Enum):"
      }
    ]
  }
]