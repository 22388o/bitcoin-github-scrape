[
  {
    "sha": "115b461b639f1c7b65ab26c0132d69bcb0dea2d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTViNDYxYjYzOWYxYzdiNjVhYjI2YzAxMzJkNjliY2IwZGVhMmQy",
    "commit": {
      "author": {
        "name": "Dan Benjamin",
        "email": "danben@gmail.com",
        "date": "2021-02-23T18:40:37Z"
      },
      "committer": {
        "name": "Dan Benjamin",
        "email": "danben@gmail.com",
        "date": "2021-02-25T18:15:05Z"
      },
      "message": "Added the add_inputs option to the bumpfee RPC. Behavior is identical to that of the same option in the fundrawtransaction RPC.",
      "tree": {
        "sha": "2c1fb4403091490170a0718d109fc8e7e869e515",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c1fb4403091490170a0718d109fc8e7e869e515"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/115b461b639f1c7b65ab26c0132d69bcb0dea2d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/115b461b639f1c7b65ab26c0132d69bcb0dea2d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/115b461b639f1c7b65ab26c0132d69bcb0dea2d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/115b461b639f1c7b65ab26c0132d69bcb0dea2d2/comments",
    "author": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e8116149ca45316e7cdd8ed25ea9a130afd0130",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e8116149ca45316e7cdd8ed25ea9a130afd0130",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e8116149ca45316e7cdd8ed25ea9a130afd0130"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 18,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8c9d318bc8f0f9030f07e98d952ffcd0aeecc76d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/115b461b639f1c7b65ab26c0132d69bcb0dea2d2/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/115b461b639f1c7b65ab26c0132d69bcb0dea2d2/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=115b461b639f1c7b65ab26c0132d69bcb0dea2d2",
        "patch": "@@ -3444,6 +3444,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n                              \"are replaceable).\\n\"},\n                     {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"unset\", std::string() + \"The fee estimate mode, must be one of (case insensitive):\\n\"\n     \"         \\\"\" + FeeModes(\"\\\"\\n\\\"\") + \"\\\"\"},\n+                    {\"add_inputs\", RPCArg::Type::STR, /* default */ \"as_needed\", \"For a transaction with existing inputs, automatically include more if they are not enough.\"},\n                 },\n                 \"options\"},\n         },\n@@ -3494,6 +3495,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n                 {\"fee_rate\", UniValueType()}, // will be checked by AmountFromValue() in SetFeeEstimateMode()\n                 {\"replaceable\", UniValueType(UniValue::VBOOL)},\n                 {\"estimate_mode\", UniValueType(UniValue::VSTR)},\n+                {\"add_inputs\", UniValueType(UniValue::VSTR)},\n             },\n             true, true);\n \n@@ -3506,6 +3508,11 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n         if (options.exists(\"replaceable\")) {\n             coin_control.m_signal_bip125_rbf = options[\"replaceable\"].get_bool();\n         }\n+\n+        if (options.exists(\"add_inputs\")) {\n+            coin_control.m_add_inputs = options[\"add_inputs\"].get_str() == \"as_needed\";\n+        }\n+\n         SetFeeEstimateMode(*pwallet, coin_control, conf_target, options[\"estimate_mode\"], options[\"fee_rate\"], /* override_min_fee */ false);\n     }\n "
      },
      {
        "sha": "c5f817700d4d8f538d369c9d9ea5f0fea834f82b",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/115b461b639f1c7b65ab26c0132d69bcb0dea2d2/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/115b461b639f1c7b65ab26c0132d69bcb0dea2d2/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=115b461b639f1c7b65ab26c0132d69bcb0dea2d2",
        "patch": "@@ -67,12 +67,12 @@ def run_test(self):\n         self.log.info(\"Mining blocks...\")\n         peer_node.generate(110)\n         self.sync_all()\n-        for _ in range(25):\n+        for _ in range(26):\n             peer_node.sendtoaddress(rbf_node_address, 0.001)\n         self.sync_all()\n         peer_node.generate(1)\n         self.sync_all()\n-        assert_equal(rbf_node.getbalance(), Decimal(\"0.025\"))\n+        assert_equal(rbf_node.getbalance(), Decimal(\"0.026\"))\n \n         self.log.info(\"Running tests\")\n         dest_address = peer_node.getnewaddress()\n@@ -93,6 +93,7 @@ def run_test(self):\n         test_change_script_match(self, rbf_node, dest_address)\n         test_settxfee(self, rbf_node, dest_address)\n         test_maxtxfee_fails(self, rbf_node, dest_address)\n+        test_add_inputs(self, rbf_node, dest_address)\n         # These tests wipe out a number of utxos that are expected in other tests\n         test_small_output_with_feerate_succeeds(self, rbf_node, dest_address)\n         test_no_more_inputs_fails(self, rbf_node, dest_address)\n@@ -590,5 +591,13 @@ def test_no_more_inputs_fails(self, rbf_node, dest_address):\n     self.clear_mempool()\n \n \n+def test_add_inputs(self, rbf_node, dest_address):\n+    self.log.info('Test that the add_inputs option behaves properly')\n+    rbfid = spend_one_input(rbf_node, dest_address, change_size=0)\n+    assert_raises_rpc_error(-4, \"Unable to create transaction. Insufficient funds\", rbf_node.bumpfee, rbfid, {\"add_inputs\":\"false\"})\n+    rbf_node.bumpfee(rbfid)\n+    self.clear_mempool()\n+\n+\n if __name__ == \"__main__\":\n     BumpFeeTest().main()"
      }
    ]
  }
]