DrahtBot,2020-04-30 17:57:50,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18772 (rpc: calculate fees in getblock using BlockUndo data by robot-visions)\n\nIf you consider this pull request import",https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-622009614,622009614,
brakmic,2020-05-01 09:05:46,"ACK 2a52c3c4caaf8dbe5c3d406c2fc7b1fd4347d0fd\n\nBuilt, run and tested on macOS Catalina 10.15.4\n\nRegarding functional tests, I'd recommend to expand `wallet_basic.py`.\nYou could, for example, add to the end of `run_test` method the following lines:\n\n```python\nwitnesses = tx[""decoded""][""vin""][0]['txinwitness']\nfor witness in witnesses:\n    assert_is_hex_string(witness)\n```\n",https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-622310931,622310931,
rvagg,2020-05-04 02:47:51,"OK, I figured out how to get it wired up into the functional tests, see latest commit exercising this new field successfully. Thanks @brakmic & @promag, PTAL.",https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-623233984,623233984,
brakmic,2020-05-04 07:45:49,Re-ACK 3a20ee8a1c0f86fb7628240f144d02fb6a32022d,https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-623310028,623310028,
luke-jr,2020-05-04 15:44:43,utACK,https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-623542441,623542441,
rvagg,2020-05-05 04:29:16,"Moved to feature_segwit.py as suggested. It's a more logical place for it to be, but there's not really anything else in there testing anything similar so it doesn't seem perfectly in place. But perhaps that's just a matter of increasing the coverage in general.",https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-623851160,623851160,
rvagg,2020-05-08 02:21:25,"Squashed the fixups and rebased to master, I think there was a rebasing problem previously and I ended up with stray commits. It should just be the two commits in here now and should be ready for landing if there are no further suggestions or objections.",https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-625592383,625592383,
MarcoFalke,2020-05-08 11:02:23,ACK 34645c4dd04f1e9bc199fb722de0bb397ec0e131,https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-625762394,625762394,
rvagg,2020-05-27 05:29:08,Wondering what the process is for getting things merged in this project? This is not super urgent but it'd be nice to know if it's in a process and not going to get lost.,https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-634437365,634437365,
MarcoFalke,2020-05-27 11:41:53,"@rvagg There is a very loose process described in CONTRIBUTING.md\n\nI was hoping that someone else reviews this, because it is a relatively easy rpc change. If no one else reviews it, I will merge it at some point because it is a clear improvement.",https://github.com/bitcoin/bitcoin/pull/18826#issuecomment-634604728,634604728,
MarcoFalke,2020-05-04 23:17:57,"not sure why this in in the wallet test. It seems blockchain or segwit related. You can put it in `./test/functional/feature_segwit.py` (or ./test/functional/rpc_blockchain.py if you prefer).\n\nAlso, this assert can be left out. The next line will throw KeyError and fail the test when txinwitness is not found.",https://github.com/bitcoin/bitcoin/pull/18826#discussion_r419783601,419783601,test/functional/wallet_basic.py
MarcoFalke,2020-05-04 23:19:04,"```suggestion\n        assert_equal(witnesses[0], '00'*32)\n```\n\nI think Bitcoin Core uses all zeros as the nonce by default, so you could just directly check this here. Though, your check also works.",https://github.com/bitcoin/bitcoin/pull/18826#discussion_r419783951,419783951,test/functional/wallet_basic.py
rvagg,2020-05-05 04:07:15,"Yep, it does, and I think I'll switch to your explicit check -- if Bitcoin Core ever changes to some other strategy then having to update the tests as an explicit acknowledgement of that would probably be a good idea. Thanks.",https://github.com/bitcoin/bitcoin/pull/18826#discussion_r419852796,419852796,test/functional/wallet_basic.py
