[
  {
    "sha": "1b2bc71de158ae272933e74450836f43a1fe55fc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYjJiYzcxZGUxNThhZTI3MjkzM2U3NDQ1MDgzNmY0M2ExZmU1NWZj",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-07-08T18:31:13Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-07-08T18:31:13Z"
      },
      "message": "Improved logging and Decimal support",
      "tree": {
        "sha": "bdf0e1a3451d725d5d012f1edd6c4f588e01b590",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdf0e1a3451d725d5d012f1edd6c4f588e01b590"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b2bc71de158ae272933e74450836f43a1fe55fc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlO8OPEACgkQdYgkL74406gU0wCcCddcbKGvh4HkGm//4Q3ZvIv9\ny2sAn15FjoN+X0J98+sDQE/csrERbBoe\n=oYlG\n-----END PGP SIGNATURE-----",
        "payload": "tree bdf0e1a3451d725d5d012f1edd6c4f588e01b590\nparent 418d4ad110965b1830b094dc88993966f901d2e6\nauthor Gavin Andresen <gavinandresen@gmail.com> 1404844273 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1404844273 -0400\n\nImproved logging and Decimal support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b2bc71de158ae272933e74450836f43a1fe55fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1b2bc71de158ae272933e74450836f43a1fe55fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b2bc71de158ae272933e74450836f43a1fe55fc/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "418d4ad110965b1830b094dc88993966f901d2e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/418d4ad110965b1830b094dc88993966f901d2e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/418d4ad110965b1830b094dc88993966f901d2e6"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 23,
      "deletions": 7
    },
    "files": [
      {
        "sha": "bc7d655fdfe97c912d945c5d534948dc6848623c",
        "filename": "qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py",
        "status": "modified",
        "additions": 23,
        "deletions": 7,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b2bc71de158ae272933e74450836f43a1fe55fc/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b2bc71de158ae272933e74450836f43a1fe55fc/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py?ref=1b2bc71de158ae272933e74450836f43a1fe55fc",
        "patch": "@@ -39,8 +39,9 @@\n except ImportError:\n     import httplib\n import base64\n-import json\n import decimal\n+import json\n+import logging\n try:\n     import urllib.parse as urlparse\n except ImportError:\n@@ -50,14 +51,22 @@\n \n HTTP_TIMEOUT = 30\n \n+log = logging.getLogger(\"BitcoinRPC\")\n \n class JSONRPCException(Exception):\n     def __init__(self, rpc_error):\n         Exception.__init__(self)\n         self.error = rpc_error\n \n \n+def EncodeDecimal(o):\n+    if isinstance(o, decimal.Decimal):\n+        return round(o, 8)\n+    raise TypeError(repr(o) + \" is not JSON serializable\")\n+\n class AuthServiceProxy(object):\n+    __id_count = 0\n+\n     def __init__(self, service_url, service_name=None, timeout=HTTP_TIMEOUT, connection=None):\n         self.__service_url = service_url\n         self.__service_name = service_name\n@@ -66,7 +75,6 @@ def __init__(self, service_url, service_name=None, timeout=HTTP_TIMEOUT, connect\n             port = 80\n         else:\n             port = self.__url.port\n-        self.__id_count = 0\n         (user, passwd) = (self.__url.username, self.__url.password)\n         try:\n             user = user.encode('utf8')\n@@ -99,12 +107,14 @@ def __getattr__(self, name):\n         return AuthServiceProxy(self.__service_url, name, connection=self.__conn)\n \n     def __call__(self, *args):\n-        self.__id_count += 1\n+        AuthServiceProxy.__id_count += 1\n \n+        log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self.__service_name,\n+                                 json.dumps(args, default=EncodeDecimal)))\n         postdata = json.dumps({'version': '1.1',\n                                'method': self.__service_name,\n                                'params': args,\n-                               'id': self.__id_count})\n+                               'id': AuthServiceProxy.__id_count}, default=EncodeDecimal)\n         self.__conn.request('POST', self.__url.path, postdata,\n                             {'Host': self.__url.hostname,\n                              'User-Agent': USER_AGENT,\n@@ -121,7 +131,8 @@ def __call__(self, *args):\n             return response['result']\n \n     def _batch(self, rpc_call_list):\n-        postdata = json.dumps(list(rpc_call_list))\n+        postdata = json.dumps(list(rpc_call_list), default=EncodeDecimal)\n+        log.debug(\"--> \"+postdata)\n         self.__conn.request('POST', self.__url.path, postdata,\n                             {'Host': self.__url.hostname,\n                              'User-Agent': USER_AGENT,\n@@ -136,5 +147,10 @@ def _get_response(self):\n             raise JSONRPCException({\n                 'code': -342, 'message': 'missing HTTP response from server'})\n \n-        return json.loads(http_response.read().decode('utf8'),\n-                          parse_float=decimal.Decimal)\n+        responsedata = http_response.read().decode('utf8')\n+        response = json.loads(responsedata, parse_float=decimal.Decimal)\n+        if \"error\" in response and response[\"error\"] is None:\n+            log.debug(\"<-%s- %s\"%(response[\"id\"], json.dumps(response[\"result\"], default=EncodeDecimal)))\n+        else:\n+            log.debug(\"<-- \"+responsedata)\n+        return response"
      }
    ]
  }
]