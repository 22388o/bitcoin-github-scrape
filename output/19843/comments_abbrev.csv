promag,2020-08-31 12:37:40,"Build failing\n```\nnet_processing.cpp:2478:27: error: writing variable 'm_next_local_addr_send' requires holding mutex 'pfrom.cs_sendProcessing' exclusively [-Werror,-Wthread-safety-analysis]\n                    pfrom.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n```",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-683752038,683752038,
DrahtBot,2020-08-31 12:38:51,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20864 (net: Move SocketSendData lock annotation to header by MarcoFalke)\n* #20729 (p2p: standardize on outbound-{full, b",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-683752544,683752544,
hebasto,2020-09-21 07:46:43,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-695957307,695957307,
naumenkogs,2020-10-05 08:17:03,"@amitiuttarwar how would you suggest to split the first commit into two? I'd be happy to take suggestions :)\nI don't see a way to do it, because the refactor is to merge two *a little different* chunks of code into one (`AdvertiseLocal`). \n\nThe only way I see is to add a flag to `AdvertiseLocal` to discern the two, and then drop the flag right in the next commit (""behaviour change""). But do ",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-703478443,703478443,
robot-dreams,2020-10-06 08:59:03,"Per @amitiuttarwar 's suggestion, here's one way I might split your first commit 89c77a015a3ad14d1c05b4b975ed6532392e4654 into two separate parts for easier review:\n\n* Refactoring-only changes: e4bca91105d580d11d977e397b78cee28728ef8f\n* Behavior changes: 1ca2235aaa3cba43e2a1dbccaa89aa8577f91152\n\nAlternatively, here's a more fine-grained approach, in which I split your first commit 89c77a",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-704131702,704131702,
naumenkogs,2020-10-06 11:11:13,"@jnewbery thanks for the feedback, all addressed.\nI agree with your hesitation regarding the further commit. It probably doesn't change behavior at all, I just thought it would make it easier to understand what's going on (despite adding 2 extra lines).\n\nLet's see others' preferences, I'm fine with dropping this commit too.",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-704197957,704197957,
jnewbery,2020-10-13 11:35:22,"> The only behavior change is that the following will be also applied to the first (pre-VERACK) self-announcement:\n\n> // If discovery is enabled, sometimes give our peer the address it\n// tells us that it sees us as in case it has a better idea of our\n// address than we do.\n\n> And I think it's a good change anyway.\n\nI've been trying to work out whether that really is a good change.",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-707679704,707679704,
jnewbery,2020-10-13 11:38:30,"The _Refactor AdvertiseLocal_ commit is a bit of a jumble - it's changing function signatures, removing declarations, moving comments around, changing where variables are checked from functions to their callers and more. I'm sorry, that might have been because I've asked you to do too much in this PR. I'd suggest either removing some of those tidy-ups, or split the commit out, so it's obvious for ",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-707681181,707681181,
naumenkogs,2020-12-09 11:28:23,"Took @jnewbery's branch and added suggestions from @sipa.\n\n>I think we can make the logic much simpler by always calling PushAddress() with both addresses (as long as we think they're routable).\n\nYeah, good point. Not only it makes the code simpler, but also makes addr relay better without negative side-effects (I think from the first grasp).\nI think it deserves a separate PR though.",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-741712168,741712168,
naumenkogs,2020-12-09 12:40:09,"~~As I noticed [here](https://github.com/bitcoin/bitcoin/pull/19843#discussion_r539253278), the current code had some ambiguity. We send initial AdvertiseLocal only if we receive VERSION before VERACK from the peer (see `fSuccessfullyConnected`).~~\n\n~~I see two alternatives to fix this:~~\nIt's unclear when we should really do AdvertiseLocal for the first time:\n1. Do AdvertiseLocal on VERSI",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-741745405,741745405,
naumenkogs,2020-12-09 14:50:49,No clue why fuzzing fails. cc @MarcoFalke ,https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-741821043,741821043,
MarcoFalke,2020-12-09 15:04:55,"```\nfatal: unable to access 'https://github.com/bitcoin-core/qa-assets/': Failed to connect to github.com port 443: Connection timed out",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-741829812,741829812,
naumenkogs,2020-12-10 20:41:43,"Okay, so a bunch of new stuff.\n\n1. I do think AdvertiseLocal encompasses PushAddress(self) on VERSION: both of them are non-IBD, and sending out ADDRs happens *after* both of them, so dropping the VERSION-one should have no impact. I do it in ""[net] Don't PushAddress(self) on VERSION"".\n2. Well, the only another difference is that there's a probability that VERSION-one will push how-we-see-us",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-742786041,742786041,
DrahtBot,2021-01-07 15:06:39,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-756172520,756172520,
naumenkogs,2021-04-16 09:28:08,"Much changed since I opened this PR. Pretty sure dropping a redundant self-announcement from `ProcessMessage` still makes sense, but perhaps we should revisit that after #21186 lands.",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-821047626,821047626,
jnewbery,2021-07-23 10:37:46,"> Pretty sure dropping a redundant self-announcement from ProcessMessage still makes sense, but perhaps we should revisit that after #21186 lands.\n\n@naumenkogs - do you plan on picking this up now that #21186 is merged? Should we mark this PR up for grabs?",https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-885551229,885551229,
naumenkogs,2021-07-23 11:03:11,@jnewbery Yeah I'd be happy to let someone else lead this. Let's mark it up for grabs.,https://github.com/bitcoin/bitcoin/pull/19843#issuecomment-885562927,885562927,
amitiuttarwar,2020-10-02 16:53:50,shouldn't the `cs_sendProcessing` be acquired here? I'm slightly confused because I'd expect a CI job to fail since `m_next_local_addr_send` has the `GUARDED_BY(cs_sendProcessing)` safety annotation. am I missing something? ,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r498937654,498937654,src/net_processing.cpp
robot-dreams,2020-10-04 18:47:01,Is it the case that this entire `SendMessages` call is locked? https://github.com/bitcoin/bitcoin/blob/df2129a2349b1877049f250551f49a4592e73765/src/net.cpp#L2164-L2168,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499276450,499276450,src/net_processing.cpp
Xekyo,2020-10-05 17:01:36,"```suggestion\n    // In absence of other information, we assume that the locally seen address is the ""best"" addr for peers to refer to our node.\n```",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499743996,499743996,src/net.cpp
Xekyo,2020-10-05 17:08:25,"This comment confuses me. If Peer_A gave us ""the address it tells us that it sees us as"", why would we need to give Peer_A our address?\n\nIs this comment supposed to mean that we sometimes refer to ourselves as the address that another peer gave us? I.e. we heard from Peer_A that they know us as `addrRemote`, and we sometimes announce our address to another peer `Peer_B` as `addrRemote` instead",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499747657,499747657,src/net.cpp
Xekyo,2020-10-05 17:12:10,"I am not sure whether I am understanding this right. Is this suggesting that we keep track of each `addr` that some peer refers to us as separately, or are we catering to the possibility that our IP from remote looks different than what we see locally?",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499749612,499749612,src/net.cpp
Xekyo,2020-10-05 17:17:23,It looks to me as if we are updating here the address that we think we are reachable on per the information of a peer. Would it be possible for different peers to see us at different addresses (e.g. if our node has a client in our LAN)? How do we verify that the address is a good address to adopt?,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499752581,499752581,src/net.cpp
Xekyo,2020-10-05 17:18:38,"```suggestion\n * to relay to a given node as scheduled. The relay is not guaranteed.\n```",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499753279,499753279,src/net.h
Xekyo,2020-10-05 17:37:38,"Since `addrLocal` seems to be a local variable here, would it make sense to change it to `addr_local`? My understanding is that per style guide variable symbols should prefer to use snake_case.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499763658,499763658,src/net.cpp
amitiuttarwar,2020-10-05 23:19:36,ahhh üí°  that makes sense. thanks! ,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r499922947,499922947,src/net_processing.cpp
naumenkogs,2020-10-06 07:17:53,">we keep track of each addr that some peer refers to us as separately, or are we catering to the possibility that our IP from remote looks different than what we see locally?\n\nSort of both :)\nA remote peer always tells us via which IP they see us (within VERSION message, see `addrMe` field there). Then, we store this to consider in future. Among all these options, we sometimes choose the bes",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500055283,500055283,src/net.cpp
naumenkogs,2020-10-06 07:20:24,"Hopefully [this](https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500055283) comment answers.\n\nWhy we give it to them? Because we ask them to *forward* our self-announcement to other nodes. Peer_A is not supposed currently to modify an `ADDR` they receive, so they just take what we give them and forward it.\n\nYou are right that they could, but it has other implications...",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500056598,500056598,src/net.cpp
naumenkogs,2020-10-06 07:25:21,">Would it be possible for different peers to see us at different addresses (e.g. if our node has a client in our LAN)?\n\nYes, see `SeenLocal` and `GetLocal`, it's an under-documented scoring scheme.\n\nYou are right that it's not the most robust feature, someone can trick us to believe something wrong, but the harm is limited I guess.\n\nThis feature is definitely worth extra research and d",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500059166,500059166,src/net.cpp
naumenkogs,2020-10-06 07:27:43,"Even though it looks like I rewrote the whole method, most of the changes is just moving the code out of the `{}` block. I chose to preserve variable names to make review easier. I prefer to not touch existing variable names, unless it's really easy, or if I'm changing their type for example.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500060454,500060454,src/net.cpp
jnewbery,2020-10-06 09:38:08,join with line above while you're touching this,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500140568,500140568,src/net.cpp
jnewbery,2020-10-06 09:38:34,add blank line above and join `{` below onto this line.,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500140845,500140845,src/net.cpp
jnewbery,2020-10-06 09:39:23,s/Adds/Add/ (make function doxygen comments the indicative case),https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500141353,500141353,src/net.h
jnewbery,2020-10-06 09:40:41,"Since you're completely refactoring this function and both call sites, you may as well fix the signature to take a `CNode&` instead of a `CNode*`. I think you may also be able to make it a const reference.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500142152,500142152,src/net.cpp
jnewbery,2020-10-06 09:41:20,Please don't change `::ChainstateActive` to `m_chainman.ActiveChainstate` in this PR. It adds noise for reviewers.,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500142539,500142539,src/net_processing.cpp
jnewbery,2020-10-06 09:42:02,This mutex shouldn't actually be guarding `m_next_local_addr_send`. See https://github.com/bitcoin/bitcoin/pull/13123#issuecomment-647505130. You may as well remove that annotation if you're touching all the places where this variable is used.,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500142933,500142933,src/net_processing.cpp
naumenkogs,2020-10-06 10:53:19,I don't think const reference is possible due to `PushAddress` call.,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500182214,500182214,src/net.cpp
Xekyo,2020-10-06 20:49:42,"Okay, so we are giving `Peer_A` the address they gave us to forward to its peers. Now that makes more sense to me. :)",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500587078,500587078,src/net.cpp
mzumsande,2020-10-06 20:54:41,"You removed too much here! Since `m_next_local_addr_send` is left uninitialized, `p2p_node_network_limited.py` fails intermittently.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500589695,500589695,src/net.h
Xekyo,2020-10-06 20:55:03,"In one line this is dropping only `GUARDED_BY(cs_sendProcessing)`, in the other line the `{0}` is also dropped. Is it possible that both lines should either drop or retain the `{0}`?",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500589908,500589908,src/net.h
Xekyo,2020-10-06 21:02:08,"How about:\n\n```\n// If discovery is enabled, we request that peers advertise our node to their peers. \n// Under some circumstances, our peers may have a more accurate perspective \n// on our address than our own node. Sometimes, we ask our peer to advertise \n// our node under the address they see us as at instead of the address that our \n// node thinks it has.\n```",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500593775,500593775,src/net.cpp
Xekyo,2020-10-06 21:07:11,"If we hear multiple addresses for ourselves from peers, how do we determine ""best""?",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500596241,500596241,src/net.h
fjahr,2020-10-06 21:14:35,@naumenkogs Was it on purpose that you left the original comment in while also adding the suggestion? Just checking...,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500599829,500599829,src/net.cpp
fjahr,2020-10-06 21:46:55,Same here as https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500142539 concerning `::ChainstateActive()`?,https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500614931,500614931,src/net_processing.cpp
naumenkogs,2020-10-07 06:25:10,"Yes it was. It still applies, I'm just adding a bit clarification I hope :)",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500764505,500764505,src/net.cpp
naumenkogs,2020-10-07 06:31:40,"Sounds good, thanks!",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500767101,500767101,src/net.cpp
naumenkogs,2020-10-07 06:34:12,"Expanded this comment a bit to refer to `GetLocal`.\nEvaluating the security of `GetLocal` is on my TODO list, but for now we can assume it works I guess...",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r500768077,500768077,src/net.h
hebasto,2020-10-10 12:02:57,"6dc9c7535daa931d7f747958d0dc6fa29417dd80 please remove trailing space to make linter happy:\n```suggestion\n    // If discovery is enabled, we request that peers advertise our node to their peers.\n    // Under some circumstances, our peers may have a more accurate perspective\n    // on our address than our own node. Sometimes, we ask our peer to advertise\n    // our node under the address ",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r502783353,502783353,src/net.cpp
jnewbery,2020-10-12 13:29:04,"This is wrong. `CService` shouldn't be const, and making it const here makes this declaration different from the definition in the cpp file.\n\nIn fact, this declaration could just be removed entirely from this header file since the function isn't used outside the translation unit. You could also make it static in the cpp file to remove external linkage.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r503296373,503296373,src/net.h
jnewbery,2020-10-12 13:30:04,"I suggest removing this. The fact that addresses added to `vAddrToSend` are not guaranteed to be sent is not a property of `AdvertiseLocal`, so the comment shouldn't be here.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r503296982,503296982,src/net.h
jnewbery,2020-10-12 13:41:38,"It might actually be better to turn these into atomics now that they're being accessed in both SendMessages and ProcessMessages. We know that those functions always run single threaded, but if someone exposes these values through an RPC then there' the potential of a data race.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r503304343,503304343,src/net.h
mzumsande,2020-10-15 20:08:40,"A question I had during last week's review club meeting:\nSince this PR unifies the two spots from which self-advertisements are sent (`ProcessMessage` -> VERSION only to outbound peers, and `SendMessages` also to inbound peers) - Does this call during VERSION processing still have a point? \nIf we simply removed it, wouldn't we self-advertise a few moment later anyway after we are successfully ",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r505808735,505808735,src/net_processing.cpp
sipa,2020-12-07 23:03:59,"In commit """"Refactor AdvertiseLocal"".\n\nThe addition of `pto->fSuccessfullyConnected` here is unnecessary; `SendMessages()` returns early if that isn't the case (see line 4064 in commit 2a0e47909fab5c831031e35e871626b463dfee1c).",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r537899813,537899813,src/net_processing.cpp
sipa,2020-12-07 23:06:14,"In commit ""Refactor AdvertiseLocal "":\n\n\nThe `pnode->fSuccessfullyConnected` condition is dropped here. It's pointless as all AdvertiseLocal call sites guarantee that condition is satisfied anyway, but perhaps add it as an assert?",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r537900878,537900878,src/net.cpp
sipa,2020-12-08 00:07:31,"In commit ""Unify self-announcement behavior"".\n\nThere is no perfect overlap between the two mechanisms that trigger announcing. This one only sends to outbound connections, but does so even during IBD. The other periodic one also sends to inbound connections, but not during IBD.\n\nI don't know if there is a point to keeping this one.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r537930294,537930294,src/net_processing.cpp
naumenkogs,2020-12-09 09:50:49,"Yeah, I also don't have a good answer here.\nAs Pieter notices, it's not *that* pointless, because of the send-during-IBD property. Now, whether that's something we want is an open question and requires understanding the expectations from addr relay as a whole.\nI think this could be discussed/implemented separately in another PR.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r539161730,539161730,src/net_processing.cpp
naumenkogs,2020-12-09 12:09:16,"As Travis caught, it doesn't work :)\n\nWe set it on receiving VERACK, but AdvertiseLocal is called on receiving VERSION, which might happen in either order...\nI assume AdvertiseLocal never worked properly in the first place? Like, it did work in half of the cases on a new connection :)\n\nI suggest we do AdvertiseLocal on VERSION no matter whether we received VERACK or not.\n",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r539253278,539253278,src/net.cpp
naumenkogs,2020-12-09 12:19:57,"Or even better, this should be just done on VERACK.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r539260044,539260044,src/net.cpp
jnewbery,2020-12-10 10:35:08,"> We set it on receiving VERACK, but AdvertiseLocal is called on receiving VERSION, which might happen in either order\n\nThis isn't true. We must receive the version message before the verack message.\n\nI agree that it's better to do the initial `PushAddress()` on receiving the verack.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r540057740,540057740,src/net.cpp
naumenkogs,2020-12-10 12:46:28,">This isn't true. We must receive the version message before the verack message.\n\nYou're right, thanks. I was confused in my own code stack of commits I guess. This part was just fine before my changes.\nLet me just update my commit messages now.",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r540140576,540140576,src/net.cpp
naumenkogs,2020-12-10 13:26:40,"Actually, both of them are non-IBD? Both are inside the `!::ChainstateActive().IsInitialBlockDownload()` check?\nSo really, the periodic one should encompass the initial one.\n\nThe only reason to keep the initial one is if it somehow worked when the other one is not reached. But it's not true in practice, because the periodic happens *right before* actually sending ADDR message out.\n\nI thi",https://github.com/bitcoin/bitcoin/pull/19843#discussion_r540166735,540166735,src/net_processing.cpp
