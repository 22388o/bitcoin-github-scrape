TheBlueMatt,2017-01-09T20:35:45Z,"Concept ACK. I think we had discussed doing this when #9243 went in.\n\nOn January 9, 2017 11:02:04 AM EST, ""Jorge Tim√≥n"" <notifications@github.com> wrote:\n>Continues #9243 by @TheBlueMatt \n>Introduce an ArgsManager class encapsulating cs_args, mapArgs  and\n>mapMultiArgs.\n>\n>To reduce disruption, the used functions are kept as wrapers. The\n>wrapers can be removed later, see\n>https://github.",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-271399944,271399944,
jtimon,2017-01-09T22:47:06Z,"Yes, we discussed it in #9243, but that this seems approximately what was discussed previously is still very useful, thanks.\n\nWhat concerns me more of the current code is the fact that the methods IsArgSet, GetArg, GetBoolArg and  ArgsAt aren't const, because they need to ```LOCK(cs_args);```. The first ""solution"" that comes to mind is to make a superclass with just these methods (but they rem",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-271432546,271432546,
dcousens,2017-01-11T06:50:47Z,"concept ACK :+1: , will review again when able, once-over utACK 8a96939\n",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-271792379,271792379,
jtimon,2017-01-31T21:38:34Z,Needed rebase.,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-276500900,276500900,
jtimon,2017-03-23T22:14:20Z,"Needed rebase (due to ""Refactor: Remove using namespace <xxx>"" PRs).",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-288876879,288876879,
laanwj,2017-03-24T12:55:51Z,"Concept ACK, seems a move in the right direction.",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-289015305,289015305,
sipa,2017-03-24T21:57:12Z,utACK c67209128a114e3260ab93c3e8a63b1b23663b34,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-289152860,289152860,
TheBlueMatt,2017-03-25T01:52:47Z,"Concept ACK, will review.\n\nOn March 24, 2017 2:57:16 PM PDT, Pieter Wuille <notifications@github.com> wrote:\n>utACK c67209128a114e3260ab93c3e8a63b1b23663b34\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-289152860\n",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-289180128,289180128,
jtimon,2017-03-28T18:46:48Z,"> Switching mapMultiArgs.count() to argsGlobal.IsArgSet makes a few things incorrect, because the SoftSetArgs stuff doesn't update mapMultiArgs but does update mapArgs.\n\nMaybe a solution could be to use argsGlobal.IsArgsAt().size() > 0 in those cases?\nI mean, I think in all those cases will just try to loop through an empty vector (ie do nothing) inside the if clause, but I haven't made sure",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-289867091,289867091,
TheBlueMatt,2017-03-28T19:08:48Z,"I'd prefer to just fix the issue - I think its super strange that SoftSetArg, etc dont keep mapMultiArgs and mapArgs consistent.",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-289873440,289873440,
jtimon,2017-03-29T14:57:51Z,Fixed nits. Also removed a bunch of BOOST_FOREACH for free in the commit that introduces ArgsManager::ArgsAt().,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-290117045,290117045,
jtimon,2017-03-29T21:25:12Z,Fixed nit.,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-290230766,290230766,
jtimon,2017-04-04T15:10:51Z,Needed rebase.,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-291531001,291531001,
JeremyRubin,2017-04-05T20:28:13Z,put my review of this code on the wrong PR. https://github.com/bitcoin/bitcoin/pull/10119#discussion_r109692600,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-291986905,291986905,
jtimon,2017-04-05T22:48:53Z,"Needed rebase again. Btw, should I squash the last commit in #10119 (everything else is just equal to this PR) to the first commit here or leave it separated?\n",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-292019400,292019400,
jtimon,2017-04-06T20:28:30Z,Needed rebase again.,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-292307279,292307279,
jtimon,2017-05-05T13:11:20Z,"Fixed some nits. I made the wrappers static inline and removed the less disruptive ones (which include ParseParameters and ReadConfigFile) as I was doing in #10119 (just squashed it to the first commit here, plus adapted 1 new use of SoftSetArg after rebase), but since that's a little bit more disruptive I didn't made the methods ParseParameters and ReadConfigFile inline yet. Also found more cases",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-299460563,299460563,
jtimon,2017-05-07T19:04:06Z,"Renamed s/globalArgs/gArgs/ as suggested discussed with @luke-jr here. @TheBlueMatt asked for using scripted-diff so I ended up ""bikeshedding the history"" quite a bit, but I think it's clearer now.\nI tried to follow @luke-jr 's suggestion https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114871261 in more places, but I don't understand why this breaks the python tests yet: https://github.",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-299727232,299727232,
theuni,2017-05-09T19:39:41Z,utACK f19f5b5dbd0e3b6f73ded3818014eed3f728e5fc,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-300278705,300278705,
jtimon,2017-05-09T19:41:26Z,"Sorry, just pushed again changing the history as @TheBlueMatt suggested. \n78da882 should be equivalent to f19f5b5 ",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-300279153,300279153,
ryanofsky,2017-05-10T15:41:08Z,"utACK 78da882edd54ed62f4a0035590460a97cb9ff282. Confirmed no diff since previous review, just mapMultiArgs commit history change.",https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-300523490,300523490,
laanwj,2017-05-15T05:39:21Z,utACK 78da882,https://github.com/bitcoin/bitcoin/pull/9494#issuecomment-301380921,301380921,
jtimon,2017-01-11T13:34:20Z,"I assume this should get LOCK(cs_args); too? If so, the method can't be const.",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r95578281,95578281,src/util.cpp
TheBlueMatt,2017-03-28T14:01:48Z,nit: kill the > 0 here?,https://github.com/bitcoin/bitcoin/pull/9494#discussion_r108429269,108429269,src/httprpc.cpp
TheBlueMatt,2017-03-29T17:05:23Z,"Yes, it also cant return a reference, needs to make a copy.",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r108732057,108732057,src/util.cpp
luke-jr,2017-05-04T19:44:45Z,`GetArgs` seems like a better name?,https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114870475,114870475,src/util.cpp
luke-jr,2017-05-04T19:46:06Z,Suggest moving these to the header as static inline.,https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114870710,114870710,src/util.cpp
luke-jr,2017-05-04T19:46:47Z,Can we just call it `Args`? :),https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114870826,114870826,src/util.h
luke-jr,2017-05-04T19:48:59Z,"Under what conditions would `IsArgSet` be true, and `ArgsAt().size()` be zero?",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114871261,114871261,src/init.cpp
luke-jr,2017-05-04T19:49:49Z,Can you reference a temporary like this?,https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114871456,114871456,src/init.cpp
sipa,2017-05-05T00:11:36Z,"You can. The lifetime of the temporary is extended by taking a reference to it. This code is effectively equivalent to:\n```c++\nconst std::vector<std::string> categories_tmp = argsGlobal.ArgsAt(""-debug"");\nconst std::vector<std::string>& categories = categories_tmp;\n```\n",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114914495,114914495,src/init.cpp
jtimon,2017-05-05T11:49:18Z,I suspect a performance improvement is expected by doing so. Thanks,https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114978943,114978943,src/util.cpp
jtimon,2017-05-05T11:53:52Z,"I was thinking that maybe some functions could get a local ```ArgsManager& args``` parameters instead of using the global. Or do you mean s/ArgsManager/Args/ ? I'm fine with that.\nAlso, maybe s/argsGlobal/gArgs/ too, but I don't like ```extern ArgsManager args```",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114979553,114979553,src/util.h
jtimon,2017-05-05T11:55:09Z,"After the last change suggested by @TheBlueMatt this should never be possible, good catch.",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114979734,114979734,src/init.cpp
jtimon,2017-05-05T11:57:08Z,"At the same time, I didn't do it on purpose here. I'm happy to remove the ""&"" if that's preferred. ",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114980008,114980008,src/init.cpp
luke-jr,2017-05-05T14:29:41Z,"I meant `extern ArgsManager Args`, but `gArgs` is probably good enough.",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r115009550,115009550,src/util.h
TheBlueMatt,2017-05-08T17:25:38Z,"Its somewhat annoying to have an intermediate commit which breaks our locking in the middle - maybe move this one line to the ""Put mapMultiArgs inside ArgsManager"" commit? It should at least break fewer things by doing so.",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r115304251,115304251,src/util.cpp
ryanofsky,2017-05-08T18:33:43Z,"""Introduce an ArgsManager class encapsulating cs_args, mapArgs and mapMultiArgs""\n\nIndentation for all the methods above is missing. Though it's understandable not to add it now to make diff smaller.",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r115320342,115320342,src/util.h
theuni,2017-05-08T19:51:37Z,why?,https://github.com/bitcoin/bitcoin/pull/9494#discussion_r115337114,115337114,src/init.cpp
jtimon,2017-05-08T20:08:01Z,"Yes, that's exactly the point, but I have done similar things in the past and not fixed them later, something I feel bad about, for example: https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L1313\nPlease, help me make sure that it gets done this time.\n",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r115340509,115340509,src/util.h
jtimon,2017-05-08T20:09:09Z,"Because https://github.com/bitcoin/bitcoin/pull/9494#discussion_r114871456 and I don't care either way for the reasons @sipa explained. \n\nEDIT: yet I'm again happy to turn it back.",https://github.com/bitcoin/bitcoin/pull/9494#discussion_r115340749,115340749,src/init.cpp
