jnewbery,2020-06-21 13:24:33,@hebasto : you seem to be on a mutex-cleaning spree. Perhaps you'd be interested in this?,https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-647128075,647128075,
hebasto,2020-06-21 13:30:17,Concept ACK. Made a link here from the tracking issue #19303.,https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-647128751,647128751,
hebasto,2020-06-21 18:30:04,nit: s/`cs_inventory`/`m_inventory_mutex`/,https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-647164281,647164281,
jnewbery,2020-06-21 18:36:29,"> nit: s/cs_inventory/m_inventory_mutex\n\nI agree! I'm planning to move this mutex into net processing where it belongs. I'll do the rename at the same time. See https://github.com/jnewbery/bitcoin/commits/2020-06-cs-main-split",https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-647164961,647164961,
hebasto,2020-06-22 21:03:52,"Does the recent [change](https://github.com/bitcoin/bitcoin/compare/eaced81501f035193523d1abde4569dfc73ae327..6db15a8b79597a0f311490acd89ee50db298c6e8) decrease concurrentness of the code? It seems like a premature optimization a bit, no?",https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-647768365,647768365,
jnewbery,2020-06-22 21:44:29,"> Does the recent change decrease concurrentness of the code?\n\nI think it's fine to expand the lock scope:\n\n- it's _extremely_ unlikely that this'll increase contention for this lock. `UpdatedBlockTip()` is only called once every ten minutes on average, it's very unlikely that it'll push two block hashes onto the `vBlockHashesToAnnounce` vector (only if there's a re-org), and the time it t",https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-647784842,647784842,
jnewbery,2020-06-23 12:51:14,"I've moved the lock scope change to the correct commit, and also moved it one line up, outside the surrounding if block. It doesn't make any difference here, but makes a commit in a future branch tidier.",https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-648124539,648124539,
sipa,2020-07-07 18:33:46,utACK e8a2822119233ade0de84f791a9e92918a3d6896,https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-655046772,655046772,
MarcoFalke,2020-07-08 19:57:06,"ACK e8a2822119233ade0de84f791a9e92918a3d6896 üç¨\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK e8a2822119233ade0de84f791a9e92918a3d6896 üç¨\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgLcQv/SQmH5S8+LYeoatDRRklzvqBa7vDSX+1JFkyauaibxrGa2j0CT5",https://github.com/bitcoin/bitcoin/pull/19347#issuecomment-655724407,655724407,
hebasto,2020-06-21 15:38:16,"From commit message\n> Therefore, cs_inventory can never be locked when the TRY_LOCK(cs_inventory) is reached in DisconnectNodes(). Remove the TRY_LOCK.\n\nI understand that `if (lockInv)` is never true, and the code block `TRY_LOCK(pnode->cs_vSend, lockSend); ...` is dead in master. This commit makes this code always reachable, right?",https://github.com/bitcoin/bitcoin/pull/19347#discussion_r443231429,443231429,src/net.cpp
MarcoFalke,2020-06-21 16:11:49,"I think the comment says ""Therefore, cs_inventory can never be locked *by another thread* ..."", so it is always true (success).",https://github.com/bitcoin/bitcoin/pull/19347#discussion_r443234173,443234173,src/net.cpp
jnewbery,2020-06-21 16:31:28,"Sorry, you're right that this commit message is unclear. Marco is correct that I meant ""cs_inventory can never be locked by another thread"". I'll update the commit message.",https://github.com/bitcoin/bitcoin/pull/19347#discussion_r443235694,443235694,src/net.cpp
jnewbery,2020-06-21 16:46:01,I've made the commit log clearer.,https://github.com/bitcoin/bitcoin/pull/19347#discussion_r443236860,443236860,src/net.cpp
laanwj,2020-06-22 18:40:31,"When doing this anyway, woulid it make sense to move this lock outside the (inner) loop? Re-taking it for every `node √ó every block` seems overkill.",https://github.com/bitcoin/bitcoin/pull/19347#discussion_r443754624,443754624,src/net_processing.cpp
jnewbery,2020-06-22 19:36:48,Good idea. Done.,https://github.com/bitcoin/bitcoin/pull/19347#discussion_r443782058,443782058,src/net_processing.cpp
promag,2020-06-23 09:26:06,"e335e4fcc881260906fb561f23a1b5017ed04d91\n\nThe suggestion was done in 6db15a8b79597a0f311490acd89ee50db298c6e8, but IMO should be in e335e4fcc881260906fb561f23a1b5017ed04d91.",https://github.com/bitcoin/bitcoin/pull/19347#discussion_r444087873,444087873,src/net_processing.cpp
jnewbery,2020-06-23 12:50:16,Done.,https://github.com/bitcoin/bitcoin/pull/19347#discussion_r444197371,444197371,src/net_processing.cpp
