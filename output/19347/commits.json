[
  {
    "sha": "344e831de54f7b864f03a90f6cb19692eafcd463",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDRlODMxZGU1NGY3Yjg2NGYwM2E5MGY2Y2IxOTY5MmVhZmNkNDYz",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-21T03:16:20Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-23T12:46:05Z"
      },
      "message": "[net processing] Remove PushBlockInventory and PushBlockHash\n\nPushBlockInventory() and PushBlockHash() are functions that can\nbe replaced with single-line statements. This also eliminates\nthe single place that cs_inventory is taken recursively.",
      "tree": {
        "sha": "eedcd3d4c57ec38e884dade213a367f788085f28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eedcd3d4c57ec38e884dade213a367f788085f28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/344e831de54f7b864f03a90f6cb19692eafcd463",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/344e831de54f7b864f03a90f6cb19692eafcd463",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/344e831de54f7b864f03a90f6cb19692eafcd463",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/344e831de54f7b864f03a90f6cb19692eafcd463/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "879acc681abc29c57ad8590999874e2ab9dca3a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/879acc681abc29c57ad8590999874e2ab9dca3a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/879acc681abc29c57ad8590999874e2ab9dca3a5"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 5,
      "deletions": 16
    },
    "files": [
      {
        "sha": "ddb185763f3e5e36f4a72c1f0e0a457aa83d6202",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/344e831de54f7b864f03a90f6cb19692eafcd463/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/344e831de54f7b864f03a90f6cb19692eafcd463/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=344e831de54f7b864f03a90f6cb19692eafcd463",
        "patch": "@@ -982,18 +982,6 @@ class CNode\n         }\n     }\n \n-    void PushBlockInventory(const uint256& hash)\n-    {\n-        LOCK(cs_inventory);\n-        vInventoryBlockToSend.push_back(hash);\n-    }\n-\n-    void PushBlockHash(const uint256 &hash)\n-    {\n-        LOCK(cs_inventory);\n-        vBlockHashesToAnnounce.push_back(hash);\n-    }\n-\n     void CloseSocketDisconnect();\n \n     void copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap);"
      },
      {
        "sha": "f678b73a42d0adb866466ed646d0461c0450b7c7",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/344e831de54f7b864f03a90f6cb19692eafcd463/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/344e831de54f7b864f03a90f6cb19692eafcd463/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=344e831de54f7b864f03a90f6cb19692eafcd463",
        "patch": "@@ -1328,9 +1328,10 @@ void PeerLogicValidation::UpdatedBlockTip(const CBlockIndex *pindexNew, const CB\n         }\n         // Relay inventory, but don't relay old inventory during initial block download.\n         connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+            LOCK(pnode->cs_inventory);\n             if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n                 for (const uint256& hash : reverse_iterate(vHashes)) {\n-                    pnode->PushBlockHash(hash);\n+                    pnode->vBlockHashesToAnnounce.push_back(hash);\n                 }\n             }\n         });\n@@ -1607,7 +1608,7 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n         // Trigger the peer node to send a getblocks request for the next batch of inventory\n         if (inv.hash == pfrom.hashContinue)\n         {\n-            // Bypass PushBlockInventory, this must send even if redundant,\n+            // Send immediately. This must send even if redundant,\n             // and we want it right after the last block so they don't\n             // wait for other stuff first.\n             std::vector<CInv> vInv;\n@@ -2666,7 +2667,7 @@ void ProcessMessage(\n                 LogPrint(BCLog::NET, \" getblocks stopping, pruned or too old block at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 break;\n             }\n-            pfrom.PushBlockInventory(pindex->GetBlockHash());\n+            WITH_LOCK(pfrom.cs_inventory, pfrom.vInventoryBlockToSend.push_back(pindex->GetBlockHash()));\n             if (--nLimit <= 0)\n             {\n                 // When this block is requested, we'll send an inv that'll\n@@ -4083,7 +4084,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n \n                     // If the peer's chain has this block, don't inv it back.\n                     if (!PeerHasHeader(&state, pindex)) {\n-                        pto->PushBlockInventory(hashToAnnounce);\n+                        pto->vInventoryBlockToSend.push_back(hashToAnnounce);\n                         LogPrint(BCLog::NET, \"%s: sending inv peer=%d hash=%s\\n\", __func__,\n                             pto->GetId(), hashToAnnounce.ToString());\n                     }"
      }
    ]
  },
  {
    "sha": "3556227ddd3365cfac43b307204d73058b2943f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTU2MjI3ZGRkMzM2NWNmYWM0M2IzMDcyMDRkNzMwNThiMjk0M2Yw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-21T03:17:29Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-23T12:46:05Z"
      },
      "message": "[net] Make cs_inventory a non-recursive mutex\n\ncs_inventory is never taken recursively. Make it a non-recursive mutex.",
      "tree": {
        "sha": "a786d4a4e19a142d6f80440c2143811c2c90a81d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a786d4a4e19a142d6f80440c2143811c2c90a81d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3556227ddd3365cfac43b307204d73058b2943f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3556227ddd3365cfac43b307204d73058b2943f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3556227ddd3365cfac43b307204d73058b2943f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3556227ddd3365cfac43b307204d73058b2943f0/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "344e831de54f7b864f03a90f6cb19692eafcd463",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/344e831de54f7b864f03a90f6cb19692eafcd463",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/344e831de54f7b864f03a90f6cb19692eafcd463"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3c237639545f5cfad0adbd5423e05bdd06fa03f5",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3556227ddd3365cfac43b307204d73058b2943f0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3556227ddd3365cfac43b307204d73058b2943f0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=3556227ddd3365cfac43b307204d73058b2943f0",
        "patch": "@@ -803,7 +803,7 @@ class CNode\n     // There is no final sorting before sending, as they are always sent immediately\n     // and in the order requested.\n     std::vector<uint256> vInventoryBlockToSend GUARDED_BY(cs_inventory);\n-    RecursiveMutex cs_inventory;\n+    Mutex cs_inventory;\n \n     struct TxRelay {\n         mutable RecursiveMutex cs_filter;"
      }
    ]
  },
  {
    "sha": "e8a2822119233ade0de84f791a9e92918a3d6896",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGEyODIyMTE5MjMzYWRlMGRlODRmNzkxYTllOTI5MThhM2Q2ODk2",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-21T03:23:14Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-23T12:46:05Z"
      },
      "message": "[net] Don't try to take cs_inventory before deleting CNode\n\nThe TRY_LOCK(cs_inventory) in DisconnectNodes() is taken after the CNode\nobject has been removed from vNodes and when the CNode's nRefCount is\nzero.\n\nThe only other places that cs_inventory can be taken are:\n\n- In ProcessMessages() or SendMessages(), when the CNode's nRefCount\nmust be >0 (see ThreadMessageHandler(), where the refcount is\nincremented before calling ProcessMessages() and SendMessages()).\n- In a ForEachNode() lambda in PeerLogicValidation::UpdatedBlockTip().\nForEachNode() locks cs_vNodes and calls the function on the CNode\nobjects in vNodes.\n\nTherefore, cs_inventory is never locked by another thread when the\nTRY_LOCK(cs_inventory) is reached in DisconnectNodes(). Since the\nonly purpose of this TRY_LOCK is to ensure that the lock is not\ntaken by another thread, this always succeeds. Remove the check.",
      "tree": {
        "sha": "125b0bf1c4320c597a5befe4398bbabafc4cbcfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/125b0bf1c4320c597a5befe4398bbabafc4cbcfd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8a2822119233ade0de84f791a9e92918a3d6896",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8a2822119233ade0de84f791a9e92918a3d6896",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8a2822119233ade0de84f791a9e92918a3d6896",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8a2822119233ade0de84f791a9e92918a3d6896/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3556227ddd3365cfac43b307204d73058b2943f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3556227ddd3365cfac43b307204d73058b2943f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3556227ddd3365cfac43b307204d73058b2943f0"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "391391a7da00839b636d7ecab8aa7e1ee649f929",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a2822119233ade0de84f791a9e92918a3d6896/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a2822119233ade0de84f791a9e92918a3d6896/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e8a2822119233ade0de84f791a9e92918a3d6896",
        "patch": "@@ -1103,12 +1103,9 @@ void CConnman::DisconnectNodes()\n             if (pnode->GetRefCount() <= 0) {\n                 bool fDelete = false;\n                 {\n-                    TRY_LOCK(pnode->cs_inventory, lockInv);\n-                    if (lockInv) {\n-                        TRY_LOCK(pnode->cs_vSend, lockSend);\n-                        if (lockSend) {\n-                            fDelete = true;\n-                        }\n+                    TRY_LOCK(pnode->cs_vSend, lockSend);\n+                    if (lockSend) {\n+                        fDelete = true;\n                     }\n                 }\n                 if (fDelete) {"
      }
    ]
  }
]