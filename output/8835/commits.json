[
  {
    "sha": "fa156c604e7d86d84f7731b05d7530bc91d2736b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE1NmM2MDRlN2Q4NmQ4NGY3NzMxYjA1ZDc1MzBiYzkxZDI3MzZi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-09-29T13:34:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-09-29T13:32:16Z"
      },
      "message": "[qa] nulldummy: Don't run unused code",
      "tree": {
        "sha": "bb8dd03ea57d62562af8e0ad4a0cd67a480be3db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb8dd03ea57d62562af8e0ad4a0cd67a480be3db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa156c604e7d86d84f7731b05d7530bc91d2736b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa156c604e7d86d84f7731b05d7530bc91d2736b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa156c604e7d86d84f7731b05d7530bc91d2736b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa156c604e7d86d84f7731b05d7530bc91d2736b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ca69a2a88a77eb06149fa049ab1a7e6de38b321",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ca69a2a88a77eb06149fa049ab1a7e6de38b321",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ca69a2a88a77eb06149fa049ab1a7e6de38b321"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 4,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6488a92364e79f2197f6476ecd27be9f232aa3a7",
        "filename": "qa/rpc-tests/nulldummy.py",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa156c604e7d86d84f7731b05d7530bc91d2736b/qa/rpc-tests/nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa156c604e7d86d84f7731b05d7530bc91d2736b/qa/rpc-tests/nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nulldummy.py?ref=fa156c604e7d86d84f7731b05d7530bc91d2736b",
        "patch": "@@ -3,11 +3,10 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import CTransaction, NetworkThread\n from test_framework.blocktools import create_coinbase, create_block, add_witness_commitment\n-from test_framework.comptool import TestManager\n from test_framework.script import CScript\n from io import BytesIO\n import time\n@@ -37,11 +36,12 @@ def trueDummy(tx):\n [Policy/Consensus] Check that the new NULLDUMMY rules are enforced on the 432nd block.\n '''\n \n-class NULLDUMMYTest(ComparisonTestFramework):\n+class NULLDUMMYTest(BitcoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 1\n+        self.setup_clean_chain = True\n \n     def setup_network(self):\n         # Must set the blockversion for this test\n@@ -54,8 +54,6 @@ def run_test(self):\n         self.wit_address = self.nodes[0].addwitnessaddress(self.address)\n         self.wit_ms_address = self.nodes[0].addwitnessaddress(self.ms_address)\n \n-        test = TestManager(self, self.options.tmpdir)\n-        test.add_all_connections(self.nodes)\n         NetworkThread().start() # Start up network handling in another thread\n         self.coinbase_blocks = self.nodes[0].generate(2) # Block 2\n         coinbase_txid = []\n@@ -145,4 +143,4 @@ def block_submit(self, node, txs, witness = False, accept = False):\n             assert_equal(node.getbestblockhash(), self.lastblockhash)\n \n if __name__ == '__main__':\n-    NULLDUMMYTest().main()\n\\ No newline at end of file\n+    NULLDUMMYTest().main()"
      }
    ]
  }
]