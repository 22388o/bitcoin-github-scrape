[
  {
    "sha": "2193faab150a8373da94d171cd459d58bb87af97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTkzZmFhYjE1MGE4MzczZGE5NGQxNzFjZDQ1OWQ1OGJiODdhZjk3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-09-30T12:16:10Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-11-11T19:47:52Z"
      },
      "message": "BIP90: Make buried deployments slightly more easily extensible",
      "tree": {
        "sha": "a918e175bf91292a96c478922ead15f8a63a46e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a918e175bf91292a96c478922ead15f8a63a46e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2193faab150a8373da94d171cd459d58bb87af97",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJaB1PrAAoJEIhmwY6hyUSiOOsQAIwGKqnsVhZ3dfLBbTCG/CsI\nr3yhLfxQZxQP8nxOJK7dy8CfbjrEmU635dAmV8yCLquCCV6LxPOPMQKJ+//J1SR5\n48GvENn141YJYaVHcar80z+mbu940JAe04JV8SKUYq6Jmr1r5nkABL4lEnlfpwwk\nUq252qIdn6qR38slPyRqI5cpjFXtKBTxOK30vyTUqk5MJ68f4zEYOwBfDbAf3zNJ\nyHpVfMzZWL9fMDnsh/pzIDdYF+xxK+K/wB9OjJAl29475g5smtFXaa6pt+BFL67w\nGDpth4J4E/uw9LJ0dJSnGEj5VzR5cTkxYl8NnaCfy7ZNbDJFRVCD7IkqzZiGNTdm\n/3edfYlaXOwMgx/1giB2qCKlPJBIu4gGsNACWSl+cHiSx1r6mtWYzcRDMQ4REPA6\nekhCWOCimvmgnR+EgBKHkG+U3TFRImqF+OsgffFAsvhPEdSdKWeLTZS5BcfkdrNa\nxwruwxPc784rO3a0iqWSToPxZ9n+4NHkwXBGa7bnE1MSD0XUhX8r0unSlk//V7qC\nCBae5YYQHBKaEpsp/N4WyFy0/xduugKUIepzVVveeyJ2/rWgPesUsSaFbbyErcbY\n7JWfFhSB/VnkhtmoWzDovArbfENoPMStf7NZt0ooTmX9Yhqq8LVZTRhEtCFroLUP\n7u2NtWsz7cf5RAB+BYqY\n=6/Eg\n-----END PGP SIGNATURE-----",
        "payload": "tree a918e175bf91292a96c478922ead15f8a63a46e1\nparent 13e352dc53dec0127c5f94a60055d0ca829420dc\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1506773770 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1510429672 +0100\n\nBIP90: Make buried deployments slightly more easily extensible\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2193faab150a8373da94d171cd459d58bb87af97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2193faab150a8373da94d171cd459d58bb87af97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2193faab150a8373da94d171cd459d58bb87af97/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13e352dc53dec0127c5f94a60055d0ca829420dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e352dc53dec0127c5f94a60055d0ca829420dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13e352dc53dec0127c5f94a60055d0ca829420dc"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 36,
      "deletions": 31
    },
    "files": [
      {
        "sha": "9775275f8d7dfeb21b6afa0aa489272e5520e889",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 12,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2193faab150a8373da94d171cd459d58bb87af97/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2193faab150a8373da94d171cd459d58bb87af97/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=2193faab150a8373da94d171cd459d58bb87af97",
        "patch": "@@ -75,11 +75,11 @@ class CMainParams : public CChainParams {\n     CMainParams() {\n         strNetworkID = \"main\";\n         consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Height = 173805; // 00000000000000ce80a7e057163a4db1d5ad7b20fb6f598c9597b9665c8fb0d4 - April 1, 2012\n-        consensus.BIP34Height = 227931;\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP16] = 173805; // 00000000000000ce80a7e057163a4db1d5ad7b20fb6f598c9597b9665c8fb0d4 - April 1, 2012\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP34] = 227931;\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP65] = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP66] = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n-        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n-        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -182,11 +182,11 @@ class CTestNetParams : public CChainParams {\n     CTestNetParams() {\n         strNetworkID = \"test\";\n         consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Height = 514; // 00000000040b4e986385315e14bee30ad876d8b47f748025b26683116d21aa65\n-        consensus.BIP34Height = 21111;\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP16] = 514; // 00000000040b4e986385315e14bee30ad876d8b47f748025b26683116d21aa65\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP34] = 21111;\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP65] = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP66] = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n-        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n-        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -272,11 +272,12 @@ class CRegTestParams : public CChainParams {\n     CRegTestParams() {\n         strNetworkID = \"regtest\";\n         consensus.nSubsidyHalvingInterval = 150;\n-        consensus.BIP16Height = 0; // always enforce P2SH BIP16 on regtest\n-        consensus.BIP34Height = 100000000; // BIP34 has not activated on regtest (far in the future so block v1 are not rejected in tests)\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP16] = 0; // always enforce P2SH BIP16 on regtest\n+        // BIP34 has not activated on regtest (far in the future so block v1 are not rejected in tests)\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP34] = 100000000;\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP65] = 1351; // BIP65 activated on regtest (Used in rpc activation tests)\n+        consensus.buried_deployments[Consensus::DEPLOYMENT_BIP66] = 1251; // BIP66 activated on regtest (Used in rpc activation tests)\n         consensus.BIP34Hash = uint256();\n-        consensus.BIP65Height = 1351; // BIP65 activated on regtest (Used in rpc activation tests)\n-        consensus.BIP66Height = 1251; // BIP66 activated on regtest (Used in rpc activation tests)\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;"
      },
      {
        "sha": "e0cba57b6876d2b590a7c4b5759eacb05e719175",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2193faab150a8373da94d171cd459d58bb87af97/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2193faab150a8373da94d171cd459d58bb87af97/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=2193faab150a8373da94d171cd459d58bb87af97",
        "patch": "@@ -13,6 +13,15 @@\n \n namespace Consensus {\n \n+enum BuriedDeploymentPos\n+{\n+    DEPLOYMENT_BIP16,\n+    DEPLOYMENT_BIP34,\n+    DEPLOYMENT_BIP65,\n+    DEPLOYMENT_BIP66,\n+    MAX_BURIED_DEPLOYMENTS\n+};\n+\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n@@ -49,22 +58,17 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /** Block height at which BIP16 becomes active */\n-    int BIP16Height;\n-    /** Block height and hash at which BIP34 becomes active */\n-    int BIP34Height;\n+    /** Block hash at which BIP34 becomes active. Necessary to avoid checking BIP30. */\n     uint256 BIP34Hash;\n-    /** Block height at which BIP65 becomes active */\n-    int BIP65Height;\n-    /** Block height at which BIP66 becomes active */\n-    int BIP66Height;\n     /**\n      * Minimum blocks including miner confirmation of the total of 2016 blocks in a retargeting period,\n      * (nPowTargetTimespan / nPowTargetSpacing) which is also used for BIP9 deployments.\n      * Examples: 1916 for 95%, 1512 for testchains.\n      */\n     uint32_t nRuleChangeActivationThreshold;\n     uint32_t nMinerConfirmationWindow;\n+    /** BIP90: Block height at which buried deployments becomes active */\n+    int buried_deployments[MAX_BURIED_DEPLOYMENTS];\n     BIP9Deployment vDeployments[MAX_VERSION_BITS_DEPLOYMENTS];\n     /** Proof of work parameters */\n     uint256 powLimit;"
      },
      {
        "sha": "28b61dae3845caaca4dabd47c80f25f18354e326",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2193faab150a8373da94d171cd459d58bb87af97/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2193faab150a8373da94d171cd459d58bb87af97/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=2193faab150a8373da94d171cd459d58bb87af97",
        "patch": "@@ -1059,13 +1059,13 @@ static UniValue SoftForkMajorityDesc(int version, CBlockIndex* pindex, const Con\n     switch(version)\n     {\n         case 2:\n-            activated = pindex->nHeight >= consensusParams.BIP34Height;\n+            activated = pindex->nHeight >= consensusParams.buried_deployments[Consensus::DEPLOYMENT_BIP34];\n             break;\n         case 3:\n-            activated = pindex->nHeight >= consensusParams.BIP66Height;\n+            activated = pindex->nHeight >= consensusParams.buried_deployments[Consensus::DEPLOYMENT_BIP66];\n             break;\n         case 4:\n-            activated = pindex->nHeight >= consensusParams.BIP65Height;\n+            activated = pindex->nHeight >= consensusParams.buried_deployments[Consensus::DEPLOYMENT_BIP65];\n             break;\n     }\n     rv.push_back(Pair(\"status\", activated));"
      },
      {
        "sha": "5a797961e3bf65ef3a6d5171041bdea0dcf07e35",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2193faab150a8373da94d171cd459d58bb87af97/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2193faab150a8373da94d171cd459d58bb87af97/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=2193faab150a8373da94d171cd459d58bb87af97",
        "patch": "@@ -1614,17 +1614,17 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     unsigned int flags = SCRIPT_VERIFY_NONE;\n \n     // Start enforcing P2SH (BIP16)\n-    if (pindex->nHeight >= consensusparams.BIP16Height) {\n+    if (pindex->nHeight >= consensusparams.buried_deployments[Consensus::DEPLOYMENT_BIP16]) {\n         flags |= SCRIPT_VERIFY_P2SH;\n     }\n \n     // Start enforcing the DERSIG (BIP66) rule\n-    if (pindex->nHeight >= consensusparams.BIP66Height) {\n+    if (pindex->nHeight >= consensusparams.buried_deployments[Consensus::DEPLOYMENT_BIP66]) {\n         flags |= SCRIPT_VERIFY_DERSIG;\n     }\n \n     // Start enforcing CHECKLOCKTIMEVERIFY (BIP65) rule\n-    if (pindex->nHeight >= consensusparams.BIP65Height) {\n+    if (pindex->nHeight >= consensusparams.buried_deployments[Consensus::DEPLOYMENT_BIP65]) {\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n@@ -1736,7 +1736,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     // duplicate transactions descending from the known pairs either.\n     // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n     assert(pindex->pprev);\n-    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n+    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().buried_deployments[Consensus::DEPLOYMENT_BIP34]);\n     //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n     fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n \n@@ -2983,9 +2983,9 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationSta\n \n     // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n     // check for version 2, 3 and 4 upgrades\n-    if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n-       (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n-       (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n+    if((block.nVersion < 2 && nHeight >= consensusParams.buried_deployments[Consensus::DEPLOYMENT_BIP34]) ||\n+       (block.nVersion < 3 && nHeight >= consensusParams.buried_deployments[Consensus::DEPLOYMENT_BIP66]) ||\n+       (block.nVersion < 4 && nHeight >= consensusParams.buried_deployments[Consensus::DEPLOYMENT_BIP65]))\n             return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n                                  strprintf(\"rejected nVersion=0x%08x block\", block.nVersion));\n \n@@ -3014,7 +3014,7 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     }\n \n     // Enforce rule that the coinbase starts with serialized block height\n-    if (nHeight >= consensusParams.BIP34Height)\n+    if (nHeight >= consensusParams.buried_deployments[Consensus::DEPLOYMENT_BIP34])\n     {\n         CScript expect = CScript() << nHeight;\n         if (block.vtx[0]->vin[0].scriptSig.size() < expect.size() ||"
      }
    ]
  }
]