TheBlueMatt,2017-10-03T19:48:26Z,"This feels like entirely needless code churn. This doesn't change the memory layout but add one extra entry of padding, arrays are probably just more brittle than named variables (now you're actually doing pointer offset and can lookup wrong), and doesn't seem to provide any benifit aside from fewer entries in the chainparams, which I dont think is a useful goal.",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-333957336,333957336,
ryanofsky,2017-10-03T20:10:32Z,"I think the change is fine, but I agree with Matt in not seeing any obvious advantages to this approach. @jtimon, I wonder if there are any concrete advantages you would cite, or if you see this as mostly a stylistic change.\n\nAlso, it might be helpful in reviewing these PRs to have a better idea of how you want the final public libconsensus interface to look. If you had a document listing the ",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-333963364,333963364,
jtimon,2017-10-04T02:49:38Z,"I agree this is not necessary. It is meant to make the code clearer and simplify bip90 related changes like https://github.com/bitcoin/bitcoin/pull/11398 If it doesn't, then we shouldn't do this.\nI honestly think using an array the way we're doing it here posses any risk, but if it does, perhaps we should consider changing vDeployments (bip9/bip8) to named variables too, to avoid those risks.\n",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-334036109,334036109,
ryanofsky,2017-10-04T08:52:38Z,"Wow, those libconsensus docs are really interesting, and I hadn't seen them before. It probably is worth discussing more, but I guess not here (I didn't realize this PR was only intended be a standalone cleanup).\n\nI think we need to a better job reviewing cleanup PR's like this. It seems like when a PR making a stylistic change gets posted, there's either a contentious debate with ACKs and NAC",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-334091207,334091207,
TheBlueMatt,2017-10-04T16:29:16Z,"Heh, alright, I'm a -0 on this one =D.",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-334213070,334213070,
ryanofsky,2017-10-04T17:43:05Z,"I'm +0. I like the deployments being grouped together and not sitting top level consensus params. I might put them in a struct instead of an array, but I mostly just think the change is harmless and not significant.",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-334234564,334234564,
sdaftuar,2017-10-05T16:58:54Z,-0 is a pretty good summary of my view as well,https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-334527522,334527522,
jtimon,2017-10-15T14:46:04Z,"@ryanofsky thanks for the suggestion and thanks everyone for the feedback. But I don't think it should deter discussion. I'm really interested on why people see the buried blocks enum and array here differently from versionbits' enum and array. I really see them similar.\n",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-336716405,336716405,
ryanofsky,2017-10-16T14:36:18Z,"It's a minor change which isn't an unambiguous improvement and doesn't have a broader impact, so I wouldn't expect it to attract a lot of positive feedback. I like that the change groups deployments and would merge it even though I think grouping them under a struct would be a better than grouping them in an array. Arrays with constant offsets are more verbose than structs, less flexible, and also",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-336906760,336906760,
MarcoFalke,2017-11-10T18:28:11Z,Needs rebase if still relevant,https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-343549958,343549958,
jtimon,2017-11-11T19:49:40Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-343689683,343689683,
MarcoFalke,2018-01-23T00:45:14Z,"Note that this conflicts with #11739, which removes `BIP16Height`.",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-359628052,359628052,
jtimon,2018-01-23T02:55:34Z,"Yeah, this should probably be rebased on top of https://github.com/bitcoin/bitcoin/pull/11739 \n",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-359657555,359657555,
jtimon,2018-03-29T04:53:38Z,"Closing. But not for lack of enthusiasm, the next thing, I don't remember the name. More reasoned NACKS always welcomed.\nBut no concept ACK either for very long, let's close this.\nI've seen at least 2 PRs more interesting in this space to review that may still be open when you read this. ",https://github.com/bitcoin/bitcoin/pull/11426#issuecomment-377120968,377120968,
jtimon,2017-09-30T16:21:11Z,uint32_t instead of int?,https://github.com/bitcoin/bitcoin/pull/11426#discussion_r142009516,142009516,src/consensus/params.h
ryanofsky,2017-10-02T15:05:00Z,Seems like it would fit in better with existing code to use `int` for block heights instead of `uint64_t`. Also would avoid signed/unsigned comparisons.,https://github.com/bitcoin/bitcoin/pull/11426#discussion_r142165100,142165100,src/consensus/params.h
MarcoFalke,2018-01-23T00:49:46Z,"Note that the title says BIP90, but BIP90 never mentions BIP16. So either the code needs to change or the title.",https://github.com/bitcoin/bitcoin/pull/11426#discussion_r163116030,163116030,src/consensus/params.h
jtimon,2018-01-23T02:23:43Z,"Couldn't bip90 change as it does with new additions like hopefully csv and segwit?\n\nEDIT: assuming BIP16Height is not removed (still reading https://github.com/bitcoin/bitcoin/pull/11739 )\n",https://github.com/bitcoin/bitcoin/pull/11426#discussion_r163128610,163128610,src/consensus/params.h
MarcoFalke,2018-01-26T19:30:50Z,"No, I'd rather not change BIPs to be a running target. The previous release implements BIP 90, so you can't change it after it is published.",https://github.com/bitcoin/bitcoin/pull/11426#discussion_r164202118,164202118,src/consensus/params.h
