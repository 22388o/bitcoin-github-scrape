Diapolo,2012-09-03T14:24:14Z,"Is it possible to remove the use of sprintf here, too?\nhttps://github.com/bitcoin/bitcoin/blob/master/src/uint256.h#L291\n",https://github.com/bitcoin/bitcoin/pull/1777#issuecomment-8239752,8239752,
laanwj,2012-09-03T14:41:57Z,"I thought I removed that sprintf months ago. At least I rewrote a similar function in util.cpp.  That function should use the existing HexStr function.\n\nEdit: I see the reason now. uint256.h cannot include util.h, as util.h includes uint256.h, So uint256 cannot simply use HexStr unless we move that to a third .h file... \n",https://github.com/bitcoin/bitcoin/pull/1777#issuecomment-8240146,8240146,
Diapolo,2012-09-03T08:26:51Z,"It seems you have a ""."" too much here.\n",https://github.com/bitcoin/bitcoin/pull/1777#discussion_r1514864,1514864,src/net.cpp
Diapolo,2012-09-03T08:28:52Z,"I removed my former comment, but want to make another suggestion.\nWhy not use?\n\n`#include <boost/lexical_cast.hpp>`\n`std::string port = boost::lexical_cast<std::string>(GetListenPort());`\n\nhttp://www.boost.org/doc/libs/1_51_0/doc/html/boost_lexical_cast.html\n",https://github.com/bitcoin/bitcoin/pull/1777#discussion_r1514883,1514883,src/net.cpp
laanwj,2012-09-03T08:29:47Z,Yep. Good catch.\n,https://github.com/bitcoin/bitcoin/pull/1777#discussion_r1514893,1514893,src/net.cpp
laanwj,2012-09-03T14:45:08Z,"That's possible, but I don't see the advantage. We don't use lexical_cast anywhere right now, and we have the strprintf function already.\n",https://github.com/bitcoin/bitcoin/pull/1777#discussion_r1517272,1517272,src/net.cpp
Diapolo,2012-09-03T14:47:10Z,"You are right, I was just asking, if a own strprintf makes sense in that context, as I (but that is a pure feeling) would consider boost functions more safe than own string-handling code. I'm fine with leaving that pull as is anyway :).\n",https://github.com/bitcoin/bitcoin/pull/1777#discussion_r1517287,1517287,src/net.cpp
