[
  {
    "sha": "9c809094525fe9c1a39f455f31d1f10842773201",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzgwOTA5NDUyNWZlOWMxYTM5ZjQ1NWYzMWQxZjEwODQyNzczMjAx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-09-03T06:23:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-09-03T14:18:16Z"
      },
      "message": "Remove last occurrence of potentially insecure function sprintf.\n\n%d can return up to 11 characters. Move away from fixed buffer completely and\nuse our own safe function strprintf.",
      "tree": {
        "sha": "27ac330b3aaa57862a162469bccb5d905cb21417",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27ac330b3aaa57862a162469bccb5d905cb21417"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c809094525fe9c1a39f455f31d1f10842773201",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c809094525fe9c1a39f455f31d1f10842773201",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c809094525fe9c1a39f455f31d1f10842773201",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c809094525fe9c1a39f455f31d1f10842773201/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eaf00a3a5d80fb50d761c14b7c295df6ae2f0e44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eaf00a3a5d80fb50d761c14b7c295df6ae2f0e44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eaf00a3a5d80fb50d761c14b7c295df6ae2f0e44"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 8,
      "deletions": 10
    },
    "files": [
      {
        "sha": "008d8e37a50c9ce21ea4a99b43d9ec155e202059",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c809094525fe9c1a39f455f31d1f10842773201/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c809094525fe9c1a39f455f31d1f10842773201/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9c809094525fe9c1a39f455f31d1f10842773201",
        "patch": "@@ -1020,9 +1020,7 @@ void ThreadMapPort2(void* parg)\n {\n     printf(\"ThreadMapPort started\\n\");\n \n-    char port[6];\n-    sprintf(port, \"%d\", GetListenPort());\n-\n+    std::string port = strprintf(\"%d\", GetListenPort());\n     const char * multicastif = 0;\n     const char * minissdpdpath = 0;\n     struct UPNPDev * devlist = 0;\n@@ -1065,23 +1063,23 @@ void ThreadMapPort2(void* parg)\n #ifndef UPNPDISCOVER_SUCCESS\n         /* miniupnpc 1.5 */\n         r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-                            port, port, lanaddr, strDesc.c_str(), \"TCP\", 0);\n+                            port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0);\n #else\n         /* miniupnpc 1.6 */\n         r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-                            port, port, lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+                            port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n #endif\n \n         if(r!=UPNPCOMMAND_SUCCESS)\n             printf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n-                port, port, lanaddr, r, strupnperror(r));\n+                port.c_str(), port.c_str(), lanaddr, r, strupnperror(r));\n         else\n             printf(\"UPnP Port Mapping successful.\\n\");\n         int i = 1;\n         loop {\n             if (fShutdown || !fUseUPnP)\n             {\n-                r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port, \"TCP\", 0);\n+                r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n                 printf(\"UPNP_DeletePortMapping() returned : %d\\n\", r);\n                 freeUPNPDevlist(devlist); devlist = 0;\n                 FreeUPNPUrls(&urls);\n@@ -1092,16 +1090,16 @@ void ThreadMapPort2(void* parg)\n #ifndef UPNPDISCOVER_SUCCESS\n                 /* miniupnpc 1.5 */\n                 r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-                                    port, port, lanaddr, strDesc.c_str(), \"TCP\", 0);\n+                                    port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0);\n #else\n                 /* miniupnpc 1.6 */\n                 r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-                                    port, port, lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+                                    port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n #endif\n \n                 if(r!=UPNPCOMMAND_SUCCESS)\n                     printf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n-                        port, port, lanaddr, r, strupnperror(r));\n+                        port.c_str(), port.c_str(), lanaddr, r, strupnperror(r));\n                 else\n                     printf(\"UPnP Port Mapping successful.\\n\");;\n             }"
      }
    ]
  }
]