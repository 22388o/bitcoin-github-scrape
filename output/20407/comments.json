[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728743668",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-728743668",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 728743668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODc0MzY2OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T07:33:29Z",
    "updated_at": "2020-11-17T07:33:29Z",
    "author_association": "MEMBER",
    "body": "How is this different from includeconf with the rpcauth in it as the only content?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728743668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728781240",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-728781240",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 728781240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODc4MTI0MA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T08:48:39Z",
    "updated_at": "2020-11-17T08:48:39Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke I thought about suggesting that but main issue is that `-includeconf` can't be specified in the command line. Also the file pointed by `-includeconf` can have more configurations.\r\n\r\nMaybe @ruimarinho and @NicolasDorier can weight on the the approach.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728781240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728935177",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-728935177",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 728935177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkzNTE3Nw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-17T13:43:01Z",
    "updated_at": "2020-11-17T13:43:01Z",
    "author_association": "MEMBER",
    "body": "Your approach doesn't support multiple credentials. I also see the cookie as a local authentication mechanism.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728935177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729586864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-729586864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 729586864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTU4Njg2NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T10:29:40Z",
    "updated_at": "2020-11-18T10:29:40Z",
    "author_association": "MEMBER",
    "body": "Kind of meh on adding yet another RPC authentication method that's only a slight variation from the other ones, but as long as it (and all combinatorial options it opens up) are tested sufficiently I'm not strongly against it either.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729586864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729622254",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-729622254",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 729622254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTYyMjI1NA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T11:36:22Z",
    "updated_at": "2020-11-18T11:36:22Z",
    "author_association": "MEMBER",
    "body": "@laanwj while @ryanofsky approach is indeed simple (just misses the detail of not erasing cookie file on shutdown) it doesn't support different users with different whitelists. Also note that @ryanofsky approach changes cookie semantic - the cookie is available while the daemon is running. I'd even limit cookie authentication to loopback interface.\r\n\r\n> the cookie value would be automatically picked up by `bitcoin-cli` client and potentially the `electrs` client.\r\n\r\n@ryanofsky executing `bitcoin-cli` on the bitcoind container will always works - cookie is there. And for `electrs` it might be easier to just use config `cookie=USER:PASSWORD\".\r\n\r\n> There wouldn't be a need to generate username, password, and hashed auth strings, pass the hashed auth string to the server, and pass the username and password strings to each client separately. The cookie value could be any random string with no need for hashing at all and placed in a common location where it is available to the server and every client that needs to read it.\r\n\r\n@ryanofsky this is not really necessary. Looks like we should just add support for bearer authentication in addition to basic authentication. In this case we could support `-rpcauth=user:token` and `-rpcauthfile=user:path` and then clients could just send `Authorization: Bearer <token>` header (the server would be able to identify the user and check its whitelist).\r\n\r\nIt just sounds reasonable to me to support different credentials and whitelists and make this easy to setup with docker containers and secrets.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729622254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729651383",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-729651383",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 729651383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTY1MTM4Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T12:40:03Z",
    "updated_at": "2020-11-18T12:40:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@promag sure, and thanks for implementing this. I just suggested the [`-rpccookiegenerate`](https://github.com/bitcoin/bitcoin/pull/20407#pullrequestreview-532347871) boolean option because it seemed to directly address the reported issue, because it seemed simple to implement as a ~one-line change, and because it seemed like a simpler configuration to set up: not requiring any scripting or hashing, not requiring any client configuration if using `bitcoin-cli` or using the default cookie path with another client.\r\n\r\nAlso, it's been said a few times that `-norpccookiegenerate` wouldn't support multiple credentials, but this would be a easy restriction to lift now or in the future by replacing `GetArg(\"-rpccookiefile\")` with `GetArgs(\"-rpccookiefile\")` and `std::string` with `std::set<std::string>` a few places.\r\n\r\nI do agree with you that it would probably make sense to stop allowing cookie authentication from non-local connections by default. I also think the `-rpcauthfile` option implemented here would be a useful thing to have (though allowing `-includeconf` on the command line could be more flexible). I can see how there might be security concerns and potential for insecure misconfiguration with cookie files since the secret isn't hashed. But I think all the solutions that have been discussed have been reasonable.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729651383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729655483",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-729655483",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 729655483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTY1NTQ4Mw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T12:48:40Z",
    "updated_at": "2020-11-18T12:48:40Z",
    "author_association": "MEMBER",
    "body": "I'd say the advantage of `-rpcauthfile` is to have a file with just the token and so more suitable as a shared secret.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729655483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729656006",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-729656006",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 729656006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTY1NjAwNg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-18T12:49:46Z",
    "updated_at": "2020-11-18T12:49:46Z",
    "author_association": "MEMBER",
    "body": "> I do agree with you that it would probably make sense to stop allowing cookie authentication from non-local connections by default.\r\n\r\nOk, this can be submitted on a separate branch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729656006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732457946",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#issuecomment-732457946",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20407",
    "id": 732457946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjQ1Nzk0Ng==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T22:17:12Z",
    "updated_at": "2020-11-23T22:17:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20461 (rpc: Validate -rpcauth arguments by promag)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732457946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525144140",
    "pull_request_review_id": 532347871,
    "id": 525144140,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE0NDE0MA==",
    "diff_hunk": "@@ -256,9 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n+        for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I guess it's a preexisting problem, but lack of any error feedback when the syntax is wrong seems like a usability nightmare",
    "created_at": "2020-11-17T13:15:51Z",
    "updated_at": "2020-11-17T13:37:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525144140",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525144140"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525144140"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525144140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525159841",
    "pull_request_review_id": 532370289,
    "id": 525159841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1OTg0MQ==",
    "diff_hunk": "@@ -256,9 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n+        for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah it is, can be improved.",
    "created_at": "2020-11-17T13:40:34Z",
    "updated_at": "2020-11-17T13:40:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525159841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525159841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525159841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525159841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT",
    "in_reply_to_id": 525144140
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525193797",
    "pull_request_review_id": 532413439,
    "id": 525193797,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mzc5Nw==",
    "diff_hunk": "@@ -256,9 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n+        for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually I think I'll do it in this branch, `-rpcauth` values are now processed once.",
    "created_at": "2020-11-17T14:25:10Z",
    "updated_at": "2020-11-17T14:25:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525193797",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525193797"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525193797"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525193797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT",
    "in_reply_to_id": 525144140
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525346331",
    "pull_request_review_id": 532612925,
    "id": 525346331,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NjMzMQ==",
    "diff_hunk": "@@ -256,9 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n+        for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "schildbach",
      "id": 743306,
      "node_id": "MDQ6VXNlcjc0MzMwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/743306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schildbach",
      "html_url": "https://github.com/schildbach",
      "followers_url": "https://api.github.com/users/schildbach/followers",
      "following_url": "https://api.github.com/users/schildbach/following{/other_user}",
      "gists_url": "https://api.github.com/users/schildbach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schildbach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schildbach/subscriptions",
      "organizations_url": "https://api.github.com/users/schildbach/orgs",
      "repos_url": "https://api.github.com/users/schildbach/repos",
      "events_url": "https://api.github.com/users/schildbach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schildbach/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Such an `-rpccookiegenerate=false` option is what I had in mind in #20387. I would prefer that exactly for the simplicity of using an arbitrary string as cookie (which I can share via Docker's secret mechanism).",
    "created_at": "2020-11-17T17:24:59Z",
    "updated_at": "2020-11-17T17:24:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525346331",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525346331"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r525346331"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525346331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT",
    "in_reply_to_id": 525144140
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526064188",
    "pull_request_review_id": 533415925,
    "id": 526064188,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA2NDE4OA==",
    "diff_hunk": "@@ -250,14 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n         for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n             std::vector<std::string> fields;\n             boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n             if (fields.size() == 3) g_rpcauth.push_back(fields);\n         }\n+        for (std::string path : gArgs.GetArgs(\"-rpcauthfile\")) {\n+            fsbridge::ifstream file;\n+            file.open(path);\n+            if (!file.is_open()) continue;\n+            std::string rpcauth;\n+            std::getline(file, rpcauth);\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 47,
    "original_position": 21,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"rpc: Support -rpcauthfile argument\" (10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097)\r\n\r\nI think this should refuse to load if the rpcauthfile isn't formatted correctly. Logging and error and returning false might be sufficient to do this.\r\n\r\nI think an invalid -rpcauth option above should also trigger an error, or at least report an error, but it's pre-existing code so not directly related",
    "created_at": "2020-11-18T12:55:08Z",
    "updated_at": "2020-11-18T13:29:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526064188",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526064188"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526064188"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526064188/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 269,
    "original_line": 269,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526066250",
    "pull_request_review_id": 533415925,
    "id": 526066250,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA2NjI1MA==",
    "diff_hunk": "@@ -38,9 +39,14 @@ def main():\n     salt = generate_salt(16)\n     password_hmac = password_to_hmac(salt, args.password)\n \n-    print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(args.password))\n+    if args.output:\n+        file = open(args.output, \"x\")\n+        file.write('{0}:{1}${2}'.format(args.username, salt, password_hmac))\n+        print('Your password:\\n{0}'.format(args.password))",
    "path": "share/rpcauth/rpcauth.py",
    "position": 18,
    "original_position": 18,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"rpcauth: Support storing credentials in a file\" (ff5d7fa1e4c340657110436a29aecff85de6eb80)\r\n\r\nSame line is printed in else branch, could dedup.",
    "created_at": "2020-11-18T12:58:39Z",
    "updated_at": "2020-11-18T13:02:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526066250",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526066250"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526066250"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526066250/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 45,
    "original_line": 45,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526067687",
    "pull_request_review_id": 533415925,
    "id": 526067687,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA2NzY4Nw==",
    "diff_hunk": "@@ -38,9 +39,14 @@ def main():\n     salt = generate_salt(16)\n     password_hmac = password_to_hmac(salt, args.password)\n \n-    print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(args.password))\n+    if args.output:\n+        file = open(args.output, \"x\")",
    "path": "share/rpcauth/rpcauth.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"rpcauth: Support storing credentials in a file\" (ff5d7fa1e4c340657110436a29aecff85de6eb80)\r\n\r\nDoesn't really matter but \r\n\r\n```python\r\nwith open(args.output, \"x\") as file:\r\n   file.write(...)\r\n```\r\n\r\nIs slightly better style because it ensures that the file is closed immediately after the write.\r\n\r\nAlso may wish to avoid `file` variable name and use something like `f` or `fp` since `file` is a builtin function.",
    "created_at": "2020-11-18T13:00:57Z",
    "updated_at": "2020-11-18T13:02:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526067687",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526067687"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526067687"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526067687/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526080624",
    "pull_request_review_id": 533436154,
    "id": 526080624,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA4MDYyNA==",
    "diff_hunk": "@@ -250,14 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n         for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n             std::vector<std::string> fields;\n             boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n             if (fields.size() == 3) g_rpcauth.push_back(fields);\n         }\n+        for (std::string path : gArgs.GetArgs(\"-rpcauthfile\")) {\n+            fsbridge::ifstream file;\n+            file.open(path);\n+            if (!file.is_open()) continue;\n+            std::string rpcauth;\n+            std::getline(file, rpcauth);\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 47,
    "original_position": 21,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I think this should refuse to load\r\n\r\nYou mean the process should exit?",
    "created_at": "2020-11-18T13:18:35Z",
    "updated_at": "2020-11-18T13:18:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526080624",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526080624"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526080624"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526080624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 269,
    "original_line": 269,
    "side": "RIGHT",
    "in_reply_to_id": 526064188
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526085847",
    "pull_request_review_id": 533442876,
    "id": 526085847,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA4NTg0Nw==",
    "diff_hunk": "@@ -250,14 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n         for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n             std::vector<std::string> fields;\n             boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n             if (fields.size() == 3) g_rpcauth.push_back(fields);\n         }\n+        for (std::string path : gArgs.GetArgs(\"-rpcauthfile\")) {\n+            fsbridge::ifstream file;\n+            file.open(path);\n+            if (!file.is_open()) continue;\n+            std::string rpcauth;\n+            std::getline(file, rpcauth);\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 47,
    "original_position": 21,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526080624\r\n\r\n> > I think this should refuse to load\r\n> \r\n> You mean the process should exit?\r\n\r\nI would exit, but don't think it would be crazy not to exit, do think it would be crazy to silently ignore a configuration error giving no feedback. I am presuming returning false exits, but didn't check.",
    "created_at": "2020-11-18T13:26:48Z",
    "updated_at": "2020-11-18T13:26:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526085847",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526085847"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r526085847"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/526085847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 269,
    "original_line": 269,
    "side": "RIGHT",
    "in_reply_to_id": 526064188
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530000587",
    "pull_request_review_id": 538047258,
    "id": 530000587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAwMDU4Nw==",
    "diff_hunk": "@@ -38,9 +39,14 @@ def main():\n     salt = generate_salt(16)\n     password_hmac = password_to_hmac(salt, args.password)\n \n-    print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(args.password))\n+    if args.output:\n+        file = open(args.output, \"x\")",
    "path": "share/rpcauth/rpcauth.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Mode should probably be `'a'`",
    "created_at": "2020-11-24T23:26:08Z",
    "updated_at": "2020-11-24T23:30:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530000587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530000587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530000587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530000587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530002535",
    "pull_request_review_id": 538047258,
    "id": 530002535,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAwMjUzNQ==",
    "diff_hunk": "@@ -256,9 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n+        for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Syntax isn't necessarily wrong. It could be a 4th field added (eg, Knots uses it to restrict access to the named wallet).\r\n\r\nA debug log line can't hurt though.",
    "created_at": "2020-11-24T23:28:12Z",
    "updated_at": "2020-11-24T23:30:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530002535",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530002535"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530002535"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530002535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT",
    "in_reply_to_id": 525144140
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530004151",
    "pull_request_review_id": 538047258,
    "id": 530004151,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAwNDE1MQ==",
    "diff_hunk": "@@ -250,14 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n         for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n             std::vector<std::string> fields;\n             boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n             if (fields.size() == 3) g_rpcauth.push_back(fields);\n         }\n+        for (std::string path : gArgs.GetArgs(\"-rpcauthfile\")) {\n+            fsbridge::ifstream file;\n+            file.open(path);\n+            if (!file.is_open()) continue;\n+            std::string rpcauth;\n+            std::getline(file, rpcauth);\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 47,
    "original_position": 21,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See above, it's not necessarily an error",
    "created_at": "2020-11-24T23:29:48Z",
    "updated_at": "2020-11-24T23:30:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530004151",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530004151"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530004151"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530004151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 269,
    "original_line": 269,
    "side": "RIGHT",
    "in_reply_to_id": 526064188
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530010928",
    "pull_request_review_id": 538051522,
    "id": 530010928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAxMDkyOA==",
    "diff_hunk": "@@ -38,9 +39,14 @@ def main():\n     salt = generate_salt(16)\n     password_hmac = password_to_hmac(salt, args.password)\n \n-    print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(args.password))\n+    if args.output:\n+        file = open(args.output, \"x\")",
    "path": "share/rpcauth/rpcauth.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was thinking it should fail if the file already exists.",
    "created_at": "2020-11-24T23:37:01Z",
    "updated_at": "2020-11-24T23:37:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530010928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530010928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530010928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530010928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 530000587
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530012368",
    "pull_request_review_id": 538052124,
    "id": 530012368,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAxMjM2OA==",
    "diff_hunk": "@@ -250,14 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n         for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n             std::vector<std::string> fields;\n             boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n             if (fields.size() == 3) g_rpcauth.push_back(fields);\n         }\n+        for (std::string path : gArgs.GetArgs(\"-rpcauthfile\")) {\n+            fsbridge::ifstream file;\n+            file.open(path);\n+            if (!file.is_open()) continue;\n+            std::string rpcauth;\n+            std::getline(file, rpcauth);\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);",
    "path": "src/httprpc.cpp",
    "position": 47,
    "original_position": 21,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@luke-jr please review #20461, this one should rebase with that.",
    "created_at": "2020-11-24T23:38:33Z",
    "updated_at": "2020-11-24T23:38:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530012368",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530012368"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530012368"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530012368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 269,
    "original_line": 269,
    "side": "RIGHT",
    "in_reply_to_id": 526064188
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530023136",
    "pull_request_review_id": 538062322,
    "id": 530023136,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAyMzEzNg==",
    "diff_hunk": "@@ -38,9 +39,14 @@ def main():\n     salt = generate_salt(16)\n     password_hmac = password_to_hmac(salt, args.password)\n \n-    print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(args.password))\n+    if args.output:\n+        file = open(args.output, \"x\")",
    "path": "share/rpcauth/rpcauth.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Then how would you build a file with many lines?",
    "created_at": "2020-11-25T00:05:40Z",
    "updated_at": "2020-11-25T00:05:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530023136",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530023136"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r530023136"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530023136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 530000587
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532315862",
    "pull_request_review_id": 540563434,
    "id": 532315862,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNTg2Mg==",
    "diff_hunk": "@@ -38,9 +39,14 @@ def main():\n     salt = generate_salt(16)\n     password_hmac = password_to_hmac(salt, args.password)\n \n-    print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(args.password))\n+    if args.output:\n+        file = open(args.output, \"x\")",
    "path": "share/rpcauth/rpcauth.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Needs to specify encoding\r\n\r\n```suggestion\r\n        file = open(args.output, \"x\", encoding=\"utf8\")\r\n```",
    "created_at": "2020-11-30T02:27:08Z",
    "updated_at": "2020-11-30T02:27:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r532315862",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532315862"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r532315862"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532315862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698912478",
    "pull_request_review_id": 742194263,
    "id": 698912478,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODkxMjQ3OA==",
    "diff_hunk": "@@ -256,9 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")",
    "path": "src/httprpc.cpp",
    "position": 31,
    "original_position": 31,
    "commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "original_commit_id": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This breaks the ability to set `-rpcauth=` to void all prior `-rpcauth` parameters.",
    "created_at": "2021-08-31T01:17:39Z",
    "updated_at": "2021-08-31T01:17:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r698912478",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698912478"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20407#discussion_r698912478"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698912478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 253,
    "original_line": 253,
    "side": "RIGHT"
  }
]