[
  {
    "sha": "6272dcd6032790f5b06f7afac14b23340b0a3c98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjcyZGNkNjAzMjc5MGY1YjA2ZjdhZmFjMTRiMjMzNDBiMGEzYzk4",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-11-16T23:53:36Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-11-17T12:56:19Z"
      },
      "message": "rpc: Refactor to process -rpcauth once",
      "tree": {
        "sha": "4f7129e019776579a5e68abaafa95a6f3dfb953f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f7129e019776579a5e68abaafa95a6f3dfb953f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6272dcd6032790f5b06f7afac14b23340b0a3c98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6272dcd6032790f5b06f7afac14b23340b0a3c98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6272dcd6032790f5b06f7afac14b23340b0a3c98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6272dcd6032790f5b06f7afac14b23340b0a3c98/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80e32e120ee4ba7e5b458338682cf1130964218f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80e32e120ee4ba7e5b458338682cf1130964218f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80e32e120ee4ba7e5b458338682cf1130964218f"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 8,
      "deletions": 9
    },
    "files": [
      {
        "sha": "8885fceb291de20aebf07e2e033a2d321fde81da",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6272dcd6032790f5b06f7afac14b23340b0a3c98/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6272dcd6032790f5b06f7afac14b23340b0a3c98/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=6272dcd6032790f5b06f7afac14b23340b0a3c98",
        "patch": "@@ -27,6 +27,8 @@\n /** WWW-Authenticate to present with 401 Unauthorized response */\n static const char* WWW_AUTH_HEADER_DATA = \"Basic realm=\\\"jsonrpc\\\"\";\n \n+static std::vector<std::vector<std::string>> g_rpcauth;\n+\n /** Simple one-shot callback timer to be used by the RPC mechanism to e.g.\n  * re-lock the wallet.\n  */\n@@ -99,15 +101,7 @@ static bool multiUserAuthorized(std::string strUserPass)\n     std::string strUser = strUserPass.substr(0, strUserPass.find(':'));\n     std::string strPass = strUserPass.substr(strUserPass.find(':') + 1);\n \n-    for (const std::string& strRPCAuth : gArgs.GetArgs(\"-rpcauth\")) {\n-        //Search for multi-user login/pass \"rpcauth\" from config\n-        std::vector<std::string> vFields;\n-        boost::split(vFields, strRPCAuth, boost::is_any_of(\":$\"));\n-        if (vFields.size() != 3) {\n-            //Incorrect formatting in config file\n-            continue;\n-        }\n-\n+    for (const auto& vFields : g_rpcauth) {\n         std::string strName = vFields[0];\n         if (!TimingResistantEqual(strName, strUser)) {\n             continue;\n@@ -259,6 +253,11 @@ static bool InitRPCAuthentication()\n     if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n+        for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);\n+        }\n     }\n \n     g_rpc_whitelist_default = gArgs.GetBoolArg(\"-rpcwhitelistdefault\", gArgs.IsArgSet(\"-rpcwhitelist\"));"
      }
    ]
  },
  {
    "sha": "10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGVmNzMyMWYwZGFiOGNiN2RmZTc5ZjdjMGY5ZDg4NmQ4ZmUwMDk3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-11-16T23:53:39Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-11-17T12:56:19Z"
      },
      "message": "rpc: Support -rpcauthfile argument\n\nThis argument is similar to -rpcauth but takes the value from the\nspecified file content",
      "tree": {
        "sha": "8fc05ef0f7fc651547b9daa1037916eed066cc27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8fc05ef0f7fc651547b9daa1037916eed066cc27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6272dcd6032790f5b06f7afac14b23340b0a3c98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6272dcd6032790f5b06f7afac14b23340b0a3c98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6272dcd6032790f5b06f7afac14b23340b0a3c98"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 12,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a2d6fb45cdccc231c7e9c30f13f37a33a6cfd2a0",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
        "patch": "@@ -250,14 +250,24 @@ static bool InitRPCAuthentication()\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n-    if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n+    if (gArgs.GetArg(\"-rpcauth\", \"\") != \"\" || gArgs.GetArg(\"-rpcauthfile\", \"\") != \"\")\n     {\n         LogPrintf(\"Using rpcauth authentication.\\n\");\n         for (std::string rpcauth : gArgs.GetArgs(\"-rpcauth\")) {\n             std::vector<std::string> fields;\n             boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n             if (fields.size() == 3) g_rpcauth.push_back(fields);\n         }\n+        for (std::string path : gArgs.GetArgs(\"-rpcauthfile\")) {\n+            fsbridge::ifstream file;\n+            file.open(path);\n+            if (!file.is_open()) continue;\n+            std::string rpcauth;\n+            std::getline(file, rpcauth);\n+            std::vector<std::string> fields;\n+            boost::split(fields, rpcauth, boost::is_any_of(\":$\"));\n+            if (fields.size() == 3) g_rpcauth.push_back(fields);\n+        }\n     }\n \n     g_rpc_whitelist_default = gArgs.GetBoolArg(\"-rpcwhitelistdefault\", gArgs.IsArgSet(\"-rpcwhitelist\"));"
      },
      {
        "sha": "da1ed77a9775b236732cac02579cc8952a162e23",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
        "patch": "@@ -568,6 +568,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-rest\", strprintf(\"Accept public REST requests (default: %u)\", DEFAULT_REST_ENABLE), ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcallowip=<ip>\", \"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcauth=<userpw>\", \"Username and HMAC-SHA-256 hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcauth. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::RPC);\n+    argsman.AddArg(\"-rpcauthfile=<userpw>\", \"A file with a single lines with same format as rpcauth. This option can be specified multiple times\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. Do not expose the RPC server to untrusted networks such as the public internet! This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY | ArgsManager::SENSITIVE, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::RPC);"
      }
    ]
  },
  {
    "sha": "ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjVkN2ZhMWU0YzM0MDY1NzExMDQzNmEyOWFlY2ZmODVkZTZlYjgw",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-11-16T23:59:24Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-11-17T12:56:19Z"
      },
      "message": "rpcauth: Support storing credentials in a file\n\nTo be used with -rpcauthfile",
      "tree": {
        "sha": "b2605c69f46e9b5e18b9662d2c5ad589985daba4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2605c69f46e9b5e18b9662d2c5ad589985daba4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff5d7fa1e4c340657110436a29aecff85de6eb80",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff5d7fa1e4c340657110436a29aecff85de6eb80",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff5d7fa1e4c340657110436a29aecff85de6eb80/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10ef7321f0dab8cb7dfe79f7c0f9d886d8fe0097"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3ccae5bada73cd3ae218bef945960a43fdf6dc8b",
        "filename": "share/rpcauth/rpcauth.py",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff5d7fa1e4c340657110436a29aecff85de6eb80/share/rpcauth/rpcauth.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff5d7fa1e4c340657110436a29aecff85de6eb80/share/rpcauth/rpcauth.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/rpcauth.py?ref=ff5d7fa1e4c340657110436a29aecff85de6eb80",
        "patch": "@@ -27,6 +27,7 @@ def main():\n     parser = ArgumentParser(description='Create login credentials for a JSON-RPC user')\n     parser.add_argument('username', help='the username for authentication')\n     parser.add_argument('password', help='leave empty to generate a random password or specify \"-\" to prompt for password', nargs='?')\n+    parser.add_argument('--output', dest='output', help='file to store credentials, to be used with -rpcauthfile')\n     args = parser.parse_args()\n \n     if not args.password:\n@@ -38,9 +39,14 @@ def main():\n     salt = generate_salt(16)\n     password_hmac = password_to_hmac(salt, args.password)\n \n-    print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(args.password))\n+    if args.output:\n+        file = open(args.output, \"x\")\n+        file.write('{0}:{1}${2}'.format(args.username, salt, password_hmac))\n+        print('Your password:\\n{0}'.format(args.password))\n+    else:\n+        print('String to be appended to bitcoin.conf:')\n+        print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n+        print('Your password:\\n{0}'.format(args.password))\n \n if __name__ == '__main__':\n     main()"
      }
    ]
  }
]