[
  {
    "sha": "2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzQxZTliNTMzZmVkZjliYWRlNWI1NWQ2NzZiMmMwY2Y1ZWQ4NjA0",
    "commit": {
      "author": {
        "name": "super3",
        "email": "me@super3.org",
        "date": "2013-05-20T04:30:00Z"
      },
      "committer": {
        "name": "super3",
        "email": "me@super3.org",
        "date": "2013-05-20T04:30:00Z"
      },
      "message": "Docs Markdown Cleanup",
      "tree": {
        "sha": "4322a190260aef9b73e5cfa28d818e65d5a64f05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4322a190260aef9b73e5cfa28d818e65d5a64f05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/comments",
    "author": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd"
      }
    ],
    "stats": {
      "total": 842,
      "additions": 443,
      "deletions": 399
    },
    "files": [
      {
        "sha": "ecd9c60361fec5807cf05b2e9daa3db71cd657a8",
        "filename": "doc/README",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd",
        "patch": "@@ -1,33 +0,0 @@\n-Bitcoin 0.8.2 BETA\n-\n-Copyright (c) 2009-2013 Bitcoin Developers\n-Distributed under the MIT/X11 software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-This product includes software developed by the OpenSSL Project for use in\n-the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\n-cryptographic software written by Eric Young (eay@cryptsoft.com).\n-\n-\n-Intro\n------\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\n-completely decentralized, without the need for a central server or trusted\n-parties.  Users hold the crypto keys to their own money and transact directly\n-with each other, with the help of a P2P network to check for double-spending.\n-\n-\n-Setup\n------\n-You need the Qt4 run-time libraries to run Bitcoin-Qt. On Debian or Ubuntu:\n-  sudo apt-get install libqtgui4\n-\n-Unpack the files into a directory and run:\n- bin/32/bitcoin-qt (GUI, 32-bit)\n- bin/32/bitcoind (headless, 32-bit)\n- bin/64/bitcoin-qt (GUI, 64-bit)\n- bin/64/bitcoind (headless, 64-bit)\n-\n-\n-See the documentation at the bitcoin wiki:\n-  https://en.bitcoin.it/wiki/Main_Page\n-for help and more information."
      },
      {
        "sha": "cdd31057adc47a33b4574a4392660c812970ac55",
        "filename": "doc/README.md",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -0,0 +1,46 @@\n+Bitcoin 0.8.2 BETA\n+====================\n+\n+Copyright (c) 2009-2013 Bitcoin Developers\n+\n+Distributed under the MIT/X11 software license, see the accompanying\n+file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n+cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard.\n+\n+\n+Intro\n+---------------------\n+Bitcoin is a free open source peer-to-peer electronic cash system that is\n+completely decentralized, without the need for a central server or trusted\n+parties.  Users hold the crypto keys to their own money and transact directly\n+with each other, with the help of a P2P network to check for double-spending.\n+\n+\n+Setup\n+---------------------\n+You need the Qt4 run-time libraries to run Bitcoin-Qt. On Debian or Ubuntu:\n+\t`sudo apt-get install libqtgui4`\n+\n+Unpack the files into a directory and run:\n+\n+- bin/32/bitcoin-qt (GUI, 32-bit)\n+- bin/32/bitcoind (headless, 32-bit)\n+- bin/64/bitcoin-qt (GUI, 64-bit)\n+- bin/64/bitcoind (headless, 64-bit)\n+\n+See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n+for help and more information.\n+\n+\n+Other Pages\n+---------------------\n+- [Unix Build Notes](build-unix.md)\n+- [OSX Build Notes](build-osx.md)\n+- [Windows Build Notes](build-msw.md)\n+- [Coding Guidelines](coding.md)\n+- [Release Process](release-process.md)\n+- [Release Notes](release-notes.md)\n+- [Multiwallet Qt Development](multiwallet-qt.md)\n+- [Unit Tests](unit-tests.md)\n+- [Translation Process](translation_process.md)\n\\ No newline at end of file"
      },
      {
        "sha": "b7abe2887781c149a800d09e64321d9eca272ba7",
        "filename": "doc/build-msw.md",
        "status": "renamed",
        "additions": 36,
        "deletions": 30,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/build-msw.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/build-msw.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -1,10 +1,9 @@\n-Copyright (c) 2009-2012 Bitcoin Developers\n+Copyright (c) 2009-2013 Bitcoin Developers\n+\n Distributed under the MIT/X11 software license, see the accompanying\n file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-This product includes software developed by the OpenSSL Project for use in\n-the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\n-cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP\n-software written by Thomas Bernard.\n+This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n+cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard.\n \n \n See readme-qt.rst for instructions on building Bitcoin-Qt, the\n@@ -30,55 +29,62 @@ Boost           \\boost-1.50.0-mgw          http://www.boost.org/users/download/\n miniupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n \n Their licenses:\n-OpenSSL        Old BSD license with the problematic advertising requirement\n-Berkeley DB    New BSD license with additional requirement that linked software must be free open source\n-Boost          MIT-like license\n-miniupnpc      New (3-clause) BSD license\n+\n+\tOpenSSL        Old BSD license with the problematic advertising requirement\n+\tBerkeley DB    New BSD license with additional requirement that linked software must be free open source\n+\tBoost          MIT-like license\n+\tminiupnpc      New (3-clause) BSD license\n \n Versions used in this release:\n-OpenSSL      1.0.1c\n-Berkeley DB  4.8.30.NC\n-Boost        1.50.0\n-miniupnpc    1.6\n+\n+\tOpenSSL      1.0.1c\n+\tBerkeley DB  4.8.30.NC\n+\tBoost        1.50.0\n+\tminiupnpc    1.6\n \n \n OpenSSL\n -------\n MSYS shell:\n+\n un-tar sources with MSYS 'tar xfz' to avoid issue with symlinks (OpenSSL ticket 2377)\n change 'MAKE' env. variable from 'C:\\MinGW32\\bin\\mingw32-make.exe' to '/c/MinGW32/bin/mingw32-make.exe'\n \n-cd /c/openssl-1.0.1c-mgw\n-./config\n-make\n+\tcd /c/openssl-1.0.1c-mgw\n+\t./config\n+\tmake\n \n Berkeley DB\n -----------\n MSYS shell:\n-cd /c/db-4.8.30.NC-mgw/build_unix\n-sh ../dist/configure --enable-mingw --enable-cxx\n-make\n+\n+\tcd /c/db-4.8.30.NC-mgw/build_unix\n+\tsh ../dist/configure --enable-mingw --enable-cxx\n+\tmake\n \n Boost\n -----\n DOS prompt:\n-downloaded boost jam 3.1.18\n-cd \\boost-1.50.0-mgw\n-bjam toolset=gcc --build-type=complete stage\n+\n+\tdownloaded boost jam 3.1.18\n+\tcd \\boost-1.50.0-mgw\n+\tbjam toolset=gcc --build-type=complete stage\n \n MiniUPnPc\n ---------\n-UPnP support is optional, make with USE_UPNP= to disable it.\n+UPnP support is optional, make with `USE_UPNP=` to disable it.\n \n MSYS shell:\n-cd /c/miniupnpc-1.6-mgw\n-make -f Makefile.mingw\n-mkdir miniupnpc\n-cp *.h miniupnpc/\n+\n+\tcd /c/miniupnpc-1.6-mgw\n+\tmake -f Makefile.mingw\n+\tmkdir miniupnpc\n+\tcp *.h miniupnpc/\n \n Bitcoin\n -------\n DOS prompt:\n-cd \\bitcoin\\src\n-mingw32-make -f makefile.mingw\n-strip bitcoind.exe\n+\n+\tcd \\bitcoin\\src\n+\tmingw32-make -f makefile.mingw\n+\tstrip bitcoind.exe",
        "previous_filename": "doc/build-msw.txt"
      },
      {
        "sha": "6181bb255d22242979e0c3f09981220239c4cc21",
        "filename": "doc/build-unix.md",
        "status": "renamed",
        "additions": 62,
        "deletions": 56,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -1,26 +1,23 @@\n-Copyright (c) 2009-2012 Bitcoin Developers\n+Copyright (c) 2009-2013 Bitcoin Developers\n+\n Distributed under the MIT/X11 software license, see the accompanying\n file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-This product includes software developed by the OpenSSL Project for use in\n-the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\n-cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP\n-software written by Thomas Bernard.\n-\n+This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n+cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard.\n \n UNIX BUILD NOTES\n-================\n+====================\n \n To Build\n---------\n+---------------------\n \n-cd src/\n-make -f makefile.unix            # Headless bitcoin\n+\tcd src/\n+\tmake -f makefile.unix\t\t# Headless bitcoin\n \n-See readme-qt.rst for instructions on building Bitcoin-Qt,\n-the graphical user interface.\n+See readme-qt.rst for instructions on building Bitcoin-Qt, the graphical user interface.\n \n Dependencies\n-------------\n+---------------------\n \n  Library     Purpose           Description\n  -------     -------           -----------\n@@ -29,67 +26,72 @@ Dependencies\n  libboost    Boost             C++ Library\n  miniupnpc   UPnP Support      Optional firewall-jumping support\n \n-miniupnpc may be used for UPnP port mapping.  It can be downloaded from\n-http://miniupnp.tuxfamily.org/files/.  UPnP support is compiled in and\n+[miniupnpc](http://miniupnp.free.fr/) may be used for UPnP port mapping.  It can be downloaded from [here](\n+http://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n turned off by default.  Set USE_UPNP to a different value to control this:\n- USE_UPNP=-    No UPnP support - miniupnp not required\n- USE_UPNP=0    (the default) UPnP support turned off by default at runtime\n- USE_UPNP=1    UPnP support turned on by default at runtime\n+\n+\tUSE_UPNP=     No UPnP support miniupnp not required\n+\tUSE_UPNP=0    (the default) UPnP support turned off by default at runtime\n+\tUSE_UPNP=1    UPnP support turned on by default at runtime\n \n IPv6 support may be disabled by setting:\n- USE_IPV6=0    Disable IPv6 support\n+\n+\tUSE_IPV6=0    Disable IPv6 support\n \n Licenses of statically linked libraries:\n  Berkeley DB   New BSD license with additional requirement that linked\n                software must be free open source\n  Boost         MIT-like license\n  miniupnpc     New (3-clause) BSD license\n \n-Versions used in this release:\n- GCC           4.3.3\n- OpenSSL       1.0.1c\n- Berkeley DB   4.8.30.NC\n- Boost         1.37\n- miniupnpc     1.6\n+- Versions used in this release:\n+-  GCC           4.3.3\n+-  OpenSSL       1.0.1c\n+-  Berkeley DB   4.8.30.NC\n+-  Boost         1.37\n+-  miniupnpc     1.6\n \n Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n- sudo apt-get install build-essential\n- sudo apt-get install libssl-dev\n+\n+\tsudo apt-get install build-essential\n+\tsudo apt-get install libssl-dev\n \n for Ubuntu 12.04:\n- sudo apt-get install libboost-all-dev\n \n- db4.8 packages are available at:\n- https://launchpad.net/~bitcoin/+archive/bitcoin\n+\tsudo apt-get install libboost-all-dev\n+\n+ db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n \n  Ubuntu precise has packages for libdb5.1-dev and libdb5.1++-dev,\n  but using these will break binary wallet compatibility, and is not recommended.\n \n for other Ubuntu & Debian:\n- sudo apt-get install libdb4.8-dev\n- sudo apt-get install libdb4.8++-dev\n- sudo apt-get install libboost1.37-dev\n+\n+\tsudo apt-get install libdb4.8-dev\n+\tsudo apt-get install libdb4.8++-dev\n+\tsudo apt-get install libboost1.37-dev\n  (If using Boost 1.37, append -mt to the boost libraries in the makefile)\n \n Optional:\n- sudo apt-get install libminiupnpc-dev (see USE_UPNP compile flag)\n+\n+\tsudo apt-get install libminiupnpc-dev (see USE_UPNP compile flag)\n \n \n Dependency Build Instructions: Gentoo\n -------------------------------------\n \n-Note: If you just want to install bitcoind on Gentoo, you can add the Bitcoin\n-      overlay and use your package manager:\n-          layman -a bitcoin && emerge bitcoind\n+Note: If you just want to install bitcoind on Gentoo, you can add the Bitcoin overlay and use your package manager:\n \n-emerge -av1 --noreplace boost glib openssl sys-libs/db:4.8\n+\tlayman -a bitcoin && emerge bitcoind\n+\temerge -av1 --noreplace boost glib openssl sys-libs/db:4.8\n \n Take the following steps to build (no UPnP support):\n- cd ${BITCOIN_DIR}/src\n- make -f makefile.unix USE_UPNP= USE_IPV6=1 BDB_INCLUDE_PATH='/usr/include/db4.8'\n- strip bitcoind\n+\n+\tcd ${BITCOIN_DIR}/src\n+\tmake -f makefile.unix USE_UPNP= USE_IPV6=1 BDB_INCLUDE_PATH='/usr/include/db4.8'\n+\tstrip bitcoind\n \n \n Notes\n@@ -100,26 +102,28 @@ symbols, which reduces the executable size by about 90%.\n \n miniupnpc\n ---------\n-tar -xzvf miniupnpc-1.6.tar.gz\n-cd miniupnpc-1.6\n-make\n-sudo su\n-make install\n+\ttar -xzvf miniupnpc-1.6.tar.gz\n+\tcd miniupnpc-1.6\n+\tmake\n+\tsudo su\n+\tmake install\n \n \n Berkeley DB\n -----------\n You need Berkeley DB 4.8.  If you have to build Berkeley DB yourself:\n-../dist/configure --enable-cxx\n-make\n+\n+\t../dist/configure --enable-cxx\n+\tmake\n \n \n Boost\n -----\n If you need to build Boost yourself:\n-sudo su\n-./bootstrap.sh\n-./bjam install\n+\n+\tsudo su\n+\t./bootstrap.sh\n+\t./bjam install\n \n \n Security\n@@ -138,10 +142,12 @@ exploit even if a vulnerability is found, you can take the following measures:\n     such as: \"relocation R_X86_64_32 against `......' can not be used when making a shared object;\"\n \n     To build with PIE, use:\n-    make -f makefile.unix ... -e PIE=1\n+\n+    \tmake -f makefile.unix ... -e PIE=1\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n-    scanelf -e ./bitcoin\n+\n+    \tscanelf -e ./bitcoin\n \n     The output should contain:\n      TYPE\n@@ -155,10 +161,10 @@ exploit even if a vulnerability is found, you can take the following measures:\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    scanelf -e ./bitcoin\n+    `scanelf -e ./bitcoin`\n \n     the output should contain:\n-    STK/REL/PTL\n-    RW- R-- RW-\n+\tSTK/REL/PTL\n+\tRW- R-- RW-\n \n     The STK RW- means that the stack is readable and writeable but not executable.",
        "previous_filename": "doc/build-unix.txt"
      },
      {
        "sha": "3581d7deb2d4bb7fd8e31307140696e41f0e9aa7",
        "filename": "doc/coding.md",
        "status": "added",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/coding.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/coding.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -0,0 +1,94 @@\n+Coding\n+====================\n+\n+Please be consistent with the existing coding style.\n+\n+Block style:\n+\n+\tbool Function(char* psz, int n)\n+\t{\n+\t    // Comment summarising what this section of code does\n+\t    for (int i = 0; i < n; i++)\n+\t    {\n+\t        // When something fails, return early\n+\t        if (!Something())\n+\t            return false;\n+\t        ...\n+\t    }\n+\t\n+\t    // Success return is usually at the end\n+\t    return true;\n+\t}\n+\n+- ANSI/Allman block style\n+- 4 space indenting, no tabs\n+- No extra spaces inside parenthesis; please don't do ( this )\n+- No space after function names, one space after if, for and while\n+\n+Variable names begin with the type in lowercase, like nSomeVariable.\n+Please don't put the first word of the variable name in lowercase like\n+someVariable.\n+\n+Common types:\n+\n+\tn       integer number: short, unsigned short, int, unsigned int, int64, uint64, sometimes char if used as a number\n+\td       double, float\n+\tf       flag\n+\thash    uint256\n+\tp       pointer or array, one p for each level of indirection\n+\tpsz     pointer to null terminated string\n+\tstr     string object\n+\tv       vector or similar list objects\n+\tmap     map or multimap\n+\tset     set or multiset\n+\tbn      CBigNum\n+\n+-------------------------\n+Locking/mutex usage notes\n+\n+The code is multi-threaded, and uses mutexes and the\n+LOCK/TRY_LOCK macros to protect data structures.\n+\n+Deadlocks due to inconsistent lock ordering (thread 1 locks cs_main\n+and then cs_wallet, while thread 2 locks them in the opposite order:\n+result, deadlock as each waits for the other to release its lock) are\n+a problem. Compile with -DDEBUG_LOCKORDER to get lock order\n+inconsistencies reported in the debug.log file.\n+\n+Re-architecting the core code so there are better-defined interfaces\n+between the various components is a goal, with any necessary locking\n+done by the components (e.g. see the self-contained CKeyStore class\n+and its cs_KeyStore lock for example).\n+\n+-------\n+Threads\n+\n+- StartNode : Starts other threads.\n+\n+- ThreadGetMyExternalIP : Determines outside-the-firewall IP address, sends addr message to connected peers when it determines it. \n+\n+- ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n+ \n+- ThreadMessageHandler : Higher-level message handling (sending and receiving).\n+ \n+- ThreadOpenConnections : Initiates new connections to peers.\n+\n+- ThreadTopUpKeyPool : replenishes the keystore's keypool.\n+ \n+- ThreadCleanWalletPassphrase : re-locks an encrypted wallet after user has unlocked it for a period of time. \n+ \n+- SendingDialogStartTransfer : used by pay-via-ip-address code (obsolete)\n+ \n+- ThreadDelayedRepaint : repaint the gui \n+\n+- ThreadFlushWalletDB : Close the wallet.dat file if it hasn't been used in 500ms.\n+ \n+- ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n+ \n+- ThreadBitcoinMiner : Generates bitcoins\n+  \n+- ThreadMapPort : Universal plug-and-play startup/shutdown\n+ \n+- Shutdown : Does an orderly shutdown of everything\n+ \n+- ExitTimeout : Windows-only, sleeps 5 seconds then exits application"
      },
      {
        "sha": "427e388cfd92aed16f20209bb29a7576054df672",
        "filename": "doc/coding.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 96,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd/doc/coding.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd/doc/coding.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.txt?ref=5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd",
        "patch": "@@ -1,96 +0,0 @@\n-Please be consistent with the existing coding style.\r\n-\r\n-Block style:\r\n-\r\n-bool Function(char* psz, int n)\r\n-{\r\n-    // Comment summarising what this section of code does\r\n-    for (int i = 0; i < n; i++)\r\n-    {\r\n-        // When something fails, return early\r\n-        if (!Something())\r\n-            return false;\r\n-        ...\r\n-    }\r\n-\r\n-    // Success return is usually at the end\r\n-    return true;\r\n-}\r\n-\r\n-- ANSI/Allman block style\r\n-- 4 space indenting, no tabs\r\n-- No extra spaces inside parenthesis; please don't do ( this )\r\n-- No space after function names, one space after if, for and while\r\n-\r\n-Variable names begin with the type in lowercase, like nSomeVariable.\r\n-Please don't put the first word of the variable name in lowercase like\r\n-someVariable.\r\n-\r\n-Common types:\r\n-n       integer number: short, unsigned short, int, unsigned int,\r\n-            int64, uint64, sometimes char if used as a number\r\n-d       double, float\r\n-f       flag\r\n-hash    uint256\r\n-p       pointer or array, one p for each level of indirection\r\n-psz     pointer to null terminated string\r\n-str     string object\r\n-v       vector or similar list objects\r\n-map     map or multimap\r\n-set     set or multiset\r\n-bn      CBigNum\r\n-\r\n--------------------------\r\n-Locking/mutex usage notes\r\n-\r\n-The code is multi-threaded, and uses mutexes and the\r\n-LOCK/TRY_LOCK macros to protect data structures.\r\n-\r\n-Deadlocks due to inconsistent lock ordering (thread 1 locks cs_main\r\n-and then cs_wallet, while thread 2 locks them in the opposite order:\r\n-result, deadlock as each waits for the other to release its lock) are\r\n-a problem. Compile with -DDEBUG_LOCKORDER to get lock order\r\n-inconsistencies reported in the debug.log file.\r\n-\r\n-Re-architecting the core code so there are better-defined interfaces\r\n-between the various components is a goal, with any necessary locking\r\n-done by the components (e.g. see the self-contained CKeyStore class\r\n-and its cs_KeyStore lock for example).\r\n-\r\n--------\r\n-Threads\r\n-\r\n-StartNode : Starts other threads.\r\n-\r\n-ThreadGetMyExternalIP : Determines outside-the-firewall IP address,\r\n-sends addr message to connected peers when it determines it. \r\n-\r\n-ThreadSocketHandler : Sends/Receives data from peers on port 8333.\r\n-\r\n-ThreadMessageHandler : Higher-level message handling (sending and\r\n-receiving).\r\n-\r\n-ThreadOpenConnections : Initiates new connections to peers.\r\n-\r\n-ThreadTopUpKeyPool : replenishes the keystore's keypool.\r\n-\r\n-ThreadCleanWalletPassphrase : re-locks an encrypted wallet after user\r\n-has unlocked it for a period of time. \r\n-\r\n-SendingDialogStartTransfer : used by pay-via-ip-address code (obsolete)\r\n-\r\n-ThreadDelayedRepaint : repaint the gui \r\n-\r\n-ThreadFlushWalletDB : Close the wallet.dat file if it hasn't been used\r\n-in 500ms.\r\n-\r\n-ThreadRPCServer : Remote procedure call handler, listens on port 8332\r\n-for connections and services them.\r\n-\r\n-ThreadBitcoinMiner : Generates bitcoins\r\n-\r\n-ThreadMapPort : Universal plug-and-play startup/shutdown\r\n-\r\n-Shutdown : Does an orderly shutdown of everything\r\n-\r\n-ExitTimeout : Windows-only, sleeps 5 seconds then exits application\r"
      },
      {
        "sha": "8d695552b5e6192e1924eecf3c3d33c5434f7355",
        "filename": "doc/multiwallet-qt.md",
        "status": "renamed",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/multiwallet-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/multiwallet-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiwallet-qt.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -39,15 +39,14 @@ Changes to bitcoin.cpp\n bitcoin.cpp is the entry point into bitcoin-qt, and as such, will require some minor modifications to provide hooks for\n multiple wallet support. Most importantly will be the way it instantiates WalletModels and passes them to the\n singleton BitcoinGUI instance called window. Formerly, BitcoinGUI kept a pointer to a single instance of a WalletModel.\n-The initial change required is very simple: rather than calling window.setWalletModel(&walletModel); we perform the\n+The initial change required is very simple: rather than calling `window.setWalletModel(&walletModel);` we perform the\n following two steps:\n \n-window.addWallet(\"~Default\", &walletModel);\n-window.setCurrentWallet(\"~Default\");\n+\twindow.addWallet(\"~Default\", &walletModel);\n+\twindow.setCurrentWallet(\"~Default\");\n \n-The string parameter is just an arbitrary name given to the default wallet. It's been prepended with a tilde to avoid name\n-collisions in the future with additional wallets.\n+The string parameter is just an arbitrary name given to the default wallet. It's been prepended with a tilde to avoid name collisions in the future with additional wallets.\n \n-The shutdown call window.setWalletModel(0) has also been removed. In its place is now:\n+The shutdown call `window.setWalletModel(0)` has also been removed. In its place is now:\n \n window.removeAllWallets();",
        "previous_filename": "doc/multiwallet-qt.txt"
      },
      {
        "sha": "0e0b04bcaa27a77cfa317de6bfc9a10b619980ab",
        "filename": "doc/release-notes.md",
        "status": "renamed",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -26,41 +26,41 @@ the rest of the network your transactions may never confirm.\n Bitcoin-Qt changes\n ------------------\n \n-* New icon and splash screen\n-* Improve reporting of synchronization process\n-* Remove hardcoded fee recommendations\n-* Improve metadata of executable on MacOSX and Windows\n-* Move export button to individual tabs instead of toolbar\n-* Add \"send coins\" command to context menu in address book\n-* Add \"copy txid\" command to copy transaction IDs from transaction overview\n-* Save & restore window size and position when showing & hiding window\n-* New translations: Arabic (ar), Bosnian (bs), Catalan (ca), Welsh (cy),\n-  Esperanto (eo), Interlingua (la), Latvian (lv) and many improvements\n-  to current translations\n+- New icon and splash screen\n+- Improve reporting of synchronization process\n+- Remove hardcoded fee recommendations\n+- Improve metadata of executable on MacOSX and Windows\n+- Move export button to individual tabs instead of toolbar\n+- Add \"send coins\" command to context menu in address book\n+- Add \"copy txid\" command to copy transaction IDs from transaction overview\n+- Save & restore window size and position when showing & hiding window\n+- New translations: Arabic (ar), Bosnian (bs), Catalan (ca), Welsh (cy), Esperanto (eo), Interlingua (la), Latvian (lv) and many improvements to current translations\n \n MacOSX:\n-* OSX support for click-to-pay (bitcoin:) links\n-* Fix GUI disappearing problem on MacOSX (issue #1522)\n+\n+- OSX support for click-to-pay (bitcoin:) links\n+- Fix GUI disappearing problem on MacOSX (issue #1522)\n \n Linux/Unix:\n-* Copy addresses to middle-mouse-button clipboard\n+\n+- Copy addresses to middle-mouse-button clipboard\n \n \n Command-line options\n --------------------\n \n-* -walletnotify will call a command on receiving transactions that affect the wallet.\n-* -alertnotify will call a command on receiving an alert from the network.\n-* -par now takes a negative number, to leave a certain amount of cores free.\n+* `-walletnotify` will call a command on receiving transactions that affect the wallet.\n+* `-alertnotify` will call a command on receiving an alert from the network.\n+* `-par` now takes a negative number, to leave a certain amount of cores free.\n \n JSON-RPC API changes\n --------------------\n \n-* listunspent now lists account and address infromation.\n-* getinfo now also returns the time adjustment estimated from your peers.\n-* getpeerinfo now returns bytessent, bytesrecv and syncnode.\n-* gettxoutsetinfo returns statistics about the unspent transaction output database.\n-* gettxout returns information about a specific unspent transaction output.\n+* `listunspent` now lists account and address infromation.\n+* `getinfo` now also returns the time adjustment estimated from your peers.\n+* `getpeerinfo` now returns bytessent, bytesrecv and syncnode.\n+* `gettxoutsetinfo` returns statistics about the unspent transaction output database.\n+* `gettxout` returns information about a specific unspent transaction output.\n \n \n Networking changes\n@@ -76,5 +76,5 @@ Wallet compatibility/rescuing\n -----------------------------\n \n * Cases where wallets cannot be opened in another version/installation should be reduced.\n-* -salvagewallet now works for encrypted wallets.\n+* `-salvagewallet` now works for encrypted wallets.\n ",
        "previous_filename": "doc/release-notes.txt"
      },
      {
        "sha": "17d6a089c9f494e22182d53e8efd5dcc04cecd1b",
        "filename": "doc/release-process.md",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -0,0 +1,164 @@\n+Release Process\n+====================\n+\n+* update translations (ping wumpus, Diapolo or tcatm on IRC)\n+* see https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex\n+\n+* * *\n+\n+###update (commit) version in sources\n+\n+\n+\tbitcoin-qt.pro\n+\tcontrib/verifysfbinaries/verify.sh\n+\tdoc/README*\n+\tshare/setup.nsi\n+\tsrc/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)\n+\n+###tag version in git\n+\n+\tgit tag -a v0.8.0\n+\n+###write release notes. git shortlog helps a lot, for example:\n+\n+\tgit shortlog --no-merges v0.7.2..v0.8.0\n+\n+* * *\n+\n+##perform gitian builds\n+\n+ From a directory containing the bitcoin source, gitian-builder and gitian.sigs\n+  \n+\texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n+\texport VERSION=0.8.0\n+\tcd ./gitian-builder\n+\n+ Fetch and build inputs: (first time, or when dependency versions change)\n+\n+\tmkdir -p inputs; cd inputs/\n+\twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.6.tar.gz' -O miniupnpc-1.6.tar.gz\n+\twget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n+\twget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+\twget 'http://zlib.net/zlib-1.2.6.tar.gz'\n+\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng-1.5.9.tar.gz'\n+\twget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n+\twget 'http://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n+\twget 'http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-4.8.3.tar.gz'\n+\tcd ..\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n+\tmv build/out/boost-win32-1.50.0-gitian2.zip inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-win32.yml\n+\tmv build/out/qt-win32-4.8.3-gitian-r1.zip inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n+\tmv build/out/bitcoin-deps-0.0.5.zip inputs/\n+\n+ Build bitcoind and bitcoin-qt on Linux32, Linux64, and Win32:\n+  \n+\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian.yml\n+\tpushd build/out\n+\tzip -r bitcoin-${VERSION}-linux-gitian.zip *\n+\tmv bitcoin-${VERSION}-linux-gitian.zip ../../\n+\tpopd\n+\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION}-win32 --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n+\tpushd build/out\n+\tzip -r bitcoin-${VERSION}-win32-gitian.zip *\n+\tmv bitcoin-${VERSION}-win32-gitian.zip ../../\n+\tpopd\n+\n+  Build output expected:\n+\n+  1. linux 32-bit and 64-bit binaries + source (bitcoin-${VERSION}-linux-gitian.zip)\n+  2. windows 32-bit binary, installer + source (bitcoin-${VERSION}-win32-gitian.zip)\n+  3. Gitian signatures (in gitian.sigs/${VERSION}[-win32]/(your gitian key)/\n+\n+repackage gitian builds for release as stand-alone zip/tar/installer exe\n+\n+**Linux .tar.gz:**\n+\n+\tunzip bitcoin-${VERSION}-linux-gitian.zip -d bitcoin-${VERSION}-linux\n+\ttar czvf bitcoin-${VERSION}-linux.tar.gz bitcoin-${VERSION}-linux\n+\trm -rf bitcoin-${VERSION}-linux\n+\n+**Windows .zip and setup.exe:**\n+\n+\tunzip bitcoin-${VERSION}-win32-gitian.zip -d bitcoin-${VERSION}-win32\n+\tmv bitcoin-${VERSION}-win32/bitcoin-*-setup.exe .\n+\tzip -r bitcoin-${VERSION}-win32.zip bitcoin-${VERSION}-win32\n+\trm -rf bitcoin-${VERSION}-win32\n+\n+**Perform Mac build:**\n+\n+  OSX binaries are created by Gavin Andresen on a 32-bit, OSX 10.6 machine.\n+\n+\tqmake RELEASE=1 USE_UPNP=1 USE_QRCODE=1 bitcoin-qt.pro\n+\tmake\n+\texport QTDIR=/opt/local/share/qt4  # needed to find translations/qt_*.qm files\n+\tT=$(contrib/qt_translations.py $QTDIR/translations src/qt/locale)\n+\tpython2.7 share/qt/clean_mac_info_plist.py\n+\tpython2.7 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist\n+\n+ Build output expected: Bitcoin-Qt.dmg\n+\n+###Next steps:\n+\n+* Code-sign Windows -setup.exe (in a Windows virtual machine) and\n+  OSX Bitcoin-Qt.app (Note: only Gavin has the code-signing keys currently)\n+\n+* upload builds to SourceForge\n+\n+* create SHA256SUMS for builds, and PGP-sign it\n+\n+* update bitcoin.org version\n+  make sure all OS download links go to the right versions\n+\n+* update forum version\n+\n+* update wiki download links\n+\n+* update wiki changelog: [https://en.bitcoin.it/wiki/Changelog](https://en.bitcoin.it/wiki/Changelog)\n+\n+Commit your signature to gitian.sigs:\n+\n+\tpushd gitian.sigs\n+\tgit add ${VERSION}/${SIGNER}\n+\tgit add ${VERSION}-win32/${SIGNER}\n+\tgit commit -a\n+\tgit push  # Assuming you can push to the gitian.sigs tree\n+\tpopd\n+\n+-------------------------------------------------------------------------\n+\n+### After 3 or more people have gitian-built, repackage gitian-signed zips:\n+\n+From a directory containing bitcoin source, gitian.sigs and gitian zips\n+\n+\texport VERSION=0.5.1\n+\tmkdir bitcoin-${VERSION}-linux-gitian\n+\tpushd bitcoin-${VERSION}-linux-gitian\n+\tunzip ../bitcoin-${VERSION}-linux-gitian.zip\n+\tmkdir gitian\n+\tcp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/\n+\tfor signer in $(ls ../gitian.sigs/${VERSION}/); do\n+\t cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert\n+\t cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig\n+\tdone\n+\tzip -r bitcoin-${VERSION}-linux-gitian.zip *\n+\tcp bitcoin-${VERSION}-linux-gitian.zip ../\n+\tpopd\n+\tmkdir bitcoin-${VERSION}-win32-gitian\n+\tpushd bitcoin-${VERSION}-win32-gitian\n+\tunzip ../bitcoin-${VERSION}-win32-gitian.zip\n+\tmkdir gitian\n+\tcp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/\n+\tfor signer in $(ls ../gitian.sigs/${VERSION}-win32/); do\n+\t cp ../gitian.sigs/${VERSION}-win32/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert\n+\t cp ../gitian.sigs/${VERSION}-win32/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig\n+\tdone\n+\tzip -r bitcoin-${VERSION}-win32-gitian.zip *\n+\tcp bitcoin-${VERSION}-win32-gitian.zip ../\n+\tpopd\n+\n+- Upload gitian zips to SourceForge\n+- Celebrate \n\\ No newline at end of file"
      },
      {
        "sha": "ce6614335e2b5547768c84683c93ba45e0b35902",
        "filename": "doc/release-process.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 144,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd/doc/release-process.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd/doc/release-process.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.txt?ref=5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd",
        "patch": "@@ -1,144 +0,0 @@\n-* update translations (ping wumpus, Diapolo or tcatm on IRC)\n-  * see https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex\n-\n-* update (commit) version in sources\n-  bitcoin-qt.pro\n-  contrib/verifysfbinaries/verify.sh\n-  doc/README*\n-  share/setup.nsi\n-  src/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)\n-\n-* tag version in git\n-\n-   git tag -a v0.8.0\n-\n-* write release notes. git shortlog helps a lot, for example:\n-\n-   git shortlog --no-merges v0.7.2..v0.8.0\n-\n-* perform gitian builds\n-\n-  * From a directory containing the bitcoin source, gitian-builder and gitian.sigs\n-   export SIGNER=(your gitian key, ie bluematt, sipa, etc)\n-   export VERSION=0.8.0\n-   cd ./gitian-builder\n-\n-  * Fetch and build inputs: (first time, or when dependency versions change)\n-   mkdir -p inputs; cd inputs/\n-   wget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.6.tar.gz' -O miniupnpc-1.6.tar.gz\n-   wget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n-   wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-   wget 'http://zlib.net/zlib-1.2.6.tar.gz'\n-   wget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng-1.5.9.tar.gz'\n-   wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-   wget 'http://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n-   wget 'http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-4.8.3.tar.gz'\n-   cd ..\n-   ./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n-   mv build/out/boost-win32-1.50.0-gitian2.zip inputs/\n-   ./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-win32.yml\n-   mv build/out/qt-win32-4.8.3-gitian-r1.zip inputs/\n-   ./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n-   mv build/out/bitcoin-deps-0.0.5.zip inputs/\n-\n-  * Build bitcoind and bitcoin-qt on Linux32, Linux64, and Win32:\n-   ./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian.yml\n-   ./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian.yml\n-   pushd build/out\n-   zip -r bitcoin-${VERSION}-linux-gitian.zip *\n-   mv bitcoin-${VERSION}-linux-gitian.zip ../../\n-   popd\n-   ./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n-   ./bin/gsign --signer $SIGNER --release ${VERSION}-win32 --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n-   pushd build/out\n-   zip -r bitcoin-${VERSION}-win32-gitian.zip *\n-   mv bitcoin-${VERSION}-win32-gitian.zip ../../\n-   popd\n-\n-  Build output expected:\n-  1. linux 32-bit and 64-bit binaries + source (bitcoin-${VERSION}-linux-gitian.zip)\n-  2. windows 32-bit binary, installer + source (bitcoin-${VERSION}-win32-gitian.zip)\n-  3. Gitian signatures (in gitian.sigs/${VERSION}[-win32]/(your gitian key)/\n-\n-* repackage gitian builds for release as stand-alone zip/tar/installer exe\n-\n-  * Linux .tar.gz:\n-   unzip bitcoin-${VERSION}-linux-gitian.zip -d bitcoin-${VERSION}-linux\n-   tar czvf bitcoin-${VERSION}-linux.tar.gz bitcoin-${VERSION}-linux\n-   rm -rf bitcoin-${VERSION}-linux\n-\n-  * Windows .zip and setup.exe:\n-   unzip bitcoin-${VERSION}-win32-gitian.zip -d bitcoin-${VERSION}-win32\n-   mv bitcoin-${VERSION}-win32/bitcoin-*-setup.exe .\n-   zip -r bitcoin-${VERSION}-win32.zip bitcoin-${VERSION}-win32\n-   rm -rf bitcoin-${VERSION}-win32\n-\n-* perform Mac build\n-  OSX binaries are created by Gavin Andresen on a 32-bit, OSX 10.6 machine.\n-\n-  qmake RELEASE=1 USE_UPNP=1 USE_QRCODE=1 bitcoin-qt.pro\n-  make\n-  export QTDIR=/opt/local/share/qt4  # needed to find translations/qt_*.qm files\n-  T=$(contrib/qt_translations.py $QTDIR/translations src/qt/locale)\n-  python2.7 share/qt/clean_mac_info_plist.py\n-  python2.7 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist\n-\n- Build output expected:\n-  Bitcoin-Qt.dmg\n-\n-* Code-sign Windows -setup.exe (in a Windows virtual machine) and\n-  OSX Bitcoin-Qt.app (Note: only Gavin has the code-signing keys currently)\n-\n-* upload builds to SourceForge\n-\n-* create SHA256SUMS for builds, and PGP-sign it\n-\n-* update bitcoin.org version\n-  make sure all OS download links go to the right versions\n-\n-* update forum version\n-\n-* update wiki download links\n-\n-* update wiki changelog: https://en.bitcoin.it/wiki/Changelog\n-\n-* Commit your signature to gitian.sigs:\n-  pushd gitian.sigs\n-  git add ${VERSION}/${SIGNER}\n-  git add ${VERSION}-win32/${SIGNER}\n-  git commit -a\n-  git push  # Assuming you can push to the gitian.sigs tree\n-  popd\n-\n--------------------------------------------------------------------------\n-\n-* After 3 or more people have gitian-built, repackage gitian-signed zips:\n-\n-  * From a directory containing bitcoin source, gitian.sigs and gitian zips\n-   export VERSION=0.5.1\n-   mkdir bitcoin-${VERSION}-linux-gitian\n-   pushd bitcoin-${VERSION}-linux-gitian\n-   unzip ../bitcoin-${VERSION}-linux-gitian.zip\n-   mkdir gitian\n-   cp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/\n-   for signer in $(ls ../gitian.sigs/${VERSION}/); do\n-     cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert\n-     cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig\n-   done\n-   zip -r bitcoin-${VERSION}-linux-gitian.zip *\n-   cp bitcoin-${VERSION}-linux-gitian.zip ../\n-   popd\n-   mkdir bitcoin-${VERSION}-win32-gitian\n-   pushd bitcoin-${VERSION}-win32-gitian\n-   unzip ../bitcoin-${VERSION}-win32-gitian.zip\n-   mkdir gitian\n-   cp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/\n-   for signer in $(ls ../gitian.sigs/${VERSION}-win32/); do\n-     cp ../gitian.sigs/${VERSION}-win32/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert\n-     cp ../gitian.sigs/${VERSION}-win32/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig\n-   done\n-   zip -r bitcoin-${VERSION}-win32-gitian.zip *\n-   cp bitcoin-${VERSION}-win32-gitian.zip ../\n-   popd\n-\n-  * Upload gitian zips to SourceForge"
      },
      {
        "sha": "d6fb2d8e2d89996209e9112f23a22429d402696f",
        "filename": "doc/unit-tests.md",
        "status": "renamed",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2341e9b533fedf9bade5b55d676b2c0cf5ed8604/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=2341e9b533fedf9bade5b55d676b2c0cf5ed8604",
        "patch": "@@ -1,18 +1,19 @@\n Compiling/running bitcoind unit tests\n ------------------------------------\n \n-bitcoind unit tests are in the src/test/ directory; they\n+bitcoind unit tests are in the `src/test/` directory; they\n use the Boost::Test unit-testing framework.\n \n To compile and run the tests:\n-cd src\n-make -f makefile.unix test_bitcoin  # Replace makefile.unix if you're not on unix\n-./test_bitcoin   # Runs the unit tests\n+\n+\tcd src\n+\tmake -f makefile.unix test_bitcoin  # Replace makefile.unix if you're not on unix\n+\t./test_bitcoin   # Runs the unit tests\n \n If all tests succeed the last line of output will be:\n-*** No errors detected\n+`*** No errors detected`\n \n-To add more tests, add BOOST_AUTO_TEST_CASE functions to the existing\n+To add more tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n .cpp files in the test/ directory or add new .cpp files that\n implement new BOOST_AUTO_TEST_SUITE sections (the makefiles are\n set up to add test/*.cpp to test_bitcoin automatically).\n@@ -25,9 +26,10 @@ Bitcoin-Qt unit tests are in the src/qt/test/ directory; they\n use the Qt unit-testing framework.\n \n To compile and run the tests:\n-qmake bitcoin-qt.pro BITCOIN_QT_TEST=1\n-make\n-./bitcoin-qt_test\n \n-To add more tests, add them to the src/qt/test/ directory,\n-the src/qt/test/test_main.cpp file, and bitcoin-qt.pro.\n+\tqmake bitcoin-qt.pro BITCOIN_QT_TEST=1\n+\tmake\n+\t./bitcoin-qt_test\n+\n+To add more tests, add them to the `src/qt/test/` directory,\n+the `src/qt/test/test_main.cpp` file, and bitcoin-qt.pro.",
        "previous_filename": "doc/unit-tests.txt"
      }
    ]
  }
]