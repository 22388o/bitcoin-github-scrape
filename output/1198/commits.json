[
  {
    "sha": "768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjhlNWQ1MmZiMjk1YjAwMDk0MGY2YTgwNmMzZDRiZmMzZTRmNTRk",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-05-12T05:24:27Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-05-16T23:25:25Z"
      },
      "message": "Add new utility functions FileCommit(), RenameOver()",
      "tree": {
        "sha": "cd0ae64786ceb7c363226fee822dad8ae919dd76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd0ae64786ceb7c363226fee822dad8ae919dd76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/768e5d52fb295b000940f6a806c3d4bfc3e4f54d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "49232d1abf96f85f785e0ee95fbb79d0338855bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49232d1abf96f85f785e0ee95fbb79d0338855bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49232d1abf96f85f785e0ee95fbb79d0338855bc"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 24,
      "deletions": 7
    },
    "files": [
      {
        "sha": "331b16b509dbfb7c173eb50cf9f8c88bcf6867e7",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/768e5d52fb295b000940f6a806c3d4bfc3e4f54d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/768e5d52fb295b000940f6a806c3d4bfc3e4f54d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
        "patch": "@@ -956,13 +956,7 @@ class CBlock\n         // Flush stdio buffers and commit to disk before returning\n         fflush(fileout);\n         if (!IsInitialBlockDownload() || (nBestHeight+1) % 500 == 0)\n-        {\n-#ifdef WIN32\n-            _commit(_fileno(fileout));\n-#else\n-            fsync(fileno(fileout));\n-#endif\n-        }\n+            FileCommit(fileout);\n \n         return true;\n     }"
      },
      {
        "sha": "82c16feda60537de158ea00f3058d858c81d87c6",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/768e5d52fb295b000940f6a806c3d4bfc3e4f54d/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/768e5d52fb295b000940f6a806c3d4bfc3e4f54d/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
        "patch": "@@ -910,6 +910,27 @@ void CreatePidFile(const boost::filesystem::path &path, pid_t pid)\n     }\n }\n \n+bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest)\n+{\n+#ifdef WIN32\n+    return MoveFileEx(src.string().c_str(), dest.string().c_str(),\n+                      MOVEFILE_REPLACE_EXISTING);\n+#else\n+    int rc = std::rename(src.string().c_str(), dest.string().c_str());\n+    return (rc == 0);\n+#endif /* WIN32 */\n+}\n+\n+void FileCommit(FILE *fileout)\n+{\n+    fflush(fileout);                // harmless if redundantly called\n+#ifdef WIN32\n+    _commit(_fileno(fileout));\n+#else\n+    fsync(fileno(fileout));\n+#endif\n+}\n+\n int GetFilesize(FILE* file)\n {\n     int nSavePos = ftell(file);"
      },
      {
        "sha": "f7bdaf53323f62aa801b2d12e398a7bed8b34486",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/768e5d52fb295b000940f6a806c3d4bfc3e4f54d/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/768e5d52fb295b000940f6a806c3d4bfc3e4f54d/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
        "patch": "@@ -152,7 +152,9 @@ std::string EncodeBase64(const std::string& str);\n void ParseParameters(int argc, const char*const argv[]);\n bool WildcardMatch(const char* psz, const char* mask);\n bool WildcardMatch(const std::string& str, const std::string& mask);\n+void FileCommit(FILE *fileout);\n int GetFilesize(FILE* file);\n+bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest);\n boost::filesystem::path GetDefaultDataDir();\n const boost::filesystem::path &GetDataDir(bool fNetSpecific = true);\n boost::filesystem::path GetConfigFile();"
      }
    ]
  },
  {
    "sha": "928d3a011cc66c7f907c4d053f674ea77dc611cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjhkM2EwMTFjYzY2YzdmOTA3YzRkMDUzZjY3NGVhNzdkYzYxMWNj",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-05-17T02:11:19Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-05-17T02:11:19Z"
      },
      "message": "CAddrDB: Replace BDB-managed addr.dat with internally managed peers.dat",
      "tree": {
        "sha": "f2e3f8b379328089349fb105d08b64b7cc8e1b18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2e3f8b379328089349fb105d08b64b7cc8e1b18"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/928d3a011cc66c7f907c4d053f674ea77dc611cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/928d3a011cc66c7f907c4d053f674ea77dc611cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/928d3a011cc66c7f907c4d053f674ea77dc611cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/928d3a011cc66c7f907c4d053f674ea77dc611cc/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/768e5d52fb295b000940f6a806c3d4bfc3e4f54d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/768e5d52fb295b000940f6a806c3d4bfc3e4f54d"
      }
    ],
    "stats": {
      "total": 166,
      "additions": 100,
      "deletions": 66
    },
    "files": [
      {
        "sha": "5b36a8f1f5b460687f9e7762d7195bccc66054b8",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 79,
        "deletions": 50,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=928d3a011cc66c7f907c4d053f674ea77dc611cc",
        "patch": "@@ -164,8 +164,6 @@ void CDB::Close()\n     unsigned int nMinutes = 0;\n     if (fReadOnly)\n         nMinutes = 1;\n-    if (strFile == \"addr.dat\")\n-        nMinutes = 2;\n     if (strFile == \"blkindex.dat\")\n         nMinutes = 2;\n     if (strFile == \"blkindex.dat\" && IsInitialBlockDownload())\n@@ -310,7 +308,7 @@ void DBFlush(bool fShutdown)\n                 CloseDb(strFile);\n                 printf(\"%s checkpoint\\n\", strFile.c_str());\n                 dbenv.txn_checkpoint(0, 0, 0);\n-                if ((strFile != \"blkindex.dat\" && strFile != \"addr.dat\") || fDetachDB) {\n+                if (strFile != \"blkindex.dat\" || fDetachDB) {\n                     printf(\"%s detach\\n\", strFile.c_str());\n                     dbenv.lsn_reset(strFile.c_str(), 0);\n                 }\n@@ -737,65 +735,96 @@ bool CTxDB::LoadBlockIndex()\n // CAddrDB\n //\n \n-bool CAddrDB::WriteAddrman(const CAddrMan& addrman)\n+\n+CAddrDB::CAddrDB()\n {\n-    return Write(string(\"addrman\"), addrman);\n+    pathAddr = GetDataDir() / \"peers.dat\";\n }\n \n-bool CAddrDB::LoadAddresses()\n+bool CAddrDB::Write(const CAddrMan& addr)\n {\n-    if (Read(string(\"addrman\"), addrman))\n-    {\n-        printf(\"Loaded %i addresses\\n\", addrman.size());\n-        return true;\n+    // Generate random temporary filename\n+    unsigned short randv = 0;\n+    RAND_bytes((unsigned char *)&randv, sizeof(randv));\n+    std::string tmpfn = strprintf(\"peers.dat.%04x\", randv);\n+\n+    // serialize addresses, checksum data up to that point, then append csum\n+    CDataStream ssPeers(SER_DISK, CLIENT_VERSION);\n+    ssPeers << FLATDATA(pchMessageStart);\n+    ssPeers << addr;\n+    uint256 hash = Hash(ssPeers.begin(), ssPeers.end());\n+    ssPeers << hash;\n+\n+    // open temp output file, and associate with CAutoFile\n+    boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n+    FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n+    CAutoFile fileout = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n+    if (!fileout)\n+        return error(\"CAddrman::Write() : open failed\");\n+\n+    // Write and commit header, data\n+    try {\n+        fileout << ssPeers;\n     }\n-    \n-    // Read pre-0.6 addr records\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Write() : I/O error\");\n+    }\n+    FileCommit(fileout);\n+    fileout.fclose();\n \n-    vector<CAddress> vAddr;\n-    vector<vector<unsigned char> > vDelete;\n+    // replace existing peers.dat, if any, with new peers.dat.XXXX\n+    if (!RenameOver(pathTmp, pathAddr))\n+        return error(\"CAddrman::Write() : Rename-into-place failed\");\n \n-    // Get cursor\n-    Dbc* pcursor = GetCursor();\n-    if (!pcursor)\n-        return false;\n-\n-    loop\n-    {\n-        // Read next record\n-        CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n-        CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n-        int ret = ReadAtCursor(pcursor, ssKey, ssValue);\n-        if (ret == DB_NOTFOUND)\n-            break;\n-        else if (ret != 0)\n-            return false;\n+    return true;\n+}\n \n-        // Unserialize\n-        string strType;\n-        ssKey >> strType;\n-        if (strType == \"addr\")\n-        {\n-            CAddress addr;\n-            ssValue >> addr;\n-            vAddr.push_back(addr);\n-        }\n+bool CAddrDB::Read(CAddrMan& addr)\n+{\n+    // open input file, and associate with CAutoFile\n+    FILE *file = fopen(pathAddr.string().c_str(), \"rb\");\n+    CAutoFile filein = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n+    if (!filein)\n+        return error(\"CAddrman::Read() : open failed\");\n+\n+    // use file size to size memory buffer\n+    int fileSize = GetFilesize(filein);\n+    int dataSize = fileSize - sizeof(uint256);\n+    vector<unsigned char> vchData;\n+    vchData.resize(dataSize);\n+    uint256 hashIn;\n+\n+    // read data and checksum from file\n+    try {\n+        filein.read((char *)&vchData[0], dataSize);\n+        filein >> hashIn;\n     }\n-    pcursor->close();\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Read() 2 : I/O error or stream data corrupted\");\n+    }\n+    filein.fclose();\n \n-    addrman.Add(vAddr, CNetAddr(\"0.0.0.0\"));\n-    printf(\"Loaded %i addresses\\n\", addrman.size());\n+    CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n \n-    // Note: old records left; we ran into hangs-on-startup\n-    // bugs for some users who (we think) were running after\n-    // an unclean shutdown.\n+    // verify stored checksum matches input data\n+    uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());\n+    if (hashIn != hashTmp)\n+        return error(\"CAddrman::Read() : checksum mismatch; data corrupted\");\n \n-    return true;\n-}\n+    // de-serialize address data\n+    unsigned char pchMsgTmp[4];\n+    try {\n+        ssPeers >> FLATDATA(pchMsgTmp);\n+        ssPeers >> addr;\n+    }\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Read() : I/O error or stream data corrupted\");\n+    }\n \n-bool LoadAddresses()\n-{\n-    return CAddrDB(\"cr+\").LoadAddresses();\n-}\n+    // finally, verify the network matches ours\n+    if (memcmp(pchMsgTmp, pchMessageStart, sizeof(pchMsgTmp)))\n+        return error(\"CAddrman::Read() : invalid network magic number\");\n \n+    return true;\n+}\n "
      },
      {
        "sha": "4f8e5d04fe7ea993d738e5eb9eb87c6a59a51582",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 6,
        "deletions": 11,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=928d3a011cc66c7f907c4d053f674ea77dc611cc",
        "patch": "@@ -296,20 +296,15 @@ class CTxDB : public CDB\n \n \n \n-/** Access to the (IP) address database (addr.dat) */\n-class CAddrDB : public CDB\n+/** Access to the (IP) address database (peers.dat) */\n+class CAddrDB\n {\n-public:\n-    CAddrDB(const char* pszMode=\"r+\") : CDB(\"addr.dat\", pszMode) { }\n private:\n-    CAddrDB(const CAddrDB&);\n-    void operator=(const CAddrDB&);\n+    boost::filesystem::path pathAddr;\n public:\n-    bool WriteAddrman(const CAddrMan& addr);\n-    bool LoadAddresses();\n+    CAddrDB();\n+    bool Write(const CAddrMan& addr);\n+    bool Read(CAddrMan& addr);\n };\n \n-bool LoadAddresses();\n-\n-\n #endif // BITCOIN_DB_H"
      },
      {
        "sha": "2a3e407e865d2f23ab266eda82221692d1e5e480",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=928d3a011cc66c7f907c4d053f674ea77dc611cc",
        "patch": "@@ -371,9 +371,15 @@ bool AppInit2()\n     InitMessage(_(\"Loading addresses...\"));\n     printf(\"Loading addresses...\\n\");\n     nStart = GetTimeMillis();\n-    if (!LoadAddresses())\n-        strErrors << _(\"Error loading addr.dat\") << \"\\n\";\n-    printf(\" addresses   %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+\n+    {\n+        CAddrDB adb;\n+        if (!adb.Read(addrman))\n+            printf(\"Invalid or missing peers.dat; recreating\\n\");\n+    }\n+\n+    printf(\"Loaded %i addresses from peers.dat  %\"PRI64d\"ms\\n\",\n+           addrman.size(), GetTimeMillis() - nStart);\n \n     InitMessage(_(\"Loading block index...\"));\n     printf(\"Loading block index...\\n\");"
      },
      {
        "sha": "24fd26ae563373e7c722176d501fe72e79cdc35b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=928d3a011cc66c7f907c4d053f674ea77dc611cc",
        "patch": "@@ -1278,8 +1278,13 @@ unsigned int pnSeed[] =\n \n void DumpAddresses()\n {\n+    int64 nStart = GetTimeMillis();\n+\n     CAddrDB adb;\n-    adb.WriteAddrman(addrman);\n+    adb.Write(addrman);\n+\n+    printf(\"Flushed %d addresses to peers.dat  %\"PRI64d\"ms\\n\",\n+           addrman.size(), GetTimeMillis() - nStart);\n }\n \n void ThreadDumpAddress2(void* parg)"
      },
      {
        "sha": "fcb5824d8a6d944030e6ef681340e6871df706b4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/928d3a011cc66c7f907c4d053f674ea77dc611cc/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=928d3a011cc66c7f907c4d053f674ea77dc611cc",
        "patch": "@@ -19,7 +19,6 @@\n #include \"protocol.h\"\n #include \"addrman.h\"\n \n-class CAddrDB;\n class CRequestTracker;\n class CNode;\n class CBlockIndex;"
      }
    ]
  }
]