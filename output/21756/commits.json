[
  {
    "sha": "c10f27fdb2d335954dd1017ce6d5800159427374",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTBmMjdmZGIyZDMzNTk1NGRkMTAxN2NlNmQ1ODAwMTU5NDI3Mzc0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-17T11:11:16Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-22T15:53:53Z"
      },
      "message": "net: Make IPv6ToString do zero compression as described in RFC 5952",
      "tree": {
        "sha": "4b2de67489fc87a3d30bc3968c3dbe573eaf9380",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b2de67489fc87a3d30bc3968c3dbe573eaf9380"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c10f27fdb2d335954dd1017ce6d5800159427374",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c10f27fdb2d335954dd1017ce6d5800159427374",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c10f27fdb2d335954dd1017ce6d5800159427374",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c10f27fdb2d335954dd1017ce6d5800159427374/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b5659c6b115315c9fd2902b4edd4b960a5e066e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b5659c6b115315c9fd2902b4edd4b960a5e066e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b5659c6b115315c9fd2902b4edd4b960a5e066e"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 48,
      "deletions": 11
    },
    "files": [
      {
        "sha": "cbccb0a8a91e2b7e412966471908d9a2ad0b453a",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 11,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c10f27fdb2d335954dd1017ce6d5800159427374/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c10f27fdb2d335954dd1017ce6d5800159427374/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=c10f27fdb2d335954dd1017ce6d5800159427374",
        "patch": "@@ -556,20 +556,57 @@ static std::string IPv4ToString(Span<const uint8_t> a)\n     return strprintf(\"%u.%u.%u.%u\", a[0], a[1], a[2], a[3]);\n }\n \n+// Return an IPv6 address text representation with zero compression as described in RFC 5952\n+// (\"A Recommendation for IPv6 Address Text Representation\").\n static std::string IPv6ToString(Span<const uint8_t> a)\n {\n     assert(a.size() == ADDR_IPV6_SIZE);\n-    // clang-format off\n-    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                     ReadBE16(&a[0]),\n-                     ReadBE16(&a[2]),\n-                     ReadBE16(&a[4]),\n-                     ReadBE16(&a[6]),\n-                     ReadBE16(&a[8]),\n-                     ReadBE16(&a[10]),\n-                     ReadBE16(&a[12]),\n-                     ReadBE16(&a[14]));\n-    // clang-format on\n+    const std::array groups{\n+        ReadBE16(&a[0]),\n+        ReadBE16(&a[2]),\n+        ReadBE16(&a[4]),\n+        ReadBE16(&a[6]),\n+        ReadBE16(&a[8]),\n+        ReadBE16(&a[10]),\n+        ReadBE16(&a[12]),\n+        ReadBE16(&a[14]),\n+    };\n+\n+    // The zero compression implementation is inspired by Rust's std::net::Ipv6Addr, see\n+    // https://github.com/rust-lang/rust/blob/cc4103089f40a163f6d143f06359cba7043da29b/library/std/src/net/ip.rs#L1635-L1683\n+    struct ZeroSpan {\n+        size_t start_index{0};\n+        size_t len{0};\n+    };\n+\n+    // Find longest sequence of consecutive all-zero fields. Use first zero sequence if two or more\n+    // zero sequences of equal length are found.\n+    ZeroSpan longest, current;\n+    for (size_t i{0}; i < groups.size(); ++i) {\n+        if (groups[i] != 0) {\n+            current = {i + 1, 0};\n+            continue;\n+        }\n+        current.len += 1;\n+        if (current.len > longest.len) {\n+            longest = current;\n+        }\n+    }\n+\n+    std::string r;\n+    r.reserve(39);\n+    for (size_t i{0}; i < groups.size(); ++i) {\n+        // Replace the longest sequence of consecutive all-zero fields with two colons (\"::\").\n+        if (longest.len >= 2 && i >= longest.start_index && i < longest.start_index + longest.len) {\n+            if (i == longest.start_index) {\n+                r += \"::\";\n+            }\n+            continue;\n+        }\n+        r += strprintf(\"%s%x\", ((!r.empty() && r.back() != ':') ? \":\" : \"\"), groups[i]);\n+    }\n+\n+    return r;\n }\n \n std::string CNetAddr::ToStringIP() const"
      }
    ]
  },
  {
    "sha": "54548bae8004a8f49d73bd29aeca8b41894214c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDU0OGJhZTgwMDRhOGY0OWQ3M2JkMjlhZWNhOGI0MTg5NDIxNGM0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-22T15:52:03Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-22T15:52:14Z"
      },
      "message": "net: Avoid calling getnameinfo when formatting IPv6 addresses in CNetAddr::ToStringIP",
      "tree": {
        "sha": "e8b11060d4ea9a05f5387b9708df4ec62fea1657",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8b11060d4ea9a05f5387b9708df4ec62fea1657"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54548bae8004a8f49d73bd29aeca8b41894214c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54548bae8004a8f49d73bd29aeca8b41894214c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54548bae8004a8f49d73bd29aeca8b41894214c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54548bae8004a8f49d73bd29aeca8b41894214c4/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c10f27fdb2d335954dd1017ce6d5800159427374",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c10f27fdb2d335954dd1017ce6d5800159427374",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c10f27fdb2d335954dd1017ce6d5800159427374"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 0,
      "deletions": 9
    },
    "files": [
      {
        "sha": "112e216c09a5458965b18b57ca0579d511cfa973",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54548bae8004a8f49d73bd29aeca8b41894214c4/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54548bae8004a8f49d73bd29aeca8b41894214c4/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=54548bae8004a8f49d73bd29aeca8b41894214c4",
        "patch": "@@ -615,15 +615,6 @@ std::string CNetAddr::ToStringIP() const\n     case NET_IPV4:\n         return IPv4ToString(m_addr);\n     case NET_IPV6: {\n-        CService serv(*this, 0);\n-        struct sockaddr_storage sockaddr;\n-        socklen_t socklen = sizeof(sockaddr);\n-        if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n-            char name[1025] = \"\";\n-            if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name,\n-                             sizeof(name), nullptr, 0, NI_NUMERICHOST))\n-                return std::string(name);\n-        }\n         return IPv6ToString(m_addr);\n     }\n     case NET_ONION:"
      }
    ]
  }
]