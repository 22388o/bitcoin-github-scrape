fanquake,2018-12-31T00:19:32Z,"When I try compiling with `./configure --disable-bip70`:\n```\n  CXX      qt/libbitcoinqt_a-sendcoinsdialog.o\n  CXX      qt/libbitcoinqt_a-sendcoinsentry.o\n  CXX      qt/libbitcoinqt_a-signverifymessagedialog.o\nqt/paymentserver.cpp:321:9: error: expected expression\n        else // normal URI\n        ^\n1 error generated.\nmake[2]: *** [qt/libbitcoinqt_a-paymentserver.o] Error 1\nmak",https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-450596482,450596482,
luke-jr,2018-12-31T02:53:24Z,"Fixed, added another fix, and a Travis test for no-BIP70",https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-450603242,450603242,
Empact,2018-12-31T19:09:12Z,How about a test case for this behavior?,https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-450681452,450681452,
jameshilliard,2019-01-22T21:32:30Z,@luke-jr can you rebase this? This should probably be a 0.18 milestone requirement.,https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-456571549,456571549,
Sjors,2019-02-11T12:34:04Z,cc @MarcoFalke since this also adds one more Travis machine,https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-462311993,462311993,
MarcoFalke,2019-02-11T13:11:13Z,Don't we already have at least 3 jobs with a gui? I'd prefer to just set the configure flag on one of them.,https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-462321928,462321928,
luke-jr,2019-02-11T15:17:36Z,"@MarcoFalke It doesn't make sense to test this without the wallet. Is there a reason `x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]` needs to be wallet-less? Or where else would you want to add it?",https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-462365020,462365020,
luke-jr,2019-02-11T15:17:48Z,"(also, rebased)",https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-462365091,462365091,
DrahtBot,2019-02-11T16:04:42Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15295](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15295.html) (fuzz: Add test/fuzz/test_runner.py and run ",https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-462383965,462383965,
laanwj,2019-02-12T09:28:08Z,utACK 84f53154e1a0309ef582443476451748eb982805,https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-462683801,462683801,
Sjors,2019-02-12T10:14:57Z,"Compiles and `src/qt/test/test_bitcoin-qt` passes on macOS 10.14.3 (`--disable-bip70` & `--enable-bip70`). These tests don't cover much though.\n\n84f5315 looks good modulo Travis, but it seems like a good idea to actually test this. Is there a (testnet or otherwise) site that supports BIP21 fallback for BIP71?\n\nAlso can someone upload a BIP70 file with and without such fallback?",https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-462700174,462700174,
gmaxwell,2019-02-14T19:09:30Z,utACK,https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-463752764,463752764,
jonasschnelli,2019-02-14T19:18:30Z,utACK 84f53154e1a0309ef582443476451748eb982805,https://github.com/bitcoin/bitcoin/pull/15063#issuecomment-463755890,463755890,
Empact,2018-12-30T23:07:16Z,"Just from reading this, seems this is invalid when `ENABLE_BIP70` is disabled, due to the unpaired `else` block. Maybe we should disable BIP70 in one of the CI runs?",https://github.com/bitcoin/bitcoin/pull/15063#discussion_r244547626,244547626,src/qt/paymentserver.cpp
fanquake,2018-12-31T03:03:49Z,You should be able to skip installing the `libprotobuf-dev` & `protobuf-compiler` packages.,https://github.com/bitcoin/bitcoin/pull/15063#discussion_r244551665,244551665,.travis.yml
luke-jr,2018-12-31T03:13:46Z,"Good point, fixed",https://github.com/bitcoin/bitcoin/pull/15063#discussion_r244551850,244551850,.travis.yml
MarcoFalke,2019-02-11T16:47:09Z,I'd prefer to set `--disable-bip70` on one of the other bionic jobs that have wallet enabled.,https://github.com/bitcoin/bitcoin/pull/15063#discussion_r255593969,255593969,.travis.yml
luke-jr,2019-02-11T23:02:13Z,"> @MarcoFalke It doesn't make sense to test this without the wallet. Is there a reason `x86_64 Linux [GOAL: install] [xenial] [no depends, only system libs, sanitizers: thread (TSan), no wallet]` needs to be wallet-less? Or where else would you want to add it?\n\n",https://github.com/bitcoin/bitcoin/pull/15063#discussion_r255730728,255730728,.travis.yml
MarcoFalke,2019-02-11T23:23:16Z,"Maybe L133, L103, or L93?",https://github.com/bitcoin/bitcoin/pull/15063#discussion_r255737499,255737499,.travis.yml
MarcoFalke,2019-02-11T23:24:04Z,I think xenial has wallet disabled because the thread sanitizer yells at bdb,https://github.com/bitcoin/bitcoin/pull/15063#discussion_r255738040,255738040,.travis.yml
