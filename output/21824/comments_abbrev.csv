jonatack,2021-05-01 19:52:09,"Nice change.\n\nApproach ACK fafb880e8854f9b7fb3934e02a0bd0409aec72c2",https://github.com/bitcoin/bitcoin/pull/21824#issuecomment-830685358,830685358,
kristapsk,2021-05-01 22:57:08,"Concept ACK, `char` is bad in C++ in general for both it's undefined default signedness and a lot of people thinking it's garanteed to be 8-bit, which is not true.\n\nHaven't yet looked though all of the code, but shouldn't `char` versions of `Serialize()`/`Unserialize()` in `src/serialize.h` be removed too?",https://github.com/bitcoin/bitcoin/pull/21824#issuecomment-830705959,830705959,
practicalswift,2021-05-02 19:41:07,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21824#issuecomment-830860770,830860770,
laanwj,2021-05-04 14:14:32,"Code review ACK fafb880e8854f9b7fb3934e02a0bd0409aec72c2\nUsing explicitly signed/unsigned sized types is clearly superior for serialization purposes",https://github.com/bitcoin/bitcoin/pull/21824#issuecomment-831975754,831975754,
practicalswift,2021-05-04 18:37:25,"cr ACK fafb880e8854f9b7fb3934e02a0bd0409aec72c2: patch looks correct\n\n`uint8_t` and uniform initialisation `{}` make things significantly easier to reason about. Thanks!",https://github.com/bitcoin/bitcoin/pull/21824#issuecomment-832157967,832157967,
