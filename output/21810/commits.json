[
  {
    "sha": "54549dda310e2becee9cb4997d1408a90e91934f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDU0OWRkYTMxMGUyYmVjZWU5Y2I0OTk3ZDE0MDhhOTBlOTE5MzRm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-28T09:29:35Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-28T09:27:50Z"
      },
      "message": "fuzz: RPC fuzzer post-merge follow-ups. Remove unused includes. Update list of fuzzed RPC commands.",
      "tree": {
        "sha": "a208b277fff474013bf4b6d0ff997cf17a0b5ec9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a208b277fff474013bf4b6d0ff997cf17a0b5ec9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54549dda310e2becee9cb4997d1408a90e91934f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54549dda310e2becee9cb4997d1408a90e91934f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54549dda310e2becee9cb4997d1408a90e91934f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54549dda310e2becee9cb4997d1408a90e91934f/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e45863166f5e44cc2c380f4667812fcd3cddc73b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e45863166f5e44cc2c380f4667812fcd3cddc73b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e45863166f5e44cc2c380f4667812fcd3cddc73b"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 6,
      "deletions": 8
    },
    "files": [
      {
        "sha": "22a305ca1781f0c1ea03227ae077b3676dc5fb56",
        "filename": "src/test/fuzz/rpc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54549dda310e2becee9cb4997d1408a90e91934f/src/test/fuzz/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54549dda310e2becee9cb4997d1408a90e91934f/src/test/fuzz/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rpc.cpp?ref=54549dda310e2becee9cb4997d1408a90e91934f",
        "patch": "@@ -3,9 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <base58.h>\n-#include <chainparamsbase.h>\n #include <core_io.h>\n-#include <interfaces/chain.h>\n #include <key.h>\n #include <key_io.h>\n #include <node/context.h>\n@@ -73,15 +71,16 @@ const std::vector<std::string> RPC_COMMANDS_NOT_SAFE_FOR_FUZZING{\n #ifdef ENABLE_WALLET\n     \"dumpwallet\", // avoid writing to disk\n #endif\n-    \"echoipc\",           // avoid assertion failure (Assertion `\"EnsureAnyNodeContext(request.context).init\" && check' failed.)\n-    \"generatetoaddress\", // avoid timeout\n-    \"gettxoutproof\",     // avoid slow execution\n+    \"echoipc\",              // avoid assertion failure (Assertion `\"EnsureAnyNodeContext(request.context).init\" && check' failed.)\n+    \"generatetoaddress\",    // avoid prohibitively slow execution (when `num_blocks` is large)\n+    \"generatetodescriptor\", // avoid prohibitively slow execution (when `nblocks` is large)\n+    \"gettxoutproof\",        // avoid prohibitively slow execution\n #ifdef ENABLE_WALLET\n     \"importwallet\", // avoid reading from disk\n     \"loadwallet\",   // avoid reading from disk\n #endif\n-    \"mockscheduler\",         // avoid assertion failure (Assertion `delta_seconds.count() > 0 && delta_seconds < std::chrono::hours{1}' failed.)\n     \"prioritisetransaction\", // avoid signed integer overflow in CTxMemPool::PrioritiseTransaction(uint256 const&, long const&) (https://github.com/bitcoin/bitcoin/issues/20626)\n+    \"savemempool\",           // disabled as a precautionary measure: may take a file path argument in the future\n     \"setban\",                // avoid DNS lookups\n     \"stop\",                  // avoid shutdown state\n };\n@@ -107,7 +106,6 @@ const std::vector<std::string> RPC_COMMANDS_SAFE_FOR_FUZZING{\n     \"finalizepsbt\",\n     \"generate\",\n     \"generateblock\",\n-    \"generatetodescriptor\",\n     \"getaddednodeinfo\",\n     \"getbestblockhash\",\n     \"getblock\",\n@@ -145,11 +143,11 @@ const std::vector<std::string> RPC_COMMANDS_SAFE_FOR_FUZZING{\n     \"joinpsbts\",\n     \"listbanned\",\n     \"logging\",\n+    \"mockscheduler\",\n     \"ping\",\n     \"preciousblock\",\n     \"pruneblockchain\",\n     \"reconsiderblock\",\n-    \"savemempool\",\n     \"scantxoutset\",\n     \"sendrawtransaction\",\n     \"setmocktime\","
      }
    ]
  },
  {
    "sha": "5252f86eb616a1112e427c268c8e8825f2a63d67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjUyZjg2ZWI2MTZhMTExMmU0MjdjMjY4YzhlODgyNWYyYTYzZDY3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-29T18:41:16Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-29T18:40:25Z"
      },
      "message": "fuzz: Reduce maintenance requirements by allowing RPC annotations also for conditionally available RPC commands (such as wallet commands) without the fragility of #ifdef forests",
      "tree": {
        "sha": "55f827bbd3d643682bc3bf86ebd2f5a64da6dd35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55f827bbd3d643682bc3bf86ebd2f5a64da6dd35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5252f86eb616a1112e427c268c8e8825f2a63d67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5252f86eb616a1112e427c268c8e8825f2a63d67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5252f86eb616a1112e427c268c8e8825f2a63d67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5252f86eb616a1112e427c268c8e8825f2a63d67/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54549dda310e2becee9cb4997d1408a90e91934f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54549dda310e2becee9cb4997d1408a90e91934f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54549dda310e2becee9cb4997d1408a90e91934f"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 0,
      "deletions": 18
    },
    "files": [
      {
        "sha": "cf32a79932860a865c27e0fa173e4c72aa5070e3",
        "filename": "src/test/fuzz/rpc.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5252f86eb616a1112e427c268c8e8825f2a63d67/src/test/fuzz/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5252f86eb616a1112e427c268c8e8825f2a63d67/src/test/fuzz/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rpc.cpp?ref=5252f86eb616a1112e427c268c8e8825f2a63d67",
        "patch": "@@ -68,17 +68,13 @@ const std::vector<std::string> RPC_COMMANDS_NOT_SAFE_FOR_FUZZING{\n     \"addpeeraddress\", // avoid DNS lookups\n     \"analyzepsbt\",    // avoid signed integer overflow in CFeeRate::GetFee(unsigned long) (https://github.com/bitcoin/bitcoin/issues/20607)\n     \"dumptxoutset\",   // avoid writing to disk\n-#ifdef ENABLE_WALLET\n     \"dumpwallet\", // avoid writing to disk\n-#endif\n     \"echoipc\",              // avoid assertion failure (Assertion `\"EnsureAnyNodeContext(request.context).init\" && check' failed.)\n     \"generatetoaddress\",    // avoid prohibitively slow execution (when `num_blocks` is large)\n     \"generatetodescriptor\", // avoid prohibitively slow execution (when `nblocks` is large)\n     \"gettxoutproof\",        // avoid prohibitively slow execution\n-#ifdef ENABLE_WALLET\n     \"importwallet\", // avoid reading from disk\n     \"loadwallet\",   // avoid reading from disk\n-#endif\n     \"prioritisetransaction\", // avoid signed integer overflow in CTxMemPool::PrioritiseTransaction(uint256 const&, long const&) (https://github.com/bitcoin/bitcoin/issues/20626)\n     \"savemempool\",           // disabled as a precautionary measure: may take a file path argument in the future\n     \"setban\",                // avoid DNS lookups\n@@ -332,20 +328,6 @@ void initialize_rpc()\n             std::terminate();\n         }\n     }\n-    for (const std::string& rpc_command : RPC_COMMANDS_SAFE_FOR_FUZZING) {\n-        const bool supported_rpc_command = std::find(supported_rpc_commands.begin(), supported_rpc_commands.end(), rpc_command) != supported_rpc_commands.end();\n-        if (!supported_rpc_command) {\n-            std::cerr << \"Error: Unknown RPC command \\\"\" << rpc_command << \"\\\" found in RPC_COMMANDS_SAFE_FOR_FUZZING. Please update \" << __FILE__ << \".\\n\";\n-            std::terminate();\n-        }\n-    }\n-    for (const std::string& rpc_command : RPC_COMMANDS_NOT_SAFE_FOR_FUZZING) {\n-        const bool supported_rpc_command = std::find(supported_rpc_commands.begin(), supported_rpc_commands.end(), rpc_command) != supported_rpc_commands.end();\n-        if (!supported_rpc_command) {\n-            std::cerr << \"Error: Unknown RPC command \\\"\" << rpc_command << \"\\\" found in RPC_COMMANDS_NOT_SAFE_FOR_FUZZING. Please update \" << __FILE__ << \".\\n\";\n-            std::terminate();\n-        }\n-    }\n     const char* limit_to_rpc_command_env = std::getenv(\"LIMIT_TO_RPC_COMMAND\");\n     if (limit_to_rpc_command_env != nullptr) {\n         g_limit_to_rpc_command = std::string{limit_to_rpc_command_env};"
      }
    ]
  }
]