[
  {
    "sha": "9287be6937aec604d4f02bbe600022d7e9eb3ce5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Mjg3YmU2OTM3YWVjNjA0ZDRmMDJiYmU2MDAwMjJkN2U5ZWIzY2U1",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T21:05:32Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:53Z"
      },
      "message": "Refactor: inline GetMinRelayFee() in AcceptToMemoryPool()",
      "tree": {
        "sha": "6ed415434d39bf09d77271cc982c499b9f64ee35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ed415434d39bf09d77271cc982c499b9f64ee35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9287be6937aec604d4f02bbe600022d7e9eb3ce5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9287be6937aec604d4f02bbe600022d7e9eb3ce5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9287be6937aec604d4f02bbe600022d7e9eb3ce5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9287be6937aec604d4f02bbe600022d7e9eb3ce5/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "086cb336cd8ac0b2a7ad9ff0544c014569c7db38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/086cb336cd8ac0b2a7ad9ff0544c014569c7db38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/086cb336cd8ac0b2a7ad9ff0544c014569c7db38"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 24,
      "deletions": 36
    },
    "files": [
      {
        "sha": "342a4879ad10bd32fb0f4c9e5450a1c00bc4c74b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 33,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9287be6937aec604d4f02bbe600022d7e9eb3ce5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9287be6937aec604d4f02bbe600022d7e9eb3ce5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9287be6937aec604d4f02bbe600022d7e9eb3ce5",
        "patch": "@@ -68,6 +68,7 @@ bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n CFeeRate minRelayTxFee = CFeeRate(1000);\n+bool fAllowFree = true;\n \n CTxMemPool mempool(::minRelayTxFee);\n \n@@ -718,36 +719,6 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n-CAmount GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree)\n-{\n-    {\n-        LOCK(mempool.cs);\n-        uint256 hash = tx.GetHash();\n-        double dPriorityDelta = 0;\n-        CAmount nFeeDelta = 0;\n-        mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-        if (dPriorityDelta > 0 || nFeeDelta > 0)\n-            return 0;\n-    }\n-\n-    CAmount nMinFee = ::minRelayTxFee.GetFee(nBytes);\n-\n-    if (fAllowFree)\n-    {\n-        // There is a free transaction area in blocks created by most miners,\n-        // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n-        //   to be considered to fall into this category. We don't want to encourage sending\n-        //   multiple transactions instead of one big transaction to avoid fees.\n-        if (nBytes < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))\n-            nMinFee = 0;\n-    }\n-\n-    if (!MoneyRange(nMinFee))\n-        nMinFee = MAX_MONEY;\n-    return nMinFee;\n-}\n-\n-\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n                         bool* pfMissingInputs, bool fRejectAbsurdFee)\n {\n@@ -859,11 +830,31 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n+        CAmount nMinFee = ::minRelayTxFee.GetFee(nSize);\n+        {\n+            LOCK(mempool.cs);\n+            double dPriorityDelta = 0;\n+            CAmount nFeeDelta = 0;\n+            mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+            if (dPriorityDelta > 0 || nFeeDelta > 0)\n+                nMinFee = 0;\n+        }\n+\n+        if (fAllowFree) {\n+            // There is a free transaction area in blocks created by most miners,\n+            // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n+            //   to be considered to fall into this category. We don't want to encourage sending\n+            //   multiple transactions instead of one big transaction to avoid fees.\n+            if (nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))\n+                nMinFee = 0;\n+        }\n+        if (!MoneyRange(nMinFee))\n+            nMinFee = MAX_MONEY;\n+\n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n-        if (fLimitFree && nFees < txMinFee)\n+        if (fLimitFree && nFees < nMinFee)\n             return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n-                                      hash.ToString(), nFees, txMinFee),\n+                                      hash.ToString(), nFees, nMinFee),\n                              REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n \n         // Require that free transactions have sufficient priority to be mined in the next block."
      },
      {
        "sha": "8b9f458e8b0465876bf1e107efbfb6c4b35ba78b",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9287be6937aec604d4f02bbe600022d7e9eb3ce5/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9287be6937aec604d4f02bbe600022d7e9eb3ce5/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=9287be6937aec604d4f02bbe600022d7e9eb3ce5",
        "patch": "@@ -259,9 +259,6 @@ struct CDiskTxPos : public CDiskBlockPos\n     }\n };\n \n-\n-CAmount GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree);\n-\n /** \n  * Count ECDSA signature operations the old-fashioned (pre-0.6) way\n  * @return number of sigops this transaction's outputs will produce when spent"
      }
    ]
  },
  {
    "sha": "8b5382fdbeeb677393aaa059fb99a9cd55676927",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjUzODJmZGJlZWI2NzczOTNhYWEwNTlmYjk5YTljZDU1Njc2OTI3",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T21:09:27Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:55Z"
      },
      "message": "fixup! Both minRelayTxFee and 0 are already guaranteed to be in MoneyRange()",
      "tree": {
        "sha": "831707285a8cb386f9766a5bf2e2eb8b9a663c0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/831707285a8cb386f9766a5bf2e2eb8b9a663c0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b5382fdbeeb677393aaa059fb99a9cd55676927",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b5382fdbeeb677393aaa059fb99a9cd55676927",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b5382fdbeeb677393aaa059fb99a9cd55676927",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b5382fdbeeb677393aaa059fb99a9cd55676927/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9287be6937aec604d4f02bbe600022d7e9eb3ce5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9287be6937aec604d4f02bbe600022d7e9eb3ce5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9287be6937aec604d4f02bbe600022d7e9eb3ce5"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "712ea809da888fd266b007391cf16a4349a977a1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b5382fdbeeb677393aaa059fb99a9cd55676927/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b5382fdbeeb677393aaa059fb99a9cd55676927/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8b5382fdbeeb677393aaa059fb99a9cd55676927",
        "patch": "@@ -814,7 +814,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (mapArgs.count(\"-minrelaytxfee\"))\n     {\n         CAmount n = 0;\n-        if (ParseMoney(mapArgs[\"-minrelaytxfee\"], n) && n > 0)\n+        if (ParseMoney(mapArgs[\"-minrelaytxfee\"], n) && MoneyRange(n))\n             ::minRelayTxFee = CFeeRate(n);\n         else\n             return InitError(strprintf(_(\"Invalid amount for -minrelaytxfee=<amount>: '%s'\"), mapArgs[\"-minrelaytxfee\"]));"
      },
      {
        "sha": "e3db2ba63d3f09952afafcd21d2c8d905a9a8058",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b5382fdbeeb677393aaa059fb99a9cd55676927/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b5382fdbeeb677393aaa059fb99a9cd55676927/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8b5382fdbeeb677393aaa059fb99a9cd55676927",
        "patch": "@@ -848,8 +848,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             if (nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))\n                 nMinFee = 0;\n         }\n-        if (!MoneyRange(nMinFee))\n-            nMinFee = MAX_MONEY;\n \n         // Don't accept it if it can't get into a block\n         if (fLimitFree && nFees < nMinFee)"
      }
    ]
  },
  {
    "sha": "63b4eb78e466d834b26321ac9ac783328ae14a5b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2I0ZWI3OGU0NjZkODM0YjI2MzIxYWM5YWM3ODMzMjhhZTE0YTVi",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T21:11:43Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:55Z"
      },
      "message": "fixup! mempool.ApplyDeltas() already locks mempool.cs",
      "tree": {
        "sha": "222de76a0d78e59157f158b0d3443be9da207136",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/222de76a0d78e59157f158b0d3443be9da207136"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63b4eb78e466d834b26321ac9ac783328ae14a5b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63b4eb78e466d834b26321ac9ac783328ae14a5b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63b4eb78e466d834b26321ac9ac783328ae14a5b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63b4eb78e466d834b26321ac9ac783328ae14a5b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b5382fdbeeb677393aaa059fb99a9cd55676927",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b5382fdbeeb677393aaa059fb99a9cd55676927",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b5382fdbeeb677393aaa059fb99a9cd55676927"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 5,
      "deletions": 8
    },
    "files": [
      {
        "sha": "46ccb9eb626108984ef07530cd283bf0879d25c6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63b4eb78e466d834b26321ac9ac783328ae14a5b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63b4eb78e466d834b26321ac9ac783328ae14a5b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=63b4eb78e466d834b26321ac9ac783328ae14a5b",
        "patch": "@@ -831,14 +831,11 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         unsigned int nSize = entry.GetTxSize();\n \n         CAmount nMinFee = ::minRelayTxFee.GetFee(nSize);\n-        {\n-            LOCK(mempool.cs);\n-            double dPriorityDelta = 0;\n-            CAmount nFeeDelta = 0;\n-            mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-            if (dPriorityDelta > 0 || nFeeDelta > 0)\n-                nMinFee = 0;\n-        }\n+        double dPriorityDelta = 0;\n+        CAmount nFeeDelta = 0;\n+        mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+        if (dPriorityDelta > 0 || nFeeDelta > 0)\n+            nMinFee = 0;\n \n         if (fAllowFree) {\n             // There is a free transaction area in blocks created by most miners,"
      }
    ]
  },
  {
    "sha": "50e20124bc4699a886b844ea6a244465b20cbe1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGUyMDEyNGJjNDY5OWE4ODZiODQ0ZWE2YTI0NDQ2NWIyMGNiZTFk",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T21:16:07Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:56Z"
      },
      "message": "fixup! Unify ifs",
      "tree": {
        "sha": "6aa14915aa715bf664e674b4288831a020dfd7b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6aa14915aa715bf664e674b4288831a020dfd7b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50e20124bc4699a886b844ea6a244465b20cbe1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50e20124bc4699a886b844ea6a244465b20cbe1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50e20124bc4699a886b844ea6a244465b20cbe1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50e20124bc4699a886b844ea6a244465b20cbe1d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63b4eb78e466d834b26321ac9ac783328ae14a5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63b4eb78e466d834b26321ac9ac783328ae14a5b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63b4eb78e466d834b26321ac9ac783328ae14a5b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 3,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a379c0a1f57b38a5039380aa577f6ce53e559238",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50e20124bc4699a886b844ea6a244465b20cbe1d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50e20124bc4699a886b844ea6a244465b20cbe1d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=50e20124bc4699a886b844ea6a244465b20cbe1d",
        "patch": "@@ -834,17 +834,13 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         double dPriorityDelta = 0;\n         CAmount nFeeDelta = 0;\n         mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-        if (dPriorityDelta > 0 || nFeeDelta > 0)\n-            nMinFee = 0;\n-\n-        if (fAllowFree) {\n+        if ((dPriorityDelta > 0 || nFeeDelta > 0) ||\n             // There is a free transaction area in blocks created by most miners,\n             // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n             //   to be considered to fall into this category. We don't want to encourage sending\n             //   multiple transactions instead of one big transaction to avoid fees.\n-            if (nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))\n-                nMinFee = 0;\n-        }\n+            (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000)))\n+            nMinFee = 0;\n \n         // Don't accept it if it can't get into a block\n         if (fLimitFree && nFees < nMinFee)"
      }
    ]
  },
  {
    "sha": "c7840a0fc540c6e0e069948952f23d460517018f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzg0MGEwZmM1NDBjNmUwZTA2OTk0ODk1MmYyM2Q0NjA1MTcwMThm",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T21:50:10Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:56Z"
      },
      "message": "fixup! Rather not calculate nMinFee at all unless fLimitFree",
      "tree": {
        "sha": "8960a5fb96c96297682be67fb9f2b77183939f2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8960a5fb96c96297682be67fb9f2b77183939f2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7840a0fc540c6e0e069948952f23d460517018f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7840a0fc540c6e0e069948952f23d460517018f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7840a0fc540c6e0e069948952f23d460517018f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7840a0fc540c6e0e069948952f23d460517018f/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50e20124bc4699a886b844ea6a244465b20cbe1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50e20124bc4699a886b844ea6a244465b20cbe1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50e20124bc4699a886b844ea6a244465b20cbe1d"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 19,
      "deletions": 17
    },
    "files": [
      {
        "sha": "98ee45d5ce14737d4196f19e380f9f25b233eda4",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 17,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7840a0fc540c6e0e069948952f23d460517018f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7840a0fc540c6e0e069948952f23d460517018f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c7840a0fc540c6e0e069948952f23d460517018f",
        "patch": "@@ -830,23 +830,25 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n-        CAmount nMinFee = ::minRelayTxFee.GetFee(nSize);\n-        double dPriorityDelta = 0;\n-        CAmount nFeeDelta = 0;\n-        mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-        if ((dPriorityDelta > 0 || nFeeDelta > 0) ||\n-            // There is a free transaction area in blocks created by most miners,\n-            // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n-            //   to be considered to fall into this category. We don't want to encourage sending\n-            //   multiple transactions instead of one big transaction to avoid fees.\n-            (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000)))\n-            nMinFee = 0;\n-\n-        // Don't accept it if it can't get into a block\n-        if (fLimitFree && nFees < nMinFee)\n-            return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n-                                      hash.ToString(), nFees, nMinFee),\n-                             REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+        if (fLimitFree) {\n+            CAmount nMinFee = ::minRelayTxFee.GetFee(nSize);\n+            double dPriorityDelta = 0;\n+            CAmount nFeeDelta = 0;\n+            mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+            if ((dPriorityDelta > 0 || nFeeDelta > 0) ||\n+                // There is a free transaction area in blocks created by most miners,\n+                // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n+                //   to be considered to fall into this category. We don't want to encourage sending\n+                //   multiple transactions instead of one big transaction to avoid fees.\n+                (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000)))\n+                nMinFee = 0;\n+\n+            // Don't accept it if it can't get into a block\n+            if (nFees < nMinFee)\n+                return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n+                                          hash.ToString(), nFees, nMinFee),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+        }\n \n         // Require that free transactions have sufficient priority to be mined in the next block.\n         if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {"
      }
    ]
  },
  {
    "sha": "9aa15aa8c8a5776f63be045396ec3583e035f062",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWExNWFhOGM4YTU3NzZmNjNiZTA0NTM5NmVjMzU4M2UwMzVmMDYy",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T22:00:33Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:56Z"
      },
      "message": "fixup! Get rid of nMinFee variable",
      "tree": {
        "sha": "d094e4ba3f07e9660f88e9845c1ab60953a5f5ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d094e4ba3f07e9660f88e9845c1ab60953a5f5ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9aa15aa8c8a5776f63be045396ec3583e035f062",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9aa15aa8c8a5776f63be045396ec3583e035f062",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9aa15aa8c8a5776f63be045396ec3583e035f062",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9aa15aa8c8a5776f63be045396ec3583e035f062/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7840a0fc540c6e0e069948952f23d460517018f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7840a0fc540c6e0e069948952f23d460517018f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7840a0fc540c6e0e069948952f23d460517018f"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "df03f9dc8993651fe7f980ad40081f7de55b815f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9aa15aa8c8a5776f63be045396ec3583e035f062/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9aa15aa8c8a5776f63be045396ec3583e035f062/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9aa15aa8c8a5776f63be045396ec3583e035f062",
        "patch": "@@ -831,7 +831,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         unsigned int nSize = entry.GetTxSize();\n \n         if (fLimitFree) {\n-            CAmount nMinFee = ::minRelayTxFee.GetFee(nSize);\n             double dPriorityDelta = 0;\n             CAmount nFeeDelta = 0;\n             mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n@@ -840,13 +839,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n                 //   to be considered to fall into this category. We don't want to encourage sending\n                 //   multiple transactions instead of one big transaction to avoid fees.\n-                (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000)))\n-                nMinFee = 0;\n-\n-            // Don't accept it if it can't get into a block\n-            if (nFees < nMinFee)\n+                (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))) \n+            {\n+                // Don't accept it if it can't get into a block\n+                if (nFees < 0)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n+                                              hash.ToString(), nFees, 0),\n+                                     REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+            }\n+            else if (nFees < ::minRelayTxFee.GetFee(nSize))\n                 return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n-                                          hash.ToString(), nFees, nMinFee),\n+                                          hash.ToString(), nFees, ::minRelayTxFee.GetFee(nSize)),\n                                  REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n         }\n "
      }
    ]
  },
  {
    "sha": "bcd1484fa0efc515bac569179cedf08e3dc7be84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiY2QxNDg0ZmEwZWZjNTE1YmFjNTY5MTc5Y2VkZjA4ZTNkYzdiZTg0",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T22:16:30Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:56Z"
      },
      "message": "fixup! in fact, you want to check that new money is not being created sooner than that",
      "tree": {
        "sha": "eebddb25a6ccf9461639c4a05c5e736ffdf8c680",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eebddb25a6ccf9461639c4a05c5e736ffdf8c680"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bcd1484fa0efc515bac569179cedf08e3dc7be84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcd1484fa0efc515bac569179cedf08e3dc7be84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bcd1484fa0efc515bac569179cedf08e3dc7be84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcd1484fa0efc515bac569179cedf08e3dc7be84/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9aa15aa8c8a5776f63be045396ec3583e035f062",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9aa15aa8c8a5776f63be045396ec3583e035f062",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9aa15aa8c8a5776f63be045396ec3583e035f062"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 11,
      "deletions": 13
    },
    "files": [
      {
        "sha": "fab78d434473588d18dbeb6ab840ca791e3ecc2f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 13,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcd1484fa0efc515bac569179cedf08e3dc7be84/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcd1484fa0efc515bac569179cedf08e3dc7be84/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=bcd1484fa0efc515bac569179cedf08e3dc7be84",
        "patch": "@@ -806,6 +806,13 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         view.SetBackend(dummy);\n         }\n \n+        CAmount nValueOut = tx.GetValueOut();\n+        CAmount nFees = nValueIn-nValueOut;\n+        // Don't accept it if it can't get into a block\n+        if (nFees < 0)\n+            return state.DoS(0, error(\"%s: negative fees %s, %d\", __func__, hash.ToString(), nFees),\n+                             REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+\n         // Check for non-standard pay-to-script-hash in inputs\n         if (fRequireStandard && !AreInputsStandard(tx, view))\n             return error(\"AcceptToMemoryPool: nonstandard transaction input\");\n@@ -823,8 +830,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                                    hash.ToString(), nSigOps, MAX_STANDARD_TX_SIGOPS),\n                              REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\");\n \n-        CAmount nValueOut = tx.GetValueOut();\n-        CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n         CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n@@ -834,23 +839,16 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             double dPriorityDelta = 0;\n             CAmount nFeeDelta = 0;\n             mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-            if ((dPriorityDelta > 0 || nFeeDelta > 0) ||\n+            if (!((dPriorityDelta > 0 || nFeeDelta > 0) ||\n                 // There is a free transaction area in blocks created by most miners,\n                 // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n                 //   to be considered to fall into this category. We don't want to encourage sending\n                 //   multiple transactions instead of one big transaction to avoid fees.\n-                (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))) \n-            {\n-                // Don't accept it if it can't get into a block\n-                if (nFees < 0)\n+                  (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))))\n+                if (nFees < ::minRelayTxFee.GetFee(nSize))\n                     return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n-                                              hash.ToString(), nFees, 0),\n+                                              hash.ToString(), nFees, ::minRelayTxFee.GetFee(nSize)),\n                                      REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n-            }\n-            else if (nFees < ::minRelayTxFee.GetFee(nSize))\n-                return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n-                                          hash.ToString(), nFees, ::minRelayTxFee.GetFee(nSize)),\n-                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n         }\n \n         // Require that free transactions have sufficient priority to be mined in the next block."
      }
    ]
  },
  {
    "sha": "dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzRiMjA4MmRkZDQxNjVjYWEzZGM2YjNiY2QxOTg2ZjBhMDFjM2Yz",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-02-03T23:44:45Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:56Z"
      },
      "message": "fixup! Micro-optimization: local bool variable to avoid doing the same check 3 times",
      "tree": {
        "sha": "7c1a2e5a9350e419ad2db637fed5eb6ba8286156",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c1a2e5a9350e419ad2db637fed5eb6ba8286156"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bcd1484fa0efc515bac569179cedf08e3dc7be84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcd1484fa0efc515bac569179cedf08e3dc7be84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bcd1484fa0efc515bac569179cedf08e3dc7be84"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ea8c26d9f55b4a1b4f6857c8de861c331d245fe3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3",
        "patch": "@@ -835,6 +835,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n+        bool fValidateFee = nFees >= ::minRelayTxFee.GetFee(nSize);\n         if (fLimitFree) {\n             double dPriorityDelta = 0;\n             CAmount nFeeDelta = 0;\n@@ -845,21 +846,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 //   to be considered to fall into this category. We don't want to encourage sending\n                 //   multiple transactions instead of one big transaction to avoid fees.\n                   (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))))\n-                if (nFees < ::minRelayTxFee.GetFee(nSize))\n+                if (!fValidateFee)\n                     return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n                                               hash.ToString(), nFees, ::minRelayTxFee.GetFee(nSize)),\n                                      REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n         }\n \n         // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        if (GetBoolArg(\"-relaypriority\", true) && !fValidateFee && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1)))\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient priority\");\n-        }\n \n         // Continuously rate-limit free (really, very-low-fee) transactions\n         // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n         // be annoying or make others' transactions take longer to confirm.\n-        if (fLimitFree && nFees < ::minRelayTxFee.GetFee(nSize))\n+        if (fLimitFree && !fValidateFee)\n         {\n             static CCriticalSection csFreeLimiter;\n             static double dFreeCount;"
      }
    ]
  },
  {
    "sha": "0ffc049354e38ee85904368eec006886e2f1c080",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZmZjMDQ5MzU0ZTM4ZWU4NTkwNDM2OGVlYzAwNjg4NmUyZjFjMDgw",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T22:30:22Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:56Z"
      },
      "message": "fixup! Move fValidateFee condition out",
      "tree": {
        "sha": "e6deeffc3cb731d345504004bf7ff2d68ecf2b0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6deeffc3cb731d345504004bf7ff2d68ecf2b0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ffc049354e38ee85904368eec006886e2f1c080",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ffc049354e38ee85904368eec006886e2f1c080",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ffc049354e38ee85904368eec006886e2f1c080",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ffc049354e38ee85904368eec006886e2f1c080/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc4b2082ddd4165caa3dc6b3bcd1986f0a01c3f3"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "15fbf1cd6f8d8b70845e80fb9961a84cb891dceb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ffc049354e38ee85904368eec006886e2f1c080/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ffc049354e38ee85904368eec006886e2f1c080/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0ffc049354e38ee85904368eec006886e2f1c080",
        "patch": "@@ -836,7 +836,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         unsigned int nSize = entry.GetTxSize();\n \n         bool fValidateFee = nFees >= ::minRelayTxFee.GetFee(nSize);\n-        if (fLimitFree) {\n+        if (fLimitFree && !fValidateFee) {\n             double dPriorityDelta = 0;\n             CAmount nFeeDelta = 0;\n             mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n@@ -846,10 +846,9 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 //   to be considered to fall into this category. We don't want to encourage sending\n                 //   multiple transactions instead of one big transaction to avoid fees.\n                   (fAllowFree && nSize < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))))\n-                if (!fValidateFee)\n-                    return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n-                                              hash.ToString(), nFees, ::minRelayTxFee.GetFee(nSize)),\n-                                     REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+                return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n+                                          hash.ToString(), nFees, ::minRelayTxFee.GetFee(nSize)),\n+                                 REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n         }\n \n         // Require that free transactions have sufficient priority to be mined in the next block."
      }
    ]
  },
  {
    "sha": "96141eb448b3daec3691f9287503011a5a6b102b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjE0MWViNDQ4YjNkYWVjMzY5MWY5Mjg3NTAzMDExYTVhNmIxMDJi",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T22:40:05Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-06T23:35:56Z"
      },
      "message": "fixup! join 2 similar ifs",
      "tree": {
        "sha": "1ba073f8598ccef5fd48a9cd099bb11861f23266",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ba073f8598ccef5fd48a9cd099bb11861f23266"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96141eb448b3daec3691f9287503011a5a6b102b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96141eb448b3daec3691f9287503011a5a6b102b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96141eb448b3daec3691f9287503011a5a6b102b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96141eb448b3daec3691f9287503011a5a6b102b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ffc049354e38ee85904368eec006886e2f1c080",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ffc049354e38ee85904368eec006886e2f1c080",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ffc049354e38ee85904368eec006886e2f1c080"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 23,
      "deletions": 24
    },
    "files": [
      {
        "sha": "0836bf859bfc6294842ca66c007f8c1fb058a310",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 24,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96141eb448b3daec3691f9287503011a5a6b102b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96141eb448b3daec3691f9287503011a5a6b102b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=96141eb448b3daec3691f9287503011a5a6b102b",
        "patch": "@@ -849,36 +849,35 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                 return state.DoS(0, error(\"AcceptToMemoryPool: not enough fees %s, %d < %d\",\n                                           hash.ToString(), nFees, ::minRelayTxFee.GetFee(nSize)),\n                                  REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n+\n+            // Continuously rate-limit free (really, very-low-fee) transactions\n+            // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n+            // be annoying or make others' transactions take longer to confirm.\n+            {\n+                static CCriticalSection csFreeLimiter;\n+                static double dFreeCount;\n+                static int64_t nLastTime;\n+                int64_t nNow = GetTime();\n+\n+                LOCK(csFreeLimiter);\n+\n+                // Use an exponentially decaying ~10-minute window:\n+                dFreeCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));\n+                nLastTime = nNow;\n+                // -limitfreerelay unit is thousand-bytes-per-minute\n+                // At default rate it would take over a month to fill 1GB\n+                if (dFreeCount >= GetArg(\"-limitfreerelay\", 15)*10*1000)\n+                    return state.DoS(0, error(\"AcceptToMemoryPool: free transaction rejected by rate limiter\"),\n+                                     REJECT_INSUFFICIENTFEE, \"rate limited free transaction\");\n+                LogPrint(\"mempool\", \"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n+                dFreeCount += nSize;\n+            }\n         }\n \n         // Require that free transactions have sufficient priority to be mined in the next block.\n         if (GetBoolArg(\"-relaypriority\", true) && !fValidateFee && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1)))\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient priority\");\n \n-        // Continuously rate-limit free (really, very-low-fee) transactions\n-        // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n-        // be annoying or make others' transactions take longer to confirm.\n-        if (fLimitFree && !fValidateFee)\n-        {\n-            static CCriticalSection csFreeLimiter;\n-            static double dFreeCount;\n-            static int64_t nLastTime;\n-            int64_t nNow = GetTime();\n-\n-            LOCK(csFreeLimiter);\n-\n-            // Use an exponentially decaying ~10-minute window:\n-            dFreeCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));\n-            nLastTime = nNow;\n-            // -limitfreerelay unit is thousand-bytes-per-minute\n-            // At default rate it would take over a month to fill 1GB\n-            if (dFreeCount >= GetArg(\"-limitfreerelay\", 15)*10*1000)\n-                return state.DoS(0, error(\"AcceptToMemoryPool: free transaction rejected by rate limiter\"),\n-                                 REJECT_INSUFFICIENTFEE, \"rate limited free transaction\");\n-            LogPrint(\"mempool\", \"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n-            dFreeCount += nSize;\n-        }\n-\n         if (fRejectAbsurdFee && nFees > ::minRelayTxFee.GetFee(nSize) * 10000)\n             return error(\"AcceptToMemoryPool: absurdly high fees %s, %d > %d\",\n                          hash.ToString(),"
      }
    ]
  }
]