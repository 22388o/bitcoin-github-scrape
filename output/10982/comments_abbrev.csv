TheBlueMatt,2017-08-03T22:23:59Z,"Updated to only disconnect bit 8 based on comments by the Bitcoin-ABC (bit 5 users) folks indicating they want to change their network magic to ensure good separation for their nodes. Based on the comments from the btc1 folks, I think we should consider merging this sooner rather than later.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320106246,320106246,
TheBlueMatt,2017-08-03T22:36:08Z,"It was pointed out that irrespecitve of whether Bitcoin-ABC changes their network magic to further split their nodes off from nodes wasting their resources, disconnecting nodes with bit 5 will only help their nodes and future Core nodes, so I went ahead and re-added that check.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320108450,320108450,
jheathco,2017-08-04T00:01:59Z,@TheBlueMatt any reason you started referring to bit 5 instead of bit 6?  Looks like the PR still refers to bit 6 (as does master branch of ABC).,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320121190,320121190,
TheBlueMatt,2017-08-04T00:10:47Z,"@jheathco heh, sorry, inconsistent 0base vs 1-base naming.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320122423,320122423,
deadalnix,2017-08-04T20:01:17Z,"We'll be rolling out a new magic. Depending on how fast people upgrade,\nit'll take more or less time. Hard to give a specific timeline at this\npoint in time.\n\nLe 3 août 2017 21:55, ""Matt Corallo"" <notifications@github.com> a écrit :\n\n> Ideally we really wouldnt do this, does @jgarzik\n> <https://github.com/jgarzik> or @deadalnix <https://github.com/deadalnix>\n> have any update on using the ",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320340367,320340367,
TheBlueMatt,2017-08-04T20:02:42Z,"@deadalnix awesome, sounds good. Note that its probably still a good idea for Core to do the disconnect-on-service-bit thing here as it just adds a second layer of ensuring the networks properly split and dont waste each others' resources.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320340666,320340666,
luke-jr,2017-08-04T22:10:11Z,"I don't like the general idea since it burns a service bit unnecessarily, but since it's just for a year or so, and we don't seem to be in shortage of service bits, I don't mind it either.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320364105,320364105,
Leviathn,2017-08-05T02:45:09Z,utACK,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320390255,320390255,
laanwj,2017-08-05T10:55:23Z,"Looks straightforward and correct to me - utACK https://github.com/bitcoin/bitcoin/pull/10982/commits/cae246e6d95bc1f3cbefe984dca3c100cd1a8743.\n\nWould be good to create an issue to track this to make sure this code gets removed after `T>=1533096000`.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320437152,320437152,
jgarzik,2017-08-05T14:51:48Z,"NAK, this will cause a premature network split.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320447951,320447951,
laanwj,2017-08-05T14:59:12Z,"One remaining relaying node is enough to prevent a premature chain split. Which should be fine as not everyone will be upgrading to 0.15 at the same time. If you think there's a risk of that, run a node without this code and make sure to be connected to both nodes signaling and not signaling this flag.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320448349,320448349,
kek-coin,2017-08-05T15:09:24Z,"Since the S2X hardfork blockheight is known, would it be better to only disconnect when the block prior to the hardfork block is found and relayed?",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320448895,320448895,
jgarzik,2017-08-05T15:18:28Z,"Deploying this change for `NODE_SEGWIT2X` - bit 7 - creates chain splits in the wild on an inconsistent basis -- the upgrade rate to (0.15?).\n\nThis creates chain splits _even though Bitcoin Core and segwit2x nodes are validating 100% the same rules today_; it creates chain splits because of a _presumed *future* rule deviation_.\n\nThe outcome is a bunch of non-deterministic islands.  This is",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320449388,320449388,
jgarzik,2017-08-05T15:29:13Z,"It is safe and a convenient optimization for this codebase to make this change after a chain split, but not before.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320449942,320449942,
TheBlueMatt,2017-08-05T15:37:38Z,"@kek-coin we are absolutely not in the business of trying to determine what clients running incompatible consensus rules will do. Ignore @jgarzik's fudding, this obviously doesn't create a split until their incompatible rules kick in, it will only make upgraded nodes more cleanly separated, its not like the network wont still be well-connected.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320450397,320450397,
jgarzik,2017-08-05T15:39:21Z,"Disconnecting service bits should only be enabled after peers have started banning each other on the network, thus proving the safety of service bit disconnect.\n\nIt is obviously unsafe to disconnect outside that set of conditions.\n\nETA:  @TheBlueMatt Please reconsider that every disagreement of opinion is not ""fudding"", and we can have an honest debate.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320450502,320450502,
jgarzik,2017-08-05T15:51:05Z,"Specific review:\n\n1) The subject line says bits 6 and 8, yet the current code as of this writing masks bits 5 and 7.\n\n2) bit 5 is` NODE_BITCOIN_CASH` = (1 << 5) in the BitcoinABC codebase, and bit 7 is `NODE_SEGWIT2X` = (1 << 7) in the btc1 codebase.\n\n3) `NODE_BITCOIN_CASH` is provably divergent today, Bitcoin Core and BitcoinABC peers ban each other today, so it is obviously safe to a",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320451104,320451104,
jtimon,2017-08-05T16:00:30Z,"Who cares about those nodes not diverging today? Those sevice bits are used\nbecause you plan to diverge. We can start preparing today.\nIf we set a date, what if you guys decide to change the date later? We\ncannot waste time trying to accommodate all the details of an\nunderspecified, rushed ans underreviewed (because some review was rejected\nor ignored) implementation.\n\nIt is completely safe",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320451604,320451604,
sdaftuar,2017-08-05T16:05:27Z,"Concept ACK\n\n> It is safe and a convenient optimization for this codebase to make this change after a chain split, but not before.\n\n@jgarzik I believe it is safer for the network topology to not suddenly change at the same time of a consensus rule change -- that is likely to be disruptive (I could imagine users of our software could suddenly find themselves without any peers, depending on ",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320451868,320451868,
jgarzik,2017-08-05T16:06:40Z,"The specific and immediate impact of this change is that Bitcoin Core nodes would disconnect all segwit2x nodes, even though they share the same rulesets today.\n",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320451934,320451934,
TheBlueMatt,2017-08-05T16:10:51Z,"@jgarzik I'm really not sure what basis your argument has, here. This change very clearly wont harm 2x nodes as they already do preferential peering and will obviously stay well-connected thanks to the numerous 0.14 and previous nodes on the network, I'm really not sure how you could argue otherwise. The idea that the network should suddenly change topology come hard fork is only adding potential ",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320452163,320452163,
NicolasDorier,2017-08-05T16:12:27Z,nit: Would be nice to use named constants.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320452244,320452244,
jgarzik,2017-08-05T16:12:56Z,"Disconnecting peers that are otherwise 100% interoperable is just bananas.\n\nIt is the opposite of the Robustness Principle (""be liberal in what you accept') of RFC1122 and elsewhere: https://tools.ietf.org/html/rfc1122#section-1.2.2",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320452270,320452270,
laanwj,2017-08-05T16:17:50Z,"> nit: Would be nice to use named named constants.\n\nI don't think that's necessary - the code is short-lived, and the comment already explains it well enough, and one could also say it's more self-contained like this. We wouldn't want to define these service bits with those that have been reserved by following the BIP process.\n",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320452521,320452521,
jgarzik,2017-08-05T16:52:37Z,"All,\n\nPlease strongly consider the signal it sends to the community, and other protocol/implementation developers, when changing Bitcoin Core to reject otherwise-working, otherwise-interoperable network clients.\n\nThis is akin to a Web server rejecting connections with a client string ""Internet Explorer"" while accepting client strings that include ""Mozilla"", but are otherwise 100% interoper",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320454371,320454371,
betawaffle,2017-08-05T16:59:06Z,">otherwise-working, otherwise-interoperable\n\nIf you see a car heading in your direction on the wrong side of the road, you don't wait until they have hit you to react.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320454768,320454768,
gmaxwell,2017-08-05T17:02:26Z,"> Disconnecting peers that are otherwise 100% interoperable is just bananas.\n\n> It is the opposite of the Robustness Principle (""be liberal in what you accept') of RFC1122 and elsewhere: https://tools.ietf.org/html/rfc1122#section-1.2.2\n\n@jgarzik The the Postel maxim is widely, if not yet universally, considered to be a broken idea of the past. When it's brought up in the IETF it's usually",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320455006,320455006,
jtimon,2017-08-05T17:05:50Z,"Other implementations like libbitcoin used service bits core didn't and\nthere was no problem.\nBut your implementation with its service bit is designed to break\ncompatibility. Why try to be compatible with something designed to be\nincompatible?\nAs matt says, this will smooth your fork off.\n\nOn 5 Aug 2017 19:59, ""Andrew Hodges"" <notifications@github.com> wrote:\n\n> otherwise-working, otherwi",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320455202,320455202,
TheBlueMatt,2017-08-05T17:40:27Z,"Fixed to use GetTime() instead of GetSystemTimeInSeconds, as I misread the comment and intended the mockable version, not that it matters much.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320457622,320457622,
greenaddress,2017-08-05T17:49:49Z,"Concept ACK. Agree with @laanwj this needs to be tracked to remove the code once the disconnect is unnecessary. \n\nHappy the code is confined and explicitly limited to do the disconnect until 1st of August 2018. I don't personally think in this case a constant is useful - comments are to the point \nIMHO.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320459081,320459081,
morcos,2017-08-05T21:20:25Z,"> Please strongly consider the signal it sends to the community, and other protocol/implementation developers, when changing Bitcoin Core to reject otherwise-working, otherwise-interoperable network clients.\n\n@jgarzik I can not agree more with this statement.  However, it doesn't apply in the slightest to this situation.  The btc1 client is already not interoperable with the Core client.  It a",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320471065,320471065,
jgarzik,2017-08-05T23:49:06Z,"It is not easing a transition when fully interoperable clients are disconnected for no other reason than a service bit is set.  For the time period starting now through segwit2x fork time, It is creating disruption where, provably, none would have otherwise existed.\n\nAbsent this change, Bitcoin Core and segwit2x peers will communicate without error for months to come.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320476760,320476760,
jtimon,2017-08-06T02:37:49Z,"""Ease transition to incompatibility"" makes no sense to me.\nPlease @jgarzik explain why there's a problem in 0.15 nodes not being\nconnected to swx2 nodes - preferrably with an example of something going\nwrong -, answer one or more of the question raised in this pr that you have\nignored so far or please, please stop it.\n\nReview: I think there's value in creating the constants even if the\ncomm",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320481784,320481784,
btcdrak,2017-08-06T04:04:11Z,This change should be backported as well.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320484314,320484314,
jonny1000,2017-08-06T04:16:50Z,"ACK, based on user experience\n\n> Disconnecting peers that are otherwise 100% interoperable is just bananas.\n\n@jgarzik I disagree with you here.  I was running the Bitcoin-ABC client before and after the recent chainsplit.  Before the chainsplit occurred I was connected exclusively to many Bitcoin Core peers and was worried about what would happen after the split.  Then when the chainsplit ",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320484708,320484708,
gmaxwell,2017-08-06T08:15:02Z,"@jonny1000 And ABC had an easier time than S2X (as currently implemented, if anyone uses it) would because transaction relay post split from ABC triggered banning (gradually) due to the relay protection and eventually when the difficulty adjustment happened header relay did too.\n\nS2X has no such reasonable protections. And things went better than they might have for ABC-- had there been more m",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320492755,320492755,
jl2012,2017-08-06T14:38:19Z,utACK 469c549,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320510934,320510934,
btcdrak,2017-08-06T21:44:12Z,"@jnewbery To bikeshed, using constants for the service bits does not help implementation wide coordination - that's something people are supposed to coordinate via the mailing list and in BIPs. But in this particular case the service bits were globbed by projects intending to be altcoins so I assume they didnt feel it necessary. I believe not using constants here is a strict improvement, and if an",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320534830,320534830,
jtimon,2017-08-06T22:11:22Z,"How is not using constants a strict improvement? What's the downside of\nusing constants?\nThe mailing list seems completely orthogonal to using constants to me.\n\nOn 7 Aug 2017 00:44, ""฿tcDrak"" <notifications@github.com> wrote:\n\n> @jnewbery <https://github.com/jnewbery> To bikeshed, using constants for\n> the service bits does not help implementation wide coordination - that's\n> something peo",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320536220,320536220,
jnewbery,2017-08-06T22:16:24Z,"I also can't see how not using named constants is a 'strict improvement'.\n\nThe question is not whether or not the use of these service bits by other codebases is legitimate. The question is what makes our codebase clearer. Other possible values for `nServices` already have named constants. Why make these values an exception?\n\nNot trying to make a political point - just my opinion on the cl",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320536451,320536451,
TheBlueMatt,2017-08-07T00:12:46Z,"@jnewberry constants here would indicate the bits should be interpreted as some service provided, but because they were neither coordinated through the BIP process, nor are they in the experimental range and the bitcoin-dev mailing list informed, it would be incorrect to do so. Instead, they should be treated as only ""first bit to disconnect"" and ""second bit to disconnect"", which dont really need ",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320542015,320542015,
jtimon,2017-08-07T01:08:34Z,"I don't think they would indicate that, specially if they are named along\nthe lines I propose (or even DISCONNECT_BIT1, DISCONNECT_BIT2 or whatever,\nthey can be as explicit as you want.\n\nI agree it's just a nit and not a big deal, but I really don't understand\nthe opposition to the constants, nor that the ""wrong process"" argument is\nbrought up again. As @jnewberry says this has nothing to do",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320545536,320545536,
NicolasDorier,2017-08-07T06:06:28Z,"if the problem is using a constant project wise, you can use a function scoped constant. It would improve readability while not making it appears as a coordinated service bit.\n\nMaking the code harder to read because some process was not followed is not a good excuse.\n\nAnyway utACK even without it.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320576631,320576631,
jnewbery,2017-08-07T13:51:03Z,"> constants here would indicate the bits should be interpreted as some service provided, but because they were neither coordinated through the BIP process, nor are they in the experimental range and the bitcoin-dev mailing list informed, it would be incorrect to do so.\n\n`SERVICE_NONE`, `SERVICE_NETWORK` and `SERVICE_XTHIN` are constants, but are not defined in BIPs.\n\n> little reason to add",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320669076,320669076,
gandrewstone,2017-08-07T14:19:23Z,"To avoid a premature network split, this change will simply force btc1 to not set the service bit.  If you check the subver, you'll force btc1 to spoof your subver.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320676591,320676591,
jameshilliard,2017-08-07T21:25:44Z,"@gandrewstone btc1 nodes should not be making outbound connections to nodes that don't support their consensus rules anyways, they should instead preferentially peer with each other. Inbound connections from pre-0.15.0 nodes will be enough to prevent a network fork from happening before they switch to their incompatible rules.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320785204,320785204,
petertodd,2017-08-08T05:09:34Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320851514,320851514,
SamouraiDev,2017-08-08T05:54:32Z,ACK,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320857770,320857770,
notespace,2017-08-08T06:02:01Z,"Please correct me if I'm wrong, but assuming a large portion of NYA-signaling miners would actually start using the btc1 client, wouldn't this change end up starving out miners who wish to use Bitcoin Core 0.15.0 _before the fork_, as they wouldn't be able to get blocks as quickly as the btc1-only mining network? Or is every miner supposed to be using the FIBRE network anyways?\n\nAlso, as a Cor",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320858871,320858871,
automated-response,2017-08-08T06:17:44Z,Why the other implementation wouldn't have just done the reciprocal of this by default at launch is beyond me. This will markedly improve connectivity between compatible peers both respective chains. Looks good.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320861279,320861279,
gmaxwell,2017-08-08T07:19:02Z,"> why not just partition off at the fork block?\n\nPlease read the explanations by Suhas and myself earlier. This was covered.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320872396,320872396,
notespace,2017-08-08T07:58:26Z,"OK, I see that it makes sense not to immediately partition at the block.\n\nWhat about gradually pushing out nodes using the peer selection logic? Then the network would gradually partition safely, even if all upgrade to run 0.15.0 nodes before the fork. Then there remains some cross-communication between btc1 nodes and core nodes.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320881190,320881190,
CSmith7703,2017-08-08T08:16:33Z,This rashly merged commit exactly showed how corrupt the BCore Committee became and why the majority of Bitcoin community decided to go ahead with SegWit2X.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320885469,320885469,
jonasschnelli,2017-08-08T08:21:38Z,Can we properly define those bits in `protocol.h`?,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320886667,320886667,
jonasschnelli,2017-08-08T08:52:06Z,"> Can we properly define those bits in protocol.h?\n\nI also dislike the way how those bits where kidnapped (without the BIP process) but setting a proper constant is still the way to go (we have also done that for XTHIN).\n\nAnyways.\nConcept ACK.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320893814,320893814,
CSmith7703,2017-08-08T08:55:53Z,"@jonasschnelli \n\n> kidnapped \n\nYeah, another negative word to defame dissenters. Such dirty tricks should be avoided.\n\nAnyways, glad to see that you BCore committee tries to leave Bitcoin and fork your 2nd altcoin. Will the token still be called BUASF? I can't wait to sell it to buy more Bitcoin.\n",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320894687,320894687,
I3ck,2017-08-08T11:30:45Z,I thought the #1 priority was to have as many nodes as possible?,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320928657,320928657,
piotrnar,2017-08-08T11:43:58Z,"I see some serious lack of imagination here, among the people pushing for this change.\n\nDo you realize that when you start banning peers based on the content of their version messages, it will eventually make the content of these message obsolete? \n\nWith this change, you are breaking up the network protocol, by forcing certain nodes to stary lying about who they are and what they want.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320931162,320931162,
gmaxwell,2017-08-08T11:52:07Z,"@piotrnar If they do that they will just harm themselves for the most part, as they connect to the thousands of bitcoin core nodes out there that won't tell them about the blockchain they want to hear about.  Where is your concern that Bitcoin also disconnects litecoin nodes?\n\nThere will always be malicious peers out there that will lie. That we can't help.  Also, this PR disconnects, rather t",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320932815,320932815,
piotrnar,2017-08-08T12:09:21Z,"@gmaxwell, this is how the protocol evolves: different people introduce different features, that later get approved (or not) by the mining majority.\n\nThere is nothing wrong with this process. I don't understand why you have a problem with it.\n\nAre you saying that you are not going to ever allow the miners to vote on any consensus protocol changes, other then the ones that the bitcoin core ",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320936648,320936648,
CSmith7703,2017-08-08T12:10:41Z,"@gmaxwell \n\n>  If they do that they will just harm themselves\n\nLie. The 'They' Piotrnar talked about is that the people who run your malicious code to ban others. gMAXWELL, your dishonest ego is quite laughable.\n\n\n> There will always be malicious peers out there that will lie. \n\nSo why are you always the malicious one that tells lies frequently?",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320936961,320936961,
Pheromon,2017-08-08T12:17:00Z,"> Are you saying that you are not going to ever allow the miners to vote on any consensus protocol changes, other then the ones that the bitcoin core team has accepted?\n\nThat's exactly what Blockstream is about: they want to be the only ones to decide how and when Bitcoin must evolve. They ignore the community and reject miners because they think they are bad for Bitcoin.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320938333,320938333,
CSmith7703,2017-08-08T12:20:29Z,"@Pheromon\nExactly. \nIn the ego of gMAXWELL, people who refuse it is anti-decentralization and anti-users.\nAnd people who say NO will be defamed with smear campaign.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320939118,320939118,
piotrnar,2017-08-08T12:21:05Z,"> They ignore the community and reject miners because they think they are bad for Bitcoin.\n\nI don't know about ""the community"", but I must say that ignoring the miners can only end up very badly for this project.  Doing so bitcoin core is digging its own hole.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320939273,320939273,
CSmith7703,2017-08-08T12:23:12Z,"@piotrnar \nIn the ego of Blockstream, those eight to ten guys are ""the community"". People who are against those eight guys are anti-decentralization, anti-Bitcoin, anti-users, and liars.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320939763,320939763,
gmaxwell,2017-08-08T12:23:47Z,"@piotrnar It sounds like you are expressing a misunderstanding  of the Bitcoin system.\n\nThe consensus rules are what defines what is or isn't mining.  Namecoin or BCash or whatever miners are not Bitcoin miners because they produce blocks which violate Bitcoin's rules.  If you look at the Bitcoin whitepaper, section 8 paragraph 2 talks about how nodes are protected against being overpowered by",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320939918,320939918,
CSmith7703,2017-08-08T12:25:07Z,"@gmaxwell \n\nHalf truth and actual lies again.\npiotrnar knowns Bitcoin, Gmaxwell knowns BCore. \nSince BCore is not Bitcoin, then it's fair for GMAXWELL and his blockstream buddies to ban other nodes.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320940240,320940240,
Pheromon,2017-08-08T12:26:05Z,"> I don't know about ""the community"", but I must say that ignoring the miners can only end up very badly for this project. Doing so bitcoin core is digging its own hole.\n\nExactly.\nAnd maybe that's their real aim: destroy Bitcoin to save fiat money and banks (like their main investor, AXA).",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320940452,320940452,
ghost,2017-08-08T12:26:40Z,Please lock this. ,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320940613,320940613,
Pheromon,2017-08-08T12:27:37Z,"> If you look at the Bitcoin whitepaper, section 8 paragraph 2 talks about\n\nIf you look at the Bitcoin WP, you will not find a block limit as a consensus rule, also it's clearly stated that big (enormous!) blocks would be handled by miners.\n\nSo, it seems like you point at the WP only when you want.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320940823,320940823,
piotrnar,2017-08-08T12:29:20Z,"> The consensus rules are what defines what is or isn't mining.\n\nSure - no question about it.\n\nHowever, what we should be asking is: who, how and why defines (and guards) the consensus rules?",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320941235,320941235,
CSmith7703,2017-08-08T12:29:20Z,"@Pheromon\nDon't forget Gmaxwell looked upon Bitcoin WhitePaper and slandered Satoshi.\n\n@piotrnar \nThe ego of Gmaxwell defines and guards the consensus rule. Blockstream has spent more than  40 Million in the past two years to form this definition.\n\n>Gmaxwell: the last posts are nothing but random people\n\nAnyone who don't follow the ego of Gmaxwell are 'random people'.",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320941237,320941237,
jonasschnelli,2017-08-08T12:39:18Z,Please stop political discussion immediately. Keep it technical.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320943459,320943459,
CSmith7703,2017-08-08T12:40:21Z,@jonasschnelli This PR is purely political and out of evil will.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320943717,320943717,
MarcoFalke,2017-08-08T12:41:00Z,The review comments on pull requests are not meant for extended off-topic discussions. Please switch to another channel and keep this discussion for review comments on the code.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-320943866,320943866,
brynwaldwick,2017-08-09T17:01:27Z,"What is the rationale for this versus, say, building compatibility with nodes that use these service bits into the client?\n\nIs there a plan for creating a version compatible with these nodes in the future? Is there any timeline for that?\n\nIf I'm running this client in production what is the recommended upgrade path in the case where only tiny shards of the network are not using these servi",https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-321317423,321317423,
betawaffle,2017-08-09T17:37:40Z,@brynwaldwick Those nodes aren't and can't be made compatible. They are hard fork nodes.,https://github.com/bitcoin/bitcoin/pull/10982#issuecomment-321327258,321327258,
jnewbery,2017-08-06T21:02:22Z,"nit: suggest change the wording of this comment to `... to indicate that a node is running incompatible consensus rules. We will disconnect based on these service bits until August 1st 2018 (when we expect the incompatible nodes to have changed their network magic).`\n\nWe're not 'stuck' doing anything. This is strictly an improvement both for nodes which have hard-forked away and those which ma",https://github.com/bitcoin/bitcoin/pull/10982#discussion_r131552246,131552246,src/net_processing.cpp
