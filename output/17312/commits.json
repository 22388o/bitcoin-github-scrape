[
  {
    "sha": "8499331abf14537a527a733362f44a00628243ae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDk5MzMxYWJmMTQ1MzdhNTI3YTczMzM2MmY0NGEwMDYyODI0M2Fl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-10-30T08:20:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-04T09:43:36Z"
      },
      "message": "refactor: Improve TraceThread usability\n\nSimplify and modernize this function and its usage.\n\n- Improve comment.\n- Use `std::function` instead of a template.\n- Make the function return a closure.\n- Replace `std::bind` usage with C++11 lambdas.\n- Rename to `TracedThread` to prevent accidentally using it in the old way.\n- Move `TracedThread` to implementation file.\n- Make `TracedThread` take std::string instead of legacy C string: This\n  is safer in the case of dynamic names (such as in the case of Index),\n  because the closure owns the string. No potentially dangling `char*`.",
      "tree": {
        "sha": "221a231a1bf03547c15faaf21c2767dfe8a8dcb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/221a231a1bf03547c15faaf21c2767dfe8a8dcb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8499331abf14537a527a733362f44a00628243ae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8499331abf14537a527a733362f44a00628243ae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8499331abf14537a527a733362f44a00628243ae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8499331abf14537a527a733362f44a00628243ae/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "463eab5e1418a592036e7bf9bf46f66fe6462435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/463eab5e1418a592036e7bf9bf46f66fe6462435",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/463eab5e1418a592036e7bf9bf46f66fe6462435"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 40,
      "deletions": 36
    },
    "files": [
      {
        "sha": "2c7923acd5827e6b9b1456c77eb18ca120669e25",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8499331abf14537a527a733362f44a00628243ae/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8499331abf14537a527a733362f44a00628243ae/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=8499331abf14537a527a733362f44a00628243ae",
        "patch": "@@ -309,8 +309,7 @@ void BaseIndex::Start()\n         return;\n     }\n \n-    m_thread_sync = std::thread(&TraceThread<std::function<void()>>, GetName(),\n-                                std::bind(&BaseIndex::ThreadSync, this));\n+    m_thread_sync = std::thread(TracedThread(GetName(), [this] { this->ThreadSync(); }));\n }\n \n void BaseIndex::Stop()"
      },
      {
        "sha": "a5d40e11cf77b80a771ccbf586701e3366fe0fad",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8499331abf14537a527a733362f44a00628243ae/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8499331abf14537a527a733362f44a00628243ae/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8499331abf14537a527a733362f44a00628243ae",
        "patch": "@@ -1263,8 +1263,7 @@ bool AppInitMain(NodeContext& node)\n     }\n \n     // Start the lightweight task scheduler thread\n-    CScheduler::Function serviceLoop = std::bind(&CScheduler::serviceQueue, &scheduler);\n-    threadGroup.create_thread(std::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n+    threadGroup.create_thread(TracedThread(\"scheduler\", []{ scheduler.serviceQueue(); }));\n \n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n     GetMainSignals().RegisterWithMempoolSignals(mempool);"
      },
      {
        "sha": "8ba1897956c7921e2420aad22b442b1284e77fff",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8499331abf14537a527a733362f44a00628243ae/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8499331abf14537a527a733362f44a00628243ae/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=8499331abf14537a527a733362f44a00628243ae",
        "patch": "@@ -1511,7 +1511,7 @@ void StartMapPort()\n {\n     if (!g_upnp_thread.joinable()) {\n         assert(!g_upnp_interrupt);\n-        g_upnp_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n+        g_upnp_thread = std::thread(TracedThread(\"upnp\", ThreadMapPort));\n     }\n }\n \n@@ -2293,15 +2293,15 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     }\n \n     // Send and receive from sockets, accept connections\n-    threadSocketHandler = std::thread(&TraceThread<std::function<void()> >, \"net\", std::function<void()>(std::bind(&CConnman::ThreadSocketHandler, this)));\n+    threadSocketHandler = std::thread(TracedThread(\"net\", [this]{ this->ThreadSocketHandler(); }));\n \n     if (!gArgs.GetBoolArg(\"-dnsseed\", true))\n         LogPrintf(\"DNS seeding disabled\\n\");\n     else\n-        threadDNSAddressSeed = std::thread(&TraceThread<std::function<void()> >, \"dnsseed\", std::function<void()>(std::bind(&CConnman::ThreadDNSAddressSeed, this)));\n+        threadDNSAddressSeed = std::thread(TracedThread(\"dnsseed\", [this] { this->ThreadDNSAddressSeed(); }));\n \n     // Initiate outbound connections from -addnode\n-    threadOpenAddedConnections = std::thread(&TraceThread<std::function<void()> >, \"addcon\", std::function<void()>(std::bind(&CConnman::ThreadOpenAddedConnections, this)));\n+    threadOpenAddedConnections = std::thread(TracedThread(\"addcon\", [this] { this->ThreadOpenAddedConnections(); }));\n \n     if (connOptions.m_use_addrman_outgoing && !connOptions.m_specified_outgoing.empty()) {\n         if (clientInterface) {\n@@ -2311,11 +2311,12 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n         }\n         return false;\n     }\n-    if (connOptions.m_use_addrman_outgoing || !connOptions.m_specified_outgoing.empty())\n-        threadOpenConnections = std::thread(&TraceThread<std::function<void()> >, \"opencon\", std::function<void()>(std::bind(&CConnman::ThreadOpenConnections, this, connOptions.m_specified_outgoing)));\n+    if (connOptions.m_use_addrman_outgoing || !connOptions.m_specified_outgoing.empty()) {\n+        threadOpenConnections = std::thread(TracedThread(\"opencon\", [this, connOptions] { this->ThreadOpenConnections(connOptions.m_specified_outgoing); }));\n+    }\n \n     // Process messages\n-    threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n+    threadMessageHandler = std::thread(TracedThread(\"msghand\", [this] { this->ThreadMessageHandler(); }));\n \n     // Dump network addresses\n     scheduler.scheduleEvery(std::bind(&CConnman::DumpAddresses, this), DUMP_PEERS_INTERVAL * 1000);"
      },
      {
        "sha": "609a14a6cf10e05aadc550b1d71ab498ad738d1e",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8499331abf14537a527a733362f44a00628243ae/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8499331abf14537a527a733362f44a00628243ae/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=8499331abf14537a527a733362f44a00628243ae",
        "patch": "@@ -752,7 +752,7 @@ void StartTorControl()\n         return;\n     }\n \n-    torControlThread = std::thread(std::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n+    torControlThread = std::thread(TracedThread(\"torcontrol\", TorControlThread));\n }\n \n void InterruptTorControl()"
      },
      {
        "sha": "7a35c3ab584c447a92b361d4b7db268e44495dda",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8499331abf14537a527a733362f44a00628243ae/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8499331abf14537a527a733362f44a00628243ae/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=8499331abf14537a527a733362f44a00628243ae",
        "patch": "@@ -1242,6 +1242,32 @@ int ScheduleBatchPriority()\n #endif\n }\n \n+std::function<void()> TracedThread(const std::string name, std::function<void()> func)\n+{\n+    return [name, func]() {\n+        util::ThreadRename(std::string(name));\n+        try\n+        {\n+            LogPrintf(\"%s thread start\\n\", name);\n+            func();\n+            LogPrintf(\"%s thread exit\\n\", name);\n+        }\n+        catch (const boost::thread_interrupted&)\n+        {\n+            LogPrintf(\"%s thread interrupt\\n\", name);\n+            throw;\n+        }\n+        catch (const std::exception& e) {\n+            PrintExceptionContinue(&e, name.c_str());\n+            throw;\n+        }\n+        catch (...) {\n+            PrintExceptionContinue(nullptr, name.c_str());\n+            throw;\n+        }\n+    };\n+}\n+\n namespace util {\n #ifdef WIN32\n WinCmdLineArgs::WinCmdLineArgs()"
      },
      {
        "sha": "a2579c244292af39a9cd595852b147ef8aa77a7b",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 3,
        "deletions": 24,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8499331abf14537a527a733362f44a00628243ae/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8499331abf14537a527a733362f44a00628243ae/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=8499331abf14537a527a733362f44a00628243ae",
        "patch": "@@ -335,31 +335,10 @@ std::string HelpMessageOpt(const std::string& option, const std::string& message\n int GetNumCores();\n \n /**\n- * .. and a wrapper that just calls func once\n+ * Create a wrapper around a thread function that sets the thread name and logs\n+ * start and exit. It also catches and logs exceptions on the way out.\n  */\n-template <typename Callable> void TraceThread(const char* name,  Callable func)\n-{\n-    util::ThreadRename(name);\n-    try\n-    {\n-        LogPrintf(\"%s thread start\\n\", name);\n-        func();\n-        LogPrintf(\"%s thread exit\\n\", name);\n-    }\n-    catch (const boost::thread_interrupted&)\n-    {\n-        LogPrintf(\"%s thread interrupt\\n\", name);\n-        throw;\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, name);\n-        throw;\n-    }\n-    catch (...) {\n-        PrintExceptionContinue(nullptr, name);\n-        throw;\n-    }\n-}\n+std::function<void()> TracedThread(const std::string name, std::function<void()> func);\n \n std::string CopyrightHolders(const std::string& strPrefix);\n "
      }
    ]
  },
  {
    "sha": "007a608de22454827f499201bd22937ab685c001",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDdhNjA4ZGUyMjQ1NDgyN2Y0OTkyMDFiZDIyOTM3YWI2ODVjMDAx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-10-30T08:28:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-04T09:43:36Z"
      },
      "message": "init: Trace \"loadblk\" thread\n\nIt's useful to know what the lifespan of this thread is.",
      "tree": {
        "sha": "e236e1dd1514ac65dbf276ae066cc51bc7496150",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e236e1dd1514ac65dbf276ae066cc51bc7496150"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/007a608de22454827f499201bd22937ab685c001",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007a608de22454827f499201bd22937ab685c001",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/007a608de22454827f499201bd22937ab685c001",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007a608de22454827f499201bd22937ab685c001/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8499331abf14537a527a733362f44a00628243ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8499331abf14537a527a733362f44a00628243ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8499331abf14537a527a733362f44a00628243ae"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7152ce843ed7a64392359a9dac3f4023335f43ab",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/007a608de22454827f499201bd22937ab685c001/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/007a608de22454827f499201bd22937ab685c001/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=007a608de22454827f499201bd22937ab685c001",
        "patch": "@@ -657,7 +657,6 @@ static void CleanupBlockRevFiles()\n static void ThreadImport(std::vector<fs::path> vImportFiles)\n {\n     const CChainParams& chainparams = Params();\n-    util::ThreadRename(\"loadblk\");\n     ScheduleBatchPriority();\n \n     {\n@@ -1713,7 +1712,7 @@ bool AppInitMain(NodeContext& node)\n         vImportFiles.push_back(strFile);\n     }\n \n-    threadGroup.create_thread(std::bind(&ThreadImport, vImportFiles));\n+    threadGroup.create_thread(TracedThread(\"loadblk\", [vImportFiles] { ThreadImport(vImportFiles); }));\n \n     // Wait for genesis block to be processed\n     {"
      }
    ]
  },
  {
    "sha": "e119b150819e3f453bc3d2716a51ccb3869cc2fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTE5YjE1MDgxOWUzZjQ1M2JjM2QyNzE2YTUxY2NiMzg2OWNjMmZh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-10-30T09:22:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-04T09:43:36Z"
      },
      "message": "refactor: Make `PrintExceptionContinue` take std::string\n\nThe argument is used by our own logging subsystem. There's no reason to\nbe passing a legacy C string here.",
      "tree": {
        "sha": "0977f1a907794ff0b78da25859c0e4fed3f214bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0977f1a907794ff0b78da25859c0e4fed3f214bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e119b150819e3f453bc3d2716a51ccb3869cc2fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e119b150819e3f453bc3d2716a51ccb3869cc2fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e119b150819e3f453bc3d2716a51ccb3869cc2fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e119b150819e3f453bc3d2716a51ccb3869cc2fa/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "007a608de22454827f499201bd22937ab685c001",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007a608de22454827f499201bd22937ab685c001",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/007a608de22454827f499201bd22937ab685c001"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "acb795213ffa66499e2ccebc3c62e6ecb5a1856e",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e119b150819e3f453bc3d2716a51ccb3869cc2fa/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e119b150819e3f453bc3d2716a51ccb3869cc2fa/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=e119b150819e3f453bc3d2716a51ccb3869cc2fa",
        "patch": "@@ -668,7 +668,7 @@ std::string HelpMessageOpt(const std::string &option, const std::string &message\n            std::string(\"\\n\\n\");\n }\n \n-static std::string FormatException(const std::exception* pex, const char* pszThread)\n+static std::string FormatException(const std::exception* pex, const std::string& pszThread)\n {\n #ifdef WIN32\n     char pszModule[MAX_PATH] = \"\";\n@@ -684,7 +684,7 @@ static std::string FormatException(const std::exception* pex, const char* pszThr\n             \"UNKNOWN EXCEPTION       \\n%s in %s       \\n\", pszModule, pszThread);\n }\n \n-void PrintExceptionContinue(const std::exception* pex, const char* pszThread)\n+void PrintExceptionContinue(const std::exception* pex, const std::string& pszThread)\n {\n     std::string message = FormatException(pex, pszThread);\n     LogPrintf(\"\\n\\n************************\\n%s\\n\", message);\n@@ -1258,11 +1258,11 @@ std::function<void()> TracedThread(const std::string name, std::function<void()>\n             throw;\n         }\n         catch (const std::exception& e) {\n-            PrintExceptionContinue(&e, name.c_str());\n+            PrintExceptionContinue(&e, name);\n             throw;\n         }\n         catch (...) {\n-            PrintExceptionContinue(nullptr, name.c_str());\n+            PrintExceptionContinue(nullptr, name);\n             throw;\n         }\n     };"
      },
      {
        "sha": "e504228ed8fbe49a839c3716a55d9bca261cf9d1",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e119b150819e3f453bc3d2716a51ccb3869cc2fa/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e119b150819e3f453bc3d2716a51ccb3869cc2fa/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=e119b150819e3f453bc3d2716a51ccb3869cc2fa",
        "patch": "@@ -50,7 +50,7 @@ bool error(const char* fmt, const Args&... args)\n     return false;\n }\n \n-void PrintExceptionContinue(const std::exception *pex, const char* pszThread);\n+void PrintExceptionContinue(const std::exception *pex, const std::string& pszThread);\n bool FileCommit(FILE *file);\n bool TruncateFile(FILE *file, unsigned int length);\n int RaiseFileDescriptorLimit(int nMinFD);"
      }
    ]
  }
]