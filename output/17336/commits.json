[
  {
    "sha": "317fb96de9c6257972f1213b4ef2c3fe87dde99f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTdmYjk2ZGU5YzYyNTc5NzJmMTIxM2I0ZWYyYzNmZTg3ZGRlOTlm",
    "commit": {
      "author": {
        "name": "Rjected",
        "email": "kidscline01@gmail.com",
        "date": "2019-10-28T03:01:22Z"
      },
      "committer": {
        "name": "Rjected",
        "email": "kidscline01@gmail.com",
        "date": "2019-10-28T03:08:10Z"
      },
      "message": "Add search for first blk file with pruned node",
      "tree": {
        "sha": "55f9ecd32de40dcba829ada811ce53302edc976a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55f9ecd32de40dcba829ada811ce53302edc976a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/317fb96de9c6257972f1213b4ef2c3fe87dde99f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+RW52VVoTZAAjPpHwXZuHyjmvJ0FAl22W6oACgkQwXZuHyjm\nvJ2efg//a6EXfIyO4OsAKW9/NUbq4Bc/t3AafsZYX7iGgF6/PYZ6m6FjS5A9n9ye\nPr8CWKvw4u9AahrfHwTN0hgSiqC3+6MCzYzizoThPs6GZen7uIOlw7nYjazn80ah\nKzbcpfUZisqLP5A90A9mosXDBxYybMn28Z88AQnFP4DecRCSUq18m6IY6yK/fBBz\nXuYkScXi9wnEBK1u7mx6Os6zDsZwxbpqmEsDK7l/Kr1JOi+n4bqFo6AQIuYCkRTX\nMeq8oqOGNaqXoWyxpjMOdVCFWMn+YTcfSP2llB9sSb7ioLrKSrFC1ada/vB86Els\nOmOTKeEDQurNlUrMWAiTY7itopNrCzY+/pAqXuGgjhy8ZkAjdL2+qSfIpOVqFP6l\ng2I25ytre3brahfUIaEImQX+ZRI+f2UbqM09Ar/x0Hc3yoA8RW24VLtTP/vkc9ZU\nWEIWidHRTN9m5vqVIK688gaAJOLcGEFQdYTP/OolzUakWlyg7Da5Ow5HNe+4DLHv\nxua5ZcMOeVvL/M5jCTE3s/h7O7I0qbI39TBoPjbpi+X24moAy3avtaH0oM53bneZ\nLYRXuC+8uUDVu3RQOM4dU+L3AeovAXlJUzFNh99Gg60LXevhf6X0hRAALNoqcAAB\n1WS1eJ5Bh+YMEPyNDzqUXM4g42npLGH8bvh/Wng2r4LokkEXUNg=\n=EaQH\n-----END PGP SIGNATURE-----",
        "payload": "tree 55f9ecd32de40dcba829ada811ce53302edc976a\nparent be50469217bd775c4305938634c32e5932f47841\nauthor Rjected <kidscline01@gmail.com> 1572231682 -0400\ncommitter Rjected <kidscline01@gmail.com> 1572232090 -0400\n\nAdd search for first blk file with pruned node\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/317fb96de9c6257972f1213b4ef2c3fe87dde99f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/317fb96de9c6257972f1213b4ef2c3fe87dde99f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/317fb96de9c6257972f1213b4ef2c3fe87dde99f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "be50469217bd775c4305938634c32e5932f47841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be50469217bd775c4305938634c32e5932f47841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be50469217bd775c4305938634c32e5932f47841"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 28,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9ad7a0394145a656fae547d502fe2dee192e692e",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 28,
        "deletions": 1,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/317fb96de9c6257972f1213b4ef2c3fe87dde99f/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/317fb96de9c6257972f1213b4ef2c3fe87dde99f/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=317fb96de9c6257972f1213b4ef2c3fe87dde99f",
        "patch": "@@ -15,6 +15,7 @@\n import hashlib\n import datetime\n import time\n+import glob\n from collections import namedtuple\n from binascii import unhexlify\n \n@@ -92,6 +93,30 @@ def mkblockmap(blkindex):\n         blkmap[hash] = height\n     return blkmap\n \n+# This gets the first block file ID that exists from the input block\n+# file directory.\n+def getFirstBlockFileId(block_dir_path):\n+    # First, this sets up a pattern to search for block files, for\n+    # example 'blkNNNNN.dat'.\n+    blkFilePattern = os.path.join(block_dir_path, \"blk[0-9][0-9][0-9][0-9][0-9].dat\")\n+\n+    # This search is done with glob\n+    blkFnList = glob.glob(blkFilePattern)\n+\n+    if len(blkFnList) == 0:\n+        print(\"blocks not pruned - starting at 0\")\n+        return 0\n+    # We then get the lexicographic minimum, which should be the first\n+    # block file name.\n+    firstBlkFilePath = min(blkFnList)\n+    firstBlkFn = os.path.basename(firstBlkFilePath)\n+\n+    # now, the string should be ['b','l','k','N','N','N','N','N','.','d','a','t']\n+    # So get the ID by choosing:              3   4   5   6   7\n+    # The ID is not necessarily 0 if this is a pruned node.\n+    blkId = int(firstBlkFn[3:8])\n+    return blkId\n+\n # Block header and extent on disk\n BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n \n@@ -101,7 +126,9 @@ def __init__(self, settings, blkindex, blkmap):\n         self.blkindex = blkindex\n         self.blkmap = blkmap\n \n-        self.inFn = 0\n+        # Get first occurring block file id - for pruned nodes this\n+        # will not necessarily be 0\n+        self.inFn = getFirstBlockFileId(self.settings['input'])\n         self.inF = None\n         self.outFn = 0\n         self.outsz = 0"
      }
    ]
  }
]