MarcoFalke,2016-09-18T15:57:19Z,utACK 2ff29a7\n,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-247855842,247855842,
sipa,2016-09-20T21:20:02Z,"I disagree this is a bug. Apart from miners, nobody should care about the\ntotal serialized size.\n",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-248437938,248437938,
laanwj,2016-09-21T13:32:21Z,@sipa so do you agree on this documentation change?\n,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-248613183,248613183,
sipa,2016-09-21T13:50:59Z,"@laanwj I agree with it, though there was some discussion in one of the former IRC meetings that we shouldn't call this virtual size.\n",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-248618388,248618388,
luke-jr,2016-09-22T09:06:19Z,"If we're not showing the size in bytes, then just get rid of the size/bytes fields and add weight...\n",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-248848841,248848841,
jnewbery,2016-09-22T12:25:24Z,"Removing fields from objects returned by RPC functions is a non-backwards compatible change, which may break clients using the API. I agree that adding weight may be useful for some users and we should consider extending the RPC return objects to include it. If you feel strongly about having weight returned RPC functions, let me know and I'll open a new PR.\n\nThis PR is simply to fix up the help ",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-248888971,248888971,
TheBlueMatt,2016-09-22T14:25:26Z,"Strinctly speaking, this is wrong...BIP 141 defines virtual size as ""Transaction weight / 4 (rounded up to nearest integer)."" with weight being "" Base transaction size \* 3 + Total transaction size (ie. the same method as calculating Block weight from Base size and Total size)."".\n\nHowever, this method actually returns that iff sigops per byte of the tx is lower than sigops per byte of the block ",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-248918971,248918971,
jnewbery,2016-09-27T14:40:22Z,@TheBlueMatt - you're correct. The actual value returned will be higher than the virtual size if the sigsops per byte in the tx is greater the nBytesPerSigOp due to https://github.com/bitcoin/bitcoin/commit/ab942c15bd3854650afa810d7c22d7fd30d346c1.\n\nI _could_ expand the RPC text from:\n`(numeric) Sum of all virtual transaction sizes as defined in BIP 141. Differs from actual serialized size beca,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-249885103,249885103,
TheBlueMatt,2016-10-05T13:29:44Z,"Its relatively strange to me that it would be inconsistent with the BIP. If we want to keep it this way, I'd say changing the BIP is sufficient as the help text refers to that. Alternatively, we could change the return value to be consistent with the BIP. Either way, I agree, expanding the RPC help text is strange.\n",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-251674561,251674561,
laanwj,2016-11-16T09:52:24Z,"Closing this, as there seems to be strong disagreement about this and the discussion has bled out.\n",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-260902101,260902101,
morcos,2016-11-16T13:31:42Z,"@laanwj please don't close this.   I don't think anyone (other than possibly @luke-jr) disagrees that this is an clear improvement.  The existing help text is confusing and this is far more accurate.  @TheBlueMatt 's comments are a more obscure technical refinement, but I don't think meant as a blocker to merging this. \n\nI think its important that we make an effort to properly document and educa",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-260946942,260946942,
jnewbery,2016-11-16T17:20:06Z,Travis appeared to fail because of an unrelated environment setup issue. I've rebased this PR which will kick off another travis run.\n,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-261010495,261010495,
bitcoinfees,2016-11-17T05:46:20Z,"There seems to be a conflict - `getrawmempool` defines ""size"" as the virtual size, whereas `getrawtransaction` defines it as the serialized size (and using ""vsize"" instead for virtual size).  This doc change helps to clarify the difference, but to avoid confusion perhaps the term ""size"" should be made to mean the same thing in all RPC calls.\n\nOh and in `getblock` RPC, ""size"" also refers to seria",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-261161089,261161089,
jnewbery,2016-11-17T12:45:10Z,"@bitcoinfees - yes, I completely agree with everything you say, and that it's confusing that 'size' means different things in different RPCs.\n\nI didn't make any functional changes to the API since there may be applications that rely on the current behaviour. This PR simply updates the self-documentation in the RPCs so that it accurately describes what is being returned.\n\nPerhaps we should chan",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-261237779,261237779,
luke-jr,2016-11-17T13:08:45Z,It still doesn't make sense to document a bug rather than fixing it.\n,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-261242328,261242328,
morcos,2016-11-17T13:27:40Z,@luke-jr but that is not the choice at hand.  The choice presented by this PR is to document the existing behavior or leave it improperly documented.  Choosing to document it does not preclude changing it in the future.  Although I think most of us do not consider it a bug.\n\nI can't understand why this is even a question.  How can we argue against more clearly explaining to users what the behavi,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-261245959,261245959,
jnewbery,2016-11-17T13:42:20Z,@luke-jr - I agree with @morcos. Nothing in this documentation fix precludes you from opening an issue or PR to change the API.\n,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-261249157,261249157,
morcos,2016-12-07T14:31:01Z,"@sipa @TheBlueMatt This PR has several ACK's (and @luke-jr's objection), but I think its held up from merging b/c lack of clear feedback from you two.  If you are OK with it could you say?\n",https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-265461359,265461359,
sipa,2016-12-07T20:01:24Z,ACK 2ddb53054579c70de061d95386e9a5a02255d53f,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-265556931,265556931,
jnewbery,2016-12-08T17:05:47Z,Thanks @paveljanik . Comment fixed.,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-265795104,265795104,
paveljanik,2016-12-09T06:09:03Z,ACK https://github.com/bitcoin/bitcoin/pull/8747/commits/d29505db22892548a5eca5567bf8acf4e950efea,https://github.com/bitcoin/bitcoin/pull/8747#issuecomment-265941342,265941342,
luke-jr,2016-09-20T00:06:30Z,This is a bug. :(\n,https://github.com/bitcoin/bitcoin/pull/8747#discussion_r79515135,79515135,src/rpc/blockchain.cpp
luke-jr,2016-09-20T00:06:50Z,This also shouldn't be virtual.\n,https://github.com/bitcoin/bitcoin/pull/8747#discussion_r79515177,79515177,src/rpc/blockchain.cpp
jnewbery,2016-09-20T12:39:17Z,"This commit updates the RPC help text to reflect what the function call actually returns. If you think there's a problem with the RPC function, I suggest you raise an issue against that code.\n",https://github.com/bitcoin/bitcoin/pull/8747#discussion_r79599976,79599976,src/rpc/blockchain.cpp
jnewbery,2016-09-20T12:39:23Z,See above\n,https://github.com/bitcoin/bitcoin/pull/8747#discussion_r79599989,79599989,src/rpc/blockchain.cpp
luke-jr,2016-09-20T20:43:22Z,"Well, NACK changing documentation to match buggy behaviour rather than fixing the bug...\n",https://github.com/bitcoin/bitcoin/pull/8747#discussion_r79707549,79707549,src/rpc/blockchain.cpp
paveljanik,2016-12-08T07:16:01Z,Dot at the end of sentence missing.,https://github.com/bitcoin/bitcoin/pull/8747#discussion_r91457078,91457078,src/rpc/mining.cpp
