jamesob,2018-03-07T19:00:27Z,utACK https://github.com/bitcoin/bitcoin/pull/12638/commits/fa533b113944c9b5d2bf9358393448b60204ab57,https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-371246528,371246528,
laanwj,2018-03-07T19:01:42Z,"utACK, though the opposite approach, listing the files and directories to be cached instead of the ones not to be cached, might lead to less surprises in the future.",https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-371246942,371246942,
promag,2018-03-07T19:19:57Z,utACK fa533b1.,https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-371252940,371252940,
MarcoFalke,2018-03-07T19:23:50Z,Addressed @jamesob and @laanwj feedback,https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-371254156,371254156,
laanwj,2018-03-07T19:26:24Z,"Thanks, yes, I like this much better. re-utACK",https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-371254926,371254926,
promag,2018-03-07T19:40:18Z,"Nit, since you are importing `get_datadir_path`, add a commit replacing\n```py\nos.path.join(self.options.cachedir, ""node"" + str(i))\n```\nwith\n```py\nget_datadir_path(self.options.cachedir, i)\n```",https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-371259263,371259263,
jamesob,2018-03-07T21:15:49Z,utACK https://github.com/bitcoin/bitcoin/pull/12638/commits/fa2310572f4cfcd3322409ce7e37dde155fc4bc9,https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-371287249,371287249,
laanwj,2018-03-14T12:13:17Z,"I've bumped travis twice, but it still fails.\n\nEdit: \n```\n/home/travis/.travis/job_stages: line 57: depends/arm-linux-gnueabihf/native/bin/ccache: No such file or directory\n```\nI'll try nuking the cache (for this PR).\n```bash\n$ travis cache -d -b PR.12638\n```\n",https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-372999920,372999920,
laanwj,2018-03-14T12:44:26Z,"Still no luck, I think you need to re-push.",https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-373007651,373007651,
MarcoFalke,2018-03-14T13:16:06Z,"You can safely ignore the failing signal from Travis, it is a bug on their\nend. I am not going to invalidate review for that\n\nOn Mar 14, 2018 13:45, ""Wladimir J. van der Laan"" <notifications@github.com>\nwrote:\n\n> Still no luck, I think you need to re-push.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.",https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-373016729,373016729,
laanwj,2018-03-14T13:18:07Z,"> You can safely ignore the failing signal from Travis, it is a bug on their end. I am not going to invalidate review for that\n\nI find that difficult, without travis passing on a PR you can't guarantee that it won't break the build.\nBut anyhow, if you're so sure, we'll just merge...\n\n",https://github.com/bitcoin/bitcoin/pull/12638#issuecomment-373017332,373017332,
jamesob,2018-03-07T19:02:30Z,"Would be nice to avoid so much duplication, e.g. \n```python\ndef rm_cache_path(filename):\n    os.remove(os.path.join(get_datadir_path(self.options.cachedir, i), ""regtest"", filename))\n```\nbut this is fine as-is.",https://github.com/bitcoin/bitcoin/pull/12638#discussion_r172950039,172950039,test/functional/test_framework/test_framework.py
jamesob,2018-03-07T19:26:30Z,`i` won't be in scope yet; have to declare this in the loop.,https://github.com/bitcoin/bitcoin/pull/12638#discussion_r172957291,172957291,test/functional/test_framework/test_framework.py
laanwj,2018-03-07T19:28:48Z,"I don't think that's necessary. Python will add the symbol i to the scope of the function, not the for  block. Though it might be clearer to just pass `i` in as a parameter.",https://github.com/bitcoin/bitcoin/pull/12638#discussion_r172958037,172958037,test/functional/test_framework/test_framework.py
jamesob,2018-03-07T19:30:45Z,"Oh, @laanwj is right. Still probably best to either parameterize or move this definition as-is under the `for` for clarity.",https://github.com/bitcoin/bitcoin/pull/12638#discussion_r172958685,172958685,test/functional/test_framework/test_framework.py
laanwj,2018-03-07T19:42:01Z,"Not that the performance overhead is relevant in this case, but I think defining a function inside a loop is generally frowned upon. AFAIK essentially it's instantiating an object every time.",https://github.com/bitcoin/bitcoin/pull/12638#discussion_r172961831,172961831,test/functional/test_framework/test_framework.py
