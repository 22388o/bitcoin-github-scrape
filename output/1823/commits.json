[
  {
    "sha": "a7804e891431975bd95d2ae7a7afe955156e7c1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzgwNGU4OTE0MzE5NzViZDk1ZDJhZTdhN2FmZTk1NTE1NmU3YzFk",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-13T11:15:29Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-13T11:28:38Z"
      },
      "message": "tests for SetCompact and GetCompact of CBigNum",
      "tree": {
        "sha": "076abe516fdd22566aca53f39e988c7fff5cf623",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/076abe516fdd22566aca53f39e988c7fff5cf623"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7804e891431975bd95d2ae7a7afe955156e7c1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7804e891431975bd95d2ae7a7afe955156e7c1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7804e891431975bd95d2ae7a7afe955156e7c1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7804e891431975bd95d2ae7a7afe955156e7c1d/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b1eb5687df3f01edeaa2724783faa6a3c08aa03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b1eb5687df3f01edeaa2724783faa6a3c08aa03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b1eb5687df3f01edeaa2724783faa6a3c08aa03"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 53,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f6a9e08f6679705e51420d05f9ae92fdd2696842",
        "filename": "src/test/bignum_tests.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7804e891431975bd95d2ae7a7afe955156e7c1d/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7804e891431975bd95d2ae7a7afe955156e7c1d/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=a7804e891431975bd95d2ae7a7afe955156e7c1d",
        "patch": "@@ -122,4 +122,57 @@ BOOST_AUTO_TEST_CASE(bignum_setint64)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(bignum_SetCompact)\n+{\n+    CBigNum num;\n+    num.SetCompact(0);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"0\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0);\n+\n+    num.SetCompact(0x00123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"0\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0);\n+\n+    num.SetCompact(0x01123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"12\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x01120000);\n+\n+    // Make sure that we don't generate compacts with the 0x00800000 bit set\n+    num = 0x80;\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x02008000);\n+\n+    // Some implementations misinterpred compacts with 0x00800000 set as negative\n+    num.SetCompact(0x01fedcba);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"fe\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x0200fe00);\n+\n+    num.SetCompact(0x02123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"1234\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x02123400);\n+\n+    num.SetCompact(0x03123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"123456\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x03123456);\n+\n+    num.SetCompact(0x04123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"12345600\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x04123456);\n+\n+    num.SetCompact(0x04923456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"92345600\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x05009234);\n+    num.SetCompact(0x05009234);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"92340000\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x05009234);\n+\n+    num.SetCompact(0x20123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"1234560000000000000000000000000000000000000000000000000000000000\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x20123456);\n+\n+    num.SetCompact(0xff123456);\n+    BOOST_CHECK_EQUAL(num.GetHexn+    BOOST_CHECK_EQUAL(num.GetCompact(), 0xff123456);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjBlMTRmNWQyZGQ5NjcxYjJhYTYwYjNkZDVlMzU5M2ZlNDdiM2Nm",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-13T11:17:15Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-13T14:02:09Z"
      },
      "message": "reimplement CBigNum's compact encoding of difficulty targets\n\nUse shifts instead of going through the MPI representation of BIGNUMs.\nThis also get's rid of a bug interpreting compact representations with\nthe 0x00800000 bit set as negative.\n\nWhen generating the compact representation make sure the result never\nhas the 0x00800000 bit set so the above bug does not get triggered in\nbuggy implementations.",
      "tree": {
        "sha": "96ff517275b18df41181bd4565506958329c9f6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96ff517275b18df41181bd4565506958329c9f6a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7804e891431975bd95d2ae7a7afe955156e7c1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7804e891431975bd95d2ae7a7afe955156e7c1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7804e891431975bd95d2ae7a7afe955156e7c1d"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 30,
      "deletions": 14
    },
    "files": [
      {
        "sha": "d158a23277d088212010ddfcc7364f5c340ac942",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 30,
        "deletions": 14,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=3f0e14f5d2dd9671b2aa60b3dd5e3593fe47b3cf",
        "patch": "@@ -265,25 +265,41 @@ class CBigNum : public BIGNUM\n     CBigNum& SetCompact(unsigned int nCompact)\n     {\n         unsigned int nSize = nCompact >> 24;\n-        std::vector<unsigned char> vch(4 + nSize);\n-        vch[3] = nSize;\n-        if (nSize >= 1) vch[4] = (nCompact >> 16) & 0xff;\n-        if (nSize >= 2) vch[5] = (nCompact >> 8) & 0xff;\n-        if (nSize >= 3) vch[6] = (nCompact >> 0) & 0xff;\n-        BN_mpi2bn(&vch[0], vch.size(), this);\n+        unsigned int nWord = nCompact & 0xffffff;\n+        if (nSize <= 3)\n+        {\n+            nWord >>= 8*(3-nSize);\n+            BN_set_word(this, nWord);\n+        }\n+        else\n+        {\n+            BN_set_word(this, nWord);\n+            BN_lshift(this, this, 8*(nSize-3));\n+        }\n         return *this;\n     }\n \n     unsigned int GetCompact() const\n     {\n-        unsigned int nSize = BN_bn2mpi(this, NULL);\n-        std::vector<unsigned char> vch(nSize);\n-        nSize -= 4;\n-        BN_bn2mpi(this, &vch[0]);\n-        unsigned int nCompact = nSize << 24;\n-        if (nSize >= 1) nCompact |= (vch[4] << 16);\n-        if (nSize >= 2) nCompact |= (vch[5] << 8);\n-        if (nSize >= 3) nCompact |= (vch[6] << 0);\n+        unsigned int nSize = BN_num_bytes(this);\n+        unsigned int nCompact = 0;\n+        if (nSize <= 3)\n+            nCompact = BN_get_word(this) << 8*(3-nSize);\n+        else\n+        {\n+            CBigNum bn;\n+            BN_rshift(&bn, this, 8*(nSize-3));\n+            nCompact = BN_get_word(&bn);\n+        }\n+        // Avoid compact representations with the 0x00800000 bit set.\n+        // Some implementations decode them to negative numbers with\n+        // the highest bit cleared.\n+        if (nCompact & 0x00800000)\n+        {\n+            nCompact >>= 8;\n+            nSize++;\n+        }\n+        nCompact |= nSize << 24;\n         return nCompact;\n     }\n "
      }
    ]
  }
]