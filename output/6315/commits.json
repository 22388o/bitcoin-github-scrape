[
  {
    "sha": "50f090884ccd29e439720aeb83fcd293fae34921",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGYwOTA4ODRjY2QyOWU0Mzk3MjBhZWI4M2ZjZDI5M2ZhZTM0OTIx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-19T11:24:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add ban functions to peers window\n\nadd ban option for peer context menu (1h, 24h, 7d, 1y).",
      "tree": {
        "sha": "578f740e33d6c6b4dfdcb761661f167dd08583e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/578f740e33d6c6b4dfdcb761661f167dd08583e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50f090884ccd29e439720aeb83fcd293fae34921",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f090884ccd29e439720aeb83fcd293fae34921",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50f090884ccd29e439720aeb83fcd293fae34921",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f090884ccd29e439720aeb83fcd293fae34921/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 41,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2a94312be0bb1f6ba3d912ce7d502ee5ba5fd8a2",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 1,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=50f090884ccd29e439720aeb83fcd293fae34921",
        "patch": "@@ -352,16 +352,37 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n \n         // create context menu actions\n-        QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n+        QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n+        QAction* banAction1h        = new QAction(tr(\"&Ban Node for 1 hour\"), this);\n+        QAction* banAction24h       = new QAction(tr(\"&Ban Node for 24 hours\"), this);\n+        QAction* banAction7d        = new QAction(tr(\"&Ban Node for 7 days\"), this);\n+        QAction* banAction365d      = new QAction(tr(\"&Ban Node for 1 year\"), this);\n \n         // create context menu\n         contextMenu = new QMenu();\n         contextMenu->addAction(disconnectAction);\n+        contextMenu->addAction(banAction1h);\n+        contextMenu->addAction(banAction24h);\n+        contextMenu->addAction(banAction7d);\n+        contextMenu->addAction(banAction365d);\n \n         // context menu signals\n         connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n+        //add a signal mapping, use int instead of int64_t for bantime because signalmapper only supports int or objects\n+        //int is sufficient for our case\n+        QSignalMapper* signalMapper = new QSignalMapper(this);\n+        signalMapper->setMapping(banAction1h, 60*60);\n+        signalMapper->setMapping(banAction24h, 60*60*24);\n+        signalMapper->setMapping(banAction7d, 60*60*24*7);\n+        signalMapper->setMapping(banAction365d, 60*60*24*365);\n+        connect(banAction1h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction24h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction7d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n+        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int))) ;\n+\n         // connect the peerWidget selection model to our peerSelected() handler\n         connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n              this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n@@ -731,6 +752,23 @@ void RPCConsole::disconnectSelectedNode()\n     }\n }\n \n+void RPCConsole::banSelectedNode(int bantime)\n+{\n+    // Get currently selected peer address\n+    QString strNode = GUIUtil::getEntryData(ui->peerWidget, 0, PeerTableModel::Address);\n+    // Find possible nodes, ban it and clear the selected node\n+    if (CNode *bannedNode = FindNode(strNode.toStdString())) {\n+        std::string nStr = strNode.toStdString();\n+        std::string addr;\n+        int port = 0;\n+        SplitHostPort(nStr, port, addr);\n+\n+        CNode::Ban(CNetAddr(addr), bantime);\n+        bannedNode->CloseSocketDisconnect();\n+        clearSelectedNode();\n+    }\n+}\n+\n void RPCConsole::clearSelectedNode()\n {\n     ui->peerWidget->selectionModel()->clearSelection();"
      },
      {
        "sha": "3218a635d7aef15b98efcddc41dda078ce4258d5",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f090884ccd29e439720aeb83fcd293fae34921/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=50f090884ccd29e439720aeb83fcd293fae34921",
        "patch": "@@ -80,6 +80,8 @@ public Q_SLOTS:\n     void peerLayoutChanged();\n     /** Disconnect a selected node on the Peers tab */\n     void disconnectSelectedNode();\n+    /** Ban a selected node on the Peers tab */\n+    void banSelectedNode(int bantime);\n \n Q_SIGNALS:\n     // For RPC command executor"
      }
    ]
  },
  {
    "sha": "ad204df1a9077327ab1142fbc9bf41369c1a73d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDIwNGRmMWE5MDc3MzI3YWIxMTQyZmJjOWJmNDEzNjljMWE3M2Qx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T18:27:03Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add banlist table below peers table",
      "tree": {
        "sha": "40bf9432ae40956dcb6990814832e6b8ceca0158",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40bf9432ae40956dcb6990814832e6b8ceca0158"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50f090884ccd29e439720aeb83fcd293fae34921",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f090884ccd29e439720aeb83fcd293fae34921",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50f090884ccd29e439720aeb83fcd293fae34921"
      }
    ],
    "stats": {
      "total": 385,
      "additions": 375,
      "deletions": 10
    },
    "files": [
      {
        "sha": "480bd9dc8a6229f18d6f5c376061bf16cd673f9d",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -97,6 +97,7 @@ QT_MOC_CPP = \\\n   qt/moc_addressbookpage.cpp \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_bantablemodel.cpp \\\n   qt/moc_bitcoinaddressvalidator.cpp \\\n   qt/moc_bitcoinamountfield.cpp \\\n   qt/moc_bitcoingui.cpp \\\n@@ -162,6 +163,7 @@ BITCOIN_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n   qt/askpassphrasedialog.h \\\n+  qt/bantablemodel.h \\\n   qt/bitcoinaddressvalidator.h \\\n   qt/bitcoinamountfield.h \\\n   qt/bitcoingui.h \\\n@@ -260,6 +262,7 @@ RES_ICONS = \\\n   qt/res/icons/verify.png\n \n BITCOIN_QT_CPP = \\\n+  qt/bantablemodel.cpp \\\n   qt/bitcoinaddressvalidator.cpp \\\n   qt/bitcoinamountfield.cpp \\\n   qt/bitcoingui.cpp \\"
      },
      {
        "sha": "3b71769ef302950a8e3b24d0176a5bdf1e9d6b06",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "added",
        "additions": 192,
        "deletions": 0,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -0,0 +1,192 @@\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bantablemodel.h\"\n+\n+#include \"clientmodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n+\n+#include \"net.h\"\n+#include \"sync.h\"\n+#include \"utiltime.h\"\n+\n+#include <QDebug>\n+#include <QList>\n+#include <QTimer>\n+\n+#include <boost/date_time/posix_time/posix_time.hpp>\n+#include <boost/date_time/c_local_time_adjustor.hpp>\n+\n+// private implementation\n+class BanTablePriv\n+{\n+public:\n+    /** Local cache of peer information */\n+    QList<CCombinedBan> cachedBanlist;\n+    /** Column to sort nodes by */\n+    int sortColumn;\n+    /** Order (ascending or descending) to sort nodes by */\n+    Qt::SortOrder sortOrder;\n+\n+    /** Pull a full list of banned nodes from CNode into our cache */\n+    void refreshBanlist()\n+    {\n+        std::map<CSubNet, int64_t> banMap;\n+        CNode::GetBanned(banMap);\n+\n+        cachedBanlist.clear();\n+#if QT_VERSION >= 0x040700\n+        cachedBanlist.reserve(banMap.size());\n+#endif\n+        std::map<CSubNet, int64_t>::iterator iter;\n+        for (iter = banMap.begin(); iter != banMap.end(); ++iter) {\n+            CCombinedBan banEntry;\n+            banEntry.subnet = iter->first;\n+            banEntry.bantil = iter->second;\n+            cachedBanlist.append(banEntry);\n+        }\n+    }\n+\n+    int size()\n+    {\n+        return cachedBanlist.size();\n+    }\n+\n+    CCombinedBan *index(int idx)\n+    {\n+        if(idx >= 0 && idx < cachedBanlist.size()) {\n+            return &cachedBanlist[idx];\n+        } else {\n+            return 0;\n+        }\n+    }\n+};\n+\n+BanTableModel::BanTableModel(ClientModel *parent) :\n+    QAbstractTableModel(parent),\n+    clientModel(parent),\n+    timer(0)\n+{\n+    columns << tr(\"IP/Netmask\") << tr(\"Banned Until\");\n+    priv = new BanTablePriv();\n+    // default to unsorted\n+    priv->sortColumn = -1;\n+\n+    // set up timer for auto refresh\n+    timer = new QTimer();\n+    connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n+    timer->setInterval(MODEL_UPDATE_DELAY);\n+\n+    // load initial data\n+    refresh();\n+}\n+\n+void BanTableModel::startAutoRefresh()\n+{\n+    timer->start();\n+}\n+\n+void BanTableModel::stopAutoRefresh()\n+{\n+    timer->stop();\n+}\n+\n+int BanTableModel::rowCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return priv->size();\n+}\n+\n+int BanTableModel::columnCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return columns.length();;\n+}\n+\n+QVariant BanTableModel::data(const QModelIndex &index, int role) const\n+{\n+    if(!index.isValid())\n+        return QVariant();\n+\n+    CCombinedBan *rec = static_cast<CCombinedBan*>(index.internalPointer());\n+\n+    if (role == Qt::DisplayRole) {\n+        switch(index.column())\n+        {\n+        case Address:\n+            return QString::fromStdString(rec->subnet.ToString());\n+        case Bantime:\n+            //show time in users local timezone, not 64bit compatible!\n+            //TODO find a way to support 64bit timestamps\n+            boost::posix_time::ptime pt1 = boost::posix_time::from_time_t(rec->bantil);\n+            boost::posix_time::ptime pt2 = boost::date_time::c_local_adjustor<boost::posix_time::ptime>::utc_to_local(pt1);\n+            std::stringstream ss;\n+            ss << pt2;\n+            return QString::fromStdString(ss.str());\n+        }\n+    } else if (role == Qt::TextAlignmentRole) {\n+        if (index.column() == Bantime)\n+            return (int)(Qt::AlignRight | Qt::AlignVCenter);\n+    }\n+\n+    return QVariant();\n+}\n+\n+QVariant BanTableModel::headerData(int section, Qt::Orientation orientation, int role) const\n+{\n+    if(orientation == Qt::Horizontal)\n+    {\n+        if(role == Qt::DisplayRole && section < columns.size())\n+        {\n+            return columns[section];\n+        }\n+    }\n+    return QVariant();\n+}\n+\n+Qt::ItemFlags BanTableModel::flags(const QModelIndex &index) const\n+{\n+    if(!index.isValid())\n+        return 0;\n+\n+    Qt::ItemFlags retval = Qt::ItemIsSelectable | Qt::ItemIsEnabled;\n+    return retval;\n+}\n+\n+QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    CCombinedBan *data = priv->index(row);\n+\n+    if (data)\n+    {\n+        return createIndex(row, column, data);\n+    }\n+    else\n+    {\n+        return QModelIndex();\n+    }\n+}\n+\n+void BanTableModel::refresh()\n+{\n+    emit layoutAboutToBeChanged();\n+    priv->refreshBanlist();\n+    emit layoutChanged();\n+}\n+\n+void BanTableModel::sort(int column, Qt::SortOrder order)\n+{\n+    priv->sortColumn = column;\n+    priv->sortOrder = order;\n+    refresh();\n+}\n+\n+bool BanTableModel::shouldShow()\n+{\n+    if (priv->size() > 0)\n+        return true;\n+    return false;\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "ef7a26e3c6dec685d506054f7be2bc54502ec704",
        "filename": "src/qt/bantablemodel.h",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_BANTABLEMODEL_H\n+#define BITCOIN_QT_BANTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class ClientModel;\n+class BanTablePriv;\n+\n+QT_BEGIN_NAMESPACE\n+class QTimer;\n+QT_END_NAMESPACE\n+\n+struct CCombinedBan {\n+    CSubNet subnet;\n+    int64_t bantil;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class BanTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit BanTableModel(ClientModel *parent = 0);\n+    void startAutoRefresh();\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Bantime = 1,\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    bool shouldShow();\n+    /*@}*/\n+\n+public slots:\n+    void refresh();\n+\n+private:\n+    ClientModel *clientModel;\n+    QStringList columns;\n+    BanTablePriv *priv;\n+    QTimer *timer;\n+};\n+\n+#endif // BITCOIN_QT_BANTABLEMODEL_H"
      },
      {
        "sha": "62c35130f888f217af97ae67b25dd952f83c6fd1",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"clientmodel.h\"\n \n+#include \"bantablemodel.h\"\n #include \"guiconstants.h\"\n #include \"peertablemodel.h\"\n \n@@ -26,13 +27,15 @@ ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent),\n     optionsModel(optionsModel),\n     peerTableModel(0),\n+    banTableModel(0),\n     cachedNumBlocks(0),\n     cachedBlockDate(QDateTime()),\n     cachedReindexing(0),\n     cachedImporting(0),\n     pollTimer(0)\n {\n     peerTableModel = new PeerTableModel(this);\n+    banTableModel = new BanTableModel(this);\n     pollTimer = new QTimer(this);\n     connect(pollTimer, SIGNAL(timeout()), this, SLOT(updateTimer()));\n     pollTimer->start(MODEL_UPDATE_DELAY);\n@@ -176,6 +179,11 @@ PeerTableModel *ClientModel::getPeerTableModel()\n     return peerTableModel;\n }\n \n+BanTableModel *ClientModel::getBanTableModel()\n+{\n+    return banTableModel;\n+}\n+\n QString ClientModel::formatFullVersion() const\n {\n     return QString::fromStdString(FormatFullVersion());\n@@ -206,6 +214,11 @@ QString ClientModel::formatClientStartupTime() const\n     return QDateTime::fromTime_t(nClientStartupTime).toString();\n }\n \n+void ClientModel::updateBanlist()\n+{\n+    banTableModel->refresh();\n+}\n+\n // Handlers for core signals\n static void ShowProgress(ClientModel *clientmodel, const std::string &title, int nProgress)\n {"
      },
      {
        "sha": "627bdf862de6351d2a5abe08cfbea92661f7d9f5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -9,6 +9,7 @@\n #include <QDateTime>\n \n class AddressTableModel;\n+class BanTableModel;\n class OptionsModel;\n class PeerTableModel;\n class TransactionTableModel;\n@@ -44,6 +45,7 @@ class ClientModel : public QObject\n \n     OptionsModel *getOptionsModel();\n     PeerTableModel *getPeerTableModel();\n+    BanTableModel *getBanTableModel();\n \n     //! Return number of connections, default is in- and outbound (total)\n     int getNumConnections(unsigned int flags = CONNECTIONS_ALL) const;\n@@ -72,6 +74,7 @@ class ClientModel : public QObject\n private:\n     OptionsModel *optionsModel;\n     PeerTableModel *peerTableModel;\n+    BanTableModel *banTableModel;\n \n     int cachedNumBlocks;\n     QDateTime cachedBlockDate;\n@@ -99,6 +102,7 @@ public Q_SLOTS:\n     void updateTimer();\n     void updateNumConnections(int numConnections);\n     void updateAlert(const QString &hash, int status);\n+    void updateBanlist();\n };\n \n #endif // BITCOIN_QT_CLIENTMODEL_H"
      },
      {
        "sha": "39230aee6f0db9d27d9d257e1186e9090c55da5c",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 84,
        "deletions": 10,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -713,17 +713,91 @@\n       </attribute>\n       <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n        <item row=\"0\" column=\"0\" rowspan=\"2\">\n-        <widget class=\"QTableView\" name=\"peerWidget\">\n-         <property name=\"horizontalScrollBarPolicy\">\n-          <enum>Qt::ScrollBarAsNeeded</enum>\n-         </property>\n-         <property name=\"sortingEnabled\">\n-          <bool>true</bool>\n+        <layout class=\"QVBoxLayout\" name=\"verticalLayout_101\">\n+         <property name=\"spacing\">\n+          <number>0</number>\n          </property>\n-         <attribute name=\"horizontalHeaderHighlightSections\">\n-          <bool>false</bool>\n-         </attribute>\n-        </widget>\n+         <item>\n+          <widget class=\"QTableView\" name=\"peerWidget\">\n+           <property name=\"horizontalScrollBarPolicy\">\n+            <enum>Qt::ScrollBarAsNeeded</enum>\n+           </property>\n+           <property name=\"sortingEnabled\">\n+            <bool>true</bool>\n+           </property>\n+           <attribute name=\"horizontalHeaderHighlightSections\">\n+            <bool>false</bool>\n+           </attribute>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"banHeading\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Minimum\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+           <property name=\"minimumSize\">\n+            <size>\n+             <width>300</width>\n+             <height>32</height>\n+            </size>\n+           </property>\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>16777215</width>\n+             <height>32</height>\n+            </size>\n+           </property>\n+           <property name=\"font\">\n+            <font>\n+             <pointsize>14</pointsize>\n+            </font>\n+           </property>\n+           <property name=\"cursor\">\n+            <cursorShape>IBeamCursor</cursorShape>\n+           </property>\n+           <property name=\"text\">\n+            <string>Banned peers</string>\n+           </property>\n+           <property name=\"alignment\">\n+            <set>Qt::AlignBottom|Qt::AlignLeading|Qt::AlignLeft</set>\n+           </property>\n+           <property name=\"wordWrap\">\n+            <bool>true</bool>\n+           </property>\n+           <property name=\"textInteractionFlags\">\n+            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QTableView\" name=\"banlistWidget\">\n+           <property name=\"sizePolicy\">\n+            <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+             <horstretch>0</horstretch>\n+             <verstretch>0</verstretch>\n+            </sizepolicy>\n+           </property>\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>16777215</width>\n+             <height>16777215</height>\n+            </size>\n+           </property>\n+           <property name=\"horizontalScrollBarPolicy\">\n+            <enum>Qt::ScrollBarAsNeeded</enum>\n+           </property>\n+           <property name=\"sortingEnabled\">\n+            <bool>true</bool>\n+           </property>\n+           <attribute name=\"horizontalHeaderHighlightSections\">\n+            <bool>false</bool>\n+           </attribute>\n+          </widget>\n+         </item>\n+        </layout>\n        </item>\n        <item row=\"0\" column=\"1\">\n         <widget class=\"QLabel\" name=\"peerHeading\">"
      },
      {
        "sha": "c6e70697fb2109f56d35ce3ba2aef4a9cfe4fa93",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad204df1a9077327ab1142fbc9bf41369c1a73d1/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "patch": "@@ -8,6 +8,7 @@\n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n #include \"platformstyle.h\"\n+#include \"bantablemodel.h\"\n \n #include \"chainparams.h\"\n #include \"rpcserver.h\"\n@@ -351,6 +352,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n \n+        // set up ban table\n+        ui->banlistWidget->setModel(model->getBanTableModel());\n+\n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n         QAction* banAction1h        = new QAction(tr(\"&Ban Node for 1 hour\"), this);\n@@ -395,6 +399,12 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n         ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n+\n+        if (!clientModel->getBanTableModel()->shouldShow())\n+        {\n+            ui->banlistWidget->hide();\n+            ui->banHeading->hide();\n+        }\n     }\n }\n \n@@ -766,6 +776,9 @@ void RPCConsole::banSelectedNode(int bantime)\n         CNode::Ban(CNetAddr(addr), bantime);\n         bannedNode->CloseSocketDisconnect();\n         clearSelectedNode();\n+        ui->banlistWidget->setVisible(true);\n+        ui->banHeading->setVisible(true);\n+        clientModel->updateBanlist();\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "5f421329508d6e86c410282c7de39d7e80b0b289",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjQyMTMyOTUwOGQ2ZTg2YzQxMDI4MmM3ZGUzOWQ3ZTgwYjBiMjg5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T18:27:28Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add ui signal for banlist changes",
      "tree": {
        "sha": "2e54998588ade08a3325a5eba91dd1c28d53735c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e54998588ade08a3325a5eba91dd1c28d53735c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f421329508d6e86c410282c7de39d7e80b0b289",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f421329508d6e86c410282c7de39d7e80b0b289",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f421329508d6e86c410282c7de39d7e80b0b289",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f421329508d6e86c410282c7de39d7e80b0b289/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad204df1a9077327ab1142fbc9bf41369c1a73d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad204df1a9077327ab1142fbc9bf41369c1a73d1"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7f5dea0ef9e874b419d202513f3d48c46a06a13d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f421329508d6e86c410282c7de39d7e80b0b289/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f421329508d6e86c410282c7de39d7e80b0b289/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=5f421329508d6e86c410282c7de39d7e80b0b289",
        "patch": "@@ -243,12 +243,19 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n                               Q_ARG(int, status));\n }\n \n+static void BannedListChanged(ClientModel *clientmodel)\n+{\n+    qDebug() << \"BannedListChanged\";\n+    QMetaObject::invokeMethod(clientmodel, \"updateBanlist\", Qt::QueuedConnection);\n+}\n+\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n+    uiInterface.BannedListChanged.connect(boost::bind(BannedListChanged, this));\n }\n \n void ClientModel::unsubscribeFromCoreSignals()\n@@ -257,4 +264,5 @@ void ClientModel::unsubscribeFromCoreSignals()\n     uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));\n+    uiInterface.BannedListChanged.disconnect(boost::bind(BannedListChanged, this));\n }"
      },
      {
        "sha": "482e2ac47b6dfba2b764e5fe24706cc8c7399880",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f421329508d6e86c410282c7de39d7e80b0b289/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f421329508d6e86c410282c7de39d7e80b0b289/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=5f421329508d6e86c410282c7de39d7e80b0b289",
        "patch": "@@ -12,6 +12,7 @@\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"timedata.h\"\n+#include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"version.h\"\n@@ -531,6 +532,8 @@ UniValue setban(const UniValue& params, bool fHelp)\n     }\n \n     DumpBanlist(); //store banlist to disk\n+    uiInterface.BannedListChanged();\n+\n     return NullUniValue;\n }\n \n@@ -577,6 +580,8 @@ UniValue clearbanned(const UniValue& params, bool fHelp)\n \n     CNode::ClearBanned();\n     DumpBanlist(); //store banlist to disk\n+    \n+    uiInterface.BannedListChanged();\n \n     return NullUniValue;\n }"
      },
      {
        "sha": "e402479933887e285dd38e43c864ba2909628a1a",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f421329508d6e86c410282c7de39d7e80b0b289/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f421329508d6e86c410282c7de39d7e80b0b289/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=5f421329508d6e86c410282c7de39d7e80b0b289",
        "patch": "@@ -95,6 +95,9 @@ class CClientUIInterface\n \n     /** New block has been accepted */\n     boost::signals2::signal<void (const uint256& hash)> NotifyBlockTip;\n+\n+    /** Banlist did change. */\n+    boost::signals2::signal<void (void)> BannedListChanged;\n };\n \n extern CClientUIInterface uiInterface;"
      }
    ]
  },
  {
    "sha": "770ca79aa02964f56610ffaf15b16297634fa065",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzBjYTc5YWEwMjk2NGY1NjYxMGZmYWYxNWIxNjI5NzYzNGZhMDY1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T18:55:21Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add context menu with unban option to ban table",
      "tree": {
        "sha": "27b549b178f6499bf2e0e45b6fa8e7111f039b86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27b549b178f6499bf2e0e45b6fa8e7111f039b86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/770ca79aa02964f56610ffaf15b16297634fa065",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/770ca79aa02964f56610ffaf15b16297634fa065",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/770ca79aa02964f56610ffaf15b16297634fa065",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/770ca79aa02964f56610ffaf15b16297634fa065/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f421329508d6e86c410282c7de39d7e80b0b289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f421329508d6e86c410282c7de39d7e80b0b289",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f421329508d6e86c410282c7de39d7e80b0b289"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 59,
      "deletions": 15
    },
    "files": [
      {
        "sha": "5658cf875266ebfbefeb9e1b1755b017b7e32731",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 13,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=770ca79aa02964f56610ffaf15b16297634fa065",
        "patch": "@@ -241,8 +241,9 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     clientModel(0),\n     historyPtr(0),\n     cachedNodeid(-1),\n-    contextMenu(0),\n     platformStyle(platformStyle)\n+    peersTableContextMenu(0),\n+    banTableContextMenu(0)\n {\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n@@ -351,9 +352,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Address, ADDRESS_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n-\n-        // set up ban table\n-        ui->banlistWidget->setModel(model->getBanTableModel());\n+        ui->peerWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n \n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n@@ -363,15 +362,15 @@ void RPCConsole::setClientModel(ClientModel *model)\n         QAction* banAction365d      = new QAction(tr(\"&Ban Node for 1 year\"), this);\n \n         // create context menu\n-        contextMenu = new QMenu();\n-        contextMenu->addAction(disconnectAction);\n-        contextMenu->addAction(banAction1h);\n-        contextMenu->addAction(banAction24h);\n-        contextMenu->addAction(banAction7d);\n-        contextMenu->addAction(banAction365d);\n+        peersTableContextMenu = new QMenu();\n+        peersTableContextMenu->addAction(disconnectAction);\n+        peersTableContextMenu->addAction(banAction1h);\n+        peersTableContextMenu->addAction(banAction24h);\n+        peersTableContextMenu->addAction(banAction7d);\n+        peersTableContextMenu->addAction(banAction365d);\n \n         // context menu signals\n-        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showMenu(const QPoint&)));\n+        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n         //add a signal mapping, use int instead of int64_t for bantime because signalmapper only supports int or objects\n@@ -392,6 +391,26 @@ void RPCConsole::setClientModel(ClientModel *model)\n              this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n         connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n \n+        // set up ban table\n+        ui->banlistWidget->setModel(model->getBanTableModel());\n+        ui->banlistWidget->verticalHeader()->hide();\n+        ui->banlistWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Address, ADDRESS_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, PING_COLUMN_WIDTH);\n+        ui->banlistWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n+        ui->banlistWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n+        ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n+        ui->banlistWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n+\n+        // create context menu actions\n+        QAction* unbanAction   = new QAction(tr(\"&Unban Node\"), this);\n+        banTableContextMenu = new QMenu();\n+        banTableContextMenu->addAction(unbanAction);\n+\n+        // context menu signals\n+        connect(ui->banlistWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showBanTableContextMenu(const QPoint&)));\n+        connect(unbanAction, SIGNAL(triggered()), this, SLOT(unbanSelectedNode()));\n+\n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientUserAgent->setText(model->formatSubVersion());\n@@ -744,11 +763,18 @@ void RPCConsole::hideEvent(QHideEvent *event)\n     clientModel->getPeerTableModel()->stopAutoRefresh();\n }\n \n-void RPCConsole::showMenu(const QPoint& point)\n+void RPCConsole::showPeersTableContextMenu(const QPoint& point)\n {\n     QModelIndex index = ui->peerWidget->indexAt(point);\n     if (index.isValid())\n-        contextMenu->exec(QCursor::pos());\n+        peersTableContextMenu->exec(QCursor::pos());\n+}\n+\n+void RPCConsole::showBanTableContextMenu(const QPoint& point)\n+{\n+    QModelIndex index = ui->banlistWidget->indexAt(point);\n+    if (index.isValid())\n+        banTableContextMenu->exec(QCursor::pos());\n }\n \n void RPCConsole::disconnectSelectedNode()\n@@ -782,6 +808,19 @@ void RPCConsole::banSelectedNode(int bantime)\n     }\n }\n \n+void RPCConsole::unbanSelectedNode()\n+{\n+    // Get currently selected peer address\n+    QString strNode = GUIUtil::getEntryData(ui->banlistWidget, 0, BanTableModel::Address);\n+    CSubNet possibleSubnet(strNode.toStdString());\n+\n+    if (possibleSubnet.IsValid())\n+    {\n+        CNode::Unban(possibleSubnet);\n+        clientModel->updateBanlist();\n+    }\n+}\n+\n void RPCConsole::clearSelectedNode()\n {\n     ui->peerWidget->selectionModel()->clearSelection();"
      },
      {
        "sha": "db1f3d433dd80b1fdcf8388ec1a65dbe36ae5f2c",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/770ca79aa02964f56610ffaf15b16297634fa065/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=770ca79aa02964f56610ffaf15b16297634fa065",
        "patch": "@@ -61,7 +61,9 @@ private Q_SLOTS:\n     void showEvent(QShowEvent *event);\n     void hideEvent(QHideEvent *event);\n     /** Show custom context menu on Peers tab */\n-    void showMenu(const QPoint& point);\n+    void showPeersTableContextMenu(const QPoint& point);\n+    /** Show custom context menu on Bans tab */\n+    void showBanTableContextMenu(const QPoint& point);\n \n public Q_SLOTS:\n     void clear();\n@@ -82,6 +84,8 @@ public Q_SLOTS:\n     void disconnectSelectedNode();\n     /** Ban a selected node on the Peers tab */\n     void banSelectedNode(int bantime);\n+    /** Unban a selected node on the Bans tab */\n+    void unbanSelectedNode();\n \n Q_SIGNALS:\n     // For RPC command executor\n@@ -109,9 +113,10 @@ public Q_SLOTS:\n     QStringList history;\n     int historyPtr;\n     NodeId cachedNodeid;\n-    QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n     RPCTimerInterface *rpcTimerInterface;\n+    QMenu *peersTableContextMenu;\n+    QMenu *banTableContextMenu;\n };\n \n #endif // BITCOIN_QT_RPCCONSOLE_H"
      }
    ]
  },
  {
    "sha": "6135309816208740888b25bc27ea123c1c825a04",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTM1MzA5ODE2MjA4NzQwODg4YjI1YmMyN2VhMTIzYzFjODI1YTA0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-20T19:48:10Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] banlist, UI optimizing and better signal handling",
      "tree": {
        "sha": "7b11a1e8f698f3b264e3273e77174b9b25e80864",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b11a1e8f698f3b264e3273e77174b9b25e80864"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6135309816208740888b25bc27ea123c1c825a04",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6135309816208740888b25bc27ea123c1c825a04",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6135309816208740888b25bc27ea123c1c825a04",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6135309816208740888b25bc27ea123c1c825a04/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "770ca79aa02964f56610ffaf15b16297634fa065",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/770ca79aa02964f56610ffaf15b16297634fa065",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/770ca79aa02964f56610ffaf15b16297634fa065"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 28,
      "deletions": 22
    },
    "files": [
      {
        "sha": "2af8226c1246deb3f8dcb6b46f59c0452cf7c002",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -217,6 +217,7 @@ QString ClientModel::formatClientStartupTime() const\n void ClientModel::updateBanlist()\n {\n     banTableModel->refresh();\n+    emit banListChanged();\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "6f7b2de3a3fe4cc62d98aeb3de7a0eef64bf812f",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -91,6 +91,7 @@ class ClientModel : public QObject\n     void numBlocksChanged(int count, const QDateTime& blockDate);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n+    void banListChanged();\n \n     //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);"
      },
      {
        "sha": "c920e6130f3ea4fa4553d4343c0f80c8caa9d7ba",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -752,7 +752,7 @@\n            </property>\n            <property name=\"font\">\n             <font>\n-             <pointsize>14</pointsize>\n+             <pointsize>12</pointsize>\n             </font>\n            </property>\n            <property name=\"cursor\">\n@@ -780,12 +780,6 @@\n              <verstretch>0</verstretch>\n             </sizepolicy>\n            </property>\n-           <property name=\"maximumSize\">\n-            <size>\n-             <width>16777215</width>\n-             <height>16777215</height>\n-            </size>\n-           </property>\n            <property name=\"horizontalScrollBarPolicy\">\n             <enum>Qt::ScrollBarAsNeeded</enum>\n            </property>"
      },
      {
        "sha": "3f20f67f24f4a985d185d670c4c1efe2bd123ab7",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 13,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -352,7 +352,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Address, ADDRESS_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n-        ui->peerWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n+        ui->peerWidget->horizontalHeader()->setStretchLastSection(true);\n \n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n@@ -373,8 +373,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n-        //add a signal mapping, use int instead of int64_t for bantime because signalmapper only supports int or objects\n-        //int is sufficient for our case\n+        //add a signal mapping to allow a dynamic argument\n+        //we need to use int (instead of int64_t) because signal mapper only supports int or objects\n+        //this is okay because max bantime (1 Year) is smaler then int_max\n         QSignalMapper* signalMapper = new QSignalMapper(this);\n         signalMapper->setMapping(banAction1h, 60*60);\n         signalMapper->setMapping(banAction24h, 60*60*24);\n@@ -395,14 +396,14 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->banlistWidget->setModel(model->getBanTableModel());\n         ui->banlistWidget->verticalHeader()->hide();\n         ui->banlistWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Address, ADDRESS_COLUMN_WIDTH);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, PING_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Address, BANSUBNET_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, BANTIME_COLUMN_WIDTH);\n         ui->banlistWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n         ui->banlistWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n-        ui->banlistWidget->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);\n+        ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n-        // create context menu actions\n+        // create banlist context menu actions\n         QAction* unbanAction   = new QAction(tr(\"&Unban Node\"), this);\n         banTableContextMenu = new QMenu();\n         banTableContextMenu->addAction(unbanAction);\n@@ -419,11 +420,8 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->startupTime->setText(model->formatClientStartupTime());\n         ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n \n-        if (!clientModel->getBanTableModel()->shouldShow())\n-        {\n-            ui->banlistWidget->hide();\n-            ui->banHeading->hide();\n-        }\n+        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        showOrHideBanTableIfRequired();\n     }\n }\n \n@@ -810,14 +808,15 @@ void RPCConsole::banSelectedNode(int bantime)\n \n void RPCConsole::unbanSelectedNode()\n {\n-    // Get currently selected peer address\n+    // Get currently selected ban address\n     QString strNode = GUIUtil::getEntryData(ui->banlistWidget, 0, BanTableModel::Address);\n     CSubNet possibleSubnet(strNode.toStdString());\n \n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n         clientModel->updateBanlist();\n+        showOrHideBanTableIfRequired();\n     }\n }\n \n@@ -828,3 +827,10 @@ void RPCConsole::clearSelectedNode()\n     ui->detailWidget->hide();\n     ui->peerHeading->setText(tr(\"Select a peer to view detailed information.\"));\n }\n+\n+void RPCConsole::showOrHideBanTableIfRequired()\n+{\n+    bool visible = clientModel->getBanTableModel()->shouldShow();\n+    ui->banlistWidget->setVisible(visible);\n+    ui->banHeading->setVisible(visible);\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "9674cc5275b8fa06aaa7d82743fd222dd139925d",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -64,6 +64,8 @@ private Q_SLOTS:\n     void showPeersTableContextMenu(const QPoint& point);\n     /** Show custom context menu on Bans tab */\n     void showBanTableContextMenu(const QPoint& point);\n+    /** Hides ban table if no bans are present */\n+    void showOrHideBanTableIfRequired();\n \n public Q_SLOTS:\n     void clear();\n@@ -105,7 +107,10 @@ public Q_SLOTS:\n     {\n         ADDRESS_COLUMN_WIDTH = 200,\n         SUBVERSION_COLUMN_WIDTH = 100,\n-        PING_COLUMN_WIDTH = 80\n+        PING_COLUMN_WIDTH = 80,\n+        BANSUBNET_COLUMN_WIDTH = 300,\n+        BANTIME_COLUMN_WIDTH = 150\n+\n     };\n \n     Ui::RPCConsole *ui;"
      },
      {
        "sha": "5d490c70caef5e6fd52ea422b5d891018c164261",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6135309816208740888b25bc27ea123c1c825a04/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6135309816208740888b25bc27ea123c1c825a04/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=6135309816208740888b25bc27ea123c1c825a04",
        "patch": "@@ -580,7 +580,6 @@ UniValue clearbanned(const UniValue& params, bool fHelp)\n \n     CNode::ClearBanned();\n     DumpBanlist(); //store banlist to disk\n-    \n     uiInterface.BannedListChanged();\n \n     return NullUniValue;"
      }
    ]
  },
  {
    "sha": "f0bcbc4c8a9918e5d240ba2736286cede76155f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMGJjYmM0YzhhOTkxOGU1ZDI0MGJhMjczNjI4NmNlZGU3NjE1NWY1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-21T08:25:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] bantable fix timestamp 64bit issue",
      "tree": {
        "sha": "0db327d1b79c4f8264989f6e856e4af04eefa6a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0db327d1b79c4f8264989f6e856e4af04eefa6a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6135309816208740888b25bc27ea123c1c825a04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6135309816208740888b25bc27ea123c1c825a04",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6135309816208740888b25bc27ea123c1c825a04"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 3,
      "deletions": 7
    },
    "files": [
      {
        "sha": "615574cca71c59e7f4b03b1ad6d202a002a2b7d1",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0bcbc4c8a9918e5d240ba2736286cede76155f5/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0bcbc4c8a9918e5d240ba2736286cede76155f5/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=f0bcbc4c8a9918e5d240ba2736286cede76155f5",
        "patch": "@@ -118,13 +118,9 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n         case Address:\n             return QString::fromStdString(rec->subnet.ToString());\n         case Bantime:\n-            //show time in users local timezone, not 64bit compatible!\n-            //TODO find a way to support 64bit timestamps\n-            boost::posix_time::ptime pt1 = boost::posix_time::from_time_t(rec->bantil);\n-            boost::posix_time::ptime pt2 = boost::date_time::c_local_adjustor<boost::posix_time::ptime>::utc_to_local(pt1);\n-            std::stringstream ss;\n-            ss << pt2;\n-            return QString::fromStdString(ss.str());\n+            QDateTime date = QDateTime::fromMSecsSinceEpoch(0);\n+            date = date.addSecs(rec->bantil);\n+            return date.toString(Qt::SystemLocaleShortDate);\n         }\n     } else if (role == Qt::TextAlignmentRole) {\n         if (index.column() == Bantime)"
      }
    ]
  },
  {
    "sha": "53caec66cc43e1f16ba26e16147b77f5cfba22bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2NhZWM2NmNjNDNlMWYxNmJhMjZlMTYxNDdiNzdmNWNmYmEyMmJi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-21T08:44:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] bantable overhaul\n\n- some code cleanups\n- fix date formatting\n- reduce header includes",
      "tree": {
        "sha": "13ec0315c209b5aa494c535e868ff76d2a729214",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13ec0315c209b5aa494c535e868ff76d2a729214"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f0bcbc4c8a9918e5d240ba2736286cede76155f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0bcbc4c8a9918e5d240ba2736286cede76155f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0bcbc4c8a9918e5d240ba2736286cede76155f5"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 17,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b4b100bf5cccda5042d1978389ece510584f88e0",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -8,7 +8,6 @@\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n \n-#include \"net.h\"\n #include \"sync.h\"\n #include \"utiltime.h\"\n \n@@ -41,15 +40,16 @@ class BanTablePriv\n         cachedBanlist.reserve(banMap.size());\n #endif\n         std::map<CSubNet, int64_t>::iterator iter;\n-        for (iter = banMap.begin(); iter != banMap.end(); ++iter) {\n+        foreach (const PAIRTYPE(CSubNet, int64_t)& banentry, banMap)\n+        {\n             CCombinedBan banEntry;\n-            banEntry.subnet = iter->first;\n-            banEntry.bantil = iter->second;\n+            banEntry.subnet = banentry.first;\n+            banEntry.bantil = banentry.second;\n             cachedBanlist.append(banEntry);\n         }\n     }\n \n-    int size()\n+    int size() const\n     {\n         return cachedBanlist.size();\n     }\n@@ -120,7 +120,7 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n         case Bantime:\n             QDateTime date = QDateTime::fromMSecsSinceEpoch(0);\n             date = date.addSecs(rec->bantil);\n-            return date.toString(Qt::SystemLocaleShortDate);\n+            return date.toString(Qt::SystemLocaleLongDate);\n         }\n     } else if (role == Qt::TextAlignmentRole) {\n         if (index.column() == Bantime)"
      },
      {
        "sha": "8d3da4c737473c8282f47c290fcafb63b76ab584",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -5,7 +5,6 @@\n #ifndef BITCOIN_QT_BANTABLEMODEL_H\n #define BITCOIN_QT_BANTABLEMODEL_H\n \n-#include \"main.h\"\n #include \"net.h\"\n \n #include <QAbstractTableModel>"
      },
      {
        "sha": "9271df953588a2c36a397e9874ea31833cc9097f",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -356,10 +356,10 @@ void RPCConsole::setClientModel(ClientModel *model)\n \n         // create context menu actions\n         QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h        = new QAction(tr(\"&Ban Node for 1 hour\"), this);\n-        QAction* banAction24h       = new QAction(tr(\"&Ban Node for 24 hours\"), this);\n-        QAction* banAction7d        = new QAction(tr(\"&Ban Node for 7 days\"), this);\n-        QAction* banAction365d      = new QAction(tr(\"&Ban Node for 1 year\"), this);\n+        QAction* banAction1h        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n+        QAction* banAction24h       = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n+        QAction* banAction7d        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n+        QAction* banAction365d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n \n         // create context menu\n         peersTableContextMenu = new QMenu();\n@@ -798,7 +798,8 @@ void RPCConsole::banSelectedNode(int bantime)\n         SplitHostPort(nStr, port, addr);\n \n         CNode::Ban(CNetAddr(addr), bantime);\n-        bannedNode->CloseSocketDisconnect();\n+        bannedNode->fDisconnect = true;\n+\n         clearSelectedNode();\n         ui->banlistWidget->setVisible(true);\n         ui->banHeading->setVisible(true);\n@@ -830,6 +831,9 @@ void RPCConsole::clearSelectedNode()\n \n void RPCConsole::showOrHideBanTableIfRequired()\n {\n+    if (!clientModel)\n+        return;\n+    \n     bool visible = clientModel->getBanTableModel()->shouldShow();\n     ui->banlistWidget->setVisible(visible);\n     ui->banHeading->setVisible(visible);"
      },
      {
        "sha": "3f4d1834f6e8dbf1f1623ce9bfc6ab0236dd9d1b",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53caec66cc43e1f16ba26e16147b77f5cfba22bb/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "patch": "@@ -108,8 +108,8 @@ public Q_SLOTS:\n         ADDRESS_COLUMN_WIDTH = 200,\n         SUBVERSION_COLUMN_WIDTH = 100,\n         PING_COLUMN_WIDTH = 80,\n-        BANSUBNET_COLUMN_WIDTH = 300,\n-        BANTIME_COLUMN_WIDTH = 150\n+        BANSUBNET_COLUMN_WIDTH = 250,\n+        BANTIME_COLUMN_WIDTH = 200\n \n     };\n "
      }
    ]
  },
  {
    "sha": "607809f037950f114f64f1ee09c1486a3c66638b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDc4MDlmMDM3OTUwZjExNGY2NGYxZWUwOWMxNDg2YTNjNjY2Mzhi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-23T15:20:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "net: use CIDR notation in CSubNet::ToString()",
      "tree": {
        "sha": "23975e3b7a45b0dbe10d68626d96a845175ebab7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23975e3b7a45b0dbe10d68626d96a845175ebab7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/607809f037950f114f64f1ee09c1486a3c66638b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/607809f037950f114f64f1ee09c1486a3c66638b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/607809f037950f114f64f1ee09c1486a3c66638b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/607809f037950f114f64f1ee09c1486a3c66638b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53caec66cc43e1f16ba26e16147b77f5cfba22bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53caec66cc43e1f16ba26e16147b77f5cfba22bb"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 92,
      "deletions": 16
    },
    "files": [
      {
        "sha": "4163b1808601b38a4356aebb7a4df0645d1a340a",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/607809f037950f114f64f1ee09c1486a3c66638b/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/607809f037950f114f64f1ee09c1486a3c66638b/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=607809f037950f114f64f1ee09c1486a3c66638b",
        "patch": "@@ -1314,15 +1314,17 @@ bool CSubNet::Match(const CNetAddr &addr) const\n std::string CSubNet::ToString() const\n {\n     std::string strNetmask;\n-    if (network.IsIPv4())\n-        strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-    else\n-        strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                         netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                         netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                         netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                         netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n-    return network.ToString() + \"/\" + strNetmask;\n+    int cidr = 0;\n+    for (int n = network.IsIPv4() ? 12 : 0 ; n < 16; ++n)\n+    {\n+        uint8_t netmaskpart = netmask[n];\n+        while (netmaskpart)\n+        {\n+            cidr += ( netmaskpart & 0x01 );\n+            netmaskpart >>= 1;\n+        }\n+    }\n+    return network.ToString() + strprintf(\"/%u\", cidr);\n }\n \n bool CSubNet::IsValid() const"
      },
      {
        "sha": "f0333d86874c66eeead8d2127f9be67ee439a9c7",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/607809f037950f114f64f1ee09c1486a3c66638b/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/607809f037950f114f64f1ee09c1486a3c66638b/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=607809f037950f114f64f1ee09c1486a3c66638b",
        "patch": "@@ -155,6 +155,80 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:8\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:9\")));\n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+\n+    CSubNet subnet = CSubNet(\"1.2.3.4/255.255.255.255\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/32\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.254\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/31\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.252\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/30\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.248\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/29\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.240\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/28\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.224\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/27\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.192\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/26\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.128\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/25\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.0/24\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.254.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.2.0/23\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.252.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/22\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.248.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/21\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.240.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/20\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.224.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/19\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.192.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/18\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.128.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/17\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/16\");\n+    subnet = CSubNet(\"1.2.3.4/255.254.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/15\");\n+    subnet = CSubNet(\"1.2.3.4/255.252.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/14\");\n+    subnet = CSubNet(\"1.2.3.4/255.248.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/13\");\n+    subnet = CSubNet(\"1.2.3.4/255.240.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/12\");\n+    subnet = CSubNet(\"1.2.3.4/255.224.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/11\");\n+    subnet = CSubNet(\"1.2.3.4/255.192.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/10\");\n+    subnet = CSubNet(\"1.2.3.4/255.128.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/9\");\n+    subnet = CSubNet(\"1.2.3.4/255.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.0.0.0/8\");\n+    subnet = CSubNet(\"1.2.3.4/254.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/7\");\n+    subnet = CSubNet(\"1.2.3.4/252.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/6\");\n+    subnet = CSubNet(\"1.2.3.4/248.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/5\");\n+    subnet = CSubNet(\"1.2.3.4/240.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/4\");\n+    subnet = CSubNet(\"1.2.3.4/224.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/3\");\n+    subnet = CSubNet(\"1.2.3.4/192.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/2\");\n+    subnet = CSubNet(\"1.2.3.4/128.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/1\");\n+    subnet = CSubNet(\"1.2.3.4/0.0.0.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"0.0.0.0/0\");\n+\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/128\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:0000:0000:0000:0000:0000:0000:0000\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1::/16\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/0000:0000:0000:0000:0000:0000:0000:0000\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"::/0\");\n }\n \n BOOST_AUTO_TEST_CASE(netbase_getgroup)"
      },
      {
        "sha": "1bd59497ff3460bc02d189c27a421a4fb4cb1823",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/607809f037950f114f64f1ee09c1486a3c66638b/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/607809f037950f114f64f1ee09c1486a3c66638b/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=607809f037950f114f64f1ee09c1486a3c66638b",
        "patch": "@@ -235,7 +235,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     UniValue ar = r.get_array();\n     UniValue o1 = ar[0].get_obj();\n     UniValue adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.255\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/32\");\n     BOOST_CHECK_NO_THROW(CallRPC(string(\"setban 127.0.0.0 remove\")));;\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n@@ -247,7 +247,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     UniValue banned_until = find_value(o1, \"banned_until\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n     BOOST_CHECK_EQUAL(banned_until.get_int64(), 1607731200); // absolute time check\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n@@ -258,7 +258,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     banned_until = find_value(o1, \"banned_until\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/255.255.255.0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n     int64_t now = GetTime();    \n     BOOST_CHECK(banned_until.get_int64() > now);\n     BOOST_CHECK(banned_until.get_int64()-now <= 200);\n@@ -288,23 +288,23 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"fe80::202:b3ff:fe1e:8329/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"fe80::202:b3ff:fe1e:8329/128\");\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n-    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:db8::/30 add\")));\n+    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:db8::/ffff:fffc:0:0:0:0:0:0 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:db8::/ffff:fffc:0:0:0:0:0:0\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:db8::/30\");\n \n     BOOST_CHECK_NO_THROW(CallRPC(string(\"clearbanned\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"setban 2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128 add\")));\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n-    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "9e521c173586257f57764b479beb5923c33ed0eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTUyMWMxNzM1ODYyNTdmNTc3NjRiNDc5YmViNTkyM2MzM2VkMGVi",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-23T19:10:42Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] polish ban table",
      "tree": {
        "sha": "8a83ab4b363cfadfa8738b99ead769e3e0797945",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a83ab4b363cfadfa8738b99ead769e3e0797945"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e521c173586257f57764b479beb5923c33ed0eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e521c173586257f57764b479beb5923c33ed0eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e521c173586257f57764b479beb5923c33ed0eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e521c173586257f57764b479beb5923c33ed0eb/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "607809f037950f114f64f1ee09c1486a3c66638b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/607809f037950f114f64f1ee09c1486a3c66638b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/607809f037950f114f64f1ee09c1486a3c66638b"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 17,
      "deletions": 21
    },
    "files": [
      {
        "sha": "1ef120ccf03b478a3f5bb7679beb8a672042abdd",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 11,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=9e521c173586257f57764b479beb5923c33ed0eb",
        "patch": "@@ -56,11 +56,10 @@ class BanTablePriv\n \n     CCombinedBan *index(int idx)\n     {\n-        if(idx >= 0 && idx < cachedBanlist.size()) {\n+        if (idx >= 0 && idx < cachedBanlist.size())\n             return &cachedBanlist[idx];\n-        } else {\n-            return 0;\n-        }\n+\n+        return 0;\n     }\n };\n \n@@ -124,7 +123,7 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n         }\n     } else if (role == Qt::TextAlignmentRole) {\n         if (index.column() == Bantime)\n-            return (int)(Qt::AlignRight | Qt::AlignVCenter);\n+            return (QVariant)(Qt::AlignRight | Qt::AlignVCenter);\n     }\n \n     return QVariant();\n@@ -157,13 +156,8 @@ QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent)\n     CCombinedBan *data = priv->index(row);\n \n     if (data)\n-    {\n         return createIndex(row, column, data);\n-    }\n-    else\n-    {\n-        return QModelIndex();\n-    }\n+    return QModelIndex();\n }\n \n void BanTableModel::refresh()"
      },
      {
        "sha": "851e9f1867f9532038008bf5e7ed9aab53a0bbf8",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=9e521c173586257f57764b479beb5923c33ed0eb",
        "patch": "@@ -246,7 +246,7 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n \n static void BannedListChanged(ClientModel *clientmodel)\n {\n-    qDebug() << \"BannedListChanged\";\n+    qDebug() << QString(\"%1: Requesting update for peer banlist\").arg(__func__);\n     QMetaObject::invokeMethod(clientmodel, \"updateBanlist\", Qt::QueuedConnection);\n }\n "
      },
      {
        "sha": "380586f6106097ac222b26ce34afec87a4913c5e",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e521c173586257f57764b479beb5923c33ed0eb/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=9e521c173586257f57764b479beb5923c33ed0eb",
        "patch": "@@ -5,6 +5,7 @@\n #include \"rpcconsole.h\"\n #include \"ui_rpcconsole.h\"\n \n+#include \"bantablemodel.h\"\n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n #include \"platformstyle.h\"\n@@ -373,9 +374,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n         connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n \n-        //add a signal mapping to allow a dynamic argument\n-        //we need to use int (instead of int64_t) because signal mapper only supports int or objects\n-        //this is okay because max bantime (1 Year) is smaler then int_max\n+        // Add a signal mapping to allow dynamic context menu arguments.\n+        // We need to use int (instead of int64_t), because signal mapper only supports\n+        // int or objects, which is okay because max bantime (1 year) is < int_max.\n         QSignalMapper* signalMapper = new QSignalMapper(this);\n         signalMapper->setMapping(banAction1h, 60*60);\n         signalMapper->setMapping(banAction24h, 60*60*24);\n@@ -385,7 +386,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(banAction24h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n         connect(banAction7d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n         connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n-        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int))) ;\n+        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int)));\n \n         // connect the peerWidget selection model to our peerSelected() handler\n         connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n@@ -403,8 +404,12 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n         ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n+        // ensure ban table is shown or hidden (if empty)\n+        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        showOrHideBanTableIfRequired();\n+\n         // create banlist context menu actions\n-        QAction* unbanAction   = new QAction(tr(\"&Unban Node\"), this);\n+        QAction* unbanAction = new QAction(tr(\"&Unban Node\"), this);\n         banTableContextMenu = new QMenu();\n         banTableContextMenu->addAction(unbanAction);\n \n@@ -419,9 +424,6 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n         ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n-\n-        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n-        showOrHideBanTableIfRequired();\n     }\n }\n \n@@ -833,7 +835,7 @@ void RPCConsole::showOrHideBanTableIfRequired()\n {\n     if (!clientModel)\n         return;\n-    \n+\n     bool visible = clientModel->getBanTableModel()->shouldShow();\n     ui->banlistWidget->setVisible(visible);\n     ui->banHeading->setVisible(visible);"
      }
    ]
  },
  {
    "sha": "e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMmI4MDI4ZTRjNjA3MDhhOGQ0OWIxN2Q5ZDQ5ZGRhMTBhYWVjYzUx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-25T08:47:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "net: Fix CIDR notation in ToString()\n\nOnly use CIDR notation if the netmask can be represented as such.",
      "tree": {
        "sha": "2b8bcb0c6f61d3fef5f957306be35672dfbb3946",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b8bcb0c6f61d3fef5f957306be35672dfbb3946"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e521c173586257f57764b479beb5923c33ed0eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e521c173586257f57764b479beb5923c33ed0eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e521c173586257f57764b479beb5923c33ed0eb"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 54,
      "deletions": 10
    },
    "files": [
      {
        "sha": "c3d56d9184497249a1aef191979aa63262c6e113",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 10,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "patch": "@@ -1311,20 +1311,58 @@ bool CSubNet::Match(const CNetAddr &addr) const\n     return true;\n }\n \n+static inline int NetmaskBits(uint8_t x)\n+{\n+    switch(x) {\n+    case 0x00: return 0; break;\n+    case 0x80: return 1; break;\n+    case 0xc0: return 2; break;\n+    case 0xe0: return 3; break;\n+    case 0xf0: return 4; break;\n+    case 0xf8: return 5; break;\n+    case 0xfc: return 6; break;\n+    case 0xfe: return 7; break;\n+    case 0xff: return 8; break;\n+    default: return -1; break;\n+    }\n+}\n+\n std::string CSubNet::ToString() const\n {\n-    std::string strNetmask;\n+    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n     int cidr = 0;\n-    for (int n = network.IsIPv4() ? 12 : 0 ; n < 16; ++n)\n-    {\n-        uint8_t netmaskpart = netmask[n];\n-        while (netmaskpart)\n-        {\n-            cidr += ( netmaskpart & 0x01 );\n-            netmaskpart >>= 1;\n-        }\n+    bool valid_cidr = true;\n+    int n = network.IsIPv4() ? 12 : 0;\n+    for (; n < 16 && netmask[n] == 0xff; ++n)\n+        cidr += 8;\n+    if (n < 16) {\n+        int bits = NetmaskBits(netmask[n]);\n+        if (bits < 0)\n+            valid_cidr = false;\n+        else\n+            cidr += bits;\n+        ++n;\n     }\n-    return network.ToString() + strprintf(\"/%u\", cidr);\n+    for (; n < 16 && valid_cidr; ++n)\n+        if (netmask[n] != 0x00)\n+            valid_cidr = false;\n+\n+    /* Format output */\n+    std::string strNetmask;\n+    if (valid_cidr) {\n+        strNetmask = strprintf(\"%u\", cidr);\n+    } else {\n+        if (network.IsIPv4())\n+            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n+        else\n+            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n+                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n+                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n+                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    }\n+\n+    return network.ToString() + \"/\" + strNetmask;\n }\n \n bool CSubNet::IsValid() const"
      },
      {
        "sha": "8e853cc288941357334fb873c96a33be9e407199",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2b8028e4c60708a8d49b17d9d49dda10aaecc51/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "patch": "@@ -229,6 +229,12 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1::/16\");\n     subnet = CSubNet(\"1:2:3:4:5:6:7:8/0000:0000:0000:0000:0000:0000:0000:0000\");\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"::/0\");\n+    subnet = CSubNet(\"1.2.3.4/255.255.232.0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/255.255.232.0\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n+    subnet = CSubNet(\"1:2:3:4:5:6:7:8/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:0/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n }\n \n BOOST_AUTO_TEST_CASE(netbase_getgroup)"
      }
    ]
  },
  {
    "sha": "43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2MxZjViOGQ3YWNjYzE1OGRmZDZiMjcwY2I5YmZkMGNkOTAwYTNl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-26T08:21:13Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] remove unused timer-code from banlistmodel.cpp",
      "tree": {
        "sha": "a601bd237b28b22c52a964fc4ce2cf9153585ab0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a601bd237b28b22c52a964fc4ce2cf9153585ab0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b8028e4c60708a8d49b17d9d49dda10aaecc51",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2b8028e4c60708a8d49b17d9d49dda10aaecc51"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 1,
      "deletions": 23
    },
    "files": [
      {
        "sha": "ee40cdbf57dfecfaeb97ae8bf0dd625babb749dc",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "patch": "@@ -13,7 +13,6 @@\n \n #include <QDebug>\n #include <QList>\n-#include <QTimer>\n \n #include <boost/date_time/posix_time/posix_time.hpp>\n #include <boost/date_time/c_local_time_adjustor.hpp>\n@@ -65,33 +64,17 @@ class BanTablePriv\n \n BanTableModel::BanTableModel(ClientModel *parent) :\n     QAbstractTableModel(parent),\n-    clientModel(parent),\n-    timer(0)\n+    clientModel(parent)\n {\n     columns << tr(\"IP/Netmask\") << tr(\"Banned Until\");\n     priv = new BanTablePriv();\n     // default to unsorted\n     priv->sortColumn = -1;\n \n-    // set up timer for auto refresh\n-    timer = new QTimer();\n-    connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n-    timer->setInterval(MODEL_UPDATE_DELAY);\n-\n     // load initial data\n     refresh();\n }\n \n-void BanTableModel::startAutoRefresh()\n-{\n-    timer->start();\n-}\n-\n-void BanTableModel::stopAutoRefresh()\n-{\n-    timer->stop();\n-}\n-\n int BanTableModel::rowCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);"
      },
      {
        "sha": "c0f0813f286a9466554ee25bf8f0dba06a57dfe5",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "patch": "@@ -13,10 +13,6 @@\n class ClientModel;\n class BanTablePriv;\n \n-QT_BEGIN_NAMESPACE\n-class QTimer;\n-QT_END_NAMESPACE\n-\n struct CCombinedBan {\n     CSubNet subnet;\n     int64_t bantil;\n@@ -59,7 +55,6 @@ public slots:\n     ClientModel *clientModel;\n     QStringList columns;\n     BanTablePriv *priv;\n-    QTimer *timer;\n };\n \n #endif // BITCOIN_QT_BANTABLEMODEL_H"
      }
    ]
  },
  {
    "sha": "cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGQ3MmNkNWZiYzJiMjg3NTU5ZjcyMzBkMTYxNjMzOWU5ZmYyZDZk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-26T08:23:51Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] simplify ban list signal handling\n\n- remove banListChanged signal from client model\n- directly call clientModel->getBanTableModel()->refresh() without the way\n  over clientModel->updateBanlist()\n\n- also fix clearing peer detail window, when selecting (clicking)\n  peers in the ban list",
      "tree": {
        "sha": "fec12703dc0654e2d1b43768cdde14ac112c689a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fec12703dc0654e2d1b43768cdde14ac112c689a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43c1f5b8d7accc158dfd6b270cb9bfd0cd900a3e"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 21,
      "deletions": 17
    },
    "files": [
      {
        "sha": "0900a35cc4f38476baf46d522ada11f6edbbf4dc",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -217,7 +217,6 @@ QString ClientModel::formatClientStartupTime() const\n void ClientModel::updateBanlist()\n {\n     banTableModel->refresh();\n-    emit banListChanged();\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "627bdf862de6351d2a5abe08cfbea92661f7d9f5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -91,7 +91,6 @@ class ClientModel : public QObject\n     void numBlocksChanged(int count, const QDateTime& blockDate);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n-    void banListChanged();\n \n     //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);"
      },
      {
        "sha": "1b82aada41ac648689172cc20889fb70ae616820",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 13,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -331,8 +331,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n {\n     clientModel = model;\n     ui->trafficGraph->setClientModel(model);\n-    if(model)\n-    {\n+    if (model && clientModel->getPeerTableModel() && clientModel->getBanTableModel()) {\n         // Keep up to date with client\n         setNumConnections(model->getNumConnections());\n         connect(model, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n@@ -404,19 +403,23 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n         ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n-        // ensure ban table is shown or hidden (if empty)\n-        connect(model, SIGNAL(banListChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n-        showOrHideBanTableIfRequired();\n-\n-        // create banlist context menu actions\n+        // create ban table context menu action\n         QAction* unbanAction = new QAction(tr(\"&Unban Node\"), this);\n+\n+        // create ban table context menu\n         banTableContextMenu = new QMenu();\n         banTableContextMenu->addAction(unbanAction);\n \n-        // context menu signals\n+        // ban table context menu signals\n         connect(ui->banlistWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showBanTableContextMenu(const QPoint&)));\n         connect(unbanAction, SIGNAL(triggered()), this, SLOT(unbanSelectedNode()));\n \n+        // ban table signal handling - clear peer details when clicking a peer in the ban table\n+        connect(ui->banlistWidget, SIGNAL(clicked(const QModelIndex&)), this, SLOT(clearSelectedNode()));\n+        // ban table signal handling - ensure ban table is shown or hidden (if empty)\n+        connect(model->getBanTableModel(), SIGNAL(layoutChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        showOrHideBanTableIfRequired();\n+\n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientUserAgent->setText(model->formatSubVersion());\n@@ -790,6 +793,9 @@ void RPCConsole::disconnectSelectedNode()\n \n void RPCConsole::banSelectedNode(int bantime)\n {\n+    if (!clientModel)\n+        return;\n+\n     // Get currently selected peer address\n     QString strNode = GUIUtil::getEntryData(ui->peerWidget, 0, PeerTableModel::Address);\n     // Find possible nodes, ban it and clear the selected node\n@@ -803,23 +809,23 @@ void RPCConsole::banSelectedNode(int bantime)\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();\n-        ui->banlistWidget->setVisible(true);\n-        ui->banHeading->setVisible(true);\n-        clientModel->updateBanlist();\n+        clientModel->getBanTableModel()->refresh();\n     }\n }\n \n void RPCConsole::unbanSelectedNode()\n {\n+    if (!clientModel)\n+        return;\n+\n     // Get currently selected ban address\n     QString strNode = GUIUtil::getEntryData(ui->banlistWidget, 0, BanTableModel::Address);\n     CSubNet possibleSubnet(strNode.toStdString());\n \n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n-        clientModel->updateBanlist();\n-        showOrHideBanTableIfRequired();\n+        clientModel->getBanTableModel()->refresh();\n     }\n }\n "
      },
      {
        "sha": "d5a769ae72929fb4573d6f44789b964cbfd80ec9",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "patch": "@@ -66,6 +66,8 @@ private Q_SLOTS:\n     void showBanTableContextMenu(const QPoint& point);\n     /** Hides ban table if no bans are present */\n     void showOrHideBanTableIfRequired();\n+    /** clear the selected node */\n+    void clearSelectedNode();\n \n public Q_SLOTS:\n     void clear();\n@@ -100,8 +102,6 @@ public Q_SLOTS:\n     void setTrafficGraphRange(int mins);\n     /** show detailed information on ui about selected node */\n     void updateNodeDetail(const CNodeCombinedStats *stats);\n-    /** clear the selected node */\n-    void clearSelectedNode();\n \n     enum ColumnWidths\n     {"
      }
    ]
  },
  {
    "sha": "51654deff2661732c5e2a2aa8ac1f632f5880f45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTY1NGRlZmYyNjYxNzMyYzVlMmEyYWE4YWMxZjYzMmY1ODgwZjQ1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-26T12:55:52Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] bantable polish\n\n- add missing NULL pointer checks\n- add better comments and reorder some code in rpcconsole.cpp\n- remove unneeded leftovers in bantable.cpp\n- update bantable column sizes to prevent cutting of banned until",
      "tree": {
        "sha": "d0cf07ef08416030d1ae12c88f48c49565a06a6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0cf07ef08416030d1ae12c88f48c49565a06a6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51654deff2661732c5e2a2aa8ac1f632f5880f45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdd72cd5fbc2b287559f7230d1616339e9ff2d6d"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 23,
      "deletions": 28
    },
    "files": [
      {
        "sha": "6074cd2f07c8b0a7c6c96859e2e2db87f8416d4f",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "patch": "@@ -14,8 +14,6 @@\n #include <QDebug>\n #include <QList>\n \n-#include <boost/date_time/posix_time/posix_time.hpp>\n-#include <boost/date_time/c_local_time_adjustor.hpp>\n \n // private implementation\n class BanTablePriv\n@@ -38,7 +36,6 @@ class BanTablePriv\n #if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n #endif\n-        std::map<CSubNet, int64_t>::iterator iter;\n         foreach (const PAIRTYPE(CSubNet, int64_t)& banentry, banMap)\n         {\n             CCombinedBan banEntry;\n@@ -104,9 +101,6 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n             date = date.addSecs(rec->bantil);\n             return date.toString(Qt::SystemLocaleLongDate);\n         }\n-    } else if (role == Qt::TextAlignmentRole) {\n-        if (index.column() == Bantime)\n-            return (QVariant)(Qt::AlignRight | Qt::AlignVCenter);\n     }\n \n     return QVariant();"
      },
      {
        "sha": "c417ec3f3223466399a7d048352c90b4be59b289",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 20,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "patch": "@@ -354,25 +354,21 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n         ui->peerWidget->horizontalHeader()->setStretchLastSection(true);\n \n-        // create context menu actions\n-        QAction* disconnectAction   = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n-        QAction* banAction24h       = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n-        QAction* banAction7d        = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n-        QAction* banAction365d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n-\n-        // create context menu\n+        // create peer table context menu actions\n+        QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n+        QAction* banAction1h      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n+        QAction* banAction24h     = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n+        QAction* banAction7d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n+        QAction* banAction365d    = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n+\n+        // create peer table context menu\n         peersTableContextMenu = new QMenu();\n         peersTableContextMenu->addAction(disconnectAction);\n         peersTableContextMenu->addAction(banAction1h);\n         peersTableContextMenu->addAction(banAction24h);\n         peersTableContextMenu->addAction(banAction7d);\n         peersTableContextMenu->addAction(banAction365d);\n \n-        // context menu signals\n-        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n-        connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n-\n         // Add a signal mapping to allow dynamic context menu arguments.\n         // We need to use int (instead of int64_t), because signal mapper only supports\n         // int or objects, which is okay because max bantime (1 year) is < int_max.\n@@ -387,20 +383,25 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n         connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int)));\n \n-        // connect the peerWidget selection model to our peerSelected() handler\n+        // peer table context menu signals\n+        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n+        connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n+\n+        // peer table signal handling - update peer details when selecting new node\n         connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n-             this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+            this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+        // peer table signal handling - update peer details when new nodes are added to the model\n         connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n \n         // set up ban table\n         ui->banlistWidget->setModel(model->getBanTableModel());\n         ui->banlistWidget->verticalHeader()->hide();\n         ui->banlistWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Address, BANSUBNET_COLUMN_WIDTH);\n-        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, BANTIME_COLUMN_WIDTH);\n         ui->banlistWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n         ui->banlistWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n         ui->banlistWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Address, BANSUBNET_COLUMN_WIDTH);\n+        ui->banlistWidget->setColumnWidth(BanTableModel::Bantime, BANTIME_COLUMN_WIDTH);\n         ui->banlistWidget->horizontalHeader()->setStretchLastSection(true);\n \n         // create ban table context menu action\n@@ -629,7 +630,7 @@ void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelecti\n {\n     Q_UNUSED(deselected);\n \n-    if (!clientModel || selected.indexes().isEmpty())\n+    if (!clientModel || !clientModel->getPeerTableModel() || selected.indexes().isEmpty())\n         return;\n \n     const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n@@ -639,7 +640,7 @@ void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelecti\n \n void RPCConsole::peerLayoutChanged()\n {\n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     const CNodeCombinedStats *stats = NULL;\n@@ -748,7 +749,7 @@ void RPCConsole::showEvent(QShowEvent *event)\n {\n     QWidget::showEvent(event);\n \n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     // start PeerTableModel auto refresh\n@@ -759,7 +760,7 @@ void RPCConsole::hideEvent(QHideEvent *event)\n {\n     QWidget::hideEvent(event);\n \n-    if (!clientModel)\n+    if (!clientModel || !clientModel->getPeerTableModel())\n         return;\n \n     // stop PeerTableModel auto refresh"
      },
      {
        "sha": "b86f7767869f3c74c44b52223716bd90464fca48",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51654deff2661732c5e2a2aa8ac1f632f5880f45/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "patch": "@@ -108,8 +108,8 @@ public Q_SLOTS:\n         ADDRESS_COLUMN_WIDTH = 200,\n         SUBVERSION_COLUMN_WIDTH = 100,\n         PING_COLUMN_WIDTH = 80,\n-        BANSUBNET_COLUMN_WIDTH = 250,\n-        BANTIME_COLUMN_WIDTH = 200\n+        BANSUBNET_COLUMN_WIDTH = 200,\n+        BANTIME_COLUMN_WIDTH = 250\n \n     };\n "
      }
    ]
  },
  {
    "sha": "65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NWFiZTkxY2U0YzNjOWIyNmFmYTVkMWFmMzhiZDFiZmU4MTU0NmM0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-26T12:58:15Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:19Z"
      },
      "message": "[Qt] add sorting for bantable",
      "tree": {
        "sha": "24de51e29dabd14f819f6476d4b29655b62d3397",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24de51e29dabd14f819f6476d4b29655b62d3397"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51654deff2661732c5e2a2aa8ac1f632f5880f45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51654deff2661732c5e2a2aa8ac1f632f5880f45"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 35,
      "deletions": 1
    },
    "files": [
      {
        "sha": "04840b052662e8f60cfaee80a941e03cffcf5a34",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "patch": "@@ -14,6 +14,24 @@\n #include <QDebug>\n #include <QList>\n \n+bool BannedNodeLessThan::operator()(const CCombinedBan& left, const CCombinedBan& right) const\n+{\n+    const CCombinedBan* pLeft = &left;\n+    const CCombinedBan* pRight = &right;\n+\n+    if (order == Qt::DescendingOrder)\n+        std::swap(pLeft, pRight);\n+\n+    switch(column)\n+    {\n+    case BanTableModel::Address:\n+        return pLeft->subnet.ToString().compare(pRight->subnet.ToString()) < 0;\n+    case BanTableModel::Bantime:\n+        return pLeft->bantil < pRight->bantil;\n+    }\n+\n+    return false;\n+}\n \n // private implementation\n class BanTablePriv\n@@ -43,6 +61,10 @@ class BanTablePriv\n             banEntry.bantil = banentry.second;\n             cachedBanlist.append(banEntry);\n         }\n+\n+        if (sortColumn >= 0)\n+            // sort cachedBanlist (use stable sort to prevent rows jumping around unneceesarily)\n+            qStableSort(cachedBanlist.begin(), cachedBanlist.end(), BannedNodeLessThan(sortColumn, sortOrder));\n     }\n \n     int size() const"
      },
      {
        "sha": "ec93ed1014dd4dee57eee389d741f3b82a73d058",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "patch": "@@ -18,6 +18,18 @@ struct CCombinedBan {\n     int64_t bantil;\n };\n \n+class BannedNodeLessThan\n+{\n+public:\n+    BannedNodeLessThan(int nColumn, Qt::SortOrder fOrder) :\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CCombinedBan& left, const CCombinedBan& right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n /**\n    Qt model providing information about connected peers, similar to the\n    \"getpeerinfo\" RPC call. Used by the rpc console UI.\n@@ -33,7 +45,7 @@ class BanTableModel : public QAbstractTableModel\n \n     enum ColumnIndex {\n         Address = 0,\n-        Bantime = 1,\n+        Bantime = 1\n     };\n \n     /** @name Methods overridden from QAbstractTableModel"
      }
    ]
  },
  {
    "sha": "b1189cfa105da414d8645f7284c16a443a710cfe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTE4OWNmYTEwNWRhNDE0ZDg2NDVmNzI4NGMxNmE0NDNhNzEwY2Zl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-03T06:35:14Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[Qt] adapt QT ban option to banlist.dat changes",
      "tree": {
        "sha": "622ece0d7c4eadc9e4feba954b5d6259c648fc3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/622ece0d7c4eadc9e4feba954b5d6259c648fc3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1189cfa105da414d8645f7284c16a443a710cfe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1189cfa105da414d8645f7284c16a443a710cfe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1189cfa105da414d8645f7284c16a443a710cfe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1189cfa105da414d8645f7284c16a443a710cfe/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65abe91ce4c3c9b26afa5d1af38bd1bfe81546c4"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "42542371ecf55f79f266b9c8e7639c8013f4f3b5",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -27,7 +27,7 @@ bool BannedNodeLessThan::operator()(const CCombinedBan& left, const CCombinedBan\n     case BanTableModel::Address:\n         return pLeft->subnet.ToString().compare(pRight->subnet.ToString()) < 0;\n     case BanTableModel::Bantime:\n-        return pLeft->bantil < pRight->bantil;\n+        return pLeft->banEntry.nBanUntil < pRight->banEntry.nBanUntil;\n     }\n \n     return false;\n@@ -47,18 +47,18 @@ class BanTablePriv\n     /** Pull a full list of banned nodes from CNode into our cache */\n     void refreshBanlist()\n     {\n-        std::map<CSubNet, int64_t> banMap;\n+        banmap_t banMap;\n         CNode::GetBanned(banMap);\n \n         cachedBanlist.clear();\n #if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n #endif\n-        foreach (const PAIRTYPE(CSubNet, int64_t)& banentry, banMap)\n+        foreach (const PAIRTYPE(CSubNet, CBanEntry)& banentry, banMap)\n         {\n             CCombinedBan banEntry;\n             banEntry.subnet = banentry.first;\n-            banEntry.bantil = banentry.second;\n+            banEntry.banEntry = banentry.second;\n             cachedBanlist.append(banEntry);\n         }\n \n@@ -120,7 +120,7 @@ QVariant BanTableModel::data(const QModelIndex &index, int role) const\n             return QString::fromStdString(rec->subnet.ToString());\n         case Bantime:\n             QDateTime date = QDateTime::fromMSecsSinceEpoch(0);\n-            date = date.addSecs(rec->bantil);\n+            date = date.addSecs(rec->banEntry.nBanUntil);\n             return date.toString(Qt::SystemLocaleLongDate);\n         }\n     }"
      },
      {
        "sha": "09eb468fb9eac5e29baaee940979018c97a1836b",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -15,7 +15,7 @@ class BanTablePriv;\n \n struct CCombinedBan {\n     CSubNet subnet;\n-    int64_t bantil;\n+    CBanEntry banEntry;\n };\n \n class BannedNodeLessThan"
      },
      {
        "sha": "4117da57f523d0812f1f04d61a133f739c0e0c15",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -768,7 +768,7 @@\n             <bool>true</bool>\n            </property>\n            <property name=\"textInteractionFlags\">\n-            <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            <set>Qt::NoTextInteraction</set>\n            </property>\n           </widget>\n          </item>"
      },
      {
        "sha": "b224d891834b0e6af5bda277dd56e34dc91ed610",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1189cfa105da414d8645f7284c16a443a710cfe/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=b1189cfa105da414d8645f7284c16a443a710cfe",
        "patch": "@@ -356,10 +356,10 @@ void RPCConsole::setClientModel(ClientModel *model)\n \n         // create peer table context menu actions\n         QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 hour\"), this);\n-        QAction* banAction24h     = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&24 hours\"), this);\n-        QAction* banAction7d      = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&7 days\"), this);\n-        QAction* banAction365d    = new QAction(tr(\"&Ban Node for\") + \" \" + tr(\"&1 year\"), this);\n+        QAction* banAction1h      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 hour\"), this);\n+        QAction* banAction24h     = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"24 hours\"), this);\n+        QAction* banAction7d      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"7 days\"), this);\n+        QAction* banAction365d    = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 year\"), this);\n \n         // create peer table context menu\n         peersTableContextMenu = new QMenu();\n@@ -806,7 +806,7 @@ void RPCConsole::banSelectedNode(int bantime)\n         int port = 0;\n         SplitHostPort(nStr, port, addr);\n \n-        CNode::Ban(CNetAddr(addr), bantime);\n+        CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();"
      }
    ]
  },
  {
    "sha": "be8929265f0aa10c071e3efbfd20bfb4754ca543",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTg5MjkyNjVmMGFhMTBjMDcxZTNlZmJmZDIwYmZiNDc1NGNhNTQz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-03T06:55:22Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[Qt] reenabling hotkeys for ban context menu, use different words\n\n- 1 (h)our\n- 1 (d)ay\n- 1 (w)eek\n- 1 (y)ear",
      "tree": {
        "sha": "f112b2b28fb5e8792519cd77ca85f77c953b46c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f112b2b28fb5e8792519cd77ca85f77c953b46c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be8929265f0aa10c071e3efbfd20bfb4754ca543",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1189cfa105da414d8645f7284c16a443a710cfe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1189cfa105da414d8645f7284c16a443a710cfe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1189cfa105da414d8645f7284c16a443a710cfe"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ae89ccf1214c565a74842d4b865e3b979cc8f523",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be8929265f0aa10c071e3efbfd20bfb4754ca543/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be8929265f0aa10c071e3efbfd20bfb4754ca543/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=be8929265f0aa10c071e3efbfd20bfb4754ca543",
        "patch": "@@ -356,10 +356,10 @@ void RPCConsole::setClientModel(ClientModel *model)\n \n         // create peer table context menu actions\n         QAction* disconnectAction = new QAction(tr(\"&Disconnect Node\"), this);\n-        QAction* banAction1h      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 hour\"), this);\n-        QAction* banAction24h     = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"24 hours\"), this);\n-        QAction* banAction7d      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"7 days\"), this);\n-        QAction* banAction365d    = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 year\"), this);\n+        QAction* banAction1h      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &hour\"), this);\n+        QAction* banAction24h     = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &day\"), this);\n+        QAction* banAction7d      = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &week\"), this);\n+        QAction* banAction365d    = new QAction(tr(\"Ban Node for\") + \" \" + tr(\"1 &year\"), this);\n \n         // create peer table context menu\n         peersTableContextMenu = new QMenu();"
      }
    ]
  },
  {
    "sha": "4ed05101f32c629008f7f962eb988e8078863fed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWQwNTEwMWYzMmM2MjkwMDhmN2Y5NjJlYjk4OGU4MDc4ODYzZmVk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-03T07:00:47Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[Qt] call DumpBanlist() when baning unbaning nodes\n\n- this matches RPC call behaviour",
      "tree": {
        "sha": "ed85a1275e82408bdb3bf15835906e9ea971e6fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed85a1275e82408bdb3bf15835906e9ea971e6fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ed05101f32c629008f7f962eb988e8078863fed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed05101f32c629008f7f962eb988e8078863fed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed05101f32c629008f7f962eb988e8078863fed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed05101f32c629008f7f962eb988e8078863fed/comments",
    "author": null,
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be8929265f0aa10c071e3efbfd20bfb4754ca543",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be8929265f0aa10c071e3efbfd20bfb4754ca543",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be8929265f0aa10c071e3efbfd20bfb4754ca543"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4dc976028ff7c621f0218ef1f3ecc90f0c7f7cb0",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ed05101f32c629008f7f962eb988e8078863fed/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ed05101f32c629008f7f962eb988e8078863fed/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=4ed05101f32c629008f7f962eb988e8078863fed",
        "patch": "@@ -807,6 +807,7 @@ void RPCConsole::banSelectedNode(int bantime)\n         SplitHostPort(nStr, port, addr);\n \n         CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n+        DumpBanlist(); // store banlist to disk\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();\n@@ -826,6 +827,7 @@ void RPCConsole::unbanSelectedNode()\n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n+        DumpBanlist(); // store banlist to disk\n         clientModel->getBanTableModel()->refresh();\n     }\n }"
      }
    ]
  },
  {
    "sha": "07f70b2dde26ef2b8857642043b149ff23f59a5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowN2Y3MGIyZGRlMjZlZjJiODg1NzY0MjA0M2IxNDlmZjIzZjU5YTVj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-05T13:44:22Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[QA] fix netbase tests because of new CSubNet::ToString() output",
      "tree": {
        "sha": "27a0f287f36236867779a839bd36559be01f2b26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27a0f287f36236867779a839bd36559be01f2b26"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07f70b2dde26ef2b8857642043b149ff23f59a5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ed05101f32c629008f7f962eb988e8078863fed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed05101f32c629008f7f962eb988e8078863fed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed05101f32c629008f7f962eb988e8078863fed"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 6,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e383a3a12c375b2e22b5670ec6cafa53efaebb57",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07f70b2dde26ef2b8857642043b149ff23f59a5c/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07f70b2dde26ef2b8857642043b149ff23f59a5c/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "patch": "@@ -55,17 +55,17 @@ def run_test(self):\n         self.nodes[2].setban(\"192.168.0.1\", \"add\", 1) #ban for 1 seconds\n         self.nodes[2].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/19\", \"add\", 1000) #ban for 1000 seconds\n         listBeforeShutdown = self.nodes[2].listbanned();\n-        assert_equal(\"192.168.0.1/255.255.255.255\", listBeforeShutdown[2]['address']) #must be here\n+        assert_equal(\"192.168.0.1/32\", listBeforeShutdown[2]['address']) #must be here\n         time.sleep(2) #make 100% sure we expired 192.168.0.1 node time\n \n         #stop node\n         stop_node(self.nodes[2], 2)\n \n         self.nodes[2] = start_node(2, self.options.tmpdir)\n         listAfterShutdown = self.nodes[2].listbanned();\n-        assert_equal(\"127.0.0.0/255.255.255.0\", listAfterShutdown[0]['address'])\n-        assert_equal(\"127.0.0.0/255.255.255.255\", listAfterShutdown[1]['address'])\n-        assert_equal(\"2001:4000::/ffff:e000:0:0:0:0:0:0\", listAfterShutdown[2]['address'])\n+        assert_equal(\"127.0.0.0/24\", listAfterShutdown[0]['address'])\n+        assert_equal(\"127.0.0.0/32\", listAfterShutdown[1]['address'])\n+        assert_equal(\"/19\" in listAfterShutdown[2]['address'], True)\n \n         ###########################\n         # RPC disconnectnode test #"
      },
      {
        "sha": "b1ef0ed24a72e498979897523e1834da98e96137",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07f70b2dde26ef2b8857642043b149ff23f59a5c/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07f70b2dde26ef2b8857642043b149ff23f59a5c/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "patch": "@@ -149,12 +149,12 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).IsValid());\n     BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).Match(CNetAddr(\"127.0.0.1\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"127.0.0.1\")).Match(CNetAddr(\"127.0.0.2\")));\n-    BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).ToString() == \"127.0.0.1/255.255.255.255\");\n+    BOOST_CHECK(CSubNet(CNetAddr(\"127.0.0.1\")).ToString() == \"127.0.0.1/32\");\n \n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).IsValid());\n     BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:8\")));\n     BOOST_CHECK(!CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).Match(CNetAddr(\"1:2:3:4:5:6:7:9\")));\n-    BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n+    BOOST_CHECK(CSubNet(CNetAddr(\"1:2:3:4:5:6:7:8\")).ToString() == \"1:2:3:4:5:6:7:8/128\");\n \n     CSubNet subnet = CSubNet(\"1.2.3.4/255.255.255.255\");\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.3.4/32\");\n@@ -233,8 +233,6 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/255.255.232.0\");\n     subnet = CSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\n-    subnet = CSubNet(\"1:2:3:4:5:6:7:8/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n-    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:0/fff:ffff:ffff:ffff:ffff:ffff:ffff:fff0\");\n }\n \n BOOST_AUTO_TEST_CASE(netbase_getgroup)"
      }
    ]
  },
  {
    "sha": "7f90ea78cb68c60408df85d5c653257dbc9160fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjkwZWE3OGNiNjhjNjA0MDhkZjg1ZDVjNjUzMjU3ZGJjOTE2MGZl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-07-29T12:34:14Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-16T14:50:20Z"
      },
      "message": "[QA] adabt QT_NO_KEYWORDS for QT ban implementation",
      "tree": {
        "sha": "98afbb661db8de879314d7c46faeea57cb559942",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98afbb661db8de879314d7c46faeea57cb559942"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f90ea78cb68c60408df85d5c653257dbc9160fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07f70b2dde26ef2b8857642043b149ff23f59a5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07f70b2dde26ef2b8857642043b149ff23f59a5c"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 8,
      "deletions": 9
    },
    "files": [
      {
        "sha": "33792af5baef8a10736379ff7fcf76d4d6f3d5d2",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "patch": "@@ -54,11 +54,11 @@ class BanTablePriv\n #if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n #endif\n-        foreach (const PAIRTYPE(CSubNet, CBanEntry)& banentry, banMap)\n+        for (banmap_t::iterator it = banMap.begin(); it != banMap.end(); it++)\n         {\n             CCombinedBan banEntry;\n-            banEntry.subnet = banentry.first;\n-            banEntry.banEntry = banentry.second;\n+            banEntry.subnet = (*it).first;\n+            banEntry.banEntry = (*it).second;\n             cachedBanlist.append(banEntry);\n         }\n \n@@ -161,9 +161,9 @@ QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent)\n \n void BanTableModel::refresh()\n {\n-    emit layoutAboutToBeChanged();\n+    Q_EMIT layoutAboutToBeChanged();\n     priv->refreshBanlist();\n-    emit layoutChanged();\n+    Q_EMIT layoutChanged();\n }\n \n void BanTableModel::sort(int column, Qt::SortOrder order)"
      },
      {
        "sha": "c21dd04e311cb6dbce9cbf87292698ad2c6395f6",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "patch": "@@ -60,7 +60,7 @@ class BanTableModel : public QAbstractTableModel\n     bool shouldShow();\n     /*@}*/\n \n-public slots:\n+public Q_SLOTS:\n     void refresh();\n \n private:"
      },
      {
        "sha": "b3c28eab825715d8501c16bde8c9685441a4489c",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f90ea78cb68c60408df85d5c653257dbc9160fe/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "patch": "@@ -27,6 +27,7 @@\n #include <QKeyEvent>\n #include <QMenu>\n #include <QScrollBar>\n+#include <QSignalMapper>\n #include <QThread>\n #include <QTime>\n #include <QTimer>\n@@ -242,7 +243,7 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     clientModel(0),\n     historyPtr(0),\n     cachedNodeid(-1),\n-    platformStyle(platformStyle)\n+    platformStyle(platformStyle),\n     peersTableContextMenu(0),\n     banTableContextMenu(0)\n {\n@@ -807,7 +808,6 @@ void RPCConsole::banSelectedNode(int bantime)\n         SplitHostPort(nStr, port, addr);\n \n         CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n-        DumpBanlist(); // store banlist to disk\n         bannedNode->fDisconnect = true;\n \n         clearSelectedNode();\n@@ -827,7 +827,6 @@ void RPCConsole::unbanSelectedNode()\n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n-        DumpBanlist(); // store banlist to disk\n         clientModel->getBanTableModel()->refresh();\n     }\n }"
      }
    ]
  },
  {
    "sha": "7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YWFjNmRiNmViNmI1NGRhNjJkNWVhYWZlN2YxNDU4NWVhMWVhMzRk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-20T08:42:35Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-20T08:42:35Z"
      },
      "message": "[QT] dump banlist to disk in case of ban/unban over QT",
      "tree": {
        "sha": "04331cd336586435c7bc0c58369b9be7e7b856d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04331cd336586435c7bc0c58369b9be7e7b856d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f90ea78cb68c60408df85d5c653257dbc9160fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f90ea78cb68c60408df85d5c653257dbc9160fe"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9603a26c6e1ceb12724a2d1e7b3a18a38be3f722",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=7aac6db6eb6b54da62d5eaafe7f14585ea1ea34d",
        "patch": "@@ -809,6 +809,7 @@ void RPCConsole::banSelectedNode(int bantime)\n \n         CNode::Ban(CNetAddr(addr), BanReasonManuallyAdded, bantime);\n         bannedNode->fDisconnect = true;\n+        DumpBanlist();\n \n         clearSelectedNode();\n         clientModel->getBanTableModel()->refresh();\n@@ -827,6 +828,7 @@ void RPCConsole::unbanSelectedNode()\n     if (possibleSubnet.IsValid())\n     {\n         CNode::Unban(possibleSubnet);\n+        DumpBanlist();\n         clientModel->getBanTableModel()->refresh();\n     }\n }"
      }
    ]
  }
]