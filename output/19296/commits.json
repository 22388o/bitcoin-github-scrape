[
  {
    "sha": "9352c3232594f953d2db11c1e140be3f7f9fbae4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzUyYzMyMzI1OTRmOTUzZDJkYjExYzFlMTQwYmUzZjdmOWZiYWU0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-16T13:03:01Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T15:06:13Z"
      },
      "message": "tests: Add fuzzing harness for AES256Encrypt/AES256Decrypt",
      "tree": {
        "sha": "15bb3457455e5386299767e8d7b35c288cafb793",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15bb3457455e5386299767e8d7b35c288cafb793"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9352c3232594f953d2db11c1e140be3f7f9fbae4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9352c3232594f953d2db11c1e140be3f7f9fbae4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9352c3232594f953d2db11c1e140be3f7f9fbae4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9352c3232594f953d2db11c1e140be3f7f9fbae4/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8fa03d1766c7c99a78814507aa252265b8cc89b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8fa03d1766c7c99a78814507aa252265b8cc89b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8fa03d1766c7c99a78814507aa252265b8cc89b"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 37,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e0351c1c8152845511f443718d0a614fa6911ed7",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9352c3232594f953d2db11c1e140be3f7f9fbae4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9352c3232594f953d2db11c1e140be3f7f9fbae4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=9352c3232594f953d2db11c1e140be3f7f9fbae4",
        "patch": "@@ -33,6 +33,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/coins_deserialize \\\n   test/fuzz/coins_view \\\n   test/fuzz/crypto \\\n+  test/fuzz/crypto_aes256 \\\n   test/fuzz/crypto_common \\\n   test/fuzz/cuckoocache \\\n   test/fuzz/decode_tx \\\n@@ -486,6 +487,12 @@ test_fuzz_crypto_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_crypto_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_crypto_SOURCES = test/fuzz/crypto.cpp\n \n+test_fuzz_crypto_aes256_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_crypto_aes256_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_crypto_aes256_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_crypto_aes256_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_aes256_SOURCES = test/fuzz/crypto_aes256.cpp\n+\n test_fuzz_crypto_common_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_common_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "ae14073c96ddee4620660e71447fda9f87302dfd",
        "filename": "src/test/fuzz/crypto_aes256.cpp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9352c3232594f953d2db11c1e140be3f7f9fbae4/src/test/fuzz/crypto_aes256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9352c3232594f953d2db11c1e140be3f7f9fbae4/src/test/fuzz/crypto_aes256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_aes256.cpp?ref=9352c3232594f953d2db11c1e140be3f7f9fbae4",
        "patch": "@@ -0,0 +1,30 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/aes.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, AES256_KEYSIZE);\n+\n+    AES256Encrypt encrypt{key.data()};\n+    AES256Decrypt decrypt{key.data()};\n+\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        const std::vector<uint8_t> plaintext = ConsumeFixedLengthByteVector(fuzzed_data_provider, AES_BLOCKSIZE);\n+        std::vector<uint8_t> ciphertext(AES_BLOCKSIZE);\n+        encrypt.Encrypt(ciphertext.data(), plaintext.data());\n+        std::vector<uint8_t> decrypted_plaintext(AES_BLOCKSIZE);\n+        decrypt.Decrypt(decrypted_plaintext.data(), ciphertext.data());\n+        assert(decrypted_plaintext == plaintext);\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "4cee53bba722a480ccd6472d2ffe9b0001394dd9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Y2VlNTNiYmE3MjJhNDgwY2NkNjQ3MmQyZmZlOWIwMDAxMzk0ZGQ5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-16T13:57:40Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T15:06:13Z"
      },
      "message": "tests: Add fuzzing harness for AES256CBCEncrypt/AES256CBCDecrypt",
      "tree": {
        "sha": "7b19facbb88f7045b7b73daf2926edfc26885d03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b19facbb88f7045b7b73daf2926edfc26885d03"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cee53bba722a480ccd6472d2ffe9b0001394dd9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cee53bba722a480ccd6472d2ffe9b0001394dd9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4cee53bba722a480ccd6472d2ffe9b0001394dd9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cee53bba722a480ccd6472d2ffe9b0001394dd9/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9352c3232594f953d2db11c1e140be3f7f9fbae4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9352c3232594f953d2db11c1e140be3f7f9fbae4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9352c3232594f953d2db11c1e140be3f7f9fbae4"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2d5f1c847230559ae73b8ad83fb43ad37f235394",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cee53bba722a480ccd6472d2ffe9b0001394dd9/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cee53bba722a480ccd6472d2ffe9b0001394dd9/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=4cee53bba722a480ccd6472d2ffe9b0001394dd9",
        "patch": "@@ -34,6 +34,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/coins_view \\\n   test/fuzz/crypto \\\n   test/fuzz/crypto_aes256 \\\n+  test/fuzz/crypto_aes256cbc \\\n   test/fuzz/crypto_common \\\n   test/fuzz/cuckoocache \\\n   test/fuzz/decode_tx \\\n@@ -493,6 +494,12 @@ test_fuzz_crypto_aes256_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_crypto_aes256_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_crypto_aes256_SOURCES = test/fuzz/crypto_aes256.cpp\n \n+test_fuzz_crypto_aes256cbc_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_crypto_aes256cbc_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_crypto_aes256cbc_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_crypto_aes256cbc_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_aes256cbc_SOURCES = test/fuzz/crypto_aes256cbc.cpp\n+\n test_fuzz_crypto_common_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_common_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "52983c7e793580a4404546f90dfabe84542c3c0f",
        "filename": "src/test/fuzz/crypto_aes256cbc.cpp",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cee53bba722a480ccd6472d2ffe9b0001394dd9/src/test/fuzz/crypto_aes256cbc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cee53bba722a480ccd6472d2ffe9b0001394dd9/src/test/fuzz/crypto_aes256cbc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_aes256cbc.cpp?ref=4cee53bba722a480ccd6472d2ffe9b0001394dd9",
        "patch": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/aes.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, AES256_KEYSIZE);\n+    const std::vector<uint8_t> iv = ConsumeFixedLengthByteVector(fuzzed_data_provider, AES_BLOCKSIZE);\n+    const bool pad = fuzzed_data_provider.ConsumeBool();\n+\n+    AES256CBCEncrypt encrypt{key.data(), iv.data(), pad};\n+    AES256CBCDecrypt decrypt{key.data(), iv.data(), pad};\n+\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        const std::vector<uint8_t> plaintext = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+        std::vector<uint8_t> ciphertext(plaintext.size() + AES_BLOCKSIZE);\n+        const int encrypt_ret = encrypt.Encrypt(plaintext.data(), plaintext.size(), ciphertext.data());\n+        ciphertext.resize(encrypt_ret);\n+        std::vector<uint8_t> decrypted_plaintext(ciphertext.size());\n+        const int decrypt_ret = decrypt.Decrypt(ciphertext.data(), ciphertext.size(), decrypted_plaintext.data());\n+        decrypted_plaintext.resize(decrypt_ret);\n+        assert(decrypted_plaintext == plaintext || (!pad && plaintext.size() % AES_BLOCKSIZE != 0 && encrypt_ret == 0 && decrypt_ret == 0));\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "ec86ca1aaae388cefa2da9904785cee2d550b3d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzg2Y2ExYWFhZTM4OGNlZmEyZGE5OTA0Nzg1Y2VlMmQ1NTBiM2Qx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-17T09:47:42Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T15:06:13Z"
      },
      "message": "tests: Add fuzzing harness for poly1305_auth(...)",
      "tree": {
        "sha": "981b9ff7bdbd258a0e24f1a86497dde058221b9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/981b9ff7bdbd258a0e24f1a86497dde058221b9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec86ca1aaae388cefa2da9904785cee2d550b3d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec86ca1aaae388cefa2da9904785cee2d550b3d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec86ca1aaae388cefa2da9904785cee2d550b3d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec86ca1aaae388cefa2da9904785cee2d550b3d1/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4cee53bba722a480ccd6472d2ffe9b0001394dd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cee53bba722a480ccd6472d2ffe9b0001394dd9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4cee53bba722a480ccd6472d2ffe9b0001394dd9"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5198bf099ae7767441f70e9424bc1f4f0c4f8f25",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec86ca1aaae388cefa2da9904785cee2d550b3d1/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec86ca1aaae388cefa2da9904785cee2d550b3d1/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=ec86ca1aaae388cefa2da9904785cee2d550b3d1",
        "patch": "@@ -36,6 +36,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/crypto_aes256 \\\n   test/fuzz/crypto_aes256cbc \\\n   test/fuzz/crypto_common \\\n+  test/fuzz/crypto_poly1305 \\\n   test/fuzz/cuckoocache \\\n   test/fuzz/decode_tx \\\n   test/fuzz/descriptor_parse \\\n@@ -506,6 +507,12 @@ test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_crypto_common_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_crypto_common_SOURCES = test/fuzz/crypto_common.cpp\n \n+test_fuzz_crypto_poly1305_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_crypto_poly1305_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_crypto_poly1305_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_crypto_poly1305_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_poly1305_SOURCES = test/fuzz/crypto_poly1305.cpp\n+\n test_fuzz_cuckoocache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_cuckoocache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_cuckoocache_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "5681e6a693b12ae228dcf3b015eab62484c443e4",
        "filename": "src/test/fuzz/crypto_poly1305.cpp",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec86ca1aaae388cefa2da9904785cee2d550b3d1/src/test/fuzz/crypto_poly1305.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec86ca1aaae388cefa2da9904785cee2d550b3d1/src/test/fuzz/crypto_poly1305.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_poly1305.cpp?ref=ec86ca1aaae388cefa2da9904785cee2d550b3d1",
        "patch": "@@ -0,0 +1,22 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/poly1305.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, POLY1305_KEYLEN);\n+    const std::vector<uint8_t> in = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+\n+    std::vector<uint8_t> tag_out(POLY1305_TAGLEN);\n+    poly1305_auth(tag_out.data(), in.data(), in.size(), key.data());\n+}"
      }
    ]
  },
  {
    "sha": "e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOWU4YWFjMDI5YWNmZmI1ZTRjYzVjMjU1NmYyM2NkZmRjZjliYjA5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-17T09:49:09Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T15:06:13Z"
      },
      "message": "tests: Add fuzzing harness for CHKDF_HMAC_SHA256_L32",
      "tree": {
        "sha": "4f0e490bbf197ab8038aaca7b589ad67d4f124f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f0e490bbf197ab8038aaca7b589ad67d4f124f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec86ca1aaae388cefa2da9904785cee2d550b3d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec86ca1aaae388cefa2da9904785cee2d550b3d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec86ca1aaae388cefa2da9904785cee2d550b3d1"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 32,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4ec5315d71de5bb4db13bd7cb228920794d63e95",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
        "patch": "@@ -36,6 +36,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/crypto_aes256 \\\n   test/fuzz/crypto_aes256cbc \\\n   test/fuzz/crypto_common \\\n+  test/fuzz/crypto_hkdf_hmac_sha256_l32 \\\n   test/fuzz/crypto_poly1305 \\\n   test/fuzz/cuckoocache \\\n   test/fuzz/decode_tx \\\n@@ -507,6 +508,12 @@ test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_crypto_common_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_crypto_common_SOURCES = test/fuzz/crypto_common.cpp\n \n+test_fuzz_crypto_hkdf_hmac_sha256_l32_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_crypto_hkdf_hmac_sha256_l32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_crypto_hkdf_hmac_sha256_l32_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_crypto_hkdf_hmac_sha256_l32_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_hkdf_hmac_sha256_l32_SOURCES = test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp\n+\n test_fuzz_crypto_poly1305_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_poly1305_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_poly1305_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "e0a4e90c10e38b829d63ab8b33204106fbfcc0e1",
        "filename": "src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp?ref=e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
        "patch": "@@ -0,0 +1,25 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/hkdf_sha256_32.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    const std::vector<uint8_t> initial_key_material = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+\n+    CHKDF_HMAC_SHA256_L32 hkdf_hmac_sha256_l32(initial_key_material.data(), initial_key_material.size(), fuzzed_data_provider.ConsumeRandomLengthString(1024));\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        std::vector<uint8_t> out(32);\n+        hkdf_hmac_sha256_l32.Expand32(fuzzed_data_provider.ConsumeRandomLengthString(128), out.data());\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "2fc4e5916c1c35902a32830c3f199a308a66bea0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmM0ZTU5MTZjMWMzNTkwMmEzMjgzMGMzZjE5OWEzMDhhNjZiZWEw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-17T11:12:05Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T15:06:13Z"
      },
      "message": "tests: Add fuzzing harness for ChaCha20",
      "tree": {
        "sha": "d1fe9195ec9a7935e140a27baa269817c0ba19ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1fe9195ec9a7935e140a27baa269817c0ba19ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fc4e5916c1c35902a32830c3f199a308a66bea0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc4e5916c1c35902a32830c3f199a308a66bea0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fc4e5916c1c35902a32830c3f199a308a66bea0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc4e5916c1c35902a32830c3f199a308a66bea0/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9e8aac029acffb5e4cc5c2556f23cdfdcf9bb09"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 57,
      "deletions": 0
    },
    "files": [
      {
        "sha": "91aa6175b455404801f92d2ee095591f668ce3dd",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fc4e5916c1c35902a32830c3f199a308a66bea0/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fc4e5916c1c35902a32830c3f199a308a66bea0/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=2fc4e5916c1c35902a32830c3f199a308a66bea0",
        "patch": "@@ -35,6 +35,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/crypto \\\n   test/fuzz/crypto_aes256 \\\n   test/fuzz/crypto_aes256cbc \\\n+  test/fuzz/crypto_chacha20 \\\n   test/fuzz/crypto_common \\\n   test/fuzz/crypto_hkdf_hmac_sha256_l32 \\\n   test/fuzz/crypto_poly1305 \\\n@@ -502,6 +503,12 @@ test_fuzz_crypto_aes256cbc_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_crypto_aes256cbc_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_crypto_aes256cbc_SOURCES = test/fuzz/crypto_aes256cbc.cpp\n \n+test_fuzz_crypto_chacha20_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_crypto_chacha20_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_crypto_chacha20_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_crypto_chacha20_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_chacha20_SOURCES = test/fuzz/crypto_chacha20.cpp\n+\n test_fuzz_crypto_common_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_common_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "b7438d312d3391c0fd08e3b7b8fb86097afdd3a1",
        "filename": "src/test/fuzz/crypto_chacha20.cpp",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fc4e5916c1c35902a32830c3f199a308a66bea0/src/test/fuzz/crypto_chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fc4e5916c1c35902a32830c3f199a308a66bea0/src/test/fuzz/crypto_chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_chacha20.cpp?ref=2fc4e5916c1c35902a32830c3f199a308a66bea0",
        "patch": "@@ -0,0 +1,50 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/chacha20.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    ChaCha20 chacha20;\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        const std::vector<unsigned char> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, fuzzed_data_provider.ConsumeIntegralInRange<size_t>(16, 32));\n+        chacha20 = ChaCha20{key.data(), key.size()};\n+    }\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 4)) {\n+        case 0: {\n+            const std::vector<unsigned char> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, fuzzed_data_provider.ConsumeIntegralInRange<size_t>(16, 32));\n+            chacha20.SetKey(key.data(), key.size());\n+            break;\n+        }\n+        case 1: {\n+            chacha20.SetIV(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n+            break;\n+        }\n+        case 2: {\n+            chacha20.Seek(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n+            break;\n+        }\n+        case 3: {\n+            std::vector<uint8_t> output(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            chacha20.Keystream(output.data(), output.size());\n+            break;\n+        }\n+        case 4: {\n+            std::vector<uint8_t> output(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            const std::vector<uint8_t> input = ConsumeFixedLengthByteVector(fuzzed_data_provider, output.size());\n+            chacha20.Crypt(input.data(), output.data(), input.size());\n+            break;\n+        }\n+        }\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "cca7c577d5d80293cb12de1048f3edd680ac4fad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2E3YzU3N2Q1ZDgwMjkzY2IxMmRlMTA0OGYzZWRkNjgwYWM0ZmFk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-17T15:22:38Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T15:06:13Z"
      },
      "message": "tests: Add fuzzing harness for ChaCha20Poly1305AEAD",
      "tree": {
        "sha": "5d8b1a34cc8e8bd1cbeea4290ee243067f80be0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d8b1a34cc8e8bd1cbeea4290ee243067f80be0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cca7c577d5d80293cb12de1048f3edd680ac4fad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cca7c577d5d80293cb12de1048f3edd680ac4fad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cca7c577d5d80293cb12de1048f3edd680ac4fad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cca7c577d5d80293cb12de1048f3edd680ac4fad/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2fc4e5916c1c35902a32830c3f199a308a66bea0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc4e5916c1c35902a32830c3f199a308a66bea0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2fc4e5916c1c35902a32830c3f199a308a66bea0"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 79,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c2536bda3ad7c886678f72efdf9d455449bcf053",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cca7c577d5d80293cb12de1048f3edd680ac4fad/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cca7c577d5d80293cb12de1048f3edd680ac4fad/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=cca7c577d5d80293cb12de1048f3edd680ac4fad",
        "patch": "@@ -36,6 +36,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/crypto_aes256 \\\n   test/fuzz/crypto_aes256cbc \\\n   test/fuzz/crypto_chacha20 \\\n+  test/fuzz/crypto_chacha20_poly1305_aead \\\n   test/fuzz/crypto_common \\\n   test/fuzz/crypto_hkdf_hmac_sha256_l32 \\\n   test/fuzz/crypto_poly1305 \\\n@@ -509,6 +510,12 @@ test_fuzz_crypto_chacha20_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_crypto_chacha20_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_crypto_chacha20_SOURCES = test/fuzz/crypto_chacha20.cpp\n \n+test_fuzz_crypto_chacha20_poly1305_aead_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_crypto_chacha20_poly1305_aead_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_crypto_chacha20_poly1305_aead_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_crypto_chacha20_poly1305_aead_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_chacha20_poly1305_aead_SOURCES = test/fuzz/crypto_chacha20_poly1305_aead.cpp\n+\n test_fuzz_crypto_common_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_common_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "48e4263f279c08f2c9357164f8c998e001bf9e71",
        "filename": "src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cca7c577d5d80293cb12de1048f3edd680ac4fad/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cca7c577d5d80293cb12de1048f3edd680ac4fad/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp?ref=cca7c577d5d80293cb12de1048f3edd680ac4fad",
        "patch": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/chacha_poly_aead.h>\n+#include <crypto/poly1305.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    const std::vector<uint8_t> k1 = ConsumeFixedLengthByteVector(fuzzed_data_provider, CHACHA20_POLY1305_AEAD_KEY_LEN);\n+    const std::vector<uint8_t> k2 = ConsumeFixedLengthByteVector(fuzzed_data_provider, CHACHA20_POLY1305_AEAD_KEY_LEN);\n+\n+    ChaCha20Poly1305AEAD aead(k1.data(), k1.size(), k2.data(), k2.size());\n+    uint64_t seqnr_payload = 0;\n+    uint64_t seqnr_aad = 0;\n+    int aad_pos = 0;\n+    size_t buffer_size = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096);\n+    std::vector<uint8_t> in(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n+    std::vector<uint8_t> out(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n+    bool is_encrypt = fuzzed_data_provider.ConsumeBool();\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 6)) {\n+        case 0: {\n+            buffer_size = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(64, 4096);\n+            in = std::vector<uint8_t>(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n+            out = std::vector<uint8_t>(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n+            break;\n+        }\n+        case 1: {\n+            (void)aead.Crypt(seqnr_payload, seqnr_aad, aad_pos, out.data(), out.size(), in.data(), buffer_size, is_encrypt);\n+            break;\n+        }\n+        case 2: {\n+            uint32_t len = 0;\n+            const bool ok = aead.GetLength(&len, seqnr_aad, aad_pos, in.data());\n+            assert(ok);\n+            break;\n+        }\n+        case 3: {\n+            seqnr_payload += 1;\n+            aad_pos += CHACHA20_POLY1305_AEAD_AAD_LEN;\n+            if (aad_pos + CHACHA20_POLY1305_AEAD_AAD_LEN > CHACHA20_ROUND_OUTPUT) {\n+                aad_pos = 0;\n+                seqnr_aad += 1;\n+            }\n+            break;\n+        }\n+        case 4: {\n+            seqnr_payload = fuzzed_data_provider.ConsumeIntegral<int>();\n+            break;\n+        }\n+        case 5: {\n+            seqnr_aad = fuzzed_data_provider.ConsumeIntegral<int>();\n+            break;\n+        }\n+        case 6: {\n+            is_encrypt = fuzzed_data_provider.ConsumeBool();\n+            break;\n+        }\n+        }\n+    }\n+}"
      }
    ]
  }
]