[
  {
    "sha": "e912118786f867d6821e2c1a2e4e1d4937fefd85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTEyMTE4Nzg2Zjg2N2Q2ODIxZTJjMWEyZTRlMWQ0OTM3ZmVmZDg1",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2017-07-30T09:32:39Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2017-08-30T10:32:17Z"
      },
      "message": "[Refactor] Combine scriptPubKey and amount as CTxOut in CScriptCheck",
      "tree": {
        "sha": "eb5c2d19e238f1ceb59ba19ff6c86868197e1ecb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb5c2d19e238f1ceb59ba19ff6c86868197e1ecb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e912118786f867d6821e2c1a2e4e1d4937fefd85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e912118786f867d6821e2c1a2e4e1d4937fefd85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e912118786f867d6821e2c1a2e4e1d4937fefd85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e912118786f867d6821e2c1a2e4e1d4937fefd85/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a90e6d2bffc422ddcdb771c53aac0bceb970a2c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a90e6d2bffc422ddcdb771c53aac0bceb970a2c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a90e6d2bffc422ddcdb771c53aac0bceb970a2c4"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 10,
      "deletions": 17
    },
    "files": [
      {
        "sha": "58aa32c96913e6b180275f01408768b2c1f9ded1",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=e912118786f867d6821e2c1a2e4e1d4937fefd85",
        "patch": "@@ -112,8 +112,7 @@ BOOST_AUTO_TEST_CASE(sign)\n         {\n             CScript sigSave = txTo[i].vin[0].scriptSig;\n             txTo[i].vin[0].scriptSig = txTo[j].vin[0].scriptSig;\n-            const CTxOut& output = txFrom.vout[txTo[i].vin[0].prevout.n];\n-            bool sigOK = CScriptCheck(output.scriptPubKey, output.nValue, txTo[i], 0, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC, false, &txdata)();\n+            bool sigOK = CScriptCheck(txFrom.vout[txTo[i].vin[0].prevout.n], txTo[i], 0, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC, false, &txdata)();\n             if (i == j)\n                 BOOST_CHECK_MESSAGE(sigOK, strprintf(\"VerifySignature %d %d\", i, j));\n             else"
      },
      {
        "sha": "cb6ab7cdbec27ed23111d8ae43a810d3d38b1ea0",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=e912118786f867d6821e2c1a2e4e1d4937fefd85",
        "patch": "@@ -480,8 +480,7 @@ BOOST_AUTO_TEST_CASE(test_big_witness_transaction) {\n \n     for(uint32_t i = 0; i < mtx.vin.size(); i++) {\n         std::vector<CScriptCheck> vChecks;\n-        const CTxOut& output = coins[tx.vin[i].prevout.n].out;\n-        CScriptCheck check(output.scriptPubKey, output.nValue, tx, i, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS, false, &txdata);\n+        CScriptCheck check(coins[tx.vin[i].prevout.n].out, tx, i, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS, false, &txdata);\n         vChecks.push_back(CScriptCheck());\n         check.swap(vChecks.back());\n         control.Add(vChecks);"
      },
      {
        "sha": "d1b080cc951417292e58f06e1ae35b19f984c262",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e912118786f867d6821e2c1a2e4e1d4937fefd85",
        "patch": "@@ -1202,7 +1202,7 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight)\n bool CScriptCheck::operator()() {\n     const CScript &scriptSig = ptxTo->vin[nIn].scriptSig;\n     const CScriptWitness *witness = &ptxTo->vin[nIn].scriptWitness;\n-    return VerifyScript(scriptSig, scriptPubKey, witness, nFlags, CachingTransactionSignatureChecker(ptxTo, nIn, amount, cacheStore, *txdata), &error);\n+    return VerifyScript(scriptSig, out.scriptPubKey, witness, nFlags, CachingTransactionSignatureChecker(ptxTo, nIn, out.nValue, cacheStore, *txdata), &error);\n }\n \n int GetSpendHeight(const CCoinsViewCache& inputs)\n@@ -1284,11 +1284,9 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                 // a sanity check that our caching is not introducing consensus\n                 // failures through additional data in, eg, the coins being\n                 // spent being checked as a part of CScriptCheck.\n-                const CScript& scriptPubKey = coin.out.scriptPubKey;\n-                const CAmount amount = coin.out.nValue;\n \n                 // Verify signature\n-                CScriptCheck check(scriptPubKey, amount, tx, i, flags, cacheSigStore, &txdata);\n+                CScriptCheck check(coin.out, tx, i, flags, cacheSigStore, &txdata);\n                 if (pvChecks) {\n                     pvChecks->push_back(CScriptCheck());\n                     check.swap(pvChecks->back());\n@@ -1300,7 +1298,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                         // arguments; if so, don't trigger DoS protection to\n                         // avoid splitting the network between upgraded and\n                         // non-upgraded nodes.\n-                        CScriptCheck check2(scriptPubKey, amount, tx, i,\n+                        CScriptCheck check2(coin.out, tx, i,\n                                 flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                         if (check2())\n                             return state.Invalid(false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));"
      },
      {
        "sha": "69751b8c68fef0432462d9a9431e5d5a2f02dfbd",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e912118786f867d6821e2c1a2e4e1d4937fefd85/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=e912118786f867d6821e2c1a2e4e1d4937fefd85",
        "patch": "@@ -355,8 +355,7 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp = null\n class CScriptCheck\n {\n private:\n-    CScript scriptPubKey;\n-    CAmount amount;\n+    CTxOut out;\n     const CTransaction *ptxTo;\n     unsigned int nIn;\n     unsigned int nFlags;\n@@ -365,17 +364,15 @@ class CScriptCheck\n     PrecomputedTransactionData *txdata;\n \n public:\n-    CScriptCheck(): amount(0), ptxTo(nullptr), nIn(0), nFlags(0), cacheStore(false), error(SCRIPT_ERR_UNKNOWN_ERROR) {}\n-    CScriptCheck(const CScript& scriptPubKeyIn, const CAmount amountIn, const CTransaction& txToIn, unsigned int nInIn, unsigned int nFlagsIn, bool cacheIn, PrecomputedTransactionData* txdataIn) :\n-        scriptPubKey(scriptPubKeyIn), amount(amountIn),\n-        ptxTo(&txToIn), nIn(nInIn), nFlags(nFlagsIn), cacheStore(cacheIn), error(SCRIPT_ERR_UNKNOWN_ERROR), txdata(txdataIn) { }\n+    CScriptCheck(): ptxTo(nullptr), nIn(0), nFlags(0), cacheStore(false), error(SCRIPT_ERR_UNKNOWN_ERROR) {}\n+    CScriptCheck(const CTxOut& outIn, const CTransaction& txToIn, unsigned int nInIn, unsigned int nFlagsIn, bool cacheIn, PrecomputedTransactionData* txdataIn) :\n+        out(outIn), ptxTo(&txToIn), nIn(nInIn), nFlags(nFlagsIn), cacheStore(cacheIn), error(SCRIPT_ERR_UNKNOWN_ERROR), txdata(txdataIn) { }\n \n     bool operator()();\n \n     void swap(CScriptCheck &check) {\n-        scriptPubKey.swap(check.scriptPubKey);\n         std::swap(ptxTo, check.ptxTo);\n-        std::swap(amount, check.amount);\n+        std::swap(out, check.out);\n         std::swap(nIn, check.nIn);\n         std::swap(nFlags, check.nFlags);\n         std::swap(cacheStore, check.cacheStore);"
      }
    ]
  },
  {
    "sha": "3a131b72446724b2d6322930d92348065f1c1891",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTEzMWI3MjQ0NjcyNGIyZDYzMjI5MzBkOTIzNDgwNjVmMWMxODkx",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2017-09-22T06:27:03Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2017-09-22T06:27:03Z"
      },
      "message": "Rename out to m_tx_out in CScriptCheck",
      "tree": {
        "sha": "0698d945e1ea75ae4ee2874699010f277d4cbc33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0698d945e1ea75ae4ee2874699010f277d4cbc33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a131b72446724b2d6322930d92348065f1c1891",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a131b72446724b2d6322930d92348065f1c1891",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a131b72446724b2d6322930d92348065f1c1891",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a131b72446724b2d6322930d92348065f1c1891/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e912118786f867d6821e2c1a2e4e1d4937fefd85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e912118786f867d6821e2c1a2e4e1d4937fefd85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e912118786f867d6821e2c1a2e4e1d4937fefd85"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "1d6454e1aec276e7406cac01407fa525b88c9255",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a131b72446724b2d6322930d92348065f1c1891/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a131b72446724b2d6322930d92348065f1c1891/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3a131b72446724b2d6322930d92348065f1c1891",
        "patch": "@@ -1202,7 +1202,7 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight)\n bool CScriptCheck::operator()() {\n     const CScript &scriptSig = ptxTo->vin[nIn].scriptSig;\n     const CScriptWitness *witness = &ptxTo->vin[nIn].scriptWitness;\n-    return VerifyScript(scriptSig, out.scriptPubKey, witness, nFlags, CachingTransactionSignatureChecker(ptxTo, nIn, out.nValue, cacheStore, *txdata), &error);\n+    return VerifyScript(scriptSig, m_tx_out.scriptPubKey, witness, nFlags, CachingTransactionSignatureChecker(ptxTo, nIn, m_tx_out.nValue, cacheStore, *txdata), &error);\n }\n \n int GetSpendHeight(const CCoinsViewCache& inputs)"
      },
      {
        "sha": "9cd9fe536bb99ef317fabcbcb80a73092f065a9c",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a131b72446724b2d6322930d92348065f1c1891/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a131b72446724b2d6322930d92348065f1c1891/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3a131b72446724b2d6322930d92348065f1c1891",
        "patch": "@@ -355,7 +355,7 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp = null\n class CScriptCheck\n {\n private:\n-    CTxOut out;\n+    CTxOut m_tx_out;\n     const CTransaction *ptxTo;\n     unsigned int nIn;\n     unsigned int nFlags;\n@@ -366,13 +366,13 @@ class CScriptCheck\n public:\n     CScriptCheck(): ptxTo(nullptr), nIn(0), nFlags(0), cacheStore(false), error(SCRIPT_ERR_UNKNOWN_ERROR) {}\n     CScriptCheck(const CTxOut& outIn, const CTransaction& txToIn, unsigned int nInIn, unsigned int nFlagsIn, bool cacheIn, PrecomputedTransactionData* txdataIn) :\n-        out(outIn), ptxTo(&txToIn), nIn(nInIn), nFlags(nFlagsIn), cacheStore(cacheIn), error(SCRIPT_ERR_UNKNOWN_ERROR), txdata(txdataIn) { }\n+        m_tx_out(outIn), ptxTo(&txToIn), nIn(nInIn), nFlags(nFlagsIn), cacheStore(cacheIn), error(SCRIPT_ERR_UNKNOWN_ERROR), txdata(txdataIn) { }\n \n     bool operator()();\n \n     void swap(CScriptCheck &check) {\n         std::swap(ptxTo, check.ptxTo);\n-        std::swap(out, check.out);\n+        std::swap(m_tx_out, check.m_tx_out);\n         std::swap(nIn, check.nIn);\n         std::swap(nFlags, check.nFlags);\n         std::swap(cacheStore, check.cacheStore);"
      }
    ]
  }
]