[
  {
    "sha": "41db8c4733b34d56834162c4d054823c240ffc92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWRiOGM0NzMzYjM0ZDU2ODM0MTYyYzRkMDU0ODIzYzI0MGZmYzky",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T09:35:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T12:31:40Z"
      },
      "message": "http: Restrict maximum size of request line + headers\n\nPrevent memory exhaustion by sending lots of data.\nAlso add a test to `httpbasics.py`.\n\nCloses #6425",
      "tree": {
        "sha": "07b3417f8fc0ff7760be7534a6df349f951b5529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07b3417f8fc0ff7760be7534a6df349f951b5529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41db8c4733b34d56834162c4d054823c240ffc92",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41db8c4733b34d56834162c4d054823c240ffc92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41db8c4733b34d56834162c4d054823c240ffc92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41db8c4733b34d56834162c4d054823c240ffc92/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da7d57fb9501ad8939a2923f2a60fa540eae8cfa"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7888114c54df4a30b133feb48e1f197f583517db",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41db8c4733b34d56834162c4d054823c240ffc92/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41db8c4733b34d56834162c4d054823c240ffc92/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=41db8c4733b34d56834162c4d054823c240ffc92",
        "patch": "@@ -97,5 +97,19 @@ def run_test(self):\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n \n+        # Check excessive request size\n+        conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n+        conn.connect()\n+        conn.request('GET', '/' + ('x'*1000), '', headers)\n+        out1 = conn.getresponse()\n+        assert_equal(out1.status, httplib.NOT_FOUND)\n+\n+        conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n+        conn.connect()\n+        conn.request('GET', '/' + ('x'*10000), '', headers)\n+        out1 = conn.getresponse()\n+        assert_equal(out1.status, httplib.BAD_REQUEST)\n+\n+\n if __name__ == '__main__':\n     HTTPBasicsTest ().main ()"
      },
      {
        "sha": "8698abb900e074c086995af3e5edd8195f5bc750",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41db8c4733b34d56834162c4d054823c240ffc92/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41db8c4733b34d56834162c4d054823c240ffc92/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=41db8c4733b34d56834162c4d054823c240ffc92",
        "patch": "@@ -38,6 +38,9 @@\n #include <boost/foreach.hpp>\n #include <boost/scoped_ptr.hpp>\n \n+/** Maximum size of http request (request line + headers) */\n+static const size_t MAX_HEADERS_SIZE = 8192;\n+\n /** HTTP request work item */\n class HTTPWorkItem : public HTTPClosure\n {\n@@ -414,6 +417,7 @@ bool InitHTTPServer()\n     }\n \n     evhttp_set_timeout(http, GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n+    evhttp_set_max_headers_size(http, MAX_HEADERS_SIZE);\n     evhttp_set_max_body_size(http, MAX_SIZE);\n     evhttp_set_gencb(http, http_request_cb, NULL);\n "
      }
    ]
  }
]