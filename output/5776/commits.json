[
  {
    "sha": "8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTE3ZTk3MDllODgzZWY1OTYwM2Q1NmI0NWRkMmUwNmY4YjdjN2Q3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-02-09T10:19:01Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-03-09T09:58:17Z"
      },
      "message": "[Qt] rework setNumBlocks to have blockDate as parameter\n\n- reduces some functional overhead and simplifies the code",
      "tree": {
        "sha": "7534aee2b8a461e0ff470b9ad2ff95909ff26df4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7534aee2b8a461e0ff470b9ad2ff95909ff26df4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "513e0252391688b919f1b08980c5759a515c341b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/513e0252391688b919f1b08980c5759a515c341b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/513e0252391688b919f1b08980c5759a515c341b"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 28,
      "deletions": 23
    },
    "files": [
      {
        "sha": "1ec968ff2bee20b23d6b4bb3105b810776062d91",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
        "patch": "@@ -436,8 +436,8 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         setNumConnections(clientModel->getNumConnections());\n         connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        setNumBlocks(clientModel->getNumBlocks());\n-        connect(clientModel, SIGNAL(numBlocksChanged(int)), this, SLOT(setNumBlocks(int)));\n+        setNumBlocks(clientModel->getNumBlocks(), clientModel->getLastBlockDate());\n+        connect(clientModel, SIGNAL(numBlocksChanged(int,QDateTime)), this, SLOT(setNumBlocks(int,QDateTime)));\n \n         // Receive and report messages from client model\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n@@ -653,7 +653,7 @@ void BitcoinGUI::setNumConnections(int count)\n     labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n }\n \n-void BitcoinGUI::setNumBlocks(int count)\n+void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate)\n {\n     if(!clientModel)\n         return;\n@@ -681,9 +681,8 @@ void BitcoinGUI::setNumBlocks(int count)\n \n     QString tooltip;\n \n-    QDateTime lastBlockDate = clientModel->getLastBlockDate();\n     QDateTime currentDate = QDateTime::currentDateTime();\n-    qint64 secs = lastBlockDate.secsTo(currentDate);\n+    qint64 secs = blockDate.secsTo(currentDate);\n \n     tooltip = tr(\"Processed %n blocks of transaction history.\", \"\", count);\n "
      },
      {
        "sha": "5a289a90460025a7a9b87542e9b024580babeda1",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
        "patch": "@@ -143,8 +143,8 @@ class BitcoinGUI : public QMainWindow\n public slots:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n-    /** Set number of blocks shown in the UI */\n-    void setNumBlocks(int count);\n+    /** Set number of blocks and last block date shown in the UI */\n+    void setNumBlocks(int count, const QDateTime& blockDate);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title"
      },
      {
        "sha": "dc32f8157100031c59a2b87b3ea60ca63190d885",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
        "patch": "@@ -18,7 +18,6 @@\n \n #include <stdint.h>\n \n-#include <QDateTime>\n #include <QDebug>\n #include <QTimer>\n \n@@ -29,6 +28,7 @@ ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n     optionsModel(optionsModel),\n     peerTableModel(0),\n     cachedNumBlocks(0),\n+    cachedBlockDate(QDateTime()),\n     cachedReindexing(0),\n     cachedImporting(0),\n     pollTimer(0)\n@@ -79,10 +79,11 @@ quint64 ClientModel::getTotalBytesSent() const\n QDateTime ClientModel::getLastBlockDate() const\n {\n     LOCK(cs_main);\n+\n     if (chainActive.Tip())\n         return QDateTime::fromTime_t(chainActive.Tip()->GetBlockTime());\n-    else\n-        return QDateTime::fromTime_t(Params().GenesisBlock().GetBlockTime()); // Genesis block's time of current network\n+\n+    return QDateTime::fromTime_t(Params().GenesisBlock().GetBlockTime()); // Genesis block's time of current network\n }\n \n double ClientModel::getVerificationProgress() const\n@@ -97,21 +98,26 @@ void ClientModel::updateTimer()\n     // periodical polls if the core is holding the locks for a longer time -\n     // for example, during a wallet rescan.\n     TRY_LOCK(cs_main, lockMain);\n-    if(!lockMain)\n+    if (!lockMain)\n         return;\n+\n     // Some quantities (such as number of blocks) change so fast that we don't want to be notified for each change.\n     // Periodically check and update with a timer.\n     int newNumBlocks = getNumBlocks();\n+    QDateTime newBlockDate = getLastBlockDate();\n \n     // check for changed number of blocks we have, number of blocks peers claim to have, reindexing state and importing state\n     if (cachedNumBlocks != newNumBlocks ||\n-        cachedReindexing != fReindex || cachedImporting != fImporting)\n+        cachedBlockDate != newBlockDate ||\n+        cachedReindexing != fReindex ||\n+        cachedImporting != fImporting)\n     {\n         cachedNumBlocks = newNumBlocks;\n+        cachedBlockDate = newBlockDate;\n         cachedReindexing = fReindex;\n         cachedImporting = fImporting;\n \n-        emit numBlocksChanged(newNumBlocks);\n+        emit numBlocksChanged(newNumBlocks, newBlockDate);\n     }\n \n     emit bytesChanged(getTotalBytesRecv(), getTotalBytesSent());"
      },
      {
        "sha": "214701810c0dff36dabcc3aa77fe17e989685e1f",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_QT_CLIENTMODEL_H\n \n #include <QObject>\n+#include <QDateTime>\n \n class AddressTableModel;\n class OptionsModel;\n@@ -15,7 +16,6 @@ class TransactionTableModel;\n class CWallet;\n \n QT_BEGIN_NAMESPACE\n-class QDateTime;\n class QTimer;\n QT_END_NAMESPACE\n \n@@ -73,6 +73,7 @@ class ClientModel : public QObject\n     PeerTableModel *peerTableModel;\n \n     int cachedNumBlocks;\n+    QDateTime cachedBlockDate;\n     bool cachedReindexing;\n     bool cachedImporting;\n \n@@ -83,7 +84,7 @@ class ClientModel : public QObject\n \n signals:\n     void numConnectionsChanged(int count);\n-    void numBlocksChanged(int count);\n+    void numBlocksChanged(int count, const QDateTime& blockDate);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n "
      },
      {
        "sha": "ccde44fb29a781bc8dc50ba896febba5606b06c6",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
        "patch": "@@ -293,8 +293,8 @@ void RPCConsole::setClientModel(ClientModel *model)\n         setNumConnections(model->getNumConnections());\n         connect(model, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        setNumBlocks(model->getNumBlocks());\n-        connect(model, SIGNAL(numBlocksChanged(int)), this, SLOT(setNumBlocks(int)));\n+        setNumBlocks(model->getNumBlocks(), model->getLastBlockDate());\n+        connect(model, SIGNAL(numBlocksChanged(int,QDateTime)), this, SLOT(setNumBlocks(int,QDateTime)));\n \n         updateTrafficStats(model->getTotalBytesRecv(), model->getTotalBytesSent());\n         connect(model, SIGNAL(bytesChanged(quint64,quint64)), this, SLOT(updateTrafficStats(quint64, quint64)));\n@@ -404,11 +404,10 @@ void RPCConsole::setNumConnections(int count)\n     ui->numberOfConnections->setText(connections);\n }\n \n-void RPCConsole::setNumBlocks(int count)\n+void RPCConsole::setNumBlocks(int count, const QDateTime& blockDate)\n {\n     ui->numberOfBlocks->setText(QString::number(count));\n-    if(clientModel)\n-        ui->lastBlockTime->setText(clientModel->getLastBlockDate().toString());\n+    ui->lastBlockTime->setText(blockDate.toString());\n }\n \n void RPCConsole::on_lineEdit_returnPressed()"
      },
      {
        "sha": "8737be35d1a180f7d7070c2dc094174381824825",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
        "patch": "@@ -63,8 +63,8 @@ public slots:\n     void message(int category, const QString &message, bool html = false);\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n-    /** Set number of blocks shown in the UI */\n-    void setNumBlocks(int count);\n+    /** Set number of blocks and last block date shown in the UI */\n+    void setNumBlocks(int count, const QDateTime& blockDate);\n     /** Go forward or back in history */\n     void browseHistory(int offset);\n     /** Scroll console view to end */"
      },
      {
        "sha": "4f3230a8c9e8caaf9a18fb25e6a566b4b2e6e544",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8517e9709e883ef59603d56b45dd2e06f8b7c7d7/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=8517e9709e883ef59603d56b45dd2e06f8b7c7d7",
        "patch": "@@ -121,7 +121,7 @@ void SendCoinsDialog::setClientModel(ClientModel *clientModel)\n     this->clientModel = clientModel;\n \n     if (clientModel) {\n-        connect(clientModel, SIGNAL(numBlocksChanged(int)), this, SLOT(updateSmartFeeLabel()));\n+        connect(clientModel, SIGNAL(numBlocksChanged(int,QDateTime)), this, SLOT(updateSmartFeeLabel()));\n     }\n }\n "
      }
    ]
  }
]