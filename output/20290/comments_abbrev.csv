MarcoFalke,2020-11-03 07:36:52,review ACK 28f8cb13d4d5a3d6aefa6e192e55f9aa87579e52,https://github.com/bitcoin/bitcoin/pull/20290#issuecomment-720953930,720953930,
MarcoFalke,2020-11-03 09:02:49,"Could make sense to check that witness isn't created with the legacy decoding?\n\n```diff\ndiff --git a/src/test/fuzz/decode_tx.cpp b/src/test/fuzz/decode_tx.cpp\nindex a29686cbdd..6bbebc1478 100644\n--- a/src/test/fuzz/decode_tx.cpp\n+++ b/src/test/fuzz/decode_tx.cpp\n@@ -20,6 +20,9 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     const bool result_try_witness = DecodeHexT",https://github.com/bitcoin/bitcoin/pull/20290#issuecomment-720989597,720989597,
mjdietzx,2020-11-03 01:14:16,"nit: to me it made more sense what this was doing when stepping back and rewriting it like this:\n```c++\nassert(!result_none);\nif (result_try_witness) {\n    assert(result_try_witness_and_maybe_no_witness);\n} if (result_try_no_witness) {\n    assert(result_try_witness_and_maybe_no_witness);\n}\n```\nidk if it would be more logical to use `else if` here",https://github.com/bitcoin/bitcoin/pull/20290#discussion_r516379784,516379784,src/test/fuzz/decode_tx.cpp
mjdietzx,2020-11-03 01:18:00,"or maybe even cleaner:\n```c++\nassert(!result_none);\nif (result_try_witness || result_try_no_witness) {\n    assert(result_try_witness_and_maybe_no_witness);\n}\n```",https://github.com/bitcoin/bitcoin/pull/20290#discussion_r516380746,516380746,src/test/fuzz/decode_tx.cpp
mjdietzx,2020-11-03 01:20:30,"maybe I'm not thinking about this right though.. I do see how this can be different. Fuzzing is new to me, interested to see what you think (or if I'm wrong here)",https://github.com/bitcoin/bitcoin/pull/20290#discussion_r516381420,516381420,src/test/fuzz/decode_tx.cpp
