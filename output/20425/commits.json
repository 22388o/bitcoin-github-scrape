[
  {
    "sha": "17a5f172fa9ec509b1c3f950ee8dfb6f025534d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2E1ZjE3MmZhOWVjNTA5YjFjM2Y5NTBlZThkZmI2ZjAyNTUzNGQy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-19T10:43:00Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-19T17:21:55Z"
      },
      "message": "fuzz: Make addrman fuzzing harness deterministic",
      "tree": {
        "sha": "084e4fafaa6c1672c3f91d95c91b2d96f3e2ef01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/084e4fafaa6c1672c3f91d95c91b2d96f3e2ef01"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3457054c61d5b74800797e2c26a8126a21352382",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3457054c61d5b74800797e2c26a8126a21352382",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3457054c61d5b74800797e2c26a8126a21352382"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ae595be74272ce8d6f7849ce2c44cea2a64f2b0d",
        "filename": "src/test/fuzz/addrman.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2/src/test/fuzz/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2/src/test/fuzz/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addrman.cpp?ref=17a5f172fa9ec509b1c3f950ee8dfb6f025534d2",
        "patch": "@@ -22,12 +22,22 @@ void initialize()\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n+class CAddrManDeterministic : public CAddrMan\n+{\n+public:\n+    void MakeDeterministic(const uint256& random_seed)\n+    {\n+        insecure_rand = FastRandomContext{random_seed};\n+        Clear();\n+    }\n+};\n+\n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n-\n     SetMockTime(ConsumeTime(fuzzed_data_provider));\n-    CAddrMan addr_man;\n+    CAddrManDeterministic addr_man;\n+    addr_man.MakeDeterministic(ConsumeUInt256(fuzzed_data_provider));\n     if (fuzzed_data_provider.ConsumeBool()) {\n         addr_man.m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n         if (!SanityCheckASMap(addr_man.m_asmap)) {"
      },
      {
        "sha": "452651d93f4a4cc832d72d9a3566ae6c8b40f7c8",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17a5f172fa9ec509b1c3f950ee8dfb6f025534d2/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=17a5f172fa9ec509b1c3f950ee8dfb6f025534d2",
        "patch": "@@ -98,7 +98,8 @@ NODISCARD inline CAmount ConsumeMoney(FuzzedDataProvider& fuzzed_data_provider)\n \n NODISCARD inline int64_t ConsumeTime(FuzzedDataProvider& fuzzed_data_provider) noexcept\n {\n-    static const int64_t time_min = ParseISO8601DateTime(\"1970-01-01T00:00:00Z\");\n+    // Avoid t=0 (1970-01-01T00:00:00Z) since SetMockTime(0) is a no-op.\n+    static const int64_t time_min = ParseISO8601DateTime(\"1970-01-01T00:00:01Z\");\n     static const int64_t time_max = ParseISO8601DateTime(\"9999-12-31T23:59:59Z\");\n     return fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(time_min, time_max);\n }"
      }
    ]
  }
]