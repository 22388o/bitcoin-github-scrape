[
  {
    "sha": "9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTE5YTlhNDIwMmNkNWZjYWFhZDZkNGNmMGJmNmJhZDM4YTI3MzY5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-03-05T12:01:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-03-06T11:45:26Z"
      },
      "message": "Add correct bool combiner for net signals",
      "tree": {
        "sha": "d89c628e0de68971753dbaa9d67b707ba3ebc1ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d89c628e0de68971753dbaa9d67b707ba3ebc1ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84a05b843b8ab704266289de67c9779ad733a196",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84a05b843b8ab704266289de67c9779ad733a196",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84a05b843b8ab704266289de67c9779ad733a196"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 34,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e500536cb4912f5175f54868371644ceebd159f3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369",
        "patch": "@@ -76,12 +76,27 @@ void SocketSendData(CNode *pnode);\n \n typedef int NodeId;\n \n+struct CombinerAll\n+{\n+    typedef bool result_type;\n+\n+    template<typename I>\n+    bool operator()(I first, I last) const\n+    {\n+        while (first != last) {\n+            if (!(*first)) return false;\n+            ++first;\n+        }\n+        return true;\n+    }\n+};\n+\n // Signals for message handling\n struct CNodeSignals\n {\n     boost::signals2::signal<int ()> GetHeight;\n-    boost::signals2::signal<bool (CNode*)> ProcessMessages;\n-    boost::signals2::signal<bool (CNode*, bool)> SendMessages;\n+    boost::signals2::signal<bool (CNode*), CombinerAll> ProcessMessages;\n+    boost::signals2::signal<bool (CNode*, bool), CombinerAll> SendMessages;\n     boost::signals2::signal<void (NodeId, const CNode*)> InitializeNode;\n     boost::signals2::signal<void (NodeId)> FinalizeNode;\n };"
      },
      {
        "sha": "5e968c26fff90f4ed6c629666e0d9e7e91402f4a",
        "filename": "src/test/main_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369/src/test/main_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369/src/test/main_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/main_tests.cpp?ref=9519a9a4202cd5fcaaad6d4cf0bf6bad38a27369",
        "patch": "@@ -21,4 +21,21 @@ BOOST_AUTO_TEST_CASE(subsidy_limit_test)\n     BOOST_CHECK(nSum == 2099999997690000ULL);\n }\n \n+bool ReturnFalse() { return false; }\n+bool ReturnTrue() { return true; }\n+\n+BOOST_AUTO_TEST_CASE(test_combiner_all)\n+{\n+    boost::signals2::signal<bool (), CombinerAll> Test;\n+    BOOST_CHECK(Test());\n+    Test.connect(&ReturnFalse);\n+    BOOST_CHECK(!Test());\n+    Test.connect(&ReturnTrue);\n+    BOOST_CHECK(!Test());\n+    Test.disconnect(&ReturnFalse);\n+    BOOST_CHECK(Test());\n+    Test.disconnect(&ReturnTrue);\n+    BOOST_CHECK(Test());\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]