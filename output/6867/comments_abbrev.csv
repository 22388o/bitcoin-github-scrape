jgarzik,2015-10-21T23:59:45Z,"ut ACK\n\nNeeds some measuring - I do not expect any overhead, given that messages are composed and then sent to write(2), as much as write(2) will swallow.  Should create packets as large as path MTU and conditions will permit.\n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150057469,150057469,
gmaxwell,2015-10-22T00:15:52Z,"Gavin did a test which was basically the right test for measuring the performance impact, I pinged him and asked him to try this.\n\nWe do have some messages that are fairly small-- things like pings. There will be some amplification as a result, but I doubt it will be much. I'll see if I can figure out a setup for measuring that. \n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150060068,150060068,
ptschip,2015-10-22T00:23:50Z,"I think you'll also need it in SocketSendData:\n\n```\n   -int nBytes = send(pnode->hSocket, &data[pnode->nSendOffset], data.size() - pnode->nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n   +int nBytes = send(pnode->hSocket, &data[pnode->nSendOffset], data.size() - pnode->nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT | TCP_NODELAY);\n```\n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150062143,150062143,
sdaftuar,2015-10-22T00:30:08Z,"I ran my test (similar to gavin's, testing block relay at the tip on regtest) and this brings the time from receiving the `inv` to receiving the block down to (just over) the round-trip time between the peers.\n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150062902,150062902,
gmaxwell,2015-10-22T00:30:36Z,@ptschip I don't believe so. Have a citation?\n,https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150062947,150062947,
ptschip,2015-10-22T00:47:59Z,@gmaxwell   I think what I was thinking of was the outgoing connections also need it. I didn't see you had that already covered.  My eyes are a bit blurry tonight.  \n\nLooks good.\n,https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150065372,150065372,
TheBlueMatt,2015-10-22T00:50:45Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150065707,150065707,
theuni,2015-10-22T01:08:23Z,@gmaxwell Are you sure this option is inherited by accept()ed sockets?\n,https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150069005,150069005,
laanwj,2015-10-22T09:54:48Z,"> @gmaxwell Are you sure this option is inherited by accept()ed sockets?\n\n[Is TCP_NODELAY inherited from listening sockets on your platform?](https://gist.github.com/gregorycollins/3900556)  seems to indicate ""yes"" here, but I'm not sure either that's a safe assumption cross-platform.\nLet's add it to accepted sockets too just to be sure.\n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150165507,150165507,
gavinandresen,2015-10-22T14:25:19Z,"Tested ACK, on OSX and Linux.\n\nDecreases a 4-hop cross-country-twice block relay from 1.3 seconds to 0.7 seconds.\n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150240309,150240309,
theuni,2015-10-22T15:56:10Z,"@laanwj nice link. Interestingly, osx (here, anyway) inherits TCP_NODELAY, but not O_NONBLOCK! That seems suspicious, as I assume that would be pretty obvious. I'll investigate separately.\n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150270146,150270146,
gmaxwell,2015-10-22T18:00:07Z,"Updated to set it on the accepted sockets as well, ""just in case"".\n",https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150306843,150306843,
btcdrak,2015-10-23T06:19:52Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150487327,150487327,
laanwj,2015-10-23T07:09:32Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6867#issuecomment-150494227,150494227,
