Xekyo,2014-09-13T00:50:44Z,"This is the first time I am trying to collaborate on an open-source project, please feel free to point out when I am doing something wrong.\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-55476637,55476637,
BitcoinPullTester,2014-09-13T01:02:51Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4906_3b92ce7ad950ceba14f1cc6ad637923f71ca61be/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-55477064,55477064,
Xekyo,2014-09-13T01:38:07Z,"I was made aware by @sipa that a candidate set that ended up matching the targetValue with the addition of a dust UTXO would still be picked immediately. That seems to be correct.\n\nHowever, unless one is trying to make a minuscule payment, it seems that the likelihood to add a bigger UTXO at some point that would exceed the target should be sufficiently larger, than the chance that you'd only ad",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-55478037,55478037,
gmaxwell,2014-09-15T22:31:58Z,"Have you simulated this, e.g. how a wallet progressed over time?  I would expect this to result in grinding down the wallet into lots of dust change over time even worse than the current approach. \n\nGenerally, so long as it doesn't result in bloating things up to the point where the transaction confirms slowly, we should generally prefer to make transactions bigger (under the rational that trans",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-55669171,55669171,
Xekyo,2014-09-18T11:11:05Z,"@gmaxwell I had not simulated it in advance. I will do so though, just haven't gotten around to it yet. Perhaps I'll get around to it this evening, otherwise I will probably get around to it tomorrow.\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-56024544,56024544,
Xekyo,2014-09-23T08:29:10Z,"@gmaxwell So, I have done some simulations. \nMy approach was:\n• To recreate the wallet logic in Python. \n• To add the pruning feature conditionally\n• To have a wallet of each type, starting wtih the same utxopool, execute and receive a number of payments.\n• They obviously end up with the same amount, and I can compare the number and sizes of final utxo.\n\nSo far I have tried a few different ",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-56489310,56489310,
gmaxwell,2014-10-08T08:19:25Z,"Please keep us updated on your progress. If you'd like some more eyes on your testing code, feel free to point it out.\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-58324991,58324991,
Xekyo,2014-10-11T13:07:08Z,"@gmaxwell The code for my simulation can be found here: https://github.com/Xekyo/CoinSelectionSimulator\n\nIt is working now, and can be executed in bearable time, but the code could be a bit clearer. I am currently in my exam period and haven't had as much time to work on it, as I would like.\n\nI have tried a few different strategies to select coins, and have been experimenting with different di",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-58748938,58748938,
Xekyo,2014-10-19T12:59:38Z,"Hi,\nFinished with my exams for this semester, finally had time to pick this up again.\n\n(When I created the .csv files with my output, I realized that my random models would sometimes generate spending instructions that asked for more than the wallet's current value. While those were were ignored as impossible, they still got into the statistics, so I wanted to fix that first.)\n\nI've been thin",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-59649061,59649061,
gmaxwell,2014-10-20T07:48:28Z,Very interesting results!\n,https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-59697782,59697782,
gmaxwell,2014-10-20T07:59:20Z,"> Consolidate small UTXO? Once created, very small UTXO are in the blockchain anyway. Is it preferable to spend very small UTXO, in order to remove them from the UTXO-pool\n\nIt's preferable to spend them: since it reduces the storage for a minimal full node (see the pruning patches in #4701)... subject to the restriction that you don't want someone to be able to gratitiously increase your transac",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-59698734,59698734,
RHavar,2015-02-18T14:34:46Z,"> Some questions I haven't been able to answer satisfyingly:\n> \n> What would constitute realistic data for incoming and outgoing transactions of one wallet (how many incoming/outgoing transactions, what average size and distributions for each direction, is it necessary to regard the change in value over time)?\n\nPerhaps I can help. I have data from MoneyPot.com's hot wallet which you can use fo",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-74872926,74872926,
jgarzik,2015-07-23T18:15:31Z,"This PR has been open for a while, but garnered no ACKs.  The author seems to have put a fair amount of time and thought into it.  However, this definitely needs more review and testing.\n\nPing, maintainers/testers/helpers?\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-124192303,124192303,
Xekyo,2015-07-23T21:28:16Z,"@jgarzik: Hi Jeff,\nThanks for the ping. \nI had lost track of this, but I see now that @RHavar posted data that might help to explore what the patch would do with some realistic data for transaction sizes. I'll have a look this weekend.\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-124244795,124244795,
Xekyo,2015-09-01T07:52:09Z,"I've created another testcase using the MoneyPot.com data. On that one, I get different results yet again, this time the Regular wallet has the least UTXO in the end.\n\nLooking over the results, I noticed that all wallets created a change output in the single digit satoshis. Do I remember correctly that the wallet shouldn't create Dust Outputs? Shouldn't the change be at least 540 satoshis? If so",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-136619231,136619231,
MarcoFalke,2015-09-23T09:20:33Z,"@Xekyo:\n\n> prune extraneous inputs\n\nWouldn't ""extraneous inputs"" imply an issue in the coin selection algorithm which should be fixed instead? I invite you to look at #6696 which is a different approach. I am happy to shoot up some simulations if anyone is interested. (Ping me at the other PR)\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-142539748,142539748,
laanwj,2015-11-20T15:41:25Z,"From what I understand ApproximateBestSubset is an approximate algorithm for the following:\n\n```\nInput: [sizes], nLow, nTarget\nOutput: X=subset([sizes]) for which nTargetValue <= sum(X) < nLow\n        and sum(X)-nTargetValue as small as possible\n```\n\nThe ""approximate"" part means that it may select a solution which is not the optimal one (e.g. sum(X)-nTargetValue is not really as small as p",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-158436086,158436086,
MarcoFalke,2015-11-20T16:10:50Z,@laanwj Great that you had a look at this.\n\n> vValue is sorted from low to high ...\n\nGuess I missed that during review.\n\n> unit test\n\n@Xekyo are you still working on this? Should I take over?\n,https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-158445938,158445938,
Xekyo,2015-11-21T12:30:26Z,"Hi,\n\nAm 20.11.2015 11:11 schrieb ""MarcoFalke"" notifications@github.com:\n\n> @Xekyo are you still working on this? Should I take over?\n\nI'd be interested to take another look, but I'm currently traveling. Please\nfeel free to take over. Otherwise, I'll check it out in December.\n\nXekyo\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-158635121,158635121,
Xekyo,2015-12-06T21:27:36Z,"@laanwj I've edited my fork to move the post-processing step to the end of ApproximateBestSubset. However, this patch may cause fewer dust outputs to be spent which contradicts [Greg's assessment](https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-59698734) above. Are you sure about ""cannot make things worse""? I feel my simulations have been somewhat inconclusive on that point.\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-162349078,162349078,
Xekyo,2015-12-06T22:30:48Z,"@MarcoFalke I realized my mistake and fixed it. After all my commits, I did the rebase as you suggested, and pushed to ""Fix-#1643"". I hope I did that right. :)\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-162354532,162354532,
Xekyo,2015-12-06T23:26:18Z,"I've added a simple test with\n\n```\n   vValues = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 100, 100]\n   nTargetValue = 222\n```\n\nwith an expected `nBest == 230` on one iteration.\n\nSorry, I'm not sure how I would run the test on my machine right now, so I figured I'd just push it. I'll check back tomorrow.\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-162367721,162367721,
laanwj,2015-12-07T16:35:37Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-162582600,162582600,
Xekyo,2015-12-07T16:38:35Z,I rebased and used fixup on the commits that only fixed previous mistakes.\n,https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-162584120,162584120,
Xekyo,2015-12-07T19:12:06Z,"@laanwj Travis had cleared my patch just when I realized that I had also messed up the indentation on the test. I've rebased it into two commits, one commit for the code, and one for the test. I expect this to turn green again momentarily. Sorry for keeping Travis so busy. :(\n\nIs there anything else that needs to be done about this PR? \n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-162628014,162628014,
MarcoFalke,2015-12-09T13:01:45Z,Wallet code itself looks good! Post-merge Tested ACK.\n\n@Xekyo Thanks for sticking with this so long! There seems to be a small issue with the test code but I will create another PR for this...\n\nNote @laanwj: vValue is **not** sorted from low to high but from high to low but I think you meant it the right way. ;)\n,https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-163222364,163222364,
MarcoFalke,2015-12-09T13:10:07Z,"Oh, and you mentioned this will improve cases such as #1643. Which is not true, at least for this very transaction mentioned in #1643.\n\nStill, I assume pruning will help for really large wallets (like the ones of exchanges or heavy users) when they have a odd distribution of input amount sizes.\n",https://github.com/bitcoin/bitcoin/pull/4906#issuecomment-163225809,163225809,
MarcoFalke,2015-12-07T11:52:37Z,I think you can just add this to `src/wallet/test/wallet_tests.cpp`.\n,https://github.com/bitcoin/bitcoin/pull/4906#discussion_r46812792,46812792,src/test/coinselection_tests.cpp
Xekyo,2015-12-07T15:50:28Z,"Ah thanks, I had been wondering why there was no wallet tests in the regular test directory.\n",https://github.com/bitcoin/bitcoin/pull/4906#discussion_r46835951,46835951,src/test/coinselection_tests.cpp
laanwj,2015-12-07T16:19:09Z,Nit: indentation\n,https://github.com/bitcoin/bitcoin/pull/4906#discussion_r46840187,46840187,src/wallet/wallet.cpp
laanwj,2015-12-07T16:21:29Z,"This (along with `&& !fReachedTarget` is a new, different change to the algorithm than the post-processing step initially proposed.\n\nI think we should separate these into different PRs, the postprocessing to remove extraneous outputs below is obviously correct, but I'm not sure about this.\n",https://github.com/bitcoin/bitcoin/pull/4906#discussion_r46840536,46840536,src/wallet/wallet.cpp
Xekyo,2015-12-07T16:25:22Z,"@laanwj Fair enough, I'll take it out and create another PR later.\n",https://github.com/bitcoin/bitcoin/pull/4906#discussion_r46841049,46841049,src/wallet/wallet.cpp
Xekyo,2015-12-07T16:30:29Z,I've replaced the tab with four spaces.\n,https://github.com/bitcoin/bitcoin/pull/4906#discussion_r46841790,46841790,src/wallet/wallet.cpp
