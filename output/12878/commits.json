[
  {
    "sha": "11b6b5b86e7dab05be38d614891dd6e6031d04a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWI2YjViODZlN2RhYjA1YmUzOGQ2MTQ4OTFkZDZlNjAzMWQwNGE0",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:00:00Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:02Z"
      },
      "message": "Move ChainNameFromCommandLine into ArgsManager and rename to GetChainName",
      "tree": {
        "sha": "3401eabbf1991c95c811a03984f8015429e39b0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3401eabbf1991c95c811a03984f8015429e39b0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11b6b5b86e7dab05be38d614891dd6e6031d04a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11b6b5b86e7dab05be38d614891dd6e6031d04a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11b6b5b86e7dab05be38d614891dd6e6031d04a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11b6b5b86e7dab05be38d614891dd6e6031d04a4/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f0c6a7b0e47e03f848dc992d37fe209dd9c6975",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f0c6a7b0e47e03f848dc992d37fe209dd9c6975",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f0c6a7b0e47e03f848dc992d37fe209dd9c6975"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 27,
      "deletions": 27
    },
    "files": [
      {
        "sha": "26a92313080b08576a38f6bf6c3ceb519c6a4fcb",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -114,7 +114,7 @@ static int AppInitRPC(int argc, char* argv[])\n     }\n     // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n     try {\n-        SelectBaseParams(ChainNameFromCommandLine());\n+        SelectBaseParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return EXIT_FAILURE;"
      },
      {
        "sha": "deb8212a8fcea600a1daa1af0df3572bbe6a47b4",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -44,7 +44,7 @@ static int AppInitRawTx(int argc, char* argv[])\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n-        SelectParams(ChainNameFromCommandLine());\n+        SelectParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return EXIT_FAILURE;"
      },
      {
        "sha": "8d08f413acf11edb0fb9ae415423ef0d53b0c097",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -111,7 +111,7 @@ bool AppInit(int argc, char* argv[])\n         }\n         // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         try {\n-            SelectParams(ChainNameFromCommandLine());\n+            SelectParams(gArgs.GetChainName());\n         } catch (const std::exception& e) {\n             fprintf(stderr, \"Error: %s\\n\", e.what());\n             return false;"
      },
      {
        "sha": "c51a3fc9609a6e53d713d7e8f4c1da6373ab4cbd",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -49,17 +49,3 @@ void SelectBaseParams(const std::string& chain)\n {\n     globalChainBaseParams = CreateBaseChainParams(chain);\n }\n-\n-std::string ChainNameFromCommandLine()\n-{\n-    bool fRegTest = gArgs.GetBoolArg(\"-regtest\", false);\n-    bool fTestNet = gArgs.GetBoolArg(\"-testnet\", false);\n-\n-    if (fTestNet && fRegTest)\n-        throw std::runtime_error(\"Invalid combination of -regtest and -testnet.\");\n-    if (fRegTest)\n-        return CBaseChainParams::REGTEST;\n-    if (fTestNet)\n-        return CBaseChainParams::TESTNET;\n-    return CBaseChainParams::MAIN;\n-}"
      },
      {
        "sha": "5b11f3677057fa766381acafe3f8e17320e22d59",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -54,10 +54,4 @@ const CBaseChainParams& BaseParams();\n /** Sets the params returned by Params() to those for the given network. */\n void SelectBaseParams(const std::string& chain);\n \n-/**\n- * Looks for -regtest, -testnet and returns the appropriate BIP70 chain name.\n- * @return CBaseChainParams::MAX_NETWORK_TYPES if an invalid combination is given. CBaseChainParams::MAIN by default.\n- */\n-std::string ChainNameFromCommandLine();\n-\n #endif // BITCOIN_CHAINPARAMSBASE_H"
      },
      {
        "sha": "a663b61109f72ccc009920eb008ecb4b97cd8ee4",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -630,7 +630,7 @@ int main(int argc, char *argv[])\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n-        node->selectParams(ChainNameFromCommandLine());\n+        node->selectParams(gArgs.GetChainName());\n     } catch(std::exception &e) {\n         QMessageBox::critical(0, QObject::tr(PACKAGE_NAME), QObject::tr(\"Error: %1\").arg(e.what()));\n         return EXIT_FAILURE;"
      },
      {
        "sha": "5bf1b5cf59e89c96bcab0b96fc141f1b4a417afe",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -599,7 +599,7 @@ TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* t\n #ifdef WIN32\n fs::path static StartupShortcutPath()\n {\n-    std::string chain = ChainNameFromCommandLine();\n+    std::string chain = gArgs.GetChainName();\n     if (chain == CBaseChainParams::MAIN)\n         return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n     if (chain == CBaseChainParams::TESTNET) // Remove this special case when CBaseChainParams::TESTNET = \"testnet4\"\n@@ -697,7 +697,7 @@ fs::path static GetAutostartDir()\n \n fs::path static GetAutostartFilePath()\n {\n-    std::string chain = ChainNameFromCommandLine();\n+    std::string chain = gArgs.GetChainName();\n     if (chain == CBaseChainParams::MAIN)\n         return GetAutostartDir() / \"bitcoin.desktop\";\n     return GetAutostartDir() / strprintf(\"bitcoin-%s.lnk\", chain);\n@@ -739,7 +739,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         fs::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n-        std::string chain = ChainNameFromCommandLine();\n+        std::string chain = gArgs.GetChainName();\n         // Write a bitcoin.desktop file to the autostart directory:\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";"
      },
      {
        "sha": "6dfb12f8e7c03c2f2817c0e79b5594f8ae0c528f",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -764,6 +764,20 @@ void ArgsManager::ReadConfigFile(const std::string& confPath)\n     }\n }\n \n+std::string ArgsManager::GetChainName() const\n+{\n+    bool fRegTest = GetBoolArg(\"-regtest\", false);\n+    bool fTestNet = GetBoolArg(\"-testnet\", false);\n+\n+    if (fTestNet && fRegTest)\n+        throw std::runtime_error(\"Invalid combination of -regtest and -testnet.\");\n+    if (fRegTest)\n+        return CBaseChainParams::REGTEST;\n+    if (fTestNet)\n+        return CBaseChainParams::TESTNET;\n+    return CBaseChainParams::MAIN;\n+}\n+\n #ifndef WIN32\n fs::path GetPidFile()\n {"
      },
      {
        "sha": "5afe80cb062e426f49c89ed1ea2e917f0ab8d094",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11b6b5b86e7dab05be38d614891dd6e6031d04a4/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "patch": "@@ -306,6 +306,12 @@ class ArgsManager\n     // been set. Also called directly in testing.\n     void ForceSetArg(const std::string& strArg, const std::string& strValue);\n \n+    /**\n+     * Looks for -regtest, -testnet and returns the appropriate BIP70 chain name.\n+     * @return CBaseChainParams::MAIN by default; raises runtime error if an invalid combination is given.\n+     */\n+    std::string GetChainName() const;\n+\n private:\n \n     // Munge -nofoo into -foo=0 and track the value as negated."
      }
    ]
  },
  {
    "sha": "834d3034158b6b199779d5dd218e15604798ca06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzRkMzAzNDE1OGI2YjE5OTc3OWQ1ZGQyMThlMTU2MDQ3OThjYTA2",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:01:00Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:23Z"
      },
      "message": "[tests] Add unit tests for GetChainName",
      "tree": {
        "sha": "dfc7ba00e4ef977a718aa5864237548a23dfef86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfc7ba00e4ef977a718aa5864237548a23dfef86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/834d3034158b6b199779d5dd218e15604798ca06",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/834d3034158b6b199779d5dd218e15604798ca06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/834d3034158b6b199779d5dd218e15604798ca06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/834d3034158b6b199779d5dd218e15604798ca06/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11b6b5b86e7dab05be38d614891dd6e6031d04a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11b6b5b86e7dab05be38d614891dd6e6031d04a4"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b545fdc5d75839936408672e1d450d5eb5302a23",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/834d3034158b6b199779d5dd218e15604798ca06/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/834d3034158b6b199779d5dd218e15604798ca06/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=834d3034158b6b199779d5dd218e15604798ca06",
        "patch": "@@ -290,6 +290,31 @@ BOOST_AUTO_TEST_CASE(util_GetArg)\n     BOOST_CHECK_EQUAL(testArgs.GetBoolArg(\"booltest4\", false), true);\n }\n \n+BOOST_AUTO_TEST_CASE(util_GetChainName)\n+{\n+    TestArgsManager test_args;\n+\n+    const char* argv_testnet[] = {\"cmd\", \"-testnet\"};\n+    const char* argv_regtest[] = {\"cmd\", \"-regtest\"};\n+    const char* argv_test_no_reg[] = {\"cmd\", \"-testnet\", \"-noregtest\"};\n+    const char* argv_both[] = {\"cmd\", \"-testnet\", \"-regtest\"};\n+\n+    test_args.ParseParameters(0, (char**)argv_testnet);\n+    BOOST_CHECK_EQUAL(test_args.GetChainName(), \"main\");\n+\n+    test_args.ParseParameters(2, (char**)argv_testnet);\n+    BOOST_CHECK_EQUAL(test_args.GetChainName(), \"test\");\n+\n+    test_args.ParseParameters(2, (char**)argv_regtest);\n+    BOOST_CHECK_EQUAL(test_args.GetChainName(), \"regtest\");\n+\n+    test_args.ParseParameters(3, (char**)argv_test_no_reg);\n+    BOOST_CHECK_EQUAL(test_args.GetChainName(), \"test\");\n+\n+    test_args.ParseParameters(3, (char**)argv_both);\n+    BOOST_CHECK_THROW(test_args.GetChainName(), std::runtime_error);\n+}\n+\n BOOST_AUTO_TEST_CASE(util_FormatMoney)\n {\n     BOOST_CHECK_EQUAL(FormatMoney(0), \"0.00\");"
      }
    ]
  },
  {
    "sha": "6d5815aad0ee0614972f288cbd1c68386e801d5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDU4MTVhYWQwZWUwNjE0OTcyZjI4OGNiZDFjNjgzODZlODAxZDVk",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:02:00Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "message": "Separate out ReadConfigStream from ReadConfigFile",
      "tree": {
        "sha": "ddbe3bab22c6b8c98ccef97ef17ab88fa3b5c3c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddbe3bab22c6b8c98ccef97ef17ab88fa3b5c3c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d5815aad0ee0614972f288cbd1c68386e801d5d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d5815aad0ee0614972f288cbd1c68386e801d5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5815aad0ee0614972f288cbd1c68386e801d5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d5815aad0ee0614972f288cbd1c68386e801d5d/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "834d3034158b6b199779d5dd218e15604798ca06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/834d3034158b6b199779d5dd218e15604798ca06",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/834d3034158b6b199779d5dd218e15604798ca06"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "11b83798b8869900a6e286c7f9a91b9911db59da",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d5815aad0ee0614972f288cbd1c68386e801d5d/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d5815aad0ee0614972f288cbd1c68386e801d5d/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=6d5815aad0ee0614972f288cbd1c68386e801d5d",
        "patch": "@@ -735,18 +735,17 @@ fs::path GetConfigFile(const std::string& confPath)\n     return AbsPathForConfigVal(fs::path(confPath), false);\n }\n \n-void ArgsManager::ReadConfigFile(const std::string& confPath)\n+void ArgsManager::ReadConfigStream(std::istream& stream)\n {\n-    fs::ifstream streamConfig(GetConfigFile(confPath));\n-    if (!streamConfig.good())\n+    if (!stream.good())\n         return; // No bitcoin.conf file is OK\n \n     {\n         LOCK(cs_args);\n         std::set<std::string> setOptions;\n         setOptions.insert(\"*\");\n \n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n+        for (boost::program_options::detail::config_file_iterator it(stream, setOptions), end; it != end; ++it)\n         {\n             // Don't overwrite existing settings so command line settings override bitcoin.conf\n             std::string strKey = std::string(\"-\") + it->string_key;\n@@ -757,6 +756,13 @@ void ArgsManager::ReadConfigFile(const std::string& confPath)\n             mapMultiArgs[strKey].push_back(strValue);\n         }\n     }\n+}\n+\n+void ArgsManager::ReadConfigFile(const std::string& confPath)\n+{\n+    fs::ifstream stream(GetConfigFile(confPath));\n+    ReadConfigStream(stream);\n+\n     // If datadir is changed in .conf file:\n     ClearDatadirCache();\n     if (!fs::is_directory(GetDataDir(false))) {"
      },
      {
        "sha": "bfd3184ac29afd27d1e48734fe1fdbd1edc6be7c",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d5815aad0ee0614972f288cbd1c68386e801d5d/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d5815aad0ee0614972f288cbd1c68386e801d5d/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=6d5815aad0ee0614972f288cbd1c68386e801d5d",
        "patch": "@@ -228,6 +228,8 @@ class ArgsManager\n     std::map<std::string, std::vector<std::string>> mapMultiArgs;\n     std::unordered_set<std::string> m_negated_args;\n \n+    void ReadConfigStream(std::istream& stream);\n+\n public:\n     void ParseParameters(int argc, const char*const argv[]);\n     void ReadConfigFile(const std::string& confPath);"
      }
    ]
  },
  {
    "sha": "087c5d204015e646d65696007415d6e998764631",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODdjNWQyMDQwMTVlNjQ2ZDY1Njk2MDA3NDE1ZDZlOTk4NzY0NjMx",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:03:00Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "message": "ReadConfigStream: assume the stream is good",
      "tree": {
        "sha": "ef411ea1e5b9f7d222cc5cd024a093c5bbfec5f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef411ea1e5b9f7d222cc5cd024a093c5bbfec5f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/087c5d204015e646d65696007415d6e998764631",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/087c5d204015e646d65696007415d6e998764631",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/087c5d204015e646d65696007415d6e998764631",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/087c5d204015e646d65696007415d6e998764631/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d5815aad0ee0614972f288cbd1c68386e801d5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d5815aad0ee0614972f288cbd1c68386e801d5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5815aad0ee0614972f288cbd1c68386e801d5d"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 17,
      "deletions": 17
    },
    "files": [
      {
        "sha": "78df33e8887fab3be3102ad345a0a3603489388b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/087c5d204015e646d65696007415d6e998764631/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/087c5d204015e646d65696007415d6e998764631/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=087c5d204015e646d65696007415d6e998764631",
        "patch": "@@ -737,31 +737,31 @@ fs::path GetConfigFile(const std::string& confPath)\n \n void ArgsManager::ReadConfigStream(std::istream& stream)\n {\n-    if (!stream.good())\n-        return; // No bitcoin.conf file is OK\n+    LOCK(cs_args);\n \n-    {\n-        LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n+    std::set<std::string> setOptions;\n+    setOptions.insert(\"*\");\n \n-        for (boost::program_options::detail::config_file_iterator it(stream, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegatedOption(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n-        }\n+    for (boost::program_options::detail::config_file_iterator it(stream, setOptions), end; it != end; ++it)\n+    {\n+        // Don't overwrite existing settings so command line settings override bitcoin.conf\n+        std::string strKey = std::string(\"-\") + it->string_key;\n+        std::string strValue = it->value[0];\n+        InterpretNegatedOption(strKey, strValue);\n+        if (mapArgs.count(strKey) == 0)\n+            mapArgs[strKey] = strValue;\n+        mapMultiArgs[strKey].push_back(strValue);\n     }\n }\n \n void ArgsManager::ReadConfigFile(const std::string& confPath)\n {\n     fs::ifstream stream(GetConfigFile(confPath));\n-    ReadConfigStream(stream);\n+\n+    // ok to not have a config file\n+    if (stream.good()) {\n+        ReadConfigStream(stream);\n+    }\n \n     // If datadir is changed in .conf file:\n     ClearDatadirCache();"
      }
    ]
  },
  {
    "sha": "fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI3ZjFjMjNlMDNjOGY4ZThiMDZlYTg2YTY0MGE2MmEwZjg3Njhj",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:04:00Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "message": "[tests] Add unit tests for ReadConfigStream",
      "tree": {
        "sha": "1aabe796a723240886beab1e5118e4dd3b1481bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1aabe796a723240886beab1e5118e4dd3b1481bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "087c5d204015e646d65696007415d6e998764631",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/087c5d204015e646d65696007415d6e998764631",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/087c5d204015e646d65696007415d6e998764631"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 107,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3a0668a2b5fa8f141d301cbf89347c7b9c2381a0",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
        "patch": "@@ -190,6 +190,11 @@ struct TestArgsManager : public ArgsManager\n     std::map<std::string, std::string>& GetMapArgs() { return mapArgs; }\n     const std::map<std::string, std::vector<std::string> >& GetMapMultiArgs() { return mapMultiArgs; }\n     const std::unordered_set<std::string>& GetNegatedArgs() { return m_negated_args; }\n+    void ReadConfigString(const std::string str_config)\n+    {\n+        std::istringstream stream(str_config);\n+        ReadConfigStream(stream);\n+    }\n };\n \n BOOST_AUTO_TEST_CASE(util_ParseParameters)\n@@ -265,6 +270,108 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n     BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n }\n \n+BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n+{\n+    const char *str_config =\n+       \"a=\\n\"\n+       \"b=1\\n\"\n+       \"ccc=argument\\n\"\n+       \"ccc=multiple\\n\"\n+       \"d=e\\n\"\n+       \"nofff=1\\n\"\n+       \"noggg=0\\n\"\n+       \"h=1\\n\"\n+       \"noh=1\\n\"\n+       \"noi=1\\n\"\n+       \"i=1\\n\";\n+\n+    TestArgsManager test_args;\n+\n+    test_args.ReadConfigString(str_config);\n+    // expectation: a, b, ccc, d, fff, ggg, h, i end up in map\n+\n+    BOOST_CHECK(test_args.GetMapArgs().size() == 8);\n+    BOOST_CHECK(test_args.GetMapMultiArgs().size() == 8);\n+\n+    BOOST_CHECK(test_args.GetMapArgs().count(\"-a\")\n+                && test_args.GetMapArgs().count(\"-b\")\n+                && test_args.GetMapArgs().count(\"-ccc\")\n+                && test_args.GetMapArgs().count(\"-d\")\n+                && test_args.GetMapArgs().count(\"-fff\")\n+                && test_args.GetMapArgs().count(\"-ggg\")\n+                && test_args.GetMapArgs().count(\"-h\")\n+                && test_args.GetMapArgs().count(\"-i\")\n+               );\n+\n+    BOOST_CHECK(test_args.IsArgSet(\"-a\")\n+                && test_args.IsArgSet(\"-b\")\n+                && test_args.IsArgSet(\"-ccc\")\n+                && test_args.IsArgSet(\"-d\")\n+                && test_args.IsArgSet(\"-fff\")\n+                && test_args.IsArgSet(\"-ggg\")\n+                && test_args.IsArgSet(\"-h\")\n+                && test_args.IsArgSet(\"-i\")\n+                && !test_args.IsArgSet(\"-zzz\")\n+               );\n+\n+    BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n+                && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n+                && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n+                && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n+                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n+                && test_args.GetArg(\"-h\", \"xxx\") == \"1\" // 1st value takes precedence\n+                && test_args.GetArg(\"-i\", \"xxx\") == \"0\" // 1st value takes precedence\n+                && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n+               );\n+\n+    for (bool def : {false, true}) {\n+        BOOST_CHECK(test_args.GetBoolArg(\"-a\", def)\n+                     && test_args.GetBoolArg(\"-b\", def)\n+                     && !test_args.GetBoolArg(\"-ccc\", def)\n+                     && !test_args.GetBoolArg(\"-d\", def)\n+                     && !test_args.GetBoolArg(\"-fff\", def)\n+                     && test_args.GetBoolArg(\"-ggg\", def)\n+                     && test_args.GetBoolArg(\"-h\", def)\n+                     && !test_args.GetBoolArg(\"-i\", def)\n+                     && test_args.GetBoolArg(\"-zzz\", def) == def\n+                   );\n+    }\n+\n+    BOOST_CHECK(test_args.GetArgs(\"-a\").size() == 1\n+                && test_args.GetArgs(\"-a\").front() == \"\");\n+    BOOST_CHECK(test_args.GetArgs(\"-b\").size() == 1\n+                && test_args.GetArgs(\"-b\").front() == \"1\");\n+    BOOST_CHECK(test_args.GetArgs(\"-ccc\").size() == 2\n+                && test_args.GetArgs(\"-ccc\").front() == \"argument\"\n+                && test_args.GetArgs(\"-ccc\").back() == \"multiple\");\n+    BOOST_CHECK(test_args.GetArgs(\"-fff\").size() == 1\n+                && test_args.GetArgs(\"-fff\").front() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-nofff\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-ggg\").size() == 1\n+                && test_args.GetArgs(\"-ggg\").front() == \"1\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noggg\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-h\").size() == 2\n+                && test_args.GetArgs(\"-h\").front() == \"1\"\n+                && test_args.GetArgs(\"-h\").back() == \"0\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noh\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-i\").size() == 2\n+                && test_args.GetArgs(\"-i\").front() == \"0\"\n+                && test_args.GetArgs(\"-i\").back() == \"1\");\n+    BOOST_CHECK(test_args.GetArgs(\"-noi\").size() == 0);\n+    BOOST_CHECK(test_args.GetArgs(\"-zzz\").size() == 0);\n+\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-a\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-b\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-ccc\"));\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-d\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-fff\"));\n+    BOOST_CHECK(test_args.IsArgNegated(\"-ggg\")); // IsArgNegated==true when noggg=0\n+    BOOST_CHECK(test_args.IsArgNegated(\"-h\")); // last setting takes precedence\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-i\")); // last setting takes precedence\n+    BOOST_CHECK(!test_args.IsArgNegated(\"-zzz\"));\n+}\n+\n BOOST_AUTO_TEST_CASE(util_GetArg)\n {\n     TestArgsManager testArgs;"
      }
    ]
  },
  {
    "sha": "af173c2bec390d5a47f98e7bbf6559d50be35f07",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjE3M2MyYmVjMzkwZDVhNDdmOThlN2JiZjY1NTlkNTBiZTM1ZjA3",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-03-29T05:05:00Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:32Z"
      },
      "message": "[tests] Check GetChainName works with config entries",
      "tree": {
        "sha": "4a4b31c70886d88c6920c033db7d4a6c445c0ceb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a4b31c70886d88c6920c033db7d4a6c445c0ceb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af173c2bec390d5a47f98e7bbf6559d50be35f07",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af173c2bec390d5a47f98e7bbf6559d50be35f07",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af173c2bec390d5a47f98e7bbf6559d50be35f07",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af173c2bec390d5a47f98e7bbf6559d50be35f07/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa27f1c23e03c8f8e8b06ea86a640a62a0f8768c"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "951bc0fa520aa479325e584f4cedb419f2714a78",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af173c2bec390d5a47f98e7bbf6559d50be35f07/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af173c2bec390d5a47f98e7bbf6559d50be35f07/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=af173c2bec390d5a47f98e7bbf6559d50be35f07",
        "patch": "@@ -406,6 +406,9 @@ BOOST_AUTO_TEST_CASE(util_GetChainName)\n     const char* argv_test_no_reg[] = {\"cmd\", \"-testnet\", \"-noregtest\"};\n     const char* argv_both[] = {\"cmd\", \"-testnet\", \"-regtest\"};\n \n+    // equivalent to \"-testnet\"\n+    const char* testnetconf = \"testnet=1\\nregtest=0\\n\";\n+\n     test_args.ParseParameters(0, (char**)argv_testnet);\n     BOOST_CHECK_EQUAL(test_args.GetChainName(), \"main\");\n \n@@ -420,6 +423,26 @@ BOOST_AUTO_TEST_CASE(util_GetChainName)\n \n     test_args.ParseParameters(3, (char**)argv_both);\n     BOOST_CHECK_THROW(test_args.GetChainName(), std::runtime_error);\n+\n+    test_args.ParseParameters(0, (char**)argv_testnet);\n+    test_args.ReadConfigString(testnetconf);\n+    BOOST_CHECK_EQUAL(test_args.GetChainName(), \"test\");\n+\n+    test_args.ParseParameters(2, (char**)argv_testnet);\n+    test_args.ReadConfigString(testnetconf);\n+    BOOST_CHECK_EQUAL(test_args.GetChainName(), \"test\");\n+\n+    test_args.ParseParameters(2, (char**)argv_regtest);\n+    test_args.ReadConfigString(testnetconf);\n+    BOOST_CHECK_THROW(test_args.GetChainName(), std::runtime_error);\n+\n+    test_args.ParseParameters(3, (char**)argv_test_no_reg);\n+    test_args.ReadConfigString(testnetconf);\n+    BOOST_CHECK_EQUAL(test_args.GetChainName(), \"test\");\n+\n+    test_args.ParseParameters(3, (char**)argv_both);\n+    test_args.ReadConfigString(testnetconf);\n+    BOOST_CHECK_THROW(test_args.GetChainName(), std::runtime_error);\n }\n \n BOOST_AUTO_TEST_CASE(util_FormatMoney)"
      }
    ]
  },
  {
    "sha": "77a733a99a75bdd04ad94df830e5bdc8a6040959",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2E3MzNhOTlhNzViZGQwNGFkOTRkZjgzMGU1YmRjOGE2MDQwOTU5",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-04T05:26:33Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-04-05T18:46:39Z"
      },
      "message": "[tests] Add additional unit tests for -nofoo edge cases",
      "tree": {
        "sha": "4b6b60ed983260f4f3219ad28825d209ff5a7957",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b6b60ed983260f4f3219ad28825d209ff5a7957"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77a733a99a75bdd04ad94df830e5bdc8a6040959",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a733a99a75bdd04ad94df830e5bdc8a6040959",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77a733a99a75bdd04ad94df830e5bdc8a6040959",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a733a99a75bdd04ad94df830e5bdc8a6040959/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af173c2bec390d5a47f98e7bbf6559d50be35f07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af173c2bec390d5a47f98e7bbf6559d50be35f07",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af173c2bec390d5a47f98e7bbf6559d50be35f07"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 38,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b4af3617f1f0157f84139c0f9cc4e58428028b2d",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 2,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77a733a99a75bdd04ad94df830e5bdc8a6040959/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77a733a99a75bdd04ad94df830e5bdc8a6040959/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=77a733a99a75bdd04ad94df830e5bdc8a6040959",
        "patch": "@@ -258,16 +258,52 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n {\n     // Test some awful edge cases that hopefully no user will ever exercise.\n     TestArgsManager testArgs;\n+\n+    // Params test\n     const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n     testArgs.ParseParameters(4, (char**)argv_test);\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n \n     // A double negative is a positive.\n     BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Config test\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    testArgs.ParseParameters(1, (char**)argv_test);\n+    testArgs.ReadConfigString(conf_test);\n+\n+    // This was passed twice, second one overrides the negative setting,\n+    // but not the value.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n+\n+    // Combined test\n+    const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n+    const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n+    testArgs.ParseParameters(3, (char**)combo_test_args);\n+    testArgs.ReadConfigString(combo_test_conf);\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"0\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-foo\").size() == 2\n+                && testArgs.GetArgs(\"-foo\").front() == \"0\"\n+                && testArgs.GetArgs(\"-foo\").back() == \"1\");\n+\n+    // Command line overrides, but doesn't erase old setting\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"\");\n+    BOOST_CHECK(testArgs.GetArgs(\"-bar\").size() == 2\n+                && testArgs.GetArgs(\"-bar\").front() == \"\"\n+                && testArgs.GetArgs(\"-bar\").back() == \"0\");\n }\n \n BOOST_AUTO_TEST_CASE(util_ReadConfigStream)"
      }
    ]
  }
]