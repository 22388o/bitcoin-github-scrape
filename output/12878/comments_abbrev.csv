ajtowns,2018-04-04T23:52:01Z,"Bumped to address @jnewbery's suggestions. Unsquashed changes are at https://github.com/ajtowns/bitcoin/commits/netconf-refactor-track with commit 26d3faaa28c794b48df2a12cdb4a9a71de3d1a96 here having the same tree  as commit 3467454beff8e7b2df87f9a0e29391eb14a8e6c3 on the -track branch:\n\n```\n$ for a in netconf-refactor{,-track}; do git log -1 --pretty=""%h -> %T"" $a; done\n26d3faaa28 -> ef5b",https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-378780320,378780320,
jnewbery,2018-04-05T14:57:44Z,utACK 26d3faaa28c794b48df2a12cdb4a9a71de3d1a96,https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-378965847,378965847,
ajtowns,2018-04-05T19:00:45Z,"Rebased due to conflict with #10244, and renamed ChainNameFromCommandLine to GetChainName. Not sure how useful the -track branch is since it's now got a merge with master, but it still works: https://github.com/ajtowns/bitcoin/commit/492bbcdc558ae0edae0e2beb49a50932c8d576c6 follows on from where the tracking branch left off, and matches this branches current head, 77a733a99a75bdd04ad94df830e5bdc8a",https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379042633,379042633,
jtimon,2018-04-05T19:49:30Z,utACK 77a733a99a75bdd04ad94df830e5bdc8a6040959,https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379055825,379055825,
theuni,2018-04-05T19:52:58Z,"utACK 77a733a99a75bdd04ad94df830e5bdc8a6040959, not too concerned about the nit.",https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379056681,379056681,
jnewbery,2018-04-05T19:53:53Z,ACK 77a733a99a75bdd04ad94df830e5bdc8a6040959,https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379056921,379056921,
meshcollider,2018-04-05T23:03:30Z,"Concept ACK, this should also help my arg refactor a bit\nEDIT: utACK https://github.com/bitcoin/bitcoin/pull/12878/commits/77a733a99a75bdd04ad94df830e5bdc8a6040959",https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379102083,379102083,
jimpo,2018-04-06T22:03:47Z,utACK 77a733a,https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379397256,379397256,
jonasschnelli,2018-04-08T14:23:25Z,utACK 77a733a99a75bdd04ad94df830e5bdc8a6040959,https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379554354,379554354,
MarcoFalke,2018-04-08T21:10:58Z,post merge utACK 77a733a beside question,https://github.com/bitcoin/bitcoin/pull/12878#issuecomment-379582936,379582936,
ajtowns,2018-04-04T07:22:37Z,"Oops, these probably should be merged back into the previous check\n",https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179046912,179046912,src/test/util_tests.cpp
jnewbery,2018-04-04T14:22:26Z,This comment is wrong (since 55a89751faaada5598771d10401030e9e86eecbd when `MAX_NETWORK_TYPES` was removed). May as well remove it now that you're moving the function.,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179157828,179157828,src/util.h
jnewbery,2018-04-04T14:37:01Z,remove comment?,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179163873,179163873,src/util.cpp
jnewbery,2018-04-04T14:42:10Z,"I don't understand this comment. Can you make it more explicit about what you mean, or remove?",https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179166079,179166079,src/test/util_tests.cpp
jnewbery,2018-04-04T14:43:44Z,and `h` and `i`?,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179166647,179166647,src/test/util_tests.cpp
jnewbery,2018-04-04T14:55:25Z,"I think this is clearer in C++11:\n\n`    for (auto def : { false, true }) {`",https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179170959,179170959,src/test/util_tests.cpp
jnewbery,2018-04-04T15:02:16Z,"Why no: `    BOOST_CHECK(test_args.GetArgs(""-ggg"").size() == 1);` ?",https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179173614,179173614,src/test/util_tests.cpp
jnewbery,2018-04-04T15:03:10Z,"> IsArgNegated==true when noggg=0\n\nyuck. Can we change that?",https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179173942,179173942,src/test/util_tests.cpp
ajtowns,2018-04-04T21:59:49Z,It's changed in #11862 (and easy to change on its own as well). I think it makes sense for this PR to just refactor/add tests rather than change functionality though.,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179296164,179296164,src/test/util_tests.cpp
ajtowns,2018-04-04T23:19:10Z,"Yeah, it is. But no point to `auto` instead of `bool` :)",https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179311284,179311284,src/test/util_tests.cpp
Empact,2018-04-05T01:34:05Z,Could just call this `ChainName` given `gArgs` is all about the command line / config files already.,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179330564,179330564,src/util.cpp
ajtowns,2018-04-05T01:51:00Z,:+1:  Probably GetChainName() would be slightly more consistent...,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179332381,179332381,src/util.cpp
jnewbery,2018-04-05T14:56:46Z,sounds good. Keep this PR as refactor only and do behaviour changes in #11862.,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179492185,179492185,src/test/util_tests.cpp
jnewbery,2018-04-05T14:57:36Z,Agree that `GetChainName()` is a better name. Can be done in this PR or a future PR.,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179492489,179492489,src/util.cpp
theuni,2018-04-05T19:50:15Z,"Replace this with an assertion instead, even if just to self-document assumptions?",https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179581340,179581340,src/util.cpp
MarcoFalke,2018-04-08T21:10:20Z,In the test case `util_GetBoolArgEdgeCases` you seem to be removing all calls to `GetBoolArg`. Is this intentional?,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179961477,179961477,src/test/util_tests.cpp
ajtowns,2018-04-09T04:55:21Z,Yeah; I think the edge cases are more clearly tested with GetArg and a clearly distinct default value. The IsArgNegated/GetBoolArg cases are still tested in util_GetBoolArg (via -a and -b).,https://github.com/bitcoin/bitcoin/pull/12878#discussion_r179987090,179987090,src/test/util_tests.cpp
