DrahtBot,2020-12-03 02:40:25,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20012 (rpc: Remove duplicate name and argNames from CRPCCommand by MarcoFalke)\n\nIf you consider this pull request impor",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-737625207,737625207,
DrahtBot,2020-12-03 03:58:33,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-737649840,737649840,
jnewbery,2020-12-03 10:18:42,"This still hasn't addressed the review comment here: https://github.com/bitcoin/bitcoin/pull/12674#issuecomment-377004019 from 2.5 years ago.\n\nhttps://github.com/bitcoin/bitcoin/pull/19315 adds this functionality in the correct way, and doesn't break the outbound connection counting logic.",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-737836038,737836038,
luke-jr,2020-12-03 16:07:46,">This still hasn't addressed the review comment here: #12674 (comment) from 2.5 years ago.\n\nThere is nothing to address. It is the expected behaviour.",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-738106828,738106828,
amitiuttarwar,2020-12-03 18:43:41,"I don't understand the context for these proposed changes (why no PR description?), and the changes are problematic as they stand. For example, passing `ConnectionType::INBOUND` to `OpenNetworkConnection` immediately hits an assertion error, because it doesn't conceptually make sense (how does a node open an inbound connection?).  ",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-738211959,738211959,
luke-jr,2020-12-03 18:51:08,">I don't understand the context for these proposed changes \n\nTwo use cases I'm aware of:\n\n- Tests\n- Connecting to a node without giving that node special privileges\n\n> and the changes are problematic as they stand. For example, passing ConnectionType::INBOUND to OpenNetworkConnection immediately hits an assertion error, because it doesn't conceptually make sense (how does a node open",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-738215882,738215882,
ajtowns,2020-12-04 17:32:19,"I think #19315 handles tests more thoroughly than this (given that PR actually makes the tests use the functionality).\n\nFor mainnet, I don't think `feeler` or `addrfetch` connections would have much benefit, and `block-relay-only` connections should already be maintained where possible via #17428 and trying to manually tweak them probably doesn't make much sense. I think that mostly leaves pri",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-738914133,738914133,
fanquake,2020-12-06 03:39:29,"I've made this a draft, because it's not ready for review. \n\nYou need to add a PR description, which addresses any outstanding questions & explains the motivation for this change. Does it fix a bug, if so which one, does it need backporting? Even if you don't think there is anything new information to add from #12674, you should at least be pointing out that there was a previous PR, and associ",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-739449856,739449856,
gmaxwell,2020-12-06 04:20:51,"I agree with Luke-jr that it's weird that onetry gets privileged treatment.\n\nWhen I split addnodes into their own connection pool I would have probably treated onetrys like ordinary automatic connections if I'd even given the matter any thought. If I did give it thought perhaps I didn't do it because it's not instantly obvious how to handle the outbound connection limit.  I think under the ori",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-739452525,739452525,
ajtowns,2020-12-07 06:58:36,"I think the following would allow `onetry` to be a normal outbound-full-relay connection while keeping the maximums correctly limited. If there's already 8 outbounds, this will use the ""feeler"" slot to bump that up to 9 outbounds, and sometime later one outbound will be evicted -- probably the one you just added unless a new block appears in the meantime. If desired, you could call `disconnectnode",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-739713625,739713625,
gmaxwell,2020-12-12 20:21:01,@ajtowns I like that.,https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-743822880,743822880,
ajtowns,2021-01-13 08:04:41,"Now that #19315 is merged, a simpler patch is:\n\n```diff\n     if (strCommand == ""onetry"")\n     {\n-        CAddress addr;\n-        node.connman->OpenNetworkConnection(addr, false, nullptr, strNode.c_str(), ConnectionType::MANUAL);\n+        const auto conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        if (!node.connman->AddConnection(strNode, conn_type)) {\n+            throw ",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-759277783,759277783,
MarcoFalke,2021-01-13 09:23:34,"@ajtowns Your patch forgets to update the docs:\n\n```diff\ndiff --git a/src/net.h b/src/net.h\nindex 4f1a6b89a9..03c2f4dba6 100644\n--- a/src/net.h\n+++ b/src/net.h\n@@ -939,7 +939,7 @@ public:\n     std::vector<AddedNodeInfo> GetAddedNodeInfo();\n \n     /**\n-     * Attempts to open a connection. Currently only used from tests.\n+     * Attempts to open a connection.\n      *\n   ",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-759319942,759319942,
luke-jr,2021-07-06 23:30:34,"Since this was just for tests, `addconnection` serves the same purpose in theory. Closing.",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-875150573,875150573,
rebroad,2021-09-04 19:49:34,"> Since this was just for tests, `addconnection` serves the same purpose in theory. Closing.\n\nbut only when in regtest mode.... why not in regular mode also?",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-913030653,913030653,
luke-jr,2021-09-04 20:26:29,"I don't have a use case for that. If you want to pursue that, I suggest just opening up `addconnection` to non-regtest instead.",https://github.com/bitcoin/bitcoin/pull/20551#issuecomment-913036066,913036066,
