MarcoFalke,2019-11-07 19:23:52,"Nice find. However, given that it is not documented, it might go away or break any time and we shouldn't expect travis to provide any support for it.",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551226130,551226130,
elichai,2019-11-07 19:28:12,@MarcoFalke I can add `allow_failures` so the builds won't fail if it doesn't work. (altough that means manually checking if PPC passed),https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551227839,551227839,
MarcoFalke,2019-11-07 19:39:23,"> altough that means manually checking if PPC passed\n\nAs if anyone would do that",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551232171,551232171,
MarcoFalke,2019-11-07 19:44:05,"Also according to #6466 we were looking for a `be` build, not `le`. Travis is already pretty slow these days and adding another build (which is mostly redundant to the other `le` builds) does not help in that regard.",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551233901,551233901,
elichai,2019-11-07 19:58:50,"I agree that if it was big endian it would've been nicer.\nBut I do think it's valuable to have CI for every platform we're aiming to support, as it's very easy to break support with one the second we use non C++ stuff (i.e. libc, asm etc.)",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551239337,551239337,
practicalswift,2019-11-07 20:19:54,"Concept ACK\n\nVery nice find! :)",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551246812,551246812,
MarcoFalke,2019-11-07 20:22:48,"> we use non C++ stuff (i.e. libc, asm etc.)\n\nWe use the Ubuntu Bionic libc on all builds, no? So at least that shouldn't matter.",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551247806,551247806,
elichai,2019-11-07 21:30:39,"You mean when distributing binaries, right? ",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551273620,551273620,
MarcoFalke,2019-11-07 21:40:54,The ci system is running (at least on travis) in ubuntu:bionic docker containers.,https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551278012,551278012,
laanwj,2019-11-07 21:59:14,"> Also according to #6466 we were looking for a be build, not le. Travis is already pretty slow these days and adding another build (which is mostly redundant to the other le builds) does not help in that regard.\n\nI tend to agree. Adding a big-endian build / test (irrespective of platform) would be great. PPC LE is worth testing on intermittently, but don't think it needs to run for every PR a",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551285252,551285252,
MarcoFalke,2019-11-07 22:12:16,"Don't get me wrong, I appreciate the work you put in here and I am going to steal it for my projects (e.g. intermittent tests as suggested by @laanwj), but it might not be the best fit for the Bitcoin Core repo.",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551290199,551290199,
elichai,2019-11-08 10:15:49,"I guess I agree, about the times.\nfor the same reason RISC-V didn't get merged, this i guess shouldn't get merged either.\n\nBut this just makes me wonder if travis is hurting us in the long run.\nGiving up on testcases because ""travis is already too slow"" is a bad sign (not talking specifically about this PR, for that sense it can be even running valgrind).\n\nAnyway, that's unrelated to t",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551517731,551517731,
MarcoFalke,2019-11-08 13:57:46,"It is possible to send them money to speed it up for us (https://github.com/bitcoin/bitcoin/issues/16148#issuecomment-503677469). However, that will also slow it down for ""local"" travis testing in forks.",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-551835678,551835678,
laanwj,2019-11-10 12:18:59,"> But this just makes me wonder if travis is hurting us in the long run.\n\nWell a bad craftsman blames his tools. Yes, travis is problematic sometimes, but also our test suite is very much on the heavy side. Both the build and tests somehow take very long compared to other projects.\n\nIf it means thorough testing that's good, of course. But maybe it'd be nice to have a subset of fast tests t",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-552189536,552189536,
elichai,2019-11-10 12:31:56,"> > But this just makes me wonder if travis is hurting us in the long run.\n> \n> Well a bad craftsman blames his tools. Yes, travis is problematic sometimes, but also our test suite is very much on the heavy side. Both the build and tests somehow take very long compared to other projects.\n> \n> If it means thorough testing that's good, of course. But maybe it'd be nice to have a subset of fa",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-552190485,552190485,
MarcoFalke,2019-11-10 14:02:53,"> Is it compile time or test time?\n\nWithout cache it is compile time (due to boost and serialize.h).\nWith cache it is install time (apt-get) and a bit of the functional tests.\n\n> can we change includes and/or libraries to make compile time faster?\n\nYes, see e.g. #17401 and #17307.\n\n\n> can we change test framework(or the way we test) to make tests run faster?\n\nYes, see e.g. ",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-552197696,552197696,
MarcoFalke,2019-11-13 17:47:28,https://blog.travis-ci.com/2019-11-12-multi-cpu-architecture-ibm-power-ibm-z#what-you-can-expect-from-this-alpha-release,https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-553522125,553522125,
DrahtBot,2019-11-22 06:39:08,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17591](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17591.html) (ci: Add big endian platform - s390x by elic",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-557410966,557410966,
elichai,2019-11-25 11:46:27,"@MarcoFalke Am I dreaming or are they also supporting s390x which is BE? \nI'll test with a small travis to check that it's actually BE and then PR it :)\n\nEDIT: Definitely Big Endian :) ",https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-558120210,558120210,
DrahtBot,2019-11-25 20:30:45,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-558327185,558327185,
elichai,2019-12-26 10:13:05,I don't see a good reason to leave this open.,https://github.com/bitcoin/bitcoin/pull/17402#issuecomment-569030645,569030645,
