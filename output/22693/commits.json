[
  {
    "sha": "1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDFlYWY1MmFjYzBkYTZhZjRlNDIwMjUzMDViZGZjY2M5YjFjZGZm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-08-12T20:31:35Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-08-13T00:15:24Z"
      },
      "message": "Wallet: Keep track of what addresses are used in wallet transactions (memory only)",
      "tree": {
        "sha": "044614ecf5eb41fdff2c2e61771d15c5250fff84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/044614ecf5eb41fdff2c2e61771d15c5250fff84"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42af9596ce85a541988abee54eed8a9b271a46a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42af9596ce85a541988abee54eed8a9b271a46a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42af9596ce85a541988abee54eed8a9b271a46a1"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 24,
      "deletions": 0
    },
    "files": [
      {
        "sha": "671f7f132bdff374daa50837bef12765f4df91ea",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
        "patch": "@@ -606,6 +606,23 @@ void CWallet::AddToSpends(const uint256& wtxid)\n         AddToSpends(txin.prevout, wtxid);\n }\n \n+void CWallet::UpdateAddressBookUsed(const CWalletTx& wtx)\n+{\n+    for (const auto& output : wtx.tx->vout) {\n+        CTxDestination dest;\n+        if (!ExtractDestination(output.scriptPubKey, dest)) continue;\n+        m_address_book[dest].m_used = true;\n+    }\n+}\n+\n+void CWallet::InitialiseAddressBookUsed()\n+{\n+    for (const auto& entry : mapWallet) {\n+        const CWalletTx& wtx = entry.second;\n+        UpdateAddressBookUsed(wtx);\n+    }\n+}\n+\n bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n {\n     if (IsCrypted())\n@@ -907,6 +924,7 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmatio\n         wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, &wtx));\n         wtx.nTimeSmart = ComputeTimeSmart(wtx);\n         AddToSpends(hash);\n+        UpdateAddressBookUsed(wtx);\n     }\n \n     if (!fInsertedNew)\n@@ -2001,6 +2019,8 @@ DBErrors CWallet::LoadWallet()\n     if (nLoadWalletRet != DBErrors::LOAD_OK)\n         return nLoadWalletRet;\n \n+    InitialiseAddressBookUsed();\n+\n     return DBErrors::LOAD_OK;\n }\n "
      },
      {
        "sha": "5103a13f4461d7b58f1c9e3bc941a881e16a58d3",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
        "patch": "@@ -198,6 +198,7 @@ class CAddressBookData\n     std::string m_label;\n public:\n     std::string purpose;\n+    bool m_used{false};\n \n     CAddressBookData() : purpose(\"unknown\") {}\n \n@@ -257,6 +258,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void AddToSpends(const COutPoint& outpoint, const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void AddToSpends(const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    void UpdateAddressBookUsed(const CWalletTx&) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void InitialiseAddressBookUsed() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     /**\n      * Add a transaction to the wallet, or update it.  pIndex and posInBlock should\n      * be set when the transaction was known to be included in a block.  When"
      }
    ]
  },
  {
    "sha": "cba8077365913e92abadc418aa0a9806f95dd5a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmE4MDc3MzY1OTEzZTkyYWJhZGM0MThhYTBhOTgwNmY5NWRkNWE3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-08-12T20:52:10Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-08-13T00:15:24Z"
      },
      "message": "Wallet: Add fairly-efficient [negative] check that an address is not known to be used",
      "tree": {
        "sha": "00a11a949addc1029da3bd74e99f2c851e1bb7e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00a11a949addc1029da3bd74e99f2c851e1bb7e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cba8077365913e92abadc418aa0a9806f95dd5a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cba8077365913e92abadc418aa0a9806f95dd5a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cba8077365913e92abadc418aa0a9806f95dd5a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cba8077365913e92abadc418aa0a9806f95dd5a7/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d1eaf52acc0da6af4e42025305bdfccc9b1cdff"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 40,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a0b5ba68bb36a222660131183f330a2e3b885717",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cba8077365913e92abadc418aa0a9806f95dd5a7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cba8077365913e92abadc418aa0a9806f95dd5a7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cba8077365913e92abadc418aa0a9806f95dd5a7",
        "patch": "@@ -41,6 +41,7 @@\n #include <algorithm>\n #include <assert.h>\n #include <optional>\n+#include <variant>\n \n #include <boost/algorithm/string/replace.hpp>\n \n@@ -623,6 +624,42 @@ void CWallet::InitialiseAddressBookUsed()\n     }\n }\n \n+bool CWallet::FindScriptPubKeyUsed(const std::set<CScript>& keys, const std::variant<std::monostate, std::function<void(const CWalletTx&)>, std::function<void(const CWalletTx&, uint32_t)>>& callback) const\n+{\n+    bool found_any = false;\n+    for (const auto& key : keys) {\n+        CTxDestination dest;\n+        if (!ExtractDestination(key, dest)) continue;\n+        const auto& address_book_it = m_address_book.find(dest);\n+        if (address_book_it == m_address_book.end()) continue;\n+        if (address_book_it->second.m_used) {\n+            found_any = true;\n+            break;\n+        }\n+    }\n+    if (!found_any) return false;\n+    if (std::holds_alternative<std::monostate>(callback)) return true;\n+\n+    found_any = false;\n+    for (const auto& entry : mapWallet) {\n+        const CWalletTx& wtx = entry.second;\n+        for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+            const auto& output = wtx.tx->vout[i];\n+            if (keys.count(output.scriptPubKey)) {\n+                found_any = true;\n+                const auto callback_type = callback.index();\n+                if (callback_type == 1) {\n+                    std::get<std::function<void(const CWalletTx&)>>(callback)(wtx);\n+                    break;\n+                }\n+                std::get<std::function<void(const CWalletTx&, uint32_t)>>(callback)(wtx, i);\n+            }\n+        }\n+    }\n+\n+    return found_any;\n+}\n+\n bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n {\n     if (IsCrypted())"
      },
      {
        "sha": "7f0fc72042accef049c1470998a3a8c703f19539",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cba8077365913e92abadc418aa0a9806f95dd5a7/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cba8077365913e92abadc418aa0a9806f95dd5a7/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cba8077365913e92abadc418aa0a9806f95dd5a7",
        "patch": "@@ -38,6 +38,7 @@\n #include <stdint.h>\n #include <string>\n #include <utility>\n+#include <variant>\n #include <vector>\n \n #include <boost/signals2/signal.hpp>\n@@ -470,6 +471,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void UnlockAllCoins() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void ListLockedCoins(std::vector<COutPoint>& vOutpts) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    bool FindScriptPubKeyUsed(const std::set<CScript>& keys, const std::variant<std::monostate, std::function<void(const CWalletTx&)>, std::function<void(const CWalletTx&, uint32_t)>>& callback = std::monostate()) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     /*\n      * Rescan abort properties\n      */"
      }
    ]
  },
  {
    "sha": "9fe79260cb7cdde75f4fce90f7615973a9233904",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmU3OTI2MGNiN2NkZGU3NWY0ZmNlOTBmNzYxNTk3M2E5MjMzOTA0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-05-05T04:10:54Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-08-13T02:49:16Z"
      },
      "message": "RPC/Wallet: Add \"use_txids\" to output of getaddressinfo",
      "tree": {
        "sha": "b6d9f3b43cc14adb6c4cd4dddac312001ec49642",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6d9f3b43cc14adb6c4cd4dddac312001ec49642"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fe79260cb7cdde75f4fce90f7615973a9233904",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fe79260cb7cdde75f4fce90f7615973a9233904",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fe79260cb7cdde75f4fce90f7615973a9233904",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fe79260cb7cdde75f4fce90f7615973a9233904/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cba8077365913e92abadc418aa0a9806f95dd5a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cba8077365913e92abadc418aa0a9806f95dd5a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cba8077365913e92abadc418aa0a9806f95dd5a7"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3b44a6f64751197c17ce637c85297d50dc2148f4",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fe79260cb7cdde75f4fce90f7615973a9233904/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fe79260cb7cdde75f4fce90f7615973a9233904/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9fe79260cb7cdde75f4fce90f7615973a9233904",
        "patch": "@@ -3820,6 +3820,10 @@ RPCHelpMan getaddressinfo()\n                         {\n                             {RPCResult::Type::STR, \"label name\", \"Label name (defaults to \\\"\\\").\"},\n                         }},\n+                        {RPCResult::Type::ARR, \"use_txids\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"The ids of transactions involving this wallet which received with the address\"},\n+                        }},\n                     }\n                 },\n                 RPCExamples{\n@@ -3908,6 +3912,15 @@ RPCHelpMan getaddressinfo()\n     }\n     ret.pushKV(\"labels\", std::move(labels));\n \n+    // NOTE: Intentionally not special-casing a single txid: while addresses\n+    // should never be reused, it's not unexpected to have RBF result in\n+    // multiple txids for a single use.\n+    UniValue use_txids(UniValue::VARR);\n+    pwallet->FindScriptPubKeyUsed(std::set<CScript>{scriptPubKey}, [&use_txids](const CWalletTx&wtx) {\n+        use_txids.push_back(wtx.GetHash().GetHex());\n+    });\n+    ret.pushKV(\"use_txids\", std::move(use_txids));\n+\n     return ret;\n },\n     };"
      },
      {
        "sha": "ea266bb462faceab22422a0fc37c31a83620d6ed",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fe79260cb7cdde75f4fce90f7615973a9233904/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fe79260cb7cdde75f4fce90f7615973a9233904/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=9fe79260cb7cdde75f4fce90f7615973a9233904",
        "patch": "@@ -627,6 +627,12 @@ def run_test(self):\n         assert not address_info[\"iswatchonly\"]\n         assert not address_info[\"isscript\"]\n         assert not address_info[\"ischange\"]\n+        assert_equal(address_info['use_txids'], [])\n+\n+        # Test getaddressinfo 'txids' field\n+        txid = self.nodes[0].sendtoaddress(\"mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ\", 1)\n+        address_info = self.nodes[0].getaddressinfo(\"mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ\")\n+        assert_equal(address_info['use_txids'], [txid])\n \n         # Test getaddressinfo 'ischange' field on change address.\n         self.nodes[0].generate(1)"
      }
    ]
  }
]