MarcoFalke,2019-08-26 18:45:52,ACK 92528c260e9bd5d36da4b017098a49fda5051154 (only looked at the diff on GitHub),https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-524980739,524980739,
practicalswift,2019-08-26 18:56:49,"ACK 92528c260e9bd5d36da4b017098a49fda5051154 -- diff looks correct\n\nRelated: https://github.com/bitcoin/bitcoin/pull/16572#issuecomment-521628502\n\n`std::vector<bool>` gotcha illustrated:\n\n```\n    std::vector<char> v1;\n    for (const auto& x : v1) {\n      // const char& x (as expected)\n    }\n\n    std::vector<int> v2;\n    for (const auto& x : v2) {\n      // const int& x (",https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-524985077,524985077,
jamesob,2019-08-26 19:17:48,"ACK https://github.com/bitcoin/bitcoin/pull/16730/commits/92528c260e9bd5d36da4b017098a49fda5051154\n\nLow-risk change, reviewed on Github.",https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-524992994,524992994,
Empact,2019-08-27 00:08:16,"ACK https://github.com/bitcoin/bitcoin/pull/16730/commits/92528c260e9bd5d36da4b017098a49fda5051154\n\n* diff looks correct\n* confirmed the included test doesn't build without the source change\n\n```\nIn file included from test/serialize_tests.cpp:5:\n./serialize.h:602:7: error: no member named 'Serialize' in 'std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool>",https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-525080778,525080778,
JeremyRubin,2019-08-27 04:12:21,"We don't want to define serialization to be a bit vector?\n\nWe're not using a `std::vector<bool>` serialized as bytes right now are we?",https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-525129077,525129077,
sipa,2019-08-27 05:53:44,"@JeremyRubin It's just for hashing, it doesn't really matter.",https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-525149599,525149599,
sipa,2019-08-27 23:52:14,"@JeremyRubin Longer answer: I think the expected serialization of `std::vector<bool>` is that it's serialized as any other vector would be serialized (compact length + serialization of each of the individual elements). If we want something that's serialized as a bitpacked array, we can introduce a BitPacker wrapper to serialize.h or so.",https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-525526776,525526776,
JeremyRubin,2019-08-29 22:44:04,"I would think the reason to worry about the serialization for hashing with a bitpacked array is that the incoming message can be hashed and it will be equivalent to the hash of the deserializaed struct.\n\nAgree the best way to do this is by having a different type for a BitPacked serialization.",https://github.com/bitcoin/bitcoin/pull/16730#issuecomment-526389073,526389073,
