[
  {
    "sha": "92528c260e9bd5d36da4b017098a49fda5051154",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjUyOGMyNjBlOWJkNWQzNmRhNGIwMTcwOThhNDlmZGE1MDUxMTU0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-08-26T18:32:47Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-08-26T18:36:33Z"
      },
      "message": "Support serialization of std::vector<bool>",
      "tree": {
        "sha": "c81b33db154860283af29779b700aa908868e191",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c81b33db154860283af29779b700aa908868e191"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92528c260e9bd5d36da4b017098a49fda5051154",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92528c260e9bd5d36da4b017098a49fda5051154",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92528c260e9bd5d36da4b017098a49fda5051154",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92528c260e9bd5d36da4b017098a49fda5051154/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "adff8fe32101b2c007a85415c3ec565a7f137252",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adff8fe32101b2c007a85415c3ec565a7f137252",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/adff8fe32101b2c007a85415c3ec565a7f137252"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a38d76fc18b61e76379acc4625c6eab172aaf29d",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92528c260e9bd5d36da4b017098a49fda5051154/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92528c260e9bd5d36da4b017098a49fda5051154/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=92528c260e9bd5d36da4b017098a49fda5051154",
        "patch": "@@ -555,6 +555,7 @@ template<typename Stream, unsigned int N, typename T> inline void Unserialize(St\n  * vectors of unsigned char are a special case and are intended to be serialized as a single opaque blob.\n  */\n template<typename Stream, typename T, typename A> void Serialize_impl(Stream& os, const std::vector<T, A>& v, const unsigned char&);\n+template<typename Stream, typename T, typename A> void Serialize_impl(Stream& os, const std::vector<T, A>& v, const bool&);\n template<typename Stream, typename T, typename A, typename V> void Serialize_impl(Stream& os, const std::vector<T, A>& v, const V&);\n template<typename Stream, typename T, typename A> inline void Serialize(Stream& os, const std::vector<T, A>& v);\n template<typename Stream, typename T, typename A> void Unserialize_impl(Stream& is, std::vector<T, A>& v, const unsigned char&);\n@@ -713,6 +714,18 @@ void Serialize_impl(Stream& os, const std::vector<T, A>& v, const unsigned char&\n         os.write((char*)v.data(), v.size() * sizeof(T));\n }\n \n+template<typename Stream, typename T, typename A>\n+void Serialize_impl(Stream& os, const std::vector<T, A>& v, const bool&)\n+{\n+    // A special case for std::vector<bool>, as dereferencing\n+    // std::vector<bool>::const_iterator does not result in a const bool&\n+    // due to std::vector's special casing for bool arguments.\n+    WriteCompactSize(os, v.size());\n+    for (bool elem : v) {\n+        ::Serialize(os, elem);\n+    }\n+}\n+\n template<typename Stream, typename T, typename A, typename V>\n void Serialize_impl(Stream& os, const std::vector<T, A>& v, const V&)\n {"
      },
      {
        "sha": "b90be15fbaa558f9f0790c9a4e04deb13b9b2e30",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92528c260e9bd5d36da4b017098a49fda5051154/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92528c260e9bd5d36da4b017098a49fda5051154/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=92528c260e9bd5d36da4b017098a49fda5051154",
        "patch": "@@ -258,6 +258,14 @@ static bool isCanonicalException(const std::ios_base::failure& ex)\n     return strcmp(expectedException.what(), ex.what()) == 0;\n }\n \n+BOOST_AUTO_TEST_CASE(vector_bool)\n+{\n+    std::vector<uint8_t> vec1{1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1};\n+    std::vector<bool> vec2{1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1};\n+\n+    BOOST_CHECK(vec1 == std::vector<uint8_t>(vec2.begin(), vec2.end()));\n+    BOOST_CHECK(SerializeHash(vec1) == SerializeHash(vec2));\n+}\n \n BOOST_AUTO_TEST_CASE(noncanonical)\n {"
      }
    ]
  }
]