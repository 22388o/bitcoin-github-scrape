[
  {
    "sha": "d752ba86c1872f64a4641cf77008826d32bde65f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzUyYmE4NmMxODcyZjY0YTQ2NDFjZjc3MDA4ODI2ZDMyYmRlNjVm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-08T23:29:45Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-25T10:03:16Z"
      },
      "message": "Add SCRIPT_VERIFY_SIGPUSHONLY (BIP62 rule 2)",
      "tree": {
        "sha": "07728ee7eee5a8dacc3d31496ef4b9b204f9f06e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07728ee7eee5a8dacc3d31496ef4b9b204f9f06e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d752ba86c1872f64a4641cf77008826d32bde65f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d752ba86c1872f64a4641cf77008826d32bde65f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d752ba86c1872f64a4641cf77008826d32bde65f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d752ba86c1872f64a4641cf77008826d32bde65f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65e4e8427d900b27f579dc12af6c74b3ec628286",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65e4e8427d900b27f579dc12af6c74b3ec628286",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65e4e8427d900b27f579dc12af6c74b3ec628286"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 61,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e463de8cc27016dd0fdffad7d78d2fa9952b9ad3",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -980,6 +980,10 @@ bool SignatureChecker::CheckSig(const vector<unsigned char>& vchSigIn, const vec\n \n bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, unsigned int flags, const BaseSignatureChecker& checker)\n {\n+    if ((flags & SCRIPT_VERIFY_SIGPUSHONLY) != 0 && !scriptSig.IsPushOnly()) {\n+        return false;\n+    }\n+\n     vector<vector<unsigned char> > stack, stackCopy;\n     if (!EvalScript(stack, scriptSig, flags, checker))\n         return false;"
      },
      {
        "sha": "085cd867dac94c11f4064a48286a297ff3dc8ab8",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -46,6 +46,9 @@ enum\n \n     // verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\n     SCRIPT_VERIFY_NULLDUMMY = (1U << 4),\n+\n+    // Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\n+    SCRIPT_VERIFY_SIGPUSHONLY = (1U << 5),\n };\n \n uint256 SignatureHash(const CScript &scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType);"
      },
      {
        "sha": "bbcfe9dfdd51e92cdac6bfaa496ab0dbf1097bce",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -230,7 +230,7 @@ bool CScript::IsPushOnly() const\n             return false;\n         // Note that IsPushOnly() *does* consider OP_RESERVED to be a\n         // push-type opcode, however execution of OP_RESERVED fails, so\n-        // it's not relevant to P2SH as the scriptSig would fail prior to\n+        // it's not relevant to P2SH/BIP62 as the scriptSig would fail prior to\n         // the P2SH special validation code being executed.\n         if (opcode > OP_16)\n             return false;"
      },
      {
        "sha": "706a85a29b9757d847a0e1e7fe39433ae2135b7e",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -551,7 +551,7 @@ class CScript : public std::vector<unsigned char>\n \n     bool IsPayToScriptHash() const;\n \n-    // Called by IsStandardTx and P2SH VerifyScript (which makes it consensus-critical).\n+    // Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical).\n     bool IsPushOnly() const;\n \n     // Called by IsStandardTx."
      },
      {
        "sha": "e4dd8fe9aad5dc2211d974824b4f1a9163470e08",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -504,6 +504,24 @@ nSequences are max.\n     \"NULLDUMMY\",\n     \"3-of-3 NOT with invalid sig with nonzero dummy\"\n ],\n+[\n+    \"0 0x47 0x3044022035341cc377b19138f944f90c45772cb06338c6d56a4c0c31a65bf1a8a105fadc022046dd232850b6bacb25879c9da82a7a628982aa19d055f1753468f68047662e0301 DUP\",\n+    \"2 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 2 CHECKMULTISIG\",\n+    \"SIGPUSHONLY\",\n+    \"2-of-2 with two identical keys and sigs pushed using OP_DUP\"\n+],\n+[\n+    \"0x47 0x304402204d8b99eea2f53382fd67e0dbc8ed0596bd614aa0dad6bc6843c7860c79b901c3022062f022a71993013e3d9b22302a8e4b40109d7bb057aeb250b9aab2197b3e96b801 0x23 0x2103363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640ac\",\n+    \"0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 CHECKSIG\",\n+    \"\",\n+    \"P2SH(P2PK) with non-push scriptSig but no SIGPUSHONLY\"\n+],\n+[\n+    \"0x47 0x30440220078c887c33abc67fbbd827ceb3f661c1c459e78218161b652f23e3ca76cfabbd022047df245eacb8a88d8c5ca7b5228e3b4d070c102d2f542433362d3f443cd24eda01 0x23 0x2103363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640ac\",\n+    \"0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 CHECKSIG\",\n+    \"SIGPUSHONLY\",\n+    \"P2SH(P2PK) with non-push scriptSig\"\n+],\n \n [\"The End\"]\n ]"
      },
      {
        "sha": "f7d1531698602fc566dfe4bd6b1c514f6aa06153",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -649,6 +649,18 @@ nSequences are max.\n     \"\",\n     \"3-of-3 NOT with invalid sig and nonzero dummy but no NULLDUMMY\"\n ],\n+[\n+    \"0 0x47 0x3044022002a27769ee33db258bdf7a3792e7da4143ec4001b551f73e6a190b8d1bde449d02206742c56ccd94a7a2e16ca52fc1ae4a0aa122b0014a867a80de104f9cb18e472c01 DUP\",\n+    \"2 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 2 CHECKMULTISIG\",\n+    \"\",\n+    \"2-of-2 with two identical keys and sigs pushed using OP_DUP but no SIGPUSHONLY\"\n+],\n+[\n+    \"0 0x47 0x304402203acf75dd59bbef171aeeedae4f1020b824195820db82575c2b323b8899f95de9022067df297d3a5fad049ba0bb81255d0e495643cbcf9abae9e396988618bc0c6dfe01 0x47 0x304402205f8b859230c1cab7d4e8de38ff244d2ebe046b64e8d3f4219b01e483c203490a022071bdc488e31b557f7d9e5c8a8bec90dc92289ca70fa317685f4f140e38b30c4601\",\n+    \"2 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 2 CHECKMULTISIG\",\n+    \"SIGPUSHONLY\",\n+    \"2-of-2 with two identical keys and sigs pushed\"\n+],\n \n [\"The End\"]\n ]"
      },
      {
        "sha": "07291190177cdae99f1d553e73bd785b13d60732",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 2,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -1,5 +1,5 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"data/script_invalid.json.h\"\n@@ -171,12 +171,14 @@ class TestBuilder\n \n     TestBuilder& Add(const CScript& script)\n     {\n+        DoPush();\n         spendTx.vin[0].scriptSig += script;\n         return *this;\n     }\n \n     TestBuilder& Num(int num)\n     {\n+        DoPush();\n         spendTx.vin[0].scriptSig << CScriptNum(num);\n         return *this;\n     }\n@@ -402,6 +404,23 @@ BOOST_AUTO_TEST_CASE(script_build)\n                               \"3-of-3 NOT with invalid sig with nonzero dummy\", SCRIPT_VERIFY_NULLDUMMY\n                              ).Num(1).PushSig(keys.key0).PushSig(keys.key1).PushSig(keys.key2).DamagePush(10));\n \n+    good.push_back(TestBuilder(CScript() << OP_2 << ToByteVector(keys.pubkey1C) << ToByteVector(keys.pubkey1C) << OP_2 << OP_CHECKMULTISIG,\n+                               \"2-of-2 with two identical keys and sigs pushed using OP_DUP but no SIGPUSHONLY\", 0\n+                              ).Num(0).PushSig(keys.key1).Add(CScript() << OP_DUP));\n+    bad.push_back(TestBuilder(CScript() << OP_2 << ToByteVector(keys.pubkey1C) << ToByteVector(keys.pubkey1C) << OP_2 << OP_CHECKMULTISIG,\n+                              \"2-of-2 with two identical keys and sigs pushed using OP_DUP\", SCRIPT_VERIFY_SIGPUSHONLY\n+                             ).Num(0).PushSig(keys.key1).Add(CScript() << OP_DUP));\n+    bad.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey2C) << OP_CHECKSIG,\n+                              \"P2SH(P2PK) with non-push scriptSig but no SIGPUSHONLY\", 0\n+                             ).PushSig(keys.key2).PushRedeem());\n+    bad.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey2C) << OP_CHECKSIG,\n+                              \"P2SH(P2PK) with non-push scriptSig\", SCRIPT_VERIFY_SIGPUSHONLY\n+                             ).PushSig(keys.key2).PushRedeem());\n+    good.push_back(TestBuilder(CScript() << OP_2 << ToByteVector(keys.pubkey1C) << ToByteVector(keys.pubkey1C) << OP_2 << OP_CHECKMULTISIG,\n+                               \"2-of-2 with two identical keys and sigs pushed\", SCRIPT_VERIFY_SIGPUSHONLY\n+                              ).Num(0).PushSig(keys.key1).PushSig(keys.key1));\n+\n+\n     std::map<std::string, Array> tests_good;\n     std::map<std::string, Array> tests_bad;\n "
      },
      {
        "sha": "9209c6697fad7516869b238b304204ce49a0243b",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d752ba86c1872f64a4641cf77008826d32bde65f/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=d752ba86c1872f64a4641cf77008826d32bde65f",
        "patch": "@@ -33,6 +33,7 @@ static std::map<string, unsigned int> mapFlagNames = boost::assign::map_list_of\n     (string(\"STRICTENC\"), (unsigned int)SCRIPT_VERIFY_STRICTENC)\n     (string(\"DERSIG\"), (unsigned int)SCRIPT_VERIFY_DERSIG)\n     (string(\"LOW_S\"), (unsigned int)SCRIPT_VERIFY_LOW_S)\n+    (string(\"SIGPUSHONLY\"), (unsigned int)SCRIPT_VERIFY_SIGPUSHONLY)\n     (string(\"NULLDUMMY\"), (unsigned int)SCRIPT_VERIFY_NULLDUMMY);\n \n unsigned int ParseScriptFlags(string strFlags)"
      }
    ]
  },
  {
    "sha": "698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OThjNmFiYjI1YzFmYmJjN2ZhNGJhNDZiNjBlOWYxN2Q5NzMzMmVm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-09T01:48:59Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-25T10:03:20Z"
      },
      "message": "Add SCRIPT_VERIFY_MINIMALDATA (BIP62 rules 3 and 4)\n\nAlso use the new flag as a standard rule, and replace the IsCanonicalPush\nstandardness check with it (as it is more complete).",
      "tree": {
        "sha": "96e1a25fa76033be494f9760be03872e5ba554eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96e1a25fa76033be494f9760be03872e5ba554eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d752ba86c1872f64a4641cf77008826d32bde65f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d752ba86c1872f64a4641cf77008826d32bde65f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d752ba86c1872f64a4641cf77008826d32bde65f"
      }
    ],
    "stats": {
      "total": 160,
      "additions": 101,
      "deletions": 59
    },
    "files": [
      {
        "sha": "008a0591032ba55e90ba86c646742971458cdee3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -633,10 +633,6 @@ bool IsStandardTx(const CTransaction& tx, string& reason)\n             reason = \"scriptsig-not-pushonly\";\n             return false;\n         }\n-        if (!txin.scriptSig.HasCanonicalPushes()) {\n-            reason = \"scriptsig-non-canonical-push\";\n-            return false;\n-        }\n     }\n \n     unsigned int nDataOut = 0;"
      },
      {
        "sha": "11c909472a0c2854126722689176dbb2d7977dac",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 11,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -157,6 +157,29 @@ bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags) {\n     return true;\n }\n \n+bool static CheckMinimalPush(const valtype& data, opcodetype opcode) {\n+    if (data.size() == 0) {\n+        // Could have used OP_0.\n+        return opcode == OP_0;\n+    } else if (data.size() == 1 && data[0] >= 1 && data[0] <= 16) {\n+        // Could have used OP_1 .. OP_16.\n+        return opcode == OP_1 + (data[0] - 1);\n+    } else if (data.size() == 1 && data[0] == 0x81) {\n+        // Could have used OP_1NEGATE.\n+        return opcode == OP_1NEGATE;\n+    } else if (data.size() <= 75) {\n+        // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n+        return opcode == data.size();\n+    } else if (data.size() <= 255) {\n+        // Could have used OP_PUSHDATA.\n+        return opcode == OP_PUSHDATA1;\n+    } else if (data.size() <= 65535) {\n+        // Could have used OP_PUSHDATA2.\n+        return opcode == OP_PUSHDATA2;\n+    }\n+    return true;\n+}\n+\n bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker)\n {\n     CScript::const_iterator pc = script.begin();\n@@ -169,6 +192,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n     if (script.size() > 10000)\n         return false;\n     int nOpCount = 0;\n+    bool fRequireMinimal = (flags & SCRIPT_VERIFY_MINIMALDATA) != 0;\n \n     try\n     {\n@@ -205,9 +229,12 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                 opcode == OP_RSHIFT)\n                 return false; // Disabled opcodes.\n \n-            if (fExec && 0 <= opcode && opcode <= OP_PUSHDATA4)\n+            if (fExec && 0 <= opcode && opcode <= OP_PUSHDATA4) {\n+                if (fRequireMinimal && !CheckMinimalPush(vchPushValue, opcode)) {\n+                    return false;\n+                }\n                 stack.push_back(vchPushValue);\n-            else if (fExec || (OP_IF <= opcode && opcode <= OP_ENDIF))\n+            } else if (fExec || (OP_IF <= opcode && opcode <= OP_ENDIF))\n             switch (opcode)\n             {\n                 //\n@@ -234,6 +261,8 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     // ( -- value)\n                     CScriptNum bn((int)opcode - (int)(OP_1 - 1));\n                     stack.push_back(bn.getvch());\n+                    // The result of these opcodes should always be the minimal way to push the data\n+                    // they push, so no need for a CheckMinimalPush here.\n                 }\n                 break;\n \n@@ -458,7 +487,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n                     if (stack.size() < 2)\n                         return false;\n-                    int n = CScriptNum(stacktop(-1)).getint();\n+                    int n = CScriptNum(stacktop(-1), fRequireMinimal).getint();\n                     popstack(stack);\n                     if (n < 0 || n >= (int)stack.size())\n                         return false;\n@@ -557,7 +586,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     // (in -- out)\n                     if (stack.size() < 1)\n                         return false;\n-                    CScriptNum bn(stacktop(-1));\n+                    CScriptNum bn(stacktop(-1), fRequireMinimal);\n                     switch (opcode)\n                     {\n                     case OP_1ADD:       bn += bnOne; break;\n@@ -590,8 +619,8 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     // (x1 x2 -- out)\n                     if (stack.size() < 2)\n                         return false;\n-                    CScriptNum bn1(stacktop(-2));\n-                    CScriptNum bn2(stacktop(-1));\n+                    CScriptNum bn1(stacktop(-2), fRequireMinimal);\n+                    CScriptNum bn2(stacktop(-1), fRequireMinimal);\n                     CScriptNum bn(0);\n                     switch (opcode)\n                     {\n@@ -635,9 +664,9 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     // (x min max -- out)\n                     if (stack.size() < 3)\n                         return false;\n-                    CScriptNum bn1(stacktop(-3));\n-                    CScriptNum bn2(stacktop(-2));\n-                    CScriptNum bn3(stacktop(-1));\n+                    CScriptNum bn1(stacktop(-3), fRequireMinimal);\n+                    CScriptNum bn2(stacktop(-2), fRequireMinimal);\n+                    CScriptNum bn3(stacktop(-1), fRequireMinimal);\n                     bool fValue = (bn2 <= bn1 && bn1 < bn3);\n                     popstack(stack);\n                     popstack(stack);\n@@ -727,7 +756,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     if ((int)stack.size() < i)\n                         return false;\n \n-                    int nKeysCount = CScriptNum(stacktop(-i)).getint();\n+                    int nKeysCount = CScriptNum(stacktop(-i), fRequireMinimal).getint();\n                     if (nKeysCount < 0 || nKeysCount > 20)\n                         return false;\n                     nOpCount += nKeysCount;\n@@ -738,7 +767,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     if ((int)stack.size() < i)\n                         return false;\n \n-                    int nSigsCount = CScriptNum(stacktop(-i)).getint();\n+                    int nSigsCount = CScriptNum(stacktop(-i), fRequireMinimal).getint();\n                     if (nSigsCount < 0 || nSigsCount > nKeysCount)\n                         return false;\n                     int isig = ++i;"
      },
      {
        "sha": "5133c80aabc792aa27291ce414a1dfde354e059e",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -49,6 +49,13 @@ enum\n \n     // Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\n     SCRIPT_VERIFY_SIGPUSHONLY = (1U << 5),\n+\n+    // Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n+    // pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n+    // any other push causes the script to fail (BIP62 rule 3).\n+    // In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n+    // (softfork safe)\n+    SCRIPT_VERIFY_MINIMALDATA = (1U << 6)\n };\n \n uint256 SignatureHash(const CScript &scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType);"
      },
      {
        "sha": "b879d72d6b963cd51ffbe0da548193b3ef706244",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 28,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -12,7 +12,7 @@ namespace {\n inline std::string ValueString(const std::vector<unsigned char>& vch)\n {\n     if (vch.size() <= 4)\n-        return strprintf(\"%d\", CScriptNum(vch).getint());\n+        return strprintf(\"%d\", CScriptNum(vch, false).getint());\n     else\n         return HexStr(vch);\n }\n@@ -238,33 +238,6 @@ bool CScript::IsPushOnly() const\n     return true;\n }\n \n-bool CScript::HasCanonicalPushes() const\n-{\n-    const_iterator pc = begin();\n-    while (pc < end())\n-    {\n-        opcodetype opcode;\n-        std::vector<unsigned char> data;\n-        if (!GetOp(pc, opcode, data))\n-            return false;\n-        if (opcode > OP_16)\n-            continue;\n-        if (opcode < OP_PUSHDATA1 && opcode > OP_0 && (data.size() == 1 && data[0] <= 16))\n-            // Could have used an OP_n code, rather than a 1-byte push.\n-            return false;\n-        if (opcode == OP_PUSHDATA1 && data.size() < OP_PUSHDATA1)\n-            // Could have used a normal n-byte push, rather than OP_PUSHDATA1.\n-            return false;\n-        if (opcode == OP_PUSHDATA2 && data.size() <= 0xFF)\n-            // Could have used an OP_PUSHDATA1.\n-            return false;\n-        if (opcode == OP_PUSHDATA4 && data.size() <= 0xFFFF)\n-            // Could have used an OP_PUSHDATA2.\n-            return false;\n-    }\n-    return true;\n-}\n-\n std::string CScript::ToString() const\n {\n     std::string str;"
      },
      {
        "sha": "e97967dcea64d96cce070f0296ef890bd2e6f977",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -192,10 +192,14 @@ class CScriptNum\n         m_value = n;\n     }\n \n-    explicit CScriptNum(const std::vector<unsigned char>& vch)\n+    explicit CScriptNum(const std::vector<unsigned char>& vch, bool fRequireMinimal)\n     {\n-        if (vch.size() > nMaxNumSize)\n-            throw scriptnum_error(\"CScriptNum(const std::vector<unsigned char>&) : overflow\");\n+        if (vch.size() > nMaxNumSize) {\n+            throw scriptnum_error(\"script number overflow\");\n+        }\n+        if (fRequireMinimal && vch.size() > 0 && (vch.back() & 0x7f) == 0 && (vch.size() <= 1 || (vch[vch.size() - 2] & 0x80) == 0)) {\n+            throw scriptnum_error(\"non-minimally encoded script number\");\n+        }\n         m_value = set_vch(vch);\n     }\n \n@@ -319,7 +323,6 @@ class CScriptNum\n     int64_t m_value;\n };\n \n-\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public std::vector<unsigned char>\n {\n@@ -330,6 +333,10 @@ class CScript : public std::vector<unsigned char>\n         {\n             push_back(n + (OP_1 - 1));\n         }\n+        else if (n == 0)\n+        {\n+            push_back(OP_0);\n+        }\n         else\n         {\n             *this << CScriptNum::serialize(n);\n@@ -554,9 +561,6 @@ class CScript : public std::vector<unsigned char>\n     // Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical).\n     bool IsPushOnly() const;\n \n-    // Called by IsStandardTx.\n-    bool HasCanonicalPushes() const;\n-\n     // Returns whether the script is guaranteed to fail at execution,\n     // regardless of the initial stack. This allows outputs to be pruned\n     // instantly when entering the UTXO set."
      },
      {
        "sha": "248b941a64ac2839d3076556a92ab9243cea02b8",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -41,6 +41,7 @@ static const unsigned int MANDATORY_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH;\n // blocks and we must accept those blocks.\n static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY_FLAGS |\n                                                          SCRIPT_VERIFY_STRICTENC |\n+                                                         SCRIPT_VERIFY_MINIMALDATA |\n                                                          SCRIPT_VERIFY_NULLDUMMY;\n \n // For convenience, standard but not mandatory verify flags."
      },
      {
        "sha": "5ead65f17f12f81c5e8ba087cfad6d832c9beda6",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -384,6 +384,10 @@ nSequences are max.\n \n [\"0x00\", \"'00' EQUAL\", \"P2SH,STRICTENC\", \"Basic OP_0 execution\"],\n \n+[\"1 IF 0x01 0x81 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n+[\"1 IF 0x01 0x05 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n+[\"1 IF 0x4c 0x03 0x222222 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n+\n [\n     \"0x47 0x30440220304eff7556bba9560df47873275e64db45f3cd735998ce3f00d2e57b1bb5f31302205c0c9d14b8b80d43e2ac9b87532f1af6d8a3271262bc694ec4e14068392bb0a001\",\n     \"0x41 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG\","
      },
      {
        "sha": "89619a9ddc171932a42cdf980ad854b021e1ac3a",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 29,
        "deletions": 2,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -529,6 +529,33 @@ nSequences are max.\n \n [\"0x00\", \"SIZE 0 EQUAL\", \"P2SH,STRICTENC\", \"Basic OP_0 execution\"],\n \n+[\"0x01 0x81\", \"0x4f EQUAL\", \"\", \"direct push of 0x81 equals 1NEGATE\"],\n+[\"0x01 0x05\", \"5 EQUAL\", \"\", \"direct push of 0x05 equals 5\"],\n+[\"0x4c 0x4b 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", \"0x4b 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 EQUAL\", \"\", \"PUSHDATA1 of 75 bytes equals direct push of it\"],\n+[\"0x4d 0xFF00 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", \"0x4c 0xFF 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 EQUAL\", \"\", \"PUSHDATA2 of 255 bytes equals PUSHDATA1 of it\"],\n+[\"0x02 0x8000\", \"128 NUMEQUAL\", \"\", \"0x8000 equals 128\"],\n+[\"0x01 0x00\", \"0 NUMEQUAL\", \"\", \"0x00 numequals 0\"],\n+[\"0x01 0x80\", \"0 NUMEQUAL\", \"\", \"0x80 (negative zero) numequals 0\"],\n+[\"0x02 0x0080\", \"0 NUMEQUAL\", \"\", \"0x0080 numequals 0\"],\n+[\"0x02 0x0500\", \"5 NUMEQUAL\", \"\", \"0x0500 numequals 5\"],\n+[\"0x03 0xff7f80\", \"0x02 0xffff NUMEQUAL\", \"\", \"\"],\n+[\"0x03 0xff7f00\", \"0x02 0xff7f NUMEQUAL\", \"\", \"\"],\n+[\"0x04 0xffff7f80\", \"0x03 0xffffff NUMEQUAL\", \"\", \"\"],\n+[\"0x04 0xffff7f00\", \"0x03 0xffff7f NUMEQUAL\", \"\", \"\"],\n+[\"0 IF 0x01 0x81 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x01 0x05 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x02 0x8000 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x01 0x00 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x01 0x80 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x02 0x0080 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x02 0x0400 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x03 0xff7f80 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x03 0xff7f00 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x04 0xffff7f80 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x04 0xffff7f00 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+[\"0 IF 0x4c 0x03 0x222222 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n+\n+\n [\n     \"0x47 0x3044022007415aa37ce7eaa6146001ac8bdefca0ddcba0e37c5dc08c4ac99392124ebac802207d382307fd53f65778b07b9c63b6e196edeadf0be719130c5db21ff1e700d67501\",\n     \"0x41 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG\",\n@@ -638,13 +665,13 @@ nSequences are max.\n     \"P2PK NOT with invalid sig and undefined hashtype but no STRICTENC\"\n ],\n [\n-    \"0x01 0x01 0x47 0x3044022046ce33d1771b0127dd4c4cef8fdc3218ebdfa60e3793ed700292d8ebd93fb1f402201029d47a414db83e96e31443c2d8b552f971469c4800f5eff7df2f0648521aed01 0x47 0x304402205c53911ad55b054920043962bbda98cf6e57e2db1cd5611138251490baabaa8702201dc80dfceae6007e7772dc13ff6e7ca66a983cb017fe5d46d30118462d83bcf801 0x47 0x304402201937e44a4ec12364f9d32f9d25e7ecbc68aee9ef90069af80efef4c05f6ace9602206c515101c00c75710b32ff7ff8dbaf7c9a0be6e86ed14a0755b47626604f31fd01\",\n+    \"1 0x47 0x3044022046ce33d1771b0127dd4c4cef8fdc3218ebdfa60e3793ed700292d8ebd93fb1f402201029d47a414db83e96e31443c2d8b552f971469c4800f5eff7df2f0648521aed01 0x47 0x304402205c53911ad55b054920043962bbda98cf6e57e2db1cd5611138251490baabaa8702201dc80dfceae6007e7772dc13ff6e7ca66a983cb017fe5d46d30118462d83bcf801 0x47 0x304402201937e44a4ec12364f9d32f9d25e7ecbc68aee9ef90069af80efef4c05f6ace9602206c515101c00c75710b32ff7ff8dbaf7c9a0be6e86ed14a0755b47626604f31fd01\",\n     \"3 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 3 CHECKMULTISIG\",\n     \"\",\n     \"3-of-3 with nonzero dummy but no NULLDUMMY\"\n ],\n [\n-    \"0x01 0x01 0x47 0x30440220195038dbc6b2ae1199f86a6777824f7c5149789d85f655a3534a4422b8fba38c02204df9db87d2eb9fe06edc66870d9ac4c9ce673459f9d43cee0347ce4ffb02ee5a01 0x47 0x3044022010a45f30c6fa97a186eba9e6b595ab87d3dfcbf05dcaf1f1b8e3e7bf39515bb802203474e78d3d372e5f5c0f8c257ce8300c4bb8f37c51d4a894e11a91b5817da6ed01 0x47 0x30440220039cffd8e39850f95112662b1220b14b3c0d3d8a2772e13c947bfbf96345a64e02204154bfa77e2c0134d5434353bed82141e5da1cc479954aa288d5f0671480a04b01\",\n+    \"1 0x47 0x30440220195038dbc6b2ae1199f86a6777824f7c5149789d85f655a3534a4422b8fba38c02204df9db87d2eb9fe06edc66870d9ac4c9ce673459f9d43cee0347ce4ffb02ee5a01 0x47 0x3044022010a45f30c6fa97a186eba9e6b595ab87d3dfcbf05dcaf1f1b8e3e7bf39515bb802203474e78d3d372e5f5c0f8c257ce8300c4bb8f37c51d4a894e11a91b5817da6ed01 0x47 0x30440220039cffd8e39850f95112662b1220b14b3c0d3d8a2772e13c947bfbf96345a64e02204154bfa77e2c0134d5434353bed82141e5da1cc479954aa288d5f0671480a04b01\",\n     \"3 0x21 0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 3 CHECKMULTISIG NOT\",\n     \"\",\n     \"3-of-3 NOT with invalid sig and nonzero dummy but no NULLDUMMY\""
      },
      {
        "sha": "a41552fea142ad8907e37074790da81c99f35e3c",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -179,7 +179,7 @@ class TestBuilder\n     TestBuilder& Num(int num)\n     {\n         DoPush();\n-        spendTx.vin[0].scriptSig << CScriptNum(num);\n+        spendTx.vin[0].scriptSig << num;\n         return *this;\n     }\n \n@@ -788,19 +788,19 @@ BOOST_AUTO_TEST_CASE(script_combineSigs)\n \n BOOST_AUTO_TEST_CASE(script_standard_push)\n {\n-    for (int i=0; i<1000; i++) {\n+    for (int i=0; i<67000; i++) {\n         CScript script;\n         script << i;\n         BOOST_CHECK_MESSAGE(script.IsPushOnly(), \"Number \" << i << \" is not pure push.\");\n-        BOOST_CHECK_MESSAGE(script.HasCanonicalPushes(), \"Number \" << i << \" push is not canonical.\");\n+        BOOST_CHECK_MESSAGE(VerifyScript(script, CScript() << OP_1, SCRIPT_VERIFY_MINIMALDATA, BaseSignatureChecker()), \"Number \" << i << \" push is not minimal data.\");\n     }\n \n-    for (int i=0; i<1000; i++) {\n+    for (unsigned int i=0; i<=MAX_SCRIPT_ELEMENT_SIZE; i++) {\n         std::vector<unsigned char> data(i, '\\111');\n         CScript script;\n         script << data;\n         BOOST_CHECK_MESSAGE(script.IsPushOnly(), \"Length \" << i << \" is not pure push.\");\n-        BOOST_CHECK_MESSAGE(script.HasCanonicalPushes(), \"Length \" << i << \" push is not canonical.\");\n+        BOOST_CHECK_MESSAGE(VerifyScript(script, CScript() << OP_1, SCRIPT_VERIFY_MINIMALDATA, BaseSignatureChecker()), \"Length \" << i << \" push is not minimal data.\");\n     }\n }\n "
      },
      {
        "sha": "5621e127293340d8974079a68331d3092bb9ed3e",
        "filename": "src/test/scriptnum_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/scriptnum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/scriptnum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/scriptnum_tests.cpp?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -25,11 +25,11 @@ static void CheckCreateVch(const int64_t& num)\n     BOOST_CHECK(verify(bignum, scriptnum));\n \n     CBigNum bignum2(bignum.getvch());\n-    CScriptNum scriptnum2(scriptnum.getvch());\n+    CScriptNum scriptnum2(scriptnum.getvch(), false);\n     BOOST_CHECK(verify(bignum2, scriptnum2));\n \n     CBigNum bignum3(scriptnum2.getvch());\n-    CScriptNum scriptnum3(bignum2.getvch());\n+    CScriptNum scriptnum3(bignum2.getvch(), false);\n     BOOST_CHECK(verify(bignum3, scriptnum3));\n }\n "
      },
      {
        "sha": "c46c31e99faf4b7cf51d1d225536542b499e602a",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "patch": "@@ -34,6 +34,7 @@ static std::map<string, unsigned int> mapFlagNames = boost::assign::map_list_of\n     (string(\"DERSIG\"), (unsigned int)SCRIPT_VERIFY_DERSIG)\n     (string(\"LOW_S\"), (unsigned int)SCRIPT_VERIFY_LOW_S)\n     (string(\"SIGPUSHONLY\"), (unsigned int)SCRIPT_VERIFY_SIGPUSHONLY)\n+    (string(\"MINIMALDATA\"), (unsigned int)SCRIPT_VERIFY_MINIMALDATA)\n     (string(\"NULLDUMMY\"), (unsigned int)SCRIPT_VERIFY_NULLDUMMY);\n \n unsigned int ParseScriptFlags(string strFlags)"
      }
    ]
  },
  {
    "sha": "6004e77b926b5588e4b8eebdff843fe6652e5885",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDA0ZTc3YjkyNmI1NTg4ZTRiOGVlYmRmZjg0M2ZlNjY1MmU1ODg1",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-14T15:18:24Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-25T10:03:20Z"
      },
      "message": "Improve CScriptNum() comment\n\nEdited-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "tree": {
        "sha": "b4a30945a2a6a4b7ac3c99e3a4933d93fccda9a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4a30945a2a6a4b7ac3c99e3a4933d93fccda9a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6004e77b926b5588e4b8eebdff843fe6652e5885",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6004e77b926b5588e4b8eebdff843fe6652e5885",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6004e77b926b5588e4b8eebdff843fe6652e5885",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6004e77b926b5588e4b8eebdff843fe6652e5885/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/698c6abb25c1fbbc7fa4ba46b60e9f17d97332ef"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 17,
      "deletions": 2
    },
    "files": [
      {
        "sha": "05f2e7e3a94f2b7bb9f12607c325019c0c13d86f",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6004e77b926b5588e4b8eebdff843fe6652e5885/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6004e77b926b5588e4b8eebdff843fe6652e5885/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=6004e77b926b5588e4b8eebdff843fe6652e5885",
        "patch": "@@ -197,8 +197,23 @@ class CScriptNum\n         if (vch.size() > nMaxNumSize) {\n             throw scriptnum_error(\"script number overflow\");\n         }\n-        if (fRequireMinimal && vch.size() > 0 && (vch.back() & 0x7f) == 0 && (vch.size() <= 1 || (vch[vch.size() - 2] & 0x80) == 0)) {\n-            throw scriptnum_error(\"non-minimally encoded script number\");\n+        if (fRequireMinimal && vch.size() > 0) {\n+            // Check that the number is encoded with the minimum possible\n+            // number of bytes.\n+            //\n+            // If the most-significant-byte - excluding the sign bit - is zero\n+            // then we're not minimal. Note how this test also rejects the\n+            // negative-zero encoding, 0x80.\n+            if ((vch.back() & 0x7f) == 0) {\n+                // One exception: if there's more than one byte and the most\n+                // significant bit of the second-most-significant-byte is set\n+                // it would conflict with the sign bit. An example of this case\n+                // is +-255, which encode to 0xff00 and 0xff80 respectively.\n+                // (big-endian).\n+                if (vch.size() <= 1 || (vch[vch.size() - 2] & 0x80) == 0) {\n+                    throw scriptnum_error(\"non-minimally encoded script number\");\n+                }\n+            }\n         }\n         m_value = set_vch(vch);\n     }"
      }
    ]
  },
  {
    "sha": "554147ad9e6fee1c1d3827ca971647a97a5c0d66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTQxNDdhZDllNmZlZTFjMWQzODI3Y2E5NzE2NDdhOTdhNWMwZDY2",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-14T17:38:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-25T10:11:38Z"
      },
      "message": "Ensure MINIMALDATA invalid tests can only fail one way\n\nRemoves the need for the 'negated' versions of the tests, and ensures\nother failures don't mask what we're trying to test.",
      "tree": {
        "sha": "93ac1b533bab06fc15ce6d5dc691b665dbbb0164",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93ac1b533bab06fc15ce6d5dc691b665dbbb0164"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/554147ad9e6fee1c1d3827ca971647a97a5c0d66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/554147ad9e6fee1c1d3827ca971647a97a5c0d66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/554147ad9e6fee1c1d3827ca971647a97a5c0d66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/554147ad9e6fee1c1d3827ca971647a97a5c0d66/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6004e77b926b5588e4b8eebdff843fe6652e5885",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6004e77b926b5588e4b8eebdff843fe6652e5885",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6004e77b926b5588e4b8eebdff843fe6652e5885"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c5d878102902ac9c82fcf39cd7739a49c6b8d6d5",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/554147ad9e6fee1c1d3827ca971647a97a5c0d66/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/554147ad9e6fee1c1d3827ca971647a97a5c0d66/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=554147ad9e6fee1c1d3827ca971647a97a5c0d66",
        "patch": "@@ -384,6 +384,18 @@ nSequences are max.\n \n [\"0x00\", \"'00' EQUAL\", \"P2SH,STRICTENC\", \"Basic OP_0 execution\"],\n \n+[\"0x01 0x81\", \"DROP 1\", \"MINIMALDATA\", \"direct push of 0x81 equals 1NEGATE\"],\n+[\"0x01 0x05\", \"DROP 1\", \"MINIMALDATA\", \"direct push of 0x05 equals 5\"],\n+[\"0x4c 0x48 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", \"DROP 1\", \"MINIMALDATA\", \"PUSHDATA1 of 72 bytes equals direct push of it\"],\n+[\"0x4d 0xFF00 0xof 255 bytes equals PUSHDATA1 of it\"],\n+[\"0x01 0x00\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x00 numequals 0\"],\n+[\"0x01 0x80\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x80 (negative zero) numequals 0\"],\n+[\"0x02 0x0080\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x0080 numequals 0\"],\n+[\"0x02 0x0500\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x0500 numequals 5\"],\n+[\"0x03 0xff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ffff\"],\n+[\"0x03 0xff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ff7f\"],\n+[\"0x04 0xffff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ffffff\"],\n+[\"0x04 0xffff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ffff7f\"],\n [\"1 IF 0x01 0x81 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n [\"1 IF 0x01 0x05 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n [\"1 IF 0x4c 0x03 0x222222 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],"
      }
    ]
  },
  {
    "sha": "dfeec18b85a3a209899dddd6af0ca47dfe48c4d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmVlYzE4Yjg1YTNhMjA5ODk5ZGRkZDZhZjBjYTQ3ZGZlNDhjNGQ0",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-14T18:24:13Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-25T10:12:06Z"
      },
      "message": "Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule",
      "tree": {
        "sha": "047b2f5943953c3c0390082812136013349d5013",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/047b2f5943953c3c0390082812136013349d5013"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "554147ad9e6fee1c1d3827ca971647a97a5c0d66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/554147ad9e6fee1c1d3827ca971647a97a5c0d66",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/554147ad9e6fee1c1d3827ca971647a97a5c0d66"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 50,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3e7bbe73de0c4a2cb473e40aba78dc914ec726f7",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=dfeec18b85a3a209899dddd6af0ca47dfe48c4d4",
        "patch": "@@ -400,6 +400,56 @@ nSequences are max.\n [\"1 IF 0x01 0x05 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n [\"1 IF 0x4c 0x03 0x222222 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n \n+\n+[\"Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule\"],\n+\n+[\"1 0x02 0x0000\", \"PICK DROP\", \"MINIMALDATA\"],\n+[\"1 0x02 0x0000\", \"ROLL DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000\", \"1ADD DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000\", \"1SUB DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000\", \"NEGATE DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000\", \"ABS DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000\", \"NOT DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000\", \"0NOTEQUAL DROP 1\", \"MINIMALDATA\"],\n+\n+[\"0 0x02 0x0000\", \"ADD DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"ADD DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"SUB DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"SUB DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"BOOLAND DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"BOOLAND DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"BOOLOR DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"BOOLOR DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"NUMEQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 1\", \"NUMEQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"NUMEQUALVERIFY 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"NUMEQUALVERIFY 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"NUMNOTEQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"NUMNOTEQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"LESSTHAN DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"LESSTHAN DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"GREATERTHAN DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"GREATERTHAN DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"LESSTHANOREQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"LESSTHANOREQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"GREATERTHANOREQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"GREATERTHANOREQUAL DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"MIN DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"MIN DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000\", \"MAX DROP 1\", \"MINIMALDATA\"],\n+[\"0x02 0x0000 0\", \"MAX DROP 1\", \"MINIMALDATA\"],\n+\n+[\"0x02 0x0000 0 0\", \"WITHIN DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000 0\", \"WITHIN DROP 1\", \"MINIMALDATA\"],\n+[\"0 0 0x02 0x0000\", \"WITHIN DROP 1\", \"MINIMALDATA\"],\n+\n+[\"0 0 0x02 0x0000\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000 0\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000 0 1\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\"],\n+[\"0 0 0x02 0x0000\", \"CHECKMULTISIGVERIFY 1\", \"MINIMALDATA\"],\n+[\"0 0x02 0x0000 0\", \"CHECKMULTISIGVERIFY 1\", \"MINIMALDATA\"],\n+\n+\n [\n     \"0x47 0x30440220304eff7556bba9560df47873275e64db45f3cd735998ce3f00d2e57b1bb5f31302205c0c9d14b8b80d43e2ac9b87532f1af6d8a3271262bc694ec4e14068392bb0a001\",\n     \"0x41 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG\","
      }
    ]
  },
  {
    "sha": "2b62e1796bb58d1ef2e2a83e42958111467f0562",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjYyZTE3OTZiYjU4ZDFlZjJlMmE4M2U0Mjk1ODExMTQ2N2YwNTYy",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-14T19:08:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-25T10:12:39Z"
      },
      "message": "Clearly separate PUSHDATA and numeric argument MINIMALDATA tests",
      "tree": {
        "sha": "f5d9ed53e78103589cf7dc2051946c869eae9676",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5d9ed53e78103589cf7dc2051946c869eae9676"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b62e1796bb58d1ef2e2a83e42958111467f0562",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b62e1796bb58d1ef2e2a83e42958111467f0562",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b62e1796bb58d1ef2e2a83e42958111467f0562",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b62e1796bb58d1ef2e2a83e42958111467f0562/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfeec18b85a3a209899dddd6af0ca47dfe48c4d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfeec18b85a3a209899dddd6af0ca47dfe48c4d4"
      }
    ],
    "stats": {
      "total": 144,
      "additions": 114,
      "deletions": 30
    },
    "files": [
      {
        "sha": "6f451a36eedf941f3f1ad06a9ad342c2e591f7fc",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 44,
        "deletions": 15,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b62e1796bb58d1ef2e2a83e42958111467f0562/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b62e1796bb58d1ef2e2a83e42958111467f0562/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=2b62e1796bb58d1ef2e2a83e42958111467f0562",
        "patch": "@@ -384,22 +384,51 @@ nSequences are max.\n \n [\"0x00\", \"'00' EQUAL\", \"P2SH,STRICTENC\", \"Basic OP_0 execution\"],\n \n-[\"0x01 0x81\", \"DROP 1\", \"MINIMALDATA\", \"direct push of 0x81 equals 1NEGATE\"],\n-[\"0x01 0x05\", \"DROP 1\", \"MINIMALDATA\", \"direct push of 0x05 equals 5\"],\n-[\"0x4c 0x48 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", \"DROP 1\", \"MINIMALDATA\", \"PUSHDATA1 of 72 bytes equals direct push of it\"],\n-[\"0x4d 0xFF00 0xof 255 bytes equals PUSHDATA1 of it\"],\n-[\"0x01 0x00\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x00 numequals 0\"],\n+[\"MINIMALDATA enforcement for PUSHDATAs\"],\n+\n+[\"0x4c 0x00\", \"DROP 1\", \"MINIMALDATA\", \"Empty vector minimally represented by OP_0\"],\n+[\"0x01 0x81\", \"DROP 1\", \"MINIMALDATA\", \"-1 minimally represented by OP_1NEGATE\"],\n+[\"0x01 0x01\", \"DROP 1\", \"MINIMALDATA\", \"1 to 16 minimally represented by OP_1 to OP_16\"],\n+[\"0x01 0x02\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x03\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x04\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x05\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x06\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x07\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x08\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x09\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x0a\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x0b\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x0c\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x0d\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x0e\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x0f\", \"DROP 1\", \"MINIMALDATA\"],\n+[\"0x01 0x10\", \"DROP 1\", \"MINIMALDATA\"],\n+\n+[\"0x4c 0x48 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", \"DROP 1\", \"MINIMALDATA\",\n+ \"PUSHDATA1 of 72 bytes minimally represented by direct push\"],\n+\n+[\"0x4d 0xFF00 0xn+ \"PUSHDATA2 of 255 bytes minimally represented by PUSHDATA1\"],\n+\n+[\"0x4f 0x00100000 0xn+ \"PUSHDATA4 of 256 bytes minimally represented by PUSHDATA2\"],\n+\n+\n+[\"MINIMALDATA enforcement for numeric arguments\"],\n+\n+[\"0x01 0x00\", \"NOT DROP 1\", \"MINIMALDATA\", \"numequals 0\"],\n+[\"0x02 0x0000\", \"NOT DROP 1\", \"MINIMALDATA\", \"numequals 0\"],\n [\"0x01 0x80\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x80 (negative zero) numequals 0\"],\n-[\"0x02 0x0080\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x0080 numequals 0\"],\n-[\"0x02 0x0500\", \"NOT DROP 1\", \"MINIMALDATA\", \"0x0500 numequals 5\"],\n-[\"0x03 0xff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ffff\"],\n-[\"0x03 0xff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ff7f\"],\n-[\"0x04 0xffff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ffffff\"],\n-[\"0x04 0xffff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is ffff7f\"],\n-[\"1 IF 0x01 0x81 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n-[\"1 IF 0x01 0x05 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n-[\"1 IF 0x4c 0x03 0x222222 ENDIF 1\", \"\", \"MINIMALDATA\", \"evaluated non-minimal data\"],\n-\n+[\"0x02 0x0080\", \"NOT DROP 1\", \"MINIMALDATA\", \"numequals 0\"],\n+[\"0x02 0x0500\", \"NOT DROP 1\", \"MINIMALDATA\", \"numequals 5\"],\n+[\"0x03 0x050000\", \"NOT DROP 1\", \"MINIMALDATA\", \"numequals 5\"],\n+[\"0x02 0x0580\", \"NOT DROP 1\", \"MINIMALDATA\", \"numequals -5\"],\n+[\"0x03 0x050080\", \"NOT DROP 1\", \"MINIMALDATA\", \"numequals -5\"],\n+[\"0x03 0xff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is 0xffff\"],\n+[\"0x03 0xff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is 0xff7f\"],\n+[\"0x04 0xffff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is 0xffffff\"],\n+[\"0x04 0xffff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"Minimal encoding is 0xffff7f\"],\n \n [\"Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule\"],\n "
      },
      {
        "sha": "b2601deb5338e43cea337a597d615948eecfadb7",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 70,
        "deletions": 15,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b62e1796bb58d1ef2e2a83e42958111467f0562/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b62e1796bb58d1ef2e2a83e42958111467f0562/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=2b62e1796bb58d1ef2e2a83e42958111467f0562",
        "patch": "@@ -527,12 +527,35 @@ nSequences are max.\n \"P2SH,STRICTENC\",\n \"Basic PUSHDATA1 signedness check\"],\n \n-[\"0x00\", \"SIZE 0 EQUAL\", \"P2SH,STRICTENC\", \"Basic OP_0 execution\"],\n+[\"all PUSHDATA forms are equivalent\"],\n \n-[\"0x01 0x81\", \"0x4f EQUAL\", \"\", \"direct push of 0x81 equals 1NEGATE\"],\n-[\"0x01 0x05\", \"5 EQUAL\", \"\", \"direct push of 0x05 equals 5\"],\n [\"0x4c 0x4b 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", \"0x4b 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 EQUAL\", \"\", \"PUSHDATA1 of 75 bytes equals direct push of it\"],\n [\"0x4d 0xFF00 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", \"0x4c 0xFF 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 EQUAL\", \"\", \"PUSHDATA2 of 255 bytes equals PUSHDATA1 of it\"],\n+\n+[\"0x00\", \"SIZE 0 EQUAL\", \"P2SH,STRICTENC\", \"Basic OP_0 execution\"],\n+\n+[\"Numeric pushes\"],\n+\n+[\"0x01 0x81\", \"0x4f EQUAL\", \"\", \"OP1_NEGATE pushes 0x81\"],\n+[\"0x01 0x01\", \"0x51 EQUAL\", \"\", \"OP_1  pushes 0x01\"],\n+[\"0x01 0x02\", \"0x52 EQUAL\", \"\", \"OP_2  pushes 0x02\"],\n+[\"0x01 0x03\", \"0x53 EQUAL\", \"\", \"OP_3  pushes 0x03\"],\n+[\"0x01 0x04\", \"0x54 EQUAL\", \"\", \"OP_4  pushes 0x04\"],\n+[\"0x01 0x05\", \"0x55 EQUAL\", \"\", \"OP_5  pushes 0x05\"],\n+[\"0x01 0x06\", \"0x56 EQUAL\", \"\", \"OP_6  pushes 0x06\"],\n+[\"0x01 0x07\", \"0x57 EQUAL\", \"\", \"OP_7  pushes 0x07\"],\n+[\"0x01 0x08\", \"0x58 EQUAL\", \"\", \"OP_8  pushes 0x08\"],\n+[\"0x01 0x09\", \"0x59 EQUAL\", \"\", \"OP_9  pushes 0x09\"],\n+[\"0x01 0x0a\", \"0x5a EQUAL\", \"\", \"OP_10 pushes 0x0a\"],\n+[\"0x01 0x0b\", \"0x5b EQUAL\", \"\", \"OP_11 pushes 0x0b\"],\n+[\"0x01 0x0c\", \"0x5c EQUAL\", \"\", \"OP_12 pushes 0x0c\"],\n+[\"0x01 0x0d\", \"0x5d EQUAL\", \"\", \"OP_13 pushes 0x0d\"],\n+[\"0x01 0x0e\", \"0x5e EQUAL\", \"\", \"OP_14 pushes 0x0e\"],\n+[\"0x01 0x0f\", \"0x5f EQUAL\", \"\", \"OP_15 pushes 0x0f\"],\n+[\"0x01 0x10\", \"0x60 EQUAL\", \"\", \"OP_16 pushes 0x10\"],\n+\n+[\"Equivalency of different numeric encodings\"],\n+\n [\"0x02 0x8000\", \"128 NUMEQUAL\", \"\", \"0x8000 equals 128\"],\n [\"0x01 0x00\", \"0 NUMEQUAL\", \"\", \"0x00 numequals 0\"],\n [\"0x01 0x80\", \"0 NUMEQUAL\", \"\", \"0x80 (negative zero) numequals 0\"],\n@@ -542,19 +565,51 @@ nSequences are max.\n [\"0x03 0xff7f00\", \"0x02 0xff7f NUMEQUAL\", \"\", \"\"],\n [\"0x04 0xffff7f80\", \"0x03 0xffffff NUMEQUAL\", \"\", \"\"],\n [\"0x04 0xffff7f00\", \"0x03 0xffff7f NUMEQUAL\", \"\", \"\"],\n-[\"0 IF 0x01 0x81 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x01 0x05 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x02 0x8000 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x01 0x00 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x01 0x80 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x02 0x0080 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x02 0x0400 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x03 0xff7f80 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x03 0xff7f00 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x04 0xffff7f80 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x04 0xffff7f00 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n-[\"0 IF 0x4c 0x03 0x222222 ENDIF 1\", \"\", \"MINIMALDATA\", \"unevaluated non-minimal data\"],\n \n+[\"Unevaluated non-minimal pushes are ignored\"],\n+\n+[\"0 IF 0x4c 0x00 ENDIF 1\", \"\", \"MINIMALDATA\", \"non-minimal PUSHDATA1 ignored\"],\n+[\"0 IF 0x4d 0x0000 ENDIF 1\", \"\", \"MINIMALDATA\", \"non-minimal PUSHDATA2 ignored\"],\n+[\"0 IF 0x4c 0x00000000 ENDIF 1\", \"\", \"MINIMALDATA\", \"non-minimal PUSHDATA4 ignored\"],\n+[\"0 IF 0x01 0x81 ENDIF 1\", \"\", \"MINIMALDATA\", \"1NEGATE equiv\"],\n+[\"0 IF 0x01 0x01 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_1  equiv\"],\n+[\"0 IF 0x01 0x02 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_2  equiv\"],\n+[\"0 IF 0x01 0x03 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_3  equiv\"],\n+[\"0 IF 0x01 0x04 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_4  equiv\"],\n+[\"0 IF 0x01 0x05 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_5  equiv\"],\n+[\"0 IF 0x01 0x06 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_6  equiv\"],\n+[\"0 IF 0x01 0x07 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_7  equiv\"],\n+[\"0 IF 0x01 0x08 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_8  equiv\"],\n+[\"0 IF 0x01 0x09 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_9  equiv\"],\n+[\"0 IF 0x01 0x0a ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_10 equiv\"],\n+[\"0 IF 0x01 0x0b ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_11 equiv\"],\n+[\"0 IF 0x01 0x0c ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_12 equiv\"],\n+[\"0 IF 0x01 0x0d ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_13 equiv\"],\n+[\"0 IF 0x01 0x0e ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_14 equiv\"],\n+[\"0 IF 0x01 0x0f ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_15 equiv\"],\n+[\"0 IF 0x01 0x10 ENDIF 1\", \"\", \"MINIMALDATA\", \"OP_16 equiv\"],\n+\n+[\"Numeric minimaldata rules are only applied when a stack item is numerically evaluated; the push itself is allowed\"],\n+\n+[\"0x01 0x00\", \"1\", \"MINIMALDATA\"],\n+[\"0x01 0x80\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0180\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0100\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0200\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0300\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0400\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0500\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0600\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0700\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0800\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0900\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0a00\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0b00\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0c00\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0d00\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0e00\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x0f00\", \"1\", \"MINIMALDATA\"],\n+[\"0x02 0x1000\", \"1\", \"MINIMALDATA\"],\n \n [\n     \"0x47 0x3044022007415aa37ce7eaa6146001ac8bdefca0ddcba0e37c5dc08c4ac99392124ebac802207d382307fd53f65778b07b9c63b6e196edeadf0be719130c5db21ff1e700d67501\","
      }
    ]
  },
  {
    "sha": "16d78bd68e1488a2a84e368b50bf511c77392d2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmQ3OGJkNjhlMTQ4OGEyYTg0ZTM2OGI1MGJmNTExYzc3MzkyZDJl",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-14T20:00:29Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-25T10:13:15Z"
      },
      "message": "Add valid invert of invalid every numeric opcode tests",
      "tree": {
        "sha": "a72038e439e8d766cdf59787aa2cda41fd74ec06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a72038e439e8d766cdf59787aa2cda41fd74ec06"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16d78bd68e1488a2a84e368b50bf511c77392d2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16d78bd68e1488a2a84e368b50bf511c77392d2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16d78bd68e1488a2a84e368b50bf511c77392d2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16d78bd68e1488a2a84e368b50bf511c77392d2e/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b62e1796bb58d1ef2e2a83e42958111467f0562",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b62e1796bb58d1ef2e2a83e42958111467f0562",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b62e1796bb58d1ef2e2a83e42958111467f0562"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 49,
      "deletions": 0
    },
    "files": [
      {
        "sha": "439c82ef3200729a0bbbfe1055fdfccbe7e0b732",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16d78bd68e1488a2a84e368b50bf511c77392d2e/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16d78bd68e1488a2a84e368b50bf511c77392d2e/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=16d78bd68e1488a2a84e368b50bf511c77392d2e",
        "patch": "@@ -611,6 +611,55 @@ nSequences are max.\n [\"0x02 0x0f00\", \"1\", \"MINIMALDATA\"],\n [\"0x02 0x1000\", \"1\", \"MINIMALDATA\"],\n \n+[\"Valid version of the 'Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule' script_invalid test\"],\n+\n+[\"1 0x02 0x0000\", \"PICK DROP\", \"\"],\n+[\"1 0x02 0x0000\", \"ROLL DROP 1\", \"\"],\n+[\"0x02 0x0000\", \"1ADD DROP 1\", \"\"],\n+[\"0x02 0x0000\", \"1SUB DROP 1\", \"\"],\n+[\"0x02 0x0000\", \"NEGATE DROP 1\", \"\"],\n+[\"0x02 0x0000\", \"ABS DROP 1\", \"\"],\n+[\"0x02 0x0000\", \"NOT DROP 1\", \"\"],\n+[\"0x02 0x0000\", \"0NOTEQUAL DROP 1\", \"\"],\n+\n+[\"0 0x02 0x0000\", \"ADD DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"ADD DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"SUB DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"SUB DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"BOOLAND DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"BOOLAND DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"BOOLOR DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"BOOLOR DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"NUMEQUAL DROP 1\", \"\"],\n+[\"0x02 0x0000 1\", \"NUMEQUAL DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"NUMEQUALVERIFY 1\", \"\"],\n+[\"0x02 0x0000 0\", \"NUMEQUALVERIFY 1\", \"\"],\n+[\"0 0x02 0x0000\", \"NUMNOTEQUAL DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"NUMNOTEQUAL DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"LESSTHAN DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"LESSTHAN DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"GREATERTHAN DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"GREATERTHAN DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"LESSTHANOREQUAL DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"LESSTHANOREQUAL DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"GREATERTHANOREQUAL DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"GREATERTHANOREQUAL DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"MIN DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"MIN DROP 1\", \"\"],\n+[\"0 0x02 0x0000\", \"MAX DROP 1\", \"\"],\n+[\"0x02 0x0000 0\", \"MAX DROP 1\", \"\"],\n+\n+[\"0x02 0x0000 0 0\", \"WITHIN DROP 1\", \"\"],\n+[\"0 0x02 0x0000 0\", \"WITHIN DROP 1\", \"\"],\n+[\"0 0 0x02 0x0000\", \"WITHIN DROP 1\", \"\"],\n+\n+[\"0 0 0x02 0x0000\", \"CHECKMULTISIG DROP 1\", \"\"],\n+[\"0 0x02 0x0000 0\", \"CHECKMULTISIG DROP 1\", \"\"],\n+[\"0 0x02 0x0000 0 1\", \"CHECKMULTISIG DROP 1\", \"\"],\n+[\"0 0 0x02 0x0000\", \"CHECKMULTISIGVERIFY 1\", \"\"],\n+[\"0 0x02 0x0000 0\", \"CHECKMULTISIGVERIFY 1\", \"\"],\n+\n+\n [\n     \"0x47 0x3044022007415aa37ce7eaa6146001ac8bdefca0ddcba0e37c5dc08c4ac99392124ebac802207d382307fd53f65778b07b9c63b6e196edeadf0be719130c5db21ff1e700d67501\",\n     \"0x41 0x0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG\","
      }
    ]
  }
]