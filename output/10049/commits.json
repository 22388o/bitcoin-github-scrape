[
  {
    "sha": "6df0f29aba466e699ad490f5185060a0da275ffc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGYwZjI5YWJhNDY2ZTY5OWFkNDkwZjUxODUwNjBhMGRhMjc1ZmZj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-03-22T05:40:14Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-03-22T05:40:14Z"
      },
      "message": "[tests] Remove unused variables",
      "tree": {
        "sha": "44df2d1bed390e1edb8dca24fa30aafb3e13b74c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44df2d1bed390e1edb8dca24fa30aafb3e13b74c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6df0f29aba466e699ad490f5185060a0da275ffc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6df0f29aba466e699ad490f5185060a0da275ffc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6df0f29aba466e699ad490f5185060a0da275ffc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6df0f29aba466e699ad490f5185060a0da275ffc/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "919aaf6508557439ab859c25dae86998a9bed12f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/919aaf6508557439ab859c25dae86998a9bed12f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/919aaf6508557439ab859c25dae86998a9bed12f"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "89d42a710c5d7126c0d1ec9018e5c43c4dad1333",
        "filename": "test/functional/bip68-sequence.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bip68-sequence.py?ref=6df0f29aba466e699ad490f5185060a0da275ffc",
        "patch": "@@ -378,8 +378,8 @@ def activateCSV(self):\n         # activation should happen at block height 432 (3 periods)\n         min_activation_height = 432\n         height = self.nodes[0].getblockcount()\n-        assert(height < 432)\n-        self.nodes[0].generate(432-height)\n+        assert(height < min_activation_height)\n+        self.nodes[0].generate(min_activation_height-height)\n         assert(get_bip9_status(self.nodes[0], 'csv')['status'] == 'active')\n         sync_blocks(self.nodes)\n "
      },
      {
        "sha": "1dc00f2ba1ecb54ece45c48252124a12d4b282c7",
        "filename": "test/functional/fundrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/fundrawtransaction.py?ref=6df0f29aba466e699ad490f5185060a0da275ffc",
        "patch": "@@ -691,7 +691,6 @@ def run_test(self):\n \n         inputs = []\n         outputs = {self.nodes[2].getnewaddress(): value for value in (1.0, 1.1, 1.2, 1.3)}\n-        keys = list(outputs.keys())\n         rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n \n         result = [self.nodes[3].fundrawtransaction(rawtx),"
      },
      {
        "sha": "a9701c548bccb1e766e60352188a5981a4feb31d",
        "filename": "test/functional/multi_rpc.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multi_rpc.py?ref=6df0f29aba466e699ad490f5185060a0da275ffc",
        "patch": "@@ -41,11 +41,9 @@ def run_test(self):\n         authpair = url.username + ':' + url.password\n \n         #New authpair generated via share/rpcuser tool\n-        rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n         password = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n \n         #Second authpair with different username\n-        rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n         password2 = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n         authpairnew = \"rt:\"+password\n "
      },
      {
        "sha": "d4c684136c01d2b5d3b3ed42cb728ca3707a6fa5",
        "filename": "test/functional/rawtransactions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rawtransactions.py?ref=6df0f29aba466e699ad490f5185060a0da275ffc",
        "patch": "@@ -104,7 +104,6 @@ def run_test(self):\n         txId = self.nodes[0].sendtoaddress(mSigObj, 2.2)\n         decTx = self.nodes[0].gettransaction(txId)\n         rawTx = self.nodes[0].decoderawtransaction(decTx['hex'])\n-        sPK = rawTx['vout'][0]['scriptPubKey']['hex']\n         self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()"
      },
      {
        "sha": "9e27b46381dc42419268ca90ed77e3301d4b5293",
        "filename": "test/functional/zmq_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6df0f29aba466e699ad490f5185060a0da275ffc/test/functional/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/zmq_test.py?ref=6df0f29aba466e699ad490f5185060a0da275ffc",
        "patch": "@@ -41,7 +41,6 @@ def run_test(self):\n         topic = msg[0]\n         assert_equal(topic, b\"hashtx\")\n         body = msg[1]\n-        nseq = msg[2]\n         msgSequence = struct.unpack('<I', msg[-1])[-1]\n         assert_equal(msgSequence, 0) #must be sequence 0 on hashtx\n "
      }
    ]
  }
]