laanwj,2016-03-28T10:15:39Z,"Travis fail was unrelated (#7463), retriggering.\n",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-202332874,202332874,
petertodd,2016-03-30T12:30:40Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-203408169,203408169,
jonasschnelli,2016-03-30T12:57:33Z,utACK d4b854dccfd6afef4a1daf056b15d4f3f0d52eaa\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-203419898,203419898,
paveljanik,2016-03-30T13:22:16Z,"ACK https://github.com/bitcoin/bitcoin/pull/7749/commits/d4b854dccfd6afef4a1daf056b15d4f3f0d52eaa\n\n`btctest addnode 188.226.202.220 onetry` producing:\n\n```\n2016-03-30 13:17:37 trying connection 188.226.202.220 lastseen=0.0hrs\n2016-03-30 13:17:37 Added connection to 188.226.202.220 peer=12\n2016-03-30 13:17:37 send version message: version 70013, blocks=754598, us=0.0.0.0:18333, them=188.226.",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-203429492,203429492,
gmaxwell,2016-03-30T16:17:06Z,"utACK.   @paveljanik ""the"" is appropriate there.\n",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-203509837,203509837,
sdaftuar,2016-04-22T14:58:45Z,Is the behavior that @paveljanik observed with his test the intended behavior?  I would have guessed that we'd want `addnode` (or `connect`) to bypass the expected services requirement.\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-213463898,213463898,
sipa,2016-05-17T07:19:33Z,Mental note: we should do an exact assignment (rather than or'ing) when directly connected to a peer and it tells us its nVersion.\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-219638549,219638549,
sipa,2016-05-25T15:26:30Z,"Rebased, and fixed the behaviour @paveljanik saw.\n",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-221612165,221612165,
sipa,2016-06-08T12:12:41Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-224570699,224570699,
sipa,2016-06-08T16:19:22Z,"Rebased on top of #8083, and making it use this PR's nRelevantServices as the nRequiredServices value requested from filtering seeds.\n",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-224644585,224644585,
theuni,2016-06-08T16:40:51Z,"Nit: For readability, can we get a constant NODE_SERVICES_NONE or so (i'm at a loss for a good name) rather than passing 0 everywhere?\n",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-224650936,224650936,
sipa,2016-06-08T17:14:26Z,For discussion: I've instead switched the NODE_\* flags to an enum.\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-224662447,224662447,
theuni,2016-06-08T17:34:07Z,"ahhh, much better. Thanks.\n",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-224668298,224668298,
laanwj,2016-06-09T05:44:54Z,> For discussion: I've instead switched the NODE_\* flags to an enum.\n\nACK\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-224805288,224805288,
sipa,2016-06-12T21:51:20Z,Rebased and addressed @kazcw 's comment.\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-225462649,225462649,
gmaxwell,2016-06-13T17:25:46Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-225650298,225650298,
laanwj,2016-06-13T17:29:04Z,utACK ecd7fd3\n,https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-225651222,225651222,
sipa,2016-09-01T07:49:05Z,"No, there can be relevant services that a peer does not advertize, and we decide to connect to them anyway. We shouldn't disconnect them later just because they happen to not have that service listed.\n\nI'm tired of explaining this over and over again. Relevant does not mean required; it means relevant. You're welcome to add comments with explanations about the meaning of variables and logic, but",https://github.com/bitcoin/bitcoin/pull/7749#issuecomment-244002662,244002662,
kazcw,2016-04-16T04:42:46Z,return here?\n,https://github.com/bitcoin/bitcoin/pull/7749#discussion_r59962426,59962426,src/main.cpp
MarcoFalke,2016-06-05T13:17:02Z,"@sipa  Have you made sure the test are not using the default?\n\nI get a failure in `test/addrman_tests.cpp:71`\n\n``` cpp\ntest/addrman_tests.cpp: In member function ‘void addrman_tests::addrman_simple::test_method()’:\ntest/addrman_tests.cpp:71:31: error: no matching function for call to ‘CAddress::CAddress(CService&)’\n     addrman.Add(CAddress(addr1), source);\n                               ^",https://github.com/bitcoin/bitcoin/pull/7749#discussion_r65817271,65817271,src/protocol.h
sipa,2016-06-06T09:41:14Z,Fixed!\n,https://github.com/bitcoin/bitcoin/pull/7749#discussion_r65862637,65862637,src/protocol.h
sipa,2016-06-12T21:50:41Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/7749#discussion_r66728275,66728275,src/main.cpp
laanwj,2016-06-13T13:09:10Z,Maybe make the bitmask of required services a constant\n,https://github.com/bitcoin/bitcoin/pull/7749#discussion_r66788076,66788076,src/main.cpp
laanwj,2016-06-13T13:13:37Z,"Or wait, shouldn't this be nRelevantServices?\nThough I'm not sure ""relevantservices"" is a good name if we _only_ consider nodes with those service bits.\n",https://github.com/bitcoin/bitcoin/pull/7749#discussion_r66788726,66788726,src/net.cpp
sipa,2016-06-13T13:17:01Z,"There may be relevant services that are not required, but still preferred. I'll add a constant for required services.\n",https://github.com/bitcoin/bitcoin/pull/7749#discussion_r66789157,66789157,src/net.cpp
sipa,2016-06-13T14:01:39Z,Done.\n,https://github.com/bitcoin/bitcoin/pull/7749#discussion_r66796013,66796013,src/net.cpp
rebroad,2016-08-24T06:43:57Z,"Is disconnection really the right solution here? For example, let's say we were expecting NODE_NETWORK yet we connect and now find the node is a pruned node. This wouldn't be an issue if we're already caught up with the blockchain, would it?\n",https://github.com/bitcoin/bitcoin/pull/7749#discussion_r76002206,76002206,src/main.cpp
rebroad,2016-08-24T06:56:55Z,"Why only connect to full nodes? Surely this is only a requirement when we are more than 550 blocks behind on the blockchain. Also, with this change, it is possible that a node that was previously pruning becomes a full-node, and it will never be rediscovered again as a full-node for as long as it's IP address remains the same.\n",https://github.com/bitcoin/bitcoin/pull/7749#discussion_r76003466,76003466,src/net.cpp
sipa,2016-08-24T07:04:59Z,"> Why only connect to full nodes? Surely this is only a requirement when we\n> are more than 550 blocks behind on the blockchain.\n\nNo, we always want this requirement.\n\nOtherwise we may end up trying to connect to lightweight clients that do\nnot even relay blocks at all.\n",https://github.com/bitcoin/bitcoin/pull/7749#discussion_r76004213,76004213,src/net.cpp
rebroad,2016-09-01T07:43:33Z,"Ok, I think I have found a problem with this line. Shouldn't it instead read:-\n\n`if (nRelevantServices & ~pfrom->nServices)`\n\n?\n\ni.e. the ExpectedServices are irrelevant (which are ANDed with nRelevantServices anyway). E.g. if the relevant services are NODE_NETWORK (as they usually are) and you connect to a node which HAS NODE_NETWORK but it wasn't expected to have NODE_NETWORK, then why wou",https://github.com/bitcoin/bitcoin/pull/7749#discussion_r77127494,77127494,src/main.cpp
rebroad,2016-10-16T01:25:04Z,Why return false rather than true? False just causes an extra error message to be displayed in debug.log (saying ProcessMessage failed).\n,https://github.com/bitcoin/bitcoin/pull/7749#discussion_r83543182,83543182,src/main.cpp
