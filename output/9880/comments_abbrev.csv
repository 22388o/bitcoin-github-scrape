petertodd,2017-02-27T21:58:13Z,"While concept ACK, note that collision attacks on sha1 signatures - particularly in selfsigs - aren't as insecure as you might think. The reason is they're basically an attack on yourself. For instance, in the case of a selfsig, you already can add multiple subkeys to your PGP identity anyway, and you can do so without revealing that fact to the public, so there isn't a direct attack vector.\n\n",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-282869360,282869360,
petertodd,2017-02-27T22:04:25Z,"Oh, and another reason to Concept ACK this: it wouldn't be surprising if a colliding self-sig or similar could be used to trigger a non-cryptographic bug in validation somewhere, given that you're violating the common assumption that hash functions don't collide.",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-282871270,282871270,
TheBlueMatt,2017-02-27T22:04:28Z,"@petertodd indeed, selfsig attacks aren't so interesting, but I'm not aware of another way to prevent sha1-based signatures. While probably also not particularly interesting attack vectors, its good belt-and-suspenders when signing ""untrusted input"" (in the form of the git tree root/sha512 tree root/commit messages/etc) to avoid sha1 inputs.",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-282871285,282871285,
petertodd,2017-02-27T22:07:57Z,"@TheBlueMatt Oh, yeah you make a good point in saying this is a case of ""untrusted input"", as the commit message to be made is semi-deterministic and under the control of the pull-requester.\n\nOne sec, I'll write up a comment for you. :)",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-282872197,282872197,
TheBlueMatt,2017-03-01T16:31:26Z,"* Rebased.\n* Now enforces lack of symlinks in github-merge.py.\n* Now enforces lack of symlinks in verify-commits.sh\n* Always enforce non-SHA1-sigs even when --tree-checks is off\n* Update trusted-sha256-root-commit until Marco updates his subkeys.",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-283391825,283391825,
laanwj,2017-03-02T09:24:32Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-283601040,283601040,
laanwj,2017-03-03T13:56:17Z,"Note that verify-commits on master is currently failing. I've tried it with this version and it doesn't pass either:\n```\nUsing verify-commits data from /.../bitcoin/contrib/verify-commits.new\nNo parent of 58861ad91b499f6902c0f1c51bb745b91a275826 was signed with a trusted key!\nParents are:\ncommit f7ec7cfd38b543ba81ac7bed5b77f9a19739460b\nMerge: 65d90f5 7ed143c\nAuthor: MarcoFalke <falke",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-283959063,283959063,
TheBlueMatt,2017-03-04T00:08:26Z,"* Updated the trusted-sha256-root-commit for Jonas' sha2 commit.\n* Allow any subkey that is properly signed, instead of only listing specific subkeys (this should fix verify-commits on master).",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-284105213,284105213,
MarcoFalke,2017-03-04T13:01:07Z,utACK 6b2a4a3,https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-284150111,284150111,
TheBlueMatt,2017-03-04T20:22:50Z,"We may want to backport at least the ""Allow any subkey in verify-commits"" commit for 0.14 so that verify-commits passes on release",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-284178227,284178227,
TheBlueMatt,2017-03-05T16:22:35Z,Pushed a new commit which will fix the checks on the 0.14 branch.,https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-284240756,284240756,
jonasschnelli,2017-03-06T11:14:47Z,"Verified the new/changed keys (same as in #9920).\nTested ACK bbd757940bcb0628df6f7a5bd1fb348cf2290502",https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-284368862,284368862,
laanwj,2017-03-06T16:17:33Z,Going to merge this to fix travis. The shasum nit can be fixed later.,https://github.com/bitcoin/bitcoin/pull/9880#issuecomment-284446011,284446011,
MarcoFalke,2017-03-04T12:59:08Z,Either the constant is off by one or the line this is placed in is off by two.,https://github.com/bitcoin/bitcoin/pull/9880#discussion_r104287436,104287436,contrib/verify-commits/verify-commits.sh
TheBlueMatt,2017-03-04T14:41:52Z,"Oops, indeed. Fixed and squashed.",https://github.com/bitcoin/bitcoin/pull/9880#discussion_r104289092,104289092,contrib/verify-commits/verify-commits.sh
jonasschnelli,2017-03-06T11:28:56Z,nit: IMO `sha512sum` is not portable (at least it's not available on OSX). What about `shasum -a 512` instead?,https://github.com/bitcoin/bitcoin/pull/9880#discussion_r104393646,104393646,contrib/verify-commits/verify-commits.sh
TheBlueMatt,2017-03-06T16:20:26Z,"shasum is part of perl, so is probably less standard than sha512sum. We should have a check for whether sha512sum is available and only use shasum if it is not.",https://github.com/bitcoin/bitcoin/pull/9880#discussion_r104454495,104454495,contrib/verify-commits/verify-commits.sh
