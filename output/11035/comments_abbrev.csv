TheBlueMatt,2017-08-14T14:55:32Z,"Looks like this is Debian-specific? Is it possible to match libraries without a full, explicit path?",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-322212947,322212947,
practicalswift,2017-08-15T11:59:03Z,"@TheBlueMatt Good point! I've only verified the suppressions file under Ubuntu 16.04. What do you think about changing from ...\n\n```\nobj:*/libstdc++.*\nobj:/lib/x86_64-linux-gnu/ld-*.so\nobj:/usr/lib/x86_64-linux-gnu/libdb_cxx-5.3.so\n```\n\n... to ...\n\n```\nobj:*/libstdc++.*\nobj:*/ld-*.so\nobj:*/libdb_cxx-5.3.so\n```",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-322448068,322448068,
laanwj,2017-08-15T15:58:58Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-322509717,322509717,
TheBlueMatt,2017-08-16T19:28:53Z,"@practicalswift seems reasonable to me, is the bdb issue there specific to bdb 5.3?",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-322874688,322874688,
sipa,2017-08-16T19:32:30Z,I believe every BDB version has had this.,https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-322875532,322875532,
practicalswift,2017-08-16T19:38:29Z,"@TheBlueMatt @sipa Thanks for your input. I've now changed from …\n\n```\nobj:*/libstdc++.*\nobj:/lib/x86_64-linux-gnu/ld-*.so\nobj:/usr/lib/x86_64-linux-gnu/libdb_cxx-5.3.so\n```\n\n... to ...\n\n```\nobj:*/libstdc++.*\nobj:*/ld-*.so\nobj:*/libdb_cxx-*.so\n```\n\nLooks good? :-)",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-322876858,322876858,
TheBlueMatt,2017-08-18T01:54:25Z,"utACK.\n\nOn August 16, 2017 3:38:39 PM EDT, practicalswift <notifications@github.com> wrote:\n>@TheBlueMatt @sipa Thanks for your input. I've now changed from …\n>\n>```\n>obj:*/libstdc++.*\n>obj:/lib/x86_64-linux-gnu/ld-*.so\n>obj:/usr/lib/x86_64-linux-gnu/libdb_cxx-5.3.so\n>```\n>\n>... to ...\n>\n>```\n>obj:*/libstdc++.*\n>obj:*/ld-*.so\n>obj:*/libdb_cxx-*.so\n>```\n>\n>Looks good? :-)\n>\n>--",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323238921,323238921,
sipa,2017-08-18T05:41:51Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323264633,323264633,
luke-jr,2017-08-19T18:11:52Z,Shouldn't there be a bunch for libsecp256k1 (maybe they ought to go in its repo)?,https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323539028,323539028,
sipa,2017-08-19T18:19:26Z,@luke-jr Does libbsecp256k1 have memory leaks?,https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323539439,323539439,
practicalswift,2017-08-20T16:12:12Z,@luke-jr I haven't seen any indications of libbsecp256k1 leaks when running `valgrind` on `test/test_bitcoin`. Have you? :-),https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323594931,323594931,
luke-jr,2017-08-20T17:35:32Z,"```\n==24451== Conditional jump or move depends on uninitialised value(s)\n==24451==    at 0x2DD1A5F: secp256k1_ec_seckey_verify (secp256k1.c:399)\n==24451==    by 0x2883913: CKey::Check(unsigned char const*) (key.cpp:123)\n==24451==    by 0x2883A3E: CKey::MakeNewKey(bool) (key.cpp:129)\n==24451==    by 0x2886F08: ECC_InitSanityCheck() (key.cpp:286)\n==24451==    by 0x1FBADDC: InitSanityChec",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323599668,323599668,
practicalswift,2017-08-21T12:22:19Z,"@luke-jr Interesting! These are not triggered when running `valgrind` on `test/test_bitcoin`.\n\nAssuming that these cannot be fixed without changes in our dependencies they should all be included in the suppressions file :-) ",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323730339,323730339,
luke-jr,2017-08-21T14:47:44Z,"Not all systems have the same versions of dependencies, BTW. But I guess untriggered suppressions are harmless.",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323762748,323762748,
practicalswift,2017-08-21T15:02:14Z,"@luke-jr Very much so! Do you want to put together the suppressions (`--gen-suppressions=all`) for the ones you are encountering, or do you prefer that I give it a try? :-)",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-323767239,323767239,
practicalswift,2017-08-23T18:09:34Z,"@luke-jr I've been unable to reproduce the warnings you posted. I tried …\n\n```\n$ valgrind -v --leak-check=full ./src/bitcoind -printtoconsole\n```\n\n… against current `master`.",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-324417227,324417227,
practicalswift,2017-10-25T19:56:33Z,Any chance of getting this merged? :-),https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-339451972,339451972,
laanwj,2017-11-09T12:25:56Z,"I think this file should be referenced somewhere. Not sure from where, but not just in this issue. If there's a place describing development/debugging practices, a section should be added on using valgrind w/ bitcoin core.\nIf this is debian-specific, this can be documented there too.",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-343139461,343139461,
practicalswift,2017-11-12T16:15:44Z,"@laanwj Good point! I've now added a note about the suppressions file in `developer-notes.md`.\n\nThe suppressions file is not meant to be Debian specific. It should work on all Linux Standard Base (LSB) systems.\n\nLooks good? :-)",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-343748075,343748075,
laanwj,2017-11-13T14:00:42Z,"Yes, thank you, looks good to me now. utACK 4a426d8",https://github.com/bitcoin/bitcoin/pull/11035#issuecomment-343927082,343927082,
MarcoFalke,2018-04-29T19:09:28Z,"I think this also needs the `--suppressions=contrib/valgrind.supp`, otherwise the active suppressions are not printed, which seems to be the purpose of this line.",https://github.com/bitcoin/bitcoin/pull/11035#discussion_r184891982,184891982,doc/developer-notes.md
