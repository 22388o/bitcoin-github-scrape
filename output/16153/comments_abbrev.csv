JosuGZ,2019-06-05 19:11:33,"> Concept ACK. Can you check if rounded join style looks better? See https://doc.qt.io/qt-5/qpen.html#join-style.\n\nThat is a different part of the code. I can't really see the difference, probably because the points are too close. It looks like this:\n\n![image](https://user-images.githubusercontent.com/25986871/58982968-fa61ad80-87d5-11e9-84d7-90113d26fbbb.png)\n\nI can push the change an",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-499216551,499216551,
laanwj,2019-06-06 08:50:22,"ACK\nCode change and result looks good to me, haven't tested, we should probably try it out on a few OSes to be sure the setting doesn't cause problems.",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-499407575,499407575,
promag,2019-06-06 14:24:23,"> That is a different part of the code. I can't really see the difference, probably because the points are too close. It looks like this:\n\nThanks for testing, I've also checked it.\n\nI think this is a nice improvement and it doesn't take more CPU to be that noticeable (measured in macos with instruments with and without this change).\n\nOther visual improvements are possible but this is f",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-499516373,499516373,
jonasschnelli,2019-06-06 14:42:13,Tested on OSX with HiDPI (retina) screen and I can't see any difference. I believe that using HiDPI on OSX sets antialiasing by default (unsure though).,https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-499524080,499524080,
promag,2019-06-06 17:01:57,ACK 4211bdb.,https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-499581979,499581979,
hebasto,2019-06-07 11:48:06,"https://doc.qt.io/qt-5/qpainter.html#rendering-quality:\n> The `QPainter` class also provides a means of controlling the rendering quality through its `RenderHint` enum and the support for _floating point precision_: All the functions for drawing primitives has a floating point version. These are often used in combination with the `QPainter::Antialiasing` render hint.\n\nCould using of floating",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-499855297,499855297,
DrahtBot,2019-06-08 23:10:31,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit 5d2ccf0ce9ca1571c650a69319fb9c1e0b626ecb (master):\n\n\nGitian builds for commit 28af91115fb83010bf2675796bfd635766ecf537 (master and this pull):\n,https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-500172133,500172133,
promag,2019-06-12 22:58:57,"@hebasto changed coordinates to float but result is apparently the same, so I don't think it's worth the change.\n\n@JosuGZ I still think you should enable antialiasing only on L106 (I've tested it), this way the grid is always crisp - you can see on your screenshots that the horizontal lines are blurred and a bit darker.",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-501484613,501484613,
laanwj,2019-06-13 13:01:17,"> @JosuGZ I still think you should enable antialiasing only on L106 (I've tested it), this way the grid is always crisp - you can see on your screenshots that the horizontal lines are blurred and a bit darker.\n\nGood catch, I think I agree, anti-aliasing improves diagonal lines but for axis-aligned lines (and the grid is that, by definition) it can make it look blurrier for no good reason.",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-501692678,501692678,
laanwj,2019-06-25 18:18:25,@JosuGZ at least please reply to the comments (even if you disagree),https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-505562282,505562282,
JosuGZ,2019-06-26 14:15:55,"> @JosuGZ at least please reply to the comments (even if you disagree)\n\nHi, I haven't been on my Linux machine these days so I was waiting for that.\n\nAbout horizontal and vertical lines: I think it is pointless to disable it as I don't think performance should be an issue, and sometimes lines fall between 2 pixels (if using floats, which I recall it has been mentioned). I could do it thoug",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-505894894,505894894,
JosuGZ,2019-06-26 14:19:02,Do you think horizontal lines look better without antialiasing?,https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-505896230,505896230,
fanquake,2019-07-02 03:50:13,@JosuGZ Can you please squash your commits.,https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-507507317,507507317,
laanwj,2019-07-02 17:00:09,"ACK db26e8e22822c65a3817b16805f5ba9ad2235f93\n",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-507762354,507762354,
promag,2019-07-02 17:03:00,"ACK db26e8e, could you update OP screenshots?",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-507763465,507763465,
JosuGZ,2019-07-02 20:42:04,"> ACK [db26e8e](https://github.com/bitcoin/bitcoin/commit/db26e8e22822c65a3817b16805f5ba9ad2235f93), could you update OP screenshots?\n\nDone!\n\nNot sure if it's useful now :P",https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-507836806,507836806,
promag,2019-07-02 20:47:29,Thanks! it can be for forks :trollface:,https://github.com/bitcoin/bitcoin/pull/16153#issuecomment-507838464,507838464,
promag,2019-06-05 17:00:24,Not sure if relevant but could be after fill?,https://github.com/bitcoin/bitcoin/pull/16153#discussion_r290840543,290840543,src/qt/trafficgraphwidget.cpp
JosuGZ,2019-06-05 18:55:32,I believe configuration should come before usage.,https://github.com/bitcoin/bitcoin/pull/16153#discussion_r290886786,290886786,src/qt/trafficgraphwidget.cpp
promag,2019-06-06 14:20:38,"You can change render hints at any time.\n\nAnyway, you can simplify this:\n```cpp\npainter.setRenderHint(QPainter::Antialiasing);\n```",https://github.com/bitcoin/bitcoin/pull/16153#discussion_r291206890,291206890,src/qt/trafficgraphwidget.cpp
JosuGZ,2019-06-06 16:40:12,"You can, but should you?\n\nYour suggestion is good, pushing.",https://github.com/bitcoin/bitcoin/pull/16153#discussion_r291272728,291272728,src/qt/trafficgraphwidget.cpp
promag,2019-06-06 16:53:53,"> You can, but should you?\n\nIt depends if `fillRect` is faster without antialiasing - in this case it might make no difference as the rect is aligned and fills the entire surface.\n\nMore generally when you ""paint/compose"" an image you might want some parts/primitives antialiased and others not.",https://github.com/bitcoin/bitcoin/pull/16153#discussion_r291277738,291277738,src/qt/trafficgraphwidget.cpp
