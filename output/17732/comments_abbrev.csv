jonatack,2019-12-12 21:32:26,"Partial tested ACK 9a61f78\n\nAfter removing valgrind:\n```bash\n$ test/functional/tool_wallet.py  --valgrind\n2019-12-12T21:23:04.053000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_0212zhle\n2019-12-12T21:23:04.054000Z TestFramework (ERROR): Unexpected exception caught during testing\nTraceback (most recent call last):\n  File ""/home/jon/projects/bitcoin/bitc",https://github.com/bitcoin/bitcoin/pull/17732#issuecomment-565196211,565196211,
Sjors,2019-12-16 12:48:45,"On macOS I'm seeing the right error when valgrind is missing, but then it goes into an infinite recursion:\n\n```\n2019-12-16T12:47:33.219000Z TestFramework (ERROR): Unexpected exception caught during testing\nTraceback (most recent call last):\n  File ""/Users/sjors/dev/bitcoin/test/functional/test_framework/test_framework.py"", line 111, in main\n    self.setup()\n  File ""/Users/sjors/dev/b",https://github.com/bitcoin/bitcoin/pull/17732#issuecomment-566046977,566046977,
brakmic,2019-12-16 15:01:26,"> On macOS I'm seeing the right error when valgrind is missing, but then it goes into an infinite recursion:\n>\n>   File ""/Users/sjors/dev/bitcoin/test/functional/test_framework/test_node.py"", line 191, in __getattr__\n>     if self.use_cli:\n> RecursionError: maximum recursion depth exceeded\n> 2019-12-16T12:47:33.302000Z TestFramework (INFO): Stopping nodes\n> ```\n\nThe **__ del __** m",https://github.com/bitcoin/bitcoin/pull/17732#issuecomment-566097989,566097989,
Sjors,2019-12-21 17:05:00,@jnewbery?,https://github.com/bitcoin/bitcoin/pull/17732#issuecomment-568196144,568196144,
jonatack,2019-12-12 12:45:28,"perhaps construct this string outside of the arg array assignment, or do:\n```python3\n ""--exit-on-first-error={}"".format(""yes"" if exit_on_first_error else ""no""),\n```",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357124904,357124904,test/functional/test_framework/test_node.py
Sjors,2019-12-12 12:48:12,This won't throw an error if `--valgrind` is used on a system without valgrind.,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357126002,357126002,test/functional/test_framework/test_node.py
jonatack,2019-12-12 12:48:35,"nit: suggestion for readability, format the args array like in line 90 above:\n```diff\n-            self.args = [""valgrind"", ""--suppressions={}"".format(suppressions_file),\n-                         ""--gen-suppressions=all"",\n-                         ""--exit-on-first-error=yes"" if exit_on_first_error else ""--exit-on-first-error=no"",\n-                         ""--error-exitcode=1"", ""--quiet""",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357126161,357126161,test/functional/test_framework/test_node.py
Sjors,2019-12-12 12:49:58,"I haven't tested this, but I expect `--exit-on-first-error=no` to throw an error on versions that don't have this option.",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357126725,357126725,test/functional/test_framework/test_node.py
Sjors,2019-12-12 12:51:22,I believe this was added in 3.14: https://stackoverflow.com/a/50289059,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357127399,357127399,test/functional/test_framework/test_node.py
jonatack,2019-12-12 12:52:19,suggest wrapping long lines like here and the docstring just above,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357127816,357127816,test/functional/test_framework/test_node.py
jonatack,2019-12-12 12:53:37,suggest hoisting these two magic values to constants,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357128396,357128396,test/functional/test_framework/test_node.py
brakmic,2019-12-12 12:56:57,Many thanks! I am going through the comments and will adapt the code accordingly. ,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357129740,357129740,test/functional/test_framework/test_node.py
brakmic,2019-12-12 12:57:24,Yes! Thanks :),https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357129905,357129905,test/functional/test_framework/test_node.py
brakmic,2019-12-12 12:58:24,"Will test it on my macOS Catalina, because valgrind can't be installed there. :)",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357130330,357130330,test/functional/test_framework/test_node.py
brakmic,2019-12-12 12:58:37,Will adapt!,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357130419,357130419,test/functional/test_framework/test_node.py
Sjors,2019-12-12 13:14:07,"You mean the previous comment? This one is easiest to test on e.g. a fresh Ubuntu 18.04 machine, which has valgrind 3.13. You can then compile it from source and install 3.15 to see the difference. ",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357137164,357137164,test/functional/test_framework/test_node.py
brakmic,2019-12-12 13:16:05,"Yeah, I have one cheap VPS running, with Ubuntu 18.04. Will follow your recommendation. Thanks!",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357138153,357138153,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 14:00:57,`--exit-on-first-error=yes` should always be used if the option `--exit-on-first-error` is supported :),https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357159574,357159574,test/functional/test_framework/test_node.py
brakmic,2019-12-12 14:02:22,"Will then simply produce an empty string if the flag should not be active, because it's ""no"" anyway for versions that support it.\n\nLike: **""--exit-on-first-error=yes"" if exit_on_first_error else """"**",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357160270,357160270,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 14:03:13,"This will create an unnecessary `valgrind` execution in the normal case when Valgrind is not used (no `--valgrind`).\n\nBetter to do it as `if use_valgrind and â€¦` instead :)",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357160662,357160662,test/functional/test_framework/test_node.py
brakmic,2019-12-12 14:03:26,"@jonatack \nWould prefer your solution, but because not all old versions support this flag I'll have to stick with the other variant. Will basically return an empty string when the flag should not be active, because this is the default for some older versions anyway.",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357160744,357160744,test/functional/test_framework/test_node.py
brakmic,2019-12-12 14:04:03,"Yes, indeed. Thanks!",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357161041,357161041,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 14:05:16,"`if version.startswith(""valgrind-"")` :)",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357161586,357161586,test/functional/test_framework/test_node.py
brakmic,2019-12-12 14:06:04,"> `--exit-on-first-error=yes` should always be used if the option `--exit-on-first-error` is supported :)\n\nBut the original discussion was about disabling it for v3.15. Or am I missing something?",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357162045,357162045,test/functional/test_framework/test_node.py
Sjors,2019-12-12 14:06:43,I'd rename `exit_on_first_error` to `supports_exit_on_first_error` for clarity.,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357162358,357162358,test/functional/test_framework/test_node.py
brakmic,2019-12-12 14:07:27,Done!,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357162705,357162705,test/functional/test_framework/test_node.py
brakmic,2019-12-12 14:11:07,"> I'd rename `exit_on_first_error` to `supports_exit_on_first_error` for clarity.\n\nThen I will also put the expected version (major, minor) to 3.14, ok?\nIf I understand @practicalswift correctly, every version that supports this flag should also have it activated by default.",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357164663,357164663,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 14:16:39,"I think this can be simplified. Only one execution of `valgrind --version` should be needed to a.) check if Valgrind is present and b.) to parse what version it is, so try to merge the logic of `is_valgrind_present` and `should_exit_valgrind_on_first_error`.\n\nI suggest `get_valgrind_version` which could return the tuple `(valgrind_major, valgrind_minor)` if `valgrind` is installed or `None` ot",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357167630,357167630,test/functional/test_framework/test_node.py
brakmic,2019-12-12 14:20:24,"Believe it or not, I was just typing the same changes. Thanks!",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357169751,357169751,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 14:20:52,"> If I understand @practicalswift correctly, every version that supports this flag should also have it activated by default.\n\nCorrect! :)\n\nIt is supported by Valgrind 3.14 and above.\n\n(Unfortunately I said the wrong version number in the linked issue. I've now corrected that. Sorry for the confusion :))",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357170012,357170012,test/functional/test_framework/test_node.py
jonatack,2019-12-12 15:00:30,"Yes, I have valgrind-3.14.0 installed on debian, and valgrind --help does have the option for `--exit-on-first-error=no|yes`. Will test the updated version of this PR!",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357192327,357192327,test/functional/test_framework/test_node.py
brakmic,2019-12-12 15:03:53,Just force pushed changes. :),https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357194203,357194203,test/functional/test_framework/test_node.py
Sjors,2019-12-12 15:04:08,nit: `VALGRIND_MINIMUM_VERSION_MAJOR`,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357194353,357194353,test/functional/test_framework/test_node.py
Sjors,2019-12-12 15:06:55,"nit: ""or None if not found""",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357195971,357195971,test/functional/test_framework/test_node.py
Sjors,2019-12-12 15:08:54,I'd move all this below `if use_valgrind`. Don't forget to throw if `valgrind_version == None`,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357197095,357197095,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 15:11:58,"The scope can be narrowed for these and the meaning could be clarified by doing it like this on L103 instead :)\n\n```\nMIN_VALGRIND_VERSION_EARLY_EXIT = (3, 14)\nif valgrind_version and valgrind_version >= MIN_VALGRIND_VERSION_EARLY_EXIT:\n```",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357198887,357198887,test/functional/test_framework/test_node.py
brakmic,2019-12-12 15:13:44,"Ok, will do it. Many thanks!",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357199855,357199855,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 15:14:11,"Use `shutil.which(""valgrind"")` to avoid shelling out unnecessarily :)",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357200114,357200114,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 15:21:53,"1. Have you seen instances where the Valgrind version identifier contains `b` or `v`? :) If not, perhaps the simpler `version_info.split(""."")` could do?\n\n2. Check the indentation here so that it matches the four spaces used in the rest of this file :)  Applies throughout this PR.",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357204519,357204519,test/functional/test_framework/test_node.py
brakmic,2019-12-12 15:23:37,"Yup, much better!",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357205478,357205478,test/functional/test_framework/test_node.py
brakmic,2019-12-12 15:27:46,"I must admit that I wasn't sure abut valgrind's versioning. But I will adapt the code of course.\nWill also update the indentations.",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357207838,357207838,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 15:43:24,"I think the logic is wrong here. This will only run `valgrind` if `valgrind_version >= MIN_VALGRIND_VERSION_EARLY_EXIT` :)\n\nThe only impact `valgrind_version >= MIN_VALGRIND_VERSION_EARLY_EXIT` should have is to enable `--exit-on-first-error=yes`. `self.args` should be set both for old and new versions of Valgrind :)",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357216948,357216948,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 15:45:16,"I think you want to do this check right after `valgrind_version = self.get_valgrind_version()`. With the current logic the exception will be thrown also in the case where `valgrind` is present (but with an older version).\n\nI suggest testing the PR with the following alternatives to make sure all code paths are working as expected:\n\n1.) Without `valgrind` in `PATH`\n2.) With new `valgrind`",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357218254,357218254,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 15:54:43,"Suggested alternative:\n\n```\ndef get_valgrind_version(self):\n    """"""Returns valgrind version tuple (major, minor), or None if valgrind is not found""""""\n    if not shutil.which(""valgrind""):\n        return None\n    version = (\n        subprocess.run([""valgrind"", ""--version""], stdout=subprocess.PIPE)\n        .stdout.decode(""utf-8"")\n        .rstrip()\n        .split(""valgrind-"")[1:]",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357224013,357224013,test/functional/test_framework/test_node.py
brakmic,2019-12-12 16:02:52,"Yeah, just saw it. Will reorganize the code.",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357229136,357229136,test/functional/test_framework/test_node.py
brakmic,2019-12-12 16:04:00,Much better.,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357229756,357229756,test/functional/test_framework/test_node.py
practicalswift,2019-12-12 16:23:06,"This can be reduced to `if valgrind_version >= MIN_VALGRIND_VERSION_EARLY_EXIT:` since the `not valgrind_version` case is handled on L103.\n",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357240183,357240183,test/functional/test_framework/test_node.py
jonatack,2019-12-12 18:24:07,nit: alphabetical order,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357299481,357299481,test/functional/test_framework/test_node.py
jonatack,2019-12-12 19:01:22,"consider extracting this to a function like below, or just put  `""--exit-on-first-error=yes"" if version >= MIN_VALGRIND_VERSION_EARLY_EXIT else """"` in the array after all :)\n```diff\n-            exit_on_first_error_flag = """"\n-            if valgrind_version >= MIN_VALGRIND_VERSION_EARLY_EXIT:\n-                exit_on_first_error_flag = ""--exit-on-first-error=yes""\n\n             self.arg",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357316477,357316477,test/functional/test_framework/test_node.py
jonatack,2019-12-12 20:01:09,"Suggest:\n```diff\n-            self.args = [""valgrind"",\n-                            ""--suppressions={}"".format(suppressions_file),\n-                            ""--gen-suppressions=all"",\n-                            exit_on_first_error_flag,\n-                            ""--error-exitcode=1"",\n-                            ""--quiet""] + self.args\n+            self.args = [\n+          ",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357343980,357343980,test/functional/test_framework/test_node.py
jonatack,2019-12-12 20:14:21,nit: s/Returns/Return/ like the other docstrings,https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357349478,357349478,test/functional/test_framework/test_node.py
brakmic,2019-12-12 20:31:37,"Ok, let's change it! :)",https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357356648,357356648,test/functional/test_framework/test_node.py
brakmic,2019-12-12 20:34:08,Also done. Will do another force push. :),https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357357665,357357665,test/functional/test_framework/test_node.py
brakmic,2019-12-12 20:36:40,Ok :),https://github.com/bitcoin/bitcoin/pull/17732#discussion_r357358681,357358681,test/functional/test_framework/test_node.py
