[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580030892",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580030892",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580030892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDAzMDg5Mg==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T00:39:54Z",
    "updated_at": "2020-01-30T00:39:54Z",
    "author_association": "MEMBER",
    "body": "cc @naumenkogs ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580030892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580055048",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580055048",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580055048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDA1NTA0OA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T02:25:09Z",
    "updated_at": "2020-01-30T18:37:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17812](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17812.html) (config, test: asmap functional tests and feature refinements by jonatack)\n* [#17428](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17428.html) (p2p: Try to preserve outbound block-relay-only connections during restart by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580055048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580301035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580301035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580301035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDMwMTAzNQ==",
    "user": {
      "login": "sanjaykdragon",
      "id": 10261698,
      "node_id": "MDQ6VXNlcjEwMjYxNjk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10261698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanjaykdragon",
      "html_url": "https://github.com/sanjaykdragon",
      "followers_url": "https://api.github.com/users/sanjaykdragon/followers",
      "following_url": "https://api.github.com/users/sanjaykdragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanjaykdragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanjaykdragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanjaykdragon/subscriptions",
      "organizations_url": "https://api.github.com/users/sanjaykdragon/orgs",
      "repos_url": "https://api.github.com/users/sanjaykdragon/repos",
      "events_url": "https://api.github.com/users/sanjaykdragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanjaykdragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T15:15:21Z",
    "updated_at": "2020-01-30T15:15:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "utack - looks nice, preventing unnecessary copies",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580301035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580508193",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580508193",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580508193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDUwODE5Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T23:21:14Z",
    "updated_at": "2020-01-30T23:21:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nWhile improving asmap -- please consider increasing the robustness of `GetMappedAS(\u2026)` by plugging this issue too: [\"GetMappedAS(...) lookup on an IPv6 address against a maliciously constructed AS-map triggers heap buffer-overflow\"](https://github.com/bitcoin/bitcoin/issues/18033) :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580508193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580531800",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580531800",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580531800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDUzMTgwMA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T00:54:47Z",
    "updated_at": "2020-01-31T00:54:47Z",
    "author_association": "MEMBER",
    "body": "Added a commit to resolve #18033.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580531800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580693614",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580693614",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580693614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY5MzYxNA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T11:16:31Z",
    "updated_at": "2020-01-31T11:16:31Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, will review shortly.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580693614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580756636",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580756636",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580756636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDc1NjYzNg==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T14:31:34Z",
    "updated_at": "2020-01-31T14:31:34Z",
    "author_association": "MEMBER",
    "body": "utACK 868647e5d72f2718e41b723dc7e15594ffb1d7b6\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580756636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580946286",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580946286",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 580946286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDk0NjI4Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T22:53:26Z",
    "updated_at": "2020-01-31T22:53:26Z",
    "author_association": "MEMBER",
    "body": "@practicalswift Nice catch, addressed I think.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580946286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581007633",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-581007633",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 581007633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTAwNzYzMw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-01T08:26:06Z",
    "updated_at": "2020-02-01T08:26:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa I'm no longer able to trigger the two heap buffer overflows, and the code withstood an eight hour `asmap` fuzzer (#18033) run (48 million executions): I think the code is robust against malicious map data now :)\r\n\r\nACK c86bc144081f960347232546f7d22deb65d27deb -- patch looks correct",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581007633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581102982",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-581102982",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 581102982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTEwMjk4Mg==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-02T06:12:16Z",
    "updated_at": "2020-02-02T06:12:16Z",
    "author_association": "MEMBER",
    "body": "On my side, this PR held up on 72M execs (about 18 hours) of the asmap fuzzer.\r\n```\r\n#72474660\tREDUCE cov: 1198 ft: 3529 corp: 197/12792b exec/s: 1063 rss: 452Mb L: 41/1527 MS: 4 InsertByte-EraseBytes-InsertByte-PersAutoDict- DE: \"\\x00 \\x00\\x00\\x00\\x00\\x00\\x00\"-\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581102982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582343945",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-582343945",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 582343945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjM0Mzk0NQ==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-05T10:33:52Z",
    "updated_at": "2020-02-05T10:33:52Z",
    "author_association": "MEMBER",
    "body": "utACK c86bc14",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582343945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582395696",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-582395696",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
    "id": 582395696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjM5NTY5Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-05T12:59:31Z",
    "updated_at": "2020-02-05T12:59:31Z",
    "author_association": "MEMBER",
    "body": "ACK c86bc144081f960347232546f7d22deb65d27deb",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582395696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372686129",
    "pull_request_review_id": 350494570,
    "id": 372686129,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4NjEyOQ==",
    "diff_hunk": "@@ -80,6 +80,11 @@ class CNetAddr\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         uint32_t GetNetClass() const;\n \n+        //! For IPv4, mapped IPv4, SIIT translated IPv4, Teredo, 6to4 tunneled addresses, return the relevant IPv4 address as a uint32.\n+        bool HasLinkedIPv4() const;\n+        //! Whether this address has a linked IPv4 address (see GetLinkedIPv4()).",
    "path": "src/netaddress.h",
    "position": null,
    "original_position": 6,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "2630011ca2c62ebc16054c892dab510799d1ff23",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This comment should be on L83 and vice versa? :)",
    "created_at": "2020-01-29T23:23:53Z",
    "updated_at": "2020-01-31T22:51:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372686129",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372686129"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372686129"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372686129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 85,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372760521",
    "pull_request_review_id": 350582823,
    "id": 372760521,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc2MDUyMQ==",
    "diff_hunk": "@@ -80,6 +80,11 @@ class CNetAddr\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         uint32_t GetNetClass() const;\n \n+        //! For IPv4, mapped IPv4, SIIT translated IPv4, Teredo, 6to4 tunneled addresses, return the relevant IPv4 address as a uint32.\n+        bool HasLinkedIPv4() const;\n+        //! Whether this address has a linked IPv4 address (see GetLinkedIPv4()).",
    "path": "src/netaddress.h",
    "position": null,
    "original_position": 6,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "2630011ca2c62ebc16054c892dab510799d1ff23",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2020-01-30T05:02:30Z",
    "updated_at": "2020-01-31T22:51:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372760521",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372760521"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372760521"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372760521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 85,
    "side": "RIGHT",
    "in_reply_to_id": 372686129
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373548461",
    "pull_request_review_id": 351597116,
    "id": 373548461,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0ODQ2MQ==",
    "diff_hunk": "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
    "path": "src/util/asmap.cpp",
    "position": 83,
    "original_position": 82,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A heap buffer overflow will occur here in case of `bits == 0`?",
    "created_at": "2020-01-31T15:50:17Z",
    "updated_at": "2020-01-31T22:51:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373548461",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373548461"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373548461"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373548461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 81,
    "original_line": 81,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567477",
    "pull_request_review_id": 351622306,
    "id": 373567477,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU2NzQ3Nw==",
    "diff_hunk": "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
    "path": "src/util/asmap.cpp",
    "position": 83,
    "original_position": 82,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n             if (bits == 0) {\r\n                 return default_asn;\r\n             }\r\n             if (ip[ip.size() - bits]) {\r\n```",
    "created_at": "2020-01-31T16:27:10Z",
    "updated_at": "2020-01-31T22:51:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567477",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567477"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567477"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 81,
    "original_line": 81,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567865",
    "pull_request_review_id": 351622835,
    "id": 373567865,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU2Nzg2NQ==",
    "diff_hunk": "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {\n+                if (jump >= endpos - pos) break;\n                 pos += jump;\n             }\n             bits--;\n         } else if (opcode == 2) {\n-            match = DecodeMatch(pos);\n+            match = DecodeMatch(pos, endpos);\n             matchlen = CountBits(match) - 1;\n             for (uint32_t bit = 0; bit < matchlen; bit++) {\n                 if ((ip[ip.size() - bits]) != ((match >> (matchlen - 1 - bit)) & 1)) {",
    "path": "src/util/asmap.cpp",
    "position": 94,
    "original_position": 92,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                 if (bits == 0 || (ip[ip.size() - bits]) != ((match >> (matchlen - 1 - bit)) & 1)) {\r\n```",
    "created_at": "2020-01-31T16:27:54Z",
    "updated_at": "2020-01-31T22:51:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567865",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567865"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567865"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720439",
    "pull_request_review_id": 351822781,
    "id": 373720439,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMDQzOQ==",
    "diff_hunk": "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
    "path": "src/util/asmap.cpp",
    "position": 83,
    "original_position": 82,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, reaching the end of the ip array just means a malformed asmap. It's probably better to return 0 (also the other location).",
    "created_at": "2020-01-31T22:53:07Z",
    "updated_at": "2020-01-31T22:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720439",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720439"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720439"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 81,
    "original_line": 81,
    "side": "RIGHT",
    "in_reply_to_id": 373567477
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720581",
    "pull_request_review_id": 351822941,
    "id": 373720581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMDU4MQ==",
    "diff_hunk": "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
    "path": "src/util/asmap.cpp",
    "position": 83,
    "original_position": 82,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yup, fixed.",
    "created_at": "2020-01-31T22:53:35Z",
    "updated_at": "2020-01-31T22:53:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 81,
    "original_line": 81,
    "side": "RIGHT",
    "in_reply_to_id": 373548461
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373768683",
    "pull_request_review_id": 351874721,
    "id": 373768683,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2ODY4Mw==",
    "diff_hunk": "@@ -463,51 +497,32 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     int nStartByte = 0;\n     int nBits = 16;\n \n-    // all local addresses belong to the same group\n-    if (IsLocal())\n-    {\n+    if (IsLocal()) {\n+        // all local addresses belong to the same group\n         nBits = 0;\n-    }\n-    // all internal-usage addresses get their own group\n-    if (IsInternal())\n-    {\n+    } else if (IsInternal()) {\n+        // all internal-usage addresses get their own group\n         nStartByte = sizeof(g_internal_prefix);\n         nBits = (sizeof(ip) - sizeof(g_internal_prefix)) * 8;\n-    }\n-    // all other unroutable addresses belong to the same group\n-    else if (!IsRoutable())\n-    {\n+    } else if (!IsRoutable()) {\n+        // all other unroutable addresses belong to the same group\n         nBits = 0;\n-    }\n-    // for IPv4 addresses, '1' + the 16 higher-order bits of the IP\n-    // includes mapped IPv4, SIIT translated IPv4, and the well-known prefix\n-    else if (IsIPv4() || IsRFC6145() || IsRFC6052())\n-    {\n-        nStartByte = 12;\n-    }\n-    // for 6to4 tunnelled addresses, use the encapsulated IPv4 address\n-    else if (IsRFC3964())\n-    {\n-        nStartByte = 2;\n-    }\n-    // for Teredo-tunnelled IPv6 addresses, use the encapsulated IPv4 address\n-    else if (IsRFC4380())\n-    {\n-        vchRet.push_back(GetByte(3) ^ 0xFF);\n-        vchRet.push_back(GetByte(2) ^ 0xFF);\n+    } else if (HasLinkedIPv4()) {\n+        // IPv4 addresses (and mapped IPv4 addresses) use /16 groups\n+        uint32_t ipv4 = GetLinkedIPv4();\n+        vchRet.push_back((ipv4 >> 24) & 0xFF);\n+        vchRet.push_back((ipv4 >> 16) & 0xFF);\n         return vchRet;\n-    }\n-    else if (IsTor())\n-    {\n+    } else if (IsTor()) {\n         nStartByte = 6;\n         nBits = 4;\n-    }\n-    // for he.net, use /36 groups\n-    else if (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x04 && GetByte(12) == 0x70)\n+    } else if (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x04 && GetByte(12) == 0x70) {",
    "path": "src/netaddress.cpp",
    "position": 122,
    "original_position": 122,
    "commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "original_commit_id": "c86bc144081f960347232546f7d22deb65d27deb",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line could be extracted to a `bool CNetAddr::IsHeNet() const` function",
    "created_at": "2020-02-01T09:22:47Z",
    "updated_at": "2020-02-01T09:49:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373768683",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373768683"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373768683"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373768683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 519,
    "original_line": 519,
    "side": "RIGHT"
  }
]