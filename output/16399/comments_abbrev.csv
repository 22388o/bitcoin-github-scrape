MarcoFalke,2019-07-16 18:10:45,Looks like https://github.com/bitcoin/bitcoin/commit/b56a5b9e63b9aad9d3d2192384748a9d981594f1 and https://github.com/bitcoin/bitcoin/commit/b8e19ec09986cd244208da0909c5f0d1cc435f19 are intermixed and one of them won't compile on its own. Might want to unmix them or squash them completely,https://github.com/bitcoin/bitcoin/pull/16399#issuecomment-511926354,511926354,
DrahtBot,2019-07-16 18:42:43,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16394](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16394.html) (Allow createwallet to take empty passwords ",https://github.com/bitcoin/bitcoin/pull/16399#issuecomment-511937678,511937678,
fjahr,2019-07-16 22:09:05,"> Looks like [b56a5b9](https://github.com/bitcoin/bitcoin/commit/b56a5b9e63b9aad9d3d2192384748a9d981594f1) and [b8e19ec](https://github.com/bitcoin/bitcoin/commit/b8e19ec09986cd244208da0909c5f0d1cc435f19) are intermixed and one of them won't compile on its own. Might want to unmix them or squash them completely\n\nRight, I untangled them. Thanks!",https://github.com/bitcoin/bitcoin/pull/16399#issuecomment-512006896,512006896,
jnewbery,2019-07-22 17:50:14,Code review utACK e967cae8fac84ec7a89a3a853a83d8193ac3308e,https://github.com/bitcoin/bitcoin/pull/16399#issuecomment-513886137,513886137,
MarcoFalke,2019-07-29 13:30:45,"ACK e967cae8fa\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK e967cae8fa\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjzJAwAxTTa/NB3hNVlCGvSunqZQanRkkmtbBBVm/x7+mDQ24QiAbMdkUrsWZBc\nRJXSRgAbX80xgEKwYv/bMy1+5cSvmS4yNJ6htemoAjaW5Mnx5GXL4Tr",https://github.com/bitcoin/bitcoin/pull/16399#issuecomment-515992037,515992037,
MarcoFalke,2019-07-16 18:05:53,"style-nit: Could remove this (similar to how other places handle this)\n```suggestion\n        // no default case, so the compiler can warn about missing cases\n```\n\nSee e.g. https://github.com/bitcoin/bitcoin/blob/f00e07748a39ec09fc1b4090497ed39ceb0d4454/src/wallet/rpcwallet.cpp#L3496",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r304047552,304047552,src/wallet/rpcwallet.cpp
MarcoFalke,2019-07-16 18:06:24,"style-nit: `throw` should already `break`? If so, could remove this.",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r304047758,304047758,src/wallet/rpcwallet.cpp
fjahr,2019-07-16 22:06:25,"Fixed, thanks!",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r304140422,304140422,src/wallet/rpcwallet.cpp
fjahr,2019-07-16 22:06:32,"Fixed, thanks!",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r304140459,304140459,src/wallet/rpcwallet.cpp
promag,2019-07-16 22:11:26,Should keep this by adding a `default:`?,https://github.com/bitcoin/bitcoin/pull/16399#discussion_r304144122,304144122,src/wallet/rpcwallet.cpp
promag,2019-07-16 22:15:32,"Should not set wallet yet otherwise it leaks to the caller if something below fails. My suggestion is to rename the argument to `std::shared_ptr<CWallet>& result)` and below do:\n```cpp\n    result = wallet;\n    return WalletCreationStatus::SUCCESS;\n}\n```",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r304147429,304147429,src/wallet/wallet.cpp
jnewbery,2019-07-19 15:47:11,"Nit: It's probably not immediately obvious to users why a passphrase is incompatible with a watchonly wallet. Perhaps this error message could be expanded to say:\n\n""Passphrase provided but private keys are disabled. A passphrase is only used to encrypt private keys, so cannot be used for wallets with private keys disabled.""",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305417046,305417046,src/wallet/wallet.cpp
fjahr,2019-07-19 19:04:21,"Thanks, I updated this.",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305487818,305487818,src/wallet/wallet.cpp
fjahr,2019-07-19 19:05:29,"Sjors suggestion was to go without a `default` so that the compiler will show a warning if we forget to handle any newly added options in the WalletCreationStatus enum. The same technique is used in the same file here: https://github.com/fjahr/bitcoin/blob/07df41c56bc3c0ccb4463083febf39fcad9749e2/src/wallet/rpcwallet.cpp#L3485\n\nBut I will add a comment, same as in the example mentioned above.",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305488170,305488170,src/wallet/rpcwallet.cpp
fjahr,2019-07-19 19:06:03,"I added this, thanks!",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305488374,305488374,src/wallet/wallet.cpp
promag,2019-07-19 19:10:43,A warning can be unnoticed.,https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305489802,305489802,src/wallet/rpcwallet.cpp
MarcoFalke,2019-07-19 19:12:36,"Then, it should be made an error",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305490406,305490406,src/wallet/rpcwallet.cpp
MarcoFalke,2019-07-19 19:27:14,"```\n$ ./configure --help|grep enable-werror\n  --enable-werror         Treat certain compiler warnings as errors (default\n$ git grep enable-werror .travis.yml\n.travis.yml:        BITCOIN_CONFIG=""--enable-gui --enable-reduce-exports --enable-werror""\n",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305494852,305494852,src/wallet/rpcwallet.cpp
MarcoFalke,2019-07-19 19:43:45,"@promag Here you go:\n\n* build: Treat -Wswitch as error when --enable-werror #16424 ",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305500552,305500552,src/wallet/rpcwallet.cpp
jnewbery,2019-07-22 17:49:17,"Looks good. I don't love the name `return` for the wallet argument (since it's a pointer that's passed in and then updated), but I'm not going to bikeshed this PR over argument naming.",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r305952772,305952772,src/wallet/wallet.cpp
promag,2019-07-29 13:44:30,"nit, could have a comment saying that\n - `result` is set when the return value is `SUCCESS`\n - `error` is set otherwise\n - `warning` can be set in any case.",https://github.com/bitcoin/bitcoin/pull/16399#discussion_r308237175,308237175,src/wallet/wallet.h
