[
  {
    "sha": "3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTk5NjEwYWQzYjkzYjg0OWYyY2I1NWE4ZWQzYTM5YTMyYmJkZmZj",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fabian.jahr@whu.edu",
        "date": "2019-07-10T19:44:26Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fabian.jahr@whu.edu",
        "date": "2019-07-16T21:27:50Z"
      },
      "message": "Place out args at the end for CreateWallet",
      "tree": {
        "sha": "57370f1abf95d37ef7caaf413563e89abda68639",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57370f1abf95d37ef7caaf413563e89abda68639"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "4fcccdac785e09ad5627b3bf4811dfba353693e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcccdac785e09ad5627b3bf4811dfba353693e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fcccdac785e09ad5627b3bf4811dfba353693e8"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b7618e1259b4d98cad2d2f5e114c81d85f875ea6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
        "patch": "@@ -2685,7 +2685,7 @@ static UniValue createwallet(const JSONRPCRequest& request)\n     std::string error;\n     std::string warning;\n     WalletCreationStatus status;\n-    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, passphrase, flags, request.params[0].get_str(), error, warning, status);\n     if (status == WalletCreationStatus::CREATION_FAILED) {\n         throw JSONRPCError(RPC_WALLET_ERROR, error);\n     } else if (status == WalletCreationStatus::ENCRYPTION_FAILED) {"
      },
      {
        "sha": "a4e3a2347647fb1b862bcc7316ae0cbb97d34572",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
        "patch": "@@ -160,7 +160,7 @@ std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string&\n     return LoadWallet(chain, WalletLocation(name), error, warning);\n }\n \n-std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status, const SecureString& passphrase, uint64_t wallet_creation_flags)\n+std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status)\n {\n     // Indicate that the wallet is actually supposed to be blank and not just blank to make it encrypted\n     bool create_blank = (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET);"
      },
      {
        "sha": "9db4b2c7d92250a17b68e6473bacee6f338b8712",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
        "patch": "@@ -55,7 +55,7 @@ enum WalletCreationStatus {\n     ENCRYPTION_FAILED\n };\n \n-std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status, const SecureString& passphrase, uint64_t wallet_creation_flags);\n+std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status);\n \n //! Default for -keypool\n static const unsigned int DEFAULT_KEYPOOL_SIZE = 1000;"
      }
    ]
  },
  {
    "sha": "d6649d16b57e20b05075f1c80d0de7ff32cca1a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjY0OWQxNmI1N2UyMGIwNTA3NWYxYzgwZDBkZTdmZjMyY2NhMWE0",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fabian.jahr@whu.edu",
        "date": "2019-07-10T19:46:02Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fabian.jahr@whu.edu",
        "date": "2019-07-16T21:33:22Z"
      },
      "message": "Use strong enum for WalletCreationStatus",
      "tree": {
        "sha": "c53a058861181e45b6c162da7ba95e4df86f3399",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c53a058861181e45b6c162da7ba95e4df86f3399"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6649d16b57e20b05075f1c80d0de7ff32cca1a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6649d16b57e20b05075f1c80d0de7ff32cca1a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6649d16b57e20b05075f1c80d0de7ff32cca1a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6649d16b57e20b05075f1c80d0de7ff32cca1a4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3199610ad3b93b849f2cb55a8ed3a39a32bbdffc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "059528106f2a7ffd1ea1d7273cbed94e28d90c9f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6649d16b57e20b05075f1c80d0de7ff32cca1a4/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6649d16b57e20b05075f1c80d0de7ff32cca1a4/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d6649d16b57e20b05075f1c80d0de7ff32cca1a4",
        "patch": "@@ -49,7 +49,7 @@ std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);\n \n-enum WalletCreationStatus {\n+enum class WalletCreationStatus {\n     SUCCESS,\n     CREATION_FAILED,\n     ENCRYPTION_FAILED"
      }
    ]
  },
  {
    "sha": "ba1f128d6c117a63d5d904b3956551bd83405ec9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTFmMTI4ZDZjMTE3YTYzZDVkOTA0YjM5NTY1NTFiZDgzNDA1ZWM5",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fabian.jahr@whu.edu",
        "date": "2019-07-10T21:51:39Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2019-07-19T18:34:33Z"
      },
      "message": "Return error for ignored passphrase through disable private keys option",
      "tree": {
        "sha": "371eb735cdfc4bb62a70dacf8a8ef9edb3693b1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/371eb735cdfc4bb62a70dacf8a8ef9edb3693b1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba1f128d6c117a63d5d904b3956551bd83405ec9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba1f128d6c117a63d5d904b3956551bd83405ec9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba1f128d6c117a63d5d904b3956551bd83405ec9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba1f128d6c117a63d5d904b3956551bd83405ec9/comments",
    "author": null,
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6649d16b57e20b05075f1c80d0de7ff32cca1a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6649d16b57e20b05075f1c80d0de7ff32cca1a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6649d16b57e20b05075f1c80d0de7ff32cca1a4"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 20,
      "deletions": 16
    },
    "files": [
      {
        "sha": "a600331ba08356f89af2db7a1382640cb450f98c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba1f128d6c117a63d5d904b3956551bd83405ec9/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba1f128d6c117a63d5d904b3956551bd83405ec9/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ba1f128d6c117a63d5d904b3956551bd83405ec9",
        "patch": "@@ -2684,8 +2684,8 @@ static UniValue createwallet(const JSONRPCRequest& request)\n \n     std::string error;\n     std::string warning;\n-    WalletCreationStatus status;\n-    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, passphrase, flags, request.params[0].get_str(), error, warning, status);\n+    std::shared_ptr<CWallet> wallet;\n+    WalletCreationStatus status = CreateWallet(*g_rpc_interfaces->chain, passphrase, flags, request.params[0].get_str(), error, warning, wallet);\n     if (status == WalletCreationStatus::CREATION_FAILED) {\n         throw JSONRPCError(RPC_WALLET_ERROR, error);\n     } else if (status == WalletCreationStatus::ENCRYPTION_FAILED) {"
      },
      {
        "sha": "804c5c619d3f632378c6bf8a849dbc1bd50aa116",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 13,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba1f128d6c117a63d5d904b3956551bd83405ec9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba1f128d6c117a63d5d904b3956551bd83405ec9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ba1f128d6c117a63d5d904b3956551bd83405ec9",
        "patch": "@@ -160,7 +160,7 @@ std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string&\n     return LoadWallet(chain, WalletLocation(name), error, warning);\n }\n \n-std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status)\n+WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, std::shared_ptr<CWallet>& result)\n {\n     // Indicate that the wallet is actually supposed to be blank and not just blank to make it encrypted\n     bool create_blank = (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET);\n@@ -174,39 +174,40 @@ std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const SecureStri\n     WalletLocation location(name);\n     if (location.Exists()) {\n         error = \"Wallet \" + location.GetName() + \" already exists.\";\n-        status = WalletCreationStatus::CREATION_FAILED;\n-        return nullptr;\n+        return WalletCreationStatus::CREATION_FAILED;\n     }\n \n     // Wallet::Verify will check if we're trying to create a wallet with a duplicate name.\n     std::string wallet_error;\n     if (!CWallet::Verify(chain, location, false, wallet_error, warning)) {\n         error = \"Wallet file verification failed: \" + wallet_error;\n-        status = WalletCreationStatus::CREATION_FAILED;\n-        return nullptr;\n+        return WalletCreationStatus::CREATION_FAILED;\n+    }\n+\n+    // Do not allow a passphrase when private keys are disabled\n+    if (!passphrase.empty() && (wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        error = \"Passphrase provided but private keys are disabled. A passphrase is only used to encrypt private keys, so cannot be used for wallets with private keys disabled.\";\n+        return WalletCreationStatus::CREATION_FAILED;\n     }\n \n     // Make the wallet\n     std::shared_ptr<CWallet> wallet = CWallet::CreateWalletFromFile(chain, location, wallet_creation_flags);\n     if (!wallet) {\n         error = \"Wallet creation failed\";\n-        status = WalletCreationStatus::CREATION_FAILED;\n-        return nullptr;\n+        return WalletCreationStatus::CREATION_FAILED;\n     }\n \n     // Encrypt the wallet\n     if (!passphrase.empty() && !(wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         if (!wallet->EncryptWallet(passphrase)) {\n             error = \"Error: Wallet created but failed to encrypt.\";\n-            status = WalletCreationStatus::ENCRYPTION_FAILED;\n-            return nullptr;\n+            return WalletCreationStatus::ENCRYPTION_FAILED;\n         }\n         if (!create_blank) {\n             // Unlock the wallet\n             if (!wallet->Unlock(passphrase)) {\n                 error = \"Error: Wallet was encrypted but could not be unlocked\";\n-                status = WalletCreationStatus::ENCRYPTION_FAILED;\n-                return nullptr;\n+                return WalletCreationStatus::ENCRYPTION_FAILED;\n             }\n \n             // Set a seed for the wallet\n@@ -220,8 +221,8 @@ std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const SecureStri\n     }\n     AddWallet(wallet);\n     wallet->postInitProcess();\n-    status = WalletCreationStatus::SUCCESS;\n-    return wallet;\n+    result = wallet;\n+    return WalletCreationStatus::SUCCESS;\n }\n \n const uint32_t BIP32_HARDENED_KEY_LIMIT = 0x80000000;"
      },
      {
        "sha": "e36703f2c1afdfe66cd9e66b70301238dce21343",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba1f128d6c117a63d5d904b3956551bd83405ec9/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba1f128d6c117a63d5d904b3956551bd83405ec9/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ba1f128d6c117a63d5d904b3956551bd83405ec9",
        "patch": "@@ -55,7 +55,7 @@ enum class WalletCreationStatus {\n     ENCRYPTION_FAILED\n };\n \n-std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status);\n+WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, std::shared_ptr<CWallet>& result);\n \n //! Default for -keypool\n static const unsigned int DEFAULT_KEYPOOL_SIZE = 1000;"
      },
      {
        "sha": "294f90a0faa8b2d040a5d224b42a254a6b001776",
        "filename": "test/functional/wallet_createwallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba1f128d6c117a63d5d904b3956551bd83405ec9/test/functional/wallet_createwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba1f128d6c117a63d5d904b3956551bd83405ec9/test/functional/wallet_createwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_createwallet.py?ref=ba1f128d6c117a63d5d904b3956551bd83405ec9",
        "patch": "@@ -119,5 +119,8 @@ def run_test(self):\n         # Empty passphrase, error\n         assert_raises_rpc_error(-16, 'Cannot encrypt a wallet with a blank password', self.nodes[0].createwallet, 'w7', False, False, '')\n \n+        self.log.info('Using a passphrase with private keys disabled returns error')\n+        assert_raises_rpc_error(-4, 'Passphrase provided but private keys are disabled. A passphrase is only used to encrypt private keys, so cannot be used for wallets with private keys disabled.', self.nodes[0].createwallet, wallet_name='w8', disable_private_keys=True, passphrase='thisisapassphrase')\n+\n if __name__ == '__main__':\n     CreateWalletTest().main()"
      }
    ]
  },
  {
    "sha": "e967cae8fac84ec7a89a3a853a83d8193ac3308e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTY3Y2FlOGZhYzg0ZWM3YTg5YTNhODUzYTgzZDgxOTNhYzMzMDhl",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fabian.jahr@whu.edu",
        "date": "2019-07-12T18:06:55Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2019-07-19T18:34:53Z"
      },
      "message": "Use switch on status in RpcWallet",
      "tree": {
        "sha": "d5bf5a1bf54e44788884abf271aac5443dbd399b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5bf5a1bf54e44788884abf271aac5443dbd399b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e967cae8fac84ec7a89a3a853a83d8193ac3308e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e967cae8fac84ec7a89a3a853a83d8193ac3308e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e967cae8fac84ec7a89a3a853a83d8193ac3308e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e967cae8fac84ec7a89a3a853a83d8193ac3308e/comments",
    "author": null,
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba1f128d6c117a63d5d904b3956551bd83405ec9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba1f128d6c117a63d5d904b3956551bd83405ec9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba1f128d6c117a63d5d904b3956551bd83405ec9"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "ae610ec07d06930652abe5e89e7913f8b975c805",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e967cae8fac84ec7a89a3a853a83d8193ac3308e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e967cae8fac84ec7a89a3a853a83d8193ac3308e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e967cae8fac84ec7a89a3a853a83d8193ac3308e",
        "patch": "@@ -2686,12 +2686,14 @@ static UniValue createwallet(const JSONRPCRequest& request)\n     std::string warning;\n     std::shared_ptr<CWallet> wallet;\n     WalletCreationStatus status = CreateWallet(*g_rpc_interfaces->chain, passphrase, flags, request.params[0].get_str(), error, warning, wallet);\n-    if (status == WalletCreationStatus::CREATION_FAILED) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, error);\n-    } else if (status == WalletCreationStatus::ENCRYPTION_FAILED) {\n-        throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, error);\n-    } else if (status != WalletCreationStatus::SUCCESS) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed\");\n+    switch (status) {\n+        case WalletCreationStatus::CREATION_FAILED:\n+            throw JSONRPCError(RPC_WALLET_ERROR, error);\n+        case WalletCreationStatus::ENCRYPTION_FAILED:\n+            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, error);\n+        case WalletCreationStatus::SUCCESS:\n+            break;\n+        // no default case, so the compiler can warn about missing cases\n     }\n \n     UniValue obj(UniValue::VOBJ);"
      }
    ]
  }
]