promag,2017-10-26T13:22:05Z,"With this change there is a different behaviour with these calls:\n```sh\nbitcoin-cli -named listsinceblock target_confirmations=1\nbitcoin-cli listsinceblock """" 1\n```\nTo make both consistent deal with empty string?\n```cpp\n    if (!request.params[0].isNull() && !request.params[0].get_str().empty()) {\n```\nOtherwise tested ACK.",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339663914,339663914,
promag,2017-10-26T13:24:54Z,"Maybe we should also raise\n```cpp\nthrow JSONRPCError(RPC_INVALID_PARAMETER, ""Invalid parameter"");\n```\nif an argument is not a valid block hash?",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339664745,339664745,
theuni,2017-10-26T14:13:26Z,"Concept ACK. Agree with @promag's points. Also, because a zero hash is returned for lastblock in some cases (though maybe not anymore after this?), hash.IsNull() should probably throw an error also.",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339679575,339679575,
jnewbery,2017-10-26T15:02:20Z,Tested ACK 3f4318c962d398ab375039aaf70beed2c4323fe4,https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339695344,339695344,
ryanofsky,2017-10-26T15:54:34Z,"Updated 3f4318c962d398ab375039aaf70beed2c4323fe4 -> 659b2061c4329472a45e913c5d45e6ab180600a3 ([pr/since.1](https://github.com/ryanofsky/bitcoin/commits/pr/since.1) -> [pr/since.2](https://github.com/ryanofsky/bitcoin/commits/pr/since.2))\n\nChanged to accept empty string, and added tests for empty, invalid hex, and zero strings.",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339712608,339712608,
ryanofsky,2017-10-26T16:58:19Z,"> Invalid blockhash is not the same as block not found\n\nI don't know what this means. Feel free to send a patch or open a pr with whatever change you would like to see.",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339731287,339731287,
theuni,2017-10-26T17:23:18Z,"I generally agree with @promag that an invalid hash (zero, too long, too short) should throw a different error than a valid hash but missing block, but I suspect that we don't do that in most places already, so there's not much use in differentiating here.\n\nutACK 659b2061c4329472a45e913c5d45e6ab180600a3",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339738225,339738225,
promag,2017-10-26T17:38:50Z,"We do have partial argument validation, mostly type validation, but in some cases value validation. It can be improved in a different PR for sure, I can take that.",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339742540,339742540,
jnewbery,2017-10-26T19:18:05Z,"Tested ACK 659b2061c4329472a45e913c5d45e6ab180600a3\n\nAgree that invalid block hash validation for this and other RPC methods can be added in a future PR.",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339771467,339771467,
promag,2017-10-26T19:42:04Z,ACK 659b206.,https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339778661,339778661,
gmaxwell,2017-10-26T21:02:12Z,utACK,https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339799898,339799898,
ryanofsky,2017-10-27T02:08:37Z,Should this be backported?,https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-339852241,339852241,
theuni,2017-10-27T17:52:02Z,"@ryanofsky I'd say so. I've been trying to come up with a scenario where this would be a regression from a user's pov, but can't come up with anything realistic.\n\nAll I've got is ""maybe some software isn't prepared to cope with error/no output on a call"", but that doesn't seem like an issue since everyone has to deal with warmup failures already.",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-340040272,340040272,
MarcoFalke,2017-10-28T18:04:12Z,utACK 659b2061c4329472a45e913c5d45e6ab180600a3,https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-340209251,340209251,
sdaftuar,2017-10-31T12:33:42Z,"utACK\n",https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-340748421,340748421,
fanquake,2017-11-01T13:49:01Z,Backported in #11550,https://github.com/bitcoin/bitcoin/pull/11565#issuecomment-341111004,341111004,
