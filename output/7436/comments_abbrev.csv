morcos,2016-01-28T15:04:43Z,@dcousens One of the things on my list is to try to encapsulate the calculation of all the now consensus critical information that must be stored in a CTxMemPoolEntry.   I think isolating that first as well as other checks required for mempool consistency makes sense so its easier to not accidentally break mining while trying to make a policy change.\n,https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-176227180,176227180,
dcousens,2016-02-02T21:48:10Z,@jtimon/@petertodd I [moved](https://github.com/dcousens/bitcoin/commit/6a7f359e5927ab0f3bc53956cff7809879e5b3e9) `HasConflicts` to `CTxMempool::GetConflicts`.\n\nThoughts? \n,https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-178844893,178844893,
dcousens,2016-02-02T21:56:36Z,Rebased on master\n,https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-178847618,178847618,
jtimon,2016-02-04T13:39:19Z,"That's not what I meant: you moved the policy to the mempool too. I meant calling mempool.getconflicts to get the set of conflicts, and then, with that set, call hasrepleceableConflicts that loops through the set to determine whether the conflicts can be acceptable or not according to the local relay policy.\nI can draft it in code on top of this PR if my explanation is still not very clear.\n",https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-179844573,179844573,
dcousens,2016-02-04T23:12:12Z,"@jtimon OK,  will amend.  It wasn't the policy that was moved,  but indeed there was a cross over of replacement logic.\n",https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-180097186,180097186,
arowser,2016-05-25T08:44:59Z,Can one of the admins verify this patch?\n,https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-221510752,221510752,
MarcoFalke,2016-09-30T16:58:05Z,@dcousens Is this worth keeping open. (Maybe create a brainstorming issue or try to raise it as short topic in next weeks meeting?)\n,https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-250796879,250796879,
dcousens,2016-10-01T00:50:33Z,"@MarcoFalke I'll come back to it later,  no point keeping open.   Modular policy is definitely something I'd still like to invest time into,   but not right now.\n",https://github.com/bitcoin/bitcoin/pull/7436#issuecomment-250882243,250882243,
petertodd,2016-01-31T09:34:41Z,"HasConflicts() is a bit of a weird name for this, given it may return false, yet also set a bunch of conflicts in setConflicts.\n\nMaybe call it ""HasReplacableConflicts()""?\n",https://github.com/bitcoin/bitcoin/pull/7436#discussion_r51357757,51357757,src/main.cpp
jtimon,2016-02-01T21:38:40Z,"Another possibility is to have a GetConflicts method in the mempool and an AcceptConflictsAsReplaceable() function in policy. Or even better, a function AcceptTxReplacement with all the other relay/mining policy stuff that uses setConflicts (though the latter may be more complex).\n",https://github.com/bitcoin/bitcoin/pull/7436#discussion_r51484773,51484773,src/main.cpp
jtimon,2016-02-01T21:42:29Z,"I don't think this function should be moved to policy/policy.o. And as said the previous function, if it is to be moved to policy/policy, could take setConflicts from the mempool as `const set<uint256>&` instead (there's not need for policy/policy to depend on the mempool).\n",https://github.com/bitcoin/bitcoin/pull/7436#discussion_r51485405,51485405,src/main.cpp
dcousens,2016-02-02T12:37:44Z,Will be amending these nits within the next 24 hours.\n,https://github.com/bitcoin/bitcoin/pull/7436#discussion_r51562422,51562422,src/main.cpp
