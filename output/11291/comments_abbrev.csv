MarcoFalke,2017-09-09T21:25:50Z,"Thank you for putting so much effort in your first contribution. However, according to our developer guidelines we can not accept pull requests that solely change formatting and style.\n\nNonetheless, you are welcome to address my issue with this file instead. Also note that you can change `testObj` to `test_obj`, as formatting fixes are allowed when none-style but refactoring changes are made t",https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-328304423,328304423,
dongsam,2017-09-10T00:51:41Z,"Â @MarcoFalke Thank you for your advice, I just added commit for use `os.path.join` instead string concatenation",https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-328312462,328312462,
jnewbery,2017-09-12T17:23:01Z,"@dongsam we don't have particularly strict style guidelines for our python code. The only style notes are in https://github.com/bitcoin/bitcoin/blob/master/test/functional/README.md.\n\nSince _A Foolish Consistency is the Hobgoblin of Little Minds_, we don't usually open PRs to adhere to PEP-8 style, unless there's some good reason to do so (eg making bugs less likely). If I'm doing substantial ",https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-328923519,328923519,
MarcoFalke,2017-10-05T11:10:45Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-334433993,334433993,
jnewbery,2017-12-09T15:55:15Z,utACK a3ac7672ed9c63b954d3f368a90616448d31b4c3. Needs to be tested on windows.,https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-350479908,350479908,
MarcoFalke,2017-12-30T05:25:55Z,"Going to merge since this is a strict improvement.\n\n                  \n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nutACK a3ac7672ed9c63b954d3f368a90616448d31b4c3\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJaRyMzAAoJENLqSFDnUoslIfgP/0jDVYpEb4TBa5/gBHwQJWqk\nez+gDdtwFpJteURQoc4sDFzkGq4xFiltUBuZoDspjgOq8eETvn7mgGpd4t71ZwUy\n/7t8yIbFFVR94RhOXCRN/8z9u4vfE7068CeiNwmq+9tP",https://github.com/bitcoin/bitcoin/pull/11291#issuecomment-354528580,354528580,
MarcoFalke,2017-09-09T21:21:41Z,I'd assume those should probably use `os.path.join` to make it work on other os as well.,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137935657,137935657,test/util/bitcoin-util-test.py
MarcoFalke,2017-09-10T01:19:15Z,"The last concatenation is string concatenation.\n\nYou can check if the tests pass locally by `make check`",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137938622,137938622,test/util/bitcoin-util-test.py
dongsam,2017-09-10T04:47:45Z,"Thanks I just fixed it, Sorry for my careless mistake",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r137941006,137941006,test/util/bitcoin-util-test.py
jnewbery,2017-09-12T14:15:03Z,"since you're converting to snake_case, how about `build_env`",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138360242,138360242,test/util/bitcoin-util-test.py
jnewbery,2017-09-12T14:15:50Z,`exec_prog`? (and `exec_args` and `exec_run`),https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138360571,138360571,test/util/bitcoin-util-test.py
MarcoFalke,2017-09-12T16:00:28Z,I don't it is worth the overhead to change apostrophe to quotation mark.,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138392475,138392475,test/util/bitcoin-util-test.py
MarcoFalke,2017-09-12T16:01:29Z,Changing this line solely to split it into two causes difficulties grepping in the future.,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138392847,138392847,test/util/bitcoin-util-test.py
MarcoFalke,2017-09-12T16:02:33Z,Can you explain why it makes sense to first log to info and then the same to the error level?,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138393170,138393170,test/util/bitcoin-util-test.py
MarcoFalke,2017-09-12T16:05:14Z,"Generally, I'd prefer if refactoring is separate (at least a separate commit) from changing behavior.",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138393893,138393893,test/util/bitcoin-util-test.py
MarcoFalke,2017-09-12T16:06:02Z,I don't think it makes sense to replace every variable in the whole file by a lower_case name.,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138394117,138394117,test/util/bitcoin-util-test.py
jnewbery,2017-09-12T17:15:52Z,"agree (and for short symbol-like strings as in this line, single quotes seem to be most people's preferred style)",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412152,138412152,test/util/bitcoin-util-test.py
jnewbery,2017-09-12T17:17:03Z,"For short util modules like this, and even for most of our test scripts, I don't think 2 lines separating each function is necessary. It makes sense for large projects where you want visual separation between top-level classes, but I think it's unnecessary here.",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412439,138412439,test/util/bitcoin-util-test.py
jnewbery,2017-09-12T17:17:51Z,... and most of our python files don't adhere to the 79 char max line length (which I think is a good thing!),https://github.com/bitcoin/bitcoin/pull/11291#discussion_r138412648,138412648,test/util/bitcoin-util-test.py
jnewbery,2017-10-05T14:06:59Z,nit: why remove this line? Blank lines are used within functions to indicate logical sections.,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142947306,142947306,test/util/bitcoin-util-test.py
dongsam,2017-10-05T14:10:52Z,"sorry, that was mistake while rebasing, I'll add again now",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142948540,142948540,test/util/bitcoin-util-test.py
jnewbery,2017-10-05T14:28:53Z,You've now added trailing whitespace :(,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142954040,142954040,test/util/bitcoin-util-test.py
jnewbery,2017-10-05T14:29:54Z,Is this change (and the one at line 107) intentional?,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142954467,142954467,test/util/bitcoin-util-test.py
dongsam,2017-10-05T14:46:21Z,"Yes, there was potential risk `outputType` can be None so I added initial outputType and exception line when outputType is None, if you think it is not needed, i can remove again",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r142959565,142959565,test/util/bitcoin-util-test.py
jnewbery,2017-10-09T14:31:23Z,"suggestion: change the error text slightly here to clarify what the problem is:\n\n```python\nlogging.error(""Output file %s does not have a file extension"" % outputFn)\n```",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r143483785,143483785,test/util/bitcoin-util-test.py
jnewbery,2017-10-09T14:32:02Z,"Yes, this is a good additional check.",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r143483947,143483947,test/util/bitcoin-util-test.py
fanquake,2017-11-17T13:38:18Z,@dongsam Could you address @jnewbery's nit here? Looks like this is pretty much ready for merge.,https://github.com/bitcoin/bitcoin/pull/11291#discussion_r151685963,151685963,test/util/bitcoin-util-test.py
dongsam,2017-12-08T14:15:17Z,"@fanquake I just change and rebase the error text, sorry for late response",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r155786049,155786049,test/util/bitcoin-util-test.py
jnewbery,2017-12-08T19:31:44Z,"I think this is better as:\n\n```python\nexecprog = os.path.join(buildenv[""BUILDDIR""], ""src"", testObj[""exec""] + buildenv[""EXEEXT""])\n```\n\n(ie `buildenv[""EXEEXT""]` should be appended to `testObj[""exec""]` before joining into a path), but I don't have a windows machine to test this on.\n\nIs there a reason you put `buildenv[""EXEEXT""]` outside the `os.path.join`?",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r155856815,155856815,test/util/bitcoin-util-test.py
dongsam,2017-12-09T02:32:57Z,"I thought also but that was mistook, buildenv[""EXEEXT""] is not path, so occur error when with os.path.join\nthat need just string concatenation\n\n![comment](http://i.imgur.com/ShpEvJv.png)",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r155911023,155911023,test/util/bitcoin-util-test.py
jnewbery,2017-12-09T05:16:11Z,"right, that's why you should have:\n\n```\nexecprog = os.path.join(buildenv[""BUILDDIR""], ""src"", testObj[""exec""] + buildenv[""EXEEXT""])\n```\n\n(concatenate `testObj[""exec""]` and  `buildenv[""EXEEXT""]` as a single argument to `os.path.join()`)",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r155913711,155913711,test/util/bitcoin-util-test.py
dongsam,2017-12-09T06:17:00Z,"oh, sorry I misunderstood, that's look better, I'll update :)",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r155914533,155914533,test/util/bitcoin-util-test.py
MarcoFalke,2017-12-09T18:41:14Z,"^ one line above.\n\n`""test/util/data""` throws an error on windows:\n\n\n```\nFileNotFoundError: [Errno 2] No such file or directory: '.../Downloads/workspace/bitcoin\\test/util/data\\bitcoin-util-test.json'",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r155929266,155929266,test/util/bitcoin-util-test.py
MarcoFalke,2017-12-09T23:23:01Z,"Might as well pass in `input_filename` to `bctester` and instead do the path.join in line 47, no?",https://github.com/bitcoin/bitcoin/pull/11291#discussion_r155934649,155934649,test/util/bitcoin-util-test.py
