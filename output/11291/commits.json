[
  {
    "sha": "a3ac7672ed9c63b954d3f368a90616448d31b4c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2FjNzY3MmVkOWM2M2I5NTRkM2YzNjhhOTA2MTY0NDhkMzFiNGMz",
    "commit": {
      "author": {
        "name": "dongsamb",
        "email": "dongsamb@gmail.com",
        "date": "2017-09-08T22:19:07Z"
      },
      "committer": {
        "name": "dongsamb",
        "email": "dongsamb@gmail.com",
        "date": "2017-12-09T06:14:41Z"
      },
      "message": "Fix string concatenation to os.path.join and add exception case",
      "tree": {
        "sha": "cd6bc9ae8aeea5748de323386475d8c0ef01dfee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd6bc9ae8aeea5748de323386475d8c0ef01dfee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3ac7672ed9c63b954d3f368a90616448d31b4c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ac7672ed9c63b954d3f368a90616448d31b4c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ac7672ed9c63b954d3f368a90616448d31b4c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ac7672ed9c63b954d3f368a90616448d31b4c3/comments",
    "author": {
      "login": "dongsam",
      "id": 1797794,
      "node_id": "MDQ6VXNlcjE3OTc3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1797794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongsam",
      "html_url": "https://github.com/dongsam",
      "followers_url": "https://api.github.com/users/dongsam/followers",
      "following_url": "https://api.github.com/users/dongsam/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongsam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongsam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongsam/subscriptions",
      "organizations_url": "https://api.github.com/users/dongsam/orgs",
      "repos_url": "https://api.github.com/users/dongsam/repos",
      "events_url": "https://api.github.com/users/dongsam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongsam/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongsam",
      "id": 1797794,
      "node_id": "MDQ6VXNlcjE3OTc3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1797794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongsam",
      "html_url": "https://github.com/dongsam",
      "followers_url": "https://api.github.com/users/dongsam/followers",
      "following_url": "https://api.github.com/users/dongsam/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongsam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongsam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongsam/subscriptions",
      "organizations_url": "https://api.github.com/users/dongsam/orgs",
      "repos_url": "https://api.github.com/users/dongsam/repos",
      "events_url": "https://api.github.com/users/dongsam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongsam/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ef4dfebbc07d93d72899f60e01ca77a280c9122",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ef4dfebbc07d93d72899f60e01ca77a280c9122",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ef4dfebbc07d93d72899f60e01ca77a280c9122"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "64e826ad0b3d47dcb7997561b54780733bfaef5f",
        "filename": "test/util/bitcoin-util-test.py",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3ac7672ed9c63b954d3f368a90616448d31b4c3/test/util/bitcoin-util-test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3ac7672ed9c63b954d3f368a90616448d31b4c3/test/util/bitcoin-util-test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/bitcoin-util-test.py?ref=a3ac7672ed9c63b954d3f368a90616448d31b4c3",
        "patch": "@@ -48,7 +48,7 @@ def main():\n \n def bctester(testDir, input_basename, buildenv):\n     \"\"\" Loads and parses the input file, runs all tests and reports results\"\"\"\n-    input_filename = testDir + \"/\" + input_basename\n+    input_filename = os.path.join(testDir, input_basename)\n     raw_data = open(input_filename).read()\n     input_data = json.loads(raw_data)\n \n@@ -77,32 +77,36 @@ def bctest(testDir, testObj, buildenv):\n     are not as expected. Error is caught by bctester() and reported.\n     \"\"\"\n     # Get the exec names and arguments\n-    execprog = buildenv[\"BUILDDIR\"] + \"/src/\" + testObj['exec'] + buildenv[\"EXEEXT\"]\n+    execprog = os.path.join(buildenv[\"BUILDDIR\"], \"src\", testObj[\"exec\"] + buildenv[\"EXEEXT\"])\n     execargs = testObj['args']\n     execrun = [execprog] + execargs\n \n     # Read the input data (if there is any)\n     stdinCfg = None\n     inputData = None\n     if \"input\" in testObj:\n-        filename = testDir + \"/\" + testObj['input']\n+        filename = os.path.join(testDir, testObj[\"input\"])\n         inputData = open(filename).read()\n         stdinCfg = subprocess.PIPE\n \n     # Read the expected output data (if there is any)\n     outputFn = None\n     outputData = None\n+    outputType = None\n     if \"output_cmp\" in testObj:\n         outputFn = testObj['output_cmp']\n         outputType = os.path.splitext(outputFn)[1][1:]  # output type from file extension (determines how to compare)\n         try:\n-            outputData = open(testDir + \"/\" + outputFn).read()\n+            outputData = open(os.path.join(testDir, outputFn)).read()\n         except:\n             logging.error(\"Output file \" + outputFn + \" can not be opened\")\n             raise\n         if not outputData:\n             logging.error(\"Output data missing for \" + outputFn)\n             raise Exception\n+        if not outputType:\n+            logging.error(\"Output file %s does not have a file extension\" % outputFn)\n+            raise Exception\n \n     # Run the test\n     proc = subprocess.Popen(execrun, stdin=stdinCfg, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)"
      }
    ]
  }
]