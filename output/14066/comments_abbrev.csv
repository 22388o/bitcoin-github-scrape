DrahtBot,2018-08-26T04:26:00Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20451 (lint: run mypy over contrib/devtools by fanquake)\n* #20434 (contrib: Parse ELF directly for symbol and security c",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-416013065,416013065,
laanwj,2018-08-27T07:14:14Z,"Concept ACK\n\nNot convinced, though, that we need a set of both big and little-endian binaries. What is the default on this platform? If you can only test little-endian, I think it's better to leave it at that.\n([looks like](https://mastodon.social/@CryptoPietje/100621701229505761) both Debian and Fedora support LE, or are moving to it)\n\nAlso (not for this PR): what would be *really* inte",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-416136559,416136559,
luke-jr,2018-08-30T00:17:53Z,"There is no default. Some older systems can only boot to big endian. Newer systems come in either BE and LE variant. Unfortunately, one cannot run even static BE binaries on LE or vice-versa (on Linux, anyway).",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-417149192,417149192,
awilfox,2018-08-30T21:13:52Z,"At least RHEL, SuSE, and Ad√©lie ship big-endian images.\n\nBig endian is simple to run in KVM paravirt on the little-endian systems with a performance hit of less than 1%.  This should be very easy to test, especially with Gentoo, since Gentoo can make a cross-root somewhere and then you can just point KVM at that disk.\n\nAny POWER7 or older system, including most workstations before the Talo",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-417469224,417469224,
laanwj,2018-09-08T05:37:34Z,"> Any POWER7 or older system, including most workstations before the Talos (including IBM's post-RS and Apple's 970), are exclusively big endian.\n\nThose are outside the scope of this PR, though, OP mentions this is POWER8+.",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-419614997,419614997,
luke-jr,2018-09-18T14:20:58Z,Rebased,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-422412920,422412920,
practicalswift,2019-02-16T23:48:55Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-464400656,464400656,
practicalswift,2019-02-22T11:23:06Z,@luke-jr What setup would you suggest for reviewers who want to test those binaries?,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-466364883,466364883,
awilfox,2019-02-22T18:45:50Z,"You could spin up an IntegriCloud VPS, but I don't know of any big endian distros that use glibc.  All of them that I am aware of (Adelie, Void, etc) went to musl since it is easier to support BE on musl.\n\nSo you'd need an older Debian or Fedora image to test the BE binary.",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-466503477,466503477,
luke-jr,2019-03-28T10:59:28Z,"Rebased, and extended support back to the PowerPC 970 (Apple G5) since it didn't seem to have a notable performance hit on POWER9 (it actually performed better!).",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-477547699,477547699,
practicalswift,2019-03-28T11:01:11Z,@luke-jr What setup would you suggest for reviewers who want to test those binaries?,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-477548200,477548200,
luke-jr,2019-03-28T11:09:13Z,"@awilfox answered that above. If you prefer to buy real hardware, I'm using https://www.raptorcs.com/content/base/products.html",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-477550700,477550700,
MarcoFalke,2019-03-29T14:06:59Z,"Fails with:\n\n```\n> make[1]: Leaving directory '/home/ubuntu/build/bitcoin/depends/work/build/powerpc64-linux-gnu/qt/5.9.7-72625d07ee6/qtbase/config.tests/xcb_xlib'\n => source accepted.\ntest config.gui.libraries.xcb_xlib succeeded\nChecking for XKB config root... \ntest config.gui.tests.xkbconfigroot gave result /usr/share/X11/xkb\nChecking for xkbcommon... \nTrying source 0 (type pkg",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-478010194,478010194,
luke-jr,2019-03-29T21:07:54Z,Worked for me and the bot? :/,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-478150148,478150148,
MarcoFalke,2019-03-29T22:22:10Z,"> Worked for me and the bot? :/\n\nOh, the failure is from the bot. But it passes for me locally on a fresh bionic vm:\n\n```sh\napt update && apt install -y git vim htop make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 && apt install -y  g++-powerpc64-linux-gnu binutils-powerpc64-linux-gnu g++-powerpc64le-linux-gnu binutils-powerpc64le-linux-gnu\ng",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-478167102,478167102,
dongcarl,2019-05-31T19:59:03Z,Tested that Gitian building works on my own machine.,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-497841620,497841620,
practicalswift,2019-10-14T07:55:37Z,"Concept ACK\n\nDiversity in testing is good. Thanks for working on this!",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-541538128,541538128,
laanwj,2019-11-01T10:42:44Z,Would be nice to have this for 0.20.,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-548744614,548744614,
laanwj,2019-11-08T19:37:50Z,"> Also splits libpng out of Qt (since Qt's bundled copy is broken on POWER) and disables JPEG (since we don't use it).\n\nCould this be solved by changing to a new version of Qt? If so, I'd prefer that.",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-551962742,551962742,
MarcoFalke,2019-12-09T17:50:06Z,One of the commits has been cherry-picked and merged as 989fd539d5bf590c5f6070ee2a4a9e2d3018df2c,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-563353386,563353386,
laanwj,2020-03-06T22:51:58Z,This has needed rebase for a while (if we still want this for 0.20).,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-595998418,595998418,
hebasto,2020-03-15T20:57:19Z,"@luke-jr \n> Also splits libpng out of Qt (since Qt's bundled copy is broken on POWER)\n\nJust for reference:\n- [QTBUG-66388: libQtGui fails linking libqtpng on Power8+ and Power9](https://bugreports.qt.io/browse/QTBUG-66388)\n\n@laanwj \n> Could this be solved by changing to a new version of Qt? If so, I'd prefer that.\n\nFixed since Qt 5.12.0 (according to the bugtracker).",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-599263639,599263639,
sipa,2020-03-16T04:24:26Z,Would be nice to have this for 0.20.,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-599338539,599338539,
luke-jr,2020-03-16T19:48:57Z,"Rebased and fixed a bug (GCC 8 miscompiles for LE targets with `-mcpu=970`)\n\nConsidering the fragility of using the wrong `-mcpu`, I kept it in the wrapper...",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-599728639,599728639,
MarcoFalke,2020-03-18T14:55:12Z,"Excerpt:\n\n```\n+ make -j1 -C src check-security\nmake: Entering directory '/home/ubuntu/build/bitcoin/distsrc-powerpc64-linux-gnu/src'\nChecking binary security...\nbitcoind: failed NX\nbitcoin-cli: failed NX\nbitcoin-tx: failed NX\nbitcoin-wallet: failed NX\ntest/test_bitcoin: failed NX\nbench/bench_bitcoin: failed NX\nqt/bitcoin-qt: failed NX\nMakefile:18486: recipe for target 'ch",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-600670073,600670073,
luke-jr,2020-03-24T04:56:34Z,Fixed by making `noexecstack` explicit on all platforms (it doesn't make sense to rely on defaults when we require it...),https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-603015128,603015128,
luke-jr,2020-08-20T04:52:10Z,Needs rebasing on top of #19751 once that's merged,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-677063411,677063411,
luke-jr,2020-10-24T13:26:43Z,Rebased and re-tested.,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-715914999,715914999,
DrahtBot,2020-10-25T11:06:18Z,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit d67883d01e507dd22d1281f4a4860e79d6a46a47<br>(master) | commit f8cb73189115a63d45256b9340816bfce96393f5<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`4e64895ca673f44e...`](https://drahtbot.space/guix/bitcoin/bitcoin/d67883d01e507dd22d1281f4a4860e79d6a46a47/bitcoin-d67883d01e50-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-716129069,716129069,
DrahtBot,2020-10-26T12:52:14Z,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit d67883d01e507dd22d1281f4a4860e79d6a46a47<br>(master) | commit f8cb73189115a63d45256b9340816bfce96393f5<br>(master and this pull) |\n|--|--|--|\n| bitcoin-core-linux-0.21-res.yml | [`fb2670f2f8ab0d0a...`](https://drahtbot.space/gitian/bitcoin/bitcoin/d67883d01e507dd22d1281f4a4860e79d6a46a47/bitcoin-core-linux-0.21-res.yml,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-716525767,716525767,
laanwj,2020-12-18T11:27:48Z,Now that #20434 is merged the symbol/security tooling-related changes should be able to be dropped here.,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-748034975,748034975,
DrahtBot,2020-12-18T12:20:49Z,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-748056391,748056391,
laanwj,2021-01-11T15:36:06Z,Would be good to get this in early in the 0.22 cycle. But it needs rebase; ping @luke-jr .,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-758028462,758028462,
laanwj,2021-01-19T13:45:19Z,Closing in favor of #20963.,https://github.com/bitcoin/bitcoin/pull/14066#issuecomment-762848099,762848099,
theuni,2018-09-26T19:47:50Z,"I have no clue what this is suppose to do.\n\nPerhaps a different tool like objdump or nm has output that's more easily parsed?",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r220699461,220699461,contrib/devtools/symbol-check.py
theuni,2018-09-26T19:54:06Z,"If this were a gcc switch, we would test against --tls-get-addr-optimize, then add --no-tls-get-addr-optimize to COMPAT_LDFLAGS if it succeeded. That is because gcc issues warnings for --no-foo if unsupported, but errors for --foo.\n\nI'm thinking we should do the same here. I don't know how most linkers handle this, but I can't imagine that causing any problems. That would also mean that we cou",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r220701271,220701271,configure.ac
theuni,2018-09-26T19:58:34Z,Why this instead of doing it the usual way via configure?,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r220702694,220702694,depends/packages/libpng.mk
theuni,2018-09-26T20:00:32Z,This looks like something that should be handled in depends/hosts/linux.mk,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r220703469,220703469,contrib/gitian-descriptors/gitian-linux.yml
theuni,2018-09-26T20:03:00Z,"What is BITCOIN_SYMBOL_CHECK_OPTIONS ? I don't see any references to it, is this just intended to be an optional env var for local testing?",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r220704179,220704179,src/Makefile.am
laanwj,2018-10-18T07:32:44Z,"ahhh\neven parsing the ELF directly would be easier here than *this*",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226195114,226195114,contrib/devtools/symbol-check.py
luke-jr,2018-10-18T11:23:07Z,Should have been dropped in rebase; will remove next revision.,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226266755,226266755,src/Makefile.am
luke-jr,2018-10-20T11:17:11Z,"This is a fairly straightforward regex... Do we really need to ban regexs? :/\n\nLooking at alternatives:\n\n* Debian's linter uses almost the same regex (they tolerate multiple spaces in one place this didn't).\n* Perl's Parse::Readelf module does some fancy parsing of column headers and stuff, and doesn't really seem like it works (not to mention only supports *printing* its output, not act",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226824064,226824064,contrib/devtools/symbol-check.py
luke-jr,2018-10-20T11:44:03Z,"It *should* work without the no- prefix, but upon further research, I'm not sure if this is the correct solution at all.\n\nAccording to [the documentation](https://sourceware.org/binutils/docs/ld/PowerPC64-ELF64.html), systems without the glibc-side part can still explicitly enable the option and produce binaries that work (with a performance hit) on older systems. I'm not sure how this is tech",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226824764,226824764,configure.ac
luke-jr,2018-10-20T12:02:38Z,What if someone else wants to build for POWER7 (outside of gitian)?,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226825214,226825214,contrib/gitian-descriptors/gitian-linux.yml
laanwj,2018-10-20T12:21:10Z,"I don't think it's *that* complex now that you've explained what it does on IRC, and why the old parsing doesn't work for POWER (due to `[<localentry>: 8]`)‚Äîplease add a comment in that regard (and thanks for investigating that `readelf` is apparently still the right tool for the job)",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226825621,226825621,contrib/devtools/symbol-check.py
luke-jr,2018-10-21T03:06:34Z,Managed to get an old glibc running and confirmed `--no-tls-get-addr-optimize` is in fact needed. No clue why the docs imply otherwise. :/,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226846340,226846340,configure.ac
awilfox,2018-10-21T05:41:00Z,Is there a reason for specifying `-mcpu=power8` here at all?  VSX goes back to P7 and VMX goes back to P4‚Ä¶,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226848304,226848304,contrib/gitian-descriptors/gitian-linux.yml
luke-jr,2018-10-21T07:59:21Z,"Maybe not. How far back can we safely go without a noticeable performance hit?\n\nWould also be good to confirm #13203 still works if compiled for pre-POWER8.",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226852308,226852308,contrib/gitian-descriptors/gitian-linux.yml
luke-jr,2018-10-21T08:04:11Z,"No idea why, but it doesn't seem to work the usual way via configure.\n\n```\n/usr/lib/gcc-cross/riscv64-linux-gnu/8/../../../../riscv64-linux-gnu/bin/ld: /home/ubuntu/build/bitcoin/depends/riscv64-linux-gnu/lib/libpng16.a(png.o): relocation R_RISCV_HI20 against `a local symbol' can not be used when making a shared object; recompile with -fPIC\n/usr/lib/gcc-cross/riscv64-linux-gnu/8/../../../.",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226852462,226852462,depends/packages/libpng.mk
luke-jr,2018-10-22T12:03:02Z,"As for the original comment:\n\n1. At least GNU ld errors if --no-foo is provided.\n2. Other platforms might not have compatibility issues using this flag.",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r226966077,226966077,configure.ac
awilfox,2018-10-22T22:31:41Z,"`vec_vsx_ld` is POWER7; but the SHA sigma instructions are exclusive to POWER8 and newer.  However, it looks like the merged code does check the hardware cap before using it, so it depends on compiler support, not build hardware support.  (That is, if my understanding is correct, one could build all the way down to -mcpu=generic and you'd still get speed on P8+.)",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r227160914,227160914,contrib/gitian-descriptors/gitian-linux.yml
MarcoFalke,2019-03-29T22:00:08Z,"```suggestion\n    sudo apt-get install g++-powerpc64-linux-gnu binutils-powerpc64-linux-gnu g++-powerpc64le-linux-gnu binutils-powerpc64le-linux-gnu\n```\n\n(Same as the other instructions)",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r270585644,270585644,depends/README.md
dongcarl,2019-12-09T17:55:05Z,Could we set these as `CFLAGS`/`CPPFLAGS` in depends instead of in the wrapper?,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r355594447,355594447,contrib/gitian-descriptors/gitian-linux.yml
luke-jr,2019-12-09T18:25:22Z,"I don't know how reliably those get passed everywhere. Also, you mean `CXXFLAGS`...",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r355608705,355608705,contrib/gitian-descriptors/gitian-linux.yml
dongcarl,2019-12-09T18:38:38Z,":sweat_smile: yeah I meant CXXFLAGS...\n\nwith `depends` you can just modify `hosts/linux.mk`... I'm also not sure about tuning for a specific cpu here (perhaps I'm understanding incorrectly), especially because this will be activated for both big and small endian `HOST`s? Do you have sources for why these flags are needed?",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r355615193,355615193,contrib/gitian-descriptors/gitian-linux.yml
luke-jr,2019-12-09T18:51:55Z,We don't want to force these CFLAGS on everyone... just use them for gitian builds so they perform well.,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r355621769,355621769,contrib/gitian-descriptors/gitian-linux.yml
dongcarl,2019-12-09T19:16:11Z,"Sure, then we can just supply `powerpc64_linux_CFLAGS='-mcpu=970 -mtune=power9' powerpc64le_linux_CFLAGS='-mcpu=970 -mtune=power9'`, but let's do that in a followup :-)\n\nWondering about the choice of `-mcpu` here... Why PowerPC 970 instead of a more generic `powerpc64` or `powerpc64le`? My reference: https://gcc.gnu.org/onlinedocs/gcc/RS_002f6000-and-PowerPC-Options.html#RS_002f6000-and-PowerP",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r355633425,355633425,contrib/gitian-descriptors/gitian-linux.yml
laanwj,2020-10-30T07:55:52Z,"~~Why remove this? Is `.plt` writable?~~\nWe should make this specific on architecture. If POWER9 is an exception here that needs the jump table to be writable (which would be kind of insecure in itself, so this *is* an important security check), let's make a specific exception for that.\n\nEdit: writability of the `.plt` section is not determined by separate-code. It's part of ""early binding"".",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r514923393,514923393,contrib/devtools/security-check.py
fanquake,2020-10-31T02:13:03Z,Agree with @laanwj. No need to wholesale relax our checks just to accommodate POWER. A special case with a comment should be fine.,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r515443645,515443645,contrib/devtools/security-check.py
fanquake,2020-10-31T02:14:16Z,"> Wondering about the choice of -mcpu here... Why PowerPC 970 instead of a more generic powerpc64 or powerpc64le? \n\nThis still atleast needs answering.",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r515443745,515443745,contrib/gitian-descriptors/gitian-linux.yml
fanquake,2020-10-31T02:20:17Z,"If you're going to add `-z,noexecstack` in the gitian descriptor, it should have a comment explaining why it's here, rather than along with all of the other hardening options in configure, otherwise it's not going to be clear why this flag is special cased.",https://github.com/bitcoin/bitcoin/pull/14066#discussion_r515444254,515444254,contrib/gitian-descriptors/gitian-linux.yml
luke-jr,2020-10-31T04:32:56Z,I don't know. GCC doesn't let me compare `-mcpu` values AFAICT. Presumably generic options wouldn't be optimal for modern CPUs? (even 970 is pretty ancient),https://github.com/bitcoin/bitcoin/pull/14066#discussion_r515454417,515454417,contrib/gitian-descriptors/gitian-linux.yml
luke-jr,2020-11-02T02:12:49Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r515709575,515709575,contrib/devtools/security-check.py
luke-jr,2020-11-02T02:14:34Z,I don't know the answer to that myself. This PR is merely making explicit what was already enforced by our scripts for other platforms.,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r515709920,515709920,contrib/gitian-descriptors/gitian-linux.yml
luke-jr,2020-11-02T02:15:06Z,I'm told `-mcpu=970` is just powerpc64 + altivec.,https://github.com/bitcoin/bitcoin/pull/14066#discussion_r515710026,515710026,contrib/gitian-descriptors/gitian-linux.yml
