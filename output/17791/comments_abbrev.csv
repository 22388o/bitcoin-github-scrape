practicalswift,2019-12-22 21:27:07,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17791#issuecomment-568304171,568304171,
DrahtBot,2019-12-22 23:13:05,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21000 (fuzz: Add UBSan suppressions needed for fuzz tests to not warn under -fsanitize=integer by practicalswift)\n\nIf y",https://github.com/bitcoin/bitcoin/pull/17791#issuecomment-568311085,568311085,
practicalswift,2019-12-22 23:20:16,"Nit regarding the commit message ""Fix UB in CTxMemPool*"":\n\nUnsigned integer wraparound and implicit integer sign change are not UB, but they are often unintentional - that is why UBSan is flagging them :)\n\nPerhaps the PR title (""Remove UBSan suppressions for CTxMemPool*"") could be used as commit message instead?\n\n`-fsanitize=implicit-integer-sign-change`: Implicit conversion between in",https://github.com/bitcoin/bitcoin/pull/17791#issuecomment-568311606,568311606,
hebasto,2019-12-22 23:25:33,"@practicalswift \n> Nit regarding the commit message ""Fix UB in CTxMemPool*""...\n\nAgree with every word ;)\nFixed.\n",https://github.com/bitcoin/bitcoin/pull/17791#issuecomment-568311988,568311988,
practicalswift,2019-12-23 07:19:48,ACK 52a45c393c7cf4309b754d42c240e9652f825bbe -- diff looks correct,https://github.com/bitcoin/bitcoin/pull/17791#issuecomment-568383252,568383252,
Empact,2020-02-20 20:48:08,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17791#issuecomment-589300907,589300907,
DrahtBot,2021-01-26 09:08:11,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/17791#issuecomment-767405786,767405786,
promag,2019-12-22 21:08:50,Why are you adding this? `GetTxSize` returns `size_t` and asserting `!= 0` is new behavior. I think this could be dropped.,https://github.com/bitcoin/bitcoin/pull/17791#discussion_r360728794,360728794,src/txmempool.cpp
hebasto,2019-12-22 22:31:08,"> `GetTxSize` returns `size_t` and asserting `!= 0` is new behavior.\n\nFixed.\n\n> I think this could be dropped.\n\nLet's keep `assert` for safety ;)",https://github.com/bitcoin/bitcoin/pull/17791#discussion_r360732879,360732879,src/txmempool.cpp
Empact,2020-02-20 20:38:27,"nit: this is now the size of the tx, not the update\n\nMaybe assert against the `it->GetTxSize` directly? Would mean just adding one line here. If you're concerned about the repeated calls, something like this: https://github.com/Empact/bitcoin/commit/0018dd13b6799d7dbaafc8cdce66c8a0689083bd would make them trivial.",https://github.com/bitcoin/bitcoin/pull/17791#discussion_r382244421,382244421,src/txmempool.cpp
