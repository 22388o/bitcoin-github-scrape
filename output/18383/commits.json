[
  {
    "sha": "f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjVjOWFkNDBmMmY1Y2RjNTgxYmRhZjcyZTdkYzY4ZTlkN2Y3YTgw",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-19T12:57:02Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-03-23T14:36:24Z"
      },
      "message": "Check for overflow when calculating sum of outputs",
      "tree": {
        "sha": "8d7d4e3fbc104e2a689a592a4d42fbe41c9ae63a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d7d4e3fbc104e2a689a592a4d42fbe41c9ae63a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl54yWkZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf9EQD/97q21rhp5m7SG/cYFmIe1q\nmlneLjY59e4gB4MFKL9hRaiybuChNTlXYNPoz2AJhoYUdxXGyg9wX/YlflcCevwB\n2xbyVLtk3lEBEZmoOwRjrrpD8y0fomuAyx0w4VAW1WMTtpkR6nkxhtAWZ5WUuHJh\nFfOaga5RJ/ZpGjxI0EkXcipvCRmU3jlHQd4MFLElV8rIpoWyLW3Qv9AH4wH+g38K\nxnGW6aeYj7/Eq38eWfHrp8MvnoEhhnrBP3egvJiyXPqWWtimuYbcXk3IR3f9Y0D9\nmfl+8oFP++2+qH3eL+Qfy7WBMocmL9TmkhBpZxflOfYBNfTDWFI9ac+A69+MytQH\nnJbhVZvv1AnMI13MrjVZKGlTa7HEXYKZZSdlLDVFnqEzPVDrDDh7cksaKn8T1b6J\nfTp4dU7q3pB3rsDnr0TC73nGMeCrbQR8mbWCo9/FiGsWhFCMa4xl8ruL/fLlQx9A\nbUNMQ6kTX6IhxaH/dcp/OSiUOGFpYGXqgneNrGrvO87j4bAHtAmDEWLdCJLPAOWI\nMVmVXB2GIHIlBl5wAAiiMfhqULycSFaw5KzUlhU5wAtyB4uUSZh2GLjeIhcsYmdk\nmESfYdAHk90lOzjMBbxPR7V19D46wwadzQgS2XUxu6dWWoIZwqmNyCjh9IhGmrsg\ndj49eXKBCoo8D2kqcVVqPg==\n=OIhP\n-----END PGP SIGNATURE-----",
        "payload": "tree 8d7d4e3fbc104e2a689a592a4d42fbe41c9ae63a\nparent 67de1ee8bc18afff0f2f9f203803467a2274bfc1\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1584622622 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1584974184 +0200\n\nCheck for overflow when calculating sum of outputs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67de1ee8bc18afff0f2f9f203803467a2274bfc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67de1ee8bc18afff0f2f9f203803467a2274bfc1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67de1ee8bc18afff0f2f9f203803467a2274bfc1"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6e72c1f15c578f5ca526baf4a1e25b1e9c1a5c57",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=f65c9ad40f2f5cdc581bdaf72e7dc68e9d7f7a80",
        "patch": "@@ -9,6 +9,8 @@\n #include <tinyformat.h>\n #include <util/strencodings.h>\n \n+#include <assert.h>\n+\n std::string COutPoint::ToString() const\n {\n     return strprintf(\"COutPoint(%s, %u)\", hash.ToString().substr(0,10), n);\n@@ -84,10 +86,11 @@ CAmount CTransaction::GetValueOut() const\n {\n     CAmount nValueOut = 0;\n     for (const auto& tx_out : vout) {\n-        nValueOut += tx_out.nValue;\n-        if (!MoneyRange(tx_out.nValue) || !MoneyRange(nValueOut))\n+        if (!MoneyRange(tx_out.nValue) || !MoneyRange(nValueOut + tx_out.nValue))\n             throw std::runtime_error(std::string(__func__) + \": value out of range\");\n+        nValueOut += tx_out.nValue;\n     }\n+    assert(MoneyRange(nValueOut));\n     return nValueOut;\n }\n "
      }
    ]
  }
]