[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111467877",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-111467877",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 111467877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ2Nzg3Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T11:55:53Z",
    "updated_at": "2015-06-12T11:55:53Z",
    "author_association": "MEMBER",
    "body": "utACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111467877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111603267",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-111603267",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 111603267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTYwMzI2Nw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T20:17:36Z",
    "updated_at": "2015-06-12T20:17:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested ACK.\nWould be cool if you could pull in this RPC test (two commits):\nhttps://github.com/jonasschnelli/bitcoin/commit/ef4647a8ae2973cd02662752add7e7ba2e926de2 and https://github.com/jonasschnelli/bitcoin/commit/d20a3896460370f0f2564cd4db8d2ee16834a836\nfrom https://github.com/jonasschnelli/bitcoin/tree/DisconnectNode\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111603267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111654960",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-111654960",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 111654960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY1NDk2MA==",
    "user": {
      "login": "Alex-van-der-Peet",
      "id": 2569494,
      "node_id": "MDQ6VXNlcjI1Njk0OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2569494?u=6e3b6e189b0f95cd0204c6a67964a21fb60fb224&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Alex-van-der-Peet",
      "html_url": "https://github.com/Alex-van-der-Peet",
      "followers_url": "https://api.github.com/users/Alex-van-der-Peet/followers",
      "following_url": "https://api.github.com/users/Alex-van-der-Peet/following{/other_user}",
      "gists_url": "https://api.github.com/users/Alex-van-der-Peet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Alex-van-der-Peet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Alex-van-der-Peet/subscriptions",
      "organizations_url": "https://api.github.com/users/Alex-van-der-Peet/orgs",
      "repos_url": "https://api.github.com/users/Alex-van-der-Peet/repos",
      "events_url": "https://api.github.com/users/Alex-van-der-Peet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Alex-van-der-Peet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T02:04:15Z",
    "updated_at": "2015-06-13T02:04:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschelli Just to avoid git confusion, you're asking me to add a source in git for your branch, merge the changes into mine and push it back? That's ok, I won't see my dev machine untli Monday though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111654960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111670305",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-111670305",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 111670305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY3MDMwNQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T05:01:02Z",
    "updated_at": "2015-06-13T05:01:02Z",
    "author_association": "MEMBER",
    "body": "@Alex-van-der-Peet yes, except you should use `git cherry-pick` instead of merging; git merges and github pulls interact very badly. If it's too much trouble we can add the tests in another pull.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111670305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111685320",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-111685320",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 111685320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY4NTMyMA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T07:47:38Z",
    "updated_at": "2015-06-13T07:47:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Alex-van-der-Peet: right. You need to add my remote `git remote add jonasschnelli https://github.com/jonasschnelli/bitcoin`, then you can fetch via `git fetch jonasschnelli`, then you can cherry pick the two commits: `git cherry-pick ef4647a8ae2973cd02662752add7e7ba2e926de2` and `git cherry-pick d20a3896460370f0f2564cd4db8d2ee16834a836`\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111685320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112404168",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-112404168",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 112404168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjQwNDE2OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-16T12:17:34Z",
    "updated_at": "2015-06-16T12:29:07Z",
    "author_association": "MEMBER",
    "body": "@jonasschnelli To make it easier for our new contributor I'm going to go ahead and merge this without the tests, we can add those in a separate pull (or as part of #6158, even better)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112404168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112407673",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-112407673",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 112407673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjQwNzY3Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-16T12:27:59Z",
    "updated_at": "2015-06-16T12:27:59Z",
    "author_association": "MEMBER",
    "body": "Merged via 754aae51488c810f3a3cf6651c88849a209ca545\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112407673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112461729",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#issuecomment-112461729",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6271",
    "id": 112461729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjQ2MTcyOQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-16T14:58:38Z",
    "updated_at": "2015-06-16T14:58:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj: Good idea. Will try to include the tests in #6158.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112461729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32295391",
    "pull_request_review_id": null,
    "id": 32295391,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjk1Mzkx",
    "diff_hunk": "@@ -214,6 +214,28 @@ UniValue addnode(const UniValue& params, bool fHelp)\n     return NullUniValue;\n }\n \n+UniValue disconnectnode(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"disconnectnode \\\"node\\\" \\n\"\n+            \"\\nImmediately disconnects from the specified node.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"node\\\"     (string, required) The node (see getpeerinfo for nodes)\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n+            + HelpExampleRpc(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n+        );\n+\n+    string strNode = params[0].get_str();\n+\n+    CNode* pNode = FindNode(strNode.c_str());\n+    if (pNode != NULL)",
    "path": "src/rpcnet.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "original_commit_id": "7fa826d4642bd1bcbaf10b92b62ec20e8726a829",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it should raise an error when the node is not found. e.g.\n\n``` c++\nif (pNode == NULL)\n    throw JSONRPCError(RPC_NOT_FOUND, \"Node not found in connected nodes\");\n```\n\nThis makes it possible to see if an operation actually happened.\n",
    "created_at": "2015-06-12T07:35:09Z",
    "updated_at": "2015-06-15T06:10:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32295391",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32295391"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32295391"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32295391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32295915",
    "pull_request_review_id": null,
    "id": 32295915,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjk1OTE1",
    "diff_hunk": "@@ -214,6 +214,28 @@ UniValue addnode(const UniValue& params, bool fHelp)\n     return NullUniValue;\n }\n \n+UniValue disconnectnode(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"disconnectnode \\\"node\\\" \\n\"\n+            \"\\nImmediately disconnects from the specified node.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"node\\\"     (string, required) The node (see getpeerinfo for nodes)\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n+            + HelpExampleRpc(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n+        );\n+\n+    string strNode = params[0].get_str();\n+\n+    CNode* pNode = FindNode(strNode.c_str());\n+    if (pNode != NULL)",
    "path": "src/rpcnet.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "original_commit_id": "7fa826d4642bd1bcbaf10b92b62ec20e8726a829",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "+1 @laanwj \nI would also remove the 'strNode' round trip and directly add params[0].get_str() within FindNode()\n",
    "created_at": "2015-06-12T07:45:17Z",
    "updated_at": "2015-06-15T06:10:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32295915",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32295915"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32295915"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32295915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32396969",
    "pull_request_review_id": null,
    "id": 32396969,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzk2OTY5",
    "diff_hunk": "@@ -20,83 +20,99 @@\n except ImportError:\n     import urlparse\n \n-class HTTPBasicsTest (BitcoinTestFramework):        \n+class HTTPBasicsTest (BitcoinTestFramework):\n     def setup_nodes(self):\n         return start_nodes(4, self.options.tmpdir, extra_args=[['-rpckeepalive=1'], ['-rpckeepalive=0'], [], []])\n \n-    def run_test(self):        \n-        \n+    def run_test(self):\n+\n         #################################################\n         # lowlevel check for http persistent connection #\n         #################################################\n         url = urlparse.urlparse(self.nodes[0].url)\n         authpair = url.username + ':' + url.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n-        \n+\n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n-        \n+\n         #same should be if we add keep-alive because this should be the std. behaviour\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\": \"keep-alive\"}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n-        \n+\n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n-        \n+\n         #now do the same with \"Connection: close\"\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\":\"close\"}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n-        assert_equal(conn.sock!=None, False) #now the connection must be closed after the response        \n-        \n+        assert_equal(conn.sock!=None, False) #now the connection must be closed after the response\n+\n         #node1 (2nd node) is running with disabled keep-alive option\n         urlNode1 = urlparse.urlparse(self.nodes[1].url)\n         authpair = urlNode1.username + ':' + urlNode1.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-                \n+\n         conn = httplib.HTTPConnection(urlNode1.hostname, urlNode1.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, False) #connection must be closed because keep-alive was set to false\n-        \n+\n         #node2 (third node) is running with standard keep-alive parameters which means keep-alive is off\n         urlNode2 = urlparse.urlparse(self.nodes[2].url)\n         authpair = urlNode2.username + ':' + urlNode2.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-                \n+\n         conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n-        \n+\n+        ###########################",
    "path": "qa/rpc-tests/netbasics.py",
    "position": 98,
    "original_position": 98,
    "commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "original_commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jonasschnelli\nI don't see the connection to add these tests in `httpbasics.py` (even renaming it). Let's add a seperate test script for (upcoming) RPC node disconnect/ban/etc handling?\n",
    "created_at": "2015-06-15T07:37:04Z",
    "updated_at": "2015-06-15T07:37:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32396969",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32396969"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32396969"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32396969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 101,
    "original_line": 101,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32397769",
    "pull_request_review_id": null,
    "id": 32397769,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzk3NzY5",
    "diff_hunk": "@@ -20,83 +20,99 @@\n except ImportError:\n     import urlparse\n \n-class HTTPBasicsTest (BitcoinTestFramework):        \n+class HTTPBasicsTest (BitcoinTestFramework):\n     def setup_nodes(self):\n         return start_nodes(4, self.options.tmpdir, extra_args=[['-rpckeepalive=1'], ['-rpckeepalive=0'], [], []])\n \n-    def run_test(self):        \n-        \n+    def run_test(self):\n+\n         #################################################\n         # lowlevel check for http persistent connection #\n         #################################################\n         url = urlparse.urlparse(self.nodes[0].url)\n         authpair = url.username + ':' + url.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n-        \n+\n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n-        \n+\n         #same should be if we add keep-alive because this should be the std. behaviour\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\": \"keep-alive\"}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n-        \n+\n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n-        \n+\n         #now do the same with \"Connection: close\"\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\":\"close\"}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n-        assert_equal(conn.sock!=None, False) #now the connection must be closed after the response        \n-        \n+        assert_equal(conn.sock!=None, False) #now the connection must be closed after the response\n+\n         #node1 (2nd node) is running with disabled keep-alive option\n         urlNode1 = urlparse.urlparse(self.nodes[1].url)\n         authpair = urlNode1.username + ':' + urlNode1.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-                \n+\n         conn = httplib.HTTPConnection(urlNode1.hostname, urlNode1.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, False) #connection must be closed because keep-alive was set to false\n-        \n+\n         #node2 (third node) is running with standard keep-alive parameters which means keep-alive is off\n         urlNode2 = urlparse.urlparse(self.nodes[2].url)\n         authpair = urlNode2.username + ':' + urlNode2.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-                \n+\n         conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n-        \n+\n+        ###########################",
    "path": "qa/rpc-tests/netbasics.py",
    "position": 98,
    "original_position": 98,
    "commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "original_commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was trying to save some precious test time because another test will at least add another chain init and maybe mining of 100blocks on the top.\nBut right. A separate test could make sense if we look what else could get in there. Will do so.\n",
    "created_at": "2015-06-15T07:53:31Z",
    "updated_at": "2015-06-15T07:53:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32397769",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32397769"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32397769"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32397769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 101,
    "original_line": 101,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32399551",
    "pull_request_review_id": null,
    "id": 32399551,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzk5NTUx",
    "diff_hunk": "@@ -20,83 +20,99 @@\n except ImportError:\n     import urlparse\n \n-class HTTPBasicsTest (BitcoinTestFramework):        \n+class HTTPBasicsTest (BitcoinTestFramework):\n     def setup_nodes(self):\n         return start_nodes(4, self.options.tmpdir, extra_args=[['-rpckeepalive=1'], ['-rpckeepalive=0'], [], []])\n \n-    def run_test(self):        \n-        \n+    def run_test(self):\n+\n         #################################################\n         # lowlevel check for http persistent connection #\n         #################################################\n         url = urlparse.urlparse(self.nodes[0].url)\n         authpair = url.username + ':' + url.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n-        \n+\n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n-        \n+\n         #same should be if we add keep-alive because this should be the std. behaviour\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\": \"keep-alive\"}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n-        \n+\n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n-        \n+\n         #now do the same with \"Connection: close\"\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\":\"close\"}\n-        \n+\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n-        assert_equal(conn.sock!=None, False) #now the connection must be closed after the response        \n-        \n+        assert_equal(conn.sock!=None, False) #now the connection must be closed after the response\n+\n         #node1 (2nd node) is running with disabled keep-alive option\n         urlNode1 = urlparse.urlparse(self.nodes[1].url)\n         authpair = urlNode1.username + ':' + urlNode1.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-                \n+\n         conn = httplib.HTTPConnection(urlNode1.hostname, urlNode1.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, False) #connection must be closed because keep-alive was set to false\n-        \n+\n         #node2 (third node) is running with standard keep-alive parameters which means keep-alive is off\n         urlNode2 = urlparse.urlparse(self.nodes[2].url)\n         authpair = urlNode2.username + ':' + urlNode2.password\n         headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n-                \n+\n         conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n-        \n+\n+        ###########################",
    "path": "qa/rpc-tests/netbasics.py",
    "position": 98,
    "original_position": 98,
    "commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "original_commit_id": "b2127d6de3d515a271df9fda03f5ac5628ffd5bf",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Saving time is not worth it at the expense of sanity :)\nMaybe the chain init can be avoided for tests like this that don't need a chain?\n\nIn any case - httpbasics will become more extensive when we switch HTTP servers, so keeping the just-HTTP tests in a script of their own makes sense.\n",
    "created_at": "2015-06-15T08:25:49Z",
    "updated_at": "2015-06-15T08:50:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32399551",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32399551"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6271#discussion_r32399551"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6271"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32399551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 101,
    "original_line": 101,
    "side": "RIGHT"
  }
]