[
  {
    "sha": "24f3936337de3afb4fa56efc83009e2527d22df0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGYzOTM2MzM3ZGUzYWZiNGZhNTZlZmM4MzAwOWUyNTI3ZDIyZGYw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-01-02T01:46:00Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-08-31T03:49:55Z"
      },
      "message": "During IBD, prune as much as possible until we get close to where we will eventually keep blocks",
      "tree": {
        "sha": "e8e35744554ab95ae2efbe835489caf64bf8268f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8e35744554ab95ae2efbe835489caf64bf8268f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24f3936337de3afb4fa56efc83009e2527d22df0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24f3936337de3afb4fa56efc83009e2527d22df0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24f3936337de3afb4fa56efc83009e2527d22df0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24f3936337de3afb4fa56efc83009e2527d22df0/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42af9596ce85a541988abee54eed8a9b271a46a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42af9596ce85a541988abee54eed8a9b271a46a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42af9596ce85a541988abee54eed8a9b271a46a1"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 9,
      "deletions": 7
    },
    "files": [
      {
        "sha": "92287de66241c0016ff6a589dca121eeb6ef9c7b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24f3936337de3afb4fa56efc83009e2527d22df0/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24f3936337de3afb4fa56efc83009e2527d22df0/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=24f3936337de3afb4fa56efc83009e2527d22df0",
        "patch": "@@ -2069,7 +2069,7 @@ bool CChainState::FlushStateToDisk(\n             } else {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune\", BCLog::BENCH);\n \n-                m_blockman.FindFilesToPrune(setFilesToPrune, m_params.PruneAfterHeight(), m_chain.Height(), last_prune, IsInitialBlockDownload());\n+                m_blockman.FindFilesToPrune(setFilesToPrune, m_params.PruneAfterHeight(), m_chain.Height(), last_prune, IsInitialBlockDownload(), pindexBestHeader->nHeight);\n                 fCheckForPruning = false;\n             }\n             if (!setFilesToPrune.empty()) {\n@@ -3619,7 +3619,7 @@ void PruneBlockFilesManual(CChainState& active_chainstate, int nManualPruneHeigh\n     }\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd, uint64_t target_sync_height)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n     if (chain_tip_height < 0 || nPruneTarget == 0) {\n@@ -3642,10 +3642,12 @@ void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPr\n         // On a prune event, the chainstate DB is flushed.\n         // To avoid excessive prune events negating the benefit of high dbcache\n         // values, we should not prune too rapidly.\n-        // So when pruning in IBD, increase the buffer a bit to avoid a re-prune too soon.\n-        if (is_ibd) {\n-            // Since this is only relevant during IBD, we use a fixed 10%\n-            nBuffer += nPruneTarget / 10;\n+        // So when pruning in IBD, increase the buffer to avoid a re-prune too soon.\n+        if (is_ibd && target_sync_height > (uint64_t)chain_tip_height) {\n+            // Since this is only relevant during IBD, we assume blocks are at least 1 MB on average\n+            static constexpr uint64_t average_block_size = 1000000;  /* 1 MB */\n+            const uint64_t remaining_blocks = target_sync_height - chain_tip_height;\n+            nBuffer += average_block_size * remaining_blocks;\n         }\n \n         for (int fileNumber = 0; fileNumber < nLastBlockFile; fileNumber++) {"
      },
      {
        "sha": "58fcef79746a60140e33fe55a31d5bf9ee90440b",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24f3936337de3afb4fa56efc83009e2527d22df0/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24f3936337de3afb4fa56efc83009e2527d22df0/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=24f3936337de3afb4fa56efc83009e2527d22df0",
        "patch": "@@ -415,7 +415,7 @@ class BlockManager\n      *\n      * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n      */\n-    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd);\n+    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd, uint64_t target_sync_height);\n \n public:\n     BlockMap m_block_index GUARDED_BY(cs_main);"
      }
    ]
  }
]