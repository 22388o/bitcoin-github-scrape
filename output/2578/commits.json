[
  {
    "sha": "56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmZjMmRjMjIxNDJhYTVhZDUwNzM5Y2EwZWUxMzk0YWEwMmFhOGY3",
    "commit": {
      "author": {
        "name": "Thomas Shufps",
        "email": "shufps80@gmail.com",
        "date": "2013-04-26T14:20:44Z"
      },
      "committer": {
        "name": "Thomas Shufps",
        "email": "shufps80@gmail.com",
        "date": "2013-04-26T14:20:44Z"
      },
      "message": "listtransactionsofblock added",
      "tree": {
        "sha": "f8e6cbadef6c486ebe4e444af4c0d1648660391a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8e6cbadef6c486ebe4e444af4c0d1648660391a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/comments",
    "author": {
      "login": "shufps",
      "id": 3079832,
      "node_id": "MDQ6VXNlcjMwNzk4MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3079832?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shufps",
      "html_url": "https://github.com/shufps",
      "followers_url": "https://api.github.com/users/shufps/followers",
      "following_url": "https://api.github.com/users/shufps/following{/other_user}",
      "gists_url": "https://api.github.com/users/shufps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shufps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shufps/subscriptions",
      "organizations_url": "https://api.github.com/users/shufps/orgs",
      "repos_url": "https://api.github.com/users/shufps/repos",
      "events_url": "https://api.github.com/users/shufps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shufps/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shufps",
      "id": 3079832,
      "node_id": "MDQ6VXNlcjMwNzk4MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3079832?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shufps",
      "html_url": "https://github.com/shufps",
      "followers_url": "https://api.github.com/users/shufps/followers",
      "following_url": "https://api.github.com/users/shufps/following{/other_user}",
      "gists_url": "https://api.github.com/users/shufps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shufps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shufps/subscriptions",
      "organizations_url": "https://api.github.com/users/shufps/orgs",
      "repos_url": "https://api.github.com/users/shufps/repos",
      "events_url": "https://api.github.com/users/shufps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shufps/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "840e89e3a1fa26d5730a91a1cc3ea3dda98e1e3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/840e89e3a1fa26d5730a91a1cc3ea3dda98e1e3f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/840e89e3a1fa26d5730a91a1cc3ea3dda98e1e3f"
      }
    ],
    "stats": {
      "total": 123,
      "additions": 80,
      "deletions": 43
    },
    "files": [
      {
        "sha": "96fac0b3ef0aa5cad0e083a56689a564b7cbd340",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 43,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
        "patch": "@@ -245,6 +245,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false },\n     { \"submitblock\",            &submitblock,            false,     false },\n     { \"listsinceblock\",         &listsinceblock,         false,     false },\n+    { \"listtransactionsofblock\",&listtransactionsofblock,false,     false },\n     { \"dumpprivkey\",            &dumpprivkey,            true,      false },\n     { \"importprivkey\",          &importprivkey,          false,     false },\n     { \"listunspent\",            &listunspent,            false,     false },\n@@ -1127,49 +1128,50 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     //\n     // Special case non-string parameter types\n     //\n-    if (strMethod == \"stop\"                   && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"getaddednodeinfo\"       && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n-    if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n-    if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getbalance\"             && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"getblockhash\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"move\"                   && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"move\"                   && n > 3) ConvertTo<boost::int64_t>(params[3]);\n-    if (strMethod == \"sendfrom\"               && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<boost::int64_t>(params[3]);\n-    if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<boost::int64_t>(params[2]);\n-    if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"getblocktemplate\"       && n > 0) ConvertTo<Object>(params[0]);\n-    if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<boost::int64_t>(params[2]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"createmultisig\"         && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"createmultisig\"         && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"listunspent\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 2) ConvertTo<Array>(params[2]);\n-    if (strMethod == \"getrawtransaction\"      && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"createrawtransaction\"   && n > 0) ConvertTo<Array>(params[0]);\n-    if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n-    if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n-    if (strMethod == \"gettxout\"               && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n+    if (strMethod == \"stop\"                    && n > 0) ConvertTo<bool>(params[0]);\n+    if (strMethod == \"getaddednodeinfo\"        && n > 0) ConvertTo<bool>(params[0]);\n+    if (strMethod == \"setgenerate\"             && n > 0) ConvertTo<bool>(params[0]);\n+    if (strMethod == \"setgenerate\"             && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"sendtoaddress\"           && n > 1) ConvertTo<double>(params[1]);\n+    if (strMethod == \"settxfee\"                && n > 0) ConvertTo<double>(params[0]);\n+    if (strMethod == \"getreceivedbyaddress\"    && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"getreceivedbyaccount\"    && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"listreceivedbyaddress\"   && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"listreceivedbyaddress\"   && n > 1) ConvertTo<bool>(params[1]);\n+    if (strMethod == \"listreceivedbyaccount\"   && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"listreceivedbyaccount\"   && n > 1) ConvertTo<bool>(params[1]);\n+    if (strMethod == \"getbalance\"              && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"getblockhash\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"move\"                    && n > 2) ConvertTo<double>(params[2]);\n+    if (strMethod == \"move\"                    && n > 3) ConvertTo<boost::int64_t>(params[3]);\n+    if (strMethod == \"sendfrom\"                && n > 2) ConvertTo<double>(params[2]);\n+    if (strMethod == \"sendfrom\"                && n > 3) ConvertTo<boost::int64_t>(params[3]);\n+    if (strMethod == \"listtransactions\"        && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"listtransactions\"        && n > 2) ConvertTo<boost::int64_t>(params[2]);\n+    if (strMethod == \"listaccounts\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"walletpassphrase\"        && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"getblocktemplate\"        && n > 0) ConvertTo<Object>(params[0]);\n+    if (strMethod == \"listtransactionsofblock\" && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"listsinceblock\"          && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"sendmany\"                && n > 1) ConvertTo<Object>(params[1]);\n+    if (strMethod == \"sendmany\"                && n > 2) ConvertTo<boost::int64_t>(params[2]);\n+    if (strMethod == \"addmultisigaddress\"      && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"addmultisigaddress\"      && n > 1) ConvertTo<Array>(params[1]);\n+    if (strMethod == \"createmultisig\"          && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"createmultisig\"          && n > 1) ConvertTo<Array>(params[1]);\n+    if (strMethod == \"listunspent\"             && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"listunspent\"             && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"listunspent\"             && n > 2) ConvertTo<Array>(params[2]);\n+    if (strMethod == \"getrawtransaction\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"createrawtransaction\"    && n > 0) ConvertTo<Array>(params[0]);\n+    if (strMethod == \"createrawtransaction\"    && n > 1) ConvertTo<Object>(params[1]);\n+    if (strMethod == \"signrawtransaction\"      && n > 1) ConvertTo<Array>(params[1], true);\n+    if (strMethod == \"signrawtransaction\"      && n > 2) ConvertTo<Array>(params[2], true);\n+    if (strMethod == \"gettxout\"                && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"gettxout\"                && n > 2) ConvertTo<bool>(params[2]);\n+    if (strMethod == \"lockunspent\"             && n > 0) ConvertTo<bool>(params[0]);\n+    if (strMethod == \"lockunspent\"             && n > 1) ConvertTo<Array>(params[1]);\n+    if (strMethod == \"importprivkey\"           && n > 2) ConvertTo<bool>(params[2]);\n \n     return params;\n }"
      },
      {
        "sha": "1660595e106f74a82e767304b07b7d7d891ebb27",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
        "patch": "@@ -168,6 +168,7 @@ extern json_spirit::Value listtransactions(const json_spirit::Array& params, boo\n extern json_spirit::Value listaddressgroupings(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value listaccounts(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value listsinceblock(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value listtransactionsofblock(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value gettransaction(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value backupwallet(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value keypoolrefill(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "f7cab0f9336b59bacbbaf7c7246b97d1d8006783",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
        "patch": "@@ -22,6 +22,10 @@ TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)\n \n LMODE = dynamic\n LMODE2 = dynamic\n+\n+#STATIC=all\n+STATIC=1\n+\n ifdef STATIC\n \tLMODE = static\n \tifeq (${STATIC}, all)"
      },
      {
        "sha": "34371e139289a06bfbc74c6b0ea1d31cbdc307cf",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=56fc2dc22142aa5ad50739ca0ee1394aa02aa8f7",
        "patch": "@@ -1191,6 +1191,36 @@ Value listsinceblock(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value listtransactionsofblock(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"listtransactionsofblock [blockhash]\\n\"\n+            \"Get all transactions in block with bockhash [blockhash]\");\n+\n+    CBlockIndex *pindex = NULL;\n+\n+    uint256 hash;\n+    hash.SetHex(params[0].get_str());\n+\n+    int depth = pindex ? (1 + nBestHeight - pindex->nHeight) : -1;\n+\n+    Array transactions;\n+\n+    for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n+    {\n+        CWalletTx tx = (*it).second;\n+\n+        if (tx.hashBlock == hash)\n+            ListTransactions(tx, \"*\", 0, true, transactions);\n+    }\n+\n+    Object ret;\n+    ret.push_back(Pair(\"transactions\", transactions));\n+\n+    return ret;\n+}\n+\n Value gettransaction(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)"
      }
    ]
  }
]