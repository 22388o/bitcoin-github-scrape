qubicorn,2019-08-26 03:00:07,"`feature_fee_estimation.py` passes locally, and doesn't seem related.",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-524697669,524697669,
laanwj,2019-08-26 10:04:47,"Concept ACK\n\n> CWallet::ImportPrivKeys() in previous code block already imports the\nwpkh script\n\nDo you know where this happens? That function doesn't seem to do it directly, at least.",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-524802368,524802368,
qubicorn,2019-08-26 20:37:01,"It's done by `FillableSigningProvider::ImplicitlyLearnRelatedKeyScripts()`:\nhttps://github.com/bitcoin/bitcoin/blob/adff8fe32101b2c007a85415c3ec565a7f137252/src/script/signingprovider.cpp#L87-L92\n\nHere's a stack trace showing how it's called by `CWallet::ImportPrivKeys()`:\n```\n(gdb) bt\n#0  FillableSigningProvider::ImplicitlyLearnRelatedKeyScripts (this=0x555556634590, pubkey=...) at sc",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-525022017,525022017,
laanwj,2019-08-29 17:35:08,"Thanks! That's pretty sneaky, I was indeed searching for `AddCScript` or something similar, not something that bypasses everything and adds directly to the map.\n\nLooks good to me then. Code review ACK b6e7aa8c4c0162a3515a4efa93c2898a2c4d24b4",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-526286583,526286583,
qubicorn,2019-08-29 18:18:12,It _is_ sneaky. The author of these lines obviously didn't see it either. Thanks for the review!,https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-526302760,526302760,
meshcollider,2019-08-30 01:46:00,"Concept ACK, the fix makes sense, haven't checked that the behaviour of ImplicitlyLearnRelatedKeyScripts behaves in the same way as ImportScripts though (with respect to writing to the wallet).\n\nI think this is fine?",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-526422797,526422797,
achow101,2019-08-30 01:56:11,"This will prevent the segwit output script from being written to the wallet file. While `ImplicitlyLoadRelatedScripts` allowed for those same scripts to be loaded, if the wallet were to be loaded into an older version of Bitcoin Core (without segwit I think, don't remember when this was added, but probably with segwit), outputs involving such scripts will not be recognized as they won't be loaded ",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-526424873,526424873,
qubicorn,2019-08-30 20:29:26,"@achow101 That's a good point, I think you're right.\n\nHere's another idea. The original code, for reference:\nhttps://github.com/bitcoin/bitcoin/blob/f5db3f2128f0b293432a5a36cb0314b501019a06/src/wallet/rpcdump.cpp#L188-L196\n\nIf we switch the order of these two blocks, like so:\n```\n// Add the wpkh script for this key if possible \nif (pubkey.IsCompressed()) { \n    pwallet->ImportScr",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-526739091,526739091,
qubicorn,2019-08-31 05:21:12,"Actually, the above would work, but this highlights a bigger problem. `ImportScripts()` relies on `FillableSigningProvider::HaveKey()` to determine whether to write the script to the wallet or not. However, as @achow101 just noted, a script appearing in the map doesn't mean it's written to the wallet. Thus, `ImplicitlyLoadRelatedScripts` can prevent scripts from being written.\n\nhttps://github.",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-526801033,526801033,
fanquake,2019-09-10 00:45:31,@achow101 @meshcollider did you want to follow up with approach thoughts here?,https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-529720603,529720603,
meshcollider,2019-09-10 01:20:33,"IMO places where the map is edited directly without writing (other than the initial read of the wallet) are going to be dangerous, that behavior should be changed instead of adding more checks that the script is in the wallet. I think we should make it not possible to add to the map without adding to the wallet file.\n\nEDIT: Thinking about this more, I think it is okay to just make ImportScript",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-529727686,529727686,
instagibbs,2019-09-10 13:08:19,Are there any legit reasons to not even try to write to DB?,https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-529926135,529926135,
qubicorn,2019-09-12 23:23:59,"I'm now leaning towards a write to the wallet after `ImplicitlyLoadRelatedScripts()`. It's not safe to have addresses in the map that are never written to the wallet. Changing `HaveKeys()` to check from the wallet directly instead of the map defeats the purpose of the map _and_ `ImplicitlyLoadRelatedScripts`. After all, what's the point of implicitly loading anything if it's going to be ignored?\",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-531043272,531043272,
qubicorn,2019-09-12 23:33:21,"To reiterate, there is a more significant bug here than the superfluous warning this was initially submitted for:\n\n`ImplicitlyLoadRelatedScripts()` is adding scripts to the map but not the wallet. `HaveKeys()` (which works by checking only the map) is used to determine whether a key should be added to the wallet. So scripts that have been implicitly loaded can never be written to the wallet, e",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-531045104,531045104,
achow101,2019-09-12 23:58:11,"> I think it is okay to just make ImportScripts check the database rather than just the map.\n\nI'm not really a fan of that. It's going to be a ton of disk reads and slow down large imports even further (we recently improved it with batched writes).\n\n***\n\n> To reiterate, there is a more significant bug here than the superfluous warning this was initially submitted for:\n> \n> `Implici",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-531049987,531049987,
qubicorn,2019-09-13 00:18:56,">Those scripts are later written to the wallet to allow for downgrading to non-segwit versions without losing the ability to spend used coins.\n\nScripts in the map are written to the wallet somewhere?\n\n>If the intention of writing the scripts to the wallet was just to allow downgrading, we can actually just check the wallet version number to decide whether to write or not as recent wallet v",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-531053970,531053970,
achow101,2019-09-13 00:21:47,"> Scripts in the map are written to the wallet somewhere?\n\nKeys in the keypool don't have their scripts written to the wallet. Instead those scripts are loaded into memory via `ImplicitlyLearnRelatedScripts`. However once a key leaves the keypool, it's scripts are written to the wallet.",https://github.com/bitcoin/bitcoin/pull/16724#issuecomment-531054534,531054534,
