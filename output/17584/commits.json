[
  {
    "sha": "1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTNhMjU2ZDVlMDQ0M2QxOTc1N2MxZjFmY2ViOWM5ZWRlMTc3NThh",
    "commit": {
      "author": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2019-11-24T21:53:42Z"
      },
      "committer": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2019-11-24T21:53:42Z"
      },
      "message": "wallet: replace raw pointer with const reference in AddrToPubKey",
      "tree": {
        "sha": "963a9b2827f64f1854a36253f2f1b57e3b23cb13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/963a9b2827f64f1854a36253f2f1b57e3b23cb13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEED2bWxOeRx//n2QOeJiaFvHjtEfsFAl3a++YACgkQJiaFvHjt\nEftLpwf/ST76m8Hbx3LMigJV5ckvZT1DeH8ObQQCwXtqK6zcS+WFNCdPvnVWs5yG\nB29QtPkrVBGlYdOYGCmgTOzR/fTG+PtcwY1SvGtX4gSC1f4UYqMjPH9sr34uQYY/\nelvdybUQHehiozOZLcxTxCVAywfsKDbVab7LZICQ4Nz3GJguBmpZnhxsxa4lGB54\nAoR22jiInhPU8crjJboj4DevXpZATxuEq9JyZ4b/dc5EbqRs78cl2BhHFnCzJEn9\nXtywKTxMPwbdeCP6R9pp4pnlWEB+he4DCFAwQNjxLHHZfZMGrApXSuseNBcY4QlF\nSDN5yZ27eBcFRQSekAkhBrcZBaDMBg==\n=G/mC\n-----END PGP SIGNATURE-----",
        "payload": "tree 963a9b2827f64f1854a36253f2f1b57e3b23cb13\nparent 239d199667888e5d60309f15a38eed4d3afe56c4\nauthor Harris <brakmic@gmail.com> 1574632422 +0100\ncommitter Harris <brakmic@gmail.com> 1574632422 +0100\n\nwallet: replace raw pointer with const reference in AddrToPubKey\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/comments",
    "author": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "239d199667888e5d60309f15a38eed4d3afe56c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/239d199667888e5d60309f15a38eed4d3afe56c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/239d199667888e5d60309f15a38eed4d3afe56c4"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "0791a365fe44da785d5d8dc9135488e4a302fa52",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "patch": "@@ -131,18 +131,18 @@ CPubKey HexToPubKey(const std::string& hex_in)\n }\n \n // Retrieves a public key for an address from the given FillableSigningProvider\n-CPubKey AddrToPubKey(FillableSigningProvider* const keystore, const std::string& addr_in)\n+CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in)\n {\n     CTxDestination dest = DecodeDestination(addr_in);\n     if (!IsValidDestination(dest)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address: \" + addr_in);\n     }\n-    CKeyID key = GetKeyForDestination(*keystore, dest);\n+    CKeyID key = GetKeyForDestination(keystore, dest);\n     if (key.IsNull()) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"%s does not refer to a key\", addr_in));\n     }\n     CPubKey vchPubKey;\n-    if (!keystore->GetPubKey(key, vchPubKey)) {\n+    if (!keystore.GetPubKey(key, vchPubKey)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"no full public key for address %s\", addr_in));\n     }\n     if (!vchPubKey.IsFullyValid()) {"
      },
      {
        "sha": "9304e1fefbff9e05e87e4f39afcdd26f4680409d",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "patch": "@@ -69,7 +69,7 @@ extern std::string HelpExampleCli(const std::string& methodname, const std::stri\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n \n CPubKey HexToPubKey(const std::string& hex_in);\n-CPubKey AddrToPubKey(FillableSigningProvider* const keystore, const std::string& addr_in);\n+CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in);\n CTxDestination AddAndGetMultisigDestination(const int required, const std::vector<CPubKey>& pubkeys, OutputType type, FillableSigningProvider& keystore, CScript& script_out);\n \n UniValue DescribeAddress(const CTxDestination& dest);"
      },
      {
        "sha": "f48e1e90fd458a7ba54869e7c6a5d87a33c60334",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "patch": "@@ -998,7 +998,7 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n         if (IsHex(keys_or_addrs[i].get_str()) && (keys_or_addrs[i].get_str().length() == 66 || keys_or_addrs[i].get_str().length() == 130)) {\n             pubkeys.push_back(HexToPubKey(keys_or_addrs[i].get_str()));\n         } else {\n-            pubkeys.push_back(AddrToPubKey(&spk_man, keys_or_addrs[i].get_str()));\n+            pubkeys.push_back(AddrToPubKey(spk_man, keys_or_addrs[i].get_str()));\n         }\n     }\n "
      }
    ]
  }
]