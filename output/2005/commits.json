[
  {
    "sha": "13e5cce4c3df5c3d66bb37eb8e169fce02095840",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2U1Y2NlNGMzZGY1YzNkNjZiYjM3ZWI4ZTE2OWZjZTAyMDk1ODQw",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-11-11T12:11:42Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-11-11T12:16:42Z"
      },
      "message": "some small fixes for main.cpp/.h\n\n- remove an unwanted \";\" at the end of the ~CCoinsView() destructor\n- in FindBlockPos() and FindUndoPos() only call fclose(), is file is open\n- fix an error string in the CBlockUndo class",
      "tree": {
        "sha": "c6919a95ffd00ebccf1b0e88b492d60e11a53169",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6919a95ffd00ebccf1b0e88b492d60e11a53169"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13e5cce4c3df5c3d66bb37eb8e169fce02095840",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e5cce4c3df5c3d66bb37eb8e169fce02095840",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13e5cce4c3df5c3d66bb37eb8e169fce02095840",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e5cce4c3df5c3d66bb37eb8e169fce02095840/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e12efb9d33e0daa21a0cde6f26c4b6cc8f0ff48f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e12efb9d33e0daa21a0cde6f26c4b6cc8f0ff48f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e12efb9d33e0daa21a0cde6f26c4b6cc8f0ff48f"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 6,
      "deletions": 8
    },
    "files": [
      {
        "sha": "59fd1899aeeeb12d86451ba3f7e0f1c4b1a770cd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13e5cce4c3df5c3d66bb37eb8e169fce02095840/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13e5cce4c3df5c3d66bb37eb8e169fce02095840/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=13e5cce4c3df5c3d66bb37eb8e169fce02095840",
        "patch": "@@ -719,7 +719,7 @@ bool CTxMemPool::accept(CTransaction &tx, bool fCheckInputs,\n         // are the actual inputs available?\n         if (!tx.HaveInputs(view))\n             return error(\"CTxMemPool::accept() : inputs already spent\");\n- \n+\n         // Bring the best block into scope\n         view.GetBestBlock();\n \n@@ -1338,7 +1338,7 @@ bool CTransaction::CheckInputs(CCoinsViewCache &inputs, enum CheckSig_mode csmod\n \n         // While checking, GetBestBlock() refers to the parent block.\n         // This is also true for mempool checks.\n-        int nSpendHeight = inputs.GetBestBlock()->nHeight + 1; \n+        int nSpendHeight = inputs.GetBestBlock()->nHeight + 1;\n         int64 nValueIn = 0;\n         int64 nFees = 0;\n         for (unsigned int i = 0; i < vin.size(); i++)\n@@ -1899,8 +1899,8 @@ bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int nHeigh\n             if (file) {\n                 printf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n                 AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n+                fclose(file);\n             }\n-            fclose(file);\n         }\n     }\n \n@@ -1941,8 +1941,8 @@ bool FindUndoPos(int nFile, CDiskBlockPos &pos, unsigned int nAddSize)\n         if (file) {\n             printf(\"Pre-allocating up to position 0x%x in rev%05u.dat\\n\", nNewChunks * UNDOFILE_CHUNK_SIZE, pos.nFile);\n             AllocateFileRange(file, pos.nPos, nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos);\n+            fclose(file);\n         }\n-        fclose(file);\n     }\n \n     return true;"
      },
      {
        "sha": "25a2a285db9342ff3f11c7c32c8b4e34f156b92f",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13e5cce4c3df5c3d66bb37eb8e169fce02095840/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13e5cce4c3df5c3d66bb37eb8e169fce02095840/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=13e5cce4c3df5c3d66bb37eb8e169fce02095840",
        "patch": "@@ -733,7 +733,6 @@ class CBlockUndo\n \n     bool WriteToDisk(CDiskBlockPos &pos)\n     {\n-\n         // Open history file to append\n         CAutoFile fileout = CAutoFile(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n         if (!fileout)\n@@ -746,7 +745,7 @@ class CBlockUndo\n         // Write undo data\n         long fileOutPos = ftell(fileout);\n         if (fileOutPos < 0)\n-            return error(\"CBlock::WriteToDisk() : ftell failed\");\n+            return error(\"CBlockUndo::WriteToDisk() : ftell failed\");\n         pos.nPos = (unsigned int)fileOutPos;\n         fileout << *this;\n \n@@ -757,7 +756,6 @@ class CBlockUndo\n \n         return true;\n     }\n-\n };\n \n /** pruned version of CTransaction: only retains metadata and unspent transaction outputs\n@@ -1872,7 +1870,7 @@ class CCoinsView\n     virtual bool GetStats(CCoinsStats &stats);\n \n     // As we use CCoinsViews polymorphically, have a virtual destructor\n-    virtual ~CCoinsView() {};\n+    virtual ~CCoinsView() {}\n };\n \n /** CCoinsView backed by another CCoinsView */"
      }
    ]
  }
]