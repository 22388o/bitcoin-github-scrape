[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550016801",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550016801",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550016801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAxNjgwMQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T20:58:07Z",
    "updated_at": "2019-11-05T20:58:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow! That was quick! :)\r\n\r\nStrong Concept ACK\r\n\r\nThanks for taking the time to get rid of those once and for all :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550016801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550033222",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550033222",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550033222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAzMzIyMg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T21:39:37Z",
    "updated_at": "2019-11-05T21:46:52Z",
    "author_association": "MEMBER",
    "body": "Test failure in `util_tests/util_ChainMerge` explained:\r\n- This test passes `-notestnet=1` and `-noregtest=1` to the argument parser.\r\n- Somehow, this ends up as `InterpretBool(\"1testnet=1\")`\r\n- `atoi` returns `1` in this case (evaluating to `true`) because it stops parsing at the first non-digit, our `ParseInt64` fails however and returns `false`.\r\nThis causes the test to exit with a different hash.\r\n\r\n**Do we really support `-notestnet=1` and `-noregtest=1`?** I've never seen this syntax.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550033222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550037985",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550037985",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550037985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAzNzk4NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T21:51:02Z",
    "updated_at": "2019-11-05T21:51:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> **Do we really support `-notestnet=1` and `-noregtest=1`?** I've never seen this syntax.\r\n\r\nI'll take a look at this. We could make `-notestnet` and `testnet=0` style options into errors, though this PR is probably not the best place to do it, and maybe there is some use case if you have a configuration file that normally sets testnet, but you want to override it on the command line and use the settings on regtest instead or something.\r\n\r\nAny case, will first debug and see what causes reported `1testnet=1`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550037985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550039255",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550039255",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550039255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAzOTI1NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T21:54:10Z",
    "updated_at": "2019-11-05T21:57:13Z",
    "author_association": "MEMBER",
    "body": "We ideally need a way to signal parse errors from `GetArg` functions, there's a similar situation in `ArgsManager::GetArg(int64)`. Maybe they could return Optional. Out of scope for this PR anyhow, it only needs to do the sane thing here.\r\n\r\n> some use case if you have a configuration file that normally sets testnet, but you want to override it on the command line and use the settings on regtest instead or something.\r\n\r\nIn that case couldn't you simply do `-testnet=0` or `-regtest=0`? I don't see the point of `-noX` with a value.\r\n\r\n> though this PR is probably not the best place to do it\r\n\r\nI agree, I'm tempted to just drop that commit, though it means `atoi(string)` sticks around.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550039255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550054169",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550054169",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550054169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA1NDE2OQ==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T22:35:09Z",
    "updated_at": "2019-11-06T01:26:59Z",
    "author_association": "MEMBER",
    "body": "Concept ACK https://github.com/bitcoin/bitcoin/pull/17385/commits/88e83075406493304c3e33c9c1b6a451322ce634",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550054169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550057323",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550057323",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550057323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA1NzMyMw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T22:44:57Z",
    "updated_at": "2019-11-05T22:44:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Discussion seems somewhat offtopic here, maybe discuss argument parsing behavior more in #16545.\r\n\r\n> We ideally need a way to signal parse errors from `GetArg` functions, there's a similar situation in `ArgsManager::GetArg(int64)`. Maybe they could return Optional. Out of scope for this PR anyhow, it only needs to do the sane thing here.\r\n\r\nI could be wrong but I think it would actually be less work, and friendlier to both users and developers to validate settings on initialization rather than use. #16545 is intended to move in this direction.\r\n\r\n> > some use case if you have a configuration file that normally sets testnet, but you want to override it on the command line and use the settings on regtest instead or something.\r\n> \r\n> In that case couldn't you simply do `-testnet=0` or `-regtest=0`? I don't see the point of `-noX` with a value.\r\n\r\nFor int and bool arguments, I think it's generally reasonable to treat `-noarg` and `-noarg=1` the same as `-arg=0`.\r\n\r\n> I agree, I'm tempted to just drop that commit, though it means `atoi(string)` sticks around.\r\n\r\nI think it would be best to save both d78e7be42300c4a313ad94aae998b04c25881cba and afb58090ba4f834aa40730512f2485c09f33f32e for another PR and not include them here. These are user facing changes which could use release notes and better test coverage.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550057323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550060888",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550060888",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550060888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA2MDg4OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T22:56:13Z",
    "updated_at": "2019-11-05T23:05:33Z",
    "author_association": "MEMBER",
    "body": "> I think it would be best to save both d78e7be and afb5809 for another PR and not include them here. \r\n\r\nI'm fine with adding a release not if you think this is a significant user-facing change, and add a test for these two little functions, but I'd really prefer not to keep either the current behavior or code.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550060888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550067918",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550067918",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550067918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA2NzkxOA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-05T23:19:36Z",
    "updated_at": "2019-11-05T23:19:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17050](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17050.html) (tests: Add fuzzing harnesses for functions parsing scripts, numbers, JSON and HD keypaths (bip32) by practicalswift)\n* [#15934](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15934.html) (Merge settings one place instead of five places by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550067918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550084451",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550084451",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550084451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA4NDQ1MQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T00:22:32Z",
    "updated_at": "2019-11-06T00:22:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm fine with adding a release not if you think this is a significant user-facing change, but I'd really prefer not to keep either the current behavior or code.\r\n\r\nMy thinking is that there probably shouldn't be user-facing changes in a PR that's supposed to be a refactor, and that this PR is substantial enough with 17 commits, that pulling out 2 of them to a dedicated PR wouldn't make it worse off.\r\n\r\nBut the user-facing changes are maybe more minor than I would have thought. With your two commits arguments such as `\"5 \"` or `\" 5\"` or `\"5.\"` which are currently parsed as `5`/`true` will now be parsed as `0`/`false`. This applies to numeric arguments with leading whitespace or trailing characters.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550084451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550087031",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550087031",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550087031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA4NzAzMQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T00:33:47Z",
    "updated_at": "2019-11-06T00:33:47Z",
    "author_association": "MEMBER",
    "body": "> My thinking is that there probably shouldn't be user-facing changes in a PR that's supposed to be a refactor, and that this PR is substantial enough with 17 commits, that pulling out 2 of them to a dedicated PR wouldn't make it worse off.\r\n\r\nMany of the changes in this PR make a subtle difference in the case of invalid input, due to adding strict parse error checking (I mention this in the OP). Maybe I shouldn't call it a refactor. But it's not really a bugfix or feature either.\r\n\r\n> and that this PR is substantial enough with 17 commits, that pulling out 2 of them to a dedicated PR wouldn't make it worse off.\r\n\r\nSure. But remove any and the cleanup in `util.cpp`/`util.h` isn't possible. Which was one of my motivations to do this in the first place.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550087031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550140652",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550140652",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550140652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDE0MDY1Mg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T04:41:26Z",
    "updated_at": "2019-11-06T04:41:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll review this tomorrow. I think all the commits here that remove uses of C functions to parse strings which are supposed to have a rigid format (numbers in filenames, test strings, descriptors, database properties) are great, and it's great to clean up this code and avoid misusing these C functions.\r\n\r\nBut while I'll need to review the PR more carefully to be sure, I think the few changes here that can actually affect users should probably be done more carefully. For example, instead of taking a strangely formatted boolean value that was previously interpreted as `true` and now silently interpreting it as `false`, actually add proper error handling and make it an error to specify a badly formatted value. Or if this is too much work, at least log a warning about badly formatted values. And if there has to be a visible change in behavior, document what the change is in release notes. And if the change is too niche to document in release notes, at least say what the change of behavior is in the commit message.\r\n\r\nAlternately, it it's possible to drop a few commits in this PR to make it a boring plain refactoring, that would be great, because we'd still be eliminating the majority of misused C function calls, and just adding one or two items to your \"known violations\" list that could be addressed in followups.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550140652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550215193",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550215193",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550215193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDIxNTE5Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T09:06:55Z",
    "updated_at": "2019-11-06T09:12:35Z",
    "author_association": "MEMBER",
    "body": "Closing this until the arguments manager has a way to report errors to the user. I agree that needs to be done. It'd be fairly easy to add error return value to the ArgParse functions for bool and int, however there are so many call sites\u2026 and they all assume fast and loose error handling (ie none).\r\n\r\n> I could be wrong but I think it would actually be less work, and friendlier to both users and developers to validate settings on initialization rather than use. #16545 is intended to move in this direction.\r\n\r\nThis would definitely be better. If you do this, please change the parsing function as well.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550215193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550450877",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550450877",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 550450877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ1MDg3Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-06T18:55:35Z",
    "updated_at": "2019-11-06T18:55:35Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review, have reopened and will address your comments.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550450877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551020697",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-551020697",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 551020697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTAyMDY5Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T10:32:22Z",
    "updated_at": "2019-11-07T10:32:22Z",
    "author_association": "MEMBER",
    "body": "Sorry for messing around with this again, but I realized something. Before doing this it is important to have our own, controlled, implementation of `Parse[U]Int(32|64)` that does not call out to libc's locale-dependent functions `strtol`/`strtoll` (these might still accept other kinds of numbers according to locale, for example). Starting here is like building a house on a foundation of jelly.\r\n\r\nAdding WIP tag (it's not possible to change a PR to draft, unfortunately).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551020697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551151064",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-551151064",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 551151064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTE1MTA2NA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T16:18:25Z",
    "updated_at": "2019-11-07T16:22:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Before doing this it is important to have our own, controlled, implementation of `Parse[U]Int(32|64)` that does not call out to libc's locale-dependent functions `strtol`/`strtoll` (these might still accept other kinds of numbers according to locale, for example).\r\n\r\nAgree this would make the change safer and easier to reason about. I don't think strictly speaking most of the commits actually need this to be correct, either because looser parsings won't cause harm or because current code is already using the locale anyway. But if we can remove locale from these places, it would be a good thing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551151064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552030672",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-552030672",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
    "id": 552030672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjAzMDY3Mg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-08T23:28:34Z",
    "updated_at": "2019-11-08T23:28:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552030672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343229928",
    "pull_request_review_id": 312615067,
    "id": 343229928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzIyOTkyOA==",
    "diff_hunk": "@@ -203,7 +203,12 @@ size_t CDBWrapper::DynamicMemoryUsage() const {\n         LogPrint(BCLog::LEVELDB, \"Failed to get approximate-memory-usage property\\n\");\n         return 0;\n     }\n-    return stoul(memory);\n+    uint64_t ret;\n+    if (ParseUInt64(memory, &ret)) {\n+        return ret;\n+    } else {\n+        return 0;",
    "path": "src/dbwrapper.cpp",
    "position": 9,
    "original_position": 9,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "df211cb3f02e1eb05eb6289af1688afd96660ca7",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of stoul in dbwrapper.cpp\" (df211cb3f02e1eb05eb6289af1688afd96660ca7)\r\n\r\nShould probably add log print here similar to above:\r\n\r\n```c++\r\nLogPrint(BCLog::LEVELDB, \"Failed to parse approximate-memory-usage property\\n\");\r\n```\r\n\r\nThere is also some risk here that this change could make `DynamicMemoryUsage` now return 0 in cases where it returned nonzero before (if property string has leading or trailing whitespace or other trailing characters), but logging should make it obvious if this is ever the case.",
    "created_at": "2019-11-06T17:32:04Z",
    "updated_at": "2019-11-06T18:35:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343229928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343229928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343229928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343229928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 210,
    "original_line": 210,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343234969",
    "pull_request_review_id": 312615067,
    "id": 343234969,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzIzNDk2OQ==",
    "diff_hunk": "@@ -644,9 +644,10 @@ static void CleanupBlockRevFiles()\n     // zero by walking the ordered map (keys are block file indices) by\n     // keeping a separate counter.  Once we hit a gap (or if 0 doesn't exist)\n     // start removing block files.\n-    int nContigCounter = 0;\n+    uint32_t nContigCounter = 0;\n     for (const std::pair<const std::string, fs::path>& item : mapBlockFiles) {\n-        if (atoi(item.first) == nContigCounter) {\n+        uint32_t value;\n+        if (ParseUInt32(item.first, &value) && value == nContigCounter) {",
    "path": "src/init.cpp",
    "position": 9,
    "original_position": 9,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "f47450e1dcbd4e88efd8e69924da9d20930b399c",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of atoi in CleanupBlockRevFiles\" (f47450e1dcbd4e88efd8e69924da9d20930b399c)\r\n\r\nNote: The behavior change here makes this code slightly more robust than before. Now if there are extra files like `blkABC` they will just be deleted and not throw off the count of expected block files that are supposed to be kept. Throwing off the count would cause files we actually want to keep to be deleted.",
    "created_at": "2019-11-06T17:42:55Z",
    "updated_at": "2019-11-06T18:35:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343234969",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343234969"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343234969"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343234969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 650,
    "original_line": 650,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343237060",
    "pull_request_review_id": 312615067,
    "id": 343237060,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzIzNzA2MA==",
    "diff_hunk": "@@ -222,10 +222,12 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n                                 UniValue subelement;\n                                 if (lastResult.isArray())\n                                 {\n-                                    for(char argch: curarg)\n-                                        if (!IsDigit(argch))",
    "path": "src/qt/rpcconsole.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "5cdaf4ad65b578c86ee21f9b7a7a48473a2ca735",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace ad-hoc validity check and atoi in rpcconsole\" (5cdaf4ad65b578c86ee21f9b7a7a48473a2ca735)\r\n\r\nSlight change of behavior here with looser parsing since this now accepts `+` or `-` signed values. But this seems fine and doesn't need additional documentation (though it could be mentioned in the commit message) since there is immediate feedback in case of an error.",
    "created_at": "2019-11-06T17:47:13Z",
    "updated_at": "2019-11-06T18:35:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343237060",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343237060"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343237060"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343237060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 226,
    "original_line": 226,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343237708",
    "pull_request_review_id": 312615067,
    "id": 343237708,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzIzNzcwOA==",
    "diff_hunk": "@@ -255,8 +255,11 @@ static void MutateTxAddInput(CMutableTransaction& tx, const std::string& strInpu\n \n     // extract the optional sequence number\n     uint32_t nSequenceIn = CTxIn::SEQUENCE_FINAL;\n-    if (vStrInputParts.size() > 2)\n-        nSequenceIn = std::stoul(vStrInputParts[2]);\n+    if (vStrInputParts.size() > 2) {\n+        if (!ParseUInt32(vStrInputParts[2], &nSequenceIn)) {",
    "path": "src/bitcoin-tx.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "f7f2472d16be78bf9c2a7c85e5d40b3b78ef214a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"util: Add error handling to sequence id in bitcoin-tx\" (f7f2472d16be78bf9c2a7c85e5d40b3b78ef214a)\r\n\r\nSlight change of behavior here with stricter parsing. But this seems fine and doesn't need additional documentation (though it could be mentioned in the commit message) since there is immediate feedback in case of an error.",
    "created_at": "2019-11-06T17:48:34Z",
    "updated_at": "2019-11-06T18:35:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343237708",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343237708"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343237708"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343237708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343239688",
    "pull_request_review_id": 312615067,
    "id": 343239688,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzIzOTY4OA==",
    "diff_hunk": "@@ -127,8 +127,8 @@ static bool rest_headers(HTTPRequest* req,\n     if (path.size() != 2)\n         return RESTERR(req, HTTP_BAD_REQUEST, \"No header count specified. Use /rest/headers/<count>/<hash>.<ext>.\");\n \n-    long count = strtol(path[0].c_str(), nullptr, 10);\n-    if (count < 1 || count > 2000)\n+    uint32_t count;\n+    if (!ParseUInt32(path[0], &count) || count < 1 || count > 2000)",
    "path": "src/rest.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "a8f7502d21d8bbe0934c0c8674cb262d2e913c33",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of strtol in rest.cpp\" (a8f7502d21d8bbe0934c0c8674cb262d2e913c33)\r\n\r\nSlight change of behavior here with stricter parsing: trailing characters no longer allowed for example. But this seems fine and doesn't need additional documentation (though it could be mentioned in the commit message) since there is immediate feedback in case of an error.",
    "created_at": "2019-11-06T17:52:50Z",
    "updated_at": "2019-11-06T18:35:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343239688",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343239688"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343239688"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343239688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 131,
    "original_line": 131,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343242913",
    "pull_request_review_id": 312615067,
    "id": 343242913,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI0MjkxMw==",
    "diff_hunk": "@@ -146,7 +146,10 @@ void TorControlConnection::readcb(struct bufferevent *bev, void *ctx)\n         if (s.size() < 4) // Short line\n             continue;\n         // <status>(-|+| )<data><CRLF>\n-        self->message.code = atoi(s.substr(0,3));\n+        if (!ParseUInt32(s.substr(0,3), &self->message.code)) {",
    "path": "src/torcontrol.cpp",
    "position": 14,
    "original_position": 14,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "a8ded10262c16778aaa87db0d8ba407e55ea0100",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of atoi in torcontrol\" (a8ded10262c16778aaa87db0d8ba407e55ea0100)\r\n\r\nNote: this change looks like an improvement assuming 3 character torcontrol status code is not allowed to contain whitespace or non-digit characters, which seems reasonable but I haven't verified this. Error handling seems consistent with other handling done this function of just ignoring lines with unexpected formatting.",
    "created_at": "2019-11-06T17:59:26Z",
    "updated_at": "2019-11-06T18:35:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343242913",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343242913"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343242913"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343242913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 149,
    "original_line": 149,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343245427",
    "pull_request_review_id": 312615067,
    "id": 343245427,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI0NTQyNw==",
    "diff_hunk": "@@ -50,15 +50,14 @@ CScript ParseScript(const std::string& s)\n \n     for (std::vector<std::string>::const_iterator w = words.begin(); w != words.end(); ++w)\n     {\n+        int64_t n;\n         if (w->empty())\n         {\n             // Empty string, ignore. (boost::split given '' will return one word)\n         }\n-        else if (std::all_of(w->begin(), w->end(), ::IsDigit) ||\n-            (w->front() == '-' && w->size() > 1 && std::all_of(w->begin()+1, w->end(), ::IsDigit)))\n+        else if (ParseInt64(*w, &n))",
    "path": "src/core_read.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "e4aa1f77b16c248488cc88b661bed69168c0f9e5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of atoi64 in core_read\" (e4aa1f77b16c248488cc88b661bed69168c0f9e5)\r\n\r\nParsing here seems a little looser than before, because `ParseScript` will now accept signed numbers beginning with `+`, while it previously only accepted numbers beginning with `-`. I'm assuming this is reasonable behavior. `ParseScript` appears to only actually be called in tests and by `bitcoin-tx`.",
    "created_at": "2019-11-06T18:04:51Z",
    "updated_at": "2019-11-06T18:35:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343245427",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343245427"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343245427"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343245427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 58,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343246724",
    "pull_request_review_id": 312615067,
    "id": 343246724,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI0NjcyNA==",
    "diff_hunk": "@@ -492,7 +492,11 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             std::string lpstr = lpval.get_str();\n \n             hashWatchedChain = ParseHashV(lpstr.substr(0, 64), \"longpollid\");\n-            nTransactionsUpdatedLastLP = atoi64(lpstr.substr(64));\n+            uint32_t temp;\n+            if (!ParseUInt32(lpstr.substr(64), &temp)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"could not parse lpval\");",
    "path": "src/rpc/mining.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "b7315cb5114477ede6ebb4e4c2303537dcb647b4",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of atoi64 in rpc/mining.cpp\" (b7315cb5114477ede6ebb4e4c2303537dcb647b4)\r\n\r\nSlight change of behavior here with stricter parsing. For example no whitespace or trailing characters allowed anymore. But this seems fine and doesn't need additional documentation (though it could be mentioned in the commit message) since there is immediate feedback in case of an error.",
    "created_at": "2019-11-06T18:07:44Z",
    "updated_at": "2019-11-06T18:35:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343246724",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343246724"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343246724"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343246724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 497,
    "original_line": 497,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343248984",
    "pull_request_review_id": 312615067,
    "id": 343248984,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI0ODk4NA==",
    "diff_hunk": "@@ -68,7 +68,10 @@ bool ParseMoney(const char* pszIn, CAmount& nRet)\n         return false;\n     if (nUnits < 0 || nUnits > COIN)\n         return false;\n-    int64_t nWhole = atoi64(strWhole);\n+    int64_t nWhole;\n+    if (!ParseInt64(strWhole, &nWhole)) {",
    "path": "src/util/moneystr.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "2fcdd169cfcb1c0fcfb9d8a31fd9459d39a2dfa8",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of atoi64 in moneystr.cpp\" (2fcdd169cfcb1c0fcfb9d8a31fd9459d39a2dfa8)\r\n\r\nI might be missing something looking at this code, but it seems like a possible bug if empty string would have been parse successfully as `0` before but now it will fail to parse. Otherwise behavior seems unchanged since `strWhole` can only contain digit characters.",
    "created_at": "2019-11-06T18:12:48Z",
    "updated_at": "2019-11-06T18:35:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343248984",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343248984"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343248984"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343248984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343251172",
    "pull_request_review_id": 312615067,
    "id": 343251172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI1MTE3Mg==",
    "diff_hunk": "@@ -200,12 +200,10 @@ typedef std::map<std::string, std::string> mapValue_t;\n \n static inline void ReadOrderPos(int64_t& nOrderPos, mapValue_t& mapValue)\n {\n-    if (!mapValue.count(\"n\"))\n+    if (!mapValue.count(\"n\") || !ParseInt64(mapValue[\"n\"], &nOrderPos))",
    "path": "src/wallet/wallet.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "87a3f13dfeff735aadb1091183f5269c9ab1a118",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of atoi64 in wallet ReadOrderPos\" (87a3f13dfeff735aadb1091183f5269c9ab1a118)\r\n\r\nNote: Slightly stricter parsing is done here (no whitespace or trailing characters allowed) but this should be fine since string just comes from calling `i64tostr`. Could potentially log or return an error though if parsing fails, since it would be an indication of corruption.",
    "created_at": "2019-11-06T18:17:59Z",
    "updated_at": "2019-11-06T18:35:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343251172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343251172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343251172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343251172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 203,
    "original_line": 203,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343252598",
    "pull_request_review_id": 312615067,
    "id": 343252598,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI1MjU5OA==",
    "diff_hunk": "@@ -414,7 +414,12 @@ class CWalletTx\n         }\n \n         ReadOrderPos(nOrderPos, mapValue);\n-        nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(mapValue[\"timesmart\"]) : 0;\n+        uint64_t temp;\n+        if (mapValue.count(\"timesmart\") && ParseUInt64(mapValue[\"timesmart\"], &temp)) {",
    "path": "src/wallet/wallet.h",
    "position": 20,
    "original_position": 6,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "f4218c26bbbcfc74ae23db9f9a9294447a8e9a6a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"refactor: Replace use of atoi64 in timesmart unserialize\" (f4218c26bbbcfc74ae23db9f9a9294447a8e9a6a)\r\n\r\nNote: Slightly stricter parsing is done here (no whitespace or trailing characters allowed) but this should be fine since string just comes from calling `strprintf(\"%u\")`. Could potentially log or return an error though if parsing fails, since it would be an indication of corruption.",
    "created_at": "2019-11-06T18:20:48Z",
    "updated_at": "2019-11-06T18:35:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343252598",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343252598"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343252598"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343252598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 418,
    "original_line": 418,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343276495",
    "pull_request_review_id": 312676064,
    "id": 343276495,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI3NjQ5NQ==",
    "diff_hunk": "@@ -50,15 +50,14 @@ CScript ParseScript(const std::string& s)\n \n     for (std::vector<std::string>::const_iterator w = words.begin(); w != words.end(); ++w)\n     {\n+        int64_t n;\n         if (w->empty())\n         {\n             // Empty string, ignore. (boost::split given '' will return one word)\n         }\n-        else if (std::all_of(w->begin(), w->end(), ::IsDigit) ||\n-            (w->front() == '-' && w->size() > 1 && std::all_of(w->begin()+1, w->end(), ::IsDigit)))\n+        else if (ParseInt64(*w, &n))",
    "path": "src/core_read.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "e4aa1f77b16c248488cc88b661bed69168c0f9e5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`ParseIntXX` accepts signed numbers beginning with `+`? whoops, I don't think this was intentional. Thanks for catching this, I think that needs to be documented.\r\n\r\nAgree it's not really problematic in this specific case, but will re-add the \"starts with digit or -\" check just in case.",
    "created_at": "2019-11-06T19:12:17Z",
    "updated_at": "2019-11-06T19:19:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343276495",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343276495"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343276495"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343276495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 58,
    "original_line": 58,
    "side": "RIGHT",
    "in_reply_to_id": 343245427
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343277660",
    "pull_request_review_id": 312677585,
    "id": 343277660,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI3NzY2MA==",
    "diff_hunk": "@@ -68,7 +68,10 @@ bool ParseMoney(const char* pszIn, CAmount& nRet)\n         return false;\n     if (nUnits < 0 || nUnits > COIN)\n         return false;\n-    int64_t nWhole = atoi64(strWhole);\n+    int64_t nWhole;\n+    if (!ParseInt64(strWhole, &nWhole)) {",
    "path": "src/util/moneystr.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "2fcdd169cfcb1c0fcfb9d8a31fd9459d39a2dfa8",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Seems we need a test for ParseMoney that exercises that!",
    "created_at": "2019-11-06T19:14:46Z",
    "updated_at": "2019-11-06T19:14:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343277660",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343277660"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343277660"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343277660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT",
    "in_reply_to_id": 343248984
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343278522",
    "pull_request_review_id": 312678717,
    "id": 343278522,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI3ODUyMg==",
    "diff_hunk": "@@ -203,7 +203,12 @@ size_t CDBWrapper::DynamicMemoryUsage() const {\n         LogPrint(BCLog::LEVELDB, \"Failed to get approximate-memory-usage property\\n\");\n         return 0;\n     }\n-    return stoul(memory);\n+    uint64_t ret;\n+    if (ParseUInt64(memory, &ret)) {\n+        return ret;\n+    } else {\n+        return 0;",
    "path": "src/dbwrapper.cpp",
    "position": 9,
    "original_position": 9,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "df211cb3f02e1eb05eb6289af1688afd96660ca7",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I thought about `assert(0)` here, but then reconsidered, because it's not important enough to crash the program. Will add a one-time log message.",
    "created_at": "2019-11-06T19:16:33Z",
    "updated_at": "2019-11-06T19:16:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343278522",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343278522"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343278522"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343278522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 210,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 343229928
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343278864",
    "pull_request_review_id": 312679167,
    "id": 343278864,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzI3ODg2NA==",
    "diff_hunk": "@@ -146,7 +146,10 @@ void TorControlConnection::readcb(struct bufferevent *bev, void *ctx)\n         if (s.size() < 4) // Short line\n             continue;\n         // <status>(-|+| )<data><CRLF>\n-        self->message.code = atoi(s.substr(0,3));\n+        if (!ParseUInt32(s.substr(0,3), &self->message.code)) {",
    "path": "src/torcontrol.cpp",
    "position": 14,
    "original_position": 14,
    "commit_id": "55ba3887d00eec0eb27eee7e0499c6df9133d160",
    "original_commit_id": "a8ded10262c16778aaa87db0d8ba407e55ea0100",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Silently ignoring the issue isn't nice (it makes things hard to debug). I'll add a log message here.",
    "created_at": "2019-11-06T19:17:14Z",
    "updated_at": "2019-11-06T19:17:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343278864",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343278864"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17385#discussion_r343278864"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17385"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343278864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 149,
    "original_line": 149,
    "side": "RIGHT",
    "in_reply_to_id": 343242913
  }
]