[
  {
    "sha": "35d770e87e9e12bc36d1d8ebcd66d8d624616870",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWQ3NzBlODdlOWUxMmJjMzZkMWQ4ZWJjZDY2ZDhkNjI0NjE2ODcw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-06-12T19:17:02Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-06-12T19:50:49Z"
      },
      "message": "Revert \"wallet: Include actual backup filename in recovery warning message\"\nThis reverts commit b823a4c9f6836c802803dbd265cb7451fb93b8e7.",
      "tree": {
        "sha": "5191891c480e3f5661f9e77eb5080a26cbc15daf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5191891c480e3f5661f9e77eb5080a26cbc15daf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35d770e87e9e12bc36d1d8ebcd66d8d624616870",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlk+8JsACgkQHrd2uwPH\nki3+oQ/+Pb6dVqv2YFeA/s/fAuy2AgNOUYxhO1rEQus7rKFkg7QYN9BVI5kwsjZc\nJ8QgPC0hCFGzCbgB/KMEzU6pQAIvWt3tFnvlqMev7hfm81/DX6CqTazKzD7OFfc9\nu78LVMnOChhZTLQ6U3D3/Vbz6EMPGsjl/CjLOB78pv6Xgd3vGD54Fzq3fZ+ZkQ0W\nZxrRlhMvKKn85Yn7pHOmCJQgTiqZJYmE99c48MzMJS3rjHJY2Ss5ZjNIEtOU8Y5O\nEtCT+zCol3EnxRcy+NiMzKWdQ6b1wegAlxrXsJRsJ2ASoCQ2VlkPKSPiE12ld1AO\nbi17UmIns3Y9kOuHE8POF7RmWkwtaAs0EPribnioTPlEaZAeHzFgfF4pHs9FsKO+\nDSSARwGBoeprRcdpQdmW59Mx1mhaQ1PpBEsuvPdS4Ghi8UpW5TNXkTGrv0PKBiDr\nbY3a6p7Gu57uqmV1GBTr2pbfSATCfpoR9M1c9iyEwX4ZjaRvJDLGuavlww+f1A9O\nChIp4Z/o/i9noysog1Pv+uOQJ4AjOwwCdvdLNw45mYJorK4+IOXpT0VQOM+pfdCJ\nR4IQ5FHgXVjQ1LcUwcqh5z4CXG+nP1zPUFRrwCLgIeM5lh9C1WWdiHmEDTkU6CNd\nFXa9QUMi4/j4qRhKYgy8ONWLRZlzeE2Dy+Utd7Is1A1cbVms1EY=\n=Rdsd\n-----END PGP SIGNATURE-----",
        "payload": "tree 5191891c480e3f5661f9e77eb5080a26cbc15daf\nparent 177433ad22d6b386fec10a92a14cd8472ea02f41\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1497295022 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1497297049 +0200\n\nRevert \"wallet: Include actual backup filename in recovery warning message\"\nThis reverts commit b823a4c9f6836c802803dbd265cb7451fb93b8e7.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35d770e87e9e12bc36d1d8ebcd66d8d624616870",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35d770e87e9e12bc36d1d8ebcd66d8d624616870",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35d770e87e9e12bc36d1d8ebcd66d8d624616870/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "177433ad22d6b386fec10a92a14cd8472ea02f41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/177433ad22d6b386fec10a92a14cd8472ea02f41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/177433ad22d6b386fec10a92a14cd8472ea02f41"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 17,
      "deletions": 20
    },
    "files": [
      {
        "sha": "8d18c9f572a6da709e0da92cd33cc5c2ce8b7084",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=35d770e87e9e12bc36d1d8ebcd66d8d624616870",
        "patch": "@@ -142,7 +142,7 @@ void CDBEnv::MakeMock()\n     fMockDb = true;\n }\n \n-CDBEnv::VerifyResult CDBEnv::Verify(const std::string& strFile, recoverFunc_type recoverFunc, std::string& out_backup_filename)\n+CDBEnv::VerifyResult CDBEnv::Verify(const std::string& strFile, bool (*recoverFunc)(const std::string& strFile))\n {\n     LOCK(cs_db);\n     assert(mapFileUseCount.count(strFile) == 0);\n@@ -155,11 +155,11 @@ CDBEnv::VerifyResult CDBEnv::Verify(const std::string& strFile, recoverFunc_type\n         return RECOVER_FAIL;\n \n     // Try to recover:\n-    bool fRecovered = (*recoverFunc)(strFile, out_backup_filename);\n+    bool fRecovered = (*recoverFunc)(strFile);\n     return (fRecovered ? RECOVER_OK : RECOVER_FAIL);\n }\n \n-bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& newFilename)\n+bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue))\n {\n     // Recovery procedure:\n     // move wallet file to walletfilename.timestamp.bak\n@@ -169,7 +169,7 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Set -rescan so any missing transactions will be\n     // found.\n     int64_t now = GetTime();\n-    newFilename = strprintf(\"%s.%d.bak\", filename, now);\n+    std::string newFilename = strprintf(\"wallet.%d.bak\", now);\n \n     int result = bitdb.dbenv->dbrename(NULL, filename.c_str(), NULL,\n                                        newFilename.c_str(), DB_AUTO_COMMIT);\n@@ -259,19 +259,18 @@ bool CDB::VerifyEnvironment(const std::string& walletFile, const fs::path& dataD\n     return true;\n }\n \n-bool CDB::VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, CDBEnv::recoverFunc_type recoverFunc)\n+bool CDB::VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, bool (*recoverFunc)(const std::string& strFile))\n {\n     if (fs::exists(dataDir / walletFile))\n     {\n-        std::string backup_filename;\n-        CDBEnv::VerifyResult r = bitdb.Verify(walletFile, recoverFunc, backup_filename);\n+        CDBEnv::VerifyResult r = bitdb.Verify(walletFile, recoverFunc);\n         if (r == CDBEnv::RECOVER_OK)\n         {\n             warningStr = strprintf(_(\"Warning: Wallet file corrupt, data salvaged!\"\n                                      \" Original %s saved as %s in %s; if\"\n                                      \" your balance or transactions are incorrect you should\"\n                                      \" restore from a backup.\"),\n-                                   walletFile, backup_filename, dataDir);\n+                                   walletFile, \"wallet.{timestamp}.bak\", dataDir);\n         }\n         if (r == CDBEnv::RECOVER_FAIL)\n         {"
      },
      {
        "sha": "a2ede99d1ba2901beb28829a5ab805b38ca77b9a",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=35d770e87e9e12bc36d1d8ebcd66d8d624616870",
        "patch": "@@ -55,8 +55,7 @@ class CDBEnv\n     enum VerifyResult { VERIFY_OK,\n                         RECOVER_OK,\n                         RECOVER_FAIL };\n-    typedef bool (*recoverFunc_type)(const std::string& strFile, std::string& out_backup_filename);\n-    VerifyResult Verify(const std::string& strFile, recoverFunc_type recoverFunc, std::string& out_backup_filename);\n+    VerifyResult Verify(const std::string& strFile, bool (*recoverFunc)(const std::string& strFile));\n     /**\n      * Salvage data from a file that Verify says is bad.\n      * fAggressive sets the DB_AGGRESSIVE flag (see berkeley DB->verify() method documentation).\n@@ -157,15 +156,15 @@ class CDB\n \n     void Flush();\n     void Close();\n-    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& out_backup_filename);\n+    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue));\n \n     /* flush the wallet passively (TRY_LOCK)\n        ideal to be called periodically */\n     static bool PeriodicFlush(CWalletDBWrapper& dbw);\n     /* verifies the database environment */\n     static bool VerifyEnvironment(const std::string& walletFile, const fs::path& dataDir, std::string& errorStr);\n     /* verifies the database file */\n-    static bool VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, CDBEnv::recoverFunc_type recoverFunc);\n+    static bool VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, bool (*recoverFunc)(const std::string& strFile));\n \n private:\n     CDB(const CDB&);"
      },
      {
        "sha": "c6b881f30aa1b1a92ffaf7f4e28f60253f3d7d02",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=35d770e87e9e12bc36d1d8ebcd66d8d624616870",
        "patch": "@@ -457,8 +457,7 @@ bool CWallet::Verify()\n         if (GetBoolArg(\"-salvagewallet\", false)) {\n             // Recover readable keypairs:\n             CWallet dummyWallet;\n-            std::string backup_filename;\n-            if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter, backup_filename)) {\n+            if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter)) {\n                 return false;\n             }\n         }"
      },
      {
        "sha": "e54a017c1a0946d2d0ad26032de6780c2b1fa835",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=35d770e87e9e12bc36d1d8ebcd66d8d624616870",
        "patch": "@@ -785,16 +785,16 @@ void MaybeCompactWalletDB()\n //\n // Try to (very carefully!) recover wallet file if there is a problem.\n //\n-bool CWalletDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& out_backup_filename)\n+bool CWalletDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue))\n {\n-    return CDB::Recover(filename, callbackDataIn, recoverKVcallback, out_backup_filename);\n+    return CDB::Recover(filename, callbackDataIn, recoverKVcallback);\n }\n \n-bool CWalletDB::Recover(const std::string& filename, std::string& out_backup_filename)\n+bool CWalletDB::Recover(const std::string& filename)\n {\n     // recover without a key filter callback\n     // results in recovering all record types\n-    return CWalletDB::Recover(filename, NULL, NULL, out_backup_filename);\n+    return CWalletDB::Recover(filename, NULL, NULL);\n }\n \n bool CWalletDB::RecoverKeysOnlyFilter(void *callbackData, CDataStream ssKey, CDataStream ssValue)"
      },
      {
        "sha": "64cebd4330d341def98eceee4b5276e78cf00c12",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d770e87e9e12bc36d1d8ebcd66d8d624616870/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=35d770e87e9e12bc36d1d8ebcd66d8d624616870",
        "patch": "@@ -218,9 +218,9 @@ class CWalletDB\n     DBErrors ZapWalletTx(std::vector<CWalletTx>& vWtx);\n     DBErrors ZapSelectTx(std::vector<uint256>& vHashIn, std::vector<uint256>& vHashOut);\n     /* Try to (very carefully!) recover wallet database (with a possible key type filter) */\n-    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& out_backup_filename);\n+    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue));\n     /* Recover convenience-function to bypass the key filter callback, called when verify fails, recovers everything */\n-    static bool Recover(const std::string& filename, std::string& out_backup_filename);\n+    static bool Recover(const std::string& filename);\n     /* Recover filter (used as callback), will only let keys (cryptographical keys) as KV/key-type pass through */\n     static bool RecoverKeysOnlyFilter(void *callbackData, CDataStream ssKey, CDataStream ssValue);\n     /* Function to determine if a certain KV/key-type is a key (cryptographical key) type */"
      }
    ]
  },
  {
    "sha": "e9d09f23e3a097605730988f2dcb818a57dee745",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOWQwOWYyM2UzYTA5NzYwNTczMDk4OGYyZGNiODE4YTU3ZGVlNzQ1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-05-26T09:56:05Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-06-12T19:50:53Z"
      },
      "message": "Don't use fixed \"wallet.bak\"-filename during salvagewallet",
      "tree": {
        "sha": "0089465563869a3da97c1f4bafb8bc3562e4225a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0089465563869a3da97c1f4bafb8bc3562e4225a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9d09f23e3a097605730988f2dcb818a57dee745",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlk+8J0ACgkQHrd2uwPH\nki33pg/9H7Jg7tfRhdqokHbAmT8MeNmsCgSZUXr3qpsthVHxSKewk0Syx8XYYFpO\nX4NiE6D/G45lZnUD1NNvIt0KXeAa0u4QcPH2IoEWLeDlApUttSid/inrm2byz1Zq\nuvKpOZ4jSGvCPst7lSjdQMlCO/MWG54wbewCc7UemPUQT7b7XMCOCZOab259iVUd\nk5P1B2RAhlR2VDirJaOls2Um2TcvgpvzBooHBlHhMGwNDAoROh2fBbGTcTFIRDOR\nrRjblzkh2O4TDCFhNmMUPiP3berGWkuI4Ra9ZYLlhA2Sfn/bHaeGlnchhYygfJNr\nntorLUZUxWDD/HMqBCEDzv0096Ak6FS7f7RGp5dS2GdLfaHOPcjp2BN6r7/8wvoS\nqN6ID8BX45wmQKTxy9SEoqgAGQW2QrZDcUmBmAXnBGUz738GKvszQWLJ1+pOAmc4\nJ2IIzu7JXDlV83C2aTUqrCamwmYQeW9TgaybCkYvfWYESZBcL3Ei1njbXAsIJ6/e\n8icUZgjUAWRZQOOT6VmMNnTyBNje9Pz/ZJFy7D8mpgD65f1prDX5xw4ifhX8p0SB\npOOn/fYpWgbdmrUtYbdbfReb9YVP6GHC7MssOMgtrGDRYbJVn8q0ueRFKLwR9KrG\n1NCYoVaMfNVgdfqipRGdogpRgprRtKIMilq4XPb/CcxR1puChXA=\n=s+rg\n-----END PGP SIGNATURE-----",
        "payload": "tree 0089465563869a3da97c1f4bafb8bc3562e4225a\nparent 35d770e87e9e12bc36d1d8ebcd66d8d624616870\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1495792565 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1497297053 +0200\n\nDon't use fixed \"wallet.bak\"-filename during salvagewallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9d09f23e3a097605730988f2dcb818a57dee745",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9d09f23e3a097605730988f2dcb818a57dee745",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9d09f23e3a097605730988f2dcb818a57dee745/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35d770e87e9e12bc36d1d8ebcd66d8d624616870",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35d770e87e9e12bc36d1d8ebcd66d8d624616870",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35d770e87e9e12bc36d1d8ebcd66d8d624616870"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5b7de034bb488658652376df55af552015e7af81",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9d09f23e3a097605730988f2dcb818a57dee745/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9d09f23e3a097605730988f2dcb818a57dee745/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=e9d09f23e3a097605730988f2dcb818a57dee745",
        "patch": "@@ -169,7 +169,7 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Set -rescan so any missing transactions will be\n     // found.\n     int64_t now = GetTime();\n-    std::string newFilename = strprintf(\"wallet.%d.bak\", now);\n+    std::string newFilename = strprintf(\"%s.%d.bak\", filename, now);\n \n     int result = bitdb.dbenv->dbrename(NULL, filename.c_str(), NULL,\n                                        newFilename.c_str(), DB_AUTO_COMMIT);\n@@ -270,7 +270,7 @@ bool CDB::VerifyDatabaseFile(const std::string& walletFile, const fs::path& data\n                                      \" Original %s saved as %s in %s; if\"\n                                      \" your balance or transactions are incorrect you should\"\n                                      \" restore from a backup.\"),\n-                                   walletFile, \"wallet.{timestamp}.bak\", dataDir);\n+                                   walletFile, \"{walletfilename}.{timestamp}.bak\", dataDir);\n         }\n         if (r == CDBEnv::RECOVER_FAIL)\n         {"
      }
    ]
  }
]