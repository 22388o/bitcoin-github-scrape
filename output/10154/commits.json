[
  {
    "sha": "faafa801e885ec20c8e4307f1dc1617ee0c04998",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFmYTgwMWU4ODVlYzIwYzhlNDMwN2YxZGMxNjE3ZWUwYzA0OTk4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-04-04T23:18:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-04-04T23:03:26Z"
      },
      "message": "init: Remove redundant logging code",
      "tree": {
        "sha": "d417ec8d393eedaebbfe7c837b3748ec1e2cb412",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d417ec8d393eedaebbfe7c837b3748ec1e2cb412"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faafa801e885ec20c8e4307f1dc1617ee0c04998",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faafa801e885ec20c8e4307f1dc1617ee0c04998",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faafa801e885ec20c8e4307f1dc1617ee0c04998",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faafa801e885ec20c8e4307f1dc1617ee0c04998/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "080d7c700fc3291560d79fc590e05b8e2bad984f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/080d7c700fc3291560d79fc590e05b8e2bad984f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/080d7c700fc3291560d79fc590e05b8e2bad984f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f8f0edcbec66de8979329cd640d96c4b050c71b2",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faafa801e885ec20c8e4307f1dc1617ee0c04998/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faafa801e885ec20c8e4307f1dc1617ee0c04998/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=faafa801e885ec20c8e4307f1dc1617ee0c04998",
        "patch": "@@ -444,8 +444,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n         _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + \" \" + _(\"<category> can be:\") + \" \" + ListLogCategories() + \".\");\n     strUsage += HelpMessageOpt(\"-debugexclude=<category>\", strprintf(_(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\")));\n-    if (showDebug)\n-        strUsage += HelpMessageOpt(\"-nodebug\", \"Turn off debugging messages, same as -debug=0\");\n     strUsage += HelpMessageOpt(\"-help-debug\", _(\"Show all debugging options (usage: --help -help-debug)\"));\n     strUsage += HelpMessageOpt(\"-logips\", strprintf(_(\"Include IP addresses in debug output (default: %u)\"), DEFAULT_LOGIPS));\n     strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), DEFAULT_LOGTIMESTAMPS));\n@@ -906,12 +904,11 @@ bool AppInitParameterInteraction()\n         InitWarning(strprintf(_(\"Reducing -maxconnections from %d to %d, because of system limitations.\"), nUserMaxConnections, nMaxConnections));\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n-\n     if (mapMultiArgs.count(\"-debug\") > 0) {\n         // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n         const std::vector<std::string>& categories = mapMultiArgs.at(\"-debug\");\n \n-        if (!(GetBoolArg(\"-nodebug\", false) || find(categories.begin(), categories.end(), std::string(\"0\")) != categories.end())) {\n+        if (find(categories.begin(), categories.end(), std::string(\"0\")) == categories.end()) {\n             for (const auto& cat : categories) {\n                 uint32_t flag;\n                 if (!GetLogCategory(&flag, &cat)) {"
      }
    ]
  }
]