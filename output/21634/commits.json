[
  {
    "sha": "41f891da508114f1fd4df30b4068073ec30abc2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWY4OTFkYTUwODExNGYxZmQ0ZGYzMGI0MDY4MDczZWMzMGFiYzJh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-04-08T00:55:09Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-04-12T23:29:03Z"
      },
      "message": "tests: Skip SQLite fsyncs while testing\n\nSince we want tests to run quickly, and since tests do a lot more db\noperations than expected we expect to see in actual usage, we disable\nsqlite's syncing behavior to make db operations run much faster. This\nsyncing behavior is necessary for normal operation as it helps guarantee\nthat data won't become lost or corrupted, but in tests, we don't care\nabout that.",
      "tree": {
        "sha": "1b3e171dfbc7eadf4d503659e4c973dcc93c3d9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b3e171dfbc7eadf4d503659e4c973dcc93c3d9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41f891da508114f1fd4df30b4068073ec30abc2a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41f891da508114f1fd4df30b4068073ec30abc2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41f891da508114f1fd4df30b4068073ec30abc2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41f891da508114f1fd4df30b4068073ec30abc2a/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb79cabdd9d9a6d183cf09575dd46925f2c9cb3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb79cabdd9d9a6d183cf09575dd46925f2c9cb3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb79cabdd9d9a6d183cf09575dd46925f2c9cb3b"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 20,
      "deletions": 0
    },
    "files": [
      {
        "sha": "95886d31385dea876628c2b4a3ffeec88973f36a",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41f891da508114f1fd4df30b4068073ec30abc2a/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41f891da508114f1fd4df30b4068073ec30abc2a/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=41f891da508114f1fd4df30b4068073ec30abc2a",
        "patch": "@@ -50,6 +50,7 @@ void DummyWalletInit::AddWalletOptions(ArgsManager& argsman) const\n         \"-flushwallet\",\n         \"-privdb\",\n         \"-walletrejectlongchains\",\n+        \"-unsafesqlitesync\",\n     });\n }\n "
      },
      {
        "sha": "0dc220b6fd795cd9ea4bbe71317208e7bb90bf92",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41f891da508114f1fd4df30b4068073ec30abc2a/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41f891da508114f1fd4df30b4068073ec30abc2a/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=41f891da508114f1fd4df30b4068073ec30abc2a",
        "patch": "@@ -82,6 +82,12 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n     argsman.AddHiddenArgs({\"-dblogsize\", \"-flushwallet\", \"-privdb\"});\n #endif\n \n+#ifdef USE_SQLITE\n+    argsman.AddArg(\"-unsafesqlitesync\", \"Set SQLite synchronous=OFF to disable waiting for the database to sync to disk. This is unsafe and can cause data loss and corruption. This option is only used by tests to improve their performance (default: false)\", ArgsManager::ALLOW_BOOL | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n+#else\n+    argsman.AddHiddenArgs({\"-unsafesqlitesync\"});\n+#endif\n+\n     argsman.AddArg(\"-walletrejectlongchains\", strprintf(\"Wallet will not create transactions that violate mempool chain limits (default: %u)\", DEFAULT_WALLET_REJECT_LONG_CHAINS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::WALLET_DEBUG_TEST);\n \n     argsman.AddHiddenArgs({\"-zapwallettxes\"});"
      },
      {
        "sha": "e245a277e44f33ee7cd03a226bacb246d05a9140",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41f891da508114f1fd4df30b4068073ec30abc2a/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41f891da508114f1fd4df30b4068073ec30abc2a/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=41f891da508114f1fd4df30b4068073ec30abc2a",
        "patch": "@@ -233,6 +233,15 @@ void SQLiteDatabase::Open()\n         throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to enable fullfsync: %s\\n\", sqlite3_errstr(ret)));\n     }\n \n+    if (gArgs.GetBoolArg(\"-unsafesqlitesync\", false)) {\n+        // Use normal synchronous mode for the journal\n+        LogPrintf(\"WARNING SQLite is configured to not wait for data to be flushed to disk. Data loss and corruption may occur.\\n\");\n+        ret = sqlite3_exec(m_db, \"PRAGMA synchronous = OFF\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set synchronous mode to OFF: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+    }\n+\n     // Make the table for our key-value pairs\n     // First check that the main table exists\n     sqlite3_stmt* check_main_stmt{nullptr};"
      },
      {
        "sha": "c6bce2039415be80a2371b5afa148bec4a82fe07",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41f891da508114f1fd4df30b4068073ec30abc2a/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41f891da508114f1fd4df30b4068073ec30abc2a/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=41f891da508114f1fd4df30b4068073ec30abc2a",
        "patch": "@@ -695,6 +695,7 @@ BOOST_FIXTURE_TEST_CASE(wallet_descriptor_test, BasicTestingSetup)\n //! rescanning where new transactions in new blocks could be lost.\n BOOST_FIXTURE_TEST_CASE(CreateWallet, TestChain100Setup)\n {\n+    gArgs.ForceSetArg(\"-unsafesqlitesync\", \"1\");\n     // Create new wallet with known key and unload it.\n     auto wallet = TestLoadWallet(*m_node.chain);\n     CKey key;\n@@ -790,6 +791,7 @@ BOOST_FIXTURE_TEST_CASE(CreateWallet, TestChain100Setup)\n \n BOOST_FIXTURE_TEST_CASE(ZapSelectTx, TestChain100Setup)\n {\n+    gArgs.ForceSetArg(\"-unsafesqlitesync\", \"1\");\n     auto wallet = TestLoadWallet(*m_node.chain);\n     CKey key;\n     key.MakeNewKey(true);"
      },
      {
        "sha": "55166ba0adca7e03c611e101765081a32b805b3e",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41f891da508114f1fd4df30b4068073ec30abc2a/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41f891da508114f1fd4df30b4068073ec30abc2a/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=41f891da508114f1fd4df30b4068073ec30abc2a",
        "patch": "@@ -374,6 +374,8 @@ def write_config(config_path, *, n, chain, extra_config=\"\"):\n         f.write(\"upnp=0\\n\")\n         f.write(\"natpmp=0\\n\")\n         f.write(\"shrinkdebugfile=0\\n\")\n+        # To improve SQLite wallet performance so that the tests don't timeout, use -unsafesqlitesync\n+        f.write(\"unsafesqlitesync=1\\n\")\n         f.write(extra_config)\n \n "
      }
    ]
  }
]