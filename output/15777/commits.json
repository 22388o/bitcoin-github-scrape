[
  {
    "sha": "ef2d515af3c74f61acca5c0c8936a30e7befc507",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjJkNTE1YWYzYzc0ZjYxYWNjYTVjMGM4OTM2YTMwZTdiZWZjNTA3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-04-09T17:13:03Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-04-14T13:32:40Z"
      },
      "message": "[wallet] move-only: move CReserveKey to be next to CKeyPool\n\nreviewer tip: use git diff --color-moved=dimmed-zebra",
      "tree": {
        "sha": "7f0587179554e1005147f2ebcfe9f7806b6ee485",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f0587179554e1005147f2ebcfe9f7806b6ee485"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef2d515af3c74f61acca5c0c8936a30e7befc507",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2d515af3c74f61acca5c0c8936a30e7befc507",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef2d515af3c74f61acca5c0c8936a30e7befc507",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2d515af3c74f61acca5c0c8936a30e7befc507/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "adc55dbac5b521d6c9df58d1d69075e6abf0116f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adc55dbac5b521d6c9df58d1d69075e6abf0116f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/adc55dbac5b521d6c9df58d1d69075e6abf0116f"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 28,
      "deletions": 28
    },
    "files": [
      {
        "sha": "370085d0bb0540b99b6dff882d335b4ebbdc9d66",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef2d515af3c74f61acca5c0c8936a30e7befc507/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef2d515af3c74f61acca5c0c8936a30e7befc507/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ef2d515af3c74f61acca5c0c8936a30e7befc507",
        "patch": "@@ -181,6 +181,34 @@ class CKeyPool\n     }\n };\n \n+/** A key allocated from the key pool. */\n+class CReserveKey\n+{\n+protected:\n+    CWallet* pwallet;\n+    int64_t nIndex{-1};\n+    CPubKey vchPubKey;\n+    bool fInternal{false};\n+\n+public:\n+    explicit CReserveKey(CWallet* pwalletIn)\n+    {\n+        pwallet = pwalletIn;\n+    }\n+\n+    CReserveKey(const CReserveKey&) = delete;\n+    CReserveKey& operator=(const CReserveKey&) = delete;\n+\n+    ~CReserveKey()\n+    {\n+        ReturnKey();\n+    }\n+\n+    void ReturnKey();\n+    bool GetReservedKey(CPubKey &pubkey, bool internal = false);\n+    void KeepKey();\n+};\n+\n /** Address book data */\n class CAddressBookData\n {\n@@ -1218,34 +1246,6 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n  */\n void MaybeResendWalletTxs();\n \n-/** A key allocated from the key pool. */\n-class CReserveKey\n-{\n-protected:\n-    CWallet* pwallet;\n-    int64_t nIndex{-1};\n-    CPubKey vchPubKey;\n-    bool fInternal{false};\n-\n-public:\n-    explicit CReserveKey(CWallet* pwalletIn)\n-    {\n-        pwallet = pwalletIn;\n-    }\n-\n-    CReserveKey(const CReserveKey&) = delete;\n-    CReserveKey& operator=(const CReserveKey&) = delete;\n-\n-    ~CReserveKey()\n-    {\n-        ReturnKey();\n-    }\n-\n-    void ReturnKey();\n-    bool GetReservedKey(CPubKey &pubkey, bool internal = false);\n-    void KeepKey();\n-};\n-\n /** RAII object to check and reserve a wallet rescan */\n class WalletRescanReserver\n {"
      }
    ]
  },
  {
    "sha": "37796b2dd49772b17ff39a1a71b73f6d2248ac6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzc5NmIyZGQ0OTc3MmIxN2ZmMzlhMWE3MWI3M2Y2ZDIyNDhhYzZk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-04-09T18:27:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-05-01T18:53:32Z"
      },
      "message": "[docs] Add doxygen comment for CKeyPool",
      "tree": {
        "sha": "a27bc1dcae50fd7273451f0128cc802ea8c722cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a27bc1dcae50fd7273451f0128cc802ea8c722cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37796b2dd49772b17ff39a1a71b73f6d2248ac6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37796b2dd49772b17ff39a1a71b73f6d2248ac6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37796b2dd49772b17ff39a1a71b73f6d2248ac6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37796b2dd49772b17ff39a1a71b73f6d2248ac6d/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef2d515af3c74f61acca5c0c8936a30e7befc507",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2d515af3c74f61acca5c0c8936a30e7befc507",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef2d515af3c74f61acca5c0c8936a30e7befc507"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 50,
      "deletions": 3
    },
    "files": [
      {
        "sha": "435f2b2a2ce9119b7fae7a6792a4c98af35d15fa",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 50,
        "deletions": 3,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37796b2dd49772b17ff39a1a71b73f6d2248ac6d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37796b2dd49772b17ff39a1a71b73f6d2248ac6d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=37796b2dd49772b17ff39a1a71b73f6d2248ac6d",
        "patch": "@@ -135,14 +135,61 @@ enum WalletFlags : uint64_t {\n \n static constexpr uint64_t g_known_wallet_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_KEY_ORIGIN_METADATA;\n \n-/** A key pool entry */\n+/** A key from a CWallet's keypool\n+ *\n+ * The wallet holds one (for pre HD-split wallets) or several keypools. These\n+ * are sets of keys that have not yet been used to provide addresses or receive\n+ * change.\n+ *\n+ * The Bitcoin Core wallet was originally a collection of unrelated private\n+ * keys with their associated addresses. If a non-HD wallet generated a\n+ * key/address, gave that address out and then restored a backup from before\n+ * that key's generation, then any funds sent to that address would be\n+ * lost definitively.\n+ *\n+ * The keypool was implemented to avoid this scenario (commit: 10384941). The\n+ * wallet would generate a set of keys (100 by default). When a new public key\n+ * was required, either to give out as an address or to use in a change output,\n+ * it would be drawn from the keypool. The keypool would then be topped up to\n+ * maintain 100 keys. This ensured that as long as the wallet hadn't used more\n+ * than 100 keys since the previous backup, all funds would be safe, since a\n+ * restored wallet would be able to scan for all owned addresses.\n+ *\n+ * A keypool also allowed encrypted wallets to give out addresses without\n+ * having to be decrypted to generate a new private key.\n+ *\n+ * With the introduction of HD wallets (commit: f1902510), the keypool\n+ * essentially became an address look-ahead pool. Restoring old backups can no\n+ * longer definitively lose funds as long as the addresses used were from the\n+ * wallet's HD seed (since all private keys can be rederived from the seed).\n+ * However, if many addresses were used since the backup, then the wallet may\n+ * not know how far ahead in the HD chain to look for its addresses. The\n+ * keypool is used to implement a 'gap limit'. The keypool maintains a set of\n+ * keys (by default 1000) ahead of the last used key and scans for the\n+ * addresses of those keys.  This avoids the risk of not seeing transactions\n+ * involving the wallet's addresses, or of re-using the same address.\n+ *\n+ * The HD-split wallet feature added a second keypool (commit: 02592f4c). There\n+ * is an external keypool (for addresses to hand out) and an internal keypool\n+ * (for change addresses).\n+ *\n+ * Keypool keys are stored in the wallet/keystore's keymap. The keypool data is\n+ * stored as sets of indexes in the wallet (setInternalKeyPool,\n+ * setExternalKeyPool and set_pre_split_keypool), and a map from the key to the\n+ * index (m_pool_key_to_index). The CKeyPool object is used to\n+ * serialize/deserialize the pool data to/from the database.\n+ */\n class CKeyPool\n {\n public:\n+    //! The time at which the key was generated. Set in AddKeypoolPubKeyWithDB\n     int64_t nTime;\n+    //! The public key\n     CPubKey vchPubKey;\n-    bool fInternal; // for change outputs\n-    bool m_pre_split; // For keys generated before keypool split upgrade\n+    //! Whether this keypool entry is in the internal keypool (for change outputs)\n+    bool fInternal;\n+    //! Whether this key was generated for a keypool before the wallet was upgraded to HD-split\n+    bool m_pre_split;\n \n     CKeyPool();\n     CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn);"
      }
    ]
  },
  {
    "sha": "f1a77b0c5176306ca9f6f30211e32d3502ed4281",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMWE3N2IwYzUxNzYzMDZjYTlmNmYzMDIxMWUzMmQzNTAyZWQ0Mjgx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-04-09T18:36:57Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-05-01T18:53:36Z"
      },
      "message": "[docs] Add doxygen comment for CReserveKey",
      "tree": {
        "sha": "fc00587c07136db97aadf344e64beebba8e4a841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc00587c07136db97aadf344e64beebba8e4a841"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f1a77b0c5176306ca9f6f30211e32d3502ed4281",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1a77b0c5176306ca9f6f30211e32d3502ed4281",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f1a77b0c5176306ca9f6f30211e32d3502ed4281",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1a77b0c5176306ca9f6f30211e32d3502ed4281/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37796b2dd49772b17ff39a1a71b73f6d2248ac6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37796b2dd49772b17ff39a1a71b73f6d2248ac6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37796b2dd49772b17ff39a1a71b73f6d2248ac6d"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 25,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7c9c7486c789b56fe7963943b6e236ac5ff788c1",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 25,
        "deletions": 2,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1a77b0c5176306ca9f6f30211e32d3502ed4281/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1a77b0c5176306ca9f6f30211e32d3502ed4281/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=f1a77b0c5176306ca9f6f30211e32d3502ed4281",
        "patch": "@@ -228,16 +228,35 @@ class CKeyPool\n     }\n };\n \n-/** A key allocated from the key pool. */\n+/** A wrapper to reserve a key from a wallet keypool\n+ *\n+ * CReserveKey is used to reserve a key from the keypool. It is passed around\n+ * during the CreateTransaction/CommitTransaction procedure.\n+ *\n+ * Instantiating a CReserveKey does not reserve a keypool key. To do so,\n+ * GetReservedKey() needs to be called on the object. Once a key has been\n+ * reserved, call KeepKey() on the CReserveKey object to make sure it is not\n+ * returned to the keypool. Call ReturnKey() to return the key to the keypool\n+ * so it can be re-used (for example, if the key was used in a new transaction\n+ * and that transaction was not completed and needed to be aborted).\n+ *\n+ * If a key is reserved and KeepKey() is not called, then the key will be\n+ * returned to the keypool when the CReserveObject goes out of scope.\n+ */\n class CReserveKey\n {\n protected:\n+    //! The wallet to reserve the keypool key from\n     CWallet* pwallet;\n+    //! The index of the key in the keypool\n     int64_t nIndex{-1};\n+    //! The public key\n     CPubKey vchPubKey;\n+    //! Whether this is from the internal (change output) keypool\n     bool fInternal{false};\n \n public:\n+    //! Construct a CReserveKey object. This does NOT reserve a key from the keypool yet\n     explicit CReserveKey(CWallet* pwalletIn)\n     {\n         pwallet = pwalletIn;\n@@ -246,13 +265,17 @@ class CReserveKey\n     CReserveKey(const CReserveKey&) = delete;\n     CReserveKey& operator=(const CReserveKey&) = delete;\n \n+    //! Destructor. If a key has been reserved and not KeepKey'ed, it will be returned to the keypool\n     ~CReserveKey()\n     {\n         ReturnKey();\n     }\n \n-    void ReturnKey();\n+    //! Reserve a key from the keypool\n     bool GetReservedKey(CPubKey &pubkey, bool internal = false);\n+    //! Return a key to the keypool\n+    void ReturnKey();\n+    //! Keep the key. Do not return it to the keypool when this object goes out of scope\n     void KeepKey();\n };\n "
      }
    ]
  }
]