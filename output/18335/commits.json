[
  {
    "sha": "b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWE4MGZhN2U0ODdjMzdiN2FjMGUzODc0YTJmYWJhZGU0MWI5Y2E4",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-04-04T15:02:27Z"
      },
      "committer": {
        "name": "Larry Ruane",
        "email": "larryruane@gmail.com",
        "date": "2020-07-12T19:31:16Z"
      },
      "message": "util: Handle HTTP_SERVICE_UNAVAILABLE in bitcoin-cli",
      "tree": {
        "sha": "8f971e7b80f55604486b99bd203a648adeb2ea27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f971e7b80f55604486b99bd203a648adeb2ea27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4db44acf2d5d3b40943c94b3960f42838255b7ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4db44acf2d5d3b40943c94b3960f42838255b7ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4db44acf2d5d3b40943c94b3960f42838255b7ad"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "89f78d3678fa752796657d61a4426a7903626cdf",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
        "patch": "@@ -429,6 +429,8 @@ static UniValue CallRPC(BaseRequestHandler* rh, const std::string& strMethod, co\n         } else {\n             throw std::runtime_error(\"Authorization failed: Incorrect rpcuser or rpcpassword\");\n         }\n+    } else if (response.status == HTTP_SERVICE_UNAVAILABLE) {\n+        throw std::runtime_error(strprintf(\"Server response: %s\", response.body));\n     } else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\n         throw std::runtime_error(strprintf(\"server returned HTTP error %d\", response.status));\n     else if (response.body.empty())"
      },
      {
        "sha": "2a5ce18893e84f4e60a069d19f2fdb24d16a2475",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
        "patch": "@@ -269,7 +269,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n             item.release(); /* if true, queue took ownership */\n         else {\n             LogPrintf(\"WARNING: request rejected because http work queue depth exceeded, it can be increased with the -rpcworkqueue= setting\\n\");\n-            item->req->WriteReply(HTTP_INTERNAL_SERVER_ERROR, \"Work queue depth exceeded\");\n+            item->req->WriteReply(HTTP_SERVICE_UNAVAILABLE, \"Work queue depth exceeded\");\n         }\n     } else {\n         hreq->WriteReply(HTTP_NOT_FOUND);"
      }
    ]
  },
  {
    "sha": "8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGQ1OTQ2YzBiN2FhOGYzOTc2YjE0YTVkZTRjZTg0YjgwYTljMzJh",
    "commit": {
      "author": {
        "name": "Larry Ruane",
        "email": "larryruane@gmail.com",
        "date": "2020-08-04T17:25:55Z"
      },
      "committer": {
        "name": "Larry Ruane",
        "email": "larryruane@gmail.com",
        "date": "2020-08-04T17:25:55Z"
      },
      "message": "add functional test",
      "tree": {
        "sha": "a0a617d28628026430e01c2c3a110ce6641eeb5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0a617d28628026430e01c2c3a110ce6641eeb5a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a/comments",
    "author": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5a80fa7e487c37b7ac0e3874a2fabade41b9ca8"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 26,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3480aa2bd9b0e11429b09835ae13af9c1b1c7ca0",
        "filename": "test/functional/interface_rpc.py",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a/test/functional/interface_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a/test/functional/interface_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rpc.py?ref=8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a",
        "patch": "@@ -8,6 +8,9 @@\n from test_framework.authproxy import JSONRPCException\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_greater_than_or_equal\n+from threading import Thread\n+import subprocess\n+\n \n def expect_http_status(expected_http_status, expected_rpc_code,\n                        fcn, *args):\n@@ -18,6 +21,16 @@ def expect_http_status(expected_http_status, expected_rpc_code,\n         assert_equal(exc.error[\"code\"], expected_rpc_code)\n         assert_equal(exc.http_status, expected_http_status)\n \n+\n+def test_work_queue_getblock(node, got_exceeded_error):\n+    while not got_exceeded_error:\n+        try:\n+            node.cli('getrpcinfo').send_cli()\n+        except subprocess.CalledProcessError as e:\n+            assert_equal(e.output, 'error: Server response: Work queue depth exceeded\\n')\n+            got_exceeded_error.append(True)\n+\n+\n class RPCInterfaceTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n@@ -67,10 +80,23 @@ def test_http_status_codes(self):\n         expect_http_status(404, -32601, self.nodes[0].invalidmethod)\n         expect_http_status(500, -8, self.nodes[0].getblockhash, 42)\n \n+    def test_work_queue_exceeded(self):\n+        self.log.info(\"Testing work queue exceeded...\")\n+        self.restart_node(0, ['-rpcworkqueue=1', '-rpcthreads=1'])\n+        got_exceeded_error = []\n+        threads = []\n+        for _ in range(3):\n+            t = Thread(target=test_work_queue_getblock, args=(self.nodes[0], got_exceeded_error))\n+            t.start()\n+            threads.append(t)\n+        for t in threads:\n+            t.join()\n+\n     def run_test(self):\n         self.test_getrpcinfo()\n         self.test_batch_request()\n         self.test_http_status_codes()\n+        self.test_work_queue_exceeded()\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]