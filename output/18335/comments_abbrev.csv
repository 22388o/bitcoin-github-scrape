LarryRuane,2020-03-12 17:49:36,"\nTo reproduce the problem, start the client: `bitcoind -rpcworkqueue=1`. This reduces the maximum number of in-progress RPCs from 16 ([`DEFAULT_HTTP_WORKQUEUE`](https://github.com/bitcoin/bitcoin/blob/e2d36639ca87b980b147047e4e47cf160b2c9406/src/httpserver.h#L12)) to 1. Then run:\n```\nseq 10 | while read i;do src/bitcoin-cli getblockhash 0 >/dev/null&done\n```\nThis submits this trivial RPC",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-598333058,598333058,
LarryRuane,2020-03-12 22:59:40,"The second commit undoes the first, and fixes the problem in the server by having it return JSON in the body of the response:\n```\nerror code: -32603\nerror message:\nWork queue depth exceeded\n```\n([Here's](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/protocol.h#L35) where that error code, `RPC_INTERNAL_ERROR` is defined.) It makes sense that this is similar to:\n```\n$ src/bi",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-598468960,598468960,
laanwj,2020-03-17 21:11:28,"Ok, looks like his is actually non-trivial.\n\n> HTTP_INTERNAL_SERVER_ERROR\n\n```\n$2 = {\n  status = 500, \n  error = -1, \n  body = ""Work queue depth exceeded""\n}\n```\n\nSo in this case, possibly you could detect this error code in bitcoin-cli, and print an error message instead of trying to parse as JSON. Or are there cases in which it returns 500 but the response needs to be pars",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-600303495,600303495,
laanwj,2020-03-27 14:10:24,"> I must admit we're sometimes inconsistent about whether to report errors at the HTTP layer or the JSON-RPC\n\nI checked this and yes, we do return JSON errors with `HTTP_INTERNAL_SERVER_ERROR`:\n```c++\nstatic void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const UniValue& id)\n{\n    // Send error reply from json-rpc error object\n    int nStatus = HTTP_INTERNAL_SERVER_ER",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-605021293,605021293,
hebasto,2020-04-04 19:39:54,"@LarryRuane \nJust was noted about this PR by GH :)\n\nIf you find [this](https://github.com/bitcoin/bitcoin/pull/18523) approach simpler you may grab it :)",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-609079188,609079188,
DrahtBot,2020-04-04 20:02:09,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-609081878,609081878,
LarryRuane,2020-04-04 20:04:46,"@hebasto \n> If you find [this](https://github.com/bitcoin/bitcoin/pull/18523) approach simpler you may grab it :)\n\nYes, your solution is much better, thank you! I tested your fix, and cherry-picked your commit to this PR (and force-push-removed my 3 commits).\n",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-609082190,609082190,
LarryRuane,2020-07-12 20:54:58,Rebase (refresh),https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-657273777,657273777,
jonatack,2020-07-17 16:48:56,"Concept ACK. Could you please add functional tests for this in one of the `test/functional/interface*` files? Say, `interface_bitcoin_cli.py` (which has a lot of error response testing) or `interface_rpc.py` (which has a batch request test).",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-660218280,660218280,
fjahr,2020-07-22 13:04:46,"Concept ACK\n\nCode looks good at a glance but the test fails on Travis, so I will come back for a more in-depth review when that is fixed :)",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-662440705,662440705,
jonatack,2020-07-24 06:20:51,"Thanks @LarryRuane for removing the global and the update. The tests appear to be timing out, though it's unclear.",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-663365981,663365981,
hebasto,2020-08-04 18:05:37,Travis failure seems related to #19654.,https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-668744802,668744802,
fjahr,2020-08-05 11:44:35,"tACK 8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a\n\nConfirmed that the test fails without the fix. Ran test multiple times and seemed stable.\n\nmini-nit if you have to retouch: The commit message of the test commit is too general for our usual conventions.",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-669146009,669146009,
hebasto,2020-08-22 08:17:33,"@luke-jr as you've incorporated this PR into Bitcoin Knots, mind refreshing [your previous ACK](https://github.com/bitcoin/bitcoin/pull/18335#pullrequestreview-405472454) to get things done?",https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-678612289,678612289,
luke-jr,2020-10-13 14:41:23,utACK 8dd5946c0b7aa8f3976b14a5de4ce84b80a9c32a (no changes since previous utACK),https://github.com/bitcoin/bitcoin/pull/18335#issuecomment-707786387,707786387,
laanwj,2020-03-12 18:47:52,"I think it's strange that it ends up here. It's trying to parse an error message as JSON! Isn't there some error code (either HTTP or JSON-RPC) that could be checked for instead? If not, that seems like a bug in the server.",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r391823420,391823420,src/bitcoin-cli.cpp
LarryRuane,2020-03-12 21:59:00,"It does seem wrong that my proposed fix retains the practice of trying to decode a non-JSON string as JSON, and depending on that to fail. Yes, perhaps this is a bug in the server -- should it be returning JSON in `body` here rather than a plain string?  But as I said at the end of the comment above, I was hesitant to change the server because I'm worried that there may be other RPC clients beside",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r391928978,391928978,src/bitcoin-cli.cpp
LarryRuane,2020-07-21 15:55:00,"This 400 is, of course, arbitrary, as is the number of threads this test starts (5, see below). These numbers are the result of simple trial-and-error. We want each thread to do enough work that it's still running by the time all 5 threads are started. Still, the test only takes about 1.3 seconds to run on my system. Increasing the number of threads allows the iteration count here to be reduced, b",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r458206976,458206976,test/functional/interface_rpc.py
LarryRuane,2020-07-22 15:54:19,"This is a list, rather than just a boolean, because a list is a mutable object, and this eliminates the need for the global variable, which seems cleaner. Is it worth a comment explaining that? I tend to think not.",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r458898567,458898567,test/functional/interface_rpc.py
hebasto,2020-08-04 08:51:50,"This would make CI testing more reliable:\n```suggestion\n        self.restart_node(0, [""-rpcworkqueue=1"", ""-rpcthreads=1""])\n```",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r464900754,464900754,test/functional/interface_rpc.py
hebasto,2020-08-04 08:53:18,"nit: Mind rewording to make it consistent with other log messages\n```suggestion\n        self.log.info(""Testing work queue exceeded..."")\n```",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r464901576,464901576,test/functional/interface_rpc.py
LarryRuane,2020-08-04 17:28:16,Force-pushed to implement review suggestions.,https://github.com/bitcoin/bitcoin/pull/18335#discussion_r465212726,465212726,test/functional/interface_rpc.py
darosior,2020-10-31 13:42:02,nit: this is called `queue_getblock` but queues a `getrpcinfo` ? Maybe `queue_rpc_call`,https://github.com/bitcoin/bitcoin/pull/18335#discussion_r515498421,515498421,test/functional/interface_rpc.py
darosior,2020-10-31 13:45:37,"nit:\n> Is it worth a comment explaining that? I tend to think not.\n\nI don't think so, but it's a bit awkward for the list to be named like a boolean, maybe `exceeded_errors` if you have to retouch ?",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r515498782,515498782,test/functional/interface_rpc.py
MarcoFalke,2021-03-19 18:57:14,"Does this need release notes to explain the changed http status code? Just in case a user relies on this?\n\nJust asking, you don't have to invalidate review. Release note can be added after merge.",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r597910094,597910094,src/httpserver.cpp
LarryRuane,2021-03-19 19:15:03,"Good point, I think you're right, I'll do it separately, thanks.",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r597919427,597919427,src/httpserver.cpp
MarcoFalke,2021-03-19 19:54:05,You can add them directly to `doc/release-notes.md` on the `master` branch,https://github.com/bitcoin/bitcoin/pull/18335#discussion_r597939754,597939754,src/httpserver.cpp
jonatack,2021-03-19 19:58:40,"Maybe add a ""needs release note"" label.",https://github.com/bitcoin/bitcoin/pull/18335#discussion_r597942172,597942172,src/httpserver.cpp
