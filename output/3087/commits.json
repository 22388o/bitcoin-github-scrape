[
  {
    "sha": "85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWViMmNlZjMzZmNmM2U1Yzc4NWQ1NGIxNzJlYjNlOGY5MzJlM2Ni",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-13T20:15:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-31T23:54:28Z"
      },
      "message": "Do not use the redundant BestInvalidWork record in the block database.\n\nAs block index entries have a flag for marking invalid blocks, the\n'best invalid work' information can be derived from there. In addition,\nremove the global from main.h",
      "tree": {
        "sha": "39a1d1c94bb791552ae8f9810767efedc3e84107",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39a1d1c94bb791552ae8f9810767efedc3e84107"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ede3ee3348ecaeed04dec587171e732ebc0830fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ede3ee3348ecaeed04dec587171e732ebc0830fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ede3ee3348ecaeed04dec587171e732ebc0830fd"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 13,
      "deletions": 21
    },
    "files": [
      {
        "sha": "6a679fcad9555e5cbaa096c97d697b6f94ad4cff",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 14,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
        "patch": "@@ -33,7 +33,7 @@ unsigned int nTransactionsUpdated = 0;\n \n map<uint256, CBlockIndex*> mapBlockIndex;\n CChain chainActive;\n-uint256 nBestInvalidWork = 0;\n+CBlockIndex *pindexBestInvalid;\n set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid; // may contain all CBlockIndex*'s that have validness >=BLOCK_VALID_TRANSACTIONS, and must contain those who aren't failed\n int64 nTimeBestReceived = 0;\n int nScriptCheckThreads = 0;\n@@ -1349,7 +1349,7 @@ void CheckForkWarningConditions()\n     if (pindexBestForkTip && chainActive.Height() - pindexBestForkTip->nHeight >= 72)\n         pindexBestForkTip = NULL;\n \n-    if (pindexBestForkTip || nBestInvalidWork > chainActive.Tip()->nChainWork + (chainActive.Tip()->GetBlockWork() * 6).getuint256())\n+    if (pindexBestForkTip || (pindexBestInvalid && pindexBestInvalid->nChainWork > chainActive.Tip()->nChainWork + (chainActive.Tip()->GetBlockWork() * 6).getuint256()))\n     {\n         if (!fLargeWorkForkFound)\n         {\n@@ -1416,10 +1416,13 @@ void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip)\n \n void static InvalidChainFound(CBlockIndex* pindexNew)\n {\n-    if (pindexNew->nChainWork > nBestInvalidWork)\n+    if (!pindexBestInvalid || pindexNew->nChainWork > pindexBestInvalid->nChainWork)\n     {\n-        nBestInvalidWork = pindexNew->nChainWork;\n-        pblocktree->WriteBestInvalidWork(CBigNum(nBestInvalidWork));\n+        pindexBestInvalid = pindexNew;\n+        // The current code doesn't actually read the BestInvalidWork entry in\n+        // the block database anymore, as it is derived from the flags in block\n+        // index entry. We only write it for backward compatibility.\n+        pblocktree->WriteBestInvalidWork(CBigNum(pindexBestInvalid->nChainWork));\n         uiInterface.NotifyBlocksChanged();\n     }\n     LogPrintf(\"InvalidChainFound: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n@@ -2769,6 +2772,8 @@ bool static LoadBlockIndexDB()\n         pindex->nChainTx = (pindex->pprev ? pindex->pprev->nChainTx : 0) + pindex->nTx;\n         if ((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS && !(pindex->nStatus & BLOCK_FAILED_MASK))\n             setBlockIndexValid.insert(pindex);\n+        if (pindex->nStatus & BLOCK_FAILED_MASK && (!pindexBestInvalid || pindex->nChainWork > pindexBestInvalid->nChainWork))\n+            pindexBestInvalid = pindex;\n     }\n \n     // Load block file info\n@@ -2777,11 +2782,6 @@ bool static LoadBlockIndexDB()\n     if (pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n         LogPrintf(\"LoadBlockIndexDB(): last block file info: %s\\n\", infoLastBlockFile.ToString().c_str());\n \n-    // Load nBestInvalidWork, OK if it doesn't exist\n-    CBigNum bnBestInvalidWork;\n-    pblocktree->ReadBestInvalidWork(bnBestInvalidWork);\n-    nBestInvalidWork = bnBestInvalidWork.getuint256();\n-\n     // Check whether we need to continue reindexing\n     bool fReindexing = false;\n     pblocktree->ReadReindexing(fReindexing);\n@@ -2791,12 +2791,10 @@ bool static LoadBlockIndexDB()\n     pblocktree->ReadFlag(\"txindex\", fTxIndex);\n     LogPrintf(\"LoadBlockIndexDB(): transaction index %s\\n\", fTxIndex ? \"enabled\" : \"disabled\");\n \n-    // Load hashBestChain pointer to end of best chain\n+    // Load pointer to end of best chain\n     chainActive.SetTip(pcoinsTip->GetBestBlock());\n     if (chainActive.Tip() == NULL)\n         return true;\n-\n-    // register best chain\n     LogPrintf(\"LoadBlockIndexDB(): hashBestChain=%s  height=%d date=%s\\n\",\n         chainActive.Tip()->GetBlockHash().ToString().c_str(), chainActive.Height(),\n         DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()).c_str());\n@@ -2882,7 +2880,7 @@ void UnloadBlockIndex()\n     mapBlockIndex.clear();\n     setBlockIndexValid.clear();\n     chainActive.SetTip(NULL);\n-    nBestInvalidWork = 0;\n+    pindexBestInvalid = NULL;\n }\n \n bool LoadBlockIndex()"
      },
      {
        "sha": "77e4792691707c0da4f84c320b9ec1f0c1e4d222",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
        "patch": "@@ -74,7 +74,6 @@ extern CScript COINBASE_FLAGS;\n extern CCriticalSection cs_main;\n extern std::map<uint256, CBlockIndex*> mapBlockIndex;\n extern std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid;\n-extern uint256 nBestInvalidWork;\n extern unsigned int nTransactionsUpdated;\n extern uint64 nLastBlockTx;\n extern uint64 nLastBlockSize;"
      },
      {
        "sha": "27d6caf4d98eea734aff24381a485be31cb30635",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
        "patch": "@@ -74,13 +74,9 @@ bool CBlockTreeDB::WriteBlockIndex(const CDiskBlockIndex& blockindex)\n     return Write(make_pair('b', blockindex.GetBlockHash()), blockindex);\n }\n \n-bool CBlockTreeDB::ReadBestInvalidWork(CBigNum& bnBestInvalidWork)\n-{\n-    return Read('I', bnBestInvalidWork);\n-}\n-\n bool CBlockTreeDB::WriteBestInvalidWork(const CBigNum& bnBestInvalidWork)\n {\n+    // Obsolete; only written for backward compatibility.\n     return Write('I', bnBestInvalidWork);\n }\n "
      },
      {
        "sha": "b555be3de7bb31dd865d5c6c3dc83c3cb9edb3c6",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
        "patch": "@@ -35,7 +35,6 @@ class CBlockTreeDB : public CLevelDB\n     void operator=(const CBlockTreeDB&);\n public:\n     bool WriteBlockIndex(const CDiskBlockIndex& blockindex);\n-    bool ReadBestInvalidWork(CBigNum& bnBestInvalidWork);\n     bool WriteBestInvalidWork(const CBigNum& bnBestInvalidWork);\n     bool ReadBlockFileInfo(int nFile, CBlockFileInfo &fileinfo);\n     bool WriteBlockFileInfo(int nFile, const CBlockFileInfo &fileinfo);"
      }
    ]
  },
  {
    "sha": "caca6aa4eb54b71b5e4e9ccfa69341f985b178d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWNhNmFhNGViNTRiNzFiNWU0ZTljY2ZhNjkzNDFmOTg1YjE3OGQ5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-14T00:13:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-31T23:54:28Z"
      },
      "message": "Make some globals in main non-public.\n\nThis means they are declared static, and their extern definition in\nmain.h is removed. Also moved CBlockIndexWorkComparator to the .cpp\nfile.",
      "tree": {
        "sha": "e2fea18cde3f4459d25e0523116907286ea11235",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2fea18cde3f4459d25e0523116907286ea11235"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85eb2cef33fcf3e5c785d54b172eb3e8f932e3cb"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 21,
      "deletions": 26
    },
    "files": [
      {
        "sha": "f7f5ff1269b8c21ec44702773d56e2f045430683",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=caca6aa4eb54b71b5e4e9ccfa69341f985b178d9",
        "patch": "@@ -33,8 +33,6 @@ unsigned int nTransactionsUpdated = 0;\n \n map<uint256, CBlockIndex*> mapBlockIndex;\n CChain chainActive;\n-CBlockIndex *pindexBestInvalid;\n-set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid; // may contain all CBlockIndex*'s that have validness >=BLOCK_VALID_TRANSACTIONS, and must contain those who aren't failed\n int64 nTimeBestReceived = 0;\n int nScriptCheckThreads = 0;\n bool fImporting = false;\n@@ -65,7 +63,28 @@ const string strMessageMagic = \"Bitcoin Signed Message:\\n\";\n // Settings\n int64 nTransactionFee = 0;\n \n+// Internal stuff\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) {\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        if (pa->GetBlockHash() < pb->GetBlockHash()) return false;\n+        if (pa->GetBlockHash() > pb->GetBlockHash()) return true;\n+\n+        return false; // identical blocks\n+    }\n+};\n+\n+CBlockIndex *pindexBestInvalid;\n+set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid; // may contain all CBlockIndex*'s that have validness >=BLOCK_VALID_TRANSACTIONS, and must contain those who aren't failed\n \n+CCriticalSection cs_LastBlockFile;\n+CBlockFileInfo infoLastBlockFile;\n+int nLastBlockFile = 0;\n+}\n \n //////////////////////////////////////////////////////////////////////////////\n //\n@@ -2694,10 +2713,6 @@ bool CheckDiskSpace(uint64 nAdditionalBytes)\n     return true;\n }\n \n-CCriticalSection cs_LastBlockFile;\n-CBlockFileInfo infoLastBlockFile;\n-int nLastBlockFile = 0;\n-\n FILE* OpenDiskFile(const CDiskBlockPos &pos, const char *prefix, bool fReadOnly)\n {\n     if (pos.IsNull())"
      },
      {
        "sha": "d568d8e6b852fc930d394ff5d8cff9c54dc36773",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caca6aa4eb54b71b5e4e9ccfa69341f985b178d9/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=caca6aa4eb54b71b5e4e9ccfa69341f985b178d9",
        "patch": "@@ -26,8 +26,6 @@ class CAddress;\n class CInv;\n class CNode;\n \n-struct CBlockIndexWorkComparator;\n-\n /** The maximum allowed size for a serialized block, in bytes (network rule) */\n static const unsigned int MAX_BLOCK_SIZE = 1000000;\n /** The maximum size for mined blocks */\n@@ -73,7 +71,6 @@ extern CScript COINBASE_FLAGS;\n \n extern CCriticalSection cs_main;\n extern std::map<uint256, CBlockIndex*> mapBlockIndex;\n-extern std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid;\n extern unsigned int nTransactionsUpdated;\n extern uint64 nLastBlockTx;\n extern uint64 nLastBlockSize;\n@@ -646,10 +643,6 @@ class CBlockFileInfo\n      }\n };\n \n-extern CCriticalSection cs_LastBlockFile;\n-extern CBlockFileInfo infoLastBlockFile;\n-extern int nLastBlockFile;\n-\n enum BlockStatus {\n     BLOCK_VALID_UNKNOWN      =    0,\n     BLOCK_VALID_HEADER       =    1, // parsed, version ok, hash satisfies claimed PoW, 1 <= vtx count <= max, timestamp not in future\n@@ -849,19 +842,6 @@ class CBlockIndex\n     }\n };\n \n-struct CBlockIndexWorkComparator\n-{\n-    bool operator()(CBlockIndex *pa, CBlockIndex *pb) {\n-        if (pa->nChainWork > pb->nChainWork) return false;\n-        if (pa->nChainWork < pb->nChainWork) return true;\n-\n-        if (pa->GetBlockHash() < pb->GetBlockHash()) return false;\n-        if (pa->GetBlockHash() > pb->GetBlockHash()) return true;\n-\n-        return false; // identical blocks\n-    }\n-};\n-\n \n \n /** Used to marshal pointers into hashes for db storage. */"
      }
    ]
  }
]