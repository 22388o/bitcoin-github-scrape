DrahtBot,2021-06-20 17:19:13,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22981](https://github.com/bitcoin/bitcoin/pull/22981) (doc: Fix incorrect C++ named args by MarcoFalke)\n* [#22976](http",https://github.com/bitcoin/bitcoin/pull/22290#issuecomment-864585675,864585675,
sdaftuar,2021-06-21 17:17:59,"I have some concerns around what semantics are desired for bypassing the fee rate checks for a single transaction and using a notion of package fee rate instead.\n\nI think the logic here — of using the descendant fee rate as an alternate to the transaction’s fee rate — is insufficient for preventing free relay.  Consider a 3 transaction package where one child transaction C has two parents, A a",https://github.com/bitcoin/bitcoin/pull/22290#issuecomment-865208890,865208890,
Rspigler,2021-06-21 21:37:34,"> in this simple case I believe we could just look at two things: (a) check the target transaction’s own fee rate is sufficient to get in, and (b) check that the entire ancestor package for that target transaction also has a total fee rate sufficient to get in.\n\nThis seems reasonable.",https://github.com/bitcoin/bitcoin/pull/22290#issuecomment-865362039,865362039,
glozow,2021-06-22 11:05:30,"Thank you for the thoughtful review @sdaftuar!\n\n> I think the logic here — of using the descendant fee rate as an alternate to the transaction’s fee rate — is insufficient for preventing free relay. Consider a 3 transaction package where one child transaction C has two parents, A and B, all of equal size. Suppose A and B are zero-fee transactions and C has a fee rate of 2. Then each of A and B",https://github.com/bitcoin/bitcoin/pull/22290#issuecomment-865887922,865887922,
sdaftuar,2021-06-22 21:29:26,"> A proposal: if the mempool is intended to store the best candidates for mining, then we should evict in the opposite order we include in blocks, which is ancestor score.\nSo a transaction's minerscore = max([ancestorfeerate(tx) for tx in {itself, all its descendants}]). (This is with the current mining code - I suppose the definition of minerscore would be updated if/when block template creatio",https://github.com/bitcoin/bitcoin/pull/22290#issuecomment-866347317,866347317,
glozow,2021-06-23 15:58:10,"Right, I agree with the separation between mempool eviction policy and evaluation of package transactions. Won't pursue the former much further here... \n\n~My plan of attack after the IRC [discussion](https://gist.github.com/glozow/d362100715e9a3e2e61cb4b600663377) last night is going to be 1 parent + 1 child packages (perhaps these can also be thought of as 1 sponsee + 1 sponsor) and I think c",https://github.com/bitcoin/bitcoin/pull/22290#issuecomment-866963503,866963503,
