jonasschnelli,2015-04-07T18:29:13Z,Nice!\nconceptual ACK.\nHave plans to test this soon.\n,https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-90690851,90690851,
laanwj,2015-04-08T06:24:29Z,"Nice work!\n\n> I forgot to mention that I use py-leveldb in blockstore.py\n\nI'd rather not add any external dependencies for the tests. Do we need any kind of persistent block storage in the tests? If we really do, I'd rather hack something together with python.\n",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-90818710,90818710,
sdaftuar,2015-04-09T14:38:13Z,"@laanwj I'd prefer to leave the disk-backed storage there, even though it's probably not needed for the existing tests I've included in this pull, because it will be needed to write longer tests like the comparison test which currently runs in the pull-tester.  \n\nI pushed up a commit that replaces leveldb with dbm, which I believe is a standard python package; does that seem like an acceptable o",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-91250482,91250482,
laanwj,2015-04-09T15:42:43Z,"Sure, using a python standard package is fine, my gripe was with using an external dependency. Using disk-backed storage is no problem as long as subsequent tests don't interfere with each other.\n",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-91267882,91267882,
laanwj,2015-04-16T09:33:56Z,Maybe add the new tests (whenever they don't take too long) to the pull tester e.g. `qa/pull-tester/rpc-tests.sh`. For example `invalidblockrequest.py` seems to finish quickly.\n\nThe `bipdersig-p2p.py` test seems to hang indefinitely here at:\n\n```\nInitializing test directory /tmp/testBxTNIB\nMiniNode: Connecting to Bitcoin Node IP # 127.0.0.1:11916\nTest 1: PASS [98]\n```\n,https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-93691785,93691785,
sdaftuar,2015-04-17T17:39:18Z,"@laanwj  The `bipdersig-p2p.py` test was failing because this needed rebase, due to the `setgenerate ()`/`generate()` regtest rpc change (now fixed).\n\nI've also shortened `maxblocksinflight.py`, and added both it and `invalidblockrequest.py` to the pull tester's rpc tests.\n\nEDIT: I see that this errored out in travis; will investigate.\n",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-94035406,94035406,
laanwj,2015-04-21T08:05:48Z,"Ah yes, the `generate` switcharoo. I think we should add an explicit error when setgenerate() is used on regtest, so that bugs like this are tripped up immediately instead of through vague timeouts.\n\nThe travis error seems to occur on 64-bit Linux - no detailed information unfortunately\n\n```\nRunning testscript maxblocksinflight.py...\n\nInitializing test directory /tmp/testIyXJqc\n\nNo output",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-94693113,94693113,
laanwj,2015-04-28T08:24:27Z,"I'd really like to merge this. Do you have trouble solving the travis error? If so, maybe @theuni can help.\n",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-96971436,96971436,
sdaftuar,2015-04-28T16:35:43Z,"This needed to be rebased anyway, so I did that and now travis succeeds.  I'm not sure what to make of that, since I didn't actually fix anything, and it seems odd to think that this was just a spurious travis failure that happened to only affect a new test I've introduced in this pull.\n\nI'll try rebasing again, since I wanted to fold the 4th and 5th commits in anyway, and when I push we'll get ",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97129316,97129316,
sdaftuar,2015-04-28T19:56:18Z,"Well, on the first attempt, travis failed again with the 10-minute no-data-received timeout, but this time it was not involving the new p2p tests (it died while the java comparison tool was running).  I amended the last commit to force a re-run, and it ran successfully, so now I am a little more willing to believe that these may just be random travis failures that I'm encountering, and not a probl",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97187422,97187422,
theuni,2015-04-28T20:00:13Z,"I came too late.. what was the original error?\nEdit: nevermind, posted same time.\n",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97188898,97188898,
sdaftuar,2015-04-29T14:57:32Z,"After discussing with @theuni on IRC, I added a commit that adds some optional debugging (which I enabled for travis) to calls to bitcoin-cli -rpcwait (inside util.py), and then another addressing the bug he caught with the default binary names.\n",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97456630,97456630,
laanwj,2015-04-29T16:03:39Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97481378,97481378,
jonasschnelli,2015-04-30T13:06:24Z,1st: this is impressive work. Nice!\nI think the quick merge honors this job.\n\nNevertheless here are some first post-ACK reports (more detailed report will follow):\n\nRunning `maxblocksinflight.py` does fail on my local machine:\n\n```\nRunning testscript maxblocksinflight.py...\nInitializing test directory /var/folders/hp/kb9p9q8x4k3_z_ccy588hxrc0000gn/T/testVtWBqX\nMiniNode: Connecting to Bit,https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97767685,97767685,
sdaftuar,2015-04-30T13:38:44Z,"@jonasschnelli  Thanks, and thanks for running the tests too.  Looks to me like the first error message is happening in how the test cleans up, that probably just needs to be made more robust; I'll take a look.  The second error message is more concerning though, as the substantive part of the test is failing.  \n\nCould you run `invalidblockrequest.py --tracerpc` (which will produce a lot of debu",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97793718,97793718,
jonasschnelli,2015-04-30T14:32:54Z,Post merge ACK\n,https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97819466,97819466,
sdaftuar,2015-04-30T15:19:50Z,"@jonasschnelli FYI - I did some more digging, and I think I've identified a race condition in the invalidblockrequest.py test (which you triggered the first time you ran, and got the assertion failure at test 3).\n\nI'll PR a cleanup of these issues shortly.\n",https://github.com/bitcoin/bitcoin/pull/5981#issuecomment-97836357,97836357,
jonasschnelli,2015-04-30T13:31:39Z,Is it somehow possible to set this to 2 if `--refbinary` is set?\n,https://github.com/bitcoin/bitcoin/pull/5981#discussion_r29428834,29428834,qa/rpc-tests/invalidblockrequest.py
jonasschnelli,2015-04-30T14:25:21Z,"After discussion this on IRC it turned out, that OSes without polling support (OSX) have problems with timeouts below 1 because they always use `select.select()`.\nShould be changed to `asyncore.loop(1, True)`\n",https://github.com/bitcoin/bitcoin/pull/5981#discussion_r29433660,29433660,qa/rpc-tests/mininode.py
