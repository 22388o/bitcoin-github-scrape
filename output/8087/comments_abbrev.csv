TheBlueMatt,2016-05-23T07:34:41Z,"I think you forgot to include the files in git.\n\nOn May 23, 2016 12:23:38 AM PDT, Patrick Strateman notifications@github.com wrote:\n\n> You can view, comment on, or merge this pull request online at:\n> \n>  https://github.com/bitcoin/bitcoin/pull/8087\n> \n> -- Commit Summary --\n> - Introduce CBlockchain and move CheckBlockHeader\n> \n> -- File Changes --\n> \n>    M src/Makefile.am (5)\n>   ",https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-220907238,220907238,
pstratem,2016-05-23T07:38:38Z,Indeed I did\n,https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-220907913,220907913,
jtimon,2016-05-24T13:27:03Z,"This is a very different approach to libconsensus. I already see chainparams.h, checkpoints and other dependencies that shouldn't be in the consensus module (and libconsensus). This seems more disruptive to my work on libconsensus than segwit (for which I'm waiting to continue proposing more consensus related refactors).\nConcept NACK.\n",https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-221267803,221267803,
pstratem,2016-05-24T15:09:09Z,"@jtimon I think there was a misunderstanding in the intention here.\n\nMy goal is simply to more clearly define the interface functions in an effort to separate networking and consensus logic.\n\nThe implementing functions should be pure while the interface used by bitcoind/bitcoin-qt would have some state, such as the block index and utxo states as well as which chain we're dealing with (ie Conse",https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-221302123,221302123,
sipa,2016-05-25T13:53:47Z,"I think we need to first have a plan about refactorings in this space. There are too many people with conflicting goals pulling in different directions. Without coordination, I fear we'll end up with partially-completed refactors that are worse than what we've started off with.\n",https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-221583102,221583102,
dcousens,2016-05-26T02:58:06Z,"> Without coordination, I fear we'll end up with partially-completed refactors that are worse than what we've started off with.\n\nAgreed,  perhaps this is an article for in-depth technical discussion after the next meeting?\nMight need a mediator...\n",https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-221765273,221765273,
dcousens,2016-05-26T02:59:30Z,utACK 942a847\n,https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-221765438,221765438,
jtimon,2016-05-26T07:18:33Z,"@pstratem Encapsulating consensus logic has been a long term goal of mine. I believe you are underestimating how disruptive this PR would be to my previous (but still not reviewed or merged) work in this subject. Let's please take little steps trying to find common ground. I never created the promised ""libconsensus plan"" document with pictures, but people really really interested have always had t",https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-221795849,221795849,
TheBlueMatt,2016-10-28T17:15:54Z,"Needs rebase. Also see related work such as #8969 which attempts to move towards this in a different way - pull everything that isnt CBlockchain out of main.cpp first, then just put everything left in a class.\n",https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-256976992,256976992,
sipa,2017-04-09T14:43:35Z,Closing. I think this needs significant rework after #8969 and #9260. Feel free to ask to reopen if you want to pick this up.,https://github.com/bitcoin/bitcoin/pull/8087#issuecomment-292790066,292790066,
