[
  {
    "sha": "201e4837b7454d4da97ae58850d5010b4c7e2b14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDFlNDgzN2I3NDU0ZDRkYTk3YWU1ODg1MGQ1MDEwYjRjN2UyYjE0",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-23T07:42:39Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-23T07:54:37Z"
      },
      "message": "Introduce new class CBlockchain\n\nHigh level consensus logic is currently in  main.cpp\nIn time these functions should be moved to CBlockchain\nInitially as static methods and then as normal methods.",
      "tree": {
        "sha": "6cfc5010343d7dcc76b2f088460289c9b2d8fa7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cfc5010343d7dcc76b2f088460289c9b2d8fa7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/201e4837b7454d4da97ae58850d5010b4c7e2b14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/201e4837b7454d4da97ae58850d5010b4c7e2b14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/201e4837b7454d4da97ae58850d5010b4c7e2b14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/201e4837b7454d4da97ae58850d5010b4c7e2b14/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37f9a1f627c0995d89b62923e75cd092600894f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37f9a1f627c0995d89b62923e75cd092600894f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37f9a1f627c0995d89b62923e75cd092600894f9"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e156219eea6c921363b298a9d417958e2d0b011b",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=201e4837b7454d4da97ae58850d5010b4c7e2b14",
        "patch": "@@ -75,6 +75,7 @@ BITCOIN_CORE_H = \\\n   addrman.h \\\n   base58.h \\\n   bloom.h \\\n+  blockchain.h \\\n   chain.h \\\n   chainparams.h \\\n   chainparamsbase.h \\\n@@ -163,6 +164,7 @@ libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   bloom.cpp \\\n+  blockchain.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n   httprpc.cpp \\"
      },
      {
        "sha": "290dd442e0540ca4d6cefc664db82d32e19af620",
        "filename": "src/blockchain.cpp",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.cpp?ref=201e4837b7454d4da97ae58850d5010b4c7e2b14",
        "patch": "@@ -0,0 +1,6 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"blockchain.h\""
      },
      {
        "sha": "4f1139aecf0de181e7af5f59bc5f9dbc6c392f44",
        "filename": "src/blockchain.h",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.h?ref=201e4837b7454d4da97ae58850d5010b4c7e2b14",
        "patch": "@@ -0,0 +1,12 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKCHAIN_H\n+#define BITCOIN_BLOCKCHAIN_H\n+\n+class CBlockchain {\n+};\n+\n+#endif // BITCOIN_BLOCKCHAIN_H"
      },
      {
        "sha": "6464d2ec2143e9e11d3c2d2d15c70da798b736d7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/201e4837b7454d4da97ae58850d5010b4c7e2b14/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=201e4837b7454d4da97ae58850d5010b4c7e2b14",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"addrman.h\"\n #include \"arith_uint256.h\"\n+#include \"blockchain.h\"\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\""
      }
    ]
  },
  {
    "sha": "88d3cf54dfbd127f6713ac2bd90f36037754b80a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGQzY2Y1NGRmYmQxMjdmNjcxM2FjMmJkOTBmMzYwMzc3NTRiODBh",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-23T07:53:50Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-23T07:54:38Z"
      },
      "message": "Move CheckBlockHeader to CBlockchain::CheckBlockHeader",
      "tree": {
        "sha": "ce933a6ce53b21c288743beed3316f669f184b72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce933a6ce53b21c288743beed3316f669f184b72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88d3cf54dfbd127f6713ac2bd90f36037754b80a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d3cf54dfbd127f6713ac2bd90f36037754b80a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88d3cf54dfbd127f6713ac2bd90f36037754b80a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d3cf54dfbd127f6713ac2bd90f36037754b80a/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "201e4837b7454d4da97ae58850d5010b4c7e2b14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/201e4837b7454d4da97ae58850d5010b4c7e2b14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/201e4837b7454d4da97ae58850d5010b4c7e2b14"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 24,
      "deletions": 16
    },
    "files": [
      {
        "sha": "88397e15e6f17e19032e495f17ab222b24af8f33",
        "filename": "src/blockchain.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.cpp?ref=88d3cf54dfbd127f6713ac2bd90f36037754b80a",
        "patch": "@@ -4,3 +4,20 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"blockchain.h\"\n+#include \"consensus/validation.h\"\n+#include \"chainparams.h\"\n+#include \"pow.h\"\n+#include \"primitives/block.h\"\n+#include \"timedata.h\"\n+\n+bool CBlockchain::CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW) {\n+    // Check proof of work matches claimed amount\n+    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, Params().GetConsensus()))\n+        return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n+\n+    // Check timestamp\n+    if (block.GetBlockTime() > GetAdjustedTime() + 2 * 60 * 60)\n+        return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n+\n+    return true;\n+}"
      },
      {
        "sha": "bbcff9a2afc1f183d8c57fb0c1954f0a5146bd0b",
        "filename": "src/blockchain.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.h?ref=88d3cf54dfbd127f6713ac2bd90f36037754b80a",
        "patch": "@@ -6,7 +6,12 @@\n #ifndef BITCOIN_BLOCKCHAIN_H\n #define BITCOIN_BLOCKCHAIN_H\n \n+#include \"consensus/validation.h\"\n+#include \"primitives/block.h\"\n+\n class CBlockchain {\n+public:\n+    static bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW = true);\n };\n \n #endif // BITCOIN_BLOCKCHAIN_H"
      },
      {
        "sha": "4c526e075240d12b0dde0e4ee040beac4f76f0a2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 15,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=88d3cf54dfbd127f6713ac2bd90f36037754b80a",
        "patch": "@@ -3235,19 +3235,6 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW)\n-{\n-    // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, Params().GetConsensus()))\n-        return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n-\n-    // Check timestamp\n-    if (block.GetBlockTime() > GetAdjustedTime() + 2 * 60 * 60)\n-        return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n-\n-    return true;\n-}\n-\n bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bool fCheckMerkleRoot)\n {\n     // These are checks that are independent of context.\n@@ -3257,7 +3244,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n \n     // Check that the header is valid (particularly PoW).  This is mostly\n     // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, fCheckPOW))\n+    if (!CBlockchain::CheckBlockHeader(block, state, fCheckPOW))\n         return false;\n \n     // Check the merkle root.\n@@ -3398,7 +3385,7 @@ static bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state\n             return true;\n         }\n \n-        if (!CheckBlockHeader(block, state))\n+        if (!CBlockchain::CheckBlockHeader(block, state))\n             return error(\"%s: Consensus::CheckBlockHeader: %s, %s\", __func__, hash.ToString(), FormatStateMessage(state));\n \n         // Get prev block index"
      },
      {
        "sha": "4f952f343f732eacae7efd1c747426adb00418cd",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88d3cf54dfbd127f6713ac2bd90f36037754b80a/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=88d3cf54dfbd127f6713ac2bd90f36037754b80a",
        "patch": "@@ -425,7 +425,6 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n /** Functions for validating blocks and updating the block tree */\n \n /** Context-independent validity checks */\n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW = true);\n bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n /** Context-dependent validity checks."
      }
    ]
  },
  {
    "sha": "942a84727b7fd454110962f0a9a7ec8ff1364ff5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDJhODQ3MjdiN2ZkNDU0MTEwOTYyZjBhOWE3ZWM4ZmYxMzY0ZmY1",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-23T08:29:24Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-23T08:29:24Z"
      },
      "message": "move CheckTransaction to CBlockchain::CheckTransaction",
      "tree": {
        "sha": "9e08f162939d09b22f7bb4ae50b56209a8461d66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e08f162939d09b22f7bb4ae50b56209a8461d66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/942a84727b7fd454110962f0a9a7ec8ff1364ff5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/942a84727b7fd454110962f0a9a7ec8ff1364ff5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/942a84727b7fd454110962f0a9a7ec8ff1364ff5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/942a84727b7fd454110962f0a9a7ec8ff1364ff5/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88d3cf54dfbd127f6713ac2bd90f36037754b80a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d3cf54dfbd127f6713ac2bd90f36037754b80a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88d3cf54dfbd127f6713ac2bd90f36037754b80a"
      }
    ],
    "stats": {
      "total": 162,
      "additions": 98,
      "deletions": 64
    },
    "files": [
      {
        "sha": "523bbb5a833cdd72bef7db489d3cac057fec7d68",
        "filename": "src/blockchain.cpp",
        "status": "modified",
        "additions": 84,
        "deletions": 2,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.cpp?ref=942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "patch": "@@ -3,12 +3,46 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"addrman.h\"\n+#include \"arith_uint256.h\"\n #include \"blockchain.h\"\n-#include \"consensus/validation.h\"\n #include \"chainparams.h\"\n+#include \"checkpoints.h\"\n+#include \"checkqueue.h\"\n+#include \"consensus/consensus.h\"\n+#include \"consensus/merkle.h\"\n+#include \"consensus/validation.h\"\n+#include \"hash.h\"\n+#include \"init.h\"\n+#include \"merkleblock.h\"\n+#include \"net.h\"\n+#include \"policy/fees.h\"\n+#include \"policy/policy.h\"\n #include \"pow.h\"\n #include \"primitives/block.h\"\n-#include \"timedata.h\"\n+#include \"primitives/transaction.h\"\n+#include \"random.h\"\n+#include \"script/script.h\"\n+#include \"script/sigcache.h\"\n+#include \"script/standard.h\"\n+#include \"tinyformat.h\"\n+#include \"txdb.h\"\n+#include \"txmempool.h\"\n+#include \"ui_interface.h\"\n+#include \"undo.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"utilstrencodings.h\"\n+#include \"validationinterface.h\"\n+#include \"versionbits.h\"\n+\n+#include <sstream>\n+\n+#include <boost/algorithm/string/replace.hpp>\n+#include <boost/filesystem.hpp>\n+#include <boost/filesystem/fstream.hpp>\n+#include <boost/math/distributions/poisson.hpp>\n+#include <boost/thread.hpp>\n \n bool CBlockchain::CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW) {\n     // Check proof of work matches claimed amount\n@@ -21,3 +55,51 @@ bool CBlockchain::CheckBlockHeader(const CBlockHeader& block, CValidationState&\n \n     return true;\n }\n+\n+bool CBlockchain::CheckTransaction(const CTransaction& tx, CValidationState &state)\n+{\n+    // Basic checks that don't depend on any context\n+    if (tx.vin.empty())\n+        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+    if (tx.vout.empty())\n+        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vout-empty\");\n+    // Size limits\n+    if (::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-oversize\");\n+\n+    // Check for negative or overflow output values\n+    CAmount nValueOut = 0;\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    {\n+        if (txout.nValue < 0)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-negative\");\n+        if (txout.nValue > MAX_MONEY)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-toolarge\");\n+        nValueOut += txout.nValue;\n+        if (!MoneyRange(nValueOut))\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-txouttotal-toolarge\");\n+    }\n+\n+    // Check for duplicate inputs\n+    std::set<COutPoint> vInOutPoints;\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    {\n+        if (vInOutPoints.count(txin.prevout))\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n+        vInOutPoints.insert(txin.prevout);\n+    }\n+\n+    if (tx.IsCoinBase())\n+    {\n+        if (tx.vin[0].scriptSig.size() < 2 || tx.vin[0].scriptSig.size() > 100)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-length\");\n+    }\n+    else\n+    {\n+        BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+            if (txin.prevout.IsNull())\n+                return state.DoS(10, false, REJECT_INVALID, \"bad-txns-prevout-null\");\n+    }\n+\n+    return true;\n+}"
      },
      {
        "sha": "fef10a6373a9dfa17f87b12e402ec15853034b81",
        "filename": "src/blockchain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.h?ref=942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "patch": "@@ -11,6 +11,8 @@\n \n class CBlockchain {\n public:\n+    /** Context-independent validity checks */\n+    static bool CheckTransaction(const CTransaction& tx, CValidationState& state);\n     static bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW = true);\n };\n "
      },
      {
        "sha": "585d2ad6d22fd0014a6a6f3107dacf1bcb40f490",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 50,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "patch": "@@ -937,54 +937,6 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\n \n \n \n-bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n-{\n-    // Basic checks that don't depend on any context\n-    if (tx.vin.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n-    if (tx.vout.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vout-empty\");\n-    // Size limits\n-    if (::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-oversize\");\n-\n-    // Check for negative or overflow output values\n-    CAmount nValueOut = 0;\n-    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-    {\n-        if (txout.nValue < 0)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-negative\");\n-        if (txout.nValue > MAX_MONEY)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-toolarge\");\n-        nValueOut += txout.nValue;\n-        if (!MoneyRange(nValueOut))\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-txouttotal-toolarge\");\n-    }\n-\n-    // Check for duplicate inputs\n-    set<COutPoint> vInOutPoints;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-    {\n-        if (vInOutPoints.count(txin.prevout))\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n-        vInOutPoints.insert(txin.prevout);\n-    }\n-\n-    if (tx.IsCoinBase())\n-    {\n-        if (tx.vin[0].scriptSig.size() < 2 || tx.vin[0].scriptSig.size() > 100)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-length\");\n-    }\n-    else\n-    {\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-            if (txin.prevout.IsNull())\n-                return state.DoS(10, false, REJECT_INVALID, \"bad-txns-prevout-null\");\n-    }\n-\n-    return true;\n-}\n-\n void LimitMempoolSize(CTxMemPool& pool, size_t limit, unsigned long age) {\n     int expired = pool.Expire(GetTime() - age);\n     if (expired != 0)\n@@ -1014,7 +966,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n     if (pfMissingInputs)\n         *pfMissingInputs = false;\n \n-    if (!CheckTransaction(tx, state))\n+    if (!CBlockchain::CheckTransaction(tx, state))\n         return false; // state filled in by CheckTransaction\n \n     // Coinbase is only valid in a block, not as a loose transaction\n@@ -3278,7 +3230,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n \n     // Check transactions\n     BOOST_FOREACH(const CTransaction& tx, block.vtx)\n-        if (!CheckTransaction(tx, state))\n+        if (!CBlockchain::CheckTransaction(tx, state))\n             return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n                                  strprintf(\"Transaction check failed (tx hash %s) %s\", tx.GetHash().ToString(), state.GetDebugMessage()));\n "
      },
      {
        "sha": "040655b578bf9fc920adc2c7ffe2f390abe10834",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "patch": "@@ -340,9 +340,6 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n /** Apply the effects of this transaction on the UTXO set represented by view */\n void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight);\n \n-/** Context-independent validity checks */\n-bool CheckTransaction(const CTransaction& tx, CValidationState& state);\n-\n /**\n  * Check if transaction is final and can be included in a block with the\n  * specified height and time. Consensus critical."
      },
      {
        "sha": "de215930356e7662faf8c625f3888277099f60a9",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "patch": "@@ -2,10 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"blockchain.h\"\n #include \"consensus/validation.h\"\n #include \"data/sighash.json.h\"\n #include \"hash.h\"\n-#include \"main.h\" // For CheckTransaction\n #include \"random.h\"\n #include \"script/interpreter.h\"\n #include \"script/script.h\"\n@@ -200,7 +200,7 @@ BOOST_AUTO_TEST_CASE(sighash_from_data)\n           stream >> tx;\n \n           CValidationState state;\n-          BOOST_CHECK_MESSAGE(CheckTransaction(tx, state), strTest);\n+          BOOST_CHECK_MESSAGE(CBlockchain::CheckTransaction(tx, state), strTest);\n           BOOST_CHECK(state.IsValid());\n \n           std::vector<unsigned char> raw = ParseHex(raw_script);"
      },
      {
        "sha": "be5d5800dcdeb9c593448129f8b021e0784fbeff",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "patch": "@@ -6,12 +6,13 @@\n #include \"data/tx_valid.json.h\"\n #include \"test/test_bitcoin.h\"\n \n+#include \"blockchain.h\"\n #include \"clientversion.h\"\n #include \"consensus/validation.h\"\n #include \"core_io.h\"\n #include \"key.h\"\n #include \"keystore.h\"\n-#include \"main.h\" // For CheckTransaction\n+#include \"main.h\" // For cs_main, minRelayTxFee, and DEFAULT_MIN_RELAY_TX_FEE\n #include \"policy/policy.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\"\n@@ -138,7 +139,7 @@ BOOST_AUTO_TEST_CASE(tx_valid)\n             stream >> tx;\n \n             CValidationState state;\n-            BOOST_CHECK_MESSAGE(CheckTransaction(tx, state), strTest);\n+            BOOST_CHECK_MESSAGE(CBlockchain::CheckTransaction(tx, state), strTest);\n             BOOST_CHECK(state.IsValid());\n \n             for (unsigned int i = 0; i < tx.vin.size(); i++)\n@@ -213,7 +214,7 @@ BOOST_AUTO_TEST_CASE(tx_invalid)\n             stream >> tx;\n \n             CValidationState state;\n-            fValid = CheckTransaction(tx, state) && state.IsValid();\n+            fValid = CBlockchain::CheckTransaction(tx, state) && state.IsValid();\n \n             for (unsigned int i = 0; i < tx.vin.size() && fValid; i++)\n             {\n@@ -242,11 +243,11 @@ BOOST_AUTO_TEST_CASE(basic_transaction_tests)\n     CMutableTransaction tx;\n     stream >> tx;\n     CValidationState state;\n-    BOOST_CHECK_MESSAGE(CheckTransaction(tx, state) && state.IsValid(), \"Simple deserialized transaction should be valid.\");\n+    BOOST_CHECK_MESSAGE(CBlockchain::CheckTransaction(tx, state) && state.IsValid(), \"Simple deserialized transaction should be valid.\");\n \n     // Check that duplicate txins fail\n     tx.vin.push_back(tx.vin[0]);\n-    BOOST_CHECK_MESSAGE(!CheckTransaction(tx, state) || !state.IsValid(), \"Transaction with duplicate txins should be invalid.\");\n+    BOOST_CHECK_MESSAGE(!CBlockchain::CheckTransaction(tx, state) || !state.IsValid(), \"Transaction with duplicate txins should be invalid.\");\n }\n \n //"
      },
      {
        "sha": "76838f77d160830eedc4bac4a6f7f71ea96577d4",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/942a84727b7fd454110962f0a9a7ec8ff1364ff5/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "patch": "@@ -6,8 +6,8 @@\n #include \"wallet/walletdb.h\"\n \n #include \"base58.h\"\n+#include \"blockchain.h\"\n #include \"consensus/validation.h\"\n-#include \"main.h\" // For CheckTransaction\n #include \"protocol.h\"\n #include \"serialize.h\"\n #include \"sync.h\"\n@@ -374,7 +374,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             CWalletTx wtx;\n             ssValue >> wtx;\n             CValidationState state;\n-            if (!(CheckTransaction(wtx, state) && (wtx.GetHash() == hash) && state.IsValid()))\n+            if (!(CBlockchain::CheckTransaction(wtx, state) && (wtx.GetHash() == hash) && state.IsValid()))\n                 return false;\n \n             // Undo serialize changes in 31600"
      }
    ]
  },
  {
    "sha": "6687fdd8fbd358b3b1a887ce98430df8fae28b00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Njg3ZmRkOGZiZDM1OGIzYjFhODg3Y2U5ODQzMGRmOGZhZTI4YjAw",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-24T14:56:35Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-24T14:56:35Z"
      },
      "message": "Introduce pure CBlockchain::CheckBlockHeader method.",
      "tree": {
        "sha": "a011e9ba15957770cf8c27ca3d152a618f88a668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a011e9ba15957770cf8c27ca3d152a618f88a668"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6687fdd8fbd358b3b1a887ce98430df8fae28b00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6687fdd8fbd358b3b1a887ce98430df8fae28b00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6687fdd8fbd358b3b1a887ce98430df8fae28b00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6687fdd8fbd358b3b1a887ce98430df8fae28b00/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/942a84727b7fd454110962f0a9a7ec8ff1364ff5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/942a84727b7fd454110962f0a9a7ec8ff1364ff5"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f495429046ca089a67438b404a64222b64c756d7",
        "filename": "src/blockchain.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6687fdd8fbd358b3b1a887ce98430df8fae28b00/src/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6687fdd8fbd358b3b1a887ce98430df8fae28b00/src/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.cpp?ref=6687fdd8fbd358b3b1a887ce98430df8fae28b00",
        "patch": "@@ -45,12 +45,16 @@\n #include <boost/thread.hpp>\n \n bool CBlockchain::CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW) {\n+    return CheckBlockHeader(Params(), block, state, GetAdjustedTime(), fCheckPOW);\n+}\n+\n+bool CBlockchain::CheckBlockHeader(const CChainParams chainParams, const CBlockHeader& block, CValidationState& state, int64_t nAdjustedTime, bool fCheckPOW) {\n     // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, Params().GetConsensus()))\n+    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, chainParams.GetConsensus()))\n         return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n \n     // Check timestamp\n-    if (block.GetBlockTime() > GetAdjustedTime() + 2 * 60 * 60)\n+    if (block.GetBlockTime() > nAdjustedTime + 2 * 60 * 60)\n         return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n \n     return true;"
      },
      {
        "sha": "09f18aea4b21e048cb7eda8da2fceb61353fadf5",
        "filename": "src/blockchain.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6687fdd8fbd358b3b1a887ce98430df8fae28b00/src/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6687fdd8fbd358b3b1a887ce98430df8fae28b00/src/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockchain.h?ref=6687fdd8fbd358b3b1a887ce98430df8fae28b00",
        "patch": "@@ -6,10 +6,13 @@\n #ifndef BITCOIN_BLOCKCHAIN_H\n #define BITCOIN_BLOCKCHAIN_H\n \n+#include \"chainparams.h\"\n #include \"consensus/validation.h\"\n #include \"primitives/block.h\"\n \n class CBlockchain {\n+protected:\n+    static bool CheckBlockHeader(const CChainParams chainParams, const CBlockHeader& block, CValidationState& state, int64_t nAdjustedTime, bool fCheckPOW = true);\n public:\n     /** Context-independent validity checks */\n     static bool CheckTransaction(const CTransaction& tx, CValidationState& state);"
      }
    ]
  }
]