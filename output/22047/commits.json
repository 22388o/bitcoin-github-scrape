[
  {
    "sha": "8ea8c927ac05980d6a81252e40b7444e9abb74f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWE4YzkyN2FjMDU5ODBkNmE4MTI1MmU0MGI3NDQ0ZTlhYmI3NGY5",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-05-23T22:46:08Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-05-24T16:55:06Z"
      },
      "message": "index: Avoid unnecessary type casts in coinstatsindex",
      "tree": {
        "sha": "1a75aec3117f85172470f49ccb3cf9039f7c5418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a75aec3117f85172470f49ccb3cf9039f7c5418"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ea8c927ac05980d6a81252e40b7444e9abb74f9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmCr2moVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNV24P/0IsURXkjQ2/syJpWH5gTOE44sNp\n+8SXBGDddQOgPkX6DfGdE5qgWJUWw8mx7idVpwfCzIZcabwAh/9rz++qJA5zlYkz\n3u3WMSttfHMJxOXFinXd0dCKoLPTEbPodvW5eY1gOjB6N08BXuFHWg5cVbbZjObL\nPiMymVVYnSPdFjA9/vKjqBJf7qITXByS9Ut0e2vfuOOJjRnM0ihYdyuzpBD36gFL\nUEuQKnBHWq0369W11NBj6uhPggv5B8XqC6dztLsW4MVFLhu0dEk6eHIhmABbIxZk\n0zs0YT931rBHXesTauDrD3HDWxZasJXT+nMhL9NbQyv4f56AbRTY5uu/0E4loIRi\nerX8CsYij2xwdZ3LImiAooqgcWbtg3R5f2kltcibSgr73w05WjAMG3PE3DE6xdDj\n/yGHh3kpFemo0m2ES+hVCpHHrscaAR0NwJRKroFnDnzTJm2boKl/bKiWWGOhUUYO\nnNNyJKOt2AREiF8Z9LkZrTP/YJ0dqzEtem1Cw/wOPgnum5yG9kTC5XH/cutfWvt9\n0Klvtoa0ojkwDMJwU3hN6oYufYsNTDEgLcuKgu9gULJ4kSeUSzvaGUMda4nbkLHq\nlWAiLjsWE3qtY/l7Ju/KmullWo1a8ZUW6bCVnp3qWxucIoI7zZvK+GCa4/K/sDOp\nCxCgNK9yBwbOVFP3\n=swEo\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a75aec3117f85172470f49ccb3cf9039f7c5418\nparent b295395664bd37e26d168c329f238237b34aef8c\nauthor Fabian Jahr <fjahr@protonmail.com> 1621809968 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1621875306 +0200\n\nindex: Avoid unnecessary type casts in coinstatsindex\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ea8c927ac05980d6a81252e40b7444e9abb74f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ea8c927ac05980d6a81252e40b7444e9abb74f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ea8c927ac05980d6a81252e40b7444e9abb74f9/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b295395664bd37e26d168c329f238237b34aef8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b295395664bd37e26d168c329f238237b34aef8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b295395664bd37e26d168c329f238237b34aef8c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5e3f7602c859b6d9042053c726732403fa9198bd",
        "filename": "src/index/coinstatsindex.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ea8c927ac05980d6a81252e40b7444e9abb74f9/src/index/coinstatsindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ea8c927ac05980d6a81252e40b7444e9abb74f9/src/index/coinstatsindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.cpp?ref=8ea8c927ac05980d6a81252e40b7444e9abb74f9",
        "patch": "@@ -143,10 +143,10 @@ bool CoinStatsIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n                 continue;\n             }\n \n-            for (size_t j = 0; j < tx->vout.size(); ++j) {\n+            for (uint32_t j = 0; j < tx->vout.size(); ++j) {\n                 const CTxOut& out{tx->vout[j]};\n                 Coin coin{out, pindex->nHeight, tx->IsCoinBase()};\n-                COutPoint outpoint{tx->GetHash(), static_cast<uint32_t>(j)};\n+                COutPoint outpoint{tx->GetHash(), j};\n \n                 // Skip unspendable coins\n                 if (coin.out.scriptPubKey.IsUnspendable()) {\n@@ -402,9 +402,9 @@ bool CoinStatsIndex::ReverseBlock(const CBlock& block, const CBlockIndex* pindex\n     for (size_t i = 0; i < block.vtx.size(); ++i) {\n         const auto& tx{block.vtx.at(i)};\n \n-        for (size_t j = 0; j < tx->vout.size(); ++j) {\n+        for (uint32_t j = 0; j < tx->vout.size(); ++j) {\n             const CTxOut& out{tx->vout[j]};\n-            COutPoint outpoint{tx->GetHash(), static_cast<uint32_t>(j)};\n+            COutPoint outpoint{tx->GetHash(), j};\n             Coin coin{out, pindex->nHeight, tx->IsCoinBase()};\n \n             // Skip unspendable coins"
      }
    ]
  },
  {
    "sha": "fb65dde147f63422c4148b089c2f5be0bf5ba80f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjY1ZGRlMTQ3ZjYzNDIyYzQxNDhiMDg5YzJmNWJlMGJmNWJhODBm",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-06-02T23:31:47Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-06-02T23:48:24Z"
      },
      "message": "scripted-diff: Fix coinstats data member names\n\nInitially these values were 'per block' in an earlier version but were then changed to total values. The names were not updated to reflect that.\n\n-BEGIN VERIFY SCRIPT-\ns() { git grep -l \"$1\" src | xargs sed -i \"s/$1/$2/g\"; }\n\ns 'm_block_unspendable_amount'              'm_total_unspendable_amount'\ns 'm_block_prevout_spent_amount'            'm_total_prevout_spent_amount'\ns 'm_block_new_outputs_ex_coinbase_amount'  'm_total_new_outputs_ex_coinbase_amount'\ns 'm_block_coinbase_amount'                 'm_total_coinbase_amount'\ns 'block_unspendable_amount'                'total_unspendable_amount'\ns 'block_prevout_spent_amount'              'total_prevout_spent_amount'\ns 'block_new_outputs_ex_coinbase_amount'    'total_new_outputs_ex_coinbase_amount'\ns 'block_coinbase_amount'                   'total_coinbase_amount'\n\ns 'unspendables_genesis_block'              'total_unspendables_genesis_block'\ns 'unspendables_bip30'                      'total_unspendables_bip30'\ns 'unspendables_scripts'                    'total_unspendables_scripts'\ns 'unspendables_unclaimed_rewards'          'total_unspendables_unclaimed_rewards'\ns 'm_unspendables_genesis_block'            'm_total_unspendables_genesis_block'\ns 'm_unspendables_bip30'                    'm_total_unspendables_bip30'\ns 'm_unspendables_scripts'                  'm_total_unspendables_scripts'\ns 'm_unspendables_unclaimed_rewards'        'm_total_unspendables_unclaimed_rewards'\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "3e82166d8e079cb1c3f9e17a9b4ad3ca17e913a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e82166d8e079cb1c3f9e17a9b4ad3ca17e913a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb65dde147f63422c4148b089c2f5be0bf5ba80f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJIBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmC4GSYVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNTxIP9jFP8cKrLpDWqEkyZSGvRms8uBBB\nquP0+9QNQnD2rGQbInNmKFpm110u5slLNwz6lBoUoAtpdsP376u/GHf8DdqMS8rA\n6ub6ACdbQauLYraNOtl5Lzz6SH/xXkh8DHsNf5qKMflwHxdy6QhZUHBn0mvIE11F\nkhjemFxixj7W2ENbLoywwp/fsmB4kOHmQn6VKwHfXnpbJ1PyUwsSmiMFSOalFCKZ\n6XIdc9kNKMR/O7jw/BazhzEigZFQuMqoWEeFnR80dinV0U6jXDt/liqhC/GMVeKk\n6Qw5BCog6oNn8YTxauhunC2U6LkcdRC2ODdTtjaBWa5jGRknltNqNFUHhahojxib\nTQ2lDXV2a5Ooyu20VhJjQ4Vtej8E1A7ujXfjs70e6RxyFPFBkdgDlbm24rs38DUZ\nEtXn4IqeTJwRPEQtI77qjxZI5OuNFtLiSMJ+r1rOLMytHhc/YuWUk0vU06pi1nhz\nwbXiok62/rxBaP7nCMqkiVKVvK3gDhefDCNf861WTcDeFeyEgRP7dkTS0Pzcjkyg\nXEsviVKpLmRRAnK5qI/XREQHshhY03VbaogGiVDQ0dR4kFcToic3iOC0w4m5SKqa\n3rS/9keWlryc0ZeATBKwEmwFCHjyC7Fq+Tsgcczx2XtDHoMUVq1C08jjJ04p26IY\nZ30M/R8ooWgfANk=\n=P48B\n-----END PGP SIGNATURE-----",
        "payload": "tree 3e82166d8e079cb1c3f9e17a9b4ad3ca17e913a7\nparent 8ea8c927ac05980d6a81252e40b7444e9abb74f9\nauthor Fabian Jahr <fjahr@protonmail.com> 1622676707 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1622677704 +0200\n\nscripted-diff: Fix coinstats data member names\n\nInitially these values were 'per block' in an earlier version but were then changed to total values. The names were not updated to reflect that.\n\n-BEGIN VERIFY SCRIPT-\ns() { git grep -l \"$1\" src | xargs sed -i \"s/$1/$2/g\"; }\n\ns 'm_block_unspendable_amount'              'm_total_unspendable_amount'\ns 'm_block_prevout_spent_amount'            'm_total_prevout_spent_amount'\ns 'm_block_new_outputs_ex_coinbase_amount'  'm_total_new_outputs_ex_coinbase_amount'\ns 'm_block_coinbase_amount'                 'm_total_coinbase_amount'\ns 'block_unspendable_amount'                'total_unspendable_amount'\ns 'block_prevout_spent_amount'              'total_prevout_spent_amount'\ns 'block_new_outputs_ex_coinbase_amount'    'total_new_outputs_ex_coinbase_amount'\ns 'block_coinbase_amount'                   'total_coinbase_amount'\n\ns 'unspendables_genesis_block'              'total_unspendables_genesis_block'\ns 'unspendables_bip30'                      'total_unspendables_bip30'\ns 'unspendables_scripts'                    'total_unspendables_scripts'\ns 'unspendables_unclaimed_rewards'          'total_unspendables_unclaimed_rewards'\ns 'm_unspendables_genesis_block'            'm_total_unspendables_genesis_block'\ns 'm_unspendables_bip30'                    'm_total_unspendables_bip30'\ns 'm_unspendables_scripts'                  'm_total_unspendables_scripts'\ns 'm_unspendables_unclaimed_rewards'        'm_total_unspendables_unclaimed_rewards'\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb65dde147f63422c4148b089c2f5be0bf5ba80f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb65dde147f63422c4148b089c2f5be0bf5ba80f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb65dde147f63422c4148b089c2f5be0bf5ba80f/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ea8c927ac05980d6a81252e40b7444e9abb74f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ea8c927ac05980d6a81252e40b7444e9abb74f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ea8c927ac05980d6a81252e40b7444e9abb74f9"
      }
    ],
    "stats": {
      "total": 186,
      "additions": 93,
      "deletions": 93
    },
    "files": [
      {
        "sha": "cb940234e20dfe6a932ac4a56517960edfbedb2b",
        "filename": "src/index/coinstatsindex.cpp",
        "status": "modified",
        "additions": 68,
        "deletions": 68,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/index/coinstatsindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/index/coinstatsindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.cpp?ref=fb65dde147f63422c4148b089c2f5be0bf5ba80f",
        "patch": "@@ -24,14 +24,14 @@ struct DBVal {\n     uint64_t bogo_size;\n     CAmount total_amount;\n     CAmount total_subsidy;\n-    CAmount block_unspendable_amount;\n-    CAmount block_prevout_spent_amount;\n-    CAmount block_new_outputs_ex_coinbase_amount;\n-    CAmount block_coinbase_amount;\n-    CAmount unspendables_genesis_block;\n-    CAmount unspendables_bip30;\n-    CAmount unspendables_scripts;\n-    CAmount unspendables_unclaimed_rewards;\n+    CAmount total_unspendable_amount;\n+    CAmount total_prevout_spent_amount;\n+    CAmount total_new_outputs_ex_coinbase_amount;\n+    CAmount total_coinbase_amount;\n+    CAmount total_unspendables_genesis_block;\n+    CAmount total_unspendables_bip30;\n+    CAmount total_unspendables_scripts;\n+    CAmount total_unspendables_unclaimed_rewards;\n \n     SERIALIZE_METHODS(DBVal, obj)\n     {\n@@ -40,14 +40,14 @@ struct DBVal {\n         READWRITE(obj.bogo_size);\n         READWRITE(obj.total_amount);\n         READWRITE(obj.total_subsidy);\n-        READWRITE(obj.block_unspendable_amount);\n-        READWRITE(obj.block_prevout_spent_amount);\n-        READWRITE(obj.block_new_outputs_ex_coinbase_amount);\n-        READWRITE(obj.block_coinbase_amount);\n-        READWRITE(obj.unspendables_genesis_block);\n-        READWRITE(obj.unspendables_bip30);\n-        READWRITE(obj.unspendables_scripts);\n-        READWRITE(obj.unspendables_unclaimed_rewards);\n+        READWRITE(obj.total_unspendable_amount);\n+        READWRITE(obj.total_prevout_spent_amount);\n+        READWRITE(obj.total_new_outputs_ex_coinbase_amount);\n+        READWRITE(obj.total_coinbase_amount);\n+        READWRITE(obj.total_unspendables_genesis_block);\n+        READWRITE(obj.total_unspendables_bip30);\n+        READWRITE(obj.total_unspendables_scripts);\n+        READWRITE(obj.total_unspendables_unclaimed_rewards);\n     }\n };\n \n@@ -138,8 +138,8 @@ bool CoinStatsIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n \n             // Skip duplicate txid coinbase transactions (BIP30).\n             if (is_bip30_block && tx->IsCoinBase()) {\n-                m_block_unspendable_amount += block_subsidy;\n-                m_unspendables_bip30 += block_subsidy;\n+                m_total_unspendable_amount += block_subsidy;\n+                m_total_unspendables_bip30 += block_subsidy;\n                 continue;\n             }\n \n@@ -150,17 +150,17 @@ bool CoinStatsIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n \n                 // Skip unspendable coins\n                 if (coin.out.scriptPubKey.IsUnspendable()) {\n-                    m_block_unspendable_amount += coin.out.nValue;\n-                    m_unspendables_scripts += coin.out.nValue;\n+                    m_total_unspendable_amount += coin.out.nValue;\n+                    m_total_unspendables_scripts += coin.out.nValue;\n                     continue;\n                 }\n \n                 m_muhash.Insert(MakeUCharSpan(TxOutSer(outpoint, coin)));\n \n                 if (tx->IsCoinBase()) {\n-                    m_block_coinbase_amount += coin.out.nValue;\n+                    m_total_coinbase_amount += coin.out.nValue;\n                 } else {\n-                    m_block_new_outputs_ex_coinbase_amount += coin.out.nValue;\n+                    m_total_new_outputs_ex_coinbase_amount += coin.out.nValue;\n                 }\n \n                 ++m_transaction_output_count;\n@@ -178,7 +178,7 @@ bool CoinStatsIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n \n                     m_muhash.Remove(MakeUCharSpan(TxOutSer(outpoint, coin)));\n \n-                    m_block_prevout_spent_amount += coin.out.nValue;\n+                    m_total_prevout_spent_amount += coin.out.nValue;\n \n                     --m_transaction_output_count;\n                     m_total_amount -= coin.out.nValue;\n@@ -188,32 +188,32 @@ bool CoinStatsIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n         }\n     } else {\n         // genesis block\n-        m_block_unspendable_amount += block_subsidy;\n-        m_unspendables_genesis_block += block_subsidy;\n+        m_total_unspendable_amount += block_subsidy;\n+        m_total_unspendables_genesis_block += block_subsidy;\n     }\n \n     // If spent prevouts + block subsidy are still a higher amount than\n     // new outputs + coinbase + current unspendable amount this means\n     // the miner did not claim the full block reward. Unclaimed block\n     // rewards are also unspendable.\n-    const CAmount unclaimed_rewards{(m_block_prevout_spent_amount + m_total_subsidy) - (m_block_new_outputs_ex_coinbase_amount + m_block_coinbase_amount + m_block_unspendable_amount)};\n-    m_block_unspendable_amount += unclaimed_rewards;\n-    m_unspendables_unclaimed_rewards += unclaimed_rewards;\n+    const CAmount unclaimed_rewards{(m_total_prevout_spent_amount + m_total_subsidy) - (m_total_new_outputs_ex_coinbase_amount + m_total_coinbase_amount + m_total_unspendable_amount)};\n+    m_total_unspendable_amount += unclaimed_rewards;\n+    m_total_unspendables_unclaimed_rewards += unclaimed_rewards;\n \n     std::pair<uint256, DBVal> value;\n     value.first = pindex->GetBlockHash();\n     value.second.transaction_output_count = m_transaction_output_count;\n     value.second.bogo_size = m_bogo_size;\n     value.second.total_amount = m_total_amount;\n     value.second.total_subsidy = m_total_subsidy;\n-    value.second.block_unspendable_amount = m_block_unspendable_amount;\n-    value.second.block_prevout_spent_amount = m_block_prevout_spent_amount;\n-    value.second.block_new_outputs_ex_coinbase_amount = m_block_new_outputs_ex_coinbase_amount;\n-    value.second.block_coinbase_amount = m_block_coinbase_amount;\n-    value.second.unspendables_genesis_block = m_unspendables_genesis_block;\n-    value.second.unspendables_bip30 = m_unspendables_bip30;\n-    value.second.unspendables_scripts = m_unspendables_scripts;\n-    value.second.unspendables_unclaimed_rewards = m_unspendables_unclaimed_rewards;\n+    value.second.total_unspendable_amount = m_total_unspendable_amount;\n+    value.second.total_prevout_spent_amount = m_total_prevout_spent_amount;\n+    value.second.total_new_outputs_ex_coinbase_amount = m_total_new_outputs_ex_coinbase_amount;\n+    value.second.total_coinbase_amount = m_total_coinbase_amount;\n+    value.second.total_unspendables_genesis_block = m_total_unspendables_genesis_block;\n+    value.second.total_unspendables_bip30 = m_total_unspendables_bip30;\n+    value.second.total_unspendables_scripts = m_total_unspendables_scripts;\n+    value.second.total_unspendables_unclaimed_rewards = m_total_unspendables_unclaimed_rewards;\n \n     uint256 out;\n     m_muhash.Finalize(out);\n@@ -317,14 +317,14 @@ bool CoinStatsIndex::LookUpStats(const CBlockIndex* block_index, CCoinsStats& co\n     coins_stats.nBogoSize = entry.bogo_size;\n     coins_stats.nTotalAmount = entry.total_amount;\n     coins_stats.total_subsidy = entry.total_subsidy;\n-    coins_stats.block_unspendable_amount = entry.block_unspendable_amount;\n-    coins_stats.block_prevout_spent_amount = entry.block_prevout_spent_amount;\n-    coins_stats.block_new_outputs_ex_coinbase_amount = entry.block_new_outputs_ex_coinbase_amount;\n-    coins_stats.block_coinbase_amount = entry.block_coinbase_amount;\n-    coins_stats.unspendables_genesis_block = entry.unspendables_genesis_block;\n-    coins_stats.unspendables_bip30 = entry.unspendables_bip30;\n-    coins_stats.unspendables_scripts = entry.unspendables_scripts;\n-    coins_stats.unspendables_unclaimed_rewards = entry.unspendables_unclaimed_rewards;\n+    coins_stats.total_unspendable_amount = entry.total_unspendable_amount;\n+    coins_stats.total_prevout_spent_amount = entry.total_prevout_spent_amount;\n+    coins_stats.total_new_outputs_ex_coinbase_amount = entry.total_new_outputs_ex_coinbase_amount;\n+    coins_stats.total_coinbase_amount = entry.total_coinbase_amount;\n+    coins_stats.total_unspendables_genesis_block = entry.total_unspendables_genesis_block;\n+    coins_stats.total_unspendables_bip30 = entry.total_unspendables_bip30;\n+    coins_stats.total_unspendables_scripts = entry.total_unspendables_scripts;\n+    coins_stats.total_unspendables_unclaimed_rewards = entry.total_unspendables_unclaimed_rewards;\n \n     return true;\n }\n@@ -354,14 +354,14 @@ bool CoinStatsIndex::Init()\n             m_bogo_size = entry.bogo_size;\n             m_total_amount = entry.total_amount;\n             m_total_subsidy = entry.total_subsidy;\n-            m_block_unspendable_amount = entry.block_unspendable_amount;\n-            m_block_prevout_spent_amount = entry.block_prevout_spent_amount;\n-            m_block_new_outputs_ex_coinbase_amount = entry.block_new_outputs_ex_coinbase_amount;\n-            m_block_coinbase_amount = entry.block_coinbase_amount;\n-            m_unspendables_genesis_block = entry.unspendables_genesis_block;\n-            m_unspendables_bip30 = entry.unspendables_bip30;\n-            m_unspendables_scripts = entry.unspendables_scripts;\n-            m_unspendables_unclaimed_rewards = entry.unspendables_unclaimed_rewards;\n+            m_total_unspendable_amount = entry.total_unspendable_amount;\n+            m_total_prevout_spent_amount = entry.total_prevout_spent_amount;\n+            m_total_new_outputs_ex_coinbase_amount = entry.total_new_outputs_ex_coinbase_amount;\n+            m_total_coinbase_amount = entry.total_coinbase_amount;\n+            m_total_unspendables_genesis_block = entry.total_unspendables_genesis_block;\n+            m_total_unspendables_bip30 = entry.total_unspendables_bip30;\n+            m_total_unspendables_scripts = entry.total_unspendables_scripts;\n+            m_total_unspendables_unclaimed_rewards = entry.total_unspendables_unclaimed_rewards;\n         }\n \n         return true;\n@@ -409,17 +409,17 @@ bool CoinStatsIndex::ReverseBlock(const CBlock& block, const CBlockIndex* pindex\n \n             // Skip unspendable coins\n             if (coin.out.scriptPubKey.IsUnspendable()) {\n-                m_block_unspendable_amount -= coin.out.nValue;\n-                m_unspendables_scripts -= coin.out.nValue;\n+                m_total_unspendable_amount -= coin.out.nValue;\n+                m_total_unspendables_scripts -= coin.out.nValue;\n                 continue;\n             }\n \n             m_muhash.Remove(MakeUCharSpan(TxOutSer(outpoint, coin)));\n \n             if (tx->IsCoinBase()) {\n-                m_block_coinbase_amount -= coin.out.nValue;\n+                m_total_coinbase_amount -= coin.out.nValue;\n             } else {\n-                m_block_new_outputs_ex_coinbase_amount -= coin.out.nValue;\n+                m_total_new_outputs_ex_coinbase_amount -= coin.out.nValue;\n             }\n \n             --m_transaction_output_count;\n@@ -437,7 +437,7 @@ bool CoinStatsIndex::ReverseBlock(const CBlock& block, const CBlockIndex* pindex\n \n                 m_muhash.Insert(MakeUCharSpan(TxOutSer(outpoint, coin)));\n \n-                m_block_prevout_spent_amount -= coin.out.nValue;\n+                m_total_prevout_spent_amount -= coin.out.nValue;\n \n                 m_transaction_output_count++;\n                 m_total_amount += coin.out.nValue;\n@@ -446,9 +446,9 @@ bool CoinStatsIndex::ReverseBlock(const CBlock& block, const CBlockIndex* pindex\n         }\n     }\n \n-    const CAmount unclaimed_rewards{(m_block_new_outputs_ex_coinbase_amount + m_block_coinbase_amount + m_block_unspendable_amount) - (m_block_prevout_spent_amount + m_total_subsidy)};\n-    m_block_unspendable_amount -= unclaimed_rewards;\n-    m_unspendables_unclaimed_rewards -= unclaimed_rewards;\n+    const CAmount unclaimed_rewards{(m_total_new_outputs_ex_coinbase_amount + m_total_coinbase_amount + m_total_unspendable_amount) - (m_total_prevout_spent_amount + m_total_subsidy)};\n+    m_total_unspendable_amount -= unclaimed_rewards;\n+    m_total_unspendables_unclaimed_rewards -= unclaimed_rewards;\n \n     // Check that the rolled back internal values are consistent with the DB read out\n     uint256 out;\n@@ -459,14 +459,14 @@ bool CoinStatsIndex::ReverseBlock(const CBlock& block, const CBlockIndex* pindex\n     Assert(m_total_amount == read_out.second.total_amount);\n     Assert(m_bogo_size == read_out.second.bogo_size);\n     Assert(m_total_subsidy == read_out.second.total_subsidy);\n-    Assert(m_block_unspendable_amount == read_out.second.block_unspendable_amount);\n-    Assert(m_block_prevout_spent_amount == read_out.second.block_prevout_spent_amount);\n-    Assert(m_block_new_outputs_ex_coinbase_amount == read_out.second.block_new_outputs_ex_coinbase_amount);\n-    Assert(m_block_coinbase_amount == read_out.second.block_coinbase_amount);\n-    Assert(m_unspendables_genesis_block == read_out.second.unspendables_genesis_block);\n-    Assert(m_unspendables_bip30 == read_out.second.unspendables_bip30);\n-    Assert(m_unspendables_scripts == read_out.second.unspendables_scripts);\n-    Assert(m_unspendables_unclaimed_rewards == read_out.second.unspendables_unclaimed_rewards);\n+    Assert(m_total_unspendable_amount == read_out.second.total_unspendable_amount);\n+    Assert(m_total_prevout_spent_amount == read_out.second.total_prevout_spent_amount);\n+    Assert(m_total_new_outputs_ex_coinbase_amount == read_out.second.total_new_outputs_ex_coinbase_amount);\n+    Assert(m_total_coinbase_amount == read_out.second.total_coinbase_amount);\n+    Assert(m_total_unspendables_genesis_block == read_out.second.total_unspendables_genesis_block);\n+    Assert(m_total_unspendables_bip30 == read_out.second.total_unspendables_bip30);\n+    Assert(m_total_unspendables_scripts == read_out.second.total_unspendables_scripts);\n+    Assert(m_total_unspendables_unclaimed_rewards == read_out.second.total_unspendables_unclaimed_rewards);\n \n     return m_db->Write(DB_MUHASH, m_muhash);\n }"
      },
      {
        "sha": "a575b37c7c48f32a5b4076e773c9b667d18bd47f",
        "filename": "src/index/coinstatsindex.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/index/coinstatsindex.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/index/coinstatsindex.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.h?ref=fb65dde147f63422c4148b089c2f5be0bf5ba80f",
        "patch": "@@ -25,14 +25,14 @@ class CoinStatsIndex final : public BaseIndex\n     uint64_t m_bogo_size{0};\n     CAmount m_total_amount{0};\n     CAmount m_total_subsidy{0};\n-    CAmount m_block_unspendable_amount{0};\n-    CAmount m_block_prevout_spent_amount{0};\n-    CAmount m_block_new_outputs_ex_coinbase_amount{0};\n-    CAmount m_block_coinbase_amount{0};\n-    CAmount m_unspendables_genesis_block{0};\n-    CAmount m_unspendables_bip30{0};\n-    CAmount m_unspendables_scripts{0};\n-    CAmount m_unspendables_unclaimed_rewards{0};\n+    CAmount m_total_unspendable_amount{0};\n+    CAmount m_total_prevout_spent_amount{0};\n+    CAmount m_total_new_outputs_ex_coinbase_amount{0};\n+    CAmount m_total_coinbase_amount{0};\n+    CAmount m_total_unspendables_genesis_block{0};\n+    CAmount m_total_unspendables_bip30{0};\n+    CAmount m_total_unspendables_scripts{0};\n+    CAmount m_total_unspendables_unclaimed_rewards{0};\n \n     bool ReverseBlock(const CBlock& block, const CBlockIndex* pindex);\n "
      },
      {
        "sha": "ae2e46e4d9bf39a13b0dee80e3701409f0c7a3e9",
        "filename": "src/node/coinstats.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/node/coinstats.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/node/coinstats.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.h?ref=fb65dde147f63422c4148b089c2f5be0bf5ba80f",
        "patch": "@@ -46,14 +46,14 @@ struct CCoinsStats\n \n     // Following values are only available from coinstats index\n     CAmount total_subsidy{0};\n-    CAmount block_unspendable_amount{0};\n-    CAmount block_prevout_spent_amount{0};\n-    CAmount block_new_outputs_ex_coinbase_amount{0};\n-    CAmount block_coinbase_amount{0};\n-    CAmount unspendables_genesis_block{0};\n-    CAmount unspendables_bip30{0};\n-    CAmount unspendables_scripts{0};\n-    CAmount unspendables_unclaimed_rewards{0};\n+    CAmount total_unspendable_amount{0};\n+    CAmount total_prevout_spent_amount{0};\n+    CAmount total_new_outputs_ex_coinbase_amount{0};\n+    CAmount total_coinbase_amount{0};\n+    CAmount total_unspendables_genesis_block{0};\n+    CAmount total_unspendables_bip30{0};\n+    CAmount total_unspendables_scripts{0};\n+    CAmount total_unspendables_unclaimed_rewards{0};\n \n     CCoinsStats(CoinStatsHashType hash_type) : m_hash_type(hash_type) {}\n };"
      },
      {
        "sha": "ee2f5a549bcbd5f62ccf0fdd8dac6060355dad1d",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb65dde147f63422c4148b089c2f5be0bf5ba80f/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fb65dde147f63422c4148b089c2f5be0bf5ba80f",
        "patch": "@@ -1191,7 +1191,7 @@ static RPCHelpMan gettxoutsetinfo()\n             ret.pushKV(\"transactions\", static_cast<int64_t>(stats.nTransactions));\n             ret.pushKV(\"disk_size\", stats.nDiskSize);\n         } else {\n-            ret.pushKV(\"total_unspendable_amount\", ValueFromAmount(stats.block_unspendable_amount));\n+            ret.pushKV(\"total_unspendable_amount\", ValueFromAmount(stats.total_unspendable_amount));\n \n             CCoinsStats prev_stats{hash_type};\n \n@@ -1200,16 +1200,16 @@ static RPCHelpMan gettxoutsetinfo()\n             }\n \n             UniValue block_info(UniValue::VOBJ);\n-            block_info.pushKV(\"prevout_spent\", ValueFromAmount(stats.block_prevout_spent_amount - prev_stats.block_prevout_spent_amount));\n-            block_info.pushKV(\"coinbase\", ValueFromAmount(stats.block_coinbase_amount - prev_stats.block_coinbase_amount));\n-            block_info.pushKV(\"new_outputs_ex_coinbase\", ValueFromAmount(stats.block_new_outputs_ex_coinbase_amount - prev_stats.block_new_outputs_ex_coinbase_amount));\n-            block_info.pushKV(\"unspendable\", ValueFromAmount(stats.block_unspendable_amount - prev_stats.block_unspendable_amount));\n+            block_info.pushKV(\"prevout_spent\", ValueFromAmount(stats.total_prevout_spent_amount - prev_stats.total_prevout_spent_amount));\n+            block_info.pushKV(\"coinbase\", ValueFromAmount(stats.total_coinbase_amount - prev_stats.total_coinbase_amount));\n+            block_info.pushKV(\"new_outputs_ex_coinbase\", ValueFromAmount(stats.total_new_outputs_ex_coinbase_amount - prev_stats.total_new_outputs_ex_coinbase_amount));\n+            block_info.pushKV(\"unspendable\", ValueFromAmount(stats.total_unspendable_amount - prev_stats.total_unspendable_amount));\n \n             UniValue unspendables(UniValue::VOBJ);\n-            unspendables.pushKV(\"genesis_block\", ValueFromAmount(stats.unspendables_genesis_block - prev_stats.unspendables_genesis_block));\n-            unspendables.pushKV(\"bip30\", ValueFromAmount(stats.unspendables_bip30 - prev_stats.unspendables_bip30));\n-            unspendables.pushKV(\"scripts\", ValueFromAmount(stats.unspendables_scripts - prev_stats.unspendables_scripts));\n-            unspendables.pushKV(\"unclaimed_rewards\", ValueFromAmount(stats.unspendables_unclaimed_rewards - prev_stats.unspendables_unclaimed_rewards));\n+            unspendables.pushKV(\"genesis_block\", ValueFromAmount(stats.total_unspendables_genesis_block - prev_stats.total_unspendables_genesis_block));\n+            unspendables.pushKV(\"bip30\", ValueFromAmount(stats.total_unspendables_bip30 - prev_stats.total_unspendables_bip30));\n+            unspendables.pushKV(\"scripts\", ValueFromAmount(stats.total_unspendables_scripts - prev_stats.total_unspendables_scripts));\n+            unspendables.pushKV(\"unclaimed_rewards\", ValueFromAmount(stats.total_unspendables_unclaimed_rewards - prev_stats.total_unspendables_unclaimed_rewards));\n             block_info.pushKV(\"unspendables\", unspendables);\n \n             ret.pushKV(\"block_info\", block_info);"
      }
    ]
  },
  {
    "sha": "1e3842385b8c0d15086c7cd8736f8c67e6c0c285",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTM4NDIzODViOGMwZDE1MDg2YzdjZDg3MzZmOGM2N2U2YzBjMjg1",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-05-23T23:18:51Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-06-02T23:49:59Z"
      },
      "message": "index: Use batch writing in coinstatsindex WriteBlock",
      "tree": {
        "sha": "f328e73e233bb4a6301f52149adeac05245fb28b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f328e73e233bb4a6301f52149adeac05245fb28b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e3842385b8c0d15086c7cd8736f8c67e6c0c285",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmC4GScVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNuM0P/RQEl6oc/mowzFOBGSLmU30rtNgF\ngcNXxToNcKx/93Ew1NUiWDLJEKPCnSDQsKAPVZJZaBz5IcGWcQuOahpf8wMX0+BH\n07CvgdD5mqdLiQ6ANUhwDJ6jOkooSqNfHPslGnzIztDdtGwLUMqniqSAyP0Oh4nO\nqKJVDanMEm+a1hOu252lUzMCjOid/SPRXQq8vFXhrYWhXeGU7dv9VZgvwbQDTp/i\nlRToMCca2+7gsPyWbdXI6SgytdHvdenOdWrO4hUv2FhAGH3oliGpQCOb5imwT9LG\n9PBeakLI4VgqpaLAJwKGZ2A7bg/5mKQ3dRKIP01od9cpOj76hnwcnD3HK7qyNPFj\n8/RNorpLNqH5Pinn+ddAAcDTkAeunPkMpSKPmFFhU9deAqUK5scJE4kXcpS4ugkK\nn5hu48oLXttM9VApAoTTaDSS94namMLQguLru5Ubma2nVi5aLBg/+zwAgfuC/eN4\nrZ8q7bO4HRv9pUp9xLQ+MxMYUzgqR9NDxpkJw9/jH4Dkf1qY22M3Z115dmuzT49z\nMfKn236swhd94LE0qw6yO4eopMXYRf6Lrsai4ru0A94As5aGQXwnm9slPv5oqSU+\njAeVBh07whZcwJQiu599f0TemVg96MXVV4Pp9T7JIaOSPL2Fvyt955dKG/hD+elM\n5wI7hc/ZbDc81q4v\n=JjWP\n-----END PGP SIGNATURE-----",
        "payload": "tree f328e73e233bb4a6301f52149adeac05245fb28b\nparent fb65dde147f63422c4148b089c2f5be0bf5ba80f\nauthor Fabian Jahr <fjahr@protonmail.com> 1621811931 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1622677799 +0200\n\nindex: Use batch writing in coinstatsindex WriteBlock\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e3842385b8c0d15086c7cd8736f8c67e6c0c285",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e3842385b8c0d15086c7cd8736f8c67e6c0c285",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e3842385b8c0d15086c7cd8736f8c67e6c0c285/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb65dde147f63422c4148b089c2f5be0bf5ba80f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb65dde147f63422c4148b089c2f5be0bf5ba80f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb65dde147f63422c4148b089c2f5be0bf5ba80f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "084e6b9925ace3979dd27eff76c2ac910564e59e",
        "filename": "src/index/coinstatsindex.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e3842385b8c0d15086c7cd8736f8c67e6c0c285/src/index/coinstatsindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e3842385b8c0d15086c7cd8736f8c67e6c0c285/src/index/coinstatsindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.cpp?ref=1e3842385b8c0d15086c7cd8736f8c67e6c0c285",
        "patch": "@@ -219,7 +219,10 @@ bool CoinStatsIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n     m_muhash.Finalize(out);\n     value.second.muhash = out;\n \n-    return m_db->Write(DBHeightKey(pindex->nHeight), value) && m_db->Write(DB_MUHASH, m_muhash);\n+    CDBBatch batch(*m_db);\n+    batch.Write(DBHeightKey(pindex->nHeight), value);\n+    batch.Write(DB_MUHASH, m_muhash);\n+    return m_db->WriteBatch(batch);\n }\n \n static bool CopyHeightIndexToHashIndex(CDBIterator& db_it, CDBBatch& batch,"
      }
    ]
  },
  {
    "sha": "01386bfd88019397237256cb16f91de346eb66f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTM4NmJmZDg4MDE5Mzk3MjM3MjU2Y2IxNmY5MWRlMzQ2ZWI2NmYy",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-05-23T23:24:05Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-06-02T23:51:11Z"
      },
      "message": "Index: Return early from failed coinstatsindex init",
      "tree": {
        "sha": "75b278dac8b7e1effaa70a9860c16a8687354a17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75b278dac8b7e1effaa70a9860c16a8687354a17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01386bfd88019397237256cb16f91de346eb66f2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmC4GXIVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNg1QQAJhYVmWx+e1l+uk134Pr7uk7ZStb\nndEQuAjbyy0dIfwAAwXnxi4DsB3DtHmZg2SAo3htBJCy0LI9yjD3xts5TsLYSKIE\nwqAKrRv0njEopIhQLBAwKYsuGBfa+/KzLIRk+Yu0B0lThKi7i48R2ef3PRupCMn1\neKmsJI0AN2gmrP0W0UMfZ+6itsX0o4oUb7XZJJUXKzOe0yzwOaibTbdGW2ONkDG/\nxJ10b7m0txvrxjie95BTuAq8RbSkHpL0lX0ModSI/XvCaXQYuKM7se7MBks7Hy6R\nxH8slJHbNgaCx6SYzCVh0Y0pzKcmrFpA4Y+lymo6ISIrt16ESk63gNNR1Efpl7NP\nP5IH/a3gk8IWCXqhMT8PqzBN2kSRMACAotjZPDFEp55fJWm9XfC28/oS5hBJqs3R\ncAHWUUXNLl/2o1vHYrCD3F4dU7e4cFN3XotUMy8vKDF6t9IuE1AxGTXgeGbBizOZ\ncqaB7SSC9jaZGpJpZCfoOcEnA4Uj8h9skRp4/ipAq4PnPdelWyvUCLANmtasmDqO\nCps7Tfc+8BdlNsWn3ufdcwSwqBNfEAH9JXQOMAEpgzKKmN/0JcrhUtFot1ZuujEM\nR7MmRzuWYhcPuo3lvi0iwUbOzteXIGHagTOIZlseGPeXmVG+mNNFGelcUwOXNO2k\nEgFqjOevq8Q1FI11\n=2toD\n-----END PGP SIGNATURE-----",
        "payload": "tree 75b278dac8b7e1effaa70a9860c16a8687354a17\nparent 1e3842385b8c0d15086c7cd8736f8c67e6c0c285\nauthor Fabian Jahr <fjahr@protonmail.com> 1621812245 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1622677871 +0200\n\nIndex: Return early from failed coinstatsindex init\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01386bfd88019397237256cb16f91de346eb66f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01386bfd88019397237256cb16f91de346eb66f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01386bfd88019397237256cb16f91de346eb66f2/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e3842385b8c0d15086c7cd8736f8c67e6c0c285",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e3842385b8c0d15086c7cd8736f8c67e6c0c285",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e3842385b8c0d15086c7cd8736f8c67e6c0c285"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 19,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b3f5d75fb3d321fe3d351f912533f0df819d531a",
        "filename": "src/index/coinstatsindex.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 21,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01386bfd88019397237256cb16f91de346eb66f2/src/index/coinstatsindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01386bfd88019397237256cb16f91de346eb66f2/src/index/coinstatsindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.cpp?ref=01386bfd88019397237256cb16f91de346eb66f2",
        "patch": "@@ -344,33 +344,31 @@ bool CoinStatsIndex::Init()\n         }\n     }\n \n-    if (BaseIndex::Init()) {\n-        const CBlockIndex* pindex{CurrentIndex()};\n+    if (!BaseIndex::Init()) return false;\n \n-        if (pindex) {\n-            DBVal entry;\n-            if (!LookUpOne(*m_db, pindex, entry)) {\n-                return false;\n-            }\n+    const CBlockIndex* pindex{CurrentIndex()};\n \n-            m_transaction_output_count = entry.transaction_output_count;\n-            m_bogo_size = entry.bogo_size;\n-            m_total_amount = entry.total_amount;\n-            m_total_subsidy = entry.total_subsidy;\n-            m_total_unspendable_amount = entry.total_unspendable_amount;\n-            m_total_prevout_spent_amount = entry.total_prevout_spent_amount;\n-            m_total_new_outputs_ex_coinbase_amount = entry.total_new_outputs_ex_coinbase_amount;\n-            m_total_coinbase_amount = entry.total_coinbase_amount;\n-            m_total_unspendables_genesis_block = entry.total_unspendables_genesis_block;\n-            m_total_unspendables_bip30 = entry.total_unspendables_bip30;\n-            m_total_unspendables_scripts = entry.total_unspendables_scripts;\n-            m_total_unspendables_unclaimed_rewards = entry.total_unspendables_unclaimed_rewards;\n+    if (pindex) {\n+        DBVal entry;\n+        if (!LookUpOne(*m_db, pindex, entry)) {\n+            return false;\n         }\n \n-        return true;\n+        m_transaction_output_count = entry.transaction_output_count;\n+        m_bogo_size = entry.bogo_size;\n+        m_total_amount = entry.total_amount;\n+        m_total_subsidy = entry.total_subsidy;\n+        m_total_unspendable_amount = entry.total_unspendable_amount;\n+        m_total_prevout_spent_amount = entry.total_prevout_spent_amount;\n+        m_total_new_outputs_ex_coinbase_amount = entry.total_new_outputs_ex_coinbase_amount;\n+        m_total_coinbase_amount = entry.total_coinbase_amount;\n+        m_total_unspendables_genesis_block = entry.total_unspendables_genesis_block;\n+        m_total_unspendables_bip30 = entry.total_unspendables_bip30;\n+        m_total_unspendables_scripts = entry.total_unspendables_scripts;\n+        m_total_unspendables_unclaimed_rewards = entry.total_unspendables_unclaimed_rewards;\n     }\n \n-    return false;\n+    return true;\n }\n \n // Reverse a single block as part of a reorg"
      }
    ]
  },
  {
    "sha": "a5f6791139554936d13f367660283899a37ff5c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWY2NzkxMTM5NTU0OTM2ZDEzZjM2NzY2MDI4Mzg5OWEzN2ZmNWM3",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-05-23T23:40:17Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-07-25T18:59:45Z"
      },
      "message": "rpc: Add missing gettxoutsetinfo help docs",
      "tree": {
        "sha": "2709913d9e0386f1a493734f4d025ab366835549",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2709913d9e0386f1a493734f4d025ab366835549"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5f6791139554936d13f367660283899a37ff5c7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmD9tKQVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNag8QAIHJKM688FbtfpHEEgVwcIjNXE0V\npp9Tc8a5r72wWHYEL3y6HqQoHrGarU1EjbHqyjjHTy4vwSNhO4myqg9T1lijlXE+\n9vNJvLpOdKF8ay/7bEG4nzPkU9BPxcPH0CACQ1LYWPCjhNAOCXylRzUNpOjK193z\n2Py/x+/9cxsP1zeUafQeyYe0P61GIA9Id8L9mUE7Xssl/FSB6UK1gtm0hTi/YodH\n7Tsc+QrxJqiRx5wt8XQWRcbgYzFmHvsPlXmo9caIVYq+52XdbpL8hHLm2XrxCoxT\nYb3oG2nuNnQxv7spAkvrVULp/dYGXLbUl9NTGk0I5EOsASQ2MaxvG5oW63qvluHI\nbKBHW/DI0JZ3+3yBcn0daIwKob+Xe7TTjDe5ZSfbFDJvbg7kBFvuFuaA/m3kK1PD\nX6PBxF4KcDH69jjIbNMbpXPAakzEoLHXMuUqh7/5baMy1Z8kkXiR8cHZ+Of2jfo7\n0q6RmDZ6+QGIil+l9ZIno6Ho0oIA1dvmUk5UVbphCuAxgZp2odx7u4LinEnIVK/3\nNL2oUxSByNjRMGBzTrw325EVrucybCgd9/tLSm/fLco8gbm3I2PcNxftH9dnXCCZ\n9bOHNGgAUvHjV3/JzHb7Rgi3zTtG6NOB71rcyZJnF0V37pM6sOkbpKPPIu5aYi/2\nBiCx40jBXhIED1mw\n=xulv\n-----END PGP SIGNATURE-----",
        "payload": "tree 2709913d9e0386f1a493734f4d025ab366835549\nparent 01386bfd88019397237256cb16f91de346eb66f2\nauthor Fabian Jahr <fjahr@protonmail.com> 1621813217 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1627239585 +0200\n\nrpc: Add missing gettxoutsetinfo help docs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5f6791139554936d13f367660283899a37ff5c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5f6791139554936d13f367660283899a37ff5c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5f6791139554936d13f367660283899a37ff5c7/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01386bfd88019397237256cb16f91de346eb66f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01386bfd88019397237256cb16f91de346eb66f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01386bfd88019397237256cb16f91de346eb66f2"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "86f6a4320e76716a81c2b8aa3d303cee1daf553c",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5f6791139554936d13f367660283899a37ff5c7/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5f6791139554936d13f367660283899a37ff5c7/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=a5f6791139554936d13f367660283899a37ff5c7",
        "patch": "@@ -1117,13 +1117,13 @@ static RPCHelpMan gettxoutsetinfo()\n                         {RPCResult::Type::STR_AMOUNT, \"total_unspendable_amount\", \"The total amount of coins permanently excluded from the UTXO set (only available if coinstatsindex is used)\"},\n                         {RPCResult::Type::OBJ, \"block_info\", \"Info on amounts in the block at this block height (only available if coinstatsindex is used)\",\n                         {\n-                            {RPCResult::Type::STR_AMOUNT, \"prevout_spent\", \"\"},\n-                            {RPCResult::Type::STR_AMOUNT, \"coinbase\", \"\"},\n-                            {RPCResult::Type::STR_AMOUNT, \"new_outputs_ex_coinbase\", \"\"},\n-                            {RPCResult::Type::STR_AMOUNT, \"unspendable\", \"\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"prevout_spent\", \"Total amount of all prevouts spent in this block\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"coinbase\", \"Coinbase subsidy amount of this block\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"new_outputs_ex_coinbase\", \"Total amount of new outputs created by this block\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"unspendable\", \"Total amount of unspendable outputs created in this block\"},\n                             {RPCResult::Type::OBJ, \"unspendables\", \"Detailed view of the unspendable categories\",\n                             {\n-                                {RPCResult::Type::STR_AMOUNT, \"genesis_block\", \"\"},\n+                                {RPCResult::Type::STR_AMOUNT, \"genesis_block\", \"The unspendable amount of the Genesis block subsidy\"},\n                                 {RPCResult::Type::STR_AMOUNT, \"bip30\", \"Transactions overridden by duplicates (no longer possible with BIP30)\"},\n                                 {RPCResult::Type::STR_AMOUNT, \"scripts\", \"Amounts sent to scripts that are unspendable (for example OP_RETURN outputs)\"},\n                                 {RPCResult::Type::STR_AMOUNT, \"unclaimed_rewards\", \"Fee rewards that miners did not claim in their coinbase transaction\"},"
      }
    ]
  },
  {
    "sha": "d4356d4e48f59c63894b68691cc21ed4892ee716",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDM1NmQ0ZTQ4ZjU5YzYzODk0YjY4NjkxY2MyMWVkNDg5MmVlNzE2",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-05-24T15:04:58Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-07-25T18:59:49Z"
      },
      "message": "rpc: Block until synced if coinstatsindex is used in gettxoutsetinfo\n\nDuring initial sync after startup the gettxoutsetinfo RPC will still return an error while catching up. However, after the initial sync the index will not error immediately anymore when it's in the process of syncing to the tip while being called. Instead it will block until synced and then return the response.",
      "tree": {
        "sha": "b46e332cdc2e24486df26726654ceb2006440a23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b46e332cdc2e24486df26726654ceb2006440a23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4356d4e48f59c63894b68691cc21ed4892ee716",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmD9tKUVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN9kAP/2K8JLOJcE/rOKe7Evq8KJRgSusu\nabHVB2FUyZZkNKH/6xdtEA2zZfeRzvzekPnTni/eyx12QdanEj8s1+I2CbAskusd\njgGPH/yJ1oUzoOyN7gva09Q833b/cpF+yL2raKbsFQP8qsFC0nI/uUYLGAz5laVb\nujFDkvxDt4x8Yqy2jE1ZMh79cEGJDvNgnp5xttLmYmZ2CHgUuPclNSVMEi/jxx1X\nWcCt57mZMHO0WCGyH5ahh2DHllFUHoc/Ug96/M8qSmgDPHnaVzMb7XH5vc9BkefZ\nh1KGebhKWu6WuCKjjOeYE4mxixT3KgVIBAW3BwF7rPMhV47IqWVTQjqWW7j/EFy0\nBL2FpUOpOo/VxLgkt8hKtCSDo99DAGYm+J6yrKwuwEMzZUcGhQrXFNIGEj7iaxDg\nxSXQLbOXicRN4lrHVrGH/wMt6v5UP/jvBJfnhYVr31mxvRcaF6PlPdR+vGMbPILt\nj1WVaEEK1n0cP+QvjM9MdP0E6wo0NxPL4gJJg3go18yrJcfBIJw0aPbzJvffDfCL\nGicwN9qWN6KqTi15eazbcQlNcjtVJGb0sVtZFmDpNrQgrA0WsMdwTTaeGDcKCix7\nG0cCcxX4u0rBqRRTIzntYIwYvrEE8TSfEqnLheiorTOJDsxB4sJKHY193Of673fJ\n7MnzwGqDsu5a24Ka\n=kORl\n-----END PGP SIGNATURE-----",
        "payload": "tree b46e332cdc2e24486df26726654ceb2006440a23\nparent a5f6791139554936d13f367660283899a37ff5c7\nauthor Fabian Jahr <fjahr@protonmail.com> 1621868698 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1627239589 +0200\n\nrpc: Block until synced if coinstatsindex is used in gettxoutsetinfo\n\nDuring initial sync after startup the gettxoutsetinfo RPC will still return an error while catching up. However, after the initial sync the index will not error immediately anymore when it's in the process of syncing to the tip while being called. Instead it will block until synced and then return the response.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4356d4e48f59c63894b68691cc21ed4892ee716",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4356d4e48f59c63894b68691cc21ed4892ee716",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4356d4e48f59c63894b68691cc21ed4892ee716/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5f6791139554936d13f367660283899a37ff5c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5f6791139554936d13f367660283899a37ff5c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5f6791139554936d13f367660283899a37ff5c7"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 13,
      "deletions": 20
    },
    "files": [
      {
        "sha": "2347fcbb736497cd772e2c7da00e5d228e68b0cc",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4356d4e48f59c63894b68691cc21ed4892ee716/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4356d4e48f59c63894b68691cc21ed4892ee716/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=d4356d4e48f59c63894b68691cc21ed4892ee716",
        "patch": "@@ -1175,6 +1175,18 @@ static RPCHelpMan gettxoutsetinfo()\n         pindex = ParseHashOrHeight(request.params[1], chainman);\n     }\n \n+    if (stats.index_requested && g_coin_stats_index) {\n+        if (!g_coin_stats_index->BlockUntilSyncedToCurrentChain()) {\n+            const IndexSummary summary{g_coin_stats_index->GetSummary()};\n+\n+            // If a specific block was requested and the index has already synced past that height, we can return the\n+            // data already even though the index is not fully synced yet.\n+            if (pindex->nHeight > summary.best_block_height) {\n+                throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to get data because coinstatsindex is still syncing. Current height: %d\", summary.best_block_height));\n+            }\n+        }\n+    }\n+\n     if (GetUTXOStats(coins_view, *blockman, stats, node.rpc_interruption_point, pindex)) {\n         ret.pushKV(\"height\", (int64_t)stats.nHeight);\n         ret.pushKV(\"bestblock\", stats.hashBlock.GetHex());\n@@ -1215,13 +1227,6 @@ static RPCHelpMan gettxoutsetinfo()\n             ret.pushKV(\"block_info\", block_info);\n         }\n     } else {\n-        if (g_coin_stats_index) {\n-            const IndexSummary summary{g_coin_stats_index->GetSummary()};\n-\n-            if (!summary.synced) {\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to read UTXO set because coinstatsindex is still syncing. Current height: %d\", summary.best_block_height));\n-            }\n-        }\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\n     }\n     return ret;"
      },
      {
        "sha": "c2bc485d6ba31f087a7d21d48957c01a5e41dbe2",
        "filename": "test/functional/feature_coinstatsindex.py",
        "status": "modified",
        "additions": 1,
        "deletions": 13,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4356d4e48f59c63894b68691cc21ed4892ee716/test/functional/feature_coinstatsindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4356d4e48f59c63894b68691cc21ed4892ee716/test/functional/feature_coinstatsindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_coinstatsindex.py?ref=d4356d4e48f59c63894b68691cc21ed4892ee716",
        "patch": "@@ -32,7 +32,6 @@\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n-    try_rpc,\n )\n \n class CoinStatsIndexTest(BitcoinTestFramework):\n@@ -76,13 +75,11 @@ def _test_coin_stats_index(self):\n         self.sync_blocks(timeout=120)\n \n         self.log.info(\"Test that gettxoutsetinfo() output is consistent with or without coinstatsindex option\")\n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", node.gettxoutsetinfo))\n         res0 = node.gettxoutsetinfo('none')\n \n         # The fields 'disk_size' and 'transactions' do not exist on the index\n         del res0['disk_size'], res0['transactions']\n \n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         for hash_option in index_hash_options:\n             res1 = index_node.gettxoutsetinfo(hash_option)\n             # The fields 'block_info' and 'total_unspendable_amount' only exist on the index\n@@ -97,7 +94,6 @@ def _test_coin_stats_index(self):\n         # Generate a new tip\n         node.generate(5)\n \n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         for hash_option in index_hash_options:\n             # Fetch old stats by height\n             res2 = index_node.gettxoutsetinfo(hash_option, 102)\n@@ -176,7 +172,6 @@ def _test_coin_stats_index(self):\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         for hash_option in index_hash_options:\n             # Check all amounts were registered correctly\n             res6 = index_node.gettxoutsetinfo(hash_option, 108)\n@@ -209,7 +204,6 @@ def _test_coin_stats_index(self):\n         self.nodes[0].submitblock(ToHex(block))\n         self.sync_all()\n \n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         for hash_option in index_hash_options:\n             res7 = index_node.gettxoutsetinfo(hash_option, 109)\n             assert_equal(res7['total_unspendable_amount'], Decimal('80.98999999'))\n@@ -235,7 +229,6 @@ def _test_coin_stats_index(self):\n         assert_equal(res8, res9)\n \n         index_node.generate(1)\n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         res10 = index_node.gettxoutsetinfo('muhash')\n         assert(res8['txouts'] < res10['txouts'])\n \n@@ -256,14 +249,12 @@ def _test_reorg_index(self):\n         index_node = self.nodes[1]\n         reorg_blocks = index_node.generatetoaddress(2, index_node.getnewaddress())\n         reorg_block = reorg_blocks[1]\n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         res_invalid = index_node.gettxoutsetinfo('muhash')\n         index_node.invalidateblock(reorg_blocks[0])\n         assert_equal(index_node.gettxoutsetinfo('muhash')['height'], 110)\n \n         # Add two new blocks\n         block = index_node.generate(2)[1]\n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         res = index_node.gettxoutsetinfo(hash_type='muhash', hash_or_height=None, use_index=False)\n \n         # Test that the result of the reorged block is not returned for its old block height\n@@ -284,9 +275,7 @@ def _test_reorg_index(self):\n         # Ensure that removing and re-adding blocks yields consistent results\n         block = index_node.getblockhash(99)\n         index_node.invalidateblock(block)\n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         index_node.reconsiderblock(block)\n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", index_node.gettxoutsetinfo, 'muhash'))\n         res3 = index_node.gettxoutsetinfo(hash_type='muhash', hash_or_height=112)\n         assert_equal(res2, res3)\n \n@@ -296,8 +285,7 @@ def _test_reorg_index(self):\n         node.getblock(reorg_block)\n \n         self.restart_node(0, [\"-coinstatsindex\"])\n-        self.wait_until(lambda: not try_rpc(-32603, \"Unable to read UTXO set\", node.gettxoutsetinfo, 'muhash'))\n-        assert_raises_rpc_error(-32603, \"Unable to read UTXO set\", node.gettxoutsetinfo, 'muhash', reorg_block)\n+        assert_raises_rpc_error(-32603, \"Unable to get data because coinstatsindex is still syncing.\", node.gettxoutsetinfo, 'muhash', reorg_block)\n \n     def _test_index_rejects_hash_serialized(self):\n         self.log.info(\"Test that the rpc raises if the legacy hash is passed with the index\")"
      }
    ]
  },
  {
    "sha": "5b3d4e724f377834e24b1f014787cc7aa7fc30fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjNkNGU3MjRmMzc3ODM0ZTI0YjFmMDE0Nzg3Y2M3YWE3ZmMzMGZl",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-05-24T16:37:40Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-07-25T18:59:49Z"
      },
      "message": "Index: Improve logging in coinstatsindex\n\nMore accurate logging of a warning should make clear if the recovery condition was hit while catching the results of the previous block.",
      "tree": {
        "sha": "4a1f36bdb564296454d08fcfeb09e30615b79f11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a1f36bdb564296454d08fcfeb09e30615b79f11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b3d4e724f377834e24b1f014787cc7aa7fc30fe",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmD9tKUVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNOtoP/RjqG8188vYpTPdc3AbuDlXdlpwQ\n2eyaS4mZ24/QbGpqi02wKKbfdPf6rHyrg1cITXDs/aNScrxXgRX0PV7hNTRZUm5p\nrfO4cE6VqCEE8lR2BlKVIaQ3Z0Q+mTD7+D3Qm0NGGGVrgcHi7gyfpQADoB5FzOTY\niV8EvQnIppbJA/ihJc/Z3jb+M/hswXtD+lbAM684SHpSDvhIH1dSPd0Xy5EqVSqH\n12F56hiRZY2gZZIOpk1LYeXF1gFWo8Otuo1bHEgnnAgONkqhmAXmef6M+hE1Pzsw\nMxhwklumxsthjAHh3AYJecXcWBtGJfV0cCnUYY5IQ3LuTNM4mTvqRP74R1p4Cm2/\nDYOjpTWzz82iVO90K2FjsGd9keDz2BWwD8bQX/JayOq1jREgLqcm4wHFD+oRhl1d\nY10t8oN5GeOg2CtI4w9OtVGeJmpBfz6HKFP1ycmaTLN6web8GXjRA/d5NhScypvK\n/JdiaeuBn+5MfFPif7vC+pYluYC9pYbaGAqiXA62Khh6gu3pK7mEh2puIUUJXjg6\nG0TDoLc1Exu4ykoFapRPe8RI+7bSAJN4AnvPGSY59m5CHSq0OhHWu8I+cjVxLG9P\n4QFF4hQZHhb0lGwAmxC6xYXvlK9iJGovYoqaTy/SdN7SmZw2yLBVf8yig+SJIfTJ\nc+DwGzXpnMi/35k2\n=nWTm\n-----END PGP SIGNATURE-----",
        "payload": "tree 4a1f36bdb564296454d08fcfeb09e30615b79f11\nparent d4356d4e48f59c63894b68691cc21ed4892ee716\nauthor Fabian Jahr <fjahr@protonmail.com> 1621874260 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1627239589 +0200\n\nIndex: Improve logging in coinstatsindex\n\nMore accurate logging of a warning should make clear if the recovery condition was hit while catching the results of the previous block.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b3d4e724f377834e24b1f014787cc7aa7fc30fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b3d4e724f377834e24b1f014787cc7aa7fc30fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b3d4e724f377834e24b1f014787cc7aa7fc30fe/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4356d4e48f59c63894b68691cc21ed4892ee716",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4356d4e48f59c63894b68691cc21ed4892ee716",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4356d4e48f59c63894b68691cc21ed4892ee716"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "849ea752f2745d9ba4a3dff7ddae296478e5ef63",
        "filename": "src/index/coinstatsindex.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b3d4e724f377834e24b1f014787cc7aa7fc30fe/src/index/coinstatsindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b3d4e724f377834e24b1f014787cc7aa7fc30fe/src/index/coinstatsindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/coinstatsindex.cpp?ref=5b3d4e724f377834e24b1f014787cc7aa7fc30fe",
        "patch": "@@ -122,9 +122,12 @@ bool CoinStatsIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n \n         uint256 expected_block_hash{pindex->pprev->GetBlockHash()};\n         if (read_out.first != expected_block_hash) {\n+            LogPrintf(\"WARNING: previous block header belongs to unexpected block %s; expected %s\\n\",\n+                      read_out.first.ToString(), expected_block_hash.ToString());\n+\n             if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                return error(\"%s: previous block header belongs to unexpected block %s; expected %s\",\n-                             __func__, read_out.first.ToString(), expected_block_hash.ToString());\n+                return error(\"%s: previous block header not found; expected %s\",\n+                             __func__, expected_block_hash.ToString());\n             }\n         }\n \n@@ -392,9 +395,12 @@ bool CoinStatsIndex::ReverseBlock(const CBlock& block, const CBlockIndex* pindex\n \n         uint256 expected_block_hash{pindex->pprev->GetBlockHash()};\n         if (read_out.first != expected_block_hash) {\n+            LogPrintf(\"WARNING: previous block header belongs to unexpected block %s; expected %s\\n\",\n+                      read_out.first.ToString(), expected_block_hash.ToString());\n+\n             if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                return error(\"%s: previous block header belongs to unexpected block %s; expected %s\",\n-                             __func__, read_out.first.ToString(), expected_block_hash.ToString());\n+                return error(\"%s: previous block header not found; expected %s\",\n+                             __func__, expected_block_hash.ToString());\n             }\n         }\n     }"
      }
    ]
  },
  {
    "sha": "779e638ca9b2b37c247577d225b93ac762b0602f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzllNjM4Y2E5YjJiMzdjMjQ3NTc3ZDIyNWI5M2FjNzYyYjA2MDJm",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-06-03T00:06:00Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2021-07-25T19:02:12Z"
      },
      "message": "coinstats: Add comments for new coinstatsindex values",
      "tree": {
        "sha": "ab5aac48f2273ee53fbdb53c55c2586187c7f99e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab5aac48f2273ee53fbdb53c55c2586187c7f99e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/779e638ca9b2b37c247577d225b93ac762b0602f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmD9tTcVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNnZ8P/309NGy9BMcOECCUKVRl0EJtXQL8\nMT5cHMZbRI5yfN0rs0CZWLs18xkjQ+uYDDX2w46DjF8y4rt4welVNzwDIpO+6blX\ngCjMIXm9gHPTWoUpkiNSa+UV/P/ezBY3tpPEKJ9T7E0TrXSjOF+tFz6t1g8N39JI\nfG8c9ba7WbVgWY/yIB/GqK6zkmtbcEOLZkrIw4FmmysfInEG8j4yJafI0THTeEoe\n4V/HS9JQcqr7fJDWaCrcR6l8WBa1tAJgOktFw2bMKSK8yBb6Mbc/z+zg9x+ihrfK\nFudbwN0PCvwaBYl8nRpqKG2m4nyjn6BOk37h7sB8BCBVRtajrWAIT4OCYf5qc1Oo\n0+vukDMrdt8yieb5KHmQNsSm1kVseNipc9I35Hc0+2nXLWpLaleb89/7/upz5w5/\n1Y6fYt2T2qPJ9+C48QBMbYKf+MqFZsbcslkMPnFOyPgv5omtAc+BKoTVZrDnQodw\nNe9k9+LKUln2aqwDeFR33hrzLrxnjr0buYuVvmkmAByk9tCZGjsGwl9QXc/TU+PP\nkPIakpeCYmrf8/oqu13DyhqfkPAtuFCIM6lbpovgix+AT6D50vBdSv1iXDj4BjJC\nkSIvHQ3bevl2ZlmyFeHIh2XJPTCGVba1wfnhsXDsaUcezYnUTP2dRCO8DONQ3eZx\nElilCsrVtWjaOgCn\n=Dlaz\n-----END PGP SIGNATURE-----",
        "payload": "tree ab5aac48f2273ee53fbdb53c55c2586187c7f99e\nparent 5b3d4e724f377834e24b1f014787cc7aa7fc30fe\nauthor Fabian Jahr <fjahr@protonmail.com> 1622678760 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1627239732 +0200\n\ncoinstats: Add comments for new coinstatsindex values\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/779e638ca9b2b37c247577d225b93ac762b0602f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/779e638ca9b2b37c247577d225b93ac762b0602f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/779e638ca9b2b37c247577d225b93ac762b0602f/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b3d4e724f377834e24b1f014787cc7aa7fc30fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b3d4e724f377834e24b1f014787cc7aa7fc30fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b3d4e724f377834e24b1f014787cc7aa7fc30fe"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "69e856dd15ad48fdc9164512433c071e0742652b",
        "filename": "src/node/coinstats.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/779e638ca9b2b37c247577d225b93ac762b0602f/src/node/coinstats.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/779e638ca9b2b37c247577d225b93ac762b0602f/src/node/coinstats.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.h?ref=779e638ca9b2b37c247577d225b93ac762b0602f",
        "patch": "@@ -45,14 +45,24 @@ struct CCoinsStats\n     bool index_used{false};\n \n     // Following values are only available from coinstats index\n+\n+    //! Total cumulative amount of block subsidies up to and including this block\n     CAmount total_subsidy{0};\n+    //! Total cumulative amount of unspendable coins up to and including this block\n     CAmount total_unspendable_amount{0};\n+    //! Total cumulative amount of prevouts spent up to and including this block\n     CAmount total_prevout_spent_amount{0};\n+    //! Total cumulative amount of outputs created up to and including this block\n     CAmount total_new_outputs_ex_coinbase_amount{0};\n+    //! Total cumulative amount of coinbase outputs up to and including this block\n     CAmount total_coinbase_amount{0};\n+    //! The unspendable coinbase amount from the genesis block\n     CAmount total_unspendables_genesis_block{0};\n+    //! The two unspendable coinbase outputs total amount caused by BIP30\n     CAmount total_unspendables_bip30{0};\n+    //! Total cumulative amount of outputs sent to unspendable scripts (OP_RETURN for example) up to and including this block\n     CAmount total_unspendables_scripts{0};\n+    //! Total cumulative amount of coins lost due to unclaimed miner rewards up to and including this block\n     CAmount total_unspendables_unclaimed_rewards{0};\n \n     CCoinsStats(CoinStatsHashType hash_type) : m_hash_type(hash_type) {}"
      }
    ]
  }
]