DrahtBot,2021-05-24 21:58:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22567 by MarcoFalke\n* #20362 by MarcoFalke\n* #19792 by fjahr\n\nIf you consider this pull request important, please als",https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-847365954,847365954,
Talkless,2021-06-02 18:36:52,"tACK f3cf0298180680900eabf1cd2827bd854d4cfeda. Built on Debian Sid, ran `-regtest` with `-coinstatsindex`, mined some blocks and checked `gettxoutsetinfo` output and executed `feature_coinstatsindex` functional test.",https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-853288913,853288913,
Sjors,2021-06-29 09:37:54,ACK d6dbb17,https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-870440956,870440956,
fjahr,2021-07-18 13:40:50,@MarcoFalke could you check if you are happy with this? :),https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-882058230,882058230,
fjahr,2021-07-25 20:39:04,Addressed @jonatack 's comments and fixed a typo.,https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-886254855,886254855,
Sjors,2021-07-27 11:32:21,re-utACK 779e638ca9b2b37c247577d225b93ac762b0602f,https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-887436266,887436266,
jonatack,2021-07-27 16:32:43,"re-ACK 779e638ca9b2b37c247577d225b93ac762b0602f diff since last review involves doc changes only; rebased to current master and verified clean debug build/no silent conflicts, unit tests, and feature_coinstatsindex functional test",https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-887659538,887659538,
laanwj,2021-07-28 12:16:47,Code review ACK 779e638ca9b2b37c247577d225b93ac762b0602f,https://github.com/bitcoin/bitcoin/pull/22047#issuecomment-888261667,888261667,
Talkless,2021-05-24 18:43:21,"Not sure if ""value"" is the best wording choice here. I see ""amount"" used much more in the codebase, and even variables/enums used here in PR uses ""amount"", not ""value"".",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r638192002,638192002,src/rpc/blockchain.cpp
fjahr,2021-05-24 20:37:31,"Yeah, I see what you mean and I was on the fence there. I felt like amount could be easier mistaken to mean 'count' in this context but I am not a native speaker so maybe that feeling is just off. I have changed it to 'amount' since, as you say, consistency is better, all other things being equal.",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r638256089,638256089,src/rpc/blockchain.cpp
MarcoFalke,2021-05-25 08:31:26,"`unspendables` are also ""total"", but don't mention it. Might be good to remove the ""total_"" here, or add it to unspendables?",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r638572495,638572495,src/index/coinstatsindex.cpp
MarcoFalke,2021-05-25 08:32:21,"```suggestion\n                      read_out.first.ToString(), expected_block_hash.ToString());\n```\n\nThis is toggled with `-logsourcelocations`, so can skip here.",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r638573195,638573195,src/index/coinstatsindex.cpp
MarcoFalke,2021-05-25 08:32:41,same,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r638573424,638573424,src/index/coinstatsindex.cpp
fjahr,2021-05-25 22:28:54,done,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r639249688,639249688,src/index/coinstatsindex.cpp
fjahr,2021-05-25 22:29:08,done,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r639249772,639249772,src/index/coinstatsindex.cpp
fjahr,2021-05-25 22:30:49,"Dropped the `total_` everywhere except for the `m_total_amount`, it seemed right to keep it in this case since it's closed to the corresponding legacy name `nTotalAmount` that is also still in use.",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r639250485,639250485,src/index/coinstatsindex.cpp
Sjors,2021-05-26 12:30:02,"b778ac8f2b12f771e5b8ddcadc35ee267e57cfb0: I think the `total_` prefix is more clear (and consistent with `total_amount` which you wanted to keep). So maybe use the second approach @MarcoFalke suggested:\n\n> unspendables are also ""total"", but don't mention it. Might be good to remove the ""total_"" here, or add it to unspendables?\n\nMore importantly, can you add comments explaining how these va",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r639677968,639677968,src/index/coinstatsindex.cpp
Sjors,2021-05-26 12:46:50,0f9e936e521d7090c876d0c181ca241c56e387ab: `created in this block`,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r639690664,639690664,src/rpc/blockchain.cpp
fjahr,2021-06-03 00:15:55,"Done, changed the names to all use `total_` and added comments explaining each of the new values in `coinstats.h` a bit more clearly.",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r644398355,644398355,src/index/coinstatsindex.cpp
fjahr,2021-06-03 00:16:00,Done,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r644398370,644398370,src/rpc/blockchain.cpp
jonatack,2021-07-20 09:34:08,"ac2a8b51\n```suggestion\n                                {RPCResult::Type::STR_AMOUNT, ""genesis_block"", ""The unspendable amount of the Genesis block subsidy""},\n```",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r672964867,672964867,src/rpc/blockchain.cpp
jonatack,2021-07-20 09:41:16,"d6dbb17 nit, `s/up until/up to/` for each of these",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r672969835,672969835,src/node/coinstats.h
jonatack,2021-07-20 09:44:54,18aa58b4 I did not test this change; it may be good to add a test here and for the same logging change above lines 125-130,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r672972487,672972487,src/index/coinstatsindex.cpp
fjahr,2021-07-25 20:37:13,I think we can really only hit this in cases of data corruption (or a bug somewhere else in the code). So that makes it really hard to test. I have made a note to look into it some more and think about how to add coverage without too much effort.,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r676199166,676199166,src/index/coinstatsindex.cpp
fjahr,2021-07-25 20:38:21,done,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r676199298,676199298,src/node/coinstats.h
fjahr,2021-07-25 20:38:27,done,https://github.com/bitcoin/bitcoin/pull/22047#discussion_r676199311,676199311,src/rpc/blockchain.cpp
laanwj,2021-07-28 12:16:09,"Doesn't `vector<â€¦>::size()` return a `size_t`, making this effectively a cast?\n(apparently not necessarily: which `size_type` it returns is C++ library dependent)",https://github.com/bitcoin/bitcoin/pull/22047#discussion_r678244456,678244456,src/index/coinstatsindex.cpp
