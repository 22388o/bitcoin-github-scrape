[
  {
    "sha": "fc4db35bfd78d85d6b52d5da3d89696160658450",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzRkYjM1YmZkNzhkODVkNmI1MmQ1ZGEzZDg5Njk2MTYwNjU4NDUw",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T23:24:29Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-10-18T22:26:06Z"
      },
      "message": "wallet: Add ListWalletDir utility\n\nListWalletDir returns all available wallets in the current wallet directory.\n\nBased on MeshCollider work in pull #11485.",
      "tree": {
        "sha": "666a877d77af91faa2306408012ba8b6078946e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/666a877d77af91faa2306408012ba8b6078946e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc4db35bfd78d85d6b52d5da3d89696160658450",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc4db35bfd78d85d6b52d5da3d89696160658450",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc4db35bfd78d85d6b52d5da3d89696160658450",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc4db35bfd78d85d6b52d5da3d89696160658450/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 56,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c0c9afe13ed4d7b45948cd8ee2c1348f647d8935",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc4db35bfd78d85d6b52d5da3d89696160658450/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc4db35bfd78d85d6b52d5da3d89696160658450/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=fc4db35bfd78d85d6b52d5da3d89696160658450",
        "patch": "@@ -4,6 +4,8 @@\n \n #include <wallet/walletutil.h>\n \n+#include <util.h>\n+\n fs::path GetWalletDir()\n {\n     fs::path path;\n@@ -25,3 +27,51 @@ fs::path GetWalletDir()\n \n     return path;\n }\n+\n+static bool IsBerkeleyBtree(const fs::path& path)\n+{\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    if (fs::file_size(path, ec) < 4096) return false;\n+\n+    fs::ifstream file(path.string(), std::ios::binary);\n+    if (!file.is_open()) return false;\n+\n+    file.seekg(12, std::ios::beg); // Magic bytes start at offset 12\n+    uint32_t data = 0;\n+    file.read((char*) &data, sizeof(data)); // Read 4 bytes of file to compare against magic\n+\n+    // Berkeley DB Btree magic bytes, from:\n+    //  https://github.com/file/file/blob/5824af38469ec1ca9ac3ffd251e7afe9dc11e227/magic/Magdir/database#L74-L75\n+    //  - big endian systems - 00 05 31 62\n+    //  - little endian systems - 62 31 05 00\n+    return data == 0x00053162 || data == 0x62310500;\n+}\n+\n+std::vector<fs::path> ListWalletDir()\n+{\n+    const fs::path wallet_dir = GetWalletDir();\n+    std::vector<fs::path> paths;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir); it != end(it); ++it) {\n+        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(fs::relative(it->path(), wallet_dir));\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(fs::relative(it->path(), wallet_dir));\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}"
      },
      {
        "sha": "77f5ca428d1ae6c0972a61918559974826d7101a",
        "filename": "src/wallet/walletutil.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc4db35bfd78d85d6b52d5da3d89696160658450/src/wallet/walletutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc4db35bfd78d85d6b52d5da3d89696160658450/src/wallet/walletutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.h?ref=fc4db35bfd78d85d6b52d5da3d89696160658450",
        "patch": "@@ -5,10 +5,14 @@\n #ifndef BITCOIN_WALLET_WALLETUTIL_H\n #define BITCOIN_WALLET_WALLETUTIL_H\n \n-#include <chainparamsbase.h>\n-#include <util.h>\n+#include <fs.h>\n+\n+#include <vector>\n \n //! Get the path of the wallet directory.\n fs::path GetWalletDir();\n \n+//! Get wallets in wallet directory.\n+std::vector<fs::path> ListWalletDir();\n+\n #endif // BITCOIN_WALLET_WALLETUTIL_H"
      }
    ]
  },
  {
    "sha": "d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWIwM2I4ZTVmMDRhMmNjOWViYjk4NWJkOWExYWViZDIwNjhmNzU3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T23:53:25Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-10-18T22:26:06Z"
      },
      "message": "interfaces: Add getWalletDir and listWalletDir to Node",
      "tree": {
        "sha": "15591cb226059861f5aaec4777dbc6c57de0af47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15591cb226059861f5aaec4777dbc6c57de0af47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc4db35bfd78d85d6b52d5da3d89696160658450",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc4db35bfd78d85d6b52d5da3d89696160658450",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc4db35bfd78d85d6b52d5da3d89696160658450"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3eb77354c1759a910633310b743becd623b713f9",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
        "patch": "@@ -34,6 +34,16 @@ void DummyWalletInit::AddWalletOptions() const\n \n const WalletInitInterface& g_wallet_init_interface = DummyWalletInit();\n \n+fs::path GetWalletDir()\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n+std::vector<fs::path> ListWalletDir()\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n std::vector<std::shared_ptr<CWallet>> GetWallets()\n {\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");"
      },
      {
        "sha": "2b19e11f08a473b5a24f36beb98d273964e6db3f",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
        "patch": "@@ -38,6 +38,8 @@\n #include <univalue.h>\n \n class CWallet;\n+fs::path GetWalletDir();\n+std::vector<fs::path> ListWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n \n namespace interfaces {\n@@ -218,6 +220,18 @@ class NodeImpl : public Node\n         LOCK(::cs_main);\n         return ::pcoinsTip->GetCoin(output, coin);\n     }\n+    std::string getWalletDir() override\n+    {\n+        return GetWalletDir().string();\n+    }\n+    std::vector<std::string> listWalletDir() override\n+    {\n+        std::vector<std::string> paths;\n+        for (auto& path : ListWalletDir()) {\n+            paths.push_back(path.string());\n+        }\n+        return paths;\n+    }\n     std::vector<std::unique_ptr<Wallet>> getWallets() override\n     {\n         std::vector<std::unique_ptr<Wallet>> wallets;"
      },
      {
        "sha": "1f8bbbff7a8c0a1a89c018b4fa7e9302ed98d0d8",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
        "patch": "@@ -173,6 +173,12 @@ class Node\n     //! Get unspent outputs associated with a transaction.\n     virtual bool getUnspentOutput(const COutPoint& output, Coin& coin) = 0;\n \n+    //! Return default wallet directory.\n+    virtual std::string getWalletDir() = 0;\n+\n+    //! Return available wallets in wallet directory.\n+    virtual std::vector<std::string> listWalletDir() = 0;\n+\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n "
      }
    ]
  },
  {
    "sha": "cc3377360c417780f5cbd7bd69b438817a9d60be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzMzNzczNjBjNDE3NzgwZjVjYmQ3YmQ2OWI0Mzg4MTdhOWQ2MGJl",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-24T22:55:30Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-10-18T22:26:06Z"
      },
      "message": "rpc: Add listwalletdir RPC",
      "tree": {
        "sha": "e10673e2f3cd740d0bc03a4c5503ab258623cbb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e10673e2f3cd740d0bc03a4c5503ab258623cbb2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc3377360c417780f5cbd7bd69b438817a9d60be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc3377360c417780f5cbd7bd69b438817a9d60be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc3377360c417780f5cbd7bd69b438817a9d60be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc3377360c417780f5cbd7bd69b438817a9d60be/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1b03b8e5f04a2cc9ebb985bd9a1aebd2068f757"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 33,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9fe1424d7d292653203509ca58b7bc1c01230e9b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc3377360c417780f5cbd7bd69b438817a9d60be/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc3377360c417780f5cbd7bd69b438817a9d60be/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cc3377360c417780f5cbd7bd69b438817a9d60be",
        "patch": "@@ -2450,6 +2450,38 @@ static UniValue getwalletinfo(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue listwalletdir(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 0) {\n+        throw std::runtime_error(\n+            \"listwalletdir\\n\"\n+            \"Returns a list of wallets in the wallet directory.\\n\"\n+            \"{\\n\"\n+            \"  \\\"wallets\\\" : [                (json array of objects)\\n\"\n+            \"    {\\n\"\n+            \"      \\\"name\\\" : \\\"name\\\"          (string) The wallet name\\n\"\n+            \"    }\\n\"\n+            \"    ,...\\n\"\n+            \"  ]\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"listwalletdir\", \"\")\n+            + HelpExampleRpc(\"listwalletdir\", \"\")\n+        );\n+    }\n+\n+    UniValue wallets(UniValue::VARR);\n+    for (const auto& path : ListWalletDir()) {\n+        UniValue wallet(UniValue::VOBJ);\n+        wallet.pushKV(\"name\", path.string());\n+        wallets.push_back(wallet);\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"wallets\", wallets);\n+    return result;\n+}\n+\n static UniValue listwallets(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n@@ -4102,6 +4134,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"listsinceblock\",                   &listsinceblock,                {\"blockhash\",\"target_confirmations\",\"include_watchonly\",\"include_removed\"} },\n     { \"wallet\",             \"listtransactions\",                 &listtransactions,              {\"dummy\",\"count\",\"skip\",\"include_watchonly\"} },\n     { \"wallet\",             \"listunspent\",                      &listunspent,                   {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n+    { \"wallet\",             \"listwalletdir\",                    &listwalletdir,                 {} },\n     { \"wallet\",             \"listwallets\",                      &listwallets,                   {} },\n     { \"wallet\",             \"loadwallet\",                       &loadwallet,                    {\"filename\"} },\n     { \"wallet\",             \"lockunspent\",                      &lockunspent,                   {\"unlock\",\"transactions\"} },"
      }
    ]
  },
  {
    "sha": "0cb3cad166bbeb75e9cc1512286453f8e7d4f717",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowY2IzY2FkMTY2YmJlYjc1ZTljYzE1MTIyODY0NTNmOGU3ZDRmNzE3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-24T22:56:32Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-10-18T22:26:06Z"
      },
      "message": "qa: Add tests for listwalletdir RPC",
      "tree": {
        "sha": "0ef9c914a754b5d0a7c6692ae28dbf153ed4035a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ef9c914a754b5d0a7c6692ae28dbf153ed4035a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0cb3cad166bbeb75e9cc1512286453f8e7d4f717",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cb3cad166bbeb75e9cc1512286453f8e7d4f717",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0cb3cad166bbeb75e9cc1512286453f8e7d4f717",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cb3cad166bbeb75e9cc1512286453f8e7d4f717/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc3377360c417780f5cbd7bd69b438817a9d60be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc3377360c417780f5cbd7bd69b438817a9d60be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc3377360c417780f5cbd7bd69b438817a9d60be"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "aca84477f68a562e1c49ecacb35ba45effcfa92f",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cb3cad166bbeb75e9cc1512286453f8e7d4f717/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cb3cad166bbeb75e9cc1512286453f8e7d4f717/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=0cb3cad166bbeb75e9cc1512286453f8e7d4f717",
        "patch": "@@ -38,6 +38,8 @@ def wallet_file(name):\n                 return wallet_dir(name, \"wallet.dat\")\n             return wallet_dir(name)\n \n+        assert_equal(self.nodes[0].listwalletdir(), { 'wallets': [{ 'name': '' }] })\n+\n         # check wallet.dat is created\n         self.stop_nodes()\n         assert_equal(os.path.isfile(wallet_dir('wallet.dat')), True)\n@@ -68,6 +70,8 @@ def wallet_file(name):\n         wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n         extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n         self.start_node(0, extra_args)\n+        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', 'sub/w5', 'w7', 'w7', 'w1', 'w8', 'w']))\n+\n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n         # check that all requested wallets were created\n@@ -139,6 +143,8 @@ def wallet_file(name):\n \n         self.restart_node(0, extra_args)\n \n+        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', 'sub/w5', 'w7', 'w7', 'w8_copy', 'w1', 'w8', 'w']))\n+\n         wallets = [wallet(w) for w in wallet_names]\n         wallet_bad = wallet(\"bad\")\n \n@@ -276,6 +282,8 @@ def wallet_file(name):\n         assert_equal(self.nodes[0].listwallets(), ['w1'])\n         assert_equal(w1.getwalletinfo()['walletname'], 'w1')\n \n+        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', 'sub/w5', 'w7', 'w9', 'w7', 'w8_copy', 'w1', 'w8', 'w']))\n+\n         # Test backing up and restoring wallets\n         self.log.info(\"Test wallet backup\")\n         self.restart_node(0, ['-nowallet'])"
      }
    ]
  },
  {
    "sha": "d56a0689354fb814510c6c393f3e07ac9362dc1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNTZhMDY4OTM1NGZiODE0NTEwYzZjMzkzZjNlMDdhYzkzNjJkYzFm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-26T23:05:13Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-10-18T22:26:06Z"
      },
      "message": "docs: Add release notes for listwalletdir RPC",
      "tree": {
        "sha": "cb94a22ab533d6cdb0540375173f2c6751b80bd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb94a22ab533d6cdb0540375173f2c6751b80bd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d56a0689354fb814510c6c393f3e07ac9362dc1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d56a0689354fb814510c6c393f3e07ac9362dc1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d56a0689354fb814510c6c393f3e07ac9362dc1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d56a0689354fb814510c6c393f3e07ac9362dc1f/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0cb3cad166bbeb75e9cc1512286453f8e7d4f717",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cb3cad166bbeb75e9cc1512286453f8e7d4f717",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0cb3cad166bbeb75e9cc1512286453f8e7d4f717"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ace56f4d1b44206d6a790151a295a563ed49396e",
        "filename": "doc/release-notes-13152.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d56a0689354fb814510c6c393f3e07ac9362dc1f/doc/release-notes-13152.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d56a0689354fb814510c6c393f3e07ac9362dc1f/doc/release-notes-13152.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-13152.md?ref=d56a0689354fb814510c6c393f3e07ac9362dc1f",
        "patch": "@@ -1,4 +1,5 @@\n New RPC methods\n ------------\n \n-- `getnodeaddresses` returns peer addresses known to this node. It may be used to connect to nodes over TCP without using the DNS seeds.\n\\ No newline at end of file\n+- `getnodeaddresses` returns peer addresses known to this node. It may be used to connect to nodes over TCP without using the DNS seeds.\n+- `listwalletdir` returns a list of wallets in the wallet directory which is configured with `-walletdir` parameter."
      }
    ]
  }
]