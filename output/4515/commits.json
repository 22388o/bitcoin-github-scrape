[
  {
    "sha": "7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Njk0ZWM5OGE5ZGYxN2UzNWY3NmYxYmZiNDU4ZTI1ODZjOGZiNWM4",
    "commit": {
      "author": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-07-11T14:42:49Z"
      },
      "committer": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-11-07T14:17:59Z"
      },
      "message": "Refactor startup checks onto a separate function.",
      "tree": {
        "sha": "9cb71d1df7917e4dcc1ddc46f4e2a5c890e42a4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cb71d1df7917e4dcc1ddc46f4e2a5c890e42a4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABCAAGBQJUXNScAAoJEAB9eonG33stAdgQAJl41NEK8FfikReCYXcGTD97\nZlzngsg4PC0iv7DY96jPErDsOw+9lbLupI3VaXFPtK/gUK8ulK4p4bw/eRxl1oQR\nNSa1qmvEez9gGPngshDCEthz4z2kTU9+Z8alzZnmDdjHK9KXP1G6wcLDLpsXSGVj\nUlClG4ifFn6DhFZ/Ffsb888eyhq4LGDAawNVWFwROBLOyuKshpUAQxarkQNeHKnC\nnQTAVTzATg48U1Sjy2r5oFHJ1t/5RLxDhYKVPCfGHVixfni1Q5ghR/w1G2UWKpku\npbV9tOMF17y/ajHht2RqPF2H3Yvw05ChG2poMm4t4YUJIw0G4FDIz3FnLE+UVfet\n4RTqlLbwRsaQmgSLKlFRTE9379CABhWHGml8bbSU0IVp67mWyLYqg364mfMKOx/E\na7QUwBRywZuz7f5wmWdxYHvfXAvpMsurGN+bXaP9AjAPQMunmD5QLFxUA+09LX5j\nMKa+wFL+2gFrhK0Eu9TKUVYwdpYhiYLNNkHTXJ/3U8GUw7I/7t3hw+9H03Oz3esr\nnxjlugcGfjxhBJquAXdcjievqMY2s6stoXSW3pm7EUdXeCrWb3WPK/+65jhJ3p4i\njtApHTm/G6mpRTwHpQyx/8i9k/iEOxPxJisAlkfry14pwE1dzAH0QupC1qf+BRnY\nJHUTaqNgPOhNFImMV6Ie\n=p3wm\n-----END PGP SIGNATURE-----",
        "payload": "tree 9cb71d1df7917e4dcc1ddc46f4e2a5c890e42a4f\nparent 9ea87f9e187da41964c3cafdadf54b2f767c3450\nauthor Ruben Dario Ponticelli <rdponticelli@gmail.com> 1405089769 -0300\ncommitter Ruben Dario Ponticelli <rdponticelli@gmail.com> 1415369879 -0300\n\nRefactor startup checks onto a separate function.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8/comments",
    "author": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ea87f9e187da41964c3cafdadf54b2f767c3450",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ea87f9e187da41964c3cafdadf54b2f767c3450",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ea87f9e187da41964c3cafdadf54b2f767c3450"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 29,
      "deletions": 18
    },
    "files": [
      {
        "sha": "e69fa713c056131a2317c2b0105d12f23189baa4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
        "patch": "@@ -988,6 +988,11 @@ bool AppInit2(boost::thread_group& threadGroup)\n                     break;\n                 }\n \n+                if (!CheckBlockFiles()) {\n+                    strLoadError = _(\"Error checking required block files. There must be missing or unreadable data\");\n+                    break;\n+                }\n+\n                 // If the loaded chain has a wrong genesis, bail out immediately\n                 // (we're likely using a testnet datadir, or the other way around).\n                 if (!mapBlockIndex.empty() && mapBlockIndex.count(Params().HashGenesisBlock()) == 0)"
      },
      {
        "sha": "7854b78f50c8bcc2373db621d443b149552bfb21",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
        "patch": "@@ -2851,24 +2851,6 @@ bool static LoadBlockIndexDB()\n         }\n     }\n \n-    // Check presence of blk files\n-    LogPrintf(\"Checking all blk files are present...\\n\");\n-    set<int> setBlkDataFiles;\n-    BOOST_FOREACH(const PAIRTYPE(uint256, CBlockIndex*)& item, mapBlockIndex)\n-    {\n-        CBlockIndex* pindex = item.second;\n-        if (pindex->nStatus & BLOCK_HAVE_DATA) {\n-            setBlkDataFiles.insert(pindex->nFile);\n-        }\n-    }\n-    for (std::set<int>::iterator it = setBlkDataFiles.begin(); it != setBlkDataFiles.end(); it++)\n-    {\n-        CDiskBlockPos pos(*it, 0);\n-        if (CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION).IsNull()) {\n-            return false;\n-        }\n-    }\n-\n     // Check whether we need to continue reindexing\n     bool fReindexing = false;\n     pblocktree->ReadReindexing(fReindexing);\n@@ -2891,6 +2873,28 @@ bool static LoadBlockIndexDB()\n     return true;\n }\n \n+bool CheckBlockFiles()\n+{\n+    // Check presence of blk files\n+    LogPrintf(\"Checking all blk files are present...\\n\");\n+    set<int> setBlkDataFiles;\n+    BOOST_FOREACH(const PAIRTYPE(uint256, CBlockIndex*)& item, mapBlockIndex)\n+    {\n+        CBlockIndex* pindex = item.second;\n+        if (pindex->nStatus & BLOCK_HAVE_DATA) {\n+            setBlkDataFiles.insert(pindex->nFile);\n+        }\n+    }\n+    for (std::set<int>::iterator it = setBlkDataFiles.begin(); it != setBlkDataFiles.end(); it++)\n+    {\n+        CDiskBlockPos pos(*it, 0);\n+        if (!CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION)) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n+\n CVerifyDB::CVerifyDB()\n {\n     uiInterface.ShowProgress(_(\"Verifying blocks...\"), 0);"
      },
      {
        "sha": "ecd993b1269fae6ea69047d533e669a93d607dad",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
        "patch": "@@ -173,6 +173,8 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp = NULL);\n bool InitBlockIndex();\n /** Load the block tree and coins database from disk */\n bool LoadBlockIndex();\n+/** Check all required block files are present */\n+bool CheckBlockFiles();\n /** Unload database information */\n void UnloadBlockIndex();\n /** Print the loaded block tree */"
      }
    ]
  },
  {
    "sha": "19f870d867ce63e96be5c2bb9a22b0d7b23f3048",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWY4NzBkODY3Y2U2M2U5NmJlNWMyYmI5YTIyYjBkN2IyM2YzMDQ4",
    "commit": {
      "author": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-10-16T14:59:07Z"
      },
      "committer": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-11-07T14:19:02Z"
      },
      "message": "Split the logic to check if a block file can be opened to a separate function.",
      "tree": {
        "sha": "9072beb93c6a271599642fc6a69e3272eaddba10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9072beb93c6a271599642fc6a69e3272eaddba10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19f870d867ce63e96be5c2bb9a22b0d7b23f3048",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABCAAGBQJUXNTWAAoJEAB9eonG33stO7oP/2+HY6WO4WU1Br5B6S69plQ0\n2LvxKLspYby+6W/lqzow1v6u7zxJsrlqd6xCLqqQLEqW2S9t7dAT9nSTwLE/LwH/\nrw6wQCuxWCRn+51uZh5bQG6H/43cXbtjPDR6x/ZJVJGzqH1Fk5/7z9txHT5k+Al8\nPWmDzK0BAZGqBk4lpsaRTF1nfFIQgeoOJZjtGegkMnHZcuSvVrA7YGNFfPtAulgq\nod/9pTPFyxuGh7um8aErL7P1RfAGoXhkoPIiMW4J4QVP6m7YuhulhqP1hw0bsKcN\n0QrUNOZdlQttiZX5tslFyDZc24iBHSmXRQk7ChKIJimna4LKUaD3rPSlEu2lslHU\nHSO73ZW2xF/CM3jNMGjnNdiYfYW2mT2THDsicEs+dzxIcUXsiAXTrWmXUv/6cNiR\nFtQBeTRRtjP+kmB/lgjN7oPVX01dHMmzTy+buxa2bjhgwlV8Rd17YTZr7aNPC7mq\nSFleYaL5wb/KTgANl80v1H14x9+iXGBM6ZDz1eA8CuPGKx3fKOU7JGJKOomWNHhT\nSiiZEKggzFukJs9LFRQoHWpTzNdR2HhZeVKuGH8RU9hp+lza/H23JUY/bIQRJo8I\n45hWAAi0n2CYuslReyO4Y8sTr1y+WnmYSaS99uu5LP3C/wq20t0bPBWbxZHJaadR\nIFLJlv0eDEZkIg+PgVq/\n=M1HI\n-----END PGP SIGNATURE-----",
        "payload": "tree 9072beb93c6a271599642fc6a69e3272eaddba10\nparent 7694ec98a9df17e35f76f1bfb458e2586c8fb5c8\nauthor Ruben Dario Ponticelli <rdponticelli@gmail.com> 1413471547 -0300\ncommitter Ruben Dario Ponticelli <rdponticelli@gmail.com> 1415369942 -0300\n\nSplit the logic to check if a block file can be opened to a separate function.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19f870d867ce63e96be5c2bb9a22b0d7b23f3048",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19f870d867ce63e96be5c2bb9a22b0d7b23f3048",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19f870d867ce63e96be5c2bb9a22b0d7b23f3048/comments",
    "author": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7694ec98a9df17e35f76f1bfb458e2586c8fb5c8"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a0db051dfd858d44d494a63df38376ace09b87c3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19f870d867ce63e96be5c2bb9a22b0d7b23f3048/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19f870d867ce63e96be5c2bb9a22b0d7b23f3048/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=19f870d867ce63e96be5c2bb9a22b0d7b23f3048",
        "patch": "@@ -2873,6 +2873,12 @@ bool static LoadBlockIndexDB()\n     return true;\n }\n \n+bool BlockFileIsOpenable(int nFile)\n+{\n+    CDiskBlockPos pos(nFile, 0);\n+    return !CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION).IsNull();\n+}\n+\n bool CheckBlockFiles()\n {\n     // Check presence of blk files\n@@ -2887,8 +2893,7 @@ bool CheckBlockFiles()\n     }\n     for (std::set<int>::iterator it = setBlkDataFiles.begin(); it != setBlkDataFiles.end(); it++)\n     {\n-        CDiskBlockPos pos(*it, 0);\n-        if (!CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION)) {\n+        if (!BlockFileIsOpenable(*it)) {\n             return false;\n         }\n     }"
      }
    ]
  },
  {
    "sha": "30ff651bc2d92d68e8140daea9b9e5b71b43809e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGZmNjUxYmMyZDkyZDY4ZTgxNDBkYWVhOWI5ZTViNzFiNDM4MDll",
    "commit": {
      "author": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-10-16T17:28:53Z"
      },
      "committer": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-11-07T18:38:34Z"
      },
      "message": "Add undo data to checks to be sure all required info can be opened.",
      "tree": {
        "sha": "5b049f302494364b09dcc0e212046fd294dd8d42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b049f302494364b09dcc0e212046fd294dd8d42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30ff651bc2d92d68e8140daea9b9e5b71b43809e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABCAAGBQJUXRGyAAoJEAB9eonG33sti7sP/3WgU+IGNku7BoTRiZ7fRIwJ\nylhgpGq87Br+Rmra6JQVOexPFb559Pm2NrnzelKBz7NpvMe4p/vAZt6EDzJvKhGC\n3ftfOZde/eTtHRrvy6r/qySiRxWzIdaiykCE6pJfIQ9D6eRiF9kVh2lT+RX7AaVW\nR9MGXDUnvlisrmcHPlCPH4I51neGbToCl7WT3umm7jaHGJ1CwDng9OckyYD5UJEd\n4z25mG9/Bc0Y26BZ9+MZ9u2J+2uPOanBAppypQOIdmVsyjoERd1wxyQau5z5Gwir\nUWO2ujSuaJ4zUMj8w4JnzXNKfrhtbA1JE/LtwY+GJypTTGWN1RHpEKd0O2Cr3SFi\nc6jlDMyy4x0eLQasZYADhIBqRgMiRqICYhmLyiflC5nwIBNgkFcTBWqeuko9bwR8\n3RTACSeZsxSV1kxtpawdnvXSwpeCC+8XVraLAYPV68JNT+DR1Ad1aDOBdMss2kf2\n+1/J0PiWhOxg26OnBMPUkYBjsGuEYSuEy12hVTEImXcvX+BB9ye6XnoRChZ+G+v1\nYlLgLQXHb8FYFBEKhSNVsunSAbfPZpfFuses4sQbAwuzxgrRZl2nao3r4Doc/bwZ\nLI4PnaO/80MT9WHs119cQdPI0zP1rXldIxtaw3BTSU1HbqJl3+KdYxer+6CaVkvt\n2ZgH8NmyzodocRzH2VSl\n=9Cxf\n-----END PGP SIGNATURE-----",
        "payload": "tree 5b049f302494364b09dcc0e212046fd294dd8d42\nparent 19f870d867ce63e96be5c2bb9a22b0d7b23f3048\nauthor Ruben Dario Ponticelli <rdponticelli@gmail.com> 1413480533 -0300\ncommitter Ruben Dario Ponticelli <rdponticelli@gmail.com> 1415385514 -0300\n\nAdd undo data to checks to be sure all required info can be opened.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30ff651bc2d92d68e8140daea9b9e5b71b43809e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30ff651bc2d92d68e8140daea9b9e5b71b43809e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30ff651bc2d92d68e8140daea9b9e5b71b43809e/comments",
    "author": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19f870d867ce63e96be5c2bb9a22b0d7b23f3048",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19f870d867ce63e96be5c2bb9a22b0d7b23f3048",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19f870d867ce63e96be5c2bb9a22b0d7b23f3048"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 22,
      "deletions": 5
    },
    "files": [
      {
        "sha": "23391b4c1b1bbd4fd83cda58a9213a0c4f455966",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 5,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30ff651bc2d92d68e8140daea9b9e5b71b43809e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30ff651bc2d92d68e8140daea9b9e5b71b43809e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=30ff651bc2d92d68e8140daea9b9e5b71b43809e",
        "patch": "@@ -2879,21 +2879,38 @@ bool BlockFileIsOpenable(int nFile)\n     return !CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION).IsNull();\n }\n \n+bool UndoFileIsOpenable(int nFile)\n+{\n+    CDiskBlockPos pos(nFile, 0);\n+    return !CAutoFile(OpenUndoFile(pos, true), SER_DISK, CLIENT_VERSION).IsNull();\n+}\n+\n+bool DataFilesAreOpenable(int nFile)\n+{\n+    if (BlockFileIsOpenable(nFile) && UndoFileIsOpenable(nFile))\n+        return true;\n+    return false;\n+}\n+\n bool CheckBlockFiles()\n {\n     // Check presence of blk files\n     LogPrintf(\"Checking all blk files are present...\\n\");\n-    set<int> setBlkDataFiles;\n+    set<int> setRequiredDataFilesAreOpenable;\n     BOOST_FOREACH(const PAIRTYPE(uint256, CBlockIndex*)& item, mapBlockIndex)\n     {\n         CBlockIndex* pindex = item.second;\n-        if (pindex->nStatus & BLOCK_HAVE_DATA) {\n-            setBlkDataFiles.insert(pindex->nFile);\n+        if (pindex->nStatus & BLOCK_HAVE_DATA && pindex->nStatus & BLOCK_HAVE_UNDO) {\n+            setRequiredDataFilesAreOpenable.insert(pindex->nFile);\n+        } else {\n+            LogPrintf(\"Error: Required data for block: %i is missing.\\n\", pindex->nHeight);\n+            return false;\n         }\n     }\n-    for (std::set<int>::iterator it = setBlkDataFiles.begin(); it != setBlkDataFiles.end(); it++)\n+    for (std::set<int>::iterator it = setRequiredDataFilesAreOpenable.begin(); it != setRequiredDataFilesAreOpenable.end(); it++)\n     {\n-        if (!BlockFileIsOpenable(*it)) {\n+        if (!DataFilesAreOpenable(*it)) {\n+            LogPrintf(\"Error: Can't open a required block file: %i.\\n\", *it);\n             return false;\n         }\n     }"
      }
    ]
  },
  {
    "sha": "899cbc76b229a37c5a0b412d7f0cd84692ae0a5e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTljYmM3NmIyMjlhMzdjNWEwYjQxMmQ3ZjBjZDg0NjkyYWUwYTVl",
    "commit": {
      "author": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-10-16T16:53:39Z"
      },
      "committer": {
        "name": "Ruben Dario Ponticelli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-11-07T18:39:24Z"
      },
      "message": "Scan active chain instead of map of blocks.",
      "tree": {
        "sha": "a96846bf088df4e012d28d1b4fe49a80e93adcc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a96846bf088df4e012d28d1b4fe49a80e93adcc3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/899cbc76b229a37c5a0b412d7f0cd84692ae0a5e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABCAAGBQJUXRHcAAoJEAB9eonG33stNJcQALNS5dskfPhnsQcaibGEwlir\nbY/XFemPUI6+q4dyaMBWy5RyRish8enF4dZkBnhozzTHJr/KbnkfqzV2cxNzREoW\nPjSmjv9jU3owYM6lRKuGKf0mh/2FexVReWujuZOuV6QMOt3VO39ktLXD01TP+Fna\nzRaNYjyq/zhc3ZSef8ggviiFAd7S9bF30ash00LzSvyR72lWE3weGp6WfGQwQ/fg\nSIs1q/F6VNXrlTjx/RcP2eAsc2ryFkcFgFADV9TZEgpKwqiC8+SMhgvCv3AszQr3\nzqcdHU6lLxrESkbaeydiioR7g4Bv8IJsb/5VB9Xwf/vyDkSNDUKhR0RsF34g8kja\nF157EF4Yr657hQVTw7SbAPghOSsNwL0FnVC3hZ35+gE57BT5MOO/MHQMaiWeDie7\nwSWIICMZAvgRg7l8rfaXkJvX1D3kAP3raAyroL8Bz2SlI+NupizwnFQJSz8y8eCt\nNcAh/hHBKhUKBUWjdvdiMF7PRYKO/lS101UK3rSe18Bf/c/HhFZ5M2qSc9x+kOgB\nLo1BDP4Fv39BC8oUC7fkALfOBJvUR4kCWO84GnCQ5p2uPyNz4G2MKWHjv5Xw1jbW\nSqAQb82TrvTAZczPYDIeboY6ytghNjl4jRtq0kVB9+WMTGd5YJF/ywmyqLxETWO6\nDTLQLHQ9ZJybrFdb4hgx\n=gHZu\n-----END PGP SIGNATURE-----",
        "payload": "tree a96846bf088df4e012d28d1b4fe49a80e93adcc3\nparent 30ff651bc2d92d68e8140daea9b9e5b71b43809e\nauthor Ruben Dario Ponticelli <rdponticelli@gmail.com> 1413478419 -0300\ncommitter Ruben Dario Ponticelli <rdponticelli@gmail.com> 1415385564 -0300\n\nScan active chain instead of map of blocks.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/899cbc76b229a37c5a0b412d7f0cd84692ae0a5e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/899cbc76b229a37c5a0b412d7f0cd84692ae0a5e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/899cbc76b229a37c5a0b412d7f0cd84692ae0a5e/comments",
    "author": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30ff651bc2d92d68e8140daea9b9e5b71b43809e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30ff651bc2d92d68e8140daea9b9e5b71b43809e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30ff651bc2d92d68e8140daea9b9e5b71b43809e"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 9,
      "deletions": 11
    },
    "files": [
      {
        "sha": "5c3af82789a935b16b72af8939ac5b5a95b460a8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/899cbc76b229a37c5a0b412d7f0cd84692ae0a5e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/899cbc76b229a37c5a0b412d7f0cd84692ae0a5e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=899cbc76b229a37c5a0b412d7f0cd84692ae0a5e",
        "patch": "@@ -2897,23 +2897,21 @@ bool CheckBlockFiles()\n     // Check presence of blk files\n     LogPrintf(\"Checking all blk files are present...\\n\");\n     set<int> setRequiredDataFilesAreOpenable;\n-    BOOST_FOREACH(const PAIRTYPE(uint256, CBlockIndex*)& item, mapBlockIndex)\n-    {\n-        CBlockIndex* pindex = item.second;\n+    for (CBlockIndex* pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n         if (pindex->nStatus & BLOCK_HAVE_DATA && pindex->nStatus & BLOCK_HAVE_UNDO) {\n-            setRequiredDataFilesAreOpenable.insert(pindex->nFile);\n+            if (!setRequiredDataFilesAreOpenable.count(pindex->nFile)) {\n+                if (DataFilesAreOpenable(pindex->nFile))\n+                    setRequiredDataFilesAreOpenable.insert(pindex->nFile);\n+                else {\n+                    LogPrintf(\"Error: Required file for block: %i can't be opened.\\n\", pindex->nHeight);\n+                    return false;\n+                }\n+            }\n         } else {\n             LogPrintf(\"Error: Required data for block: %i is missing.\\n\", pindex->nHeight);\n             return false;\n         }\n     }\n-    for (std::set<int>::iterator it = setRequiredDataFilesAreOpenable.begin(); it != setRequiredDataFilesAreOpenable.end(); it++)\n-    {\n-        if (!DataFilesAreOpenable(*it)) {\n-            LogPrintf(\"Error: Can't open a required block file: %i.\\n\", *it);\n-            return false;\n-        }\n-    }\n     return true;\n }\n "
      }
    ]
  }
]