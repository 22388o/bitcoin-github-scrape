[
  {
    "sha": "3cc9094d360dc8ad113a840fd6a467a0ef4c18c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2M5MDk0ZDM2MGRjOGFkMTEzYTg0MGZkNmE0NjdhMGVmNGMxOGM2",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-18T11:57:18Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-18T12:10:36Z"
      },
      "message": "scripted-diff: Rename CChainState::g_failed_blocks to m_failed_blocks\n\nTo reflect its actual status as a member rather than a global value.\n\ng_failed_blocks was previously global: 2862aca40f24acc48d3052d5ba3f639e3fc0a621\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/g_failed_blocks/m_failed_blocks/g' src/validation.cpp\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "fdd07e9694b7a3f3c6ce070aee99a4477429d761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdd07e9694b7a3f3c6ce070aee99a4477429d761"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cc9094d360dc8ad113a840fd6a467a0ef4c18c6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJa1zXKAAoJEG7l83hfeLNFaQMH/A7k3Z4hTuGVKUsl3sRmM8ds\nWYDen9QD/obVvE6YzZBCcv/RLmZjsWqs7XuMSgwfSqHGWkvy0H4wVji0qoUo03yi\n+76Tp0qov4Lnsq7gcWzxEyd2s1Hfg7Mf+ZwR+e9jte5NvS9/c1CU7Rj1/7c8VOha\nUcQ8VQ/rdmt2gXqQ6SAEn1+tuMaBELSYWPAry376t1zCcKAGU3sNJ7jcZQIKcBFm\nKexaCer889SCo1xnagJ8JNciuOFR0GjgAE7A79CWOjR0NnCXLOD3T+j6Tds/pCfe\nOcz/sEByzAkVHkJ9ncij3w04sZ80Idi+xykoJVuWZVMeCl3DxbOtxIP7pv9Mxkg=\n=fEJi\n-----END PGP SIGNATURE-----",
        "payload": "tree fdd07e9694b7a3f3c6ce070aee99a4477429d761\nparent 615f7c288414a89cd1dec1d67e0f84abe2fb4c6d\nauthor Ben Woosley <ben.woosley@gmail.com> 1524052638 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1524053436 -0700\n\nscripted-diff: Rename CChainState::g_failed_blocks to m_failed_blocks\n\nTo reflect its actual status as a member rather than a global value.\n\ng_failed_blocks was previously global: 2862aca40f24acc48d3052d5ba3f639e3fc0a621\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/g_failed_blocks/m_failed_blocks/g' src/validation.cpp\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cc9094d360dc8ad113a840fd6a467a0ef4c18c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3cc9094d360dc8ad113a840fd6a467a0ef4c18c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cc9094d360dc8ad113a840fd6a467a0ef4c18c6/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "615f7c288414a89cd1dec1d67e0f84abe2fb4c6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/615f7c288414a89cd1dec1d67e0f84abe2fb4c6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/615f7c288414a89cd1dec1d67e0f84abe2fb4c6d"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "0f348ab48400c5191eb510d4bb804358f0d72419",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cc9094d360dc8ad113a840fd6a467a0ef4c18c6/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cc9094d360dc8ad113a840fd6a467a0ef4c18c6/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3cc9094d360dc8ad113a840fd6a467a0ef4c18c6",
        "patch": "@@ -142,7 +142,7 @@ class CChainState {\n       * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n       * instead of putting things in this set.\n       */\n-    std::set<CBlockIndex*> g_failed_blocks;\n+    std::set<CBlockIndex*> m_failed_blocks;\n \n public:\n     CChain chainActive;\n@@ -1286,7 +1286,7 @@ void static InvalidChainFound(CBlockIndex* pindexNew)\n void CChainState::InvalidBlockFound(CBlockIndex *pindex, const CValidationState &state) {\n     if (!state.CorruptionPossible()) {\n         pindex->nStatus |= BLOCK_FAILED_VALID;\n-        g_failed_blocks.insert(pindex);\n+        m_failed_blocks.insert(pindex);\n         setDirtyBlockIndex.insert(pindex);\n         setBlockIndexCandidates.erase(pindex);\n         InvalidChainFound(pindex);\n@@ -2783,7 +2783,7 @@ bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& c\n     pindex->nStatus |= BLOCK_FAILED_VALID;\n     setDirtyBlockIndex.insert(pindex);\n     setBlockIndexCandidates.erase(pindex);\n-    g_failed_blocks.insert(pindex);\n+    m_failed_blocks.insert(pindex);\n \n     // DisconnectTip will add transactions to disconnectpool; try to add these\n     // back to the mempool.\n@@ -2829,7 +2829,7 @@ bool CChainState::ResetBlockFailureFlags(CBlockIndex *pindex) {\n                 // Reset invalid block marker if it was pointing to one of those.\n                 pindexBestInvalid = nullptr;\n             }\n-            g_failed_blocks.erase(it->second);\n+            m_failed_blocks.erase(it->second);\n         }\n         it++;\n     }\n@@ -3323,7 +3323,7 @@ bool CChainState::AcceptBlockHeader(const CBlockHeader& block, CValidationState&\n             return error(\"%s: Consensus::ContextualCheckBlockHeader: %s, %s\", __func__, hash.ToString(), FormatStateMessage(state));\n \n         if (!pindexPrev->IsValid(BLOCK_VALID_SCRIPTS)) {\n-            for (const CBlockIndex* failedit : g_failed_blocks) {\n+            for (const CBlockIndex* failedit : m_failed_blocks) {\n                 if (pindexPrev->GetAncestor(failedit->nHeight) == failedit) {\n                     assert(failedit->nStatus & BLOCK_FAILED_VALID);\n                     CBlockIndex* invalid_walk = pindexPrev;\n@@ -4189,7 +4189,7 @@ bool RewindBlockIndex(const CChainParams& params) {\n \n void CChainState::UnloadBlockIndex() {\n     nBlockSequenceId = 1;\n-    g_failed_blocks.clear();\n+    m_failed_blocks.clear();\n     setBlockIndexCandidates.clear();\n }\n "
      }
    ]
  }
]