[
  {
    "sha": "1c83b0a3771bc601fdc75588f2cd45318b19c526",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzgzYjBhMzc3MWJjNjAxZmRjNzU1ODhmMmNkNDUzMThiMTljNTI2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-11-04T16:11:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-11-04T17:06:25Z"
      },
      "message": "Cache size optimizations",
      "tree": {
        "sha": "3c81936fefc0a962c764522057cb6d68e6c230e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c81936fefc0a962c764522057cb6d68e6c230e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c83b0a3771bc601fdc75588f2cd45318b19c526",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c83b0a3771bc601fdc75588f2cd45318b19c526",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c83b0a3771bc601fdc75588f2cd45318b19c526",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c83b0a3771bc601fdc75588f2cd45318b19c526/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a56d3f8a10e3c9f844aee1f362635ae14b872023",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a56d3f8a10e3c9f844aee1f362635ae14b872023",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a56d3f8a10e3c9f844aee1f362635ae14b872023"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 27,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b3ae69d6e31c731c0f462f498ccb02d834650eb8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1c83b0a3771bc601fdc75588f2cd45318b19c526",
        "patch": "@@ -236,7 +236,6 @@ std::string HelpMessage()\n         \"  -gen=0                 \" + _(\"Don't generate coins\") + \"\\n\" +\n         \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\" +\n         \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\" +\n-        \"  -dblogsize=<n>         \" + _(\"Set database disk log size in megabytes (default: 100)\") + \"\\n\" +\n         \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\" +\n         \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\" +\n         \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\" +\n@@ -651,11 +650,23 @@ bool AppInit2()\n         return InitError(msg);\n     }\n \n+    // cache size calculations\n+    size_t nTotalCache = GetArg(\"-dbcache\", 25) << 20;\n+    if (nTotalCache < (1 << 22))\n+        nTotalCache = (1 << 22); // total cache cannot be less than 4 MiB\n+    size_t nBlockTreeDBCache = nTotalCache / 8;\n+    if (nBlockTreeDBCache > (1 << 21))\n+        nBlockTreeDBCache = (1 << 21); // block tree db cache shouldn't be larger than 2 MiB\n+    nTotalCache -= nBlockTreeDBCache;\n+    size_t nCoinDBCache = nTotalCache / 2; // use half of the remaining cache for coindb cache\n+    nTotalCache -= nCoinDBCache;\n+    nCoinCacheSize = nTotalCache / 300; // coins in memory require around 300 bytes\n+\n     uiInterface.InitMessage(_(\"Loading block index...\"));\n     printf(\"Loading block index...\\n\");\n     nStart = GetTimeMillis();\n-    pblocktree = new CBlockTreeDB();\n-    pcoinsdbview = new CCoinsViewDB();\n+    pblocktree = new CBlockTreeDB(nBlockTreeDBCache);\n+    pcoinsdbview = new CCoinsViewDB(nCoinDBCache);\n     pcoinsTip = new CCoinsViewCache(*pcoinsdbview);\n \n     if (!LoadBlockIndex())"
      },
      {
        "sha": "58b75e5295db4a498eddd8dce653a8bb2446a3ed",
        "filename": "src/leveldb.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb.cpp?ref=1c83b0a3771bc601fdc75588f2cd45318b19c526",
        "patch": "@@ -12,22 +12,22 @@\n \n #include <boost/filesystem.hpp>\n \n-static leveldb::Options GetOptions() {\n+static leveldb::Options GetOptions(size_t nCacheSize) {\n     leveldb::Options options;\n-    int nCacheSizeMB = GetArg(\"-dbcache\", 25);\n-    options.block_cache = leveldb::NewLRUCache(nCacheSizeMB * 1048576);\n+    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n     options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n     options.compression = leveldb::kNoCompression;\n     return options;\n }\n \n-CLevelDB::CLevelDB(const boost::filesystem::path &path, bool fMemory) {\n+CLevelDB::CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool fMemory) {\n     penv = NULL;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n     iteroptions.fill_cache = false;\n     syncoptions.sync = true;\n-    options = GetOptions();\n+    options = GetOptions(nCacheSize);\n     options.create_if_missing = true;\n     if (fMemory) {\n         penv = leveldb::NewMemEnv(leveldb::Env::Default());"
      },
      {
        "sha": "e5b2e1ef0b01f33711f7fad4d30931d596473e3c",
        "filename": "src/leveldb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/leveldb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/leveldb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb.h?ref=1c83b0a3771bc601fdc75588f2cd45318b19c526",
        "patch": "@@ -69,7 +69,7 @@ class CLevelDB\n     leveldb::DB *pdb;\n \n public:\n-    CLevelDB(const boost::filesystem::path &path, bool fMemory = false);\n+    CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool fMemory = false);\n     ~CLevelDB();\n \n     template<typename K, typename V> bool Read(const K& key, V& value) {"
      },
      {
        "sha": "a08e393caaa56138afeb7ecd204913b98d907bf7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1c83b0a3771bc601fdc75588f2cd45318b19c526",
        "patch": "@@ -41,6 +41,7 @@ CBlockIndex* pindexBest = NULL;\n set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid; // may contain all CBlockIndex*'s that have validness >=BLOCK_VALID_TRANSACTIONS, and must contain those who aren't failed\n int64 nTimeBestReceived = 0;\n bool fImporting = false;\n+unsigned int nCoinCacheSize = 5000;\n \n CMedianFilter<int> cPeerBlockCounts(5, 0); // Amount of blocks that other nodes claim to have\n \n@@ -1735,7 +1736,7 @@ bool SetBestChain(CBlockIndex* pindexNew)\n \n     // Make sure it's successfully written to disk before changing memory structure\n     bool fIsInitialDownload = IsInitialBlockDownload();\n-    if (!fIsInitialDownload || view.GetCacheSize()>5000) {\n+    if (!fIsInitialDownload || view.GetCacheSize() > nCoinCacheSize) {\n         FlushBlockFile();\n         pblocktree->Sync();\n         if (!view.Flush())"
      },
      {
        "sha": "899cabd85a67d67a7afcdbaf7ccddda5a0288c77",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=1c83b0a3771bc601fdc75588f2cd45318b19c526",
        "patch": "@@ -88,6 +88,7 @@ extern CCriticalSection cs_setpwalletRegistered;\n extern std::set<CWallet*> setpwalletRegistered;\n extern unsigned char pchMessageStart[4];\n extern bool fImporting;\n+extern unsigned int nCoinCacheSize;\n \n // Settings\n extern int64 nTransactionFee;"
      },
      {
        "sha": "d9972d5b06f8a74e3cfb2dacccb2862067b360df",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=1c83b0a3771bc601fdc75588f2cd45318b19c526",
        "patch": "@@ -19,7 +19,7 @@ void static BatchWriteHashBestChain(CLevelDBBatch &batch, const uint256 &hash) {\n     batch.Write('B', hash);\n }\n \n-CCoinsViewDB::CCoinsViewDB(bool fMemory) : db(GetDataDir() / \"coins\", fMemory) {\n+CCoinsViewDB::CCoinsViewDB(size_t nCacheSize, bool fMemory) : db(GetDataDir() / \"coins\", nCacheSize, fMemory) {\n }\n \n bool CCoinsViewDB::GetCoins(uint256 txid, CCoins &coins) { \n@@ -64,7 +64,7 @@ bool CCoinsViewDB::BatchWrite(const std::map<uint256, CCoins> &mapCoins, CBlockI\n     return db.WriteBatch(batch);\n }\n \n-CBlockTreeDB::CBlockTreeDB(bool fMemory) : CLevelDB(GetDataDir() / \"blktree\", fMemory) {\n+CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory) : CLevelDB(GetDataDir() / \"blktree\", nCacheSize, fMemory) {\n }\n \n bool CBlockTreeDB::WriteBlockIndex(const CDiskBlockIndex& blockindex)"
      },
      {
        "sha": "e13925c964da4dc07ecc546acad2fab4a99572e3",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c83b0a3771bc601fdc75588f2cd45318b19c526/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=1c83b0a3771bc601fdc75588f2cd45318b19c526",
        "patch": "@@ -14,7 +14,7 @@ class CCoinsViewDB : public CCoinsView\n protected:\n     CLevelDB db;\n public:\n-    CCoinsViewDB(bool fMemory = false);\n+    CCoinsViewDB(size_t nCacheSize, bool fMemory = false);\n \n     bool GetCoins(uint256 txid, CCoins &coins);\n     bool SetCoins(uint256 txid, const CCoins &coins);\n@@ -29,7 +29,7 @@ class CCoinsViewDB : public CCoinsView\n class CBlockTreeDB : public CLevelDB\n {\n public:\n-    CBlockTreeDB(bool fMemory = false);\n+    CBlockTreeDB(size_t nCacheSize, bool fMemory = false);\n private:\n     CBlockTreeDB(const CBlockTreeDB&);\n     void operator=(const CBlockTreeDB&);"
      }
    ]
  }
]