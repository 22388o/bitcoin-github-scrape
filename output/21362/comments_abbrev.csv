adamjonas,2021-03-05 15:24:44,"Thanks for picking this up @ivanacostarubio\n\nFriendly reminder that these 3 commits should [be squashed](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits).",https://github.com/bitcoin/bitcoin/pull/21362#issuecomment-791488742,791488742,
brunoerg,2021-03-06 23:36:00,"Tested ACK 00f400b1688159027a51ae57f81ab131130cca98\n\nRan it on Ubuntu 20.04\n\nnit: I think you could use something like `self.log.info` on each logic step of the test, because when I executed the test I couldn't follow the logic behind it just looking at the terminal.",https://github.com/bitcoin/bitcoin/pull/21362#issuecomment-792117949,792117949,
7hacker,2021-03-04 18:15:33,A similar test for 2106 to handle an unsigned 32-bit time_t type. See https://en.bitcoin.it/wiki/Block_timestamp,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r587705274,587705274,test/functional/y2038.py
IamLupo,2021-03-04 22:20:19,Wouldn't it be a better test that you set the time on the machine itself and let it test what value std::chrono::system_clock will generate? This way you can accually test when std::chrono is been updated and what the epoch value accually be and how much bits it uses.,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r587868322,587868322,test/functional/y2038.py
adamjonas,2021-03-05 15:16:16,trailing whitespace here is breaking the linter,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588372767,588372767,test/functional/y2038.py
adamjonas,2021-03-05 15:19:08,"This naming convention doesn't work. Check out https://github.com/bitcoin/bitcoin/blob/a9335e4f129cadd87fda0fe49baf74670ded491a/test/functional/test_runner.py#L690\nto see a list of accepted prefixes.",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588375436,588375436,test/functional/test_runner.py
ivanacostarubio,2021-03-05 16:24:08,"Got it. Thanks. I've prefixed the name with example_. However, there is only one there and this tells me the prefix should be something else. \n\nI'm also wondering if this is the right approach to test this as the tests passes. ",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588439378,588439378,test/functional/test_runner.py
ivanacostarubio,2021-03-05 17:11:29,Yes. I'm going to take a stab at it. ,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588484667,588484667,test/functional/y2038.py
jonatack,2021-03-05 17:14:32,"the file perms should be 755 (`sudo chmod 755 test/functional/example_y2038.py`)\n```\n-rwxr-xr-x 1   9070 Mar  1 22:43 example_test.py*\n-rw-r--r-- 1   1301 Mar  5 18:06 example_y2038.py\n```\nIf this is intended to be a real test, ISTM it should have another file name.\n",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588487586,588487586,test/functional/test_runner.py
jonatack,2021-03-05 17:16:57,Per PEP8 this import should be at the top of the imports. But it does not seem needed.,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588489916,588489916,test/functional/example_y2038.py
jonatack,2021-03-05 17:23:34,"Depending on the approach you end up using, it might be an interesting exercise to try writing this as one of the C++ unit tests, once you have it figured out in Python.",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588496106,588496106,test/functional/y2038.py
brunoerg,2021-03-06 23:28:04,"```suggestion\n            # Generates one block\n```\nI think 'one block' would be better since you're generating just one block.",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r588944933,588944933,test/functional/example_y2038.py
ivanacostarubio,2021-03-08 14:08:29,Got it. Thanks for pointing this out. Removed. ,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r589446510,589446510,test/functional/example_y2038.py
ivanacostarubio,2021-03-08 14:09:37,Yes. Thanks you Bruno. ,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r589447362,589447362,test/functional/example_y2038.py
ivanacostarubio,2021-03-08 14:11:21,"I'll work on the unit test. It will be interesting. \n\nThank you for the review @jonatack. ",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r589448498,589448498,test/functional/y2038.py
ivanacostarubio,2021-03-08 14:17:34,Indeed. What would you name a test like this @jonatack assuming this approach is correct ? (unit test may be better)   ,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r589452795,589452795,test/functional/test_runner.py
brunoerg,2021-03-08 14:20:03,"```suggestion\n```\nYou can remove this import since you're not using the lib, probably lint got it.",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r589454648,589454648,test/functional/example_y2038.py
ivanacostarubio,2021-03-08 15:09:13,Yes. Thank you. ,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r589494692,589494692,test/functional/example_y2038.py
luke-jr,2021-03-09 18:47:37,"This is AD 138022, not AD 2038.",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r590629858,590629858,test/functional/example_y2038.py
luke-jr,2021-03-09 18:47:53,Note that the expected behaviour for AD 2106 and beyond is for all blocks to be invalid... This should fail.,https://github.com/bitcoin/bitcoin/pull/21362#discussion_r590630048,590630048,test/functional/example_y2038.py
IamLupo,2021-03-09 18:52:30,"yeah thats because there isnt not enough bits difined at specific parts of the code. It needs to be changed to uint64_t as example: https://github.com/bitcoin/bitcoin/blob/4a540683ec40393d6369da1a9e02e45614db936d/src/primitives/block.h#L27\n",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r590633156,590633156,test/functional/example_y2038.py
luke-jr,2021-03-09 19:18:25,"Changing the type there is a hardfork. Also not a good approach (makes more sense to just allow it to wrap around).\n\nDefining a hardfork goes beyond writing tests. A test should simply confirm such blocks are invalid.",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r590650794,590650794,test/functional/example_y2038.py
IamLupo,2021-03-09 19:29:14,"> \n> \n> Changing the type there is a hardfork. Also not a good approach (makes more sense to just allow it to wrap around).\n> \n> Defining a hardfork goes beyond writing tests. A test should simply confirm such blocks are invalid.\n\nWell a approach could be that you first implement this type change in a patch and distribute it but just not activate it yet. You just set a block-id when th",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r590658112,590658112,test/functional/example_y2038.py
ivanacostarubio,2021-03-10 14:49:03,"You are correct. Thank you for pointing this out. \n\n```\n∆õ date -r 4293404400000 '+%m/%d/%Y'\n07/27/138022\n```\n\nI'm going to change it to: 4293404400 to test for 2106.  See the last sentence on: https://en.bitcoin.it/wiki/Block_timestamp \n\n```\ndate -r 4293404400 '+%m/%d/%Y'\n01/19/2106\n```",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r591585047,591585047,test/functional/example_y2038.py
ivanacostarubio,2021-03-10 18:30:09,"Got it. I'm going to change the test to reflect that. I also saw it failed at one of our CI checks (https://cirrus-ci.com/task/6103755461492736?command=ci#L5253), but not on the others https://cirrus-ci.com/task/4626011833761792?command=ci#L3610\n\n```\n node0 stderr miner.cpp:130:21: runtime error: implicit conversion from type 'int64_t' (aka 'long') of value 4293404400000 (64-bit, signed) to ",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r591768919,591768919,test/functional/example_y2038.py
NelsonGaldeman,2021-07-16 16:38:57,"nit: All the naming (class, method, logs, file name) reference the year 2038 but it tests the year 2106 as well!",https://github.com/bitcoin/bitcoin/pull/21362#discussion_r671389045,671389045,test/functional/example_y2038.py
