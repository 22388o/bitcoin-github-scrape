[
  {
    "sha": "93e5e483911537a73f85fd3a33e08f8475c779d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2U1ZTQ4MzkxMTUzN2E3M2Y4NWZkM2EzM2UwOGY4NDc1Yzc3OWQ3",
    "commit": {
      "author": {
        "name": "Pierre Pronchery",
        "email": "khorben@defora.org",
        "date": "2012-04-03T18:29:04Z"
      },
      "committer": {
        "name": "Pierre Pronchery",
        "email": "khorben@defora.org",
        "date": "2012-04-03T18:29:04Z"
      },
      "message": "This Makefile lets bitcoind compile on NetBSD, once:\n- the partial fix to standard/44777 is applied (for AI_ADDRCONFIG)\n- devel/gmake and devel/boost-libs are installed\n- compiling with BOOST_INCLUDE_PATH=/usr/pkg/include, BDB_INCLUDE_PATH=/usr/pkg/include/db4, BDB_LIB_SUFFIX=4, LDFLAGS=\"-L /usr/pkg/lib -Wl,-rpath,/usr/pkg/lib\"",
      "tree": {
        "sha": "ddd975a320c6eba210e7092a7fb87073fa4266fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddd975a320c6eba210e7092a7fb87073fa4266fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93e5e483911537a73f85fd3a33e08f8475c779d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93e5e483911537a73f85fd3a33e08f8475c779d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93e5e483911537a73f85fd3a33e08f8475c779d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93e5e483911537a73f85fd3a33e08f8475c779d7/comments",
    "author": {
      "login": "khorben",
      "id": 1081724,
      "node_id": "MDQ6VXNlcjEwODE3MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1081724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khorben",
      "html_url": "https://github.com/khorben",
      "followers_url": "https://api.github.com/users/khorben/followers",
      "following_url": "https://api.github.com/users/khorben/following{/other_user}",
      "gists_url": "https://api.github.com/users/khorben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khorben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khorben/subscriptions",
      "organizations_url": "https://api.github.com/users/khorben/orgs",
      "repos_url": "https://api.github.com/users/khorben/repos",
      "events_url": "https://api.github.com/users/khorben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khorben/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "khorben",
      "id": 1081724,
      "node_id": "MDQ6VXNlcjEwODE3MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1081724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khorben",
      "html_url": "https://github.com/khorben",
      "followers_url": "https://api.github.com/users/khorben/followers",
      "following_url": "https://api.github.com/users/khorben/following{/other_user}",
      "gists_url": "https://api.github.com/users/khorben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khorben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khorben/subscriptions",
      "organizations_url": "https://api.github.com/users/khorben/orgs",
      "repos_url": "https://api.github.com/users/khorben/repos",
      "events_url": "https://api.github.com/users/khorben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khorben/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7868808b2f0d14ca63ed680fdb1ff6bf331e5158",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7868808b2f0d14ca63ed680fdb1ff6bf331e5158",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7868808b2f0d14ca63ed680fdb1ff6bf331e5158"
      }
    ],
    "stats": {
      "total": 142,
      "additions": 142,
      "deletions": 0
    },
    "files": [
      {
        "sha": "73d335be6703215375d18653e04d2a731020e7ba",
        "filename": "src/makefile.netbsd",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93e5e483911537a73f85fd3a33e08f8475c779d7/src/makefile.netbsd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93e5e483911537a73f85fd3a33e08f8475c779d7/src/makefile.netbsd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.netbsd?ref=93e5e483911537a73f85fd3a33e08f8475c779d7",
        "patch": "@@ -0,0 +1,142 @@\n+# Copyright (c) 2009-2010 Satoshi Nakamoto\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file license.txt or http://www.opensource.org/licenses/mit-license.php.\n+\n+USE_UPNP:=0\n+\n+DEFS=-DNOPCH\n+\n+DEFS += $(addprefix -I,$(CURDIR) $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))\n+LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))\n+\n+LMODE = dynamic\n+LMODE2 = dynamic\n+ifdef STATIC\n+\tLMODE = static\n+\tifeq (${STATIC}, all)\n+\t\tLMODE2 = static\n+\tendif\n+else\n+\tTESTDEFS += -DBOOST_TEST_DYN_LINK\n+endif\n+\n+# for boost 1.37, add -mt to the boost libraries\n+LIBS += \\\n+ -Wl,-B$(LMODE) \\\n+   -l boost_system$(BOOST_LIB_SUFFIX) \\\n+   -l boost_filesystem$(BOOST_LIB_SUFFIX) \\\n+   -l boost_program_options$(BOOST_LIB_SUFFIX) \\\n+   -l boost_thread$(BOOST_LIB_SUFFIX) \\\n+   -l db$(BDB_LIB_SUFFIX)_cxx \\\n+   -l ssl \\\n+   -l crypto\n+\n+ifndef USE_UPNP\n+\toverride USE_UPNP = -\n+endif\n+ifneq (${USE_UPNP}, -)\n+\tLIBS += -l miniupnpc\n+\tDEFS += -DUSE_UPNP=$(USE_UPNP)\n+endif\n+\n+ifneq (${USE_SSL}, 0)\n+\tDEFS += -DUSE_SSL\n+endif\n+\n+LIBS+= \\\n+ -Wl,-B$(LMODE2) \\\n+   -l z \\\n+   -l pthread\n+\n+\n+# Hardening\n+# Make some classes of vulnerabilities unexploitable in case one is discovered.\n+#\n+    # This is a workaround for Ubuntu bug #691722, the default -fstack-protector causes\n+    # -fstack-protector-all to be ignored unless -fno-stack-protector is used first.\n+    # see: https://bugs.launchpad.net/ubuntu/+source/gcc-4.5/+bug/691722\n+    HARDENING=-fno-stack-protector\n+\n+    # Stack Canaries\n+    # Put numbers at the beginning of each stack frame and check that they are the same.\n+    # If a stack buffer if overflowed, it writes over the canary number and then on return\n+    # when that number is checked, it won't be the same and the program will exit with\n+    # a \"Stack smashing detected\" error instead of being exploited.\n+    HARDENING+=-fstack-protector-all -Wstack-protector\n+\n+    # Make some important things such as the global offset table read only as soon as\n+    # the dynamic linker is finished building it. This will prevent overwriting of addresses\n+    # which would later be jumped to.\n+    HARDENING+=-Wl,-z,relro -Wl,-z,now\n+\n+    # Build position independent code to take advantage of Address Space Layout Randomization\n+    # offered by some kernels.\n+    # see doc/build-unix.txt for more information.\n+    ifdef PIE\n+        HARDENING+=-fPIE -pie\n+    endif\n+\n+    # -D_FORTIFY_SOURCE=2 does some checking for potentially exploitable code patterns in\n+    # the source such overflowing a statically defined buffer.\n+    HARDENING+=-D_FORTIFY_SOURCE=2\n+#\n+\n+\n+DEBUGFLAGS=-g\n+CXXFLAGS=-O2\n+xCXXFLAGS=-pthread -Wextra -Wno-sign-compare -Wno-char-subscripts -Wno-invalid-offsetof -Wformat -Wformat-security \\\n+    $(DEBUGFLAGS) $(DEFS) $(HARDENING) $(CXXFLAGS)\n+\n+OBJS= \\\n+    obj/checkpoints.o \\\n+    obj/netbase.o \\\n+    obj/crypter.o \\\n+    obj/key.o \\\n+    obj/db.o \\\n+    obj/init.o \\\n+    obj/irc.o \\\n+    obj/keystore.o \\\n+    obj/main.o \\\n+    obj/net.o \\\n+    obj/protocol.o \\\n+    obj/bitcoinrpc.o \\\n+    obj/rpcdump.o \\\n+    obj/script.o \\\n+    obj/util.o \\\n+    obj/wallet.o\n+\n+\n+all: bitcoind\n+\n+# auto-generated dependencies:\n+-include obj/*.P\n+-include obj-test/*.P\n+\n+obj/%.o: %.cpp\n+\t$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<\n+\t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n+\t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n+\t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n+\t  rm -f $(@:%.o=%.d)\n+\n+bitcoind: $(OBJS:obj/%=obj/%)\n+\t$(CXX) $(xCXXFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)\n+\n+TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))\n+\n+obj-test/%.o: test/%.cpp\n+\t$(CXX) -c $(TESTDEFS) $(xCXXFLAGS) -MMD -o $@ $<\n+\t@cp $(@:%.o=%.d) $(@:%.o=%.P); \\\n+\t  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\\\$$//' \\\n+\t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n+\t  rm -f $(@:%.o=%.d)\n+\n+test_bitcoin: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))\n+\t$(CXX) $(xCXXFLAGS) -o $@ $(LIBPATHS) $^ -Wl,-B$(LMODE) -lboost_unit_test_framework $(LDFLAGS) $(LIBS)\n+\n+clean:\n+\t-rm -f bitcoind test_bitcoin\n+\t-rm -f obj/*.o\n+\t-rm -f obj-test/*.o\n+\t-rm -f obj/*.P\n+\t-rm -f obj-test/*.P"
      }
    ]
  },
  {
    "sha": "0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGRkZTE1MjllZDBhNWNlZDdjZjhiNDJlMzllZWI2YjMzZDAyZTk0",
    "commit": {
      "author": {
        "name": "Pierre Pronchery",
        "email": "khorben@defora.org",
        "date": "2012-04-03T18:56:03Z"
      },
      "committer": {
        "name": "Pierre Pronchery",
        "email": "khorben@defora.org",
        "date": "2012-04-03T18:56:03Z"
      },
      "message": "No longer need any explicit arguments to gmake by default (pkgsrc)",
      "tree": {
        "sha": "c638c480c82fd73364b43b0308e3aa70d5dd9b4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c638c480c82fd73364b43b0308e3aa70d5dd9b4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94/comments",
    "author": {
      "login": "khorben",
      "id": 1081724,
      "node_id": "MDQ6VXNlcjEwODE3MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1081724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khorben",
      "html_url": "https://github.com/khorben",
      "followers_url": "https://api.github.com/users/khorben/followers",
      "following_url": "https://api.github.com/users/khorben/following{/other_user}",
      "gists_url": "https://api.github.com/users/khorben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khorben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khorben/subscriptions",
      "organizations_url": "https://api.github.com/users/khorben/orgs",
      "repos_url": "https://api.github.com/users/khorben/repos",
      "events_url": "https://api.github.com/users/khorben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khorben/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "khorben",
      "id": 1081724,
      "node_id": "MDQ6VXNlcjEwODE3MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1081724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khorben",
      "html_url": "https://github.com/khorben",
      "followers_url": "https://api.github.com/users/khorben/followers",
      "following_url": "https://api.github.com/users/khorben/following{/other_user}",
      "gists_url": "https://api.github.com/users/khorben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khorben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khorben/subscriptions",
      "organizations_url": "https://api.github.com/users/khorben/orgs",
      "repos_url": "https://api.github.com/users/khorben/repos",
      "events_url": "https://api.github.com/users/khorben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khorben/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93e5e483911537a73f85fd3a33e08f8475c779d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93e5e483911537a73f85fd3a33e08f8475c779d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93e5e483911537a73f85fd3a33e08f8475c779d7"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ea242711fca4eb2e91adb1cc65cf6fe41875ff52",
        "filename": "src/makefile.netbsd",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94/src/makefile.netbsd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94/src/makefile.netbsd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.netbsd?ref=0ddde1529ed0a5ced7cf8b42e39eeb6b33d02e94",
        "patch": "@@ -1,13 +1,22 @@\n # Copyright (c) 2009-2010 Satoshi Nakamoto\n # Distributed under the MIT/X11 software license, see the accompanying\n # file license.txt or http://www.opensource.org/licenses/mit-license.php.\n+# Modified for NetBSD by Pierre Pronchery <khorben@defora.org>\n \n USE_UPNP:=0\n \n DEFS=-DNOPCH\n \n+BDB_INCLUDE_PATH ?= /usr/pkg/include/db4\n+BDB_LIB_PATH ?= /usr/pkg/lib\n+BDB_LIB_SUFFIX ?= 4\n+BOOST_INCLUDE_PATH ?= /usr/pkg/include\n+BOOST_LIB_PATH ?= /usr/pkg/lib\n+\n+comma := ,\n DEFS += $(addprefix -I,$(CURDIR) $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))\n LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))\n+LIBS += $(addprefix -Wl$(comma)-rpath$(comma),$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))\n \n LMODE = dynamic\n LMODE2 = dynamic"
      }
    ]
  }
]