[
  {
    "sha": "0c03c6155ec4893de14ab1cf6cf665a57331344a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzAzYzYxNTVlYzQ4OTNkZTE0YWIxY2Y2Y2Y2NjVhNTczMzEzNDRh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-15T12:10:09Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "test: make mempool_tests/MempoolSizeLimitTest allocation-neutral",
      "tree": {
        "sha": "f3ed9519f07a6715378fee000b86657e69f67f62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3ed9519f07a6715378fee000b86657e69f67f62"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c03c6155ec4893de14ab1cf6cf665a57331344a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c03c6155ec4893de14ab1cf6cf665a57331344a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c03c6155ec4893de14ab1cf6cf665a57331344a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c03c6155ec4893de14ab1cf6cf665a57331344a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f5000ae66c4042514f6404ee957fce8f5820600e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5000ae66c4042514f6404ee957fce8f5820600e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5000ae66c4042514f6404ee957fce8f5820600e"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0696385a02287ba685762585f8aabafd04989b60",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c03c6155ec4893de14ab1cf6cf665a57331344a/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c03c6155ec4893de14ab1cf6cf665a57331344a/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=0c03c6155ec4893de14ab1cf6cf665a57331344a",
        "patch": "@@ -425,6 +425,7 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n {\n     CTxMemPool pool;\n     LOCK2(cs_main, pool.cs);\n+    const size_t empty_pool_memory_usage = pool.DynamicMemoryUsage();\n     TestMemPoolEntryHelper entry;\n \n     CMutableTransaction tx1 = CMutableTransaction();\n@@ -447,7 +448,7 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     BOOST_CHECK(pool.exists(tx1.GetHash()));\n     BOOST_CHECK(pool.exists(tx2.GetHash()));\n \n-    pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4); // should remove the lower-feerate transaction\n+    pool.TrimToSize((pool.DynamicMemoryUsage() - empty_pool_memory_usage) * 3 / 4 + empty_pool_memory_usage); // should remove the lower-feerate transaction\n     BOOST_CHECK(pool.exists(tx1.GetHash()));\n     BOOST_CHECK(!pool.exists(tx2.GetHash()));\n \n@@ -461,7 +462,7 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     tx3.vout[0].nValue = 10 * COIN;\n     pool.addUnchecked(entry.Fee(20000LL).FromTx(tx3));\n \n-    pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4); // tx3 should pay for tx2 (CPFP)\n+    pool.TrimToSize((pool.DynamicMemoryUsage() - empty_pool_memory_usage) * 3 / 4 + empty_pool_memory_usage); // tx3 should pay for tx2 (CPFP)\n     BOOST_CHECK(!pool.exists(tx1.GetHash()));\n     BOOST_CHECK(pool.exists(tx2.GetHash()));\n     BOOST_CHECK(pool.exists(tx3.GetHash()));\n@@ -537,7 +538,7 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n         pool.addUnchecked(entry.Fee(1000LL).FromTx(tx5));\n     pool.addUnchecked(entry.Fee(9000LL).FromTx(tx7));\n \n-    pool.TrimToSize(pool.DynamicMemoryUsage() / 2); // should maximize mempool size by only removing 5/7\n+    pool.TrimToSize((pool.DynamicMemoryUsage() - empty_pool_memory_usage) / 2 + empty_pool_memory_usage); // should maximize mempool size by only removing 5/7\n     BOOST_CHECK(pool.exists(tx4.GetHash()));\n     BOOST_CHECK(!pool.exists(tx5.GetHash()));\n     BOOST_CHECK(pool.exists(tx6.GetHash()));"
      }
    ]
  },
  {
    "sha": "f48ba0b0384ab0c9fda18009531c07ec48e9249b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDhiYTBiMDM4NGFiMGM5ZmRhMTgwMDk1MzFjMDdlYzQ4ZTkyNDli",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-15T12:58:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "test: make validation_flush_tests/getcoinscachesizestate allocation-neutral",
      "tree": {
        "sha": "30e660463e89e4a0a3965d51908edf1e26296676",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30e660463e89e4a0a3965d51908edf1e26296676"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f48ba0b0384ab0c9fda18009531c07ec48e9249b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48ba0b0384ab0c9fda18009531c07ec48e9249b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f48ba0b0384ab0c9fda18009531c07ec48e9249b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48ba0b0384ab0c9fda18009531c07ec48e9249b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c03c6155ec4893de14ab1cf6cf665a57331344a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c03c6155ec4893de14ab1cf6cf665a57331344a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c03c6155ec4893de14ab1cf6cf665a57331344a"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "22317292ad4ef31ba9e16d84899d0d366d78bda4",
        "filename": "src/test/validation_flush_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48ba0b0384ab0c9fda18009531c07ec48e9249b/src/test/validation_flush_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48ba0b0384ab0c9fda18009531c07ec48e9249b/src/test/validation_flush_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_flush_tests.cpp?ref=f48ba0b0384ab0c9fda18009531c07ec48e9249b",
        "patch": "@@ -115,11 +115,12 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n         chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 1 << 10),\n         CoinsCacheSizeState::OK);\n \n+    const size_t empty_pool_memory_usage = tx_pool.DynamicMemoryUsage();\n     for (int i{0}; i < 3; ++i) {\n         add_coin(view);\n         print_view_mem_usage(view);\n         BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ 1 << 10),\n+            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, /*max_mempool_size_bytes*/ (1 << 10) + empty_pool_memory_usage),\n             CoinsCacheSizeState::OK);\n     }\n \n@@ -135,7 +136,7 @@ BOOST_AUTO_TEST_CASE(getcoinscachesizestate)\n         BOOST_CHECK(usage_percentage >= 0.9);\n         BOOST_CHECK(usage_percentage < 1);\n         BOOST_CHECK_EQUAL(\n-            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, 1 << 10),\n+            chainstate.GetCoinsCacheSizeState(tx_pool, MAX_COINS_CACHE_BYTES, (1 << 10) + empty_pool_memory_usage),\n             CoinsCacheSizeState::LARGE);\n     }\n "
      }
    ]
  },
  {
    "sha": "8bad146c6544384649d8f11c2d03ba6243b88a38",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YmFkMTQ2YzY1NDQzODQ2NDlkOGYxMWMyZDAzYmE2MjQzYjg4YTM4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-11T01:26:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Add AccountingAllocator to help with memusage tracking",
      "tree": {
        "sha": "ba9ab54719a0d57503180bfd4d72a02bd48434bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba9ab54719a0d57503180bfd4d72a02bd48434bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bad146c6544384649d8f11c2d03ba6243b88a38",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bad146c6544384649d8f11c2d03ba6243b88a38",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8bad146c6544384649d8f11c2d03ba6243b88a38",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bad146c6544384649d8f11c2d03ba6243b88a38/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f48ba0b0384ab0c9fda18009531c07ec48e9249b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48ba0b0384ab0c9fda18009531c07ec48e9249b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f48ba0b0384ab0c9fda18009531c07ec48e9249b"
      }
    ],
    "stats": {
      "total": 97,
      "additions": 97,
      "deletions": 0
    },
    "files": [
      {
        "sha": "be88492acd277919f751e62c230ac419234eec6f",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bad146c6544384649d8f11c2d03ba6243b88a38/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bad146c6544384649d8f11c2d03ba6243b88a38/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=8bad146c6544384649d8f11c2d03ba6243b88a38",
        "patch": "@@ -25,6 +25,64 @@ namespace memusage\n /** Compute the total memory used by allocating alloc bytes. */\n static size_t MallocUsage(size_t alloc);\n \n+/** Wrapping allocator that accounts accurately.\n+ *\n+ * To use accounting, the AccountAllocator(size_t&) constructor must be used.\n+ * Any containers using such an allocator, and containers moved constructed or\n+ * assigned from such containers will then increment/decrement size_t when\n+ * allocating/deallocating memory.\n+ */\n+template<typename T>\n+class AccountingAllocator : public std::allocator<T>\n+{\n+    //! Pointer to accounting variable, if any.\n+    size_t* m_allocated;\n+\n+    template<typename U> friend class AccountingAllocator;\n+    typedef std::allocator<T> base;\n+\n+public:\n+    //! Default constructor constructs a non-accounting allocator.\n+    AccountingAllocator() noexcept : m_allocated(nullptr) {}\n+\n+    /** Construct an allocator that increments/decrements 'allocated' on allocate/free.\n+     *\n+     * In a multithreaded environment, the variable needs to be protected by the same\n+     * lock as the container(s) that use this allocator. */\n+    explicit AccountingAllocator(size_t& allocated) noexcept : m_allocated(&allocated) {}\n+\n+    //! A copy-constructed container will be non-accounting.\n+    static AccountingAllocator select_on_container_copy_construction() { return AccountingAllocator(); }\n+    //! A copy-assigned container will be non-accounting.\n+    typedef std::false_type propagate_on_container_copy_assignment;\n+    //! The accounting will follow a container as it's moved.\n+    typedef std::true_type propagate_on_container_move_assignment;\n+    //! The accounting will follow a container as it's swapped.\n+    typedef std::true_type propagate_on_container_swap;\n+\n+    // Construct an allocator for a different data type, inheriting the accounting.\n+    template <typename U> AccountingAllocator(AccountingAllocator<U>&& a) noexcept : base(std::move(a)), m_allocated(a.m_allocated) {}\n+    template <typename U> AccountingAllocator(const AccountingAllocator<U>& a) noexcept : base(a), m_allocated(a.m_allocated) {}\n+\n+    typename base::value_type* allocate(std::size_t n, const void* hint = nullptr)\n+    {\n+        typename base::value_type* allocation = base::allocate(n, hint);\n+        if (m_allocated) *m_allocated += MallocUsage(sizeof(typename base::value_type) * n);\n+        return allocation;\n+    }\n+\n+    void deallocate(typename base::value_type* p, std::size_t n)\n+    {\n+        base::deallocate(p, n);\n+        if (m_allocated) *m_allocated -= MallocUsage(sizeof(typename base::value_type) * n);\n+    }\n+\n+    template<typename U> struct rebind { typedef AccountingAllocator<U> other; };\n+\n+    friend bool operator==(const AccountingAllocator<T>& a, const AccountingAllocator<T>& b) noexcept { return a.m_allocated == b.m_allocated; }\n+    friend bool operator!=(const AccountingAllocator<T>& a, const AccountingAllocator<T>& b) noexcept { return a.m_allocated != b.m_allocated; }\n+};\n+\n /** Dynamic memory usage for built-in types is zero. */\n static inline size_t DynamicUsage(const int8_t& v) { return 0; }\n static inline size_t DynamicUsage(const uint8_t& v) { return 0; }"
      },
      {
        "sha": "bb78c4c3da132d439fdd2e54d6d5009c50ec1c68",
        "filename": "src/test/allocator_tests.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bad146c6544384649d8f11c2d03ba6243b88a38/src/test/allocator_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bad146c6544384649d8f11c2d03ba6243b88a38/src/test/allocator_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/allocator_tests.cpp?ref=8bad146c6544384649d8f11c2d03ba6243b88a38",
        "patch": "@@ -9,6 +9,8 @@\n \n #include <memory>\n \n+#include <memusage.h>\n+\n #include <boost/test/unit_test.hpp>\n \n BOOST_FIXTURE_TEST_SUITE(allocator_tests, BasicTestingSetup)\n@@ -233,4 +235,41 @@ BOOST_AUTO_TEST_CASE(lockedpool_tests_live)\n     BOOST_CHECK(pool.stats().used == initial.used);\n }\n \n+BOOST_AUTO_TEST_CASE(accounting_allocation_test)\n+{\n+    size_t total = 0;\n+    size_t dummy = 0;\n+\n+    {\n+        typedef std::unordered_set<int, std::hash<int>, std::equal_to<int>, memusage::AccountingAllocator<int>> container_type;\n+        container_type container1({}, 2, std::hash<int>(), std::equal_to<int>(), memusage::AccountingAllocator<int>(dummy)); // container1 is accounted for in 'dummy'\n+        container1.insert(6);\n+        {\n+            container_type container2(1, std::hash<int>(), std::equal_to<int>(), memusage::AccountingAllocator<int>(total)); // container2 is accounted for in 'total'\n+            container2.insert(5);\n+            container2.insert(2);\n+            container2.insert(3);\n+            container2.erase(2);\n+            BOOST_CHECK(total > 0);\n+            size_t old = total;\n+            container1 = std::move(container2); // container1 is now accounted for in 'total'\n+            BOOST_CHECK(total >= old);\n+        }\n+        container1.erase(5);\n+        size_t cached = total;\n+        BOOST_CHECK(cached > 0);\n+        {\n+            container_type container3 = container1; // container3 is a copy of container1, which is unaccounted.\n+            BOOST_CHECK(total == cached);\n+            container3.insert(4);\n+            container3.erase(3);\n+            BOOST_CHECK(total == cached);\n+        }\n+        BOOST_CHECK(total == cached);\n+    }\n+\n+    BOOST_CHECK(total == 0); // After all objects using 'total' are gone, its value must go back to 0.\n+    BOOST_CHECK(dummy == 0);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "eace374a00a2c4aa0063f93576266fe40ba4d10a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWNlMzc0YTAwYTJjNGFhMDA2M2Y5MzU3NjI2NmZlNDBiYTRkMTBh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-09T20:21:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Make AccountingAllocator not inherent from std::allocator",
      "tree": {
        "sha": "4da344f3def7ca29ccbd5556c2b3bba27509767f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4da344f3def7ca29ccbd5556c2b3bba27509767f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eace374a00a2c4aa0063f93576266fe40ba4d10a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eace374a00a2c4aa0063f93576266fe40ba4d10a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eace374a00a2c4aa0063f93576266fe40ba4d10a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eace374a00a2c4aa0063f93576266fe40ba4d10a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bad146c6544384649d8f11c2d03ba6243b88a38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bad146c6544384649d8f11c2d03ba6243b88a38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bad146c6544384649d8f11c2d03ba6243b88a38"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 29,
      "deletions": 11
    },
    "files": [
      {
        "sha": "1d4efee7281186ac446a23f57996a845a8e5477f",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 29,
        "deletions": 11,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eace374a00a2c4aa0063f93576266fe40ba4d10a/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eace374a00a2c4aa0063f93576266fe40ba4d10a/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=eace374a00a2c4aa0063f93576266fe40ba4d10a",
        "patch": "@@ -33,15 +33,27 @@ static size_t MallocUsage(size_t alloc);\n  * allocating/deallocating memory.\n  */\n template<typename T>\n-class AccountingAllocator : public std::allocator<T>\n+class AccountingAllocator\n {\n+    using base = std::allocator<T>;\n+\n+    //! Base allocator\n+    base m_base;\n+\n     //! Pointer to accounting variable, if any.\n     size_t* m_allocated;\n \n     template<typename U> friend class AccountingAllocator;\n-    typedef std::allocator<T> base;\n \n public:\n+    using value_type = typename base::value_type;\n+    using pointer = typename base::pointer;\n+    using const_pointer = typename base::const_pointer;\n+    using reference = typename base::reference;\n+    using const_reference = typename base::const_reference;\n+    using size_type = typename base::size_type;\n+    using difference_type = typename base::size_type;\n+\n     //! Default constructor constructs a non-accounting allocator.\n     AccountingAllocator() noexcept : m_allocated(nullptr) {}\n \n@@ -54,29 +66,35 @@ class AccountingAllocator : public std::allocator<T>\n     //! A copy-constructed container will be non-accounting.\n     static AccountingAllocator select_on_container_copy_construction() { return AccountingAllocator(); }\n     //! A copy-assigned container will be non-accounting.\n-    typedef std::false_type propagate_on_container_copy_assignment;\n+    using propagate_on_container_copy_assignment = std::false_type;\n     //! The accounting will follow a container as it's moved.\n-    typedef std::true_type propagate_on_container_move_assignment;\n+    using propagate_on_container_move_assignment = std::true_type;\n     //! The accounting will follow a container as it's swapped.\n-    typedef std::true_type propagate_on_container_swap;\n+    using propagate_on_container_swap = std::true_type;\n \n     // Construct an allocator for a different data type, inheriting the accounting.\n-    template <typename U> AccountingAllocator(AccountingAllocator<U>&& a) noexcept : base(std::move(a)), m_allocated(a.m_allocated) {}\n-    template <typename U> AccountingAllocator(const AccountingAllocator<U>& a) noexcept : base(a), m_allocated(a.m_allocated) {}\n+    template <typename U> AccountingAllocator(AccountingAllocator<U>&& a) noexcept : m_base(std::move(a.m_base)), m_allocated(a.m_allocated) {}\n+    template <typename U> AccountingAllocator(const AccountingAllocator<U>& a) noexcept : m_base(a.m_base), m_allocated(a.m_allocated) {}\n \n     typename base::value_type* allocate(std::size_t n, const void* hint = nullptr)\n     {\n-        typename base::value_type* allocation = base::allocate(n, hint);\n-        if (m_allocated) *m_allocated += MallocUsage(sizeof(typename base::value_type) * n);\n+        value_type* allocation = m_base.allocate(n, hint);\n+        if (m_allocated) *m_allocated += MallocUsage(sizeof(value_type) * n);\n         return allocation;\n     }\n \n     void deallocate(typename base::value_type* p, std::size_t n)\n     {\n-        base::deallocate(p, n);\n-        if (m_allocated) *m_allocated -= MallocUsage(sizeof(typename base::value_type) * n);\n+        m_base.deallocate(p, n);\n+        if (m_allocated) *m_allocated -= MallocUsage(sizeof(value_type) * n);\n     }\n \n+    template<typename P> void destroy(P* ptr) { m_base.destroy(ptr); }\n+    template<typename P, typename... Args> void construct(P* ptr, Args&&... args) { m_base.construct(ptr, std::forward<Args>(args)...); }\n+    pointer address(reference x) { return m_base.address(x); }\n+    const_pointer address(const_reference x) { return m_base.address(x); }\n+    size_type max_size() const noexcept { return m_base.max_size(); }\n+\n     template<typename U> struct rebind { typedef AccountingAllocator<U> other; };\n \n     friend bool operator==(const AccountingAllocator<T>& a, const AccountingAllocator<T>& b) noexcept { return a.m_allocated == b.m_allocated; }"
      }
    ]
  },
  {
    "sha": "073e60cfe3316f05a0a99bdc4a190e986a813406",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzNlNjBjZmUzMzE2ZjA1YTBhOTliZGM0YTE5MGU5ODZhODEzNDA2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T00:48:09Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Accurate mapTx counting",
      "tree": {
        "sha": "7504d25992318f39087b4556649359760514508c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7504d25992318f39087b4556649359760514508c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/073e60cfe3316f05a0a99bdc4a190e986a813406",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/073e60cfe3316f05a0a99bdc4a190e986a813406",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/073e60cfe3316f05a0a99bdc4a190e986a813406",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/073e60cfe3316f05a0a99bdc4a190e986a813406/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eace374a00a2c4aa0063f93576266fe40ba4d10a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eace374a00a2c4aa0063f93576266fe40ba4d10a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eace374a00a2c4aa0063f93576266fe40ba4d10a"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "c2f8fa73f1f4efc97f44b41f744a4cc2be6ce4f1",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/073e60cfe3316f05a0a99bdc4a190e986a813406/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/073e60cfe3316f05a0a99bdc4a190e986a813406/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=073e60cfe3316f05a0a99bdc4a190e986a813406",
        "patch": "@@ -327,7 +327,7 @@ void CTxMemPoolEntry::UpdateAncestorState(int64_t modifySize, CAmount modifyFee,\n }\n \n CTxMemPool::CTxMemPool(CBlockPolicyEstimator* estimator)\n-    : nTransactionsUpdated(0), minerPolicyEstimator(estimator), m_epoch(0), m_has_epoch_guard(false)\n+    : nTransactionsUpdated(0), minerPolicyEstimator(estimator), m_allocation_counter(0), m_epoch(0), m_has_epoch_guard(false), mapTx(memusage::AccountingAllocator<CTxMemPoolEntry>(m_allocation_counter))\n {\n     _clear(); //lock free clear\n \n@@ -917,8 +917,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    // Estimate the overhead of mapTx to be 12 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n-    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 12 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n+    return memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage + m_allocation_counter;\n }\n \n void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {"
      },
      {
        "sha": "e564f23e687d2f8d2ff67a20c336c318dffb9291",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/073e60cfe3316f05a0a99bdc4a190e986a813406/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/073e60cfe3316f05a0a99bdc4a190e986a813406/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=073e60cfe3316f05a0a99bdc4a190e986a813406",
        "patch": "@@ -449,6 +449,7 @@ class CTxMemPool\n \n     uint64_t totalTxSize;      //!< sum of all mempool tx's virtual sizes. Differs from serialized tx size since witness data is discounted. Defined in BIP 141.\n     uint64_t cachedInnerUsage; //!< sum of dynamic memory usage of all the map elements (NOT the maps themselves)\n+    size_t m_allocation_counter GUARDED_BY(cs); //!< Accounting variable for AccountingAllocator-managed containers\n \n     mutable int64_t lastRollingFeeUpdate;\n     mutable bool blockSinceLastRollingFeeBump;\n@@ -487,7 +488,8 @@ class CTxMemPool\n                 boost::multi_index::identity<CTxMemPoolEntry>,\n                 CompareTxMemPoolEntryByAncestorFee\n             >\n-        >\n+        >,\n+        memusage::AccountingAllocator<CTxMemPoolEntry>\n     > indexed_transaction_set;\n \n     /**"
      }
    ]
  },
  {
    "sha": "277d2efe0f71db835c4f6b75d35b6b937a6e600b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzdkMmVmZTBmNzFkYjgzNWM0ZjZiNzVkMzViNmI5MzdhNmU2MDBi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T01:20:04Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Account mapDeltas accurately",
      "tree": {
        "sha": "9cf1543ff985ba1805512b0c85189ff29382a402",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cf1543ff985ba1805512b0c85189ff29382a402"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/277d2efe0f71db835c4f6b75d35b6b937a6e600b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/277d2efe0f71db835c4f6b75d35b6b937a6e600b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/277d2efe0f71db835c4f6b75d35b6b937a6e600b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/277d2efe0f71db835c4f6b75d35b6b937a6e600b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "073e60cfe3316f05a0a99bdc4a190e986a813406",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/073e60cfe3316f05a0a99bdc4a190e986a813406",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/073e60cfe3316f05a0a99bdc4a190e986a813406"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "123c5e9929af371cc58b09d183ec0dc08e9017b3",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/277d2efe0f71db835c4f6b75d35b6b937a6e600b/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/277d2efe0f71db835c4f6b75d35b6b937a6e600b/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=277d2efe0f71db835c4f6b75d35b6b937a6e600b",
        "patch": "@@ -327,7 +327,9 @@ void CTxMemPoolEntry::UpdateAncestorState(int64_t modifySize, CAmount modifyFee,\n }\n \n CTxMemPool::CTxMemPool(CBlockPolicyEstimator* estimator)\n-    : nTransactionsUpdated(0), minerPolicyEstimator(estimator), m_allocation_counter(0), m_epoch(0), m_has_epoch_guard(false), mapTx(memusage::AccountingAllocator<CTxMemPoolEntry>(m_allocation_counter))\n+    : nTransactionsUpdated(0), minerPolicyEstimator(estimator), m_allocation_counter(0), m_epoch(0),\n+      m_has_epoch_guard(false), mapTx(memusage::AccountingAllocator<CTxMemPoolEntry>(m_allocation_counter)),\n+      mapDeltas({}, std::less<uint256>(), memusage::AccountingAllocator<std::pair<const uint256, CAmount>>(m_allocation_counter))\n {\n     _clear(); //lock free clear\n \n@@ -853,7 +855,7 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n     LOCK(cs);\n-    std::map<uint256, CAmount>::const_iterator pos = mapDeltas.find(hash);\n+    auto pos = mapDeltas.find(hash);\n     if (pos == mapDeltas.end())\n         return;\n     const CAmount &delta = pos->second;\n@@ -917,7 +919,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    return memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage + m_allocation_counter;\n+    return memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage + m_allocation_counter;\n }\n \n void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {"
      },
      {
        "sha": "93c8528e643c455a5cdba8c2a589100574cbcee4",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/277d2efe0f71db835c4f6b75d35b6b937a6e600b/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/277d2efe0f71db835c4f6b75d35b6b937a6e600b/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=277d2efe0f71db835c4f6b75d35b6b937a6e600b",
        "patch": "@@ -556,7 +556,7 @@ class CTxMemPool\n \n public:\n     indirectmap<COutPoint, const CTransaction*> mapNextTx GUARDED_BY(cs);\n-    std::map<uint256, CAmount> mapDeltas;\n+    std::map<uint256, CAmount, std::less<uint256>, memusage::AccountingAllocator<std::pair<const uint256, CAmount>>> mapDeltas GUARDED_BY(cs);\n \n     /** Create a new CTxMemPool.\n      */"
      }
    ]
  },
  {
    "sha": "844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDRiZjRmMGEwZmYxNGQ3MzExZWE1NjU2YTdlNzZmYzVhNTk3ZTdm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T01:26:26Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Account mapLinks accurately\n\nIncludes thread safety annotations added by Hennadii Stepanov.",
      "tree": {
        "sha": "8d27f51f4486e201dd84ebaa85c26689724b56b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d27f51f4486e201dd84ebaa85c26689724b56b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "277d2efe0f71db835c4f6b75d35b6b937a6e600b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/277d2efe0f71db835c4f6b75d35b6b937a6e600b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/277d2efe0f71db835c4f6b75d35b6b937a6e600b"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "59ac60a705979f5c511c11dbd360c3b9c4d83015",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
        "patch": "@@ -329,6 +329,7 @@ void CTxMemPoolEntry::UpdateAncestorState(int64_t modifySize, CAmount modifyFee,\n CTxMemPool::CTxMemPool(CBlockPolicyEstimator* estimator)\n     : nTransactionsUpdated(0), minerPolicyEstimator(estimator), m_allocation_counter(0), m_epoch(0),\n       m_has_epoch_guard(false), mapTx(memusage::AccountingAllocator<CTxMemPoolEntry>(m_allocation_counter)),\n+      mapLinks({}, CompareIteratorByHash(), memusage::AccountingAllocator<std::pair<const txiter, TxLinks>>(m_allocation_counter)),\n       mapDeltas({}, std::less<uint256>(), memusage::AccountingAllocator<std::pair<const uint256, CAmount>>(m_allocation_counter))\n {\n     _clear(); //lock free clear\n@@ -919,7 +920,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    return memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage + m_allocation_counter;\n+    return memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage + m_allocation_counter;\n }\n \n void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {"
      },
      {
        "sha": "9e87f96ffeb1fe825aedd6c86c9411fb7b0ecd5c",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
        "patch": "@@ -543,11 +543,11 @@ class CTxMemPool\n         setEntries children;\n     };\n \n-    typedef std::map<txiter, TxLinks, CompareIteratorByHash> txlinksMap;\n-    txlinksMap mapLinks;\n+    typedef std::map<txiter, TxLinks, CompareIteratorByHash, memusage::AccountingAllocator<std::pair<const txiter, TxLinks>>> txlinksMap;\n+    txlinksMap mapLinks GUARDED_BY(cs);\n \n-    void UpdateParent(txiter entry, txiter parent, bool add);\n-    void UpdateChild(txiter entry, txiter child, bool add);\n+    void UpdateParent(txiter entry, txiter parent, bool add) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    void UpdateChild(txiter entry, txiter child, bool add) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n "
      }
    ]
  },
  {
    "sha": "8ef608a0e822f0df55748243bfaa5be2b0cea77e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWY2MDhhMGU4MjJmMGRmNTU3NDgyNDNiZmFhNWJlMmIwY2VhNzdl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T01:37:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Account vTxHashes accurately",
      "tree": {
        "sha": "51c6f2d591b3fb49bef8927401b20f753cf97e0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51c6f2d591b3fb49bef8927401b20f753cf97e0d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ef608a0e822f0df55748243bfaa5be2b0cea77e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ef608a0e822f0df55748243bfaa5be2b0cea77e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ef608a0e822f0df55748243bfaa5be2b0cea77e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ef608a0e822f0df55748243bfaa5be2b0cea77e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/844bf4f0a0ff14d7311ea5656a7e76fc5a597e7f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6ca332769c43294ecc481c383be006039474ac33",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ef608a0e822f0df55748243bfaa5be2b0cea77e/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ef608a0e822f0df55748243bfaa5be2b0cea77e/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=8ef608a0e822f0df55748243bfaa5be2b0cea77e",
        "patch": "@@ -329,6 +329,7 @@ void CTxMemPoolEntry::UpdateAncestorState(int64_t modifySize, CAmount modifyFee,\n CTxMemPool::CTxMemPool(CBlockPolicyEstimator* estimator)\n     : nTransactionsUpdated(0), minerPolicyEstimator(estimator), m_allocation_counter(0), m_epoch(0),\n       m_has_epoch_guard(false), mapTx(memusage::AccountingAllocator<CTxMemPoolEntry>(m_allocation_counter)),\n+      vTxHashes(memusage::AccountingAllocator<std::pair<uint256, txiter>>(m_allocation_counter)),\n       mapLinks({}, CompareIteratorByHash(), memusage::AccountingAllocator<std::pair<const txiter, TxLinks>>(m_allocation_counter)),\n       mapDeltas({}, std::less<uint256>(), memusage::AccountingAllocator<std::pair<const uint256, CAmount>>(m_allocation_counter))\n {\n@@ -920,7 +921,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    return memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage + m_allocation_counter;\n+    return memusage::DynamicUsage(mapNextTx) + cachedInnerUsage + m_allocation_counter;\n }\n \n void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {"
      },
      {
        "sha": "4a2140193381e287f1780afaf40fcd6af140bd1e",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ef608a0e822f0df55748243bfaa5be2b0cea77e/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ef608a0e822f0df55748243bfaa5be2b0cea77e/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=8ef608a0e822f0df55748243bfaa5be2b0cea77e",
        "patch": "@@ -523,7 +523,7 @@ class CTxMemPool\n     indexed_transaction_set mapTx GUARDED_BY(cs);\n \n     using txiter = indexed_transaction_set::nth_index<0>::type::const_iterator;\n-    std::vector<std::pair<uint256, txiter>> vTxHashes GUARDED_BY(cs); //!< All tx witness hashes/entries in mapTx, in random order\n+    std::vector<std::pair<uint256, txiter>, memusage::AccountingAllocator<std::pair<uint256, txiter>>> vTxHashes GUARDED_BY(cs); //!< All tx witness hashes/entries in mapTx, in random order\n \n     struct CompareIteratorByHash {\n         bool operator()(const txiter &a, const txiter &b) const {"
      }
    ]
  },
  {
    "sha": "ce9ad718282007a3c8305fbca2ac922eb7eeb088",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTlhZDcxODI4MjAwN2EzYzgzMDVmYmNhMmFjOTIyZWI3ZWViMDg4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T02:14:46Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Accurately account for queuedTx in DisconnectedBlockTransactions",
      "tree": {
        "sha": "206362daee446a9fe11c58dbeb9b525939b31caa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/206362daee446a9fe11c58dbeb9b525939b31caa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce9ad718282007a3c8305fbca2ac922eb7eeb088",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce9ad718282007a3c8305fbca2ac922eb7eeb088",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce9ad718282007a3c8305fbca2ac922eb7eeb088",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce9ad718282007a3c8305fbca2ac922eb7eeb088/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ef608a0e822f0df55748243bfaa5be2b0cea77e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ef608a0e822f0df55748243bfaa5be2b0cea77e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ef608a0e822f0df55748243bfaa5be2b0cea77e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4dbec212831f8070a283ead8122a459a7dd64b22",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce9ad718282007a3c8305fbca2ac922eb7eeb088/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce9ad718282007a3c8305fbca2ac922eb7eeb088/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=ce9ad718282007a3c8305fbca2ac922eb7eeb088",
        "patch": "@@ -870,7 +870,8 @@ struct DisconnectedBlockTransactions {\n             boost::multi_index::sequenced<\n                 boost::multi_index::tag<insertion_order>\n             >\n-        >\n+        >,\n+        memusage::AccountingAllocator<CTransactionRef>\n     > indexed_disconnected_transactions;\n \n     // It's almost certainly a logic bug if we don't clear out queuedTx before\n@@ -883,13 +884,14 @@ struct DisconnectedBlockTransactions {\n     // reorg, besides draining this object).\n     ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n \n+    size_t m_allocation_counter;\n     indexed_disconnected_transactions queuedTx;\n     uint64_t cachedInnerUsage = 0;\n \n-    // Estimate the overhead of queuedTx to be 6 pointers + an allocation, as\n-    // no exact formula for boost::multi_index_contained is implemented.\n+    DisconnectedBlockTransactions() : m_allocation_counter(0), queuedTx(memusage::AccountingAllocator<CTransactionRef>(m_allocation_counter)) {}\n+\n     size_t DynamicMemoryUsage() const {\n-        return memusage::MallocUsage(sizeof(CTransactionRef) + 6 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+        return m_allocation_counter + cachedInnerUsage;\n     }\n \n     void addTransaction(const CTransactionRef& tx)"
      }
    ]
  },
  {
    "sha": "e088ce8425c33a0625cb62de5619b6aa9ea2878e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDg4Y2U4NDI1YzMzYTA2MjVjYjYyZGU1NjE5YjZhYTllYTI4Nzhl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-10T23:41:03Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Add allocator support to indirectmap",
      "tree": {
        "sha": "b2b9c24253026ea0061c43b4b7d96ef01ceb9f4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2b9c24253026ea0061c43b4b7d96ef01ceb9f4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e088ce8425c33a0625cb62de5619b6aa9ea2878e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e088ce8425c33a0625cb62de5619b6aa9ea2878e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e088ce8425c33a0625cb62de5619b6aa9ea2878e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e088ce8425c33a0625cb62de5619b6aa9ea2878e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce9ad718282007a3c8305fbca2ac922eb7eeb088",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce9ad718282007a3c8305fbca2ac922eb7eeb088",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce9ad718282007a3c8305fbca2ac922eb7eeb088"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "73c83275ca7259809369f1c5eec9f31bb79854b2",
        "filename": "src/indirectmap.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e088ce8425c33a0625cb62de5619b6aa9ea2878e/src/indirectmap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e088ce8425c33a0625cb62de5619b6aa9ea2878e/src/indirectmap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/indirectmap.h?ref=e088ce8425c33a0625cb62de5619b6aa9ea2878e",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_INDIRECTMAP_H\n \n #include <map>\n+#include <memory>\n \n template <class T>\n struct DereferencingComparator { bool operator()(const T a, const T b) const { return *a < *b; } };\n@@ -20,17 +21,20 @@ struct DereferencingComparator { bool operator()(const T a, const T b) const { r\n  * Objects pointed to by keys must not be modified in any way that changes the\n  * result of DereferencingComparator.\n  */\n-template <class K, class T>\n+template <class K, class T, class A = std::allocator<std::pair<const K* const, T>>>\n class indirectmap {\n private:\n-    typedef std::map<const K*, T, DereferencingComparator<const K*> > base;\n+    typedef std::map<const K*, T, DereferencingComparator<const K*>, A> base;\n     base m;\n public:\n     typedef typename base::iterator iterator;\n     typedef typename base::const_iterator const_iterator;\n     typedef typename base::size_type size_type;\n     typedef typename base::value_type value_type;\n \n+    indirectmap() = default;\n+    explicit indirectmap(const A& alloc) : m({}, DereferencingComparator<const K*>(), alloc) {}\n+\n     // passthrough (pointer interface)\n     std::pair<iterator, bool> insert(const value_type& value) { return m.insert(value); }\n "
      }
    ]
  },
  {
    "sha": "fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzJhZWQ3Yjg1NDllM2I3YjdjYjg5MjEyZWZmNmI5ZTA2NDY5MmFh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-10T23:49:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Account for mapNextTx accurately",
      "tree": {
        "sha": "ab4b7d96f8af2c7eec7bc3973d49f139db921e83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab4b7d96f8af2c7eec7bc3973d49f139db921e83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e088ce8425c33a0625cb62de5619b6aa9ea2878e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e088ce8425c33a0625cb62de5619b6aa9ea2878e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e088ce8425c33a0625cb62de5619b6aa9ea2878e"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2f26e461c5d132515b991f39635822a780d9bbf9",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
        "patch": "@@ -331,6 +331,7 @@ CTxMemPool::CTxMemPool(CBlockPolicyEstimator* estimator)\n       m_has_epoch_guard(false), mapTx(memusage::AccountingAllocator<CTxMemPoolEntry>(m_allocation_counter)),\n       vTxHashes(memusage::AccountingAllocator<std::pair<uint256, txiter>>(m_allocation_counter)),\n       mapLinks({}, CompareIteratorByHash(), memusage::AccountingAllocator<std::pair<const txiter, TxLinks>>(m_allocation_counter)),\n+      mapNextTx(memusage::AccountingAllocator<std::pair<const COutPoint* const, const CTransaction*>>(m_allocation_counter)),\n       mapDeltas({}, std::less<uint256>(), memusage::AccountingAllocator<std::pair<const uint256, CAmount>>(m_allocation_counter))\n {\n     _clear(); //lock free clear\n@@ -921,7 +922,7 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    return memusage::DynamicUsage(mapNextTx) + cachedInnerUsage + m_allocation_counter;\n+    return cachedInnerUsage + m_allocation_counter;\n }\n \n void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {"
      },
      {
        "sha": "6a2d5dc23746c0e63cdeb1e9c38a48af23b17ba8",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
        "patch": "@@ -555,7 +555,7 @@ class CTxMemPool\n     std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n \n public:\n-    indirectmap<COutPoint, const CTransaction*> mapNextTx GUARDED_BY(cs);\n+    indirectmap<COutPoint, const CTransaction*, memusage::AccountingAllocator<std::pair<const COutPoint* const, const CTransaction*>>> mapNextTx GUARDED_BY(cs);\n     std::map<uint256, CAmount, std::less<uint256>, memusage::AccountingAllocator<std::pair<const uint256, CAmount>>> mapDeltas GUARDED_BY(cs);\n \n     /** Create a new CTxMemPool."
      }
    ]
  },
  {
    "sha": "6ad6e54541c81537bb7ac5c962710cb087259893",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWQ2ZTU0NTQxYzgxNTM3YmI3YWM1Yzk2MjcxMGNiMDg3MjU5ODkz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-11T01:26:52Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-07-21T05:11:55Z"
      },
      "message": "Account mapLinks.{children,parents} accurately",
      "tree": {
        "sha": "264067ddfd4e2172d560700dcd29b10a86189f11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/264067ddfd4e2172d560700dcd29b10a86189f11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ad6e54541c81537bb7ac5c962710cb087259893",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad6e54541c81537bb7ac5c962710cb087259893",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ad6e54541c81537bb7ac5c962710cb087259893",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad6e54541c81537bb7ac5c962710cb087259893/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc2aed7b8549e3b7b7cb89212eff6b9e064692aa"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 14,
      "deletions": 15
    },
    "files": [
      {
        "sha": "b1ef4a491feb032cf07df3fcbc3b179b1b1610de",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 14,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad6e54541c81537bb7ac5c962710cb087259893/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad6e54541c81537bb7ac5c962710cb087259893/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=6ad6e54541c81537bb7ac5c962710cb087259893",
        "patch": "@@ -364,7 +364,7 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n     // Used by AcceptToMemoryPool(), which DOES do\n     // all the appropriate checks.\n     indexed_transaction_set::iterator newit = mapTx.insert(entry).first;\n-    mapLinks.insert(make_pair(newit, TxLinks()));\n+    mapLinks.emplace(newit, m_allocation_counter);\n \n     // Update transaction for any feeDelta created by PrioritiseTransaction\n     // TODO: refactor so that the fee delta is calculated before inserting\n@@ -435,7 +435,6 @@ void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n \n     totalTxSize -= it->GetTxSize();\n     cachedInnerUsage -= it->DynamicMemoryUsage();\n-    cachedInnerUsage -= memusage::DynamicUsage(mapLinks[it].parents) + memusage::DynamicUsage(mapLinks[it].children);\n     mapLinks.erase(it);\n     mapTx.erase(it);\n     nTransactionsUpdated++;\n@@ -640,8 +639,6 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n         const CTransaction& tx = it->GetTx();\n         txlinksMap::const_iterator linksiter = mapLinks.find(it);\n         assert(linksiter != mapLinks.end());\n-        const TxLinks &links = linksiter->second;\n-        innerUsage += memusage::DynamicUsage(links.parents) + memusage::DynamicUsage(links.children);\n         bool fDependsWait = false;\n         setEntries setParentCheck;\n         for (const CTxIn &txin : tx.vin) {\n@@ -970,21 +967,19 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, bool validFeeEstimat\n \n void CTxMemPool::UpdateChild(txiter entry, txiter child, bool add)\n {\n-    setEntries s;\n-    if (add && mapLinks[entry].children.insert(child).second) {\n-        cachedInnerUsage += memusage::IncrementalDynamicUsage(s);\n-    } else if (!add && mapLinks[entry].children.erase(child)) {\n-        cachedInnerUsage -= memusage::IncrementalDynamicUsage(s);\n+    if (add) {\n+        mapLinks.at(entry).children.emplace(child);\n+    } else {\n+        mapLinks.at(entry).children.erase(child);\n     }\n }\n \n void CTxMemPool::UpdateParent(txiter entry, txiter parent, bool add)\n {\n-    setEntries s;\n-    if (add && mapLinks[entry].parents.insert(parent).second) {\n-        cachedInnerUsage += memusage::IncrementalDynamicUsage(s);\n-    } else if (!add && mapLinks[entry].parents.erase(parent)) {\n-        cachedInnerUsage -= memusage::IncrementalDynamicUsage(s);\n+    if (add) {\n+        mapLinks.at(entry).parents.emplace(parent);\n+    } else {\n+        mapLinks.at(entry).parents.erase(parent);\n     }\n }\n "
      },
      {
        "sha": "bfeec68a5d83bd912a7e5571ea29a510b5f671c5",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad6e54541c81537bb7ac5c962710cb087259893/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad6e54541c81537bb7ac5c962710cb087259893/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=6ad6e54541c81537bb7ac5c962710cb087259893",
        "patch": "@@ -530,7 +530,7 @@ class CTxMemPool\n             return a->GetTx().GetHash() < b->GetTx().GetHash();\n         }\n     };\n-    typedef std::set<txiter, CompareIteratorByHash> setEntries;\n+    typedef std::set<txiter, CompareIteratorByHash, memusage::AccountingAllocator<txiter>> setEntries;\n \n     const setEntries & GetMemPoolParents(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     const setEntries & GetMemPoolChildren(txiter entry) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n@@ -541,6 +541,10 @@ class CTxMemPool\n     struct TxLinks {\n         setEntries parents;\n         setEntries children;\n+\n+        TxLinks(size_t& allocation_counter) :\n+            parents({}, CompareIteratorByHash(), memusage::AccountingAllocator<txiter>(allocation_counter)),\n+            children({}, CompareIteratorByHash(), memusage::AccountingAllocator<txiter>(allocation_counter)) {}\n     };\n \n     typedef std::map<txiter, TxLinks, CompareIteratorByHash, memusage::AccountingAllocator<std::pair<const txiter, TxLinks>>> txlinksMap;"
      }
    ]
  }
]