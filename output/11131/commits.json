[
  {
    "sha": "82dd7195e1fb943f9cd45a48188f9678219c0206",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MmRkNzE5NWUxZmI5NDNmOWNkNDVhNDgxODhmOTY3ODIxOWMwMjA2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-08-25T10:39:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-08-25T13:37:24Z"
      },
      "message": "rpc: Write authcookie atomically\n\nUse POSIX rename atomicity at the `bitcoind` side to create a working\ncookie atomically:\n\n- Write `.cookie.tmp`, close file\n- Rename `.cookie.tmp` to `.cookie`\n\nThis avoids clients reading invalid/partial cookies as in #11129.",
      "tree": {
        "sha": "01080ed5fe5bef69ea7288bf04811d52bc4e18aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01080ed5fe5bef69ea7288bf04811d52bc4e18aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82dd7195e1fb943f9cd45a48188f9678219c0206",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82dd7195e1fb943f9cd45a48188f9678219c0206",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/82dd7195e1fb943f9cd45a48188f9678219c0206",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82dd7195e1fb943f9cd45a48188f9678219c0206/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f726c99f819f97f2ab21b94d34c6b3129cd883a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f726c99f819f97f2ab21b94d34c6b3129cd883a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f726c99f819f97f2ab21b94d34c6b3129cd883a"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 16,
      "deletions": 7
    },
    "files": [
      {
        "sha": "dc6bcec382fb26f57fcc95da986d0cd5a66685da",
        "filename": "src/rpc/protocol.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82dd7195e1fb943f9cd45a48188f9678219c0206/src/rpc/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82dd7195e1fb943f9cd45a48188f9678219c0206/src/rpc/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.cpp?ref=82dd7195e1fb943f9cd45a48188f9678219c0206",
        "patch": "@@ -66,9 +66,14 @@ static const std::string COOKIEAUTH_USER = \"__cookie__\";\n /** Default name for auth cookie file */\n static const std::string COOKIEAUTH_FILE = \".cookie\";\n \n-fs::path GetAuthCookieFile()\n+/** Get name of RPC authentication cookie file */\n+static fs::path GetAuthCookieFile(bool temp=false)\n {\n-    fs::path path(gArgs.GetArg(\"-rpccookiefile\", COOKIEAUTH_FILE));\n+    std::string arg = gArgs.GetArg(\"-rpccookiefile\", COOKIEAUTH_FILE);\n+    if (temp) {\n+        arg += \".tmp\";\n+    }\n+    fs::path path(arg);\n     if (!path.is_complete()) path = GetDataDir() / path;\n     return path;\n }\n@@ -84,14 +89,20 @@ bool GenerateAuthCookie(std::string *cookie_out)\n      * these are set to 077 in init.cpp unless overridden with -sysperms.\n      */\n     std::ofstream file;\n-    fs::path filepath = GetAuthCookieFile();\n-    file.open(filepath.string().c_str());\n+    fs::path filepath_tmp = GetAuthCookieFile(true);\n+    file.open(filepath_tmp.string().c_str());\n     if (!file.is_open()) {\n-        LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath.string());\n+        LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath_tmp.string());\n         return false;\n     }\n     file << cookie;\n     file.close();\n+\n+    fs::path filepath = GetAuthCookieFile(false);\n+    if (!RenameOver(filepath_tmp, filepath)) {\n+        LogPrintf(\"Unable to rename cookie authentication file %s to %s\\n\", filepath_tmp.string(), filepath.string());\n+        return false;\n+    }\n     LogPrintf(\"Generated RPC authentication cookie %s\\n\", filepath.string());\n \n     if (cookie_out)"
      },
      {
        "sha": "5c9c64f67d1ce47b9b3131ad8972c42759a11ab7",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82dd7195e1fb943f9cd45a48188f9678219c0206/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82dd7195e1fb943f9cd45a48188f9678219c0206/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=82dd7195e1fb943f9cd45a48188f9678219c0206",
        "patch": "@@ -91,8 +91,6 @@ UniValue JSONRPCReplyObj(const UniValue& result, const UniValue& error, const Un\n std::string JSONRPCReply(const UniValue& result, const UniValue& error, const UniValue& id);\n UniValue JSONRPCError(int code, const std::string& message);\n \n-/** Get name of RPC authentication cookie file */\n-fs::path GetAuthCookieFile();\n /** Generate a new RPC authentication cookie and write it to disk */\n bool GenerateAuthCookie(std::string *cookie_out);\n /** Read the RPC authentication cookie from disk */"
      }
    ]
  }
]