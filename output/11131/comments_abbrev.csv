MarcoFalke,2017-08-25T11:40:35Z,utACK 43e7dcb,https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-324894669,324894669,
laanwj,2017-08-25T13:14:24Z,"> Another option is to use fs::unique_path.\n\nI wasn't sure that would work in all cases - using a temporary file would potentially move over filesystem boundaries, right? Cross-filesystem move is not atomic IIRC.",https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-324916336,324916336,
promag,2017-08-25T13:19:43Z,"I meant `GetDataDir() / fs::unique_path()`.\n",https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-324917685,324917685,
laanwj,2017-08-25T13:24:54Z,"> I meant GetDataDir() / fs::unique_path().\n\nIt's possible to place the cookie file outside of the data directory with an option. Also my gut feeling says it's better to create files with deterministic names in the data directory, what if e.g. boost accidentally generates a name used as a wallet name :) I don't see any advantages.",https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-324919081,324919081,
promag,2017-08-25T13:28:08Z,"> what if e.g. boost accidentally generates a name used as a wallet name :)\n\nI see you take serious precautions ðŸ˜„\n\nIn the documentation there is http://www.boost.org/doc/libs/1_53_0/libs/filesystem/doc/reference.html#path-concatenation.",https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-324919958,324919958,
laanwj,2017-08-25T13:33:50Z,">  http://www.boost.org/doc/libs/1_53_0/libs/filesystem/doc/reference.html#path-concatenation.\n\nYes, but as I understoof, there is difference between boost_filesystem versions there. I don't really have a lot of time to dive into that, and I don't want this to come back with some strange compile error, and this works so...",https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-324921479,324921479,
meshcollider,2017-08-26T12:40:54Z,"utACK https://github.com/bitcoin/bitcoin/pull/11131/commits/82dd7195e1fb943f9cd45a48188f9678219c0206\n\n> I don't want this to come back with some strange compile error, and this works so...\n\nAgreed, this seems fine to me\n",https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-325123565,325123565,
sipa,2017-08-27T18:54:33Z,utACK 82dd7195e1fb943f9cd45a48188f9678219c0206,https://github.com/bitcoin/bitcoin/pull/11131#issuecomment-325217139,325217139,
promag,2017-08-25T12:57:35Z,Append the suffix in `GenerateAuthCookie()` and there is no need to call `GetAuthCookieFile()` twice.,https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135251797,135251797,src/rpc/protocol.cpp
promag,2017-08-25T12:58:33Z,Remove forward declaration?,https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135252007,135252007,src/rpc/protocol.cpp
laanwj,2017-08-25T13:16:01Z,"Yeah, well, find a fool proof and portable way to append to a fs::path (without adding path components!) and get back me. After browsing stack overflow and boost documentation for a while, I deemed it easier and safer to just do it where the filename is constructed initially.\n\nEdit: oh, and if you want to hear something else funny, calling `path::replace_extension` will replace `.cookie` with ",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135255445,135255445,src/rpc/protocol.cpp
laanwj,2017-08-25T13:17:25Z,"Is it only used after the declaration? To minimize diff I didn't want to move the function around and had some compile issues, but that might have been for another reason, will try again.",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135255758,135255758,src/rpc/protocol.cpp
promag,2017-08-25T13:24:53Z,"I also saw all that, but with `GetDataDir() / fs::unique_path()` none of ths is really necessary.",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135257224,135257224,src/rpc/protocol.cpp
promag,2017-08-25T13:32:37Z,"I've not tested but [here](http://www.microhowto.info/howto/atomically_rewrite_the_content_of_a_file.html) says:\n> A common misconception is that calling close will necessarily perform an implicit fsync.\n\nFrom the [docs](http://www.cplusplus.com/reference/fstream/ofstream/close/) there is no explicit mention to flush, only:\n\n> Any pending output sequence is written to the file.",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135258840,135258840,src/rpc/protocol.cpp
promag,2017-08-25T13:34:54Z,"In other words, call `file.flush()` before close?",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135259586,135259586,src/rpc/protocol.cpp
laanwj,2017-08-25T13:35:02Z,"You're having another misconception there: fsync is not necessary for other processes to see the result! Only to make sure that the data hits disk, in case of crashes etc. Which is not relevant here.",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135259628,135259628,src/rpc/protocol.cpp
laanwj,2017-08-25T13:45:09Z,Let's ask @theuni just in case.,https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135261858,135261858,src/rpc/protocol.cpp
MarcoFalke,2017-08-25T14:17:28Z,"I thought we always put the documentation above the declaration, but whatever, no need to change it back now.",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135269345,135269345,src/rpc/protocol.cpp
sipa,2017-08-25T17:40:51Z,"I think the only concern is that libc may buffer the write as long as the file is open, in which case a flush would be useful to make it visible to the OS (and thus other processes). However, as you're closing the file anyway, I don't believe that matters.",https://github.com/bitcoin/bitcoin/pull/11131#discussion_r135313990,135313990,src/rpc/protocol.cpp
