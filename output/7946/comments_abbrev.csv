jonasschnelli,2016-04-26T13:42:48Z,"As always when you want to improve the locking a little bit, the change gets quickly more invasive.\n\nUpdate serval things:\n- Fixed @sipa point (iterate though all connected blocks).\n- Removed the `CBlock *` parameter from the `SyncTransaction` signal and added `CBlockIndex*` together with `int posInBlock`.\n- Updated the wallet logic that it can handle the slightly different signal.\n",https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-214749314,214749314,
kazcw,2016-04-27T14:17:16Z,ActivateBestChainStep reuses a vector for ConnectTip's txConflicted to combine results from multiple blocks. ConnectTip passes txConflicted to mempoool.removeForBlock every time.\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-215098004,215098004,
jonasschnelli,2016-05-06T09:48:09Z,@kazcw Thanks for the detailed code review!\n\nAdded a squashme commit with fixed for issues found by @kazcw.\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-217399685,217399685,
kazcw,2016-05-06T13:57:38Z,"You know what, I misread. `txConflicted` is an out-only parameter all the way down the call stack, so it was fine without the `txConflictedCurrent`. Sorry about that.\n",https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-217447475,217447475,
sipa,2016-05-25T14:18:50Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-221590685,221590685,
jonasschnelli,2016-05-25T14:34:57Z,"Rebased, fixed sipas found issue and switched to `std::tuple`\n",https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-221595704,221595704,
sipa,2016-05-25T17:22:04Z,utACK fdf8a5efe03004f4a581ba41b87737a4e1f1ff44\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-221645567,221645567,
dcousens,2016-06-03T00:32:29Z,utACK fdf8a5e\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-223461557,223461557,
laanwj,2016-06-10T13:32:46Z,"utACK fdf8a5e, but the squashme commits need squashing\n",https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-225182777,225182777,
jonasschnelli,2016-06-10T15:09:57Z,Squashed.\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-225209219,225209219,
jonasschnelli,2016-07-20T12:37:31Z,Squashed the squashme commit. Anything holding this back?\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-233936484,233936484,
jtimon,2016-07-20T19:29:32Z,"Decide on struct vs typedef of std::tuple<CTransaction,CBlockIndex*,int> (or just leave it as it is now, I guess)?\nNo strong opinion on that.\nFast review ACK 0d54074\n",https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-234055942,234055942,
laanwj,2016-08-03T09:56:14Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-237195156,237195156,
jonasschnelli,2016-08-12T12:54:31Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/7946#issuecomment-239438408,239438408,
sipa,2016-04-26T12:05:52Z,"This is not correct, it needs to iterate through all the blocks that got connected, not just the new tip.\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r61073359,61073359,src/main.cpp
kazcw,2016-04-27T14:19:52Z,Could put the new loops below this comment with the other non-cs_main notifications\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r61265115,61265115,src/main.cpp
kazcw,2016-04-27T14:33:08Z,Why not just change this loop to be numeric and then use the `i`?\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r61267490,61267490,src/wallet/wallet.cpp
kazcw,2016-04-27T14:39:01Z,Could remove the null-check; pindex has already been dereferenced\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r61269025,61269025,src/wallet/wallet.cpp
jonasschnelli,2016-05-06T09:40:00Z,Right. This loop is stupid at this point. The transaction always have a `posInBlock`. Will update.\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r62308291,62308291,src/wallet/wallet.cpp
sipa,2016-05-25T14:19:48Z,Use std::tuple instead?\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64580923,64580923,src/main.cpp
sipa,2016-05-25T14:22:56Z,"This looks like it is not doing anything, as txConflictedCurrent will always be empty?\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64581547,64581547,src/main.cpp
jonasschnelli,2016-05-25T14:34:10Z,Oh. Right. L2728 should make use of the `txConflictedCurrent`.\nFixed.\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64583607,64583607,src/main.cpp
sipa,2016-05-25T14:36:24Z,"Why a temporary variable, and not just pass vchConflicted to mempool.removeForBlock()? txConflictedCurrent is not used elsewhere.\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64584089,64584089,src/main.cpp
jonasschnelli,2016-05-25T14:39:34Z,"Without a temporary variable, `mempool.removeForBlock` would always work though the combined list `txConflicted` that was initialized [here](https://github.com/bitcoin/bitcoin/pull/7946/files/9471f32a8fad340d0518ded6320fc1402f1d6286#diff-7ec3c68a81efff79b6ca22ac1f1eabbaR2917).\n\nAlthough I'm not sure if this would be a problem, but at least it would slightly change current masters behavior. \n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64584704,64584704,src/main.cpp
sipa,2016-05-25T14:44:03Z,"""Work through""? All that function does is append deleted CTransactions to it.\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64585646,64585646,src/main.cpp
jonasschnelli,2016-05-25T14:48:02Z,Yes. Your right. Removed the temp. var.\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64586467,64586467,src/main.cpp
sipa,2016-05-25T15:44:53Z,"Sorry for changing my mind, but can you define a struct for this instead? Larger tuples don't really have good readability.\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64597706,64597706,src/main.cpp
sipa,2016-05-25T15:47:50Z,Indentation (and braces).\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64598257,64598257,src/main.cpp
jonasschnelli,2016-05-25T15:57:57Z,IMO tuple is ideal for a such use case. It's only a temporary variable and its scope is very small. IMO an custom struct seems to be over complex.\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64600202,64600202,src/main.cpp
jonasschnelli,2016-05-25T15:58:41Z,Fixed Indentation and braces.\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64600343,64600343,src/main.cpp
sipa,2016-05-25T17:21:28Z,"This cs_main is unfortunate, but I guess we can get rid of it in a follow-up.\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64614746,64614746,src/wallet/wallet.cpp
sipa,2016-05-25T17:25:53Z,Fair enough.\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r64615537,64615537,src/main.cpp
laanwj,2016-06-02T19:50:27Z,c++ needs collections.namedtuple :)\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r65606450,65606450,src/main.cpp
sipa,2016-06-02T20:02:01Z,http://www.boost.org/doc/libs/1_58_0/libs/fusion/doc/html/fusion/container/map.html\n,https://github.com/bitcoin/bitcoin/pull/7946#discussion_r65608274,65608274,src/main.cpp
dcousens,2016-06-03T00:31:58Z,"given the repeated use,  maybe just `typedef` the `std::tuple`?  `tuple` has some nice conveniences over a `struct` alternative.\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r65641763,65641763,src/main.cpp
sipa,2016-06-11T14:28:11Z,"Shouldn't this be `if (posInBlock != -1) {` instead? pindex is always passed, even when the transaction was removed.\n",https://github.com/bitcoin/bitcoin/pull/7946#discussion_r66706587,66706587,src/wallet/wallet.cpp
