[
  {
    "sha": "2bc2b8b49ad87376d98591b14403dc3b46e3166b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmMyYjhiNDlhZDg3Mzc2ZDk4NTkxYjE0NDAzZGMzYjQ2ZTMxNjZi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-01T16:03:58Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-03T18:31:18Z"
      },
      "message": "Add ChaCha20 encryption option (XOR)",
      "tree": {
        "sha": "48125d1bf8a013325c48cc079d211a5a915ae726",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48125d1bf8a013325c48cc079d211a5a915ae726"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bc2b8b49ad87376d98591b14403dc3b46e3166b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzMiPcACgkQHrd2uwPH\nki3F1w/9HiIq0cVBmvrcA+y0JNC8UOMwKBLnCzxzlLer5vz8agbyO7q8ufk1zZGN\no36dNu015frPBAYGmxOKV8wS/Bq4tpm6H1kjnHuOCz0n4H1RE/9s2u7khAxs6OAG\n0FPkHSIsg4H5K40ZpZVnvtRxwFt+2SnwPB2+g4nom3WfEeD+cSBBJj4UbseHjoDn\nSmBKw29TIQMegbudVU0hjqIUp1Y2rTCiGhaadLkPFaegLwjq4Pw4OP6KCO1zxSnf\nzpaYYzU8JNUFTVZT5BKIQa7CtbeUvonjR2tfYSqo23rk/HlcZ8IVU6C7FDclgcsC\nsvdBiT+LltmW/se3pvTUwu5rje7QfAAF5eDln6f0SbQpuSP+FaYli3hL8P2AuD4Y\nGU0c+/n197Trdf+9LF+c5oEC2FDtLHTLzQdhuzNBoPWivikLF37StNG3WlSz9RQK\nJMnzeTPtAMdk0XsWNjCbQ9rlHbO2pVrHwYSfWdvt6C8fMysNHK7ZXYuqjvQk2G7Y\nl7VRk2ft6HQf1xLnyfDKHNAPl7/VKjeziaes2JGVcxRb6WG6z1fkfXoWWCuxATSA\nWVJF6ddyGQLA24jMh59igUHzZRSuXcJ7N0uNM2aaxAoI8zQXC8mf9noQcIxHG1wN\nLa7cQY9gxS+4zIeT9pXc3axvNFXFDxMkS4JBIb64YVeywuKMmO4=\n=2pWj\n-----END PGP SIGNATURE-----",
        "payload": "tree 48125d1bf8a013325c48cc079d211a5a915ae726\nparent a6d7026a45c915794338c178b7f95d5c1f8e977f\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1551456238 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1556908278 +0200\n\nAdd ChaCha20 encryption option (XOR)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc2b8b49ad87376d98591b14403dc3b46e3166b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bc2b8b49ad87376d98591b14403dc3b46e3166b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc2b8b49ad87376d98591b14403dc3b46e3166b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6d7026a45c915794338c178b7f95d5c1f8e977f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6d7026a45c915794338c178b7f95d5c1f8e977f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6d7026a45c915794338c178b7f95d5c1f8e977f"
      }
    ],
    "stats": {
      "total": 201,
      "additions": 185,
      "deletions": 16
    },
    "files": [
      {
        "sha": "42a17f02ffa1430f44557202ccf41ea5a3b75bb6",
        "filename": "src/crypto/chacha20.cpp",
        "status": "modified",
        "additions": 131,
        "deletions": 1,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/crypto/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/crypto/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.cpp?ref=2bc2b8b49ad87376d98591b14403dc3b46e3166b",
        "patch": "@@ -71,7 +71,7 @@ void ChaCha20::Seek(uint64_t pos)\n     input[13] = pos >> 32;\n }\n \n-void ChaCha20::Output(unsigned char* c, size_t bytes)\n+void ChaCha20::Keystream(unsigned char* c, size_t bytes)\n {\n     uint32_t x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;\n     uint32_t j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;\n@@ -178,3 +178,133 @@ void ChaCha20::Output(unsigned char* c, size_t bytes)\n         c += 64;\n     }\n }\n+\n+void ChaCha20::Crypt(const unsigned char* m, unsigned char* c, size_t bytes)\n+{\n+    uint32_t x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;\n+    uint32_t j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;\n+    unsigned char *ctarget = nullptr;\n+    unsigned char tmp[64];\n+    unsigned int i;\n+\n+    if (!bytes) return;\n+\n+    j0 = input[0];\n+    j1 = input[1];\n+    j2 = input[2];\n+    j3 = input[3];\n+    j4 = input[4];\n+    j5 = input[5];\n+    j6 = input[6];\n+    j7 = input[7];\n+    j8 = input[8];\n+    j9 = input[9];\n+    j10 = input[10];\n+    j11 = input[11];\n+    j12 = input[12];\n+    j13 = input[13];\n+    j14 = input[14];\n+    j15 = input[15];\n+\n+    for (;;) {\n+        if (bytes < 64) {\n+            // if m has fewer than 64 bytes available, copy m to tmp and\n+            // read from tmp instead\n+            for (i = 0;i < bytes;++i) tmp[i] = m[i];\n+            m = tmp;\n+            ctarget = c;\n+            c = tmp;\n+        }\n+        x0 = j0;\n+        x1 = j1;\n+        x2 = j2;\n+        x3 = j3;\n+        x4 = j4;\n+        x5 = j5;\n+        x6 = j6;\n+        x7 = j7;\n+        x8 = j8;\n+        x9 = j9;\n+        x10 = j10;\n+        x11 = j11;\n+        x12 = j12;\n+        x13 = j13;\n+        x14 = j14;\n+        x15 = j15;\n+        for (i = 20;i > 0;i -= 2) {\n+            QUARTERROUND( x0, x4, x8,x12)\n+            QUARTERROUND( x1, x5, x9,x13)\n+            QUARTERROUND( x2, x6,x10,x14)\n+            QUARTERROUND( x3, x7,x11,x15)\n+            QUARTERROUND( x0, x5,x10,x15)\n+            QUARTERROUND( x1, x6,x11,x12)\n+            QUARTERROUND( x2, x7, x8,x13)\n+            QUARTERROUND( x3, x4, x9,x14)\n+        }\n+        x0 += j0;\n+        x1 += j1;\n+        x2 += j2;\n+        x3 += j3;\n+        x4 += j4;\n+        x5 += j5;\n+        x6 += j6;\n+        x7 += j7;\n+        x8 += j8;\n+        x9 += j9;\n+        x10 += j10;\n+        x11 += j11;\n+        x12 += j12;\n+        x13 += j13;\n+        x14 += j14;\n+        x15 += j15;\n+\n+        x0 ^= ReadLE32(m + 0);\n+        x1 ^= ReadLE32(m + 4);\n+        x2 ^= ReadLE32(m + 8);\n+        x3 ^= ReadLE32(m + 12);\n+        x4 ^= ReadLE32(m + 16);\n+        x5 ^= ReadLE32(m + 20);\n+        x6 ^= ReadLE32(m + 24);\n+        x7 ^= ReadLE32(m + 28);\n+        x8 ^= ReadLE32(m + 32);\n+        x9 ^= ReadLE32(m + 36);\n+        x10 ^= ReadLE32(m + 40);\n+        x11 ^= ReadLE32(m + 44);\n+        x12 ^= ReadLE32(m + 48);\n+        x13 ^= ReadLE32(m + 52);\n+        x14 ^= ReadLE32(m + 56);\n+        x15 ^= ReadLE32(m + 60);\n+\n+        ++j12;\n+        if (!j12) ++j13;\n+\n+        WriteLE32(c + 0, x0);\n+        WriteLE32(c + 4, x1);\n+        WriteLE32(c + 8, x2);\n+        WriteLE32(c + 12, x3);\n+        WriteLE32(c + 16, x4);\n+        WriteLE32(c + 20, x5);\n+        WriteLE32(c + 24, x6);\n+        WriteLE32(c + 28, x7);\n+        WriteLE32(c + 32, x8);\n+        WriteLE32(c + 36, x9);\n+        WriteLE32(c + 40, x10);\n+        WriteLE32(c + 44, x11);\n+        WriteLE32(c + 48, x12);\n+        WriteLE32(c + 52, x13);\n+        WriteLE32(c + 56, x14);\n+        WriteLE32(c + 60, x15);\n+\n+        if (bytes <= 64) {\n+            if (bytes < 64) {\n+                for (i = 0;i < bytes;++i) ctarget[i] = c[i];\n+            }\n+            input[12] = j12;\n+            input[13] = j13;\n+            return;\n+        }\n+        bytes -= 64;\n+        c += 64;\n+        m += 64;\n+    }\n+}"
      },
      {
        "sha": "5a4674f4a8afee6cf40cf0b688f37b28cca7e4d2",
        "filename": "src/crypto/chacha20.h",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/crypto/chacha20.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/crypto/chacha20.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.h?ref=2bc2b8b49ad87376d98591b14403dc3b46e3166b",
        "patch": "@@ -8,7 +8,8 @@\n #include <stdint.h>\n #include <stdlib.h>\n \n-/** A PRNG class for ChaCha20. */\n+/** A class for ChaCha20 256-bit stream cipher developed by Daniel J. Bernstein\n+    https://cr.yp.to/chacha/chacha-20080128.pdf */\n class ChaCha20\n {\n private:\n@@ -17,10 +18,17 @@ class ChaCha20\n public:\n     ChaCha20();\n     ChaCha20(const unsigned char* key, size_t keylen);\n-    void SetKey(const unsigned char* key, size_t keylen);\n-    void SetIV(uint64_t iv);\n-    void Seek(uint64_t pos);\n-    void Output(unsigned char* output, size_t bytes);\n+    void SetKey(const unsigned char* key, size_t keylen); //!< set key with flexible keylength; 256bit recommended */\n+    void SetIV(uint64_t iv); // set the 64bit nonce\n+    void Seek(uint64_t pos); // set the 64bit block counter\n+\n+    /** outputs the keystream of size <bytes> into <c> */\n+    void Keystream(unsigned char* c, size_t bytes);\n+\n+    /** enciphers the message <input> of length <bytes> and write the enciphered representation into <output>\n+     *  Used for encryption and decryption (XOR)\n+     */\n+    void Crypt(const unsigned char* input, unsigned char* output, size_t bytes);\n };\n \n #endif // BITCOIN_CRYPTO_CHACHA20_H"
      },
      {
        "sha": "b08de60fbece7fcd519f14f3a85d784b517a251d",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=2bc2b8b49ad87376d98591b14403dc3b46e3166b",
        "patch": "@@ -652,7 +652,7 @@ std::vector<unsigned char> FastRandomContext::randbytes(size_t len)\n     if (requires_seed) RandomSeed();\n     std::vector<unsigned char> ret(len);\n     if (len > 0) {\n-        rng.Output(&ret[0], len);\n+        rng.Keystream(&ret[0], len);\n     }\n     return ret;\n }"
      },
      {
        "sha": "2f9c0f5a3682ce0a629d77145f9341e68c82cad9",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=2bc2b8b49ad87376d98591b14403dc3b46e3166b",
        "patch": "@@ -111,7 +111,7 @@ class FastRandomContext {\n         if (requires_seed) {\n             RandomSeed();\n         }\n-        rng.Output(bytebuf, sizeof(bytebuf));\n+        rng.Keystream(bytebuf, sizeof(bytebuf));\n         bytebuf_size = sizeof(bytebuf);\n     }\n "
      },
      {
        "sha": "2d6e5322031f83f4d88def523e06f58a52505f89",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 8,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc2b8b49ad87376d98591b14403dc3b46e3166b/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=2bc2b8b49ad87376d98591b14403dc3b46e3166b",
        "patch": "@@ -187,17 +187,36 @@ static void TestAES256CBC(const std::string &hexkey, const std::string &hexiv, b\n     }\n }\n \n-static void TestChaCha20(const std::string &hexkey, uint64_t nonce, uint64_t seek, const std::string& hexout)\n+static void TestChaCha20(const std::string &hex_message, const std::string &hexkey, uint64_t nonce, uint64_t seek, const std::string& hexout)\n {\n     std::vector<unsigned char> key = ParseHex(hexkey);\n+    std::vector<unsigned char> m = ParseHex(hex_message);\n     ChaCha20 rng(key.data(), key.size());\n     rng.SetIV(nonce);\n     rng.Seek(seek);\n     std::vector<unsigned char> out = ParseHex(hexout);\n     std::vector<unsigned char> outres;\n     outres.resize(out.size());\n-    rng.Output(outres.data(), outres.size());\n+    assert(hex_message.empty() || m.size() == out.size());\n+\n+    // perform the ChaCha20 round(s), if message is provided it will output the encrypted ciphertext otherwise the keystream\n+    if (!hex_message.empty()) {\n+        rng.Crypt(m.data(), outres.data(), outres.size());\n+    } else {\n+        rng.Keystream(outres.data(), outres.size());\n+    }\n     BOOST_CHECK(out == outres);\n+    if (!hex_message.empty()) {\n+        // Manually XOR with the keystream and compare the output\n+        rng.SetIV(nonce);\n+        rng.Seek(seek);\n+        std::vector<unsigned char> only_keystream(outres.size());\n+        rng.Keystream(only_keystream.data(), only_keystream.size());\n+        for (size_t i = 0; i != m.size(); i++) {\n+            outres[i] = m[i] ^ only_keystream[i];\n+        }\n+        BOOST_CHECK(out == outres);\n+    }\n }\n \n static std::string LongTestString() {\n@@ -497,25 +516,37 @@ BOOST_AUTO_TEST_CASE(aes_cbc_testvectors) {\n BOOST_AUTO_TEST_CASE(chacha20_testvector)\n {\n     // Test vector from RFC 7539\n-    TestChaCha20(\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x4a000000UL, 1,\n+\n+    // test encryption\n+    TestChaCha20(\"4c616469657320616e642047656e746c656d656e206f662074686520636c617373206f66202739393a204966204920636f756\"\n+                 \"c64206f6666657220796f75206f6e6c79206f6e652074697020666f7220746865206675747572652c2073756e73637265656e\"\n+                 \"20776f756c642062652069742e\",\n+                 \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x4a000000UL, 1,\n+                 \"6e2e359a2568f98041ba0728dd0d6981e97e7aec1d4360c20a27afccfd9fae0bf91b65c5524733ab8f593dabcd62b3571639d\"\n+                 \"624e65152ab8f530c359f0861d807ca0dbf500d6a6156a38e088a22b65e52bc514d16ccf806818ce91ab77937365af90bbf74\"\n+                 \"a35be6b40b8eedf2785e42874d\"\n+                 );\n+\n+    // test keystream output\n+    TestChaCha20(\"\", \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x4a000000UL, 1,\n                  \"224f51f3401bd9e12fde276fb8631ded8c131f823d2c06e27e4fcaec9ef3cf788a3b0aa372600a92b57974cded2b9334794cb\"\n                  \"a40c63e34cdea212c4cf07d41b769a6749f3f630f4122cafe28ec4dc47e26d4346d70b98c73f3e9c53ac40c5945398b6eda1a\"\n                  \"832c89c167eacd901d7e2bf363\");\n \n     // Test vectors from https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n-    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 0, 0,\n+    TestChaCha20(\"\", \"0000000000000000000000000000000000000000000000000000000000000000\", 0, 0,\n                  \"76b8e0ada0f13d90405d6ae55386bd28bdd219b8a08ded1aa836efcc8b770dc7da41597c5157488d7724e03fb8d84a376a43b\"\n                  \"8f41518a11cc387b669b2ee6586\");\n-    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000001\", 0, 0,\n+    TestChaCha20(\"\", \"0000000000000000000000000000000000000000000000000000000000000001\", 0, 0,\n                  \"4540f05a9f1fb296d7736e7b208e3c96eb4fe1834688d2604f450952ed432d41bbe2a0b6ea7566d2a5d1e7e20d42af2c53d79\"\n                  \"2b1c43fea817e9ad275ae546963\");\n-    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 0x0100000000000000ULL, 0,\n+    TestChaCha20(\"\", \"0000000000000000000000000000000000000000000000000000000000000000\", 0x0100000000000000ULL, 0,\n                  \"de9cba7bf3d69ef5e786dc63973f653a0b49e015adbff7134fcb7df137821031e85a050278a7084527214f73efc7fa5b52770\"\n                  \"62eb7a0433e445f41e3\");\n-    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 1, 0,\n+    TestChaCha20(\"\", \"0000000000000000000000000000000000000000000000000000000000000000\", 1, 0,\n                  \"ef3fdfd6c61578fbf5cf35bd3dd33b8009631634d21e42ac33960bd138e50d32111e4caf237ee53ca8ad6426194a88545ddc4\"\n                  \"97a0b466e7d6bbdb0041b2f586b\");\n-    TestChaCha20(\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x0706050403020100ULL, 0,\n+    TestChaCha20(\"\", \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x0706050403020100ULL, 0,\n                  \"f798a189f195e66982105ffb640bb7757f579da31602fc93ec01ac56f85ac3c134a4547b733b46413042c9440049176905d3b\"\n                  \"e59ea1c53f15916155c2be8241a38008b9a26bc35941e2444177c8ade6689de95264986d95889fb60e84629c9bd9a5acb1cc1\"\n                  \"18be563eb9b3a4a472f82e09a7e778492b562ef7130e88dfe031c79db9d4f7c7a899151b9a475032b63fc385245fe054e3dd5\""
      }
    ]
  },
  {
    "sha": "2dfe2751713c814aea53b5a7563eb74ad1baea00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZGZlMjc1MTcxM2M4MTRhZWE1M2I1YTc1NjNlYjc0YWQxYmFlYTAw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-03-05T09:50:50Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-03T20:52:11Z"
      },
      "message": "Add ChaCha20 bench",
      "tree": {
        "sha": "13031d138821514c1417e178c717ef73ccc49d6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13031d138821514c1417e178c717ef73ccc49d6a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2dfe2751713c814aea53b5a7563eb74ad1baea00",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlzMqfsACgkQHrd2uwPH\nki0a5A/+MEvVhLjLOUAkQCl7iUJ6HROvMmjtzJwhUqJuXBe6JuBtAYc7pIYUTt2g\nWmefcC6cPaMgDIL0AOWQUJyWOZkdINpHZfRTz0hRQy9AlicgOvzaDXy5bvWJihw+\n7pfoiHI4I8gRBHCftI8o7bW5y9BBFwYIsYe3j0u8gHreHsrCtZtTKHOdHsI3pred\nNtooJMTRQBWDXUHXT9aFPA9ouu/vsGKuIUJMXLVn/xTMEZrEf1ygpCXCPaPNVDdE\nVLNDLKJK3EnSFcI3BeOBDgBx0SInviVWItss7bBbtcqTvFE8gyFPcpyRYl3ZKY8J\nx6+zJ1AeB2axDC1Um4Mb8q4REnR7uW6Fs8/+U21O4QSvG8qFmcw7FDcrHo9QtFye\n1Gz7P0K0xY6b5wxKpvUyr3XUK/3uXcpmmyY7nUy55JAcwcIvPzNKICbTka8okcAb\npG5y5/vvwwc5kz7YU1Kbu0KOPnqcCvchcDckRrVSQHO/02DhIPaO2WgipxbHwepG\nWNBtk5YR36J1xCG+TR82+fr+yPsOGpWwH9ZL4vEES4VwBuVKuo1sNHevEYMA1/ul\nh5fkc4f9sjBfONZbKhDs4snXA9/4aFtflMH5iwK43gce3Nx9bcURqN5TaBB3JLMY\ncAd9rm3GLd9QpTfiCpDkeisJjd3/sMKS1bLOgK7aHQbqNREmFAo=\n=2q5X\n-----END PGP SIGNATURE-----",
        "payload": "tree 13031d138821514c1417e178c717ef73ccc49d6a\nparent 2bc2b8b49ad87376d98591b14403dc3b46e3166b\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1551779450 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1556916731 +0200\n\nAdd ChaCha20 bench\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dfe2751713c814aea53b5a7563eb74ad1baea00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2dfe2751713c814aea53b5a7563eb74ad1baea00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dfe2751713c814aea53b5a7563eb74ad1baea00/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2bc2b8b49ad87376d98591b14403dc3b46e3166b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc2b8b49ad87376d98591b14403dc3b46e3166b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2bc2b8b49ad87376d98591b14403dc3b46e3166b"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 47,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4b3a6ff99ef149485180eb35e0b35625e0aff7a6",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2dfe2751713c814aea53b5a7563eb74ad1baea00/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2dfe2751713c814aea53b5a7563eb74ad1baea00/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=2dfe2751713c814aea53b5a7563eb74ad1baea00",
        "patch": "@@ -21,6 +21,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/duplicate_inputs.cpp \\\n   bench/examples.cpp \\\n   bench/rollingbloom.cpp \\\n+  bench/chacha20.cpp \\\n   bench/crypto_hash.cpp \\\n   bench/ccoins_caching.cpp \\\n   bench/gcs_filter.cpp \\"
      },
      {
        "sha": "69d8c96ec0cbd63e352fc403633a8039350a658b",
        "filename": "src/bench/chacha20.cpp",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2dfe2751713c814aea53b5a7563eb74ad1baea00/src/bench/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2dfe2751713c814aea53b5a7563eb74ad1baea00/src/bench/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/chacha20.cpp?ref=2dfe2751713c814aea53b5a7563eb74ad1baea00",
        "patch": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <crypto/chacha20.h>\n+\n+/* Number of bytes to process per iteration */\n+static const uint64_t BUFFER_SIZE_TINY  = 64;\n+static const uint64_t BUFFER_SIZE_SMALL = 256;\n+static const uint64_t BUFFER_SIZE_LARGE = 1024*1024;\n+\n+static void CHACHA20(benchmark::State& state, size_t buffersize)\n+{\n+    std::vector<uint8_t> key(32,0);\n+    ChaCha20 ctx(key.data(), key.size());\n+    ctx.SetIV(0);\n+    ctx.Seek(0);\n+    std::vector<uint8_t> in(buffersize,0);\n+    std::vector<uint8_t> out(buffersize,0);\n+    while (state.KeepRunning()) {\n+        ctx.Crypt(in.data(), out.data(), in.size());\n+    }\n+}\n+\n+static void CHACHA20_64BYTES(benchmark::State& state)\n+{\n+    CHACHA20(state, BUFFER_SIZE_TINY);\n+}\n+\n+static void CHACHA20_256BYTES(benchmark::State& state)\n+{\n+    CHACHA20(state, BUFFER_SIZE_SMALL);\n+}\n+\n+static void CHACHA20_1MB(benchmark::State& state)\n+{\n+    CHACHA20(state, BUFFER_SIZE_LARGE);\n+}\n+\n+BENCHMARK(CHACHA20_64BYTES, 500000);\n+BENCHMARK(CHACHA20_256BYTES, 250000);\n+BENCHMARK(CHACHA20_1MB, 340);"
      }
    ]
  }
]