gmaxwell,2015-03-02T10:54:15Z,Tested by IBDing a node running this against a node running this.\n,https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-76692118,76692118,
laanwj,2015-03-02T16:21:43Z,"Code looks correct to me, going to test.\n",https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-76742821,76742821,
gmaxwell,2015-03-03T12:26:36Z,Retesting.\n,https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-76936303,76936303,
laanwj,2015-03-03T19:20:52Z,Tested ACK\n\n```\n2015-03-03 19:19:20 initial getheaders (324870) to peer=1 (startheight:0)\n2015-03-03 19:19:20 sending: getheaders (997 bytes) peer=1\n2015-03-03 19:19:20 Misbehaving: 127.0.0.1:57403 (0 -> 100) BAN THRESHOLD EXCEEDED\n2015-03-03 19:19:20 Oversized message from peer=1 (size=4194304)\n2015-03-03 19:19:20 socket closed\n2015-03-03 19:19:20 disconnecting peer=1\n```\n,https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77014570,77014570,
sipa,2015-03-05T12:04:35Z,@gmaxwell Please test again?\n,https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77352902,77352902,
gmaxwell,2015-03-05T16:13:50Z,"Hurray, It disconnects now, but as I pointed out-- while it grants misbehaving-- it does not attempt to ban because now it disconnects before it gets a chance to do so. If it's not going to ban, there is no point in setting the misbehaving, and a simpler patch which doesn't use the signals would work the same. (though I suppose we should have the combiner fix for the other signal that uses the ret",https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77393319,77393319,
gavinandresen,2015-03-05T17:58:14Z,"ACK on the signal combiner.\n\nRE: Misbehaving/banning: seems like it should ban, but instead of introducing Yet Another Signal, seems to me a check for state->fShouldBan in main.cpp FinalizeNode (called when net disconnects a peer) might be the right approach.\n",https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77414394,77414394,
gavinandresen,2015-03-05T18:10:55Z,"@sipa : nit:  I think the combiner code could be replaced with boost::bind(boost::algorithm::all_of_equal, _1, _2, true)\n",https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77416814,77416814,
sipa,2015-03-06T11:59:46Z,"Moved the combiner logic, and simplified the code here.\n\nA more complex signals-based solution can be done later.\n",https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77548652,77548652,
gmaxwell,2015-03-06T12:34:30Z,"I was a little surprised that you went with logging at only debug=net level, but it works. ACK.\n",https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77552346,77552346,
laanwj,2015-03-06T14:31:46Z,I like the simpler solution. ACK.\n,https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77567194,77567194,
jgarzik,2015-03-08T03:03:22Z,posthumous ACK for simpler solution\n,https://github.com/bitcoin/bitcoin/pull/5843#issuecomment-77730049,77730049,
laanwj,2015-03-03T07:41:01Z,"I lobbed a 4MB message at my node and it crashed here:\n\n```\nEXCEPTION: St13runtime_error       \ntinyformat: Not enough conversion specifiers in format string       \nbitcoin in net       \n```\n\nAs a category is passed, this should be `LogPrint`, not `LogPrintf` [yes, stupid naming.].\n",https://github.com/bitcoin/bitcoin/pull/5843#discussion_r25667942,25667942,src/main.cpp
sipa,2015-03-03T12:06:22Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/5843#discussion_r25681738,25681738,src/main.cpp
