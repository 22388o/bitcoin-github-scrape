[
  {
    "sha": "e03a716fade0c0036a2643b72a08c04a9d330289",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDNhNzE2ZmFkZTBjMDAzNmEyNjQzYjcyYTA4YzA0YTlkMzMwMjg5",
    "commit": {
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2020-12-02T08:38:18Z"
      },
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2020-12-02T08:38:18Z"
      },
      "message": "Previously, we would re-bucket AddrMan entries if, at a restart,\na node reads a peers.dat file of pre-asmap format.\n\nThis should not happen if an actual asmap file was not provided,\nbecause bucket assignment won't change.\n\nRe-bucketing should be avoided because it leads to a data loss:\nsince we don't remember where those addrs came from, they\nwill be placed only into 1 bucket (as opposed to placing\nin up to 8, if we receive them from 8 different peers during node operation).\n\nFor peers.dat files with pre-asmap format, re-bucket only if an asmap file\nwas supported, which can be achieved by an already existing check:\nserialized_asmap_version == supplied_asmap_version",
      "tree": {
        "sha": "520f5010570ab1b39ac979b62e1e485e4cf49841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/520f5010570ab1b39ac979b62e1e485e4cf49841"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e03a716fade0c0036a2643b72a08c04a9d330289",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e03a716fade0c0036a2643b72a08c04a9d330289",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e03a716fade0c0036a2643b72a08c04a9d330289",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e03a716fade0c0036a2643b72a08c04a9d330289/comments",
    "author": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "afdfd3c8c1ce96adae11809e3989de381137fee9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afdfd3c8c1ce96adae11809e3989de381137fee9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/afdfd3c8c1ce96adae11809e3989de381137fee9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3b574c23c845e8a9b6484ac4b3a1ae546002f856",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e03a716fade0c0036a2643b72a08c04a9d330289/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e03a716fade0c0036a2643b72a08c04a9d330289/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=e03a716fade0c0036a2643b72a08c04a9d330289",
        "patch": "@@ -527,7 +527,7 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n+            if (nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n                 info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n                 // Bucketing has not changed, using existing bucket positions for the new table\n                 vvNew[bucket][nUBucketPos] = n;"
      }
    ]
  },
  {
    "sha": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMmIzZTRiOTdlMTI1NDU0YjY1MzkyMmZmMGUxZjc0ZTQ4YzYzYjY3",
    "commit": {
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2020-12-01T08:04:18Z"
      },
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2020-12-02T09:44:03Z"
      },
      "message": "Refactor deciding to re-bucket on restart\n\nNo behavior change.",
      "tree": {
        "sha": "c6908961283e94843109ebf2c0a2156e7d850996",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6908961283e94843109ebf2c0a2156e7d850996"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2b3e4b97e125454b653922ff0e1f74e48c63b67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2b3e4b97e125454b653922ff0e1f74e48c63b67/comments",
    "author": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e03a716fade0c0036a2643b72a08c04a9d330289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e03a716fade0c0036a2643b72a08c04a9d330289",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e03a716fade0c0036a2643b72a08c04a9d330289"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 15,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a2dae312e048f033434772fb3550c71a79043441",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2b3e4b97e125454b653922ff0e1f74e48c63b67/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2b3e4b97e125454b653922ff0e1f74e48c63b67/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=c2b3e4b97e125454b653922ff0e1f74e48c63b67",
        "patch": "@@ -523,12 +523,25 @@ friend class CAddrManTest;\n             s >> serialized_asmap_version;\n         }\n \n+        // The file is compatible if asmap and the constant haven't changed.\n+        // asmap has changed in two cases:\n+        // - either it wasn't supported by the addr file, but now asmap is supplied;\n+        // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+        const bool compatible_file = serialized_asmap_version == supplied_asmap_version && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT;\n+\n         for (int n = 0; n < nNew; n++) {\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - the file is compatible (asmap and the constant haven't changed)\n+            // - bucket/position assignment hasn't changed incompatibly\n+            // If the file is incompatible, reassign buckets/positions.\n+            const bool compatible_assignment = vvNew[bucket][nUBucketPos] == -1 && info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS;\n+\n+            if (compatible_file && compatible_assignment) {\n                 // Bucketing has not changed, using existing bucket positions for the new table\n                 vvNew[bucket][nUBucketPos] = n;\n                 info.nRefCount++;"
      }
    ]
  }
]