[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736306028",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#issuecomment-736306028",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20539",
    "id": 736306028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjMwNjAyOA==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T08:23:38Z",
    "updated_at": "2020-12-01T08:23:38Z",
    "author_association": "MEMBER",
    "body": "The bug was found by @jnewbery [here](https://github.com/bitcoin/bitcoin/pull/16702#discussion_r515608294).\r\n\r\nThis probably should be backported to 0.20 and 0.21.\r\n\r\ncc @vasild ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736306028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736307658",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#issuecomment-736307658",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20539",
    "id": 736307658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjMwNzY1OA==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T08:26:58Z",
    "updated_at": "2020-12-01T08:27:15Z",
    "author_association": "MEMBER",
    "body": "To be clear, the issue we're solving here happens only *once* when a node updates from <0.20 to 0.20+.\r\nAfter that, even if asmap was not supplied, peers.dat will be stored on disk in Format::V2_ASMAP,\r\nand next time a node restarted, the check won't be triggered. (even before this PR)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736307658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736348790",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#issuecomment-736348790",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20539",
    "id": 736348790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjM0ODc5MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T09:36:42Z",
    "updated_at": "2020-12-01T16:16:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736348790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737888850",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#issuecomment-737888850",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20539",
    "id": 737888850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzg4ODg1MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-03T11:40:23Z",
    "updated_at": "2020-12-03T11:40:23Z",
    "author_association": "MEMBER",
    "body": "#20557 fixes this issue and a couple of other bugs in addrman unserialization. I suggest we close this PR in favour of that one.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737888850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533430513",
    "pull_request_review_id": 541923861,
    "id": 533430513,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQzMDUxMw==",
    "diff_hunk": "@@ -527,10 +527,25 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (((format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\n-                (format < Format::V2_ASMAP && m_asmap.size() == 0)) &&\n-                nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - constants haven't been changed incompatibly\n+            // - asmap has not changed\n+            // - bucket/position assignment hasn't been changed incompatibly\n+            // If it's incompatible, reassign buckets/positions.\n+\n+            // asmap has changed in two cases:\n+            // - either it wasn't supported by the addr file, but now asmap is supplied;\n+            // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+            const bool asmap_was_supported = format >= Format::V2_ASMAP;\n+            const bool asmap_changed = (!asmap_was_supported && m_asmap.size() != 0) ||\n+                (asmap_was_supported && serialized_asmap_version != supplied_asmap_version);\n+\n+            const bool constants_changed_incompatibly = nUBuckets != ADDRMAN_NEW_BUCKET_COUNT || info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS;\n+            const bool assignment_changed = vvNew[bucket][nUBucketPos] != -1;\n+\n+            if (!asmap_changed && !constants_changed_incompatibly && !assignment_changed) {",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 26,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "58dfe2b090fb850ff3d67d8ab56468bc55a3d196",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this would be more readable as:\r\n```cpp\r\nif (asmap_is_same && constants_are_same && assignment_is_same) {\r\n```\r\n(and of course variables renamed and re-assigned)",
    "created_at": "2020-12-01T14:04:23Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533430513",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533430513"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533430513"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533430513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 548,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533445562",
    "pull_request_review_id": 541923861,
    "id": 533445562,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ0NTU2Mg==",
    "diff_hunk": "@@ -527,10 +527,25 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (((format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\n-                (format < Format::V2_ASMAP && m_asmap.size() == 0)) &&\n-                nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - constants haven't been changed incompatibly\n+            // - asmap has not changed\n+            // - bucket/position assignment hasn't been changed incompatibly\n+            // If it's incompatible, reassign buckets/positions.\n+\n+            // asmap has changed in two cases:\n+            // - either it wasn't supported by the addr file, but now asmap is supplied;\n+            // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+            const bool asmap_was_supported = format >= Format::V2_ASMAP;\n+            const bool asmap_changed = (!asmap_was_supported && m_asmap.size() != 0) ||\n+                (asmap_was_supported && serialized_asmap_version != supplied_asmap_version);",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 21,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "58dfe2b090fb850ff3d67d8ab56468bc55a3d196",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\nI think the second commit is not an equivalent change (it is behavioral change):\r\n\r\nasmap_was_supported == format >= Format::V2_ASMAP;\r\nasmap_changed ==\r\n    (!asmap_was_supported && m_asmap.size() != 0) ||\r\n    (asmap_was_supported && serialized_asmap_version != supplied_asmap_version);\r\n\r\nis equivalent to\r\n\r\nasmap_changed ==\r\n    (!(format >= Format::V2_ASMAP) && m_asmap.size() != 0) ||\r\n    (format >= Format::V2_ASMAP && serialized_asmap_version != supplied_asmap_version);\r\n\r\nis equivalent to\r\n\r\nasmap_changed ==\r\n    (format < Format::V2_ASMAP && m_asmap.size() != 0) ||\r\n    (format >= Format::V2_ASMAP && serialized_asmap_version != supplied_asmap_version);\r\n\r\nis equivalent to\r\n\r\n!asmap_changed ==\r\n    !(format < Format::V2_ASMAP && m_asmap.size() != 0) &&\r\n    !(format >= Format::V2_ASMAP && serialized_asmap_version != supplied_asmap_version);\r\n\r\nis equivalent to\r\n\r\n!asmap_changed ==\r\n    (format >= Format::V2_ASMAP || m_asmap.size() == 0) &&\r\n    (format < Format::V2_ASMAP || serialized_asmap_version == supplied_asmap_version);\r\n\r\nbut in the \"if\", !asmap_changed replaces not the above but something else:\r\n\r\n(format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\r\n(format < Format::V2_ASMAP && m_asmap.size() == 0)\r\n```",
    "created_at": "2020-12-01T14:24:58Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533445562",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533445562"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533445562"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533445562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 541,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 543,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533448739",
    "pull_request_review_id": 541923861,
    "id": 533448739,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ0ODczOQ==",
    "diff_hunk": "@@ -527,10 +527,25 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (((format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\n-                (format < Format::V2_ASMAP && m_asmap.size() == 0)) &&",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 5,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "58dfe2b090fb850ff3d67d8ab56468bc55a3d196",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is introduced in the first commit:\r\n\r\n```\r\n(format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\r\n(format < Format::V2_ASMAP && m_asmap.size() == 0)\r\n```\r\n\r\nIs it not equivalent to just `serialized_asmap_version == supplied_asmap_version`? After all, if the hash of the supplied and the serialized version is the same, then asmap did not change.",
    "created_at": "2020-12-01T14:29:08Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533448739",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533448739"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533448739"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533448739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 530,
    "start_side": "LEFT",
    "line": null,
    "original_line": 531,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533551450",
    "pull_request_review_id": 542081255,
    "id": 533551450,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1MTQ1MA==",
    "diff_hunk": "@@ -527,10 +527,25 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (((format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\n-                (format < Format::V2_ASMAP && m_asmap.size() == 0)) &&\n-                nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - constants haven't been changed incompatibly\n+            // - asmap has not changed\n+            // - bucket/position assignment hasn't been changed incompatibly\n+            // If it's incompatible, reassign buckets/positions.\n+\n+            // asmap has changed in two cases:\n+            // - either it wasn't supported by the addr file, but now asmap is supplied;\n+            // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+            const bool asmap_was_supported = format >= Format::V2_ASMAP;\n+            const bool asmap_changed = (!asmap_was_supported && m_asmap.size() != 0) ||\n+                (asmap_was_supported && serialized_asmap_version != supplied_asmap_version);\n+\n+            const bool constants_changed_incompatibly = nUBuckets != ADDRMAN_NEW_BUCKET_COUNT || info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS;\n+            const bool assignment_changed = vvNew[bucket][nUBucketPos] != -1;\n+\n+            if (!asmap_changed && !constants_changed_incompatibly && !assignment_changed) {",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 26,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "58dfe2b090fb850ff3d67d8ab56468bc55a3d196",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"Same\" is not quite true... For example, if \"ADDRMAN_NEW_BUCKETS_PER_ADDRESS\" was increased, we should ignore it here, although technically it changed :)",
    "created_at": "2020-12-01T16:31:53Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533551450",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533551450"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533551450"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533551450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 548,
    "side": "RIGHT",
    "in_reply_to_id": 533430513
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533975122",
    "pull_request_review_id": 542590791,
    "id": 533975122,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk3NTEyMg==",
    "diff_hunk": "@@ -527,10 +527,25 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (((format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\n-                (format < Format::V2_ASMAP && m_asmap.size() == 0)) &&\n-                nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - constants haven't been changed incompatibly\n+            // - asmap has not changed\n+            // - bucket/position assignment hasn't been changed incompatibly\n+            // If it's incompatible, reassign buckets/positions.\n+\n+            // asmap has changed in two cases:\n+            // - either it wasn't supported by the addr file, but now asmap is supplied;\n+            // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+            const bool asmap_was_supported = format >= Format::V2_ASMAP;\n+            const bool asmap_changed = (!asmap_was_supported && m_asmap.size() != 0) ||\n+                (asmap_was_supported && serialized_asmap_version != supplied_asmap_version);",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 21,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "58dfe2b090fb850ff3d67d8ab56468bc55a3d196",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well, I think they are actually equal, assuming that both can be simplified to `serialized_asmap_version == supplied_asmap_version` in our case :)",
    "created_at": "2020-12-02T08:22:39Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533975122",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533975122"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533975122"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533975122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 541,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 543,
    "side": "RIGHT",
    "in_reply_to_id": 533445562
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533975311",
    "pull_request_review_id": 542591042,
    "id": 533975311,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk3NTMxMQ==",
    "diff_hunk": "@@ -527,10 +527,25 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (((format >= Format::V2_ASMAP && serialized_asmap_version == supplied_asmap_version) ||\n-                (format < Format::V2_ASMAP && m_asmap.size() == 0)) &&\n-                nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - constants haven't been changed incompatibly\n+            // - asmap has not changed\n+            // - bucket/position assignment hasn't been changed incompatibly\n+            // If it's incompatible, reassign buckets/positions.\n+\n+            // asmap has changed in two cases:\n+            // - either it wasn't supported by the addr file, but now asmap is supplied;\n+            // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+            const bool asmap_was_supported = format >= Format::V2_ASMAP;\n+            const bool asmap_changed = (!asmap_was_supported && m_asmap.size() != 0) ||\n+                (asmap_was_supported && serialized_asmap_version != supplied_asmap_version);",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 21,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "58dfe2b090fb850ff3d67d8ab56468bc55a3d196",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Anyway, this part will be no relevant when I simplify the first commit.",
    "created_at": "2020-12-02T08:22:59Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533975311",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533975311"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r533975311"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533975311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 541,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 543,
    "side": "RIGHT",
    "in_reply_to_id": 533445562
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534013241",
    "pull_request_review_id": 542639106,
    "id": 534013241,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAxMzI0MQ==",
    "diff_hunk": "@@ -527,8 +527,23 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - constants haven't been changed incompatibly\n+            // - asmap has not changed\n+            // - bucket/position assignment hasn't been changed incompatibly\n+            // If it's incompatible, reassign buckets/positions.\n+\n+            // asmap has changed in two cases:\n+            // - either it wasn't supported by the addr file, but now asmap is supplied;\n+            // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+            const bool asmap_is_same = serialized_asmap_version == supplied_asmap_version;\n+\n+            const bool constants_are_compatible = nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS;\n+            const bool assignment_is_compatible = vvNew[bucket][nUBucketPos] == -1;",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 20,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "0288ed8dbf36602156e5d9c57ad3ee529c75a21a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I still think these assignments should happen outside the loop, since they're constant and don't depend on the loop variable. See https://github.com/bitcoin/bitcoin/pull/16702#discussion_r515608294.",
    "created_at": "2020-12-02T09:23:15Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r534013241",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534013241"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r534013241"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534013241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 538,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 544,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534014630",
    "pull_request_review_id": 542640793,
    "id": 534014630,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAxNDYzMA==",
    "diff_hunk": "@@ -527,8 +527,23 @@ friend class CAddrManTest;\n             CAddrInfo &info = mapInfo[n];\n             int bucket = entryToBucket[n];\n             int nUBucketPos = info.GetBucketPosition(nKey, true, bucket);\n-            if (format >= Format::V2_ASMAP && nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && vvNew[bucket][nUBucketPos] == -1 &&\n-                info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS && serialized_asmap_version == supplied_asmap_version) {\n+\n+            // We already checked that the file format is not \"too new\" and we can parse it (see lowest_compatible above).\n+            // Here, check that the file is compatible by other means:\n+            // - constants haven't been changed incompatibly\n+            // - asmap has not changed\n+            // - bucket/position assignment hasn't been changed incompatibly\n+            // If it's incompatible, reassign buckets/positions.\n+\n+            // asmap has changed in two cases:\n+            // - either it wasn't supported by the addr file, but now asmap is supplied;\n+            // - or it was supported, but we have a different asmap now (the lack of asmap counts as well)\n+            const bool asmap_is_same = serialized_asmap_version == supplied_asmap_version;\n+\n+            const bool constants_are_compatible = nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS;\n+            const bool assignment_is_compatible = vvNew[bucket][nUBucketPos] == -1;",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 20,
    "commit_id": "c2b3e4b97e125454b653922ff0e1f74e48c63b67",
    "original_commit_id": "0288ed8dbf36602156e5d9c57ad3ee529c75a21a",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, some of them. I'll move them out.",
    "created_at": "2020-12-02T09:25:09Z",
    "updated_at": "2020-12-02T09:44:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r534014630",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534014630"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20539#discussion_r534014630"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20539"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/534014630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 538,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 544,
    "side": "RIGHT",
    "in_reply_to_id": 534013241
  }
]