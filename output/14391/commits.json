[
  {
    "sha": "95462037c70ec4403bc24e18c56b1cd526aabb9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTQ2MjAzN2M3MGVjNDQwM2JjMjRlMThjNTZiMWNkNTI2YWFiYjlk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-09-06T08:44:39Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-10-04T08:26:04Z"
      },
      "message": "lint: Make Travis linting output less verbose in case of no violations",
      "tree": {
        "sha": "57d07d990c81b5cb4cd62d4249b6396dc58df1cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57d07d990c81b5cb4cd62d4249b6396dc58df1cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95462037c70ec4403bc24e18c56b1cd526aabb9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95462037c70ec4403bc24e18c56b1cd526aabb9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95462037c70ec4403bc24e18c56b1cd526aabb9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95462037c70ec4403bc24e18c56b1cd526aabb9d/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f59c6f3eb6c2d5b8dcff04dc3334ee0f0de5b17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f59c6f3eb6c2d5b8dcff04dc3334ee0f0de5b17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f59c6f3eb6c2d5b8dcff04dc3334ee0f0de5b17"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 19,
      "deletions": 15
    },
    "files": [
      {
        "sha": "6c94ac6a5186a3115dae0824572700773c8e4111",
        "filename": ".travis/lint_06_script.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95462037c70ec4403bc24e18c56b1cd526aabb9d/.travis/lint_06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95462037c70ec4403bc24e18c56b1cd526aabb9d/.travis/lint_06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_06_script.sh?ref=95462037c70ec4403bc24e18c56b1cd526aabb9d",
        "patch": "@@ -10,10 +10,12 @@ if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n   test/lint/commit-script-check.sh $TRAVIS_COMMIT_RANGE\n fi\n \n-test/lint/git-subtree-check.sh src/crypto/ctaes\n-test/lint/git-subtree-check.sh src/secp256k1\n-test/lint/git-subtree-check.sh src/univalue\n-test/lint/git-subtree-check.sh src/leveldb\n+for SUBTREE in src/crypto/ctaes src/leveldb src/secp256k1 src/univalue; do\n+    if ! SUBTREE_OUTPUT=$(test/lint/git-subtree-check.sh ${SUBTREE} 2>&1); then\n+        echo \"${SUBTREE_OUTPUT}\"\n+        exit 1\n+    fi\n+done\n test/lint/check-doc.py\n test/lint/check-rpc-mappings.py .\n test/lint/lint-all.sh"
      },
      {
        "sha": "30a2217d975ee2c4845cb5da6a6337e36c56bdc9",
        "filename": "test/lint/check-doc.py",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95462037c70ec4403bc24e18c56b1cd526aabb9d/test/lint/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95462037c70ec4403bc24e18c56b1cd526aabb9d/test/lint/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/check-doc.py?ref=95462037c70ec4403bc24e18c56b1cd526aabb9d",
        "patch": "@@ -6,8 +6,6 @@\n '''\n This checks if all command line args are documented.\n Return value is 0 to indicate no error.\n-\n-Author: @MarcoFalke\n '''\n \n from subprocess import check_output\n@@ -34,15 +32,21 @@ def main():\n     args_need_doc = args_used.difference(args_docd)\n     args_unknown = args_docd.difference(args_used)\n \n-    print(\"Args used        : {}\".format(len(args_used)))\n-    print(\"Args documented  : {}\".format(len(args_docd)))\n-    print(\"Args undocumented: {}\".format(len(args_need_doc)))\n-    print(args_need_doc)\n-    print(\"Args unknown     : {}\".format(len(args_unknown)))\n-    print(args_unknown)\n+    print(\"[info] {} arguments used. {} arguments documented.\".format(len(args_used), len(args_docd)))\n \n-    sys.exit(len(args_need_doc))\n+    if args_need_doc:\n+        print(\"\")\n+        print(\"The following arguments are undocumented:\")\n+        for undocumented_arg in sorted(args_need_doc):\n+            print(\"* {}\".format(undocumented_arg))\n \n+    if args_unknown:\n+        print(\"\")\n+        print(\"The following arguments are unknown:\")\n+        for unknown_arg in sorted(args_unknown):\n+            print(\"* {}\".format(unknown_arg))\n+\n+    sys.exit(len(args_need_doc))\n \n if __name__ == \"__main__\":\n     main()"
      },
      {
        "sha": "7ea5cd54c92b02b4346ea7a5be66ef6da9a38c83",
        "filename": "test/lint/check-rpc-mappings.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95462037c70ec4403bc24e18c56b1cd526aabb9d/test/lint/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95462037c70ec4403bc24e18c56b1cd526aabb9d/test/lint/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/check-rpc-mappings.py?ref=95462037c70ec4403bc24e18c56b1cd526aabb9d",
        "patch": "@@ -109,8 +109,6 @@ def main():\n     client = SOURCE_CLIENT\n     mapping = set(process_mapping(os.path.join(root, client)))\n \n-    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n-\n     # Check mapping consistency\n     errors = 0\n     for (cmdname, argidx, argname) in mapping:"
      }
    ]
  }
]