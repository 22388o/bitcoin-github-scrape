sipa,2021-02-19 20:12:59,I don't intend to squash. They're all independent improvements.,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-782314297,782314297,
DrahtBot,2021-02-20 05:05:14,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21329 (descriptor wallet: Cache last hardened xpub and use in normalized descriptors by achow101)\n* #16116 (Avoid unnece",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-782561567,782561567,
achow101,2021-03-12 01:19:50,Partial ACK. Same questions as Sjors.,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-797165938,797165938,
sipa,2021-03-12 03:22:18,"@achow101 @Sjors Good that you raise that point.\n\nThe original reason why this behavior of MakeScripts-is-invoked-once-per-evaluation existed was to support things like `combo()`, where a single evaluation at a single index results in multiple scriptPubKeys. This was particularly complicated to combine with descriptors that support multiple subdescriptors (like `tr()`) - there isn't really a s",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-797207524,797207524,
Sjors,2021-03-12 08:28:13,"Thanks, I'll review again after rebase.",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-797323709,797323709,
sipa,2021-03-12 08:40:25,Rebased.,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-797331256,797331256,
Sjors,2021-03-12 14:02:47,"ACK 05c633e\n\nConceptually I find it marginally simpler if you reverse the first and second commit, so the first step is to remove the unused loop:\n\n```cpp\n        if (m_subdescriptor_arg) {\n            const auto& subscript = subscripts[0];\n            out.scripts.emplace(CScriptID(subscript), subscript);\n            output_scripts = MakeScripts(pubkeys, &subscript, out);\n       ",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-797509162,797509162,
achow101,2021-03-12 18:00:34,ACK 05c633e0efaf300aa3353303f77c0a622647a588,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-797659235,797659235,
sipa,2021-03-12 18:58:28,"@Sjors \n\n> Conceptually I find it marginally simpler if you reverse the first and second commit\n\nOk, done.\n\n> With taproot, you might have a root key (`key_exp_index == 0`), one branch with a key `key_exp_index == 2`, and another branch with a 3 key multisig (`key_exp_index  3,4,5`). Is that how it works?\n\nI think you skipped the 1, but otherwise: exactly.",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-797686035,797686035,
achow101,2021-03-15 19:41:25,"re-ACK 35cbef1c483ac9905331f8035d32600e105baab4\n\nOnly change was commit reordering.",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-799700761,799700761,
sipa,2021-03-30 01:19:26,"Rebased, and addressed all comments I think.",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-809832062,809832062,
S3RK,2021-03-30 07:06:39,"reACK 0b188b7\nThe only changes are addressing review comments above. 1) removing unused constructor 2) removing redundant signing provided instance creation 3) simplifying `ToStringSubScriptHelper` signature",https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-809970145,809970145,
Sjors,2021-04-01 11:57:04,re-ACK 0b188b7,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-811856656,811856656,
achow101,2021-04-09 19:46:53,re-ACK 0b188b751f970027c52729e0c223cc9257669322,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-816928671,816928671,
Sjors,2021-04-16 08:50:55,@instagibbs what do you think?,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-821026070,821026070,
instagibbs,2021-04-18 00:32:49,Seems like 3 ACKs is enough? not familiar enough with this code anymore to give a proper ACK,https://github.com/bitcoin/bitcoin/pull/21238#issuecomment-821908342,821908342,
Sjors,2021-03-11 13:15:33,5a044ac64f3f51dc89a772f512d403c7baa12ae2: I'm a bit confused what this new check is doing,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r592350156,592350156,src/script/descriptor.cpp
Sjors,2021-03-11 13:19:35,5a044ac64f3f51dc89a772f512d403c7baa12ae2: why is `m_subdescriptor_args` length 1 a special case?,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r592352945,592352945,src/script/descriptor.cpp
sipa,2021-03-12 03:22:28,Gone.,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r592883824,592883824,src/script/descriptor.cpp
sipa,2021-03-12 03:22:36,Gone.,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r592883851,592883851,src/script/descriptor.cpp
Sjors,2021-03-16 10:04:38,`warning: unused member function 'DescriptorImpl'`,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r595022079,595022079,src/script/descriptor.cpp
S3RK,2021-03-24 08:29:34,Q: why do we need to move the first argument?,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r600265689,600265689,src/script/descriptor.cpp
S3RK,2021-03-24 08:31:39,"nit: I think one instance of `FlatSigningProvider`  is enough, same as you do in `ExpandHelper`",https://github.com/bitcoin/bitcoin/pull/21238#discussion_r600267004,600267004,src/script/descriptor.cpp
S3RK,2021-03-24 08:55:37,"nit: I find it clearer If we keep placing of the first comma inside `ToStringHelper` and do not pass `pos` into `ToStringSubScriptHelper`. Something like:\n\n```cpp\nstd::string subscript;\nif (!ToStringSubScriptHelper(arg, subscript, priv, normalized)) return false;\nif (pos && subscript.size()) ret += "","";\nout = std::move(ret) + std::move(subscript) + "")"";\n```",https://github.com/bitcoin/bitcoin/pull/21238#discussion_r600283226,600283226,src/script/descriptor.cpp
sipa,2021-03-25 07:39:29,"It doesn't matter now apparently, as Merge takes const lvalue references only. But a more efficient variant could be added that takes advantage of inputs that aren't needed anymore.",https://github.com/bitcoin/bitcoin/pull/21238#discussion_r601152614,601152614,src/script/descriptor.cpp
sipa,2021-03-30 01:17:40,Done.,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r603714367,603714367,src/script/descriptor.cpp
sipa,2021-03-30 01:17:52,"Done. In fact, I don't need any at all.",https://github.com/bitcoin/bitcoin/pull/21238#discussion_r603714446,603714446,src/script/descriptor.cpp
sipa,2021-03-30 01:18:01,Fixed.,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r603714472,603714472,src/script/descriptor.cpp
ysangkok,2021-04-20 00:40:29,why is there no new test for this and for `addr()`?,https://github.com/bitcoin/bitcoin/pull/21238#discussion_r616265571,616265571,src/script/descriptor.cpp
