[
  {
    "sha": "b175cb755bd2b62a19dbf27daf07ae5354f9a079",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTc1Y2I3NTViZDJiNjJhMTlkYmYyN2RhZjA3YWU1MzU0ZjlhMDc5",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2016-06-11T14:35:19Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2016-08-31T14:16:05Z"
      },
      "message": "Do not shadow variables.",
      "tree": {
        "sha": "9306e2c794e107d4f48e4978c294716ffa8c4527",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9306e2c794e107d4f48e4978c294716ffa8c4527"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b175cb755bd2b62a19dbf27daf07ae5354f9a079",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b175cb755bd2b62a19dbf27daf07ae5354f9a079",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b175cb755bd2b62a19dbf27daf07ae5354f9a079",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b175cb755bd2b62a19dbf27daf07ae5354f9a079/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c8875d23b37bca9e37e0c387ab5365d4e8758c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c8875d23b37bca9e37e0c387ab5365d4e8758c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c8875d23b37bca9e37e0c387ab5365d4e8758c5"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "a809c9ad640159f5a06459de2a002c53406c141e",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=b175cb755bd2b62a19dbf27daf07ae5354f9a079",
        "patch": "@@ -387,11 +387,11 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                         while (fSuccess) {\n                             CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n                             CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n-                            int ret = db.ReadAtCursor(pcursor, ssKey, ssValue);\n-                            if (ret == DB_NOTFOUND) {\n+                            int ret1 = db.ReadAtCursor(pcursor, ssKey, ssValue);\n+                            if (ret1 == DB_NOTFOUND) {\n                                 pcursor->close();\n                                 break;\n-                            } else if (ret != 0) {\n+                            } else if (ret1 != 0) {\n                                 pcursor->close();\n                                 fSuccess = false;\n                                 break;"
      },
      {
        "sha": "0ba6706baf830e4f63df2ff6e674ddce4e005824",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=b175cb755bd2b62a19dbf27daf07ae5354f9a079",
        "patch": "@@ -1176,10 +1176,10 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n \n         if (fByAccounts)\n         {\n-            tallyitem& item = mapAccountTally[strAccount];\n-            item.nAmount += nAmount;\n-            item.nConf = min(item.nConf, nConf);\n-            item.fIsWatchonly = fIsWatchonly;\n+            tallyitem& _item = mapAccountTally[strAccount];\n+            _item.nAmount += nAmount;\n+            _item.nConf = min(_item.nConf, nConf);\n+            _item.fIsWatchonly = fIsWatchonly;\n         }\n         else\n         {\n@@ -1195,9 +1195,9 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             UniValue transactions(UniValue::VARR);\n             if (it != mapTally.end())\n             {\n-                BOOST_FOREACH(const uint256& item, (*it).second.txids)\n+                BOOST_FOREACH(const uint256& _item, (*it).second.txids)\n                 {\n-                    transactions.push_back(item.GetHex());\n+                    transactions.push_back(_item.GetHex());\n                 }\n             }\n             obj.push_back(Pair(\"txids\", transactions));"
      },
      {
        "sha": "acf980c7845618c3b2fed33bd88f0c0eed16c353",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=b175cb755bd2b62a19dbf27daf07ae5354f9a079",
        "patch": "@@ -217,7 +217,7 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n         // run the 'mtgox' test (see http://blockexplorer.com/tx/29a3efd3ef04f9153d47a990bd7b048a4b2d213daaa5fb8ed670fb85f13bdbcf)\n         // they tried to consolidate 10 50k coins into one 500k coin, and ended up with 50k in change\n         empty_wallet();\n-        for (int i = 0; i < 20; i++)\n+        for (int j = 0; j < 20; j++)\n             add_coin(50000 * COIN);\n \n         BOOST_CHECK( wallet.SelectCoinsMinConf(500000 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n@@ -296,7 +296,7 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n             BOOST_CHECK(!equal_sets(setCoinsRet, setCoinsRet2));\n \n             int fails = 0;\n-            for (int i = 0; i < RANDOM_REPEATS; i++)\n+            for (int j = 0; j < RANDOM_REPEATS; j++)\n             {\n                 // selecting 1 from 100 identical coins depends on the shuffle; this test will fail 1% of the time\n                 // run the test RANDOM_REPEATS times and only complain if all of them fail\n@@ -317,7 +317,7 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n             add_coin(25 * CENT);\n \n             fails = 0;\n-            for (int i = 0; i < RANDOM_REPEATS; i++)\n+            for (int j = 0; j < RANDOM_REPEATS; j++)\n             {\n                 // selecting 1 from 100 identical coins depends on the shuffle; this test will fail 1% of the time\n                 // run the test RANDOM_REPEATS times and only complain if all of them fail"
      },
      {
        "sha": "e9b7addef87524b026b2380a65ca6132f0dde771",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b175cb755bd2b62a19dbf27daf07ae5354f9a079/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=b175cb755bd2b62a19dbf27daf07ae5354f9a079",
        "patch": "@@ -887,8 +887,8 @@ void ThreadFlushWalletDB(const string& strFile)\n                 if (nRefCount == 0)\n                 {\n                     boost::this_thread::interruption_point();\n-                    map<string, int>::iterator mi = bitdb.mapFileUseCount.find(strFile);\n-                    if (mi != bitdb.mapFileUseCount.end())\n+                    map<string, int>::iterator _mi = bitdb.mapFileUseCount.find(strFile);\n+                    if (_mi != bitdb.mapFileUseCount.end())\n                     {\n                         LogPrint(\"db\", \"Flushing %s\\n\", strFile);\n                         nLastFlushed = nWalletDBUpdated;\n@@ -898,7 +898,7 @@ void ThreadFlushWalletDB(const string& strFile)\n                         bitdb.CloseDb(strFile);\n                         bitdb.CheckpointLSN(strFile);\n \n-                        bitdb.mapFileUseCount.erase(mi++);\n+                        bitdb.mapFileUseCount.erase(_mi++);\n                         LogPrint(\"db\", \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n                     }\n                 }"
      }
    ]
  }
]