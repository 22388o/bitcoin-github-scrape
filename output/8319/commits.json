[
  {
    "sha": "0dd8cb3fbe86ab301c68b3167da8fa60772b216a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGQ4Y2IzZmJlODZhYjMwMWM2OGIzMTY3ZGE4ZmE2MDc3MmIyMTZh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-07-08T16:29:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-08-20T08:33:47Z"
      },
      "message": "[qa] wallet*.py: Check for salvagewallet regressions",
      "tree": {
        "sha": "ece5914d7f01927024a37403e1c54733ee6e5a69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ece5914d7f01927024a37403e1c54733ee6e5a69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dd8cb3fbe86ab301c68b3167da8fa60772b216a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dd8cb3fbe86ab301c68b3167da8fa60772b216a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0dd8cb3fbe86ab301c68b3167da8fa60772b216a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dd8cb3fbe86ab301c68b3167da8fa60772b216a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2468292a03539c5b46220db15078f81915006915",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2468292a03539c5b46220db15078f81915006915",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2468292a03539c5b46220db15078f81915006915"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d3b88f6b58c3d7533c54efab42b21bf06e06660d",
        "filename": "qa/rpc-tests/wallet-hd.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0dd8cb3fbe86ab301c68b3167da8fa60772b216a/qa/rpc-tests/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0dd8cb3fbe86ab301c68b3167da8fa60772b216a/qa/rpc-tests/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-hd.py?ref=0dd8cb3fbe86ab301c68b3167da8fa60772b216a",
        "patch": "@@ -38,6 +38,11 @@ def run_test (self):\n         non_hd_add = self.nodes[0].getnewaddress()\n         self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(non_hd_add))\n \n+        # salvagewallet should be a noop\n+        self.stop_node(1)\n+        self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1] + ['-salvagewallet'])\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n         # This should be enough to keep the master key and the non-HD key \n         self.nodes[1].backupwallet(tmpdir + \"hd.bak\")\n         #self.nodes[1].dumpwallet(tmpdir + \"hd.dump\")"
      },
      {
        "sha": "38a2e74d5c48269d3d0d770660d72c9ceed48cc5",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0dd8cb3fbe86ab301c68b3167da8fa60772b216a/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0dd8cb3fbe86ab301c68b3167da8fa60772b216a/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=0dd8cb3fbe86ab301c68b3167da8fa60772b216a",
        "patch": "@@ -330,7 +330,12 @@ def run_test (self):\n             '-zapwallettxes=2',\n             # disabled until issue is fixed: https://github.com/bitcoin/bitcoin/issues/7463\n             # '-salvagewallet',\n+            # enabled to check for regression: https://github.com/bitcoin/bitcoin/issues/2480\n+            '-salvagewallet',\n         ]\n+        [self.nodes[i].encryptwallet(str(i)) for i in range(3)]\n+        wait_bitcoinds()\n+        self.nodes = start_nodes(3, self.options.tmpdir)\n         for m in maintenance:\n             print(\"check \" + m)\n             stop_nodes(self.nodes)"
      }
    ]
  }
]