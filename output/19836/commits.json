[
  {
    "sha": "cccc7525697e7b8d99b545e34f0f504c78ffdb94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2NjNzUyNTY5N2U3YjhkOTliNTQ1ZTM0ZjBmNTA0Yzc4ZmZkYjk0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-30T08:28:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-30T08:34:59Z"
      },
      "message": "rpc: Properly deserialize txs with witness before signing",
      "tree": {
        "sha": "04a1029a319ddbf399e824f8826ccb230ba0ab87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04a1029a319ddbf399e824f8826ccb230ba0ab87"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cccc7525697e7b8d99b545e34f0f504c78ffdb94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUho2AwAnRPJ88QuRoKl3cytPblhhOP9Mj7BvlRQSz1cmhC1o3fN8QxZHtVcbE4f\nTeVA5JIFxy2po5nkv++AN1aTenkjtY4EUtqDpUq7PtG29gfoifgUC/iD3wg4B+ie\nofBed/2PrqDqkZj2aPAFj+lFH25wUH0BS4eq8nKKgAyaGgngerB7ai8S4hXYxNT7\nowIoPXShUk1rYXV/fYLJEm4HCemNiCGigls6C3NgjwqYTSA0KcVpCdBVplPtRYag\n3QKK8bgzOQ1LTPLKdr4MuVyXXHI7paSi9a7NLg1Y+Uo0gP8axsjYTfafsXHZXQMo\nioBLULO/gFa1eZvq18wLfgxsMSt/6wmZMK/AhgI77slWfqzScDSP8K3G80dYuQo6\nX/zO/+DwyHTwe/RY9Wgpu19z7kRUAP7lCWqEZdOYmgQ+ccNCpB7tFIZoW1aCFne7\nYPc8Kqs0AlAZMN0xO/mmC1nWutw0USSxicKgIJ/Vews7YTnaiZ+4qmd3VJyQpx84\n7hXv6cij\n=HaaE\n-----END PGP SIGNATURE-----",
        "payload": "tree 04a1029a319ddbf399e824f8826ccb230ba0ab87\nparent baf9cedee89f34a391b11240984c27b162bccdba\nauthor MarcoFalke <falke.marco@gmail.com> 1598776122 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1598776499 +0200\n\nrpc: Properly deserialize txs with witness before signing\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cccc7525697e7b8d99b545e34f0f504c78ffdb94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cccc7525697e7b8d99b545e34f0f504c78ffdb94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cccc7525697e7b8d99b545e34f0f504c78ffdb94/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "baf9cedee89f34a391b11240984c27b162bccdba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/baf9cedee89f34a391b11240984c27b162bccdba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/baf9cedee89f34a391b11240984c27b162bccdba"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b0df6ec287d649f5758224caaf6d860d7e6abef1",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cccc7525697e7b8d99b545e34f0f504c78ffdb94/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cccc7525697e7b8d99b545e34f0f504c78ffdb94/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=cccc7525697e7b8d99b545e34f0f504c78ffdb94",
        "patch": "@@ -644,7 +644,7 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     std::vector<CMutableTransaction> txVariants(txs.size());\n \n     for (unsigned int idx = 0; idx < txs.size(); idx++) {\n-        if (!DecodeHexTx(txVariants[idx], txs[idx].get_str(), true)) {\n+        if (!DecodeHexTx(txVariants[idx], txs[idx].get_str())) {\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed for tx %d\", idx));\n         }\n     }\n@@ -766,7 +766,7 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VARR, UniValue::VARR, UniValue::VSTR}, true);\n \n     CMutableTransaction mtx;\n-    if (!DecodeHexTx(mtx, request.params[0].get_str(), true)) {\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     }\n "
      },
      {
        "sha": "6978fc400ad0619456e3cc70c223b6c158604103",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cccc7525697e7b8d99b545e34f0f504c78ffdb94/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cccc7525697e7b8d99b545e34f0f504c78ffdb94/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cccc7525697e7b8d99b545e34f0f504c78ffdb94",
        "patch": "@@ -3229,7 +3229,7 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VARR, UniValue::VSTR}, true);\n \n     CMutableTransaction mtx;\n-    if (!DecodeHexTx(mtx, request.params[0].get_str(), true)) {\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     }\n "
      }
    ]
  },
  {
    "sha": "33330778230961cfbf2a24de36b5877e395cc596",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzMzMDc3ODIzMDk2MWNmYmYyYTI0ZGUzNmI1ODc3ZTM5NWNjNTk2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-13T13:21:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-13T12:57:52Z"
      },
      "message": "rpc: Adjust witness-tx deserialize error message",
      "tree": {
        "sha": "d64f2f2a59a16d02025485e0e976280cf122c79a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d64f2f2a59a16d02025485e0e976280cf122c79a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33330778230961cfbf2a24de36b5877e395cc596",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj2Bwv/QsEcHCMvLtXJWaFbBLNqPkwCHu+vvww7jIyXHXGBnl5Z9/bicsexh8bf\nowK/2NbXwBNtVxAwd2Js5trG6lrF6oA/5fZMQnSU3y/W/u0y9AHNaYWWX86F5QyY\nHM5zCcyjc2S2OBFSI6T7fmhSa3m4QL6tXcd1cOyCD8Xrv3nDfhtfHzdnM9zJRK/Y\nkq81GLF5lLac40gE1mG56UacHbISuDWXj+ocsuLjFTM82qn2qyeMlTY/kUOrpN+e\nIvloDTPvdymOBLEMxMQAUVsbuCcbZJ/GACR1eoE3ur9BbPF085Vk9hy9u+5Zy2vi\n1dKQvruTnv8A3voy9w4LBbbbPyo40rUYFXYFkFecfMzUfs2UtbJxxOYql95sQ5BL\n5m7kFI+4hTSolJZUdKZUlODLJGHdqJNxaJgeSp13LkqOOAwpJP8TrDyI1oaNM3XM\nwdmB7XPTj6bHYkd8KNDFU+CY+32jCzZjYPRAMzNnfapIJiPLlX2afZ86eO86d5m2\nS/2/bsRC\n=gdPA\n-----END PGP SIGNATURE-----",
        "payload": "tree d64f2f2a59a16d02025485e0e976280cf122c79a\nparent cccc7525697e7b8d99b545e34f0f504c78ffdb94\nauthor MarcoFalke <falke.marco@gmail.com> 1602595263 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1602593872 +0200\n\nrpc: Adjust witness-tx deserialize error message\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33330778230961cfbf2a24de36b5877e395cc596",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33330778230961cfbf2a24de36b5877e395cc596",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33330778230961cfbf2a24de36b5877e395cc596/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cccc7525697e7b8d99b545e34f0f504c78ffdb94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cccc7525697e7b8d99b545e34f0f504c78ffdb94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cccc7525697e7b8d99b545e34f0f504c78ffdb94"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 11,
      "deletions": 10
    },
    "files": [
      {
        "sha": "661181850b704038a42016ce8d018a0dc4383f46",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33330778230961cfbf2a24de36b5877e395cc596/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33330778230961cfbf2a24de36b5877e395cc596/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=33330778230961cfbf2a24de36b5877e395cc596",
        "patch": "@@ -346,7 +346,7 @@ static UniValue generateblock(const JSONRPCRequest& request)\n             txs.push_back(MakeTransactionRef(std::move(mtx)));\n \n         } else {\n-            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"Transaction decode failed for %s\", str));\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"Transaction decode failed for %s. Make sure the tx has at least one input.\", str));\n         }\n     }\n "
      },
      {
        "sha": "5354b4a68170c4a729ae9defb0a8c187a3256061",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33330778230961cfbf2a24de36b5877e395cc596/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33330778230961cfbf2a24de36b5877e395cc596/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=33330778230961cfbf2a24de36b5877e395cc596",
        "patch": "@@ -645,7 +645,7 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n \n     for (unsigned int idx = 0; idx < txs.size(); idx++) {\n         if (!DecodeHexTx(txVariants[idx], txs[idx].get_str())) {\n-            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed for tx %d\", idx));\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed for tx %d. Make sure the tx has at least one input.\", idx));\n         }\n     }\n \n@@ -767,7 +767,7 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n \n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n     }\n \n     FillableSigningProvider keystore;\n@@ -831,10 +831,10 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n         UniValueType(), // VNUM or VSTR, checked inside AmountFromValue()\n     });\n \n-    // parse hex string from parameter\n     CMutableTransaction mtx;\n-    if (!DecodeHexTx(mtx, request.params[0].get_str()))\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+    }\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n \n     const CFeeRate max_raw_tx_fee_rate = request.params[1].isNull() ?\n@@ -905,7 +905,7 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n \n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_array()[0].get_str())) {\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n     }\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n     const uint256& tx_hash = tx->GetHash();"
      },
      {
        "sha": "e343ef3bc3e1d42f3ecff70fafc0decf8c6cc864",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33330778230961cfbf2a24de36b5877e395cc596/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33330778230961cfbf2a24de36b5877e395cc596/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=33330778230961cfbf2a24de36b5877e395cc596",
        "patch": "@@ -334,8 +334,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     CWallet* const pwallet = wallet.get();\n \n     CMutableTransaction tx;\n-    if (!DecodeHexTx(tx, request.params[0].get_str()))\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+    if (!DecodeHexTx(tx, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+    }\n     uint256 hashTx = tx.GetHash();\n \n     CDataStream ssMB(ParseHexV(request.params[1], \"proof\"), SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "c5d805399517558c9e0ad15a7e4ff1fb69c995e3",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33330778230961cfbf2a24de36b5877e395cc596/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33330778230961cfbf2a24de36b5877e395cc596/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=33330778230961cfbf2a24de36b5877e395cc596",
        "patch": "@@ -3230,7 +3230,7 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n \n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n-        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n     }\n \n     // Sign the transaction"
      }
    ]
  }
]