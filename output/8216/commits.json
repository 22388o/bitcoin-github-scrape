[
  {
    "sha": "fa8ce3b670dd9376d2c13722670b9cc8012011ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThjZTNiNjcwZGQ5Mzc2ZDJjMTM3MjI2NzBiOWNjODAxMjAxMWNh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-16T17:11:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-17T13:19:02Z"
      },
      "message": "[qa] assert 'changePosition out of bounds'",
      "tree": {
        "sha": "32654ead3a78e3db0cd37d1af7b6e5578b76b7c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32654ead3a78e3db0cd37d1af7b6e5578b76b7c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8ce3b670dd9376d2c13722670b9cc8012011ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8ce3b670dd9376d2c13722670b9cc8012011ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8ce3b670dd9376d2c13722670b9cc8012011ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8ce3b670dd9376d2c13722670b9cc8012011ca/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66db2d62d59817320c9182fc18e75a93b76828ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66db2d62d59817320c9182fc18e75a93b76828ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66db2d62d59817320c9182fc18e75a93b76828ea"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3dfb9e4024f2a27932c0f81f9b73d5cf96fbf5bb",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8ce3b670dd9376d2c13722670b9cc8012011ca/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8ce3b670dd9376d2c13722670b9cc8012011ca/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=fa8ce3b670dd9376d2c13722670b9cc8012011ca",
        "patch": "@@ -247,6 +247,12 @@ def run_test(self):\n         assert_equal(utx['txid'], dec_tx['vin'][0]['txid'])\n \n         change = self.nodes[2].getnewaddress()\n+        try:\n+            rawtxfund = self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': change, 'changePosition': 2})\n+        except JSONRPCException as e:\n+            assert('changePosition out of bounds' == e.error['message'])\n+        else:\n+            assert(False)\n         rawtxfund = self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': change, 'changePosition': 0})\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n         out = dec_tx['vout'][0];"
      }
    ]
  },
  {
    "sha": "fa324653ab7a44a89d6a692ce8f953ded8501e17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTMyNDY1M2FiN2E0NGE4OWQ2YTY5MmNlOGY5NTNkZWQ4NTAxZTE3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-16T16:36:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-17T13:19:11Z"
      },
      "message": "[qa] fundrawtransaction: Create get_unspent()",
      "tree": {
        "sha": "27d7ac64a39e6e027a53fa0b39ab5a5464e15d42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27d7ac64a39e6e027a53fa0b39ab5a5464e15d42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa324653ab7a44a89d6a692ce8f953ded8501e17",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa324653ab7a44a89d6a692ce8f953ded8501e17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa324653ab7a44a89d6a692ce8f953ded8501e17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa324653ab7a44a89d6a692ce8f953ded8501e17/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa8ce3b670dd9376d2c13722670b9cc8012011ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8ce3b670dd9376d2c13722670b9cc8012011ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8ce3b670dd9376d2c13722670b9cc8012011ca"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 19,
      "deletions": 74
    },
    "files": [
      {
        "sha": "eeb8476634fcb99dae9b8d010a30a98d95100b8b",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 19,
        "deletions": 74,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa324653ab7a44a89d6a692ce8f953ded8501e17/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa324653ab7a44a89d6a692ce8f953ded8501e17/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=fa324653ab7a44a89d6a692ce8f953ded8501e17",
        "patch": "@@ -6,7 +6,14 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-# Create one-input, one-output, no-fee transaction:\n+\n+def get_unspent(listunspent, amount):\n+    for utx in listunspent:\n+        if utx['amount'] == amount:\n+            return utx\n+    raise AssertionError('Could not find unspent with amount={}'.format(amount))\n+\n+\n class RawTransactionsTest(BitcoinTestFramework):\n \n     def __init__(self):\n@@ -71,7 +78,7 @@ def run_test(self):\n         rawtxfund = self.nodes[2].fundrawtransaction(rawtx)\n         fee = rawtxfund['fee']\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n-        assert(len(dec_tx['vin']) > 0) #test if we have enought inputs\n+        assert(len(dec_tx['vin']) > 0) #test that we have enough inputs\n \n         ##############################\n         # simple test with two coins #\n@@ -123,14 +130,7 @@ def run_test(self):\n         #########################################################################\n         # test a fundrawtransaction with a VIN greater than the required amount #\n         #########################################################################\n-        utx = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 5.0:\n-                utx = aUtx\n-                break\n-\n-        assert(utx!=False)\n+        utx = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']}]\n         outputs = { self.nodes[0].getnewaddress() : 1.0 }\n@@ -151,14 +151,7 @@ def run_test(self):\n         #####################################################################\n         # test a fundrawtransaction with which will not get a change output #\n         #####################################################################\n-        utx = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 5.0:\n-                utx = aUtx\n-                break\n-\n-        assert(utx!=False)\n+        utx = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']}]\n         outputs = { self.nodes[0].getnewaddress() : Decimal(5.0) - fee - feeTolerance }\n@@ -180,14 +173,7 @@ def run_test(self):\n         ####################################################\n         # test a fundrawtransaction with an invalid option #\n         ####################################################\n-        utx = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 5.0:\n-                utx = aUtx\n-                break\n-\n-        assert_equal(utx!=False, True)\n+        utx = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']} ]\n         outputs = { self.nodes[0].getnewaddress() : Decimal(4.0) }\n@@ -205,14 +191,7 @@ def run_test(self):\n         ############################################################\n         # test a fundrawtransaction with an invalid change address #\n         ############################################################\n-        utx = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 5.0:\n-                utx = aUtx\n-                break\n-\n-        assert_equal(utx!=False, True)\n+        utx = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']} ]\n         outputs = { self.nodes[0].getnewaddress() : Decimal(4.0) }\n@@ -227,18 +206,10 @@ def run_test(self):\n             assert(\"changeAddress must be a valid bitcoin address\" in e.error['message'])\n \n \n-\n         ############################################################\n         # test a fundrawtransaction with a provided change address #\n         ############################################################\n-        utx = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 5.0:\n-                utx = aUtx\n-                break\n-\n-        assert_equal(utx!=False, True)\n+        utx = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']} ]\n         outputs = { self.nodes[0].getnewaddress() : Decimal(4.0) }\n@@ -259,18 +230,10 @@ def run_test(self):\n         assert_equal(change, out['scriptPubKey']['addresses'][0])\n \n \n-\n         #########################################################################\n         # test a fundrawtransaction with a VIN smaller than the required amount #\n         #########################################################################\n-        utx = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 1.0:\n-                utx = aUtx\n-                break\n-\n-        assert(utx!=False)\n+        utx = get_unspent(self.nodes[2].listunspent(), 1)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']}]\n         outputs = { self.nodes[0].getnewaddress() : 1.0 }\n@@ -305,17 +268,8 @@ def run_test(self):\n         ###########################################\n         # test a fundrawtransaction with two VINs #\n         ###########################################\n-        utx  = False\n-        utx2 = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 1.0:\n-                utx = aUtx\n-            if aUtx['amount'] == 5.0:\n-                utx2 = aUtx\n-\n-\n-        assert(utx!=False)\n+        utx = get_unspent(self.nodes[2].listunspent(), 1)\n+        utx2 = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']},{'txid' : utx2['txid'], 'vout' : utx2['vout']} ]\n         outputs = { self.nodes[0].getnewaddress() : 6.0 }\n@@ -347,17 +301,8 @@ def run_test(self):\n         #########################################################\n         # test a fundrawtransaction with two VINs and two vOUTs #\n         #########################################################\n-        utx  = False\n-        utx2 = False\n-        listunspent = self.nodes[2].listunspent()\n-        for aUtx in listunspent:\n-            if aUtx['amount'] == 1.0:\n-                utx = aUtx\n-            if aUtx['amount'] == 5.0:\n-                utx2 = aUtx\n-\n-\n-        assert(utx!=False)\n+        utx = get_unspent(self.nodes[2].listunspent(), 1)\n+        utx2 = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']},{'txid' : utx2['txid'], 'vout' : utx2['vout']} ]\n         outputs = { self.nodes[0].getnewaddress() : 6.0, self.nodes[0].getnewaddress() : 1.0 }"
      }
    ]
  },
  {
    "sha": "fa3b3792522681207b3619edec5f3175be6fc841",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTNiMzc5MjUyMjY4MTIwN2IzNjE5ZWRlYzVmMzE3NWJlNmZjODQx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-09T19:29:18Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-17T13:20:43Z"
      },
      "message": "[qa] pull-tester: Fix assertion and check for run_parallel",
      "tree": {
        "sha": "48081affee2a7f13bf6a19823f6d801faa24e998",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48081affee2a7f13bf6a19823f6d801faa24e998"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3b3792522681207b3619edec5f3175be6fc841",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3b3792522681207b3619edec5f3175be6fc841",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3b3792522681207b3619edec5f3175be6fc841",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3b3792522681207b3619edec5f3175be6fc841/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa324653ab7a44a89d6a692ce8f953ded8501e17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa324653ab7a44a89d6a692ce8f953ded8501e17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa324653ab7a44a89d6a692ce8f953ded8501e17"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "98823085034afbbf95e067b1db28b145010d0ce3",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3b3792522681207b3619edec5f3175be6fc841/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3b3792522681207b3619edec5f3175be6fc841/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fa3b3792522681207b3619edec5f3175be6fc841",
        "patch": "@@ -191,7 +191,7 @@ def runtests():\n     if coverage:\n         flags.append(coverage.flag)\n \n-    if len(test_list) > 1:\n+    if len(test_list) > 1 and run_parallel > 1:\n         # Populate cache\n         subprocess.check_output([RPC_TESTS_DIR + 'create_cache.py'] + flags)\n \n@@ -251,7 +251,7 @@ def get_next(self):\n                                                stdout=subprocess.PIPE,\n                                                stderr=subprocess.PIPE)))\n         if not self.jobs:\n-            raise IndexError('%s from empty list' % __name__)\n+            raise IndexError('pop from empty list')\n         while True:\n             # Return first proc that finishes\n             time.sleep(.5)"
      }
    ]
  },
  {
    "sha": "fa58f94ff7f097260ebee791008dab368c7ac318",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTU4Zjk0ZmY3ZjA5NzI2MGViZWU3OTEwMDhkYWIzNjhjN2FjMzE4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-20T09:21:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-20T09:19:34Z"
      },
      "message": "[qa] pull-tester: Start longest test first",
      "tree": {
        "sha": "ade1183c822761958ad4cb662629493e433ace02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ade1183c822761958ad4cb662629493e433ace02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa58f94ff7f097260ebee791008dab368c7ac318",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa58f94ff7f097260ebee791008dab368c7ac318",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa58f94ff7f097260ebee791008dab368c7ac318",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa58f94ff7f097260ebee791008dab368c7ac318/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa3b3792522681207b3619edec5f3175be6fc841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3b3792522681207b3619edec5f3175be6fc841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3b3792522681207b3619edec5f3175be6fc841"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6c0ed4510f103fab09a5064e5bae97b1e9ad1f7a",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa58f94ff7f097260ebee791008dab368c7ac318/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa58f94ff7f097260ebee791008dab368c7ac318/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fa58f94ff7f097260ebee791008dab368c7ac318",
        "patch": "@@ -101,6 +101,8 @@\n \n #Tests\n testScripts = [\n+    # longest test should go first, to favor running tests in parallel\n+    'p2p-fullblocktest.py',\n     'walletbackup.py',\n     'bip68-112-113-p2p.py',\n     'wallet.py',\n@@ -125,7 +127,6 @@\n     'nodehandling.py',\n     'reindex.py',\n     'decodescript.py',\n-    'p2p-fullblocktest.py',\n     'blockchain.py',\n     'disablewallet.py',\n     'sendheaders.py',"
      }
    ]
  }
]