schildbach,2014-09-08T20:00:49Z,Thanks sipa!\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-54878083,54878083,
schildbach,2014-09-08T20:20:53Z,Misleading title: Actually it's the script_*.json validation flags.\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-54880850,54880850,
sipa,2014-09-08T20:39:21Z,"@schildbach Thanks, fixed.\n",https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-54883481,54883481,
BitcoinPullTester,2014-09-08T21:07:55Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4876_6022b5dc6ba930797db46e00426923b53d6594b3/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-54887512,54887512,
gavinandresen,2014-09-08T21:12:36Z,ACK.\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-54888112,54888112,
petertodd,2014-09-09T15:30:47Z,ut ACK.\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-54987077,54987077,
schildbach,2014-09-10T20:04:21Z,I have prepared the code for bitcoinj. I'm now waiting for this PR to be merged.\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-55174396,55174396,
jgarzik,2014-09-12T15:09:38Z,Concept ACK.  I did not verify that any tests were added or removed.\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-55416393,55416393,
schildbach,2014-09-19T07:51:00Z,Current state of progress on bitcoinj master:\n- proper JSON parser used (it was just doing some String.split() and regexp operations)\n- all verifyFlags are parsed\n- P2SH and NULLDUMMY are implemented\n- STRICTENC is _not_ implemented (the tests pass anyway -- is this expected?)\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-56147113,56147113,
petertodd,2014-09-19T09:22:28Z,> @schildbach STRICTENC is not implemented (the tests pass anyway -- is this expected?)\n\nThat's expected - the STRICTENC tests are in a separate file right now and need to be put in the .json testcases.\n,https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-56155240,56155240,
schildbach,2014-09-19T09:41:19Z,"Thanks, What's that file called, and (when) will they be put into the .json testcases?\n",https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-56157017,56157017,
petertodd,2014-09-19T11:00:59Z,"They're in canonical_tests.cpp\n\nWhen? When someone does the work. :) I'm in no rush myself, because I've been told python-bitcoinlib doesn't even reliably spit out canonical signatures w/ the EVEN/ODD or whatever it is rule; I'm in no rush to delve into OpenSSL's docs and figure out how to fix that.\n",https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-56163558,56163558,
sipa,2014-09-19T16:35:31Z,"@schildbach I'll work on that.\n\n@petertodd Don't confuse the strict DER (""canonical encoding"") requirement with the low-S rule (which is just there to break malleability). The latter (the S value in the signature needs to be less than half of the curve's order; the exact semantics are in BIP62) is Bitcoin specific, and not something you can ask OpenSSL to do, unfortunately. It's not hard to fix ",https://github.com/bitcoin/bitcoin/pull/4876#issuecomment-56201641,56201641,
