[
  {
    "sha": "fa28a618972911239a119248ab1194702a5c36d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI4YTYxODk3MjkxMTIzOWExMTkyNDhhYjExOTQ3MDJhNWMzNmQ4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T16:19:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-09T11:07:17Z"
      },
      "message": "test: Add smoke test to check that wallets are flushed by default",
      "tree": {
        "sha": "ef19680f4d291690862f06e1e66cb74bec64e4fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef19680f4d291690862f06e1e66cb74bec64e4fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa28a618972911239a119248ab1194702a5c36d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhFXQwAweLS0rHGCH/uHBG9d2j54y8jq1Yy5CCr6qCo46WHBGhV51yUEnUPl8cx\nLyKjXeRfKsG1Rd7CqVMYyXF1GCoUVYUGKq3LXQjfzHuFiCSntbcsW/TZbTtsF41C\ndgiAHMw0D9NDnm3nH7lE6aqv/skn37pYL6UDO92OQT0IejDzKMbu4vnqdwllRSop\ntgCgoYLVHjH4C4HiG3ENsWAe4i8rm/49dghy5pcNYodj5q4W1ysMCEkVrwhNkSuJ\nf/VGfyPyttesjvOBXvBUSnrqcATnmg8Faa3/qZuibR5X25Dc+e4PFNJj5uitWbZ6\nMmMHyHES6vevu4H6+WR1Z+fwp0UtFmIVSfeedc4jQjYbCWKfPfbZ7/nFedBKAEhg\nCpmrqi2ie/2UBUI+hd7vo/SN5l8It5tcWTJac74BIp5azy9qpiCCwTHACyB3ac4O\nnI1GtijSRdbgQXq3JEZ9RlDUEpGJmr+gtGYarQWBuyZIDTINtatWWf5Cfau5CrXe\n8HAnM4xu\n=5T5B\n-----END PGP SIGNATURE-----",
        "payload": "tree ef19680f4d291690862f06e1e66cb74bec64e4fa\nparent c4a44186d816716f5918fd23464a51033f208b71\nauthor MarcoFalke <falke.marco@gmail.com> 1589213996 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1594292837 +0200\n\ntest: Add smoke test to check that wallets are flushed by default\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa28a618972911239a119248ab1194702a5c36d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa28a618972911239a119248ab1194702a5c36d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa28a618972911239a119248ab1194702a5c36d8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4a44186d816716f5918fd23464a51033f208b71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4a44186d816716f5918fd23464a51033f208b71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a44186d816716f5918fd23464a51033f208b71"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6bfb46882390276029e9a57b371d06ca4c0c56ad",
        "filename": "test/functional/wallet_dump.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa28a618972911239a119248ab1194702a5c36d8/test/functional/wallet_dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa28a618972911239a119248ab1194702a5c36d8/test/functional/wallet_dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_dump.py?ref=fa28a618972911239a119248ab1194702a5c36d8",
        "patch": "@@ -202,5 +202,10 @@ def run_test(self):\n         result = self.nodes[0].getaddressinfo(multisig_addr)\n         assert result['ismine']\n \n+        self.log.info('Check that wallet is flushed')\n+        with self.nodes[0].assert_debug_log(['Flushing wallet.dat'], timeout=20):\n+            self.nodes[0].getnewaddress()\n+\n+\n if __name__ == '__main__':\n     WalletDumpTest().main()"
      }
    ]
  },
  {
    "sha": "fa6c186436337c8ed7d9e1ab065377f8cda5c0b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTZjMTg2NDM2MzM3YzhlZDdkOWUxYWIwNjUzNzdmOGNkYTVjMGI3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T15:33:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-09T11:07:35Z"
      },
      "message": "gui tests: Limit life-time of dummy testing setup\n\nIts only purpose is to create a directory. So instead of keeping it\nalive, use it only to get the path of the directory and then create it\nexplicitly.",
      "tree": {
        "sha": "26203f1241d9d6e7c00bc90cdc20e424ebdaf584",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26203f1241d9d6e7c00bc90cdc20e424ebdaf584"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUizawwAr+TpMKcoB422QTHECw7pqIYkxVF7OAuK6kwE/4W8zmHPq2rQfmB6Ljvk\njwFyW31uftt5fgvVZxvkOJOQbzg3o+vAB4nemVw6MS5rD+iLjSMQ6A/TyHihnxDZ\n0TB3IR6AOqcD4mOP4MyG/TWvhF5H9BQGFhDCfYOXyN1b79ruLvjT19xgznAeVyZH\nuxS0ZLCU6biHYv4jyn/xNwJb9xsmDOte6ZlUY2mgViIw+b/DmBEeOGaAafBIR/i+\n4WQTx2QyGzVqysPBfdljBdzOHInsfQcdR8FK/NbQuZBWgPNcL17Pux4LBvwlih9/\nzBOOMX8qLB5x17fDUKIbgynhaefIg29uCSY/+V4IYa7Mbz7C3Le1UToZjNpmckfg\nRBavMWvBrs18m7ZjnCUqPe4V9v+9m0yjbdVFVakKCCX9F5qmchNmbPO06f4Q2sv8\nD8bURuZ+e6qeWCM8RIV7Tq8JzsZAF/gYlj0r3QSxRkPHYXwkG1ZZN/CXrpR20mS/\nshduvJwJ\n=QEQ1\n-----END PGP SIGNATURE-----",
        "payload": "tree 26203f1241d9d6e7c00bc90cdc20e424ebdaf584\nparent fa28a618972911239a119248ab1194702a5c36d8\nauthor MarcoFalke <falke.marco@gmail.com> 1589211226 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1594292855 +0200\n\ngui tests: Limit life-time of dummy testing setup\n\nIts only purpose is to create a directory. So instead of keeping it\nalive, use it only to get the path of the directory and then create it\nexplicitly.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa28a618972911239a119248ab1194702a5c36d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa28a618972911239a119248ab1194702a5c36d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa28a618972911239a119248ab1194702a5c36d8"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "443e2d047d4653bcc6f1ec8209636c3dfe803c36",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=fa6c186436337c8ed7d9e1ab065377f8cda5c0b7",
        "patch": "@@ -62,9 +62,10 @@ void AppTests::appTests()\n     }\n #endif\n \n-    BasicTestingSetup test{CBaseChainParams::REGTEST}; // Create a temp data directory to backup the gui settings to\n-    ECC_Stop(); // Already started by the common test setup, so stop it to avoid interference\n-    LogInstance().DisconnectTestLogger();\n+    fs::create_directories([] {\n+        BasicTestingSetup test{CBaseChainParams::REGTEST}; // Create a temp data directory to backup the gui settings to\n+        return GetDataDir() / \"blocks\";\n+    }());\n \n     m_app.parameterSetup();\n     m_app.createOptionsModel(true /* reset settings */);\n@@ -80,6 +81,7 @@ void AppTests::appTests()\n     m_app.exec();\n \n     // Reset global state to avoid interfering with later tests.\n+    LogInstance().DisconnectTestLogger();\n     AbortShutdown();\n     UnloadBlockIndex();\n     WITH_LOCK(::cs_main, g_chainman.Reset());"
      }
    ]
  },
  {
    "sha": "faf8401c195f52470d1ca6e2c94cb3820e57ee41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY4NDAxYzE5NWY1MjQ3MGQxY2E2ZTJjOTRjYjM4MjBlNTdlZTQx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T15:40:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-09T11:07:37Z"
      },
      "message": "wallet: Pass unused args to StartWallets\n\nThis refactor does not change behavior",
      "tree": {
        "sha": "910f9d852aa3d2b8ea6dc5434f791b93096ed036",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/910f9d852aa3d2b8ea6dc5434f791b93096ed036"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf8401c195f52470d1ca6e2c94cb3820e57ee41",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi/mgv/ZVLIyw7zDC3fJFNY61+Pscx8OEZGBMJSGFg/A4iijKFTaYzD24/BxuZU\ncTiY4EqZEI7UmCjCtIcAbtnktKJ/ACdc/Uqb4k22cwNA7byW+nRpNem2Pzo6dX4N\n+4HafRxBBJpJbqM4l7PoV05/ew2pW5/6bTrY+RHap//ghA7jVvVpo9+AvUQX5iEq\nJrDhgxPO2IRhdSHDUZgdCETTT4WlhjN24XQ4BQfmVH1CMvTCFgTHIWIzW/36gI03\n5aitn03tWMReGdOu4Ewar/yrrR0g/XByZyMrIm0kNq9Us18mFjp/qUDA57iJc1sa\nYfvFetRUQjRdcGjkWlziMCB7gnM+eBBu9GNUsadWjmok49jLmDQ7yevDUyJKQVNu\nnA4y3vw3D3K316xP7o7RK8aWgo0/nHMgBqZljApboYm0PVrNxMd/SwVQbU8OQRZz\n9zdmy8tD9blFFHAiYSzoADoFLLFh/8ls0PmvhbSe+byRoA2/TxBGHZf3CrBjMFUb\nKVbS+KCD\n=RWVy\n-----END PGP SIGNATURE-----",
        "payload": "tree 910f9d852aa3d2b8ea6dc5434f791b93096ed036\nparent fa6c186436337c8ed7d9e1ab065377f8cda5c0b7\nauthor MarcoFalke <falke.marco@gmail.com> 1589211621 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1594292857 +0200\n\nwallet: Pass unused args to StartWallets\n\nThis refactor does not change behavior\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf8401c195f52470d1ca6e2c94cb3820e57ee41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf8401c195f52470d1ca6e2c94cb3820e57ee41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf8401c195f52470d1ca6e2c94cb3820e57ee41/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa6c186436337c8ed7d9e1ab065377f8cda5c0b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6c186436337c8ed7d9e1ab065377f8cda5c0b7"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 29,
      "deletions": 18
    },
    "files": [
      {
        "sha": "bbeb0fa801357f27ffa322d47e3ec4989a77f1df",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -15,6 +15,7 @@\n #include <string>\n #include <vector>\n \n+class ArgsManager;\n class CBlock;\n class CFeeRate;\n class CRPCCommand;\n@@ -322,7 +323,7 @@ std::unique_ptr<Chain> MakeChain(NodeContext& node);\n //! analysis, or fee estimation. These clients need to expose their own\n //! MakeXXXClient functions returning their implementations of the ChainClient\n //! interface.\n-std::unique_ptr<ChainClient> MakeWalletClient(Chain& chain, std::vector<std::string> wallet_filenames);\n+std::unique_ptr<ChainClient> MakeWalletClient(Chain& chain, ArgsManager& args, std::vector<std::string> wallet_filenames);\n \n } // namespace interfaces\n "
      },
      {
        "sha": "7fd24425cf1aa5920941f6142c711a6c4bd483a4",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -483,10 +483,11 @@ class WalletImpl : public Wallet\n class WalletClientImpl : public ChainClient\n {\n public:\n-    WalletClientImpl(Chain& chain, std::vector<std::string> wallet_filenames)\n+    WalletClientImpl(Chain& chain, ArgsManager& args, std::vector<std::string> wallet_filenames)\n         : m_wallet_filenames(std::move(wallet_filenames))\n     {\n         m_context.chain = &chain;\n+        m_context.args = &args;\n     }\n     void registerRpcs() override\n     {\n@@ -499,7 +500,7 @@ class WalletClientImpl : public ChainClient\n     }\n     bool verify() override { return VerifyWallets(*m_context.chain, m_wallet_filenames); }\n     bool load() override { return LoadWallets(*m_context.chain, m_wallet_filenames); }\n-    void start(CScheduler& scheduler) override { return StartWallets(scheduler); }\n+    void start(CScheduler& scheduler) override { return StartWallets(scheduler, *Assert(m_context.args)); }\n     void flush() override { return FlushWallets(); }\n     void stop() override { return StopWallets(); }\n     void setMockTime(int64_t time) override { return SetMockTime(time); }\n@@ -514,7 +515,7 @@ class WalletClientImpl : public ChainClient\n     ~WalletClientImpl() override { UnloadWallets(); }\n \n     WalletContext m_context;\n-    std::vector<std::string> m_wallet_filenames;\n+    const std::vector<std::string> m_wallet_filenames;\n     std::vector<std::unique_ptr<Handler>> m_rpc_handlers;\n     std::list<CRPCCommand> m_rpc_commands;\n };\n@@ -523,9 +524,9 @@ class WalletClientImpl : public ChainClient\n \n std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return wallet ? MakeUnique<WalletImpl>(wallet) : nullptr; }\n \n-std::unique_ptr<ChainClient> MakeWalletClient(Chain& chain, std::vector<std::string> wallet_filenames)\n+std::unique_ptr<ChainClient> MakeWalletClient(Chain& chain, ArgsManager& args, std::vector<std::string> wallet_filenames)\n {\n-    return MakeUnique<WalletClientImpl>(chain, std::move(wallet_filenames));\n+    return MakeUnique<WalletClientImpl>(chain, args, std::move(wallet_filenames));\n }\n \n } // namespace interfaces"
      },
      {
        "sha": "12efca250360d7a43b8d09a3c2a466f512a8c277",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -40,7 +40,7 @@ Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin);\n const std::function<void(const std::string&)> G_TEST_LOG_FUN{};\n \n // This is all you need to run all the tests\n-int main(int argc, char *argv[])\n+int main(int argc, char* argv[])\n {\n     // Initialize persistent globals with the testing setup state for sanity.\n     // E.g. -datadir in gArgs is set to a temp directory dummy value (instead\n@@ -70,6 +70,8 @@ int main(int argc, char *argv[])\n     BitcoinApplication app(*node);\n     app.setApplicationName(\"Bitcoin-Qt-test\");\n \n+    node->setupServerArgs();            // Make gArgs available in the NodeContext\n+    node->context()->args->ClearArgs(); // Clear added args again\n     AppTests app_tests(app);\n     if (QTest::qExec(&app_tests) != 0) {\n         fInvalid = true;"
      },
      {
        "sha": "a83591154f0c30ae70a34b84e5110539786ae1b8",
        "filename": "src/wallet/context.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/context.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/context.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/context.h?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_WALLET_CONTEXT_H\n #define BITCOIN_WALLET_CONTEXT_H\n \n+class ArgsManager;\n namespace interfaces {\n class Chain;\n } // namespace interfaces\n@@ -21,6 +22,7 @@ class Chain;\n //! behavior.\n struct WalletContext {\n     interfaces::Chain* chain{nullptr};\n+    ArgsManager* args{nullptr};\n \n     //! Declare default constructor and destructor that are not inline, so code\n     //! instantiating the WalletContext struct doesn't need to #include class"
      },
      {
        "sha": "781920755cc64a16aed4fd457133420d6916d7e1",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -9,16 +9,17 @@\n #include <node/context.h>\n #include <node/ui_interface.h>\n #include <outputtype.h>\n+#include <util/check.h>\n #include <util/moneystr.h>\n #include <util/system.h>\n #include <util/translation.h>\n #include <wallet/coincontrol.h>\n #include <wallet/wallet.h>\n #include <walletinitinterface.h>\n \n-class WalletInit : public WalletInitInterface {\n+class WalletInit : public WalletInitInterface\n+{\n public:\n-\n     //! Was the wallet component compiled in.\n     bool HasWalletSupport() const override {return true;}\n \n@@ -112,10 +113,11 @@ bool WalletInit::ParameterInteraction() const\n \n void WalletInit::Construct(NodeContext& node) const\n {\n-    if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n+    ArgsManager& args = *Assert(node.args);\n+    if (args.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n         LogPrintf(\"Wallet disabled!\\n\");\n         return;\n     }\n-    gArgs.SoftSetArg(\"-wallet\", \"\");\n-    node.chain_clients.emplace_back(interfaces::MakeWalletClient(*node.chain, gArgs.GetArgs(\"-wallet\")));\n+    args.SoftSetArg(\"-wallet\", \"\");\n+    node.chain_clients.emplace_back(interfaces::MakeWalletClient(*node.chain, args, args.GetArgs(\"-wallet\")));\n }"
      },
      {
        "sha": "66fc98eaafedb36b4f8789c95bf500f312aaf152",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -82,7 +82,7 @@ bool LoadWallets(interfaces::Chain& chain, const std::vector<std::string>& walle\n     }\n }\n \n-void StartWallets(CScheduler& scheduler)\n+void StartWallets(CScheduler& scheduler, const ArgsManager& args)\n {\n     for (const std::shared_ptr<CWallet>& pwallet : GetWallets()) {\n         pwallet->postInitProcess();"
      },
      {
        "sha": "ff4f5b4b23da604f65af16fe64df6df4fabcbf87",
        "filename": "src/wallet/load.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/load.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/load.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.h?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -9,6 +9,7 @@\n #include <string>\n #include <vector>\n \n+class ArgsManager;\n class CScheduler;\n \n namespace interfaces {\n@@ -22,7 +23,7 @@ bool VerifyWallets(interfaces::Chain& chain, const std::vector<std::string>& wal\n bool LoadWallets(interfaces::Chain& chain, const std::vector<std::string>& wallet_files);\n \n //! Complete startup of wallets.\n-void StartWallets(CScheduler& scheduler);\n+void StartWallets(CScheduler& scheduler, const ArgsManager& args);\n \n //! Flush all wallets in preparation for shutdown.\n void FlushWallets();"
      },
      {
        "sha": "35bd96567322ba5644b240b365b9dc1492e98f60",
        "filename": "src/wallet/test/init_test_fixture.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/test/init_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/test/init_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/init_test_fixture.cpp?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -3,13 +3,14 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <fs.h>\n+#include <util/check.h>\n #include <util/system.h>\n \n #include <wallet/test/init_test_fixture.h>\n \n-InitWalletDirTestingSetup::InitWalletDirTestingSetup(const std::string& chainName): BasicTestingSetup(chainName)\n+InitWalletDirTestingSetup::InitWalletDirTestingSetup(const std::string& chainName) : BasicTestingSetup(chainName)\n {\n-    m_chain_client = MakeWalletClient(*m_chain, {});\n+    m_chain_client = MakeWalletClient(*m_chain, *Assert(m_node.args), {});\n \n     std::string sep;\n     sep += fs::path::preferred_separator;"
      },
      {
        "sha": "99d7cfe921f849d0c381d5529d775990b6beeca3",
        "filename": "src/wallet/test/wallet_test_fixture.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/test/wallet_test_fixture.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf8401c195f52470d1ca6e2c94cb3820e57ee41/src/wallet/test/wallet_test_fixture.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_test_fixture.h?ref=faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "patch": "@@ -10,17 +10,18 @@\n #include <interfaces/chain.h>\n #include <interfaces/wallet.h>\n #include <node/context.h>\n+#include <util/check.h>\n #include <wallet/wallet.h>\n \n #include <memory>\n \n /** Testing setup and teardown for wallet.\n  */\n-struct WalletTestingSetup: public TestingSetup {\n+struct WalletTestingSetup : public TestingSetup {\n     explicit WalletTestingSetup(const std::string& chainName = CBaseChainParams::MAIN);\n \n     std::unique_ptr<interfaces::Chain> m_chain = interfaces::MakeChain(m_node);\n-    std::unique_ptr<interfaces::ChainClient> m_chain_client = interfaces::MakeWalletClient(*m_chain, {});\n+    std::unique_ptr<interfaces::ChainClient> m_chain_client = interfaces::MakeWalletClient(*m_chain, *Assert(m_node.args), {});\n     CWallet m_wallet;\n     std::unique_ptr<interfaces::Handler> m_chain_notifications_handler;\n };"
      }
    ]
  },
  {
    "sha": "fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdiMTY0ZDYyZDlmMTJlOWNkYTc5YmYyOGJmNDM1YWNmMmQxZTM4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T15:49:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-09T11:07:41Z"
      },
      "message": "wallet: Never schedule MaybeCompactWalletDB when -flushwallet is off",
      "tree": {
        "sha": "723d4f7a00cb33b2d132385572cd83453b123203",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/723d4f7a00cb33b2d132385572cd83453b123203"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiU0wv/fRNCbPZ3P8DCDCb2XDiIJrGaMCWknuOG2jAs1B52/gbsGOfG/Vf/ptIM\niiO4hVpjyQ/RtV5FS2Lbik9/cfoQ8wMANVrzuIAVF4fMiNddt5BWHAcFdspmKlsl\nRfNiD/G7Fxv0qdaX0gvbp8f/Q/98O8j8mmFq5O4XEQzVZko/RDCjwj3wPpaBPOPP\nZwbfl0J3BWxt2MqS8kvzA7oYjoKJsw4BxofXSqNl0KC8nAl1Al5/Q873CGBql5cs\n3pTsqHE9X0SVPokT0uX8WwQhfTG+QSnz2Ow9PhstSe0HxkTZwAPBMJ060D8fYitc\n/gVyu+lBLPHU3tsI5vwPbu12Rgxe7fWymYI6bHmnZUrv3Owcf7bEIUYpRdEzg1j+\n6nBUFOLb2TUA1sMRDwwtAPsFw5SIWOktvIT/xz8HGUSsV0CPeUEdHmsZg4todw4g\nNe0rRfiAeKvKB934T2xBwi71xl++nKCXRthsxY6QRlStGOu/U5Q7BvhLSHnJuKBf\nEfSoacTG\n=KqVD\n-----END PGP SIGNATURE-----",
        "payload": "tree 723d4f7a00cb33b2d132385572cd83453b123203\nparent faf8401c195f52470d1ca6e2c94cb3820e57ee41\nauthor MarcoFalke <falke.marco@gmail.com> 1589212145 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1594292861 +0200\n\nwallet: Never schedule MaybeCompactWalletDB when -flushwallet is off\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf8401c195f52470d1ca6e2c94cb3820e57ee41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faf8401c195f52470d1ca6e2c94cb3820e57ee41"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "c2818a41e702f3794e78b66833180730110cb2ae",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
        "patch": "@@ -11,6 +11,7 @@\n #include <util/system.h>\n #include <util/translation.h>\n #include <wallet/wallet.h>\n+#include <wallet/walletdb.h>\n \n bool VerifyWallets(interfaces::Chain& chain, const std::vector<std::string>& wallet_files)\n {\n@@ -89,7 +90,9 @@ void StartWallets(CScheduler& scheduler, const ArgsManager& args)\n     }\n \n     // Schedule periodic wallet flushes and tx rebroadcasts\n-    scheduler.scheduleEvery(MaybeCompactWalletDB, std::chrono::milliseconds{500});\n+    if (args.GetBoolArg(\"-flushwallet\", DEFAULT_FLUSHWALLET)) {\n+        scheduler.scheduleEvery(MaybeCompactWalletDB, std::chrono::milliseconds{500});\n+    }\n     scheduler.scheduleEvery(MaybeResendWalletTxs, std::chrono::milliseconds{1000});\n }\n "
      },
      {
        "sha": "98ccc3198aff1062b36c4066a414ae48c63ccb24",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
        "patch": "@@ -952,9 +952,6 @@ void MaybeCompactWalletDB()\n     if (fOneThread.exchange(true)) {\n         return;\n     }\n-    if (!gArgs.GetBoolArg(\"-flushwallet\", DEFAULT_FLUSHWALLET)) {\n-        return;\n-    }\n \n     for (const std::shared_ptr<CWallet>& pwallet : GetWallets()) {\n         WalletDatabase& dbh = pwallet->GetDBHandle();"
      }
    ]
  },
  {
    "sha": "fa73493930e35850e877725167dc9d42e47015c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTczNDkzOTMwZTM1ODUwZTg3NzcyNTE2N2RjOWQ0MmU0NzAxNWM4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-09T11:21:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-09T11:08:42Z"
      },
      "message": "refactor: Use C++11 range-based for loop",
      "tree": {
        "sha": "c10ab665926e406678e16515f93c566f95a002fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c10ab665926e406678e16515f93c566f95a002fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa73493930e35850e877725167dc9d42e47015c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh/swv+Jb7SVD/wJ+310amk9l8+UxRPXI3KPF4wTbgtLtjIUYvRidsLeBJX8N/G\nkuOn2dS0m715gYyWUVUmdvQOq5udAxyFB0CFnXUF7XPP3lPCGXG2Tz0vlDPHjfiq\nWuBEkkiyyiWoQV/DIXrx3ZIwqWafrkkc3p4oAVz1+liwc11ZlPSZkcDMA5w0UiVW\n6jESmuRVmE9x367/ND66LRnW2gFqlj81rnR3wNN9hFTB4Ac2nCMJyl21b20ZV1gW\nSuIV6ONZY27rzd+iWBgEdbMNISdFvLMpWORn7BG7rBTNKkqrid5RODkP/A1C2eg9\nFiIgHy7LAD2dPj87KKkN1jBXv5K/1m8kicPFFLRlMNIjISKCXa9+0Yayqda34Anb\nnh6Do8BW0BCsxDMuHo0RAf0Sl56Zf6SE5emZJBWL/jikerNQiwksDkUoTi9ltfFW\ngAc5f5uF2Eux5mB++Egoh3sMOoE/qpb20WBNf2B3AEOVSjIO7KmGpISxdwv7g7YJ\nZZzamlP9\n=QSWC\n-----END PGP SIGNATURE-----",
        "payload": "tree c10ab665926e406678e16515f93c566f95a002fa\nparent fa7b164d62d9f12e9cda79bf28bf435acf2d1e38\nauthor MarcoFalke <falke.marco@gmail.com> 1594293702 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1594292922 +0200\n\nrefactor: Use C++11 range-based for loop\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa73493930e35850e877725167dc9d42e47015c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa73493930e35850e877725167dc9d42e47015c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa73493930e35850e877725167dc9d42e47015c8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7b164d62d9f12e9cda79bf28bf435acf2d1e38"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "54a9aa34e0f83a47af08db003877c90480d207f2",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa73493930e35850e877725167dc9d42e47015c8/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa73493930e35850e877725167dc9d42e47015c8/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=fa73493930e35850e877725167dc9d42e47015c8",
        "patch": "@@ -623,8 +623,8 @@ bool BerkeleyDatabase::PeriodicFlush()\n     if (!lockDb) return false;\n \n     // Don't flush if any databases are in use\n-    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n-        if ((*it).second > 0) return false;\n+    for (const auto& use_count : env->mapFileUseCount) {\n+        if (use_count.second > 0) return false;\n     }\n \n     // Don't flush if there haven't been any batch writes for this database."
      }
    ]
  }
]