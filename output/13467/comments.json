[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397422560",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-397422560",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 397422560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQyMjU2MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T20:08:20Z",
    "updated_at": "2018-06-30T11:47:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13054 (tests: Enable automatic detection of undefined names in Python tests scripts. Remove wildcard imports. by practicalswift)\n* #12360 (Bury bip9 deployments by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397422560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/399198598",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-399198598",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 399198598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTE5ODU5OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T18:23:24Z",
    "updated_at": "2018-06-21T18:23:24Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, but let's try not to overshoot the target by pleasing some obscure style rules that contradict our style guide.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/399198598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/399216947",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-399216947",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 399216947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTIxNjk0Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T19:30:01Z",
    "updated_at": "2018-06-21T19:30:01Z",
    "author_association": "MEMBER",
    "body": "> Concept ACK, but let's try not to overshoot the target by pleasing some obscure style rules that contradict our style guide.\r\n\r\nSorry - will address your comments. Was travelling last week.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/399216947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/399255062",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-399255062",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 399255062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTI1NTA2Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T21:51:51Z",
    "updated_at": "2018-06-21T21:51:51Z",
    "author_association": "MEMBER",
    "body": "Comments addressed. Thanks for the review @MarcoFalke !",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/399255062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/401455598",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-401455598",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 401455598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQ1NTU5OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T19:45:52Z",
    "updated_at": "2018-06-29T19:45:52Z",
    "author_association": "MEMBER",
    "body": "rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/401455598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/402076505",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-402076505",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 402076505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjA3NjUwNQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-03T09:29:58Z",
    "updated_at": "2018-07-03T09:29:58Z",
    "author_association": "MEMBER",
    "body": "Thanks @conscott !\r\n\r\n> what do you think about moving these functions back to mininode.py?\r\n\r\nSeems reasonable if they can be used by multiple tests, although blocktools.py might be a better place for them.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/402076505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/402769239",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-402769239",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 402769239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjc2OTIzOQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T15:53:46Z",
    "updated_at": "2018-07-05T15:53:46Z",
    "author_association": "MEMBER",
    "body": "utACK e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/402769239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/403630404",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#issuecomment-403630404",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13467",
    "id": 403630404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzYzMDQwNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-09T21:44:57Z",
    "updated_at": "2018-07-09T21:44:57Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review @MarcoFalke - I'll try to address your comments in a follow-up PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/403630404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195501183",
    "pull_request_review_id": 128883895,
    "id": 195501183,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTUwMTE4Mw==",
    "diff_hunk": "@@ -492,42 +551,42 @@ def test_witness_block_size(self):\n         # The witness program will be a bunch of OP_2DROP's, followed by OP_TRUE.\n         # This should give us plenty of room to tweak the spending tx's\n         # virtual size.\n-        NUM_DROPS = 200 # 201 max ops per script!\n-        NUM_OUTPUTS = 50\n+        num_drops = 200  # 201 max ops per script!\n+        num_outputs = 50",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 392,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "a7c0672e7d9053f30129bcd489f5d150fb5c8ad3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Imo we indicate \"compile time\" constants with upper case, so I'd prefer if they were left that way, since it makes it easier to read. ",
    "created_at": "2018-06-14T17:08:06Z",
    "updated_at": "2018-06-29T19:45:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r195501183",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195501183"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r195501183"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195501183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 555,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195501404",
    "pull_request_review_id": 128884178,
    "id": 195501404,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTUwMTQwNA==",
    "diff_hunk": "@@ -3,17 +3,82 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test segwit transactions and blocks on P2P network.\"\"\"\n+from binascii import hexlify\n+import math\n+import random\n+import struct\n+import time\n \n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-from test_framework.script import *\n from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment, get_witness_script, WITNESS_COMMITMENT_HEADER\n from test_framework.key import CECKey, CPubKey\n-import math\n-import time\n-import random\n-from binascii import hexlify\n+from test_framework.mininode import (\n+    BIP125_SEQUENCE_NUMBER,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    CTxWitness,",
    "path": "test/functional/p2p_segwit.py",
    "position": 30,
    "original_position": 30,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "a7c0672e7d9053f30129bcd489f5d150fb5c8ad3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Those are message types and not from mininode. I'd prefer to keep it the way it was over changing it in the wrong way.",
    "created_at": "2018-06-14T17:08:51Z",
    "updated_at": "2018-06-29T19:45:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r195501404",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195501404"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r195501404"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/195501404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197233026",
    "pull_request_review_id": 130938196,
    "id": 197233026,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzIzMzAyNg==",
    "diff_hunk": "@@ -492,42 +551,42 @@ def test_witness_block_size(self):\n         # The witness program will be a bunch of OP_2DROP's, followed by OP_TRUE.\n         # This should give us plenty of room to tweak the spending tx's\n         # virtual size.\n-        NUM_DROPS = 200 # 201 max ops per script!\n-        NUM_OUTPUTS = 50\n+        num_drops = 200  # 201 max ops per script!\n+        num_outputs = 50",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 392,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "a7c0672e7d9053f30129bcd489f5d150fb5c8ad3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "C.f. https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style\r\n\r\n> Constant names are all uppercase, and use _ to separate words.",
    "created_at": "2018-06-21T18:22:48Z",
    "updated_at": "2018-06-29T19:45:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r197233026",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197233026"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r197233026"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197233026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 555,
    "side": "RIGHT",
    "in_reply_to_id": 195501183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197284790",
    "pull_request_review_id": 131002205,
    "id": 197284790,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzI4NDc5MA==",
    "diff_hunk": "@@ -3,17 +3,82 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test segwit transactions and blocks on P2P network.\"\"\"\n+from binascii import hexlify\n+import math\n+import random\n+import struct\n+import time\n \n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-from test_framework.script import *\n from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment, get_witness_script, WITNESS_COMMITMENT_HEADER\n from test_framework.key import CECKey, CPubKey\n-import math\n-import time\n-import random\n-from binascii import hexlify\n+from test_framework.mininode import (\n+    BIP125_SEQUENCE_NUMBER,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    CTxWitness,",
    "path": "test/functional/p2p_segwit.py",
    "position": 30,
    "original_position": 30,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "a7c0672e7d9053f30129bcd489f5d150fb5c8ad3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for pointing this out. These were previously being imported indirectly through the `from mininode import *` import, but you're right that I should fix that to import from messages.py in this commit.\r\n\r\nI've now put them in the right place.",
    "created_at": "2018-06-21T21:35:40Z",
    "updated_at": "2018-06-29T19:45:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r197284790",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197284790"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r197284790"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197284790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 195501404
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197284804",
    "pull_request_review_id": 131002221,
    "id": 197284804,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzI4NDgwNA==",
    "diff_hunk": "@@ -492,42 +551,42 @@ def test_witness_block_size(self):\n         # The witness program will be a bunch of OP_2DROP's, followed by OP_TRUE.\n         # This should give us plenty of room to tweak the spending tx's\n         # virtual size.\n-        NUM_DROPS = 200 # 201 max ops per script!\n-        NUM_OUTPUTS = 50\n+        num_drops = 200  # 201 max ops per script!\n+        num_outputs = 50",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 392,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "a7c0672e7d9053f30129bcd489f5d150fb5c8ad3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's not fair! Those are C++ style guides.\r\n\r\nBut fine, reverted to all caps.",
    "created_at": "2018-06-21T21:35:43Z",
    "updated_at": "2018-06-29T19:45:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r197284804",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197284804"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r197284804"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/197284804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 555,
    "side": "RIGHT",
    "in_reply_to_id": 195501183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201019481",
    "pull_request_review_id": 135438283,
    "id": 201019481,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAxOTQ4MQ==",
    "diff_hunk": "@@ -1149,25 +1203,24 @@ def test_standardness_v0(self, segwit_activated):\n         self.utxo.append(UTXO(tx3.sha256, 0, tx3.vout[0].nValue))\n         assert_equal(len(self.nodes[1].getrawmempool()), 0)\n \n-\n     # Verify that future segwit upgraded transactions are non-standard,\n     # but valid in blocks. Can run this before and after segwit activation.\n     def test_segwit_versions(self):\n         self.log.info(\"Testing standardness/consensus for segwit versions (0-16)\")\n         assert(len(self.utxo))\n-        NUM_TESTS = 17 # will test OP_0, OP1, ..., OP_16\n-        if (len(self.utxo) < NUM_TESTS):\n+        num_tests = 17  # will test OP_0, OP1, ..., OP_16",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 891,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "f7c7f8ecf3a2fbfdf1b24bbcacd23f9d21737d40",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit f7c7f8ecf3 [tests] p2p_segwit: Fix flake8 warnings\r\n\r\nYou change a constant to lowercase. Imo this makes the code harder to read, as mentioned in my previous review.",
    "created_at": "2018-07-09T14:20:23Z",
    "updated_at": "2018-07-09T14:20:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201019481",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201019481"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201019481"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201019481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1211,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201019686",
    "pull_request_review_id": 135438565,
    "id": 201019686,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAxOTY4Ng==",
    "diff_hunk": "@@ -1328,19 +1379,19 @@ def test_signature_version_1(self):\n         # Test combinations of signature hashes.\n         # Split the utxo into a lot of outputs.\n         # Randomly choose up to 10 to spend, sign with different hashtypes, and\n-        # output to a random number of outputs.  Repeat NUM_TESTS times.\n+        # output to a random number of outputs.  Repeat num_tests times.\n         # Ensure that we've tested a situation where we use SIGHASH_SINGLE with\n         # an input index > number of outputs.\n-        NUM_TESTS = 500\n+        num_tests = 500",
    "path": "test/functional/p2p_segwit.py",
    "position": 1873,
    "original_position": 1050,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "f7c7f8ecf3a2fbfdf1b24bbcacd23f9d21737d40",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same here",
    "created_at": "2018-07-09T14:21:03Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201019686",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201019686"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201019686"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201019686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1686,
    "original_line": 1385,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201023338",
    "pull_request_review_id": 135438565,
    "id": 201023338,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAyMzMzOA==",
    "diff_hunk": "@@ -385,10 +389,11 @@ def advance_to_segwit_started(self):\n         self.nodes[0].generate(VB_PERIOD - height - 1)\n         assert_equal(get_bip9_status(self.nodes[0], 'segwit')['status'], 'started')\n \n-    # Mine enough blocks to lock in segwit, but don't activate.\n-    # TODO: we could verify that lockin only happens at the right threshold of\n-    # signalling blocks, rather than just at the right period boundary.\n     def advance_to_segwit_lockin(self):\n+        \"\"\"Mine enough blocks to lock in segwit, but don't activate.\"\"\"\n+        # TODO: we could verify that lockin only happens at the right threshold of\n+        # signalling blocks, rather than just at the right period boundary.",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 136,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "94a0134a40aebac146e8ebe9a3094321d8b1c7da",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit (unrelated):\r\nIn commit 94a0134a40 [tests] p2p_segwit: standardise comments/docstrings.\r\n\r\nCould remove this todo, since it should be covered by the BIP9 tests. (No need to re-cover BIP9 logic in every softfork deployment that uses BIP9)\r\n",
    "created_at": "2018-07-09T14:30:49Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201023338",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201023338"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201023338"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201023338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 395,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201023386",
    "pull_request_review_id": 135438565,
    "id": 201023386,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAyMzM4Ng==",
    "diff_hunk": "@@ -399,19 +404,23 @@ def advance_to_segwit_lockin(self):\n         self.nodes[0].generate(1)\n         assert_equal(get_bip9_status(self.nodes[0], 'segwit')['status'], 'locked_in')\n \n-    # Mine enough blocks to activate segwit.\n-    # TODO: we could verify that activation only happens at the right threshold\n-    # of signalling blocks, rather than just at the right period boundary.\n     def advance_to_segwit_active(self):\n+        \"\"\"Mine enough blocks to activate segwit.\"\"\"\n+        # TODO: we could verify that activation only happens at the right threshold",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 150,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "94a0134a40aebac146e8ebe9a3094321d8b1c7da",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same here",
    "created_at": "2018-07-09T14:30:57Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201023386",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201023386"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201023386"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201023386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 409,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201024613",
    "pull_request_review_id": 135444664,
    "id": 201024613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAyNDYxMw==",
    "diff_hunk": "@@ -1149,25 +1203,24 @@ def test_standardness_v0(self, segwit_activated):\n         self.utxo.append(UTXO(tx3.sha256, 0, tx3.vout[0].nValue))\n         assert_equal(len(self.nodes[1].getrawmempool()), 0)\n \n-\n     # Verify that future segwit upgraded transactions are non-standard,\n     # but valid in blocks. Can run this before and after segwit activation.\n     def test_segwit_versions(self):\n         self.log.info(\"Testing standardness/consensus for segwit versions (0-16)\")\n         assert(len(self.utxo))\n-        NUM_TESTS = 17 # will test OP_0, OP1, ..., OP_16\n-        if (len(self.utxo) < NUM_TESTS):\n+        num_tests = 17  # will test OP_0, OP1, ..., OP_16",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 891,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "f7c7f8ecf3a2fbfdf1b24bbcacd23f9d21737d40",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "sorry - recapitalized the ones that you mentioned in your review. Missed this one.",
    "created_at": "2018-07-09T14:34:39Z",
    "updated_at": "2018-07-09T14:34:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201024613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201024613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201024613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201024613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1211,
    "side": "RIGHT",
    "in_reply_to_id": 201019481
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201028837",
    "pull_request_review_id": 135438565,
    "id": 201028837,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAyODgzNw==",
    "diff_hunk": "@@ -41,7 +41,6 @@\n from test_framework.mininode import (\n     P2PInterface,\n     mininode_lock,\n-    network_thread_start,",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 4,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "2af4e398dc7cd7529a43d8832621dfb40b467eb9",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 2af4e398dc [tests] p2p_segwit: re-order function definitions.\r\n\r\nUnrelated change",
    "created_at": "2018-07-09T14:45:40Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201028837",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201028837"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201028837"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201028837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 44,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201029127",
    "pull_request_review_id": 135438565,
    "id": 201029127,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAyOTEyNw==",
    "diff_hunk": "@@ -220,7 +218,77 @@ def update_witness_block_with_transactions(self, block, tx_list, nonce=0):\n         block.vtx.extend(tx_list)\n         add_witness_commitment(block, nonce)\n         block.solve()\n-        return\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 64,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "2af4e398dc7cd7529a43d8832621dfb40b467eb9",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit 2af4e398dc [tests] p2p_segwit: re-order function definitions.\r\n\r\nUnrelated addition: Tests are not aware of a \"network thread\"",
    "created_at": "2018-07-09T14:46:30Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201029127",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201029127"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201029127"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201029127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 223,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201100703",
    "pull_request_review_id": 135438565,
    "id": 201100703,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTEwMDcwMw==",
    "diff_hunk": "@@ -220,7 +218,77 @@ def update_witness_block_with_transactions(self, block, tx_list, nonce=0):\n         block.vtx.extend(tx_list)\n         add_witness_commitment(block, nonce)\n         block.solve()\n-        return",
    "path": "test/functional/p2p_segwit.py",
    "position": 208,
    "original_position": 61,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "2af4e398dc7cd7529a43d8832621dfb40b467eb9",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit 2af4e39 [tests] p2p_segwit: re-order function definitions.\r\n\r\nUnrelated non-moveonly removal",
    "created_at": "2018-07-09T18:21:27Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201100703",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201100703"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201100703"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201100703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 155,
    "original_line": 223,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201101304",
    "pull_request_review_id": 135438565,
    "id": 201101304,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTEwMTMwNA==",
    "diff_hunk": "@@ -1042,187 +1403,11 @@ def test_tx_relay_after_segwit_activation(self):\n         self.utxo.pop(0)\n         self.utxo.append(UTXO(tx3.sha256, 0, tx3.vout[0].nValue))\n \n-    def test_block_relay(self, segwit_activated):\n-        \"\"\"Test that block requests to NODE_WITNESS peer are with MSG_WITNESS_FLAG.\n-\n-        This is true regardless of segwit activation.\n-        Also test that we don't ask for blocks from unupgraded peers.\"\"\"\n-        self.log.info(\"Testing block relay\")\n+    def test_segwit_versions(self):\n+        \"\"\"Test validity of future segwit version transactions.\n \n-        blocktype = 2 | MSG_WITNESS_FLAG\n-\n-        # test_node has set NODE_WITNESS, so all getdata requests should be for\n-        # witness blocks.\n-        # Test announcing a block via inv results in a getdata, and that\n-        # announcing a version 4 or random VB block with a header results in a getdata\n-        block1 = self.build_next_block()\n-        block1.solve()\n-\n-        self.test_node.announce_block_and_wait_for_getdata(block1, use_header=False)\n-        assert(self.test_node.last_message[\"getdata\"].inv[0].type == blocktype)\n-        test_witness_block(self.nodes[0].rpc, self.test_node, block1, True)\n-\n-        block2 = self.build_next_block(version=4)\n-        block2.solve()\n-\n-        self.test_node.announce_block_and_wait_for_getdata(block2, use_header=True)\n-        assert(self.test_node.last_message[\"getdata\"].inv[0].type == blocktype)\n-        test_witness_block(self.nodes[0].rpc, self.test_node, block2, True)\n-\n-        block3 = self.build_next_block(version=(VB_TOP_BITS | (1 << 15)))\n-        block3.solve()\n-        self.test_node.announce_block_and_wait_for_getdata(block3, use_header=True)\n-        assert(self.test_node.last_message[\"getdata\"].inv[0].type == blocktype)\n-        test_witness_block(self.nodes[0].rpc, self.test_node, block3, True)\n-\n-        # Check that we can getdata for witness blocks or regular blocks,\n-        # and the right thing happens.\n-        if not segwit_activated:\n-            # Before activation, we should be able to request old blocks with\n-            # or without witness, and they should be the same.\n-            chain_height = self.nodes[0].getblockcount()\n-            # Pick 10 random blocks on main chain, and verify that getdata's\n-            # for MSG_BLOCK, MSG_WITNESS_BLOCK, and rpc getblock() are equal.\n-            all_heights = list(range(chain_height + 1))\n-            random.shuffle(all_heights)\n-            all_heights = all_heights[0:10]\n-            for height in all_heights:\n-                block_hash = self.nodes[0].getblockhash(height)\n-                rpc_block = self.nodes[0].getblock(block_hash, False)\n-                block_hash = int(block_hash, 16)\n-                block = self.test_node.request_block(block_hash, 2)\n-                wit_block = self.test_node.request_block(block_hash, 2 | MSG_WITNESS_FLAG)\n-                assert_equal(block.serialize(True), wit_block.serialize(True))\n-                assert_equal(block.serialize(), hex_str_to_bytes(rpc_block))\n-        else:\n-            # After activation, witness blocks and non-witness blocks should\n-            # be different.  Verify rpc getblock() returns witness blocks, while\n-            # getdata respects the requested type.\n-            block = self.build_next_block()\n-            self.update_witness_block_with_transactions(block, [])\n-            # This gives us a witness commitment.\n-            assert(len(block.vtx[0].wit.vtxinwit) == 1)\n-            assert(len(block.vtx[0].wit.vtxinwit[0].scriptWitness.stack) == 1)\n-            test_witness_block(self.nodes[0].rpc, self.test_node, block, accepted=True)\n-            # Now try to retrieve it...\n-            rpc_block = self.nodes[0].getblock(block.hash, False)\n-            non_wit_block = self.test_node.request_block(block.sha256, 2)\n-            wit_block = self.test_node.request_block(block.sha256, 2 | MSG_WITNESS_FLAG)\n-            assert_equal(wit_block.serialize(True), hex_str_to_bytes(rpc_block))\n-            assert_equal(wit_block.serialize(False), non_wit_block.serialize())\n-            assert_equal(wit_block.serialize(True), block.serialize(True))\n-\n-            # Test size, vsize, weight\n-            rpc_details = self.nodes[0].getblock(block.hash, True)\n-            assert_equal(rpc_details[\"size\"], len(block.serialize(True)))\n-            assert_equal(rpc_details[\"strippedsize\"], len(block.serialize(False)))\n-            weight = 3 * len(block.serialize(False)) + len(block.serialize(True))\n-            assert_equal(rpc_details[\"weight\"], weight)\n-\n-            # Upgraded node should not ask for blocks from unupgraded\n-            block4 = self.build_next_block(version=4)\n-            block4.solve()\n-            self.old_node.getdataset = set()\n-\n-            # Blocks can be requested via direct-fetch (immediately upon processing the announcement)\n-            # or via parallel download (with an indeterminate delay from processing the announcement)\n-            # so to test that a block is NOT requested, we could guess a time period to sleep for,\n-            # and then check. We can avoid the sleep() by taking advantage of transaction getdata's\n-            # being processed after block getdata's, and announce a transaction as well,\n-            # and then check to see if that particular getdata has been received.\n-            # Since 0.14, inv's will only be responded to with a getheaders, so send a header\n-            # to announce this block.\n-            msg = msg_headers()\n-            msg.headers = [CBlockHeader(block4)]\n-            self.old_node.send_message(msg)\n-            self.old_node.announce_tx_and_wait_for_getdata(block4.vtx[0])\n-            assert(block4.sha256 not in self.old_node.getdataset)\n-\n-    def test_standardness_v0(self, segwit_activated):\n-        \"\"\"Test V0 txout standardness.\n-        ",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 665,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "2af4e398dc7cd7529a43d8832621dfb40b467eb9",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit 2af4e398dc [tests] p2p_segwit: re-order function definitions.\r\n\r\nUnrelated removal of trailing whitespace (should have been in one of the previous commits)",
    "created_at": "2018-07-09T18:23:14Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201101304",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201101304"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201101304"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201101304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1143,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201101728",
    "pull_request_review_id": 135438565,
    "id": 201101728,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTEwMTcyOA==",
    "diff_hunk": "@@ -1042,187 +1403,11 @@ def test_tx_relay_after_segwit_activation(self):\n         self.utxo.pop(0)\n         self.utxo.append(UTXO(tx3.sha256, 0, tx3.vout[0].nValue))\n \n-    def test_block_relay(self, segwit_activated):\n-        \"\"\"Test that block requests to NODE_WITNESS peer are with MSG_WITNESS_FLAG.\n-\n-        This is true regardless of segwit activation.\n-        Also test that we don't ask for blocks from unupgraded peers.\"\"\"\n-        self.log.info(\"Testing block relay\")\n+    def test_segwit_versions(self):\n+        \"\"\"Test validity of future segwit version transactions.\n \n-        blocktype = 2 | MSG_WITNESS_FLAG\n-\n-        # test_node has set NODE_WITNESS, so all getdata requests should be for\n-        # witness blocks.\n-        # Test announcing a block via inv results in a getdata, and that\n-        # announcing a version 4 or random VB block with a header results in a getdata\n-        block1 = self.build_next_block()\n-        block1.solve()\n-\n-        self.test_node.announce_block_and_wait_for_getdata(block1, use_header=False)\n-        assert(self.test_node.last_message[\"getdata\"].inv[0].type == blocktype)\n-        test_witness_block(self.nodes[0].rpc, self.test_node, block1, True)\n-\n-        block2 = self.build_next_block(version=4)\n-        block2.solve()\n-\n-        self.test_node.announce_block_and_wait_for_getdata(block2, use_header=True)\n-        assert(self.test_node.last_message[\"getdata\"].inv[0].type == blocktype)\n-        test_witness_block(self.nodes[0].rpc, self.test_node, block2, True)\n-\n-        block3 = self.build_next_block(version=(VB_TOP_BITS | (1 << 15)))\n-        block3.solve()\n-        self.test_node.announce_block_and_wait_for_getdata(block3, use_header=True)\n-        assert(self.test_node.last_message[\"getdata\"].inv[0].type == blocktype)\n-        test_witness_block(self.nodes[0].rpc, self.test_node, block3, True)\n-\n-        # Check that we can getdata for witness blocks or regular blocks,\n-        # and the right thing happens.\n-        if not segwit_activated:\n-            # Before activation, we should be able to request old blocks with\n-            # or without witness, and they should be the same.\n-            chain_height = self.nodes[0].getblockcount()\n-            # Pick 10 random blocks on main chain, and verify that getdata's\n-            # for MSG_BLOCK, MSG_WITNESS_BLOCK, and rpc getblock() are equal.\n-            all_heights = list(range(chain_height + 1))\n-            random.shuffle(all_heights)\n-            all_heights = all_heights[0:10]\n-            for height in all_heights:\n-                block_hash = self.nodes[0].getblockhash(height)\n-                rpc_block = self.nodes[0].getblock(block_hash, False)\n-                block_hash = int(block_hash, 16)\n-                block = self.test_node.request_block(block_hash, 2)\n-                wit_block = self.test_node.request_block(block_hash, 2 | MSG_WITNESS_FLAG)\n-                assert_equal(block.serialize(True), wit_block.serialize(True))\n-                assert_equal(block.serialize(), hex_str_to_bytes(rpc_block))\n-        else:\n-            # After activation, witness blocks and non-witness blocks should\n-            # be different.  Verify rpc getblock() returns witness blocks, while\n-            # getdata respects the requested type.\n-            block = self.build_next_block()\n-            self.update_witness_block_with_transactions(block, [])\n-            # This gives us a witness commitment.\n-            assert(len(block.vtx[0].wit.vtxinwit) == 1)\n-            assert(len(block.vtx[0].wit.vtxinwit[0].scriptWitness.stack) == 1)\n-            test_witness_block(self.nodes[0].rpc, self.test_node, block, accepted=True)\n-            # Now try to retrieve it...\n-            rpc_block = self.nodes[0].getblock(block.hash, False)\n-            non_wit_block = self.test_node.request_block(block.sha256, 2)\n-            wit_block = self.test_node.request_block(block.sha256, 2 | MSG_WITNESS_FLAG)\n-            assert_equal(wit_block.serialize(True), hex_str_to_bytes(rpc_block))\n-            assert_equal(wit_block.serialize(False), non_wit_block.serialize())\n-            assert_equal(wit_block.serialize(True), block.serialize(True))\n-\n-            # Test size, vsize, weight\n-            rpc_details = self.nodes[0].getblock(block.hash, True)\n-            assert_equal(rpc_details[\"size\"], len(block.serialize(True)))\n-            assert_equal(rpc_details[\"strippedsize\"], len(block.serialize(False)))\n-            weight = 3 * len(block.serialize(False)) + len(block.serialize(True))\n-            assert_equal(rpc_details[\"weight\"], weight)\n-\n-            # Upgraded node should not ask for blocks from unupgraded\n-            block4 = self.build_next_block(version=4)\n-            block4.solve()\n-            self.old_node.getdataset = set()\n-\n-            # Blocks can be requested via direct-fetch (immediately upon processing the announcement)\n-            # or via parallel download (with an indeterminate delay from processing the announcement)\n-            # so to test that a block is NOT requested, we could guess a time period to sleep for,\n-            # and then check. We can avoid the sleep() by taking advantage of transaction getdata's\n-            # being processed after block getdata's, and announce a transaction as well,\n-            # and then check to see if that particular getdata has been received.\n-            # Since 0.14, inv's will only be responded to with a getheaders, so send a header\n-            # to announce this block.\n-            msg = msg_headers()\n-            msg.headers = [CBlockHeader(block4)]\n-            self.old_node.send_message(msg)\n-            self.old_node.announce_tx_and_wait_for_getdata(block4.vtx[0])\n-            assert(block4.sha256 not in self.old_node.getdataset)\n-\n-    def test_standardness_v0(self, segwit_activated):\n-        \"\"\"Test V0 txout standardness.\n-        \n-        V0 segwit outputs and inputs are always standard.\n-        V0 segwit inputs may only be mined after activation, but not before.\"\"\"\n-\n-        self.log.info(\"Testing standardness of v0 outputs (%s activation)\" % (\"after\" if segwit_activated else \"before\"))\n-        assert(len(self.utxo))\n-\n-        witness_program = CScript([OP_TRUE])\n-        witness_hash = sha256(witness_program)\n-        script_pubkey = CScript([OP_0, witness_hash])\n-\n-        p2sh_pubkey = hash160(witness_program)\n-        p2sh_script_pubkey = CScript([OP_HASH160, p2sh_pubkey, OP_EQUAL])\n-\n-        # First prepare a p2sh output (so that spending it will pass standardness)\n-        p2sh_tx = CTransaction()\n-        p2sh_tx.vin = [CTxIn(COutPoint(self.utxo[0].sha256, self.utxo[0].n), b\"\")]\n-        p2sh_tx.vout = [CTxOut(self.utxo[0].nValue - 1000, p2sh_script_pubkey)]\n-        p2sh_tx.rehash()\n-\n-        # Mine it on test_node to create the confirmed output.\n-        test_transaction_acceptance(self.nodes[0].rpc, self.test_node, p2sh_tx, with_witness=True, accepted=True)\n-        self.nodes[0].generate(1)\n-        sync_blocks(self.nodes)\n-\n-        # Now test standardness of v0 P2WSH outputs.\n-        # Start by creating a transaction with two outputs.\n-        tx = CTransaction()\n-        tx.vin = [CTxIn(COutPoint(p2sh_tx.sha256, 0), CScript([witness_program]))]\n-        tx.vout = [CTxOut(p2sh_tx.vout[0].nValue - 10000, script_pubkey)]\n-        tx.vout.append(CTxOut(8000, script_pubkey))  # Might burn this later\n-        tx.vin[0].nSequence = BIP125_SEQUENCE_NUMBER  # Just to have the option to bump this tx from the mempool\n-        tx.rehash()\n-\n-        # This is always accepted, since the mempool policy is to consider segwit as always active\n-        # and thus allow segwit outputs\n-        test_transaction_acceptance(self.nodes[1].rpc, self.std_node, tx, with_witness=True, accepted=True)\n-\n-        # Now create something that looks like a P2PKH output. This won't be spendable.\n-        script_pubkey = CScript([OP_0, hash160(witness_hash)])\n-        tx2 = CTransaction()\n-        # tx was accepted, so we spend the second output.\n-        tx2.vin = [CTxIn(COutPoint(tx.sha256, 1), b\"\")]\n-        tx2.vout = [CTxOut(7000, script_pubkey)]\n-        tx2.wit.vtxinwit.append(CTxInWitness())\n-        tx2.wit.vtxinwit[0].scriptWitness.stack = [witness_program]\n-        tx2.rehash()\n-\n-        test_transaction_acceptance(self.nodes[1].rpc, self.std_node, tx2, with_witness=True, accepted=True)\n-\n-        # Now update self.utxo for later tests.\n-        tx3 = CTransaction()\n-        # tx and tx2 were both accepted.  Don't bother trying to reclaim the\n-        # P2PKH output; just send tx's first output back to an anyone-can-spend.\n-        sync_mempools([self.nodes[0], self.nodes[1]])\n-        tx3.vin = [CTxIn(COutPoint(tx.sha256, 0), b\"\")]\n-        tx3.vout = [CTxOut(tx.vout[0].nValue - 1000, CScript([OP_TRUE, OP_DROP] * 15 + [OP_TRUE]))]\n-        tx3.wit.vtxinwit.append(CTxInWitness())\n-        tx3.wit.vtxinwit[0].scriptWitness.stack = [witness_program]\n-        tx3.rehash()\n-        if not segwit_activated:\n-            # Just check mempool acceptance, but don't add the transaction to the mempool, since witness is disallowed\n-            # in blocks and the tx is impossible to mine right now.\n-            assert_equal(self.nodes[0].testmempoolaccept([bytes_to_hex_str(tx3.serialize_with_witness())]), [{'txid': tx3.hash, 'allowed': True}])\n-            # Create the same output as tx3, but by replacing tx\n-            tx3_out = tx3.vout[0]\n-            tx3 = tx\n-            tx3.vout = [tx3_out]\n-            tx3.rehash()\n-            assert_equal(self.nodes[0].testmempoolaccept([bytes_to_hex_str(tx3.serialize_with_witness())]), [{'txid': tx3.hash, 'allowed': True}])\n-        test_transaction_acceptance(self.nodes[0].rpc, self.test_node, tx3, with_witness=True, accepted=True)\n-\n-        self.nodes[0].generate(1)\n-        sync_blocks(self.nodes)\n-        self.utxo.pop(0)\n-        self.utxo.append(UTXO(tx3.sha256, 0, tx3.vout[0].nValue))\n-        assert_equal(len(self.nodes[1].getrawmempool()), 0)\n-\n-    def test_segwit_versions(self):\n-        \"\"\"Test validity of future segwit version transactions.\n-        ",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 745,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "2af4e398dc7cd7529a43d8832621dfb40b467eb9",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit 2af4e398dc [tests] p2p_segwit: re-order function definitions.\r\n\r\nUnrelated removal of trailing whitespace (should have been in one of the previous commits)",
    "created_at": "2018-07-09T18:24:40Z",
    "updated_at": "2018-07-09T18:42:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201101728",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201101728"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r201101728"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201101728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1223,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457911",
    "pull_request_review_id": 137171224,
    "id": 202457911,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQ1NzkxMQ==",
    "diff_hunk": "@@ -1328,19 +1379,19 @@ def test_signature_version_1(self):\n         # Test combinations of signature hashes.\n         # Split the utxo into a lot of outputs.\n         # Randomly choose up to 10 to spend, sign with different hashtypes, and\n-        # output to a random number of outputs.  Repeat NUM_TESTS times.\n+        # output to a random number of outputs.  Repeat num_tests times.\n         # Ensure that we've tested a situation where we use SIGHASH_SINGLE with\n         # an input index > number of outputs.\n-        NUM_TESTS = 500\n+        num_tests = 500",
    "path": "test/functional/p2p_segwit.py",
    "position": 1873,
    "original_position": 1050,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "f7c7f8ecf3a2fbfdf1b24bbcacd23f9d21737d40",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will address in follow-up PR",
    "created_at": "2018-07-13T20:00:33Z",
    "updated_at": "2018-07-13T20:02:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202457911",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457911"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202457911"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1686,
    "original_line": 1385,
    "side": "RIGHT",
    "in_reply_to_id": 201019686
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457944",
    "pull_request_review_id": 137171269,
    "id": 202457944,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQ1Nzk0NA==",
    "diff_hunk": "@@ -385,10 +389,11 @@ def advance_to_segwit_started(self):\n         self.nodes[0].generate(VB_PERIOD - height - 1)\n         assert_equal(get_bip9_status(self.nodes[0], 'segwit')['status'], 'started')\n \n-    # Mine enough blocks to lock in segwit, but don't activate.\n-    # TODO: we could verify that lockin only happens at the right threshold of\n-    # signalling blocks, rather than just at the right period boundary.\n     def advance_to_segwit_lockin(self):\n+        \"\"\"Mine enough blocks to lock in segwit, but don't activate.\"\"\"\n+        # TODO: we could verify that lockin only happens at the right threshold of\n+        # signalling blocks, rather than just at the right period boundary.",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 136,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "94a0134a40aebac146e8ebe9a3094321d8b1c7da",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will address in follow-up PR",
    "created_at": "2018-07-13T20:00:42Z",
    "updated_at": "2018-07-13T20:00:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202457944",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457944"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202457944"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 395,
    "side": "RIGHT",
    "in_reply_to_id": 201023338
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457982",
    "pull_request_review_id": 137171314,
    "id": 202457982,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQ1Nzk4Mg==",
    "diff_hunk": "@@ -399,19 +404,23 @@ def advance_to_segwit_lockin(self):\n         self.nodes[0].generate(1)\n         assert_equal(get_bip9_status(self.nodes[0], 'segwit')['status'], 'locked_in')\n \n-    # Mine enough blocks to activate segwit.\n-    # TODO: we could verify that activation only happens at the right threshold\n-    # of signalling blocks, rather than just at the right period boundary.\n     def advance_to_segwit_active(self):\n+        \"\"\"Mine enough blocks to activate segwit.\"\"\"\n+        # TODO: we could verify that activation only happens at the right threshold",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 150,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "94a0134a40aebac146e8ebe9a3094321d8b1c7da",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will address in follow-up PR",
    "created_at": "2018-07-13T20:00:49Z",
    "updated_at": "2018-07-13T20:00:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202457982",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457982"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202457982"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202457982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 409,
    "side": "RIGHT",
    "in_reply_to_id": 201023386
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202458071",
    "pull_request_review_id": 137171425,
    "id": 202458071,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQ1ODA3MQ==",
    "diff_hunk": "@@ -220,7 +218,77 @@ def update_witness_block_with_transactions(self, block, tx_list, nonce=0):\n         block.vtx.extend(tx_list)\n         add_witness_commitment(block, nonce)\n         block.solve()\n-        return\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.",
    "path": "test/functional/p2p_segwit.py",
    "position": null,
    "original_position": 64,
    "commit_id": "e3aab295e7c91d08bd577f9fb05f6bb8e585870a",
    "original_commit_id": "2af4e398dc7cd7529a43d8832621dfb40b467eb9",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will address in follow-up PR",
    "created_at": "2018-07-13T20:01:11Z",
    "updated_at": "2018-07-13T20:01:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202458071",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202458071"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13467#discussion_r202458071"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13467"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202458071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 223,
    "side": "RIGHT",
    "in_reply_to_id": 201029127
  }
]