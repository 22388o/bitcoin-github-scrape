[
  {
    "sha": "e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzc5YTE3Yjc5MTVjYzlhZWViMGQ1OGZkYjk3YTI0MWJhOGQ2NGMz",
    "commit": {
      "author": {
        "name": "Glen Low",
        "email": "glen.low@pixelglow.com",
        "date": "2011-06-27T06:52:09Z"
      },
      "committer": {
        "name": "Glen Low",
        "email": "glen.low@pixelglow.com",
        "date": "2011-06-27T06:52:09Z"
      },
      "message": "Add RPC command listtransactionsaftertime",
      "tree": {
        "sha": "b0976b945b0fdbd93e6c977dcdd6a051453fe91b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0976b945b0fdbd93e6c977dcdd6a051453fe91b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3/comments",
    "author": {
      "login": "pixelglow",
      "id": 297444,
      "node_id": "MDQ6VXNlcjI5NzQ0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixelglow",
      "html_url": "https://github.com/pixelglow",
      "followers_url": "https://api.github.com/users/pixelglow/followers",
      "following_url": "https://api.github.com/users/pixelglow/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelglow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixelglow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelglow/subscriptions",
      "organizations_url": "https://api.github.com/users/pixelglow/orgs",
      "repos_url": "https://api.github.com/users/pixelglow/repos",
      "events_url": "https://api.github.com/users/pixelglow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixelglow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pixelglow",
      "id": 297444,
      "node_id": "MDQ6VXNlcjI5NzQ0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixelglow",
      "html_url": "https://github.com/pixelglow",
      "followers_url": "https://api.github.com/users/pixelglow/followers",
      "following_url": "https://api.github.com/users/pixelglow/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelglow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixelglow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelglow/subscriptions",
      "organizations_url": "https://api.github.com/users/pixelglow/orgs",
      "repos_url": "https://api.github.com/users/pixelglow/repos",
      "events_url": "https://api.github.com/users/pixelglow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixelglow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d0d80170a2ca73004e08fb85007fe055cbf4e411",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0d80170a2ca73004e08fb85007fe055cbf4e411",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0d80170a2ca73004e08fb85007fe055cbf4e411"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 44,
      "deletions": 0
    },
    "files": [
      {
        "sha": "10c003db90fdf032fd67599f3684fa9a91be689e",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=e779a17b7915cc9aeeb0d58fdb97a241ba8d64c3",
        "patch": "@@ -1169,6 +1169,48 @@ Value listtransactions(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value listtransactionsaftertime(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() > 2)\n+        throw runtime_error(\n+                            \"listtransactionsaftertime [account] [time=0]\\n\"\n+                            \"Returns all transactions after time [time] for account [account].\");\n+    \n+    string strAccount = \"*\";\n+    if (params.size() > 0)\n+        strAccount = params[0].get_str();\n+    int64 time = 0;\n+    if (params.size() > 1)\n+        time = params[1].get_int64();\n+    \n+    Array ret;\n+    CWalletDB walletdb(pwalletMain->strWalletFile);\n+    \n+    CRITICAL_BLOCK(pwalletMain->cs_mapWallet)\n+    {\n+        // Firs: get all CWalletTx and CAccountingEntry into a sorted-by-time multimap:\n+        typedef pair<CWalletTx*, CAccountingEntry*> TxPair;\n+        typedef vector<TxPair > TxItems;\n+        TxItems txItems;\n+        \n+        for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n+        {\n+            CWalletTx* wtx = &((*it).second);\n+            if (wtx->GetTxTime() > time)\n+                ListTransactions(*wtx, strAccount, 0, true, ret);\n+        }\n+        list<CAccountingEntry> acentries;\n+        walletdb.ListAccountCreditDebit(strAccount, acentries);\n+        BOOST_FOREACH(CAccountingEntry& entry, acentries)\n+        {\n+            if (entry.nTime > time)\n+                AcentryToJSON(entry, strAccount, ret);\n+        }\n+    }\n+    \n+    return ret;\n+}\n+\n Value listaccounts(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -1462,6 +1504,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"sendmany\",              &sendmany),\n     make_pair(\"gettransaction\",        &gettransaction),\n     make_pair(\"listtransactions\",      &listtransactions),\n+    make_pair(\"listtransactionsaftertime\",      &listtransactionsaftertime),\n     make_pair(\"getwork\",               &getwork),\n     make_pair(\"listaccounts\",          &listaccounts),\n     make_pair(\"settxfee\",              &settxfee),\n@@ -2118,6 +2161,7 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<boost::int64_t>(params[3]);\n         if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<boost::int64_t>(params[2]);\n+        if (strMethod == \"listtransactionsaftertime\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n         if (strMethod == \"sendmany\"               && n > 1)\n         {"
      }
    ]
  }
]