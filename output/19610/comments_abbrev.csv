DrahtBot,2020-07-28 17:03:10,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19753 (p2p: don't add AlreadyHave transactions to recentRejects by troygiorshev)\n* #19339 (validation: re-delegate absur",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-665159957,665159957,
jnewbery,2020-08-03 16:09:24,I think a better approach than the changes within `AlreadyHave()` is to split that function up into `AlreadyHaveTx()` and `AlreadyHaveBlock()` since those are two totally separate concepts. @jonatack would you be interested in taking the commits from here: https://github.com/jnewbery/bitcoin/commits/2020-07-split-already-have? (see also https://github.com/bitcoin/bitcoin/pull/19569#discussion_r462,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-668108043,668108043,
jonatack,2020-08-08 14:12:17,Rebased with four commits pulled in from @jnewbery's https://github.com/bitcoin/bitcoin/compare/master...jnewbery:2020-07-split-already-have branch as well as the changes in #19611.,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-670933625,670933625,
laanwj,2020-08-09 18:49:12,"> I think a better approach than the changes within AlreadyHave() is to split that function up into AlreadyHaveTx() and AlreadyHaveBlock() since those are two totally separate concepts.\n\nGreat idea. The block and transaction paths have drifted apart so much that it no longer makes sense to have a common function there.\n",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-671087745,671087745,
jnewbery,2020-08-11 13:49:56,"> In commits p2p: remove unused nFetchFlags from NetMsgType::(TX|INV) processing - why would it be unused? It looks used to me. Maybe I am missing something obscure? If that is the case, then maybe the commit messages warrant some more elaborate explanations?\n\nBecause `GetFetchFlags()` can only add the `MSG_WITNESS_FLAG`, which is added to the `CInv.type` field. That `CInv` only passed to `Alr",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-671958676,671958676,
jnewbery,2020-08-18 09:26:16,Needs rebase now that #19721 is merged.,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-675368686,675368686,
jnewbery,2020-08-20 07:47:48,Still awaiting rebase,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-677434767,677434767,
jonatack,2020-08-20 11:47:07,"- rebased and updated\n- dropped the *change CInv::type from int to uint32_t commit*\n- squashed the 2 commits *remove unused nFetchFlags from NetMsgType::INV processing* and *remove unused nFetchFlags from NetMsgType::TX processing* and added explanatory notes to the commit message\n- split the IsGenMsgTx() conditional check to a separate commit, *ensure inv is GenMsgTx before ToGenTxid in inv",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-677584202,677584202,
jnewbery,2020-08-21 11:02:41,"utACK 1723d0025b744f12b853935aead9acd9f8f32b42\n\nThe last commit is tagged as authored by and co-authored by me. I don't think we need both tags!",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-678234201,678234201,
jonatack,2020-08-21 14:23:08,"> utACK [1723d00](https://github.com/bitcoin/bitcoin/commit/1723d0025b744f12b853935aead9acd9f8f32b42)\n> \n> The last commit is tagged as authored by and co-authored by me. I don't think we need both tags!\n\nFixed",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-678317086,678317086,
jonatack,2020-08-22 14:23:01,Thanks @jnewbery! Updated per `git diff 2a2ee28 25176e6`.,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-678647114,678647114,
jnewbery,2020-08-24 09:28:54,utACK 25176e62d0e60a3bca92aa758f935ee782531f75,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-679016899,679016899,
jonatack,2020-08-24 16:34:36,"Rebased.\n\n`git range-diff 7f609f6 25176e6 ac0617d`",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-679235862,679235862,
jnewbery,2020-08-25 10:51:16,"utACK ac0617d3718ac3e330a70b30ef1edd8a46faaf9a\n\nVerified the range-diff locally",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-679951846,679951846,
Crypt-iQ,2020-08-25 15:44:41,I think the `CInv::type` change from `int` to `uint32_t` change should be added back (not necessarily the `private` qualifier). While fuzzing it brings up the following complaint https://github.com/bitcoin/bitcoin/issues/19678,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-680106672,680106672,
jonatack,2020-08-25 20:35:03,"Thank you @Crypt-iQ, if you have the chance, would you please let me know if 533a9a0d2c307330497e61d5af4229c924db8372 resolves the issue on your side?",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-680256152,680256152,
Crypt-iQ,2020-08-26 06:29:50,"@jonatack That UBSan complaint goes away with this patch 👍 \nTested on macOS v10.15.4, brew-installed clang. ",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-680686460,680686460,
jonatack,2020-08-26 09:51:45,"Thanks @Crypt-iQ and @vasild.\n\nThe CI failed on the wallet_import_rescan functional test and should be unrelated. Restarted; it's now green.",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-680780049,680780049,
jonatack,2020-08-26 10:07:34,Removed the unused helper methods from the first commit per `git diff 533a9a0 125468a`,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-680787643,680787643,
jnewbery,2020-08-26 15:32:31,"> I think the CInv::type change from int to uint32_t change should be added back (not necessarily the private qualifier). While fuzzing it brings up the following complaint #19678\n\nWhy? This seems unrelated to this PR (the UBSan warning happens before this PR). Changing the type of `CInv.type` (which is serialized/deserialized for network messages) is a very different change from the internal ",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-680954570,680954570,
Crypt-iQ,2020-08-26 16:18:42,"@jnewbery I thought since it was already added previously, it would fit into the scope of the PR. No problem to be added into another PR, either I or somebody else could do that.\n",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-680981212,680981212,
jonatack,2020-08-27 09:14:40,Dropped the `CInv::type` type change commit in favor of #19818. Thanks everyone.,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-681828195,681828195,
laanwj,2020-08-27 13:10:46,"Code review ACK fb56d37612dea6666e7da73d671311a697570dae\nAgree it's better to split out the P2P change.",https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-681939032,681939032,
jnewbery,2020-09-01 08:50:26,utACK fb56d37612dea6666e7da73d671311a697570dae,https://github.com/bitcoin/bitcoin/pull/19610#issuecomment-684598660,684598660,
fjahr,2020-08-01 19:52:03,Could re-use the helper methods from above here in the combined helpers,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r463994428,463994428,src/protocol.h
jonatack,2020-08-03 13:41:22,"Thanks Fabian. I mulled on doing this, but I think I'd rather keep the method definitions independent.",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r464420392,464420392,src/protocol.h
jnewbery,2020-08-04 16:25:00,Should this contain `MSG_FILTERED_WITNESS_BLOCK`?,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r465175043,465175043,src/protocol.h
jonatack,2020-08-08 14:02:50,"Well-spotted; added it in the rebase for now. The one place this helper is currently used (https://github.com/bitcoin/bitcoin/pull/19610/files#diff-eff7adeaec73a769788bb78858815c91L1763) did not include `MSG_FILTERED_WITNESS_BLOCK`, so we'd need to be sure including it doesn't change behavior (or was an oversight).",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r467468070,467468070,src/protocol.h
laanwj,2020-08-09 18:52:56,"Personally I don't really know if it makes sense for ""plain-data"" network message types like CInv to have private fields. I see it more as a struct with helper methods than really an encapsulated object with functionality.",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r467616315,467616315,src/protocol.h
jonatack,2020-08-10 03:55:50,"Oh ok, in that case we may want to make CInv a struct to avoid confusion. As a class, it looked like encapsulation was desirable, and only one place in the code was still accessing `CInv::type` from the outside so it was easy to make it private.",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r467677277,467677277,src/protocol.h
jonatack,2020-08-11 10:59:48,"Er, renaming `CInv` to `Inv` to make it a struct would be too much noise. Done, dropped the last commit ""p2p: refactor CInv::type from public to private class member"".",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r468496660,468496660,src/protocol.h
vasild,2020-08-11 11:00:53,"[continuing conversation from [another PR](https://github.com/bitcoin/bitcoin/pull/19611#discussion_r463552637)]\n\nnit: `s/Blk/Block/`\n\n```sh\n$ git grep -i blk src |wc -l\n     108\n$ git grep -i block src |wc -l\n   11014\n```",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r468497256,468497256,src/protocol.h
jnewbery,2020-08-11 11:11:26,"Did you consider making these switch statements without defaults, so that the compiler warns if a new type is added to the enum but not here?",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r468502188,468502188,src/protocol.h
jnewbery,2020-08-11 11:28:10,"Oh, it looks like `MSG_FILTERED_WITNESS_BLOCK` isn't actually used and is 'reserved for future use': https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki#relay. I recommend removing it from here, removing `IsMsgFilteredWitnessBlk()` (since it's not used anywhere) and adding a comment to `MSG_FILTERED_WITNESS_BLOCK` saying it's unused (I think we could even comment out the value since it'",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r468510147,468510147,src/protocol.h
vasild,2020-08-11 11:44:34,"Could this result in unintended behavioral change?\n\nPreviously if `inv.type == MSG_FILTERED_WITNESS_BLOCK` we would not execute the code inside this `if` block. With this patch we would execute it.\n\nRelated to https://github.com/bitcoin/bitcoin/pull/19610#discussion_r465175043",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r468518248,468518248,src/net_processing.cpp
jonatack,2020-08-19 14:20:59,That message type is unused (see https://github.com/bitcoin/bitcoin/pull/19610#discussion_r468510147) and has since been commented out by #19721 (merged).,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r473067048,473067048,src/net_processing.cpp
jonatack,2020-08-19 14:21:37,Removing it in the rebase.,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r473067546,473067546,src/net_processing.cpp
jonatack,2020-08-19 14:40:30,"I prefer to pass on this for these reasons:\n(a) to maintain a consistent naming style in CInv (`tx`, `blk`)\n(b) `block` would make the methods names longer\n(c) `blk` is an established abbreviation: in the codebase, block data files called `blk*.dat`, etc.\n(d) the shorter `blk` seems more consistent with the abbreviated naming style in use in recent PRs like #19569\n",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r473082193,473082193,src/protocol.h
jonatack,2020-08-19 15:57:23,"> Did you consider making these switch statements without defaults, so that the compiler warns if a new type is added to the enum but not here?\n\nI think that requires turning `enum GetDataMsg` into an `enum class`, and changing the enum type from `int` to `GetDataMsg` would break the remaining five `GetDataMsg::MSG_BLOCK/MSG_WTX | GetFetchFlags(pfrom)` operations.",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r473137176,473137176,src/protocol.h
jnewbery,2020-08-21 15:51:05,Perhaps we should add an else branch after this that logs that an unknown INV type was received. Previously we'd log it as AlreadyHave.,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r474783120,474783120,src/net_processing.cpp
jonatack,2020-08-22 08:58:16,"Done in the same commit and updated the commit message, and proposed a commit to move the code immediately after, which sends and logs a GETHEADERS message, into the `inv.IsMsgBlk()` section where it's used.",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r475065839,475065839,src/net_processing.cpp
jnewbery,2020-08-22 09:36:06,"> proposed a commit to move the code immediately after, which sends and logs a GETHEADERS message, into the inv.IsMsgBlk() section where it's used.\n\nThis is a (bad) behaviour change. It means if a peer sends us an `inv` message with multiple MSG_BLOCK items, we'll send a `getheaders` for each of those items instead of just the last one. Each `getheaders` contains a locator, so this could resul",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r475068712,475068712,src/net_processing.cpp
jonatack,2020-08-22 14:22:08,"Oops, I misread the nesting level and the tests didn't mind. Thank you! Dropped the commit, and fixed up the bracket as follows in 3b79249dbd45b43\n```diff\n-        for (CInv &inv : vInv)\n-        {\n+        for (CInv& inv : vInv) {\n```",https://github.com/bitcoin/bitcoin/pull/19610#discussion_r475095794,475095794,src/net_processing.cpp
vasild,2020-08-25 12:39:43,nit: the methods `IsUndefined()` and `IsMsgWitnessTx()` are unused.,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r476415821,476415821,src/protocol.h
jonatack,2020-08-26 09:54:32,Good point; probably worth removing them for now.,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r477180886,477180886,src/protocol.h
jonatack,2020-08-26 10:06:35,Done,https://github.com/bitcoin/bitcoin/pull/19610#discussion_r477187641,477187641,src/protocol.h
