brakmic,2020-05-01 16:44:37,Code review ACK,https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-622464988,622464988,
practicalswift,2020-05-01 18:10:04,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-622498889,622498889,
DrahtBot,2020-05-01 18:46:51,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18857 (build: avoid repetitions when enabling warnings in configure.ac by vasild)\n* #18216 (test, build: Enable -Werror=",https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-622513051,622513051,
fanquake,2020-05-02 01:01:02,"Please don't bundle unrelated changes like https://github.com/bitcoin/bitcoin/pull/18843/commits/fe466a4fdc705d6a368a4babc1c3b44537edf1c9 into a PR like this.\n\n> r1 would be set to 0 on rdrand failure, so initializing it to 0 is a non-functional change.\n\nCan you at least link to documentation that says this is the case. ",https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-622645588,622645588,
vasild,2020-05-03 14:50:06,"> Please don't bundle unrelated changes like [fe466a4](https://github.com/bitcoin/bitcoin/commit/fe466a4fdc705d6a368a4babc1c3b44537edf1c9) into a PR like this.\n\nSorry for that. I considered it would be ok as long as it is a separate commit and the main change in this PR steps on top of it. Now I submitted that dedup as a separate PR at https://github.com/bitcoin/bitcoin/pull/18857, removed it ",https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-623121689,623121689,
vasild,2020-05-03 15:31:07,"It would be more readable to use `_rdrand64_step()` from `immintrin.h` or `__builtin_ia32_rdrand64_step()` instead of `__asm__ volatile ("".byte 0x48, 0x0f, 0xc7, 0xf0; setc %1"" : ""=a""(r1), ""=q""(ok) :: ""cc"");` [reference](https://en.wikipedia.org/wiki/RDRAND#Compilers).\n\nOut of the scope of this PR.",https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-623127710,623127710,
sipa,2020-05-03 18:31:40,"@vasild The annoying part about using intrinsics is that they require moving the code to a separate module and compiling it separately. That's because in order to get access to `_rdrand64_step()`, you need to compile with `-mrdrnd`, which makes the compiler assume that rdrand is available throughout the entire module (which could in theory cause the compiler to emit such instructions even in cases",https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-623158435,623158435,
practicalswift,2020-05-03 18:56:42,ACK 71f183a49b714a28622277fa668d8f9f3dac0aae,https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-623162402,623162402,
laanwj,2020-05-06 11:49:20,ACK 71f183a49b714a28622277fa668d8f9f3dac0aae,https://github.com/bitcoin/bitcoin/pull/18843#issuecomment-624603242,624603242,
MarcoFalke,2020-05-03 14:56:16,"```suggestion\n    uint32_t r1 = 0, r2 = 0; // ...\n```\n\n Mabye also add an inline comment to explain why setting to zero is not a bug?",https://github.com/bitcoin/bitcoin/pull/18843#discussion_r419114946,419114946,src/random.cpp
vasild,2020-05-03 15:22:50,Done: https://github.com/bitcoin/bitcoin/compare/23faed094ecf5f77fa250e57464bab2fb089730c..71f183a49b714a28622277fa668d8f9f3dac0aae,https://github.com/bitcoin/bitcoin/pull/18843#discussion_r419118410,419118410,src/random.cpp
