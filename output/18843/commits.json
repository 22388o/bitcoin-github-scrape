[
  {
    "sha": "71f183a49b714a28622277fa668d8f9f3dac0aae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MWYxODNhNDliNzE0YTI4NjIyMjc3ZmE2NjhkOGY5ZjNkYWMwYWFl",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-05-01T12:05:48Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-05-03T15:21:45Z"
      },
      "message": "build: warn on potentially uninitialized reads\n\nEnable -Wconditional-uninitialized to warn on potentially uninitialized\nreads.\n\nFix the sole such warning in Bitcoin Core in GetRdRand(): r1 would be\nset to 0 on rdrand failure, so initializing it to 0 is a non-functional\nchange.\n\nFrom \"Intel 64 and IA-32 ArchitecturesSoftware Developer's Manual\" [1],\npage 1711: \"CF=1 indicates that the data in the destination is valid.\nOtherwise CF=0 and the data in the destination operand will be returned\nas zeros for the specified width.\"\n\n[1] https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf",
      "tree": {
        "sha": "34c61e4835aff14a38eec1982777a6a6ec47a890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34c61e4835aff14a38eec1982777a6a6ec47a890"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71f183a49b714a28622277fa668d8f9f3dac0aae",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl6u4ZAACgkQVN8G9ktV\ny7/B2R/9GMOTcbVPdsk1gbGo+Ta/0qgdVGTZFt4WG3lgEdCIWy9OkY56kxmQ/xM5\nSvWKZFWOM7fOzcZdeiplHCD0i1LxUgFVrax2bKxgkKpagEg3+ILvKrIAdiD60GEJ\nsFkvny+Q6V4EMEt4uj/lHxfyMsfG+2LMcZ0P0sRXf4KArwfzq5mBMbkplOAQSog2\n8xmNBGk1ZU1Oxf8DUs8bWVOuJTdZEalGDPXwqEeBwTP9CD839bbun0Gq8pDRt4df\n9/jV4jinTRdrtEf4QDTzoTjdb43bKYkVCLeIiutsrvuNQUiGyZ92nkgy04Ew94UJ\nOarSEbgOTtimmhfjdyL7mSwjr/QF61DrCSmqhdEN9feOlhkPw/Hwf0kAogf5tdhC\nM3HWci/3jCFI2Y2+IYh9YEqeBTG+VKIvZBiizBLN+1qwU3oXfgTD1ry4q04/8aoH\n5SmB1sumhC+z7qGl8cd3rLnpNtOzaKvIOv0tMhgYzlGopJUu3Y4+TQ4SALBehKa6\nsOeOt10ob0ZA75HVU56rMrbtBh5dWIS4jtDBM2vRDa896zMEgGboCUh7hKzoJVdk\nSstAYkTnQ9Khy0TPDikpRb0o7T0ByGFXO6X7VPauIJYtud6owFR4ZSofslJxUNZv\nR2LR6sHrQJyaczIFnQgmHPZFAsnnr+7s8IGkUTnvUhXljBThbpfSmmT3ymisrBLR\nvqlskMit0BLR61xCQ6tZEYz6d1/pE00lqB40/qAJhw1ccfrT9rTw+Wv07tr+W1N5\n1PdfltqBQFK9pwRrErOwVt4htyjlSjLctH7Iq8buM34VHFazwIrZi+NLBpQ2MIop\nCCyROhUB7OFu8kOH2q791Hgsmw1EVJZFaO+TTux0ScZFzdJBQDc+usUHrdnFCvy/\nd0cEncIhc4yHNRCaRy5zNJpA5IPH0APord+0LdbQVf79zELSupXXcnPOmvt9IcUD\nOoR8cvsw2wS0LB2K5dcO2rngtimKqyXF71R+wzha0fbAQISK1qEV2y94uzqo65iL\n96oZGlgKaz3zqOevFizCf5wCrl05UF5zV9MGbjC84X4r7jSdFCYNbmcWGJt+tWRp\n/WJnrlRvMnh+8jjdejHC7xc6B5wJWU3gkGdK7jVyHM//Y0bEEyROWVAA5zf+blDM\nkguALzOmyWio3m591MICVbAiA8zVn81J3xka5+hM0PwrAsIeDiJATEXqIFcuWrEw\nrfMtMcCQx6ODYMAtV3VnKdTixKbdxFLJ/Ss4Dk3+Luayk9UFITts48njfKXP2i+G\nPrRQ32t3YdxlvmhaSyjIqaQ8MHlk37Hpglngj/HX1f7XaNOR9W5GwBS3/uxVq5vH\nlUUiezhQKO4zBSc/bRJ7YNdM2J9zXQ==\n=0jsI\n-----END PGP SIGNATURE-----",
        "payload": "tree 34c61e4835aff14a38eec1982777a6a6ec47a890\nparent ddc0a600b38ac6cef044085cdee46649fc437562\nauthor Vasil Dimov <vd@FreeBSD.org> 1588334748 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1588519305 +0200\n\nbuild: warn on potentially uninitialized reads\n\nEnable -Wconditional-uninitialized to warn on potentially uninitialized\nreads.\n\nFix the sole such warning in Bitcoin Core in GetRdRand(): r1 would be\nset to 0 on rdrand failure, so initializing it to 0 is a non-functional\nchange.\n\nFrom \"Intel 64 and IA-32 ArchitecturesSoftware Developer's Manual\" [1],\npage 1711: \"CF=1 indicates that the data in the destination is valid.\nOtherwise CF=0 and the data in the destination operand will be returned\nas zeros for the specified width.\"\n\n[1] https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71f183a49b714a28622277fa668d8f9f3dac0aae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/71f183a49b714a28622277fa668d8f9f3dac0aae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71f183a49b714a28622277fa668d8f9f3dac0aae/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ddc0a600b38ac6cef044085cdee46649fc437562",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddc0a600b38ac6cef044085cdee46649fc437562",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddc0a600b38ac6cef044085cdee46649fc437562"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "821563440ff0b835e66d33be3926cbd539a448e1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71f183a49b714a28622277fa668d8f9f3dac0aae/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71f183a49b714a28622277fa668d8f9f3dac0aae/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=71f183a49b714a28622277fa668d8f9f3dac0aae",
        "patch": "@@ -344,6 +344,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=conditional-uninitialized],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=conditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n@@ -358,6 +359,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wconditional-uninitialized],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wconditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n \n   dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n   dnl unknown options if any other warning is produced. Test the -Wfoo case, and"
      },
      {
        "sha": "79ff72ca8dfd226c4bfa26fceff53cc50951acae",
        "filename": "src/Makefile.leveldb.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71f183a49b714a28622277fa668d8f9f3dac0aae/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71f183a49b714a28622277fa668d8f9f3dac0aae/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=71f183a49b714a28622277fa668d8f9f3dac0aae",
        "patch": "@@ -36,7 +36,7 @@ LEVELDB_CPPFLAGS_INT += -DLEVELDB_PLATFORM_POSIX\n endif\n \n leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)\n-leveldb_libleveldb_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+leveldb_libleveldb_a_CXXFLAGS = $(filter-out -Wconditional-uninitialized -Werror=conditional-uninitialized, $(AM_CXXFLAGS)) $(PIE_FLAGS)\n \n leveldb_libleveldb_a_SOURCES=\n leveldb_libleveldb_a_SOURCES += leveldb/port/port_stdcxx.h"
      },
      {
        "sha": "5b8782d1cee5ff352dd5bb9425df3e546507814f",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71f183a49b714a28622277fa668d8f9f3dac0aae/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71f183a49b714a28622277fa668d8f9f3dac0aae/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=71f183a49b714a28622277fa668d8f9f3dac0aae",
        "patch": "@@ -116,7 +116,10 @@ static uint64_t GetRdRand() noexcept\n     // RdRand may very rarely fail. Invoke it up to 10 times in a loop to reduce this risk.\n #ifdef __i386__\n     uint8_t ok;\n-    uint32_t r1, r2;\n+    // Initialize to 0 to silence a compiler warning that r1 or r2 may be used\n+    // uninitialized. Even if rdrand fails (!ok) it will set the output to 0,\n+    // but there is no way that the compiler could know that.\n+    uint32_t r1 = 0, r2 = 0;\n     for (int i = 0; i < 10; ++i) {\n         __asm__ volatile (\".byte 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r1), \"=q\"(ok) :: \"cc\"); // rdrand %eax\n         if (ok) break;\n@@ -128,7 +131,7 @@ static uint64_t GetRdRand() noexcept\n     return (((uint64_t)r2) << 32) | r1;\n #elif defined(__x86_64__) || defined(__amd64__)\n     uint8_t ok;\n-    uint64_t r1;\n+    uint64_t r1 = 0; // See above why we initialize to 0.\n     for (int i = 0; i < 10; ++i) {\n         __asm__ volatile (\".byte 0x48, 0x0f, 0xc7, 0xf0; setc %1\" : \"=a\"(r1), \"=q\"(ok) :: \"cc\"); // rdrand %rax\n         if (ok) break;"
      }
    ]
  }
]