kiminuo,2021-06-21 20:13:33,"Concept ACK\n\nThanks for improving this.",https://github.com/bitcoin/bitcoin/pull/22292#issuecomment-865314472,865314472,
jonatack,2021-06-24 09:17:51,"Thanks @fanquake, @jarolrod and @kiminuo for the reviews. Updated per feedback and fixed the last commit message (bencharking -> benchmarking).",https://github.com/bitcoin/bitcoin/pull/22292#issuecomment-867479705,867479705,
theStack,2021-06-24 14:44:03,"Concept ACK, nice benchmark doc improvements!\nPlanning to verify the changes more in detail within the next days.",https://github.com/bitcoin/bitcoin/pull/22292#issuecomment-867694157,867694157,
za-kk,2021-07-04 21:02:02,"ACK d8513fe41102dcbfc05235f3b95e33eb1878f880\n\nReviewed documentation and it's definitely an improvement to what was already there, also ran `./src/bench/bench_bitcoin -filter=""AddrManAdd|AddrManGetAddr|Base58CheckEncode|Base58Decode""` and verified format matches with documentation \n\nNote - running `./src/bench/bench_bitcoin -?` causes an error in zsh as `?` is considered a wildcard, instea",https://github.com/bitcoin/bitcoin/pull/22292#issuecomment-873661770,873661770,
jonatack,2021-06-20 17:40:12,"Could mention options here if reviewers think it would be helpful.\n\n```cpp\nbench.run([&] {\n\n...or with options...\n\nbench.batch(NUM).epochs(NUM).epochIterations(NUM).unit(STRING).run([&] {\n```\n",https://github.com/bitcoin/bitcoin/pull/22292#discussion_r654966822,654966822,src/bench/bench.h
jarolrod,2021-06-21 22:08:31,I do think this would be helpful to document here,https://github.com/bitcoin/bitcoin/pull/22292#discussion_r655735911,655735911,src/bench/bench.h
jonatack,2021-06-22 11:43:14,"Thanks for the feedback!  Done, and fixed up the help printed by `src/bench/bench_bitcoin -?`",https://github.com/bitcoin/bitcoin/pull/22292#discussion_r656138048,656138048,src/bench/bench.h
fanquake,2021-06-24 03:18:20,"I think having just `src/bench/bench_bitcoin -?` here is fine. Anyone wanting to see the options can run that, and what they see will be correct. Rather than copy-pasting blocks of output here, that will inevitably end up outdated.",https://github.com/bitcoin/bitcoin/pull/22292#discussion_r657595463,657595463,doc/benchmarking.md
fanquake,2021-06-24 03:27:04,"I think adding a note to look at nanobench.h for options is fine, but adding an arbitrary list of function signatures, most of which we don't use, seems like overkill (may be unlikely in the case of nanobench, but it's also just more opportunity for docs to diverge from the source). The user will likely have to look at the header anyways, to know what the options do.",https://github.com/bitcoin/bitcoin/pull/22292#discussion_r657597976,657597976,src/bench/bench.h
jarolrod,2021-06-24 04:33:59,"> it's also just more opportunity for docs to diverge from the source\n\nthat's a good point, lower cost of maintenance ",https://github.com/bitcoin/bitcoin/pull/22292#discussion_r657617759,657617759,src/bench/bench.h
jonatack,2021-06-24 09:16:12,Done.,https://github.com/bitcoin/bitcoin/pull/22292#discussion_r657775820,657775820,doc/benchmarking.md
jonatack,2021-06-24 09:16:25,Done.,https://github.com/bitcoin/bitcoin/pull/22292#discussion_r657776016,657776016,src/bench/bench.h
