promag,2020-04-10 21:52:06,Worth mentioning that #17905 made this easy (https://github.com/bitcoin/bitcoin/pull/18160#pullrequestreview-364552928) and that #18160 was merged to fix #15015 in 0.19 and 0.20.,https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-612233974,612233974,
ryanofsky,2020-04-15 15:50:18,"Rebased 6dbc52bae9f6f7592da457410f63c52572c49fec -> 605c3f19be5f7a0f1d2651d00b4db9ba009ac1c7 ([`pr/ipc-bal.1`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bal.1) -> [`pr/ipc-bal.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bal.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bal.1-rebase..pr/ipc-bal.2)) due to silent conflict with #17954",https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-614121294,614121294,
ryanofsky,2020-04-15 21:04:06,"Travis failure in wallet_resendwallettransactions seems like it must be caused by a problem in master because this PR is just a gui change which shouldn't be affecting that test at all:\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/675367626#L13955\n\nTravis failure in address sanitizer build is probably caused this PR, and I'm going to try to debug and fix it locally. https://travis-ci.or",https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-614279089,614279089,
meshcollider,2020-04-17 11:21:37,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-615191656,615191656,
DrahtBot,2020-04-23 05:25:34,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-618185691,618185691,
ryanofsky,2020-04-27 20:23:33,"Updated 605c3f19be5f7a0f1d2651d00b4db9ba009ac1c7 -> 6de7f9efc1f18003375997051c3274ecdd4b5860 ([`pr/ipc-bal.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bal.2) -> [`pr/ipc-bal.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bal.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bal.2..pr/ipc-bal.3)) to fix ClientModel use-after-free when shutdown requested https://",https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-620213534,620213534,
ryanofsky,2020-05-01 15:49:14,"Rebased 6de7f9efc1f18003375997051c3274ecdd4b5860 -> d3a56be77a9d112cde4baef4314882170b9f228f ([`pr/ipc-bal.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bal.3) -> [`pr/ipc-bal.4`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bal.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bal.3-rebase..pr/ipc-bal.4)) due to silent conflict with #16426\n",https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-622442700,622442700,
jonasschnelli,2020-05-20 08:59:01,utACK d3a56be77a9d112cde4baef4314882170b9f228f,https://github.com/bitcoin/bitcoin/pull/18587#issuecomment-631341301,631341301,
promag,2020-04-10 22:00:39,"Maybe this should be `>=`? Can't `tryGetBalances` return a block ahead of `m_client_model.getNumBlocks()`?\n\nAlternatively drop 2nd arg from `tryGetBalances` and use `numBlocks = m_client_model.getNumBlocks()`?",https://github.com/bitcoin/bitcoin/pull/18587#discussion_r406961638,406961638,src/qt/walletmodel.cpp
ryanofsky,2020-04-10 22:30:52,"> Maybe this should be `>=`? Can't `tryGetBalances` return a block ahead of `m_client_model.getNumBlocks()`?\n\nNot sure what goal of this suggestion is. >= would make the check less sensitive in case of a rollback. This code is already not sensitive enough because it is assuming chains the same height are identical.\n\n> Alternatively drop 2nd arg from `tryGetBalances` and use `numBlocks = m_",https://github.com/bitcoin/bitcoin/pull/18587#discussion_r406969261,406969261,src/qt/walletmodel.cpp
promag,2020-04-10 22:35:52,"> This code is already not sensitive enough because it is assuming chains the same height are identical\n\nIndeed! ðŸ¤¦ ",https://github.com/bitcoin/bitcoin/pull/18587#discussion_r406970447,406970447,src/qt/walletmodel.cpp
