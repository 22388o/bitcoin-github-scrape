[
  {
    "sha": "cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmU0Y2FkOWU1YWQwNDBhMWRiZmMxNDA5ODYyOGZhMzBhYTg3NDk4",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-03-21T08:12:01Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-03-27T08:22:15Z"
      },
      "message": "[Qt] fix style, formating, comment and indentation problems\n\n- introduced by #3920",
      "tree": {
        "sha": "b9f79e4bf7fe8ff3b06d7b0c41e921df3beb1e53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9f79e4bf7fe8ff3b06d7b0c41e921df3beb1e53"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "47ef1906378dbed72ae1f2ed430fd19fc0d93eaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47ef1906378dbed72ae1f2ed430fd19fc0d93eaf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47ef1906378dbed72ae1f2ed430fd19fc0d93eaf"
      }
    ],
    "stats": {
      "total": 136,
      "additions": 69,
      "deletions": 67
    },
    "files": [
      {
        "sha": "7b264d27c71c4b87fa851278b929c08838918b0a",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 13,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
        "patch": "@@ -392,14 +392,15 @@ void TableViewLastColumnResizingFixer::connectViewHeadersSignals()\n     connect(tableView->horizontalHeader(), SIGNAL(geometriesChanged()), this, SLOT(on_geometriesChanged()));\n }\n \n-//we need to disconnect these while handling the resize events, otherwise we can enter infinite loops\n+// We need to disconnect these while handling the resize events, otherwise we can enter infinite loops.\n void TableViewLastColumnResizingFixer::disconnectViewHeadersSignals()\n {\n     disconnect(tableView->horizontalHeader(), SIGNAL(sectionResized(int,int,int)), this, SLOT(on_sectionResized(int,int,int)));\n     disconnect(tableView->horizontalHeader(), SIGNAL(geometriesChanged()), this, SLOT(on_geometriesChanged()));\n }\n \n-//setup the resize mode, handles compatibility for QT5 and below as the method signatures changed. (refactored here for readability)\n+// Setup the resize mode, handles compatibility for Qt5 and below as the method signatures changed.\n+// Refactored here for readability.\n void TableViewLastColumnResizingFixer::setViewHeaderResizeMode(int logicalIndex, QHeaderView::ResizeMode resizeMode)\n {\n #if QT_VERSION < 0x050000\n@@ -409,7 +410,8 @@ void TableViewLastColumnResizingFixer::setViewHeaderResizeMode(int logicalIndex,\n #endif\n }\n \n-void TableViewLastColumnResizingFixer::resizeColumn(int nColumnIndex, int width) {\n+void TableViewLastColumnResizingFixer::resizeColumn(int nColumnIndex, int width)\n+{\n     tableView->setColumnWidth(nColumnIndex, width);\n     tableView->horizontalHeader()->resizeSection(nColumnIndex, width);\n }\n@@ -438,7 +440,7 @@ int TableViewLastColumnResizingFixer::getAvailableWidthForColumn(int column)\n     return nResult;\n }\n \n-//make sure we don't make the columns wider than the table's viewport's width.\n+// Make sure we don't make the columns wider than the tables viewport width.\n void TableViewLastColumnResizingFixer::adjustTableColumnsWidth()\n {\n     disconnectViewHeadersSignals();\n@@ -453,14 +455,15 @@ void TableViewLastColumnResizingFixer::adjustTableColumnsWidth()\n     }\n }\n \n-//make column use all the space available, useful during window resizing.\n-void TableViewLastColumnResizingFixer::stretchColumnWidth(int column) {\n+// Make column use all the space available, useful during window resizing.\n+void TableViewLastColumnResizingFixer::stretchColumnWidth(int column)\n+{\n     disconnectViewHeadersSignals();\n     resizeColumn(column, getAvailableWidthForColumn(column));\n     connectViewHeadersSignals();\n }\n \n-//when a section is resized this is a slot-proxy for ajustAmountColumnWidth()\n+// When a section is resized this is a slot-proxy for ajustAmountColumnWidth().\n void TableViewLastColumnResizingFixer::on_sectionResized(int logicalIndex, int oldSize, int newSize)\n {\n     adjustTableColumnsWidth();\n@@ -471,8 +474,8 @@ void TableViewLastColumnResizingFixer::on_sectionResized(int logicalIndex, int o\n     }\n }\n \n-//when the table's geometry is ready, we manually perform the Stretch of the \"Message\" column\n-//as the \"Stretch\" resize mode does not allow for interactive resizing.\n+// When the tabless geometry is ready, we manually perform the stretch of the \"Message\" column,\n+// as the \"Stretch\" resize mode does not allow for interactive resizing.\n void TableViewLastColumnResizingFixer::on_geometriesChanged()\n {\n     if ((getColumnsWidth() - this->tableView->horizontalHeader()->width()) != 0)\n@@ -488,9 +491,9 @@ void TableViewLastColumnResizingFixer::on_geometriesChanged()\n  * the resize modes of the last 2 columns of the table and\n  */\n TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* table, int lastColMinimumWidth, int allColsMinimumWidth) :\n-        tableView(table),\n-        lastColumnMinimumWidth(lastColMinimumWidth),\n-        allColumnsMinimumWidth(allColsMinimumWidth)\n+    tableView(table),\n+    lastColumnMinimumWidth(lastColMinimumWidth),\n+    allColumnsMinimumWidth(allColsMinimumWidth)\n {\n     columnCount = tableView->horizontalHeader()->count();\n     lastColumnIndex = columnCount - 1;\n@@ -500,7 +503,6 @@ TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* t\n     setViewHeaderResizeMode(lastColumnIndex, QHeaderView::Interactive);\n }\n \n-\n #ifdef WIN32\n boost::filesystem::path static StartupShortcutPath()\n {"
      },
      {
        "sha": "4f9416d1afec74a010f7f02d3a1fa032e569c8d6",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 25,
        "deletions": 24,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
        "patch": "@@ -5,11 +5,11 @@\n #ifndef GUIUTIL_H\n #define GUIUTIL_H\n \n+#include <QHeaderView>\n #include <QMessageBox>\n #include <QObject>\n #include <QString>\n #include <QTableView>\n-#include <QHeaderView>\n \n #include <boost/filesystem.hpp>\n \n@@ -132,30 +132,31 @@ namespace GUIUtil\n      */\n     class TableViewLastColumnResizingFixer: public QObject\n     {\n-    Q_OBJECT\n-    public:\n-        TableViewLastColumnResizingFixer(QTableView* table, int lastColMinimumWidth, int allColsMinimumWidth);\n-        void stretchColumnWidth(int column);\n+        Q_OBJECT\n \n-    private:\n-        QTableView* tableView;\n-        int lastColumnMinimumWidth;\n-        int allColumnsMinimumWidth;\n-        int lastColumnIndex;\n-        int columnCount;\n-        int secondToLastColumnIndex;\n-\n-        void adjustTableColumnsWidth();\n-        int getAvailableWidthForColumn(int column);\n-        int getColumnsWidth();\n-        void connectViewHeadersSignals();\n-        void disconnectViewHeadersSignals();\n-        void setViewHeaderResizeMode(int logicalIndex, QHeaderView::ResizeMode resizeMode);\n-        void resizeColumn(int nColumnIndex, int width);\n-\n-    private slots:\n-        void on_sectionResized(int logicalIndex, int oldSize, int newSize);\n-        void on_geometriesChanged();\n+        public:\n+            TableViewLastColumnResizingFixer(QTableView* table, int lastColMinimumWidth, int allColsMinimumWidth);\n+            void stretchColumnWidth(int column);\n+\n+        private:\n+            QTableView* tableView;\n+            int lastColumnMinimumWidth;\n+            int allColumnsMinimumWidth;\n+            int lastColumnIndex;\n+            int columnCount;\n+            int secondToLastColumnIndex;\n+\n+            void adjustTableColumnsWidth();\n+            int getAvailableWidthForColumn(int column);\n+            int getColumnsWidth();\n+            void connectViewHeadersSignals();\n+            void disconnectViewHeadersSignals();\n+            void setViewHeaderResizeMode(int logicalIndex, QHeaderView::ResizeMode resizeMode);\n+            void resizeColumn(int nColumnIndex, int width);\n+\n+        private slots:\n+            void on_sectionResized(int logicalIndex, int oldSize, int newSize);\n+            void on_geometriesChanged();\n     };\n \n     bool GetStartOnSystemStartup();"
      },
      {
        "sha": "3ccfb429a619af76b9a056f656317bef7532e512",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
        "patch": "@@ -55,8 +55,6 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(QWidget *parent) :\n     connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n }\n \n-\n-\n void ReceiveCoinsDialog::setModel(WalletModel *model)\n {\n     this->model = model;\n@@ -79,11 +77,9 @@ void ReceiveCoinsDialog::setModel(WalletModel *model)\n         tableView->setColumnWidth(RecentRequestsTableModel::Label, LABEL_COLUMN_WIDTH);\n \n         connect(tableView->selectionModel(),\n-            SIGNAL(selectionChanged(QItemSelection, QItemSelection)),\n-            this,\n+            SIGNAL(selectionChanged(QItemSelection, QItemSelection)), this,\n             SLOT(on_recentRequestsView_selectionChanged(QItemSelection, QItemSelection)));\n-\n-        //(last 2 columns are set when the table geometry is ready) by the columnResizingFixer.\n+        // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH);\n     }\n }\n@@ -202,10 +198,12 @@ void ReceiveCoinsDialog::on_removeRequestButton_clicked()\n     model->getRecentRequestsTableModel()->removeRows(firstIndex.row(), selection.length(), firstIndex.parent());\n }\n \n-//We override the virtual resizeEvent of the QWidget to adjust tablet's column sizes as the table's width is proportional to the dialog's.\n-void ReceiveCoinsDialog::resizeEvent(QResizeEvent* event) {\n-  QWidget::resizeEvent(event);\n-  columnResizingFixer->stretchColumnWidth(RecentRequestsTableModel::Message);\n+// We override the virtual resizeEvent of the QWidget to adjust tables column\n+// sizes as the tables width is proportional to the dialogs width.\n+void ReceiveCoinsDialog::resizeEvent(QResizeEvent* event)\n+{\n+    QWidget::resizeEvent(event);\n+    columnResizingFixer->stretchColumnWidth(RecentRequestsTableModel::Message);\n }\n \n void ReceiveCoinsDialog::keyPressEvent(QKeyEvent *event)"
      },
      {
        "sha": "ab633315974e765f9404be1bd52cc65308bd77f0",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
        "patch": "@@ -6,12 +6,13 @@\n #define RECEIVECOINSDIALOG_H\n \n #include <QDialog>\n+#include <QHeaderView>\n+#include <QItemSelection>\n #include <QKeyEvent>\n #include <QMenu>\n #include <QPoint>\n #include <QVariant>\n-#include <QHeaderView>\n-#include <QItemSelection>\n+\n #include \"guiutil.h\"\n \n namespace Ui {\n@@ -31,16 +32,16 @@ class ReceiveCoinsDialog : public QDialog\n \n public:\n     enum ColumnWidths {\n-      DATE_COLUMN_WIDTH = 130,\n-      LABEL_COLUMN_WIDTH = 120,\n-      AMOUNT_MINIMUM_COLUMN_WIDTH = 160,\n-      MINIMUM_COLUMN_WIDTH = 130\n+        DATE_COLUMN_WIDTH = 130,\n+        LABEL_COLUMN_WIDTH = 120,\n+        AMOUNT_MINIMUM_COLUMN_WIDTH = 160,\n+        MINIMUM_COLUMN_WIDTH = 130\n     };\n \n     explicit ReceiveCoinsDialog(QWidget *parent = 0);\n     ~ReceiveCoinsDialog();\n-    void setModel(WalletModel *model);\n \n+    void setModel(WalletModel *model);\n \n public slots:\n     void clear();"
      },
      {
        "sha": "a363150919ba2d345944ed0a81933268e1063963",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
        "patch": "@@ -438,8 +438,10 @@ void TransactionView::focusTransaction(const QModelIndex &idx)\n     transactionView->setFocus();\n }\n \n-//We override the virtual resizeEvent of the QWidget to adjust tablet's column sizes as the table's width is proportional to the dialog's.\n-void TransactionView::resizeEvent(QResizeEvent* event) {\n-  QWidget::resizeEvent(event);\n-  columnResizingFixer->stretchColumnWidth(TransactionTableModel::ToAddress);\n+// We override the virtual resizeEvent of the QWidget to adjust tables column\n+// sizes as the tables width is proportional to the dialogs width.\n+void TransactionView::resizeEvent(QResizeEvent* event)\n+{\n+    QWidget::resizeEvent(event);\n+    columnResizingFixer->stretchColumnWidth(TransactionTableModel::ToAddress);\n }"
      },
      {
        "sha": "ef4f9d6f34a5b157c828c5ecfa32d422f1a81e39",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
        "patch": "@@ -5,9 +5,10 @@\n #ifndef TRANSACTIONVIEW_H\n #define TRANSACTIONVIEW_H\n \n-#include <QWidget>\n #include \"guiutil.h\"\n \n+#include <QWidget>\n+\n class TransactionFilterProxy;\n class WalletModel;\n \n@@ -46,11 +47,11 @@ class TransactionView : public QWidget\n     };\n \n     enum ColumnWidths {\n-      STATUS_COLUMN_WIDTH = 23,\n-      DATE_COLUMN_WIDTH = 120,\n-      TYPE_COLUMN_WIDTH = 120,\n-      AMOUNT_MINIMUM_COLUMN_WIDTH = 120,\n-      MINIMUM_COLUMN_WIDTH = 23\n+        STATUS_COLUMN_WIDTH = 23,\n+        DATE_COLUMN_WIDTH = 120,\n+        TYPE_COLUMN_WIDTH = 120,\n+        AMOUNT_MINIMUM_COLUMN_WIDTH = 120,\n+        MINIMUM_COLUMN_WIDTH = 23\n     };\n \n private:"
      },
      {
        "sha": "a5a7df08674f7bd595f36e4bc1724fd794ec2968",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfe4cad9e5ad040a1dbfc14098628fa30aa87498/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=cfe4cad9e5ad040a1dbfc14098628fa30aa87498",
        "patch": "@@ -1918,6 +1918,3 @@ Value getwalletinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n     return obj;\n }\n-\n-\n-"
      }
    ]
  }
]