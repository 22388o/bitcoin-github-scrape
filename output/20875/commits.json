[
  {
    "sha": "bfcd7fc8c7a7df344e206362b6097431fd87d242",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZmNkN2ZjOGM3YTdkZjM0NGUyMDYzNjJiNjA5NzQzMWZkODdkMjQy",
    "commit": {
      "author": {
        "name": "Samuel Marks",
        "email": "807580+SamuelMarks@users.noreply.github.com",
        "date": "2021-01-07T12:21:27Z"
      },
      "committer": {
        "name": "Samuel Marks",
        "email": "807580+SamuelMarks@users.noreply.github.com",
        "date": "2021-01-07T12:21:27Z"
      },
      "message": "[*.cc,*.cpp] Reduce push_back",
      "tree": {
        "sha": "78f366c0f834ee24bc611d484b119e5703d2f644",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78f366c0f834ee24bc611d484b119e5703d2f644"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfcd7fc8c7a7df344e206362b6097431fd87d242",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCABKFiEEXsPGxNZLI7pmlVh5Q/2O3kLhp5kFAl/2/McsHDgwNzU4MCtz\nYW11ZWxtYXJrc0B1c2Vycy5ub3JlcGx5LmdpdGh1Yi5jb20ACgkQQ/2O3kLhp5mB\nnxAAlgOQ1FLzBMJ+lL5rCV7Tx1BY8cvyzqbDL6SAhxgVDWHhOmXYvU0S3h6iwhwL\nNucTUNeU+kgPU/xSnBKrD/sIaMtrxdC9DHBDu5Hy89KAMPitCXECJIGIwGoNWB8b\ntdBVmhXQ/zG8kD5v39yzkh0wsv03Wd0ANS3NxuH8s/u/+0niPWOKSbgsiSbdxpXJ\nO29IYS1bGIOpS8Hi2FKUUI0QQOmWs+d5E8N28RlefGtx9oYNfix6UW+CYCJ5T7yV\nerjybaBbiR4s/qy9iRqZl75nKfzK7qMepOHyNr4feafNLZrv/IN86QoxY9ztbet2\n5NbxamXsbWUJhSsQ8Lczvn6Phq6I9s0YQ2XNMeu+G5A+eQokULJRfAhM74A+14OL\n9ZK0NtTXZD9C9wJ03IEU+nD5hOwgUfFEXlavc5THie0YJReFaU8NHNZ0GhGcLaqu\nlZUxqTO8RWaR0Jj+BDXKUYaOI7NBXzph1m/cf9A9+9MMby83oUclUSQv5kkX9S9A\nWDloJI1/GIOBM9EN9ns9gBgxUVU/qP5ZReQ0Mx1uKlCN8BvJUeJZbhD2mYOQWlJA\n6vlOOqRxIgEF5fUGzVtcgQe8b3lgXlxLNx4MmkaR35t8ySv350cnFWdJ7lf1sFf3\ncWaurbDp7RXAj+haEp+ELahRP7W8kiB55qpRttVDQ4l99dg=\n=X09g\n-----END PGP SIGNATURE-----",
        "payload": "tree 78f366c0f834ee24bc611d484b119e5703d2f644\nparent 8a720ced5ff2fdd23b6ec7688998ad29e54fac98\nauthor Samuel Marks <807580+SamuelMarks@users.noreply.github.com> 1610022087 +1100\ncommitter Samuel Marks <807580+SamuelMarks@users.noreply.github.com> 1610022087 +1100\n\n[*.cc,*.cpp] Reduce push_back\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfcd7fc8c7a7df344e206362b6097431fd87d242",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bfcd7fc8c7a7df344e206362b6097431fd87d242",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfcd7fc8c7a7df344e206362b6097431fd87d242/comments",
    "author": {
      "login": "SamuelMarks",
      "id": 807580,
      "node_id": "MDQ6VXNlcjgwNzU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/807580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamuelMarks",
      "html_url": "https://github.com/SamuelMarks",
      "followers_url": "https://api.github.com/users/SamuelMarks/followers",
      "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions",
      "organizations_url": "https://api.github.com/users/SamuelMarks/orgs",
      "repos_url": "https://api.github.com/users/SamuelMarks/repos",
      "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamuelMarks/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "SamuelMarks",
      "id": 807580,
      "node_id": "MDQ6VXNlcjgwNzU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/807580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamuelMarks",
      "html_url": "https://github.com/SamuelMarks",
      "followers_url": "https://api.github.com/users/SamuelMarks/followers",
      "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions",
      "organizations_url": "https://api.github.com/users/SamuelMarks/orgs",
      "repos_url": "https://api.github.com/users/SamuelMarks/repos",
      "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamuelMarks/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a720ced5ff2fdd23b6ec7688998ad29e54fac98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a720ced5ff2fdd23b6ec7688998ad29e54fac98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a720ced5ff2fdd23b6ec7688998ad29e54fac98"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 55,
      "deletions": 51
    },
    "files": [
      {
        "sha": "76e1fa012d0dbba9c1c303d514bc4b346d9ccaec",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -242,11 +242,12 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         if (!args.empty()) {\n             throw std::runtime_error(\"-getinfo takes no arguments\");\n         }\n-        UniValue result(UniValue::VARR);\n-        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n-        result.push_back(JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO));\n-        result.push_back(JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO));\n-        result.push_back(JSONRPCRequestObj(\"getbalances\", NullUniValue, ID_BALANCES));\n+        UniValue result(UniValue::VARR) = {\n+                JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO),\n+                JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO),\n+                JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO),\n+                JSONRPCRequestObj(\"getbalances\", NullUniValue, ID_BALANCES)\n+        };\n         return result;\n     }\n "
      },
      {
        "sha": "2278a31ca9a8d21be071e2bb6438af122bf7601b",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -295,8 +295,8 @@ static bool HTTPBindAddresses(struct evhttp* http)\n \n     // Determine what addresses to bind to\n     if (!(gArgs.IsArgSet(\"-rpcallowip\") && gArgs.IsArgSet(\"-rpcbind\"))) { // Default to loopback if not allowing external IPs\n-        endpoints.push_back(std::make_pair(\"::1\", http_port));\n-        endpoints.push_back(std::make_pair(\"127.0.0.1\", http_port));\n+        endpoints.emplace_back(std::make_pair(\"::1\", http_port));\n+        endpoints.emplace_back(std::make_pair(\"127.0.0.1\", http_port));\n         if (gArgs.IsArgSet(\"-rpcallowip\")) {\n             LogPrintf(\"WARNING: option -rpcallowip was specified without -rpcbind; this doesn't usually make sense\\n\");\n         }"
      },
      {
        "sha": "1be8cede78089f201f9e1b151ce2f0598aee9f00",
        "filename": "src/leveldb/util/coding_test.cc",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/leveldb/util/coding_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/leveldb/util/coding_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding_test.cc?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -98,12 +98,13 @@ TEST(Coding, Varint32) {\n \n TEST(Coding, Varint64) {\n   // Construct the list of values to check\n-  std::vector<uint64_t> values;\n-  // Some special values\n-  values.push_back(0);\n-  values.push_back(100);\n-  values.push_back(~static_cast<uint64_t>(0));\n-  values.push_back(~static_cast<uint64_t>(0) - 1);\n+  std::vector<uint64_t> values = {\n+          // Some special values\n+          0,\n+          100,\n+          (~static_cast<uint64_t>(0)),\n+          (~static_cast<uint64_t>(0) - 1)\n+  };\n   for (uint32_t k = 0; k < 64; k++) {\n     // Test values near powers of two\n     const uint64_t power = 1ull << k;"
      },
      {
        "sha": "d66bb39b562b9f1cfbc82e9d0eec80aa21b0850c",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -503,12 +503,13 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     } else {\n         return error(\"Proxy requested wrong authentication method %02x\", pchRet1[1]);\n     }\n-    std::vector<uint8_t> vSocks5;\n-    vSocks5.push_back(SOCKSVersion::SOCKS5); // VER protocol version\n-    vSocks5.push_back(SOCKS5Command::CONNECT); // CMD CONNECT\n-    vSocks5.push_back(0x00); // RSV Reserved must be 0\n-    vSocks5.push_back(SOCKS5Atyp::DOMAINNAME); // ATYP DOMAINNAME\n-    vSocks5.push_back(strDest.size()); // Length<=255 is checked at beginning of function\n+    std::vector<uint8_t> vSocks5 = {\n+            SOCKSVersion::SOCKS5, // VER protocol version\n+            SOCKS5Command::CONNECT, // CMD CONNECT\n+            0x00, // RSV Reserved must be 0\n+            SOCKS5Atyp::DOMAINNAME, // ATYP DOMAINNAME\n+            strDest.size() // Length<=255 is checked at beginning of function\n+    };\n     vSocks5.insert(vSocks5.end(), strDest.begin(), strDest.end());\n     vSocks5.push_back((port >> 8) & 0xFF);\n     vSocks5.push_back((port >> 0) & 0xFF);"
      },
      {
        "sha": "3e0f8e927266d7432e1328b0562f16b4492dc858",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -798,16 +798,17 @@ static RPCHelpMan getblocktemplate()\n \n     arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n \n-    UniValue aMutable(UniValue::VARR);\n-    aMutable.push_back(\"time\");\n-    aMutable.push_back(\"transactions\");\n-    aMutable.push_back(\"prevblock\");\n+    UniValue aMutable(UniValue::VARR) = {\n+        \"time\",\n+        \"transactions\",\n+        \"prevblock\"\n+    };\n \n-    UniValue result(UniValue::VOBJ);\n-    result.pushKV(\"capabilities\", aCaps);\n+    UniValue result(UniValue::VOBJ) = {(\"capabilities\", aCaps)};\n \n-    UniValue aRules(UniValue::VARR);\n-    aRules.push_back(\"csv\");\n+    UniValue aRules(UniValue::VARR) = {\n+        \"csv\"\n+    };\n     if (!fPreSegWit) aRules.push_back(\"!segwit\");\n     UniValue vbavailable(UniValue::VOBJ);\n     for (int j = 0; j < (int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j) {"
      },
      {
        "sha": "1e65e072eac732aa0371dc86942e0c548f9d1606",
        "filename": "src/test/merkle_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/test/merkle_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/test/merkle_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/merkle_tests.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -318,9 +318,10 @@ BOOST_AUTO_TEST_CASE(merkle_test_LeftSubtreeRightSubtree)\n     uint256 root = BlockMerkleRoot(block);\n     uint256 rootOfLeftSubtree = BlockMerkleRoot(leftSubtreeBlock);\n     uint256 rootOfRightSubtree = BlockMerkleRoot(rightSubtreeBlock);\n-    std::vector<uint256> leftRight;\n-    leftRight.push_back(rootOfLeftSubtree);\n-    leftRight.push_back(rootOfRightSubtree);\n+    std::vector<uint256> leftRight = {\n+        rootOfLeftSubtree,\n+        rootOfRightSubtree\n+    };\n     uint256 rootOfLR = ComputeMerkleRoot(leftRight);\n \n     BOOST_CHECK_EQUAL(root, rootOfLR);"
      },
      {
        "sha": "e195f57002327365191251824740685062193ede",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 12,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -392,13 +392,14 @@ BOOST_AUTO_TEST_CASE(test_big_witness_transaction)\n     CKeyID hash = key.GetPubKey().GetID();\n     CScript scriptPubKey = CScript() << OP_0 << std::vector<unsigned char>(hash.begin(), hash.end());\n \n-    std::vector<int> sigHashes;\n-    sigHashes.push_back(SIGHASH_NONE | SIGHASH_ANYONECANPAY);\n-    sigHashes.push_back(SIGHASH_SINGLE | SIGHASH_ANYONECANPAY);\n-    sigHashes.push_back(SIGHASH_ALL | SIGHASH_ANYONECANPAY);\n-    sigHashes.push_back(SIGHASH_NONE);\n-    sigHashes.push_back(SIGHASH_SINGLE);\n-    sigHashes.push_back(SIGHASH_ALL);\n+    std::vector<int> sigHashes = {\n+            SIGHASH_NONE | SIGHASH_ANYONECANPAY,\n+            SIGHASH_SINGLE | SIGHASH_ANYONECANPAY,\n+            SIGHASH_ALL | SIGHASH_ANYONECANPAY,\n+            SIGHASH_NONE,\n+            SIGHASH_SINGLE,\n+            SIGHASH_ALL\n+    };\n \n     // create a big transaction of 4500 inputs signed by the same key\n     for(uint32_t ij = 0; ij < 4500; ij++) {\n@@ -446,9 +447,8 @@ BOOST_AUTO_TEST_CASE(test_big_witness_transaction)\n     }\n \n     for(uint32_t i = 0; i < mtx.vin.size(); i++) {\n-        std::vector<CScriptCheck> vChecks;\n+        std::vector<CScriptCheck> vChecks = {CScriptCheck()};\n         CScriptCheck check(coins[tx.vin[i].prevout.n].out, tx, i, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS, false, &txdata);\n-        vChecks.push_back(CScriptCheck());\n         check.swap(vChecks.back());\n         control.Add(vChecks);\n     }\n@@ -493,9 +493,10 @@ BOOST_AUTO_TEST_CASE(test_witness)\n     scriptPubkey2 << ToByteVector(pubkey2) << OP_CHECKSIG;\n     scriptPubkey1L << ToByteVector(pubkey1L) << OP_CHECKSIG;\n     scriptPubkey2L << ToByteVector(pubkey2L) << OP_CHECKSIG;\n-    std::vector<CPubKey> oneandthree;\n-    oneandthree.push_back(pubkey1);\n-    oneandthree.push_back(pubkey3);\n+    std::vector<CPubKey> oneandthree = {\n+            pubkey1,\n+            pubkey3\n+    };\n     scriptMulti = GetScriptForMultisig(2, oneandthree);\n     BOOST_CHECK(keystore.AddCScript(scriptPubkey1));\n     BOOST_CHECK(keystore.AddCScript(scriptPubkey2));"
      },
      {
        "sha": "b31ffe5b9c66a01cb551a1effc252e939a5708cc",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -1608,11 +1608,11 @@ BOOST_AUTO_TEST_CASE(test_FormatParagraph)\n \n BOOST_AUTO_TEST_CASE(test_FormatSubVersion)\n {\n-    std::vector<std::string> comments;\n-    comments.push_back(std::string(\"comment1\"));\n-    std::vector<std::string> comments2;\n-    comments2.push_back(std::string(\"comment1\"));\n-    comments2.push_back(SanitizeString(std::string(\"Comment2; .,_?@-; !\\\"#$%&'()*+/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)); // Semicolon is discouraged but not forbidden by BIP-0014\n+    std::vector<std::string> comments = {std::string(\"comment1\")};\n+    std::vector<std::string> comments2 = {\n+            std::string(\"comment1\"),\n+            SanitizeString(std::string(\"Comment2; .,_?@-; !\\\"#$%&'()*+/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)) // Semicolon is discouraged but not forbidden by BIP-0014\n+    };\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, std::vector<std::string>()),std::string(\"/Test:9.99.0/\"));\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments),std::string(\"/Test:9.99.0(comment1)/\"));\n     BOOST_CHECK_EQUAL(FormatSubVersion(\"Test\", 99900, comments2),std::string(\"/Test:9.99.0(comment1; Comment2; .,_?@-; )/\"));"
      },
      {
        "sha": "df2600cfb6ee6966ff23f555acb7dca054cafe86",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -3152,8 +3152,7 @@ void CChainState::ReceivedBlockTransactions(const CBlock& block, CBlockIndex* pi\n \n     if (pindexNew->pprev == nullptr || pindexNew->pprev->HaveTxsDownloaded()) {\n         // If pindexNew is the genesis block or all parents are BLOCK_VALID_TRANSACTIONS.\n-        std::deque<CBlockIndex*> queue;\n-        queue.push_back(pindexNew);\n+        std::deque<CBlockIndex*> queue = {pindexNew};\n \n         // Recursively process any descendant blocks that now may be eligible to be connected.\n         while (!queue.empty()) {"
      },
      {
        "sha": "e188c7f9a186fcf525e20a16a0512620334ec633",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcd7fc8c7a7df344e206362b6097431fd87d242/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "patch": "@@ -404,8 +404,7 @@ RPCHelpMan removeprunedfunds()\n     LOCK(pwallet->cs_wallet);\n \n     uint256 hash(ParseHashV(request.params[0], \"txid\"));\n-    std::vector<uint256> vHash;\n-    vHash.push_back(hash);\n+    std::vector<uint256> vHash {hash};\n     std::vector<uint256> vHashOut;\n \n     if (pwallet->ZapSelectTx(vHash, vHashOut) != DBErrors::LOAD_OK) {"
      }
    ]
  },
  {
    "sha": "caaaa0085f9b2f7d3908a56a5dca70401d07e297",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWFhYTAwODVmOWIyZjdkMzkwOGE1NmE1ZGNhNzA0MDFkMDdlMjk3",
    "commit": {
      "author": {
        "name": "Samuel Marks",
        "email": "807580+SamuelMarks@users.noreply.github.com",
        "date": "2021-01-07T12:37:40Z"
      },
      "committer": {
        "name": "Samuel Marks",
        "email": "807580+SamuelMarks@users.noreply.github.com",
        "date": "2021-01-07T12:37:40Z"
      },
      "message": "[*.cc,*.cpp] Reduce push_back through initialiser syntax",
      "tree": {
        "sha": "793dba80d18a2758a7b07ee278e25caf9528ea23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/793dba80d18a2758a7b07ee278e25caf9528ea23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/caaaa0085f9b2f7d3908a56a5dca70401d07e297",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCABKFiEEXsPGxNZLI7pmlVh5Q/2O3kLhp5kFAl/3AJQsHDgwNzU4MCtz\nYW11ZWxtYXJrc0B1c2Vycy5ub3JlcGx5LmdpdGh1Yi5jb20ACgkQQ/2O3kLhp5l1\ncxAAjFojy0iAa7CuA4WF8TaNzq23yRgGXZt0zPQesFN1EaBikObv5uz3JzyJCXC7\niHbdORAALFt8k2CTm68dcCACFzPKOwb9mkVBrPyW9wd+KWVFEfj+rIAKJHtEl/RI\nelpofmhkSSthCHUiV2MQMtgK+UwNI17D4/3mc+bsyX3+ZyEsYPalIpU7tYgaafJY\nJlgbWinAcH/MDKLic+hzgbqSANFpVdKa8ous0fm5r5SFMKmj6zrw76oTgsft9/3Y\nU2xX8T2LSeZie2u5cXzBTfqQB9o3fWuknLY8N73bdFaSbQCmMKlRAc9lWGMSCcPN\nwP/O7EmXeAdhMhnjIp/PrNzvpHUkG3e+1KsFFI9MqHAuQ8EK+e9/ca6iKA3mKdPe\n1RJx6VB96y7NUf1dwQxBzT7KIFcm83qism/nb3ecSBhqcYSJbR1s3VDybQOzN4Ju\niKWcA5ExwESHe6uHAELN54L0vsfXTTG2eNP0k48GWWsO5fcE1gjkWJvajI1Hal83\nJVejMsJq8KrnJP1d1J7VxeZOad2iarx5VlcKhapCCOxJA/2dzHNZqhHLggowYNj/\n06Ohmx0EDKuUHF1D/HNVrxhjoIze9c2LeOJl3g/O7FDlMCqN2yflsIBMjNC82o7N\n/ZmQVOdOSxvhVLk60EojdclAE78B4rchaTnfclsqdOaYVus=\n=2VoS\n-----END PGP SIGNATURE-----",
        "payload": "tree 793dba80d18a2758a7b07ee278e25caf9528ea23\nparent bfcd7fc8c7a7df344e206362b6097431fd87d242\nauthor Samuel Marks <807580+SamuelMarks@users.noreply.github.com> 1610023060 +1100\ncommitter Samuel Marks <807580+SamuelMarks@users.noreply.github.com> 1610023060 +1100\n\n[*.cc,*.cpp] Reduce push_back through initialiser syntax\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caaaa0085f9b2f7d3908a56a5dca70401d07e297",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/caaaa0085f9b2f7d3908a56a5dca70401d07e297",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caaaa0085f9b2f7d3908a56a5dca70401d07e297/comments",
    "author": {
      "login": "SamuelMarks",
      "id": 807580,
      "node_id": "MDQ6VXNlcjgwNzU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/807580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamuelMarks",
      "html_url": "https://github.com/SamuelMarks",
      "followers_url": "https://api.github.com/users/SamuelMarks/followers",
      "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions",
      "organizations_url": "https://api.github.com/users/SamuelMarks/orgs",
      "repos_url": "https://api.github.com/users/SamuelMarks/repos",
      "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamuelMarks/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "SamuelMarks",
      "id": 807580,
      "node_id": "MDQ6VXNlcjgwNzU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/807580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamuelMarks",
      "html_url": "https://github.com/SamuelMarks",
      "followers_url": "https://api.github.com/users/SamuelMarks/followers",
      "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions",
      "organizations_url": "https://api.github.com/users/SamuelMarks/orgs",
      "repos_url": "https://api.github.com/users/SamuelMarks/repos",
      "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamuelMarks/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfcd7fc8c7a7df344e206362b6097431fd87d242",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bfcd7fc8c7a7df344e206362b6097431fd87d242"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 14,
      "deletions": 13
    },
    "files": [
      {
        "sha": "6a39318610b7261f62c97ad677ad0eee043303a1",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -242,7 +242,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         if (!args.empty()) {\n             throw std::runtime_error(\"-getinfo takes no arguments\");\n         }\n-        UniValue result(UniValue::VARR) = {\n+        UniValue result(UniValue::VARR) {\n                 JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO),\n                 JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO),\n                 JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO),"
      },
      {
        "sha": "1ad88e495fe8c073a282d9c0709f5718a7015a08",
        "filename": "src/leveldb/util/coding_test.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/leveldb/util/coding_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/leveldb/util/coding_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding_test.cc?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -98,7 +98,7 @@ TEST(Coding, Varint32) {\n \n TEST(Coding, Varint64) {\n   // Construct the list of values to check\n-  std::vector<uint64_t> values = {\n+  std::vector<uint64_t> values {\n           // Some special values\n           0,\n           100,"
      },
      {
        "sha": "c35883a84dbaed22d46a7d1c5ace3e792eb5edaa",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -503,7 +503,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     } else {\n         return error(\"Proxy requested wrong authentication method %02x\", pchRet1[1]);\n     }\n-    std::vector<uint8_t> vSocks5 = {\n+    std::vector<uint8_t> vSocks5 {\n             SOCKSVersion::SOCKS5, // VER protocol version\n             SOCKS5Command::CONNECT, // CMD CONNECT\n             0x00, // RSV Reserved must be 0"
      },
      {
        "sha": "e8a5b8be1c86effc2ce6685ff0986cbb6c604787",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -798,15 +798,16 @@ static RPCHelpMan getblocktemplate()\n \n     arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n \n-    UniValue aMutable(UniValue::VARR) = {\n+    UniValue aMutable(UniValue::VARR) {\n         \"time\",\n         \"transactions\",\n         \"prevblock\"\n     };\n \n-    UniValue result(UniValue::VOBJ) = {(\"capabilities\", aCaps)};\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"capabilities\", aCaps);\n \n-    UniValue aRules(UniValue::VARR) = {\n+    UniValue aRules(UniValue::VARR) {\n         \"csv\"\n     };\n     if (!fPreSegWit) aRules.push_back(\"!segwit\");"
      },
      {
        "sha": "905a66aff00278967ed88a402e4ef3c6fbd911d1",
        "filename": "src/test/merkle_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/test/merkle_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/test/merkle_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/merkle_tests.cpp?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -318,7 +318,7 @@ BOOST_AUTO_TEST_CASE(merkle_test_LeftSubtreeRightSubtree)\n     uint256 root = BlockMerkleRoot(block);\n     uint256 rootOfLeftSubtree = BlockMerkleRoot(leftSubtreeBlock);\n     uint256 rootOfRightSubtree = BlockMerkleRoot(rightSubtreeBlock);\n-    std::vector<uint256> leftRight = {\n+    std::vector<uint256> leftRight {\n         rootOfLeftSubtree,\n         rootOfRightSubtree\n     };"
      },
      {
        "sha": "fd57676edc950eeafb93835de8a93bdbb1ca93c5",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -392,7 +392,7 @@ BOOST_AUTO_TEST_CASE(test_big_witness_transaction)\n     CKeyID hash = key.GetPubKey().GetID();\n     CScript scriptPubKey = CScript() << OP_0 << std::vector<unsigned char>(hash.begin(), hash.end());\n \n-    std::vector<int> sigHashes = {\n+    std::vector<int> sigHashes {\n             SIGHASH_NONE | SIGHASH_ANYONECANPAY,\n             SIGHASH_SINGLE | SIGHASH_ANYONECANPAY,\n             SIGHASH_ALL | SIGHASH_ANYONECANPAY,\n@@ -447,7 +447,7 @@ BOOST_AUTO_TEST_CASE(test_big_witness_transaction)\n     }\n \n     for(uint32_t i = 0; i < mtx.vin.size(); i++) {\n-        std::vector<CScriptCheck> vChecks = {CScriptCheck()};\n+        std::vector<CScriptCheck> vChecks {CScriptCheck()};\n         CScriptCheck check(coins[tx.vin[i].prevout.n].out, tx, i, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS, false, &txdata);\n         check.swap(vChecks.back());\n         control.Add(vChecks);\n@@ -493,7 +493,7 @@ BOOST_AUTO_TEST_CASE(test_witness)\n     scriptPubkey2 << ToByteVector(pubkey2) << OP_CHECKSIG;\n     scriptPubkey1L << ToByteVector(pubkey1L) << OP_CHECKSIG;\n     scriptPubkey2L << ToByteVector(pubkey2L) << OP_CHECKSIG;\n-    std::vector<CPubKey> oneandthree = {\n+    std::vector<CPubKey> oneandthree {\n             pubkey1,\n             pubkey3\n     };"
      },
      {
        "sha": "289ea6f3ea03ebbb1303d44c6e3436c54b4b88e2",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -1608,8 +1608,8 @@ BOOST_AUTO_TEST_CASE(test_FormatParagraph)\n \n BOOST_AUTO_TEST_CASE(test_FormatSubVersion)\n {\n-    std::vector<std::string> comments = {std::string(\"comment1\")};\n-    std::vector<std::string> comments2 = {\n+    std::vector<std::string> comments {std::string(\"comment1\")};\n+    std::vector<std::string> comments2 {\n             std::string(\"comment1\"),\n             SanitizeString(std::string(\"Comment2; .,_?@-; !\\\"#$%&'()*+/<=>[]\\\\^`{|}~\"), SAFE_CHARS_UA_COMMENT)) // Semicolon is discouraged but not forbidden by BIP-0014\n     };"
      },
      {
        "sha": "621582f834b7329598c2c2688bc297c3e8877e9f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caaaa0085f9b2f7d3908a56a5dca70401d07e297/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "patch": "@@ -3152,7 +3152,7 @@ void CChainState::ReceivedBlockTransactions(const CBlock& block, CBlockIndex* pi\n \n     if (pindexNew->pprev == nullptr || pindexNew->pprev->HaveTxsDownloaded()) {\n         // If pindexNew is the genesis block or all parents are BLOCK_VALID_TRANSACTIONS.\n-        std::deque<CBlockIndex*> queue = {pindexNew};\n+        std::deque<CBlockIndex*> queue {pindexNew};\n \n         // Recursively process any descendant blocks that now may be eligible to be connected.\n         while (!queue.empty()) {"
      }
    ]
  },
  {
    "sha": "56c579d6b12efba3fe02fcc591234001657cb226",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmM1NzlkNmIxMmVmYmEzZmUwMmZjYzU5MTIzNDAwMTY1N2NiMjI2",
    "commit": {
      "author": {
        "name": "Samuel Marks",
        "email": "807580+SamuelMarks@users.noreply.github.com",
        "date": "2021-01-07T12:41:00Z"
      },
      "committer": {
        "name": "Samuel Marks",
        "email": "807580+SamuelMarks@users.noreply.github.com",
        "date": "2021-01-07T12:41:00Z"
      },
      "message": "[src/leveldb/util/coding_test.cc] Revert to 8a720ced5ff2fdd23b6ec7688998ad29e54fac98",
      "tree": {
        "sha": "ec37e87df7a65f4ea2b54d94c88a8323b5b0a94a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec37e87df7a65f4ea2b54d94c88a8323b5b0a94a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56c579d6b12efba3fe02fcc591234001657cb226",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCABKFiEEXsPGxNZLI7pmlVh5Q/2O3kLhp5kFAl/3AVwsHDgwNzU4MCtz\nYW11ZWxtYXJrc0B1c2Vycy5ub3JlcGx5LmdpdGh1Yi5jb20ACgkQQ/2O3kLhp5kG\nQQ/+ID/NaGqNDPlEgPt37ftrkkj0Y1PLH2NKuHhPcU8BbfCAZBjeorRyACgGVFyD\nbPlKhrgrNK48LxbF4ZyNszKLAGZh7xFhBG04u9ZVSjB3CJuPe7Np1TOAX4Am1IL8\n8VP6yQpRIubUbvuH2DF04pcD6S8nwzVkrwKidVH5ZO0aXKrB0g1Q5Fof2ROXXNNw\n8dv6qJxr4bVI4YtuhxuSCJSlCkySCOxFud0QTZla8DKdFIP6vYEum7oUJa/KUkZf\niaPWZFDD+xpDcqlQORnYJVPG+UJ4Bd/XWngIcx4Il8Enq24Rci9qfOJo0lS/BKUq\nw8boG5a+1zzwBMhG+S6yp3huhEMhZL1oIfovBf75BYG3ClUUX1pe/VqyXRamWfqU\nKDfj4R+2Z4CXI+ZUzdAh6jfIz76BKhw814ZzDa9P4A55KhF2G2ChenrFTrzN1dUB\nv2U7te3TR6UELoTGR4hhwwNrV10LBcXLZHwio/1powZ8TdHyfRbbecXuGMOoraBd\nrPDT71A/Ha7/B97lyJvUKvvYJeCvlzdzWyxCpb573JWZ4dKH2MlLActUEn6FiOLZ\nLUaTKVqdNbUNvN8Hz/1dLyFdw12bxlsZsxev4yj37AbwATfqvDOFrdTYl/bhvhni\nm8pcLiOqkyoZHe19lxOzYD+7BZK0hW0X76iG6uBrDDM9uxU=\n=1vI8\n-----END PGP SIGNATURE-----",
        "payload": "tree ec37e87df7a65f4ea2b54d94c88a8323b5b0a94a\nparent caaaa0085f9b2f7d3908a56a5dca70401d07e297\nauthor Samuel Marks <807580+SamuelMarks@users.noreply.github.com> 1610023260 +1100\ncommitter Samuel Marks <807580+SamuelMarks@users.noreply.github.com> 1610023260 +1100\n\n[src/leveldb/util/coding_test.cc] Revert to 8a720ced5ff2fdd23b6ec7688998ad29e54fac98\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c579d6b12efba3fe02fcc591234001657cb226",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56c579d6b12efba3fe02fcc591234001657cb226",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c579d6b12efba3fe02fcc591234001657cb226/comments",
    "author": {
      "login": "SamuelMarks",
      "id": 807580,
      "node_id": "MDQ6VXNlcjgwNzU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/807580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamuelMarks",
      "html_url": "https://github.com/SamuelMarks",
      "followers_url": "https://api.github.com/users/SamuelMarks/followers",
      "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions",
      "organizations_url": "https://api.github.com/users/SamuelMarks/orgs",
      "repos_url": "https://api.github.com/users/SamuelMarks/repos",
      "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamuelMarks/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "SamuelMarks",
      "id": 807580,
      "node_id": "MDQ6VXNlcjgwNzU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/807580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SamuelMarks",
      "html_url": "https://github.com/SamuelMarks",
      "followers_url": "https://api.github.com/users/SamuelMarks/followers",
      "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions",
      "organizations_url": "https://api.github.com/users/SamuelMarks/orgs",
      "repos_url": "https://api.github.com/users/SamuelMarks/repos",
      "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SamuelMarks/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caaaa0085f9b2f7d3908a56a5dca70401d07e297",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/caaaa0085f9b2f7d3908a56a5dca70401d07e297"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "0d2a0c51f69e094e146844d97c94a7306e24a676",
        "filename": "src/leveldb/util/coding_test.cc",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c579d6b12efba3fe02fcc591234001657cb226/src/leveldb/util/coding_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c579d6b12efba3fe02fcc591234001657cb226/src/leveldb/util/coding_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding_test.cc?ref=56c579d6b12efba3fe02fcc591234001657cb226",
        "patch": "@@ -98,13 +98,12 @@ TEST(Coding, Varint32) {\n \n TEST(Coding, Varint64) {\n   // Construct the list of values to check\n-  std::vector<uint64_t> values {\n-          // Some special values\n-          0,\n-          100,\n-          (~static_cast<uint64_t>(0)),\n-          (~static_cast<uint64_t>(0) - 1)\n-  };\n+  std::vector<uint64_t> values;\n+  // Some special values\n+  values.push_back(0);\n+  values.push_back(100);\n+  values.push_back(~static_cast<uint64_t>(0));\n+  values.push_back(~static_cast<uint64_t>(0) - 1);\n   for (uint32_t k = 0; k < 64; k++) {\n     // Test values near powers of two\n     const uint64_t power = 1ull << k;"
      }
    ]
  }
]