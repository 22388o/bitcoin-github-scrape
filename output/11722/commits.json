[
  {
    "sha": "bba9bd0d9dd06f13a6b0c89181864453cab5c858",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmE5YmQwZDlkZDA2ZjEzYTZiMGM4OTE4MTg2NDQ1M2NhYjVjODU4",
    "commit": {
      "author": {
        "name": "Thomas Snider",
        "email": "tjps636@gmail.com",
        "date": "2017-11-18T19:35:14Z"
      },
      "committer": {
        "name": "Thomas Snider",
        "email": "tjps636@gmail.com",
        "date": "2017-11-18T19:35:14Z"
      },
      "message": "Switched sync.{cpp,h} to std threading primitives.",
      "tree": {
        "sha": "b16239a61b68699026e7c7b93c0dad06081abd80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b16239a61b68699026e7c7b93c0dad06081abd80"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bba9bd0d9dd06f13a6b0c89181864453cab5c858",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bba9bd0d9dd06f13a6b0c89181864453cab5c858",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bba9bd0d9dd06f13a6b0c89181864453cab5c858",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bba9bd0d9dd06f13a6b0c89181864453cab5c858/comments",
    "author": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99bc0b428b03b571afbc311b7f18fd3a707ac5af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99bc0b428b03b571afbc311b7f18fd3a707ac5af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99bc0b428b03b571afbc311b7f18fd3a707ac5af"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 15,
      "deletions": 19
    },
    "files": [
      {
        "sha": "116533eb411f4aa35847c41dd9aaa645e24fd203",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bba9bd0d9dd06f13a6b0c89181864453cab5c858/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bba9bd0d9dd06f13a6b0c89181864453cab5c858/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=bba9bd0d9dd06f13a6b0c89181864453cab5c858",
        "patch": "@@ -4,13 +4,12 @@\n \n #include <sync.h>\n \n+#include <set>\n #include <util.h>\n #include <utilstrencodings.h>\n \n #include <stdio.h>\n \n-#include <boost/thread.hpp>\n-\n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n {\n@@ -45,8 +44,8 @@ struct CLockLocation {\n         return mutexName + \"  \" + sourceFile + \":\" + itostr(sourceLine) + (fTry ? \" (TRY)\" : \"\");\n     }\n \n-    bool fTry;\n private:\n+    bool fTry;\n     std::string mutexName;\n     std::string sourceFile;\n     int sourceLine;\n@@ -67,10 +66,10 @@ struct LockData {\n \n     LockOrders lockorders;\n     InvLockOrders invlockorders;\n-    boost::mutex dd_mutex;\n+    std::mutex dd_mutex;\n } static lockdata;\n \n-boost::thread_specific_ptr<LockStack> lockstack;\n+static thread_local std::unique_ptr<LockStack> lockstack;\n \n static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)\n {\n@@ -100,12 +99,12 @@ static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch,\n \n static void push_lock(void* c, const CLockLocation& locklocation)\n {\n-    if (lockstack.get() == nullptr)\n+    if (!lockstack)\n         lockstack.reset(new LockStack);\n \n-    boost::unique_lock<boost::mutex> lock(lockdata.dd_mutex);\n+    std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n-    (*lockstack).push_back(std::make_pair(c, locklocation));\n+    lockstack->push_back(std::make_pair(c, locklocation));\n \n     for (const std::pair<void*, CLockLocation> & i : (*lockstack)) {\n         if (i.first == c)\n@@ -171,7 +170,7 @@ void DeleteLock(void* cs)\n         // We're already shutting down.\n         return;\n     }\n-    boost::unique_lock<boost::mutex> lock(lockdata.dd_mutex);\n+    std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n     std::pair<void*, void*> item = std::make_pair(cs, nullptr);\n     LockOrders::iterator it = lockdata.lockorders.lower_bound(item);\n     while (it != lockdata.lockorders.end() && it->first.first == cs) {"
      },
      {
        "sha": "3af27c65d0d4dc799646a6ac474f44b647dcaf16",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bba9bd0d9dd06f13a6b0c89181864453cab5c858/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bba9bd0d9dd06f13a6b0c89181864453cab5c858/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=bba9bd0d9dd06f13a6b0c89181864453cab5c858",
        "patch": "@@ -8,8 +8,6 @@\n \n #include <threadsafety.h>\n \n-#include <boost/thread/condition_variable.hpp>\n-#include <boost/thread/mutex.hpp>\n #include <condition_variable>\n #include <thread>\n #include <mutex>\n@@ -196,25 +194,23 @@ class SCOPED_LOCKABLE CCriticalBlock\n class CSemaphore\n {\n private:\n-    boost::condition_variable condition;\n-    boost::mutex mutex;\n+    std::condition_variable condition;\n+    std::mutex mutex;\n     int value;\n \n public:\n     explicit CSemaphore(int init) : value(init) {}\n \n     void wait()\n     {\n-        boost::unique_lock<boost::mutex> lock(mutex);\n-        while (value < 1) {\n-            condition.wait(lock);\n-        }\n+        std::unique_lock<std::mutex> lock(mutex);\n+        condition.wait(lock, [&]() { return value >= 1; });\n         value--;\n     }\n \n     bool try_wait()\n     {\n-        boost::unique_lock<boost::mutex> lock(mutex);\n+        std::lock_guard<std::mutex> lock(mutex);\n         if (value < 1)\n             return false;\n         value--;\n@@ -224,7 +220,7 @@ class CSemaphore\n     void post()\n     {\n         {\n-            boost::unique_lock<boost::mutex> lock(mutex);\n+            std::lock_guard<std::mutex> lock(mutex);\n             value++;\n         }\n         condition.notify_one();"
      },
      {
        "sha": "08de43d29ffd33c6a6e51d773fcca19e2108d018",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bba9bd0d9dd06f13a6b0c89181864453cab5c858/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bba9bd0d9dd06f13a6b0c89181864453cab5c858/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=bba9bd0d9dd06f13a6b0c89181864453cab5c858",
        "patch": "@@ -28,6 +28,7 @@\n #include <vector>\n \n #include <boost/signals2/signal.hpp>\n+#include <boost/thread/condition_variable.hpp> // for boost::thread_interrupted\n \n // Application startup time (used for uptime calculation)\n int64_t GetStartupTime();"
      }
    ]
  },
  {
    "sha": "f7f7e2cd340c088e82d09090eb275b98b34a9812",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2Y3ZTJjZDM0MGMwODhlODJkMDkwOTBlYjI3NWI5OGIzNGE5ODEy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-11-27T22:08:27Z"
      },
      "committer": {
        "name": "Thomas Snider",
        "email": "tjps636@gmail.com",
        "date": "2017-11-27T23:01:47Z"
      },
      "message": "threads: add a thread_local autoconf check",
      "tree": {
        "sha": "7e9e439fd4c9b6c61e53bcf561ae3005f9101367",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e9e439fd4c9b6c61e53bcf561ae3005f9101367"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7f7e2cd340c088e82d09090eb275b98b34a9812",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7f7e2cd340c088e82d09090eb275b98b34a9812",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7f7e2cd340c088e82d09090eb275b98b34a9812",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7f7e2cd340c088e82d09090eb275b98b34a9812/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bba9bd0d9dd06f13a6b0c89181864453cab5c858",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bba9bd0d9dd06f13a6b0c89181864453cab5c858",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bba9bd0d9dd06f13a6b0c89181864453cab5c858"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a05896edea785eb384f4b4dd278865982c5f9c1b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f7e2cd340c088e82d09090eb275b98b34a9812/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f7e2cd340c088e82d09090eb275b98b34a9812/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f7f7e2cd340c088e82d09090eb275b98b34a9812",
        "patch": "@@ -659,6 +659,28 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n+TEMP_LDFLAGS=\"$LDFLAGS\"\n+LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n+AC_MSG_CHECKING([for thread_local support])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  #include <thread>\n+  static thread_local int foo = 0;\n+  static void run_thread() { foo++;}\n+  int main(){\n+  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n+  return foo;\n+  }\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+  ]\n+)\n+LDFLAGS=\"$TEMP_LDFLAGS\"\n+\n # Check for different ways of gathering OS randomness\n AC_MSG_CHECKING(for Linux getrandom syscall)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>"
      },
      {
        "sha": "3f51383ea26412eb4005252831a5e0b38c5e81ca",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f7e2cd340c088e82d09090eb275b98b34a9812/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f7e2cd340c088e82d09090eb275b98b34a9812/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=f7f7e2cd340c088e82d09090eb275b98b34a9812",
        "patch": "@@ -11,6 +11,9 @@\n #include <stdio.h>\n \n #ifdef DEBUG_LOCKCONTENTION\n+#if !defined(HAVE_THREAD_LOCAL)\n+static_assert(false, \"thread_local is not supported\");\n+#endif\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n {\n     LogPrintf(\"LOCKCONTENTION: %s\\n\", pszName);"
      }
    ]
  }
]