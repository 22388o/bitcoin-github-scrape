[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862317856",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#issuecomment-862317856",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22258",
    "id": 862317856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjMxNzg1Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T11:57:40Z",
    "updated_at": "2021-06-16T11:57:40Z",
    "author_association": "MEMBER",
    "body": "Tested warnings-free on Focal with:\r\n* clang (`./configure --with-incompatible-bdb --enable-suppress-external-warnings CC=clang CXX=clang++ && make clean && make -j $(nproc)`)\r\n* gcc (`./configure --with-incompatible-bdb --enable-suppress-external-warnings && make clean && make -j $(nproc)`)\r\n* depends (`CONFIG_SITE=\"$PWD/depends/x86_64-pc-linux-gnu/share/config.site\" ./configure --enable-suppress-external-warnings && make clean && make -j $(nproc)`)\r\n\r\nAlso tested on Fedora 34 with clang and gcc.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862317856/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862318991",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#issuecomment-862318991",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22258",
    "id": 862318991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjMxODk5MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T11:59:30Z",
    "updated_at": "2021-06-16T11:59:30Z",
    "author_association": "MEMBER",
    "body": "@fanquake (or someone else) Can you test this one please: https://github.com/bitcoin/bitcoin/pull/18738#issuecomment-622956100",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862318991/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862319399",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#issuecomment-862319399",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22258",
    "id": 862319399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjMxOTM5OQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T12:00:09Z",
    "updated_at": "2021-06-16T12:00:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862319399/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862466797",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#issuecomment-862466797",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22258",
    "id": 862466797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjQ2Njc5Nw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T15:14:55Z",
    "updated_at": "2021-06-16T15:14:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21430 (build: Add -Werror=implicit-fallthrough compile flag by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862466797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/865127481",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#issuecomment-865127481",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22258",
    "id": 865127481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NTEyNzQ4MQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-21T15:29:46Z",
    "updated_at": "2021-06-21T15:29:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "According to Clang 13.0.0 we have  `deprecated-copy` warnings in our code too:\r\n\r\n```\r\nclang++-devel -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config  -DDEBUG -DDEBUG_LOCKORDER -DABORT_ON_FAILED_ASSUME  -I. -I./secp256k1/include -isystem /usr/local/include/db5 -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC -isystem /usr/local/include -I./leveldb/include -I./leveldb/helpers/memenv -I./univalue/include   -isystem /usr/local/include -I/usr/local/include -D_THREAD_SAFE -pthread  -I/usr/local/include -Wno-deprecated-declarations -Werror -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -DPROVIDE_FUZZ_MAIN_FUNCTION -O0 -g3 -ftrapv -Wstack-protector -fstack-protector-all -fcf-protection=full -Wall -Wextra -Wgnu -Wformat -Wformat-security -Wvla -Wshadow-field -Wswitch -Wthread-safety -Wrange-loop-analysis -Wredundant-decls -Wunused-variable -Wunused-member-function -Wdate-time -Wconditional-uninitialized -Wsign-compare -Woverloaded-virtual -Wsuggest-override -Wunreachable-code-loop-increment -Wdocumentation -Wno-unused-parameter -Wno-self-assign -Wno-unused-local-typedef -Wno-implicit-fallthrough    -fPIE  -MT policy/libbitcoin_server_a-rbf.o -MD -MP -MF policy/.deps/libbitcoin_server_a-rbf.Tpo -c -o policy/libbitcoin_server_a-rbf.o `test -f 'policy/rbf.cpp' || echo './'`policy/rbf.cpp\r\n\r\nIn file included from policy/rbf.cpp:5:\r\nIn file included from ./policy/rbf.h:8:\r\nIn file included from ./txmempool.h:24:\r\n./util/epochguard.h:53:17: error: definition of implicit copy constructor for 'Marker' is deprecated because it has a user-declared copy assignment operator [-Werror,-Wdeprecated-copy]\r\n        Marker& operator=(const Marker&) = delete;\r\n                ^\r\n./txmempool.h:81:7: note: in implicit copy constructor for 'Epoch::Marker' first required here\r\nclass CTxMemPoolEntry\r\n      ^\r\npolicy/rbf.cpp:29:29: note: in implicit copy constructor for 'CTxMemPoolEntry' first required here\r\n    CTxMemPoolEntry entry = *pool.mapTx.find(tx.GetHash());\r\n                            ^\r\n1 error generated.\r\n\r\n\r\n\r\n\r\nIn file included from test/fuzz/policy_estimator.cpp:9:\r\nIn file included from ./test/fuzz/util.h:27:\r\nIn file included from ./txmempool.h:24:\r\n./util/epochguard.h:53:17: error: definition of implicit copy constructor for 'Marker' is deprecated because it has a user-declared copy assignment operator [-Werror,-Wdeprecated-copy]\r\n        Marker& operator=(const Marker&) = delete;\r\n                ^\r\n./txmempool.h:81:7: note: in implicit copy constructor for 'Epoch::Marker' first required here\r\nclass CTxMemPoolEntry\r\n      ^\r\n/usr/include/c++/v1/memory:1876:31: note: in implicit move constructor for 'CTxMemPoolEntry' first required here\r\n            ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...);\r\n                              ^\r\n/usr/include/c++/v1/memory:1768:18: note: in instantiation of function template specialization 'std::allocator<CTxMemPoolEntry>::construct<CTxMemPoolEntry, CTxMemPoolEntry>' requested here\r\n            {__a.construct(__p, _VSTD::forward<_Args>(__args)...);}\r\n                 ^\r\n/usr/include/c++/v1/memory:1595:14: note: in instantiation of function template specialization 'std::allocator_traits<std::allocator<CTxMemPoolEntry>>::__construct<CTxMemPoolEntry, CTxMemPoolEntry>' requested here\r\n            {__construct(__has_construct<allocator_type, _Tp*, _Args...>(),\r\n             ^\r\n/usr/include/c++/v1/vector:924:21: note: in instantiation of function template specialization 'std::allocator_traits<std::allocator<CTxMemPoolEntry>>::construct<CTxMemPoolEntry, CTxMemPoolEntry>' requested here\r\n    __alloc_traits::construct(this->__alloc(), _VSTD::__to_address(__tx.__pos_),\r\n                    ^\r\n/usr/include/c++/v1/vector:1652:9: note: in instantiation of function template specialization 'std::vector<CTxMemPoolEntry>::__construct_one_at_end<CTxMemPoolEntry>' requested here\r\n        __construct_one_at_end(_VSTD::move(__x));\r\n        ^\r\ntest/fuzz/policy_estimator.cpp:49:37: note: in instantiation of member function 'std::vector<CTxMemPoolEntry>::push_back' requested here\r\n                    mempool_entries.push_back(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx));\r\n                                    ^\r\n1 error generated.\r\n```\r\n\r\ncc @ajtowns the below fixes it:\r\n\r\n```diff\r\ndiff --git i/src/policy/rbf.cpp w/src/policy/rbf.cpp\r\nindex 8125b41c41..10859d256d 100644\r\n--- i/src/policy/rbf.cpp\r\n+++ w/src/policy/rbf.cpp\r\n@@ -23,13 +23,13 @@ RBFTransactionState IsRBFOptIn(const CTransaction& tx, const CTxMemPool& pool)\r\n     }\r\n \r\n     // If all the inputs have nSequence >= maxint-1, it still might be\r\n     // signaled for RBF if any unconfirmed parents have signaled.\r\n     uint64_t noLimit = std::numeric_limits<uint64_t>::max();\r\n     std::string dummy;\r\n-    CTxMemPoolEntry entry = *pool.mapTx.find(tx.GetHash());\r\n+    const CTxMemPoolEntry& entry = *pool.mapTx.find(tx.GetHash());\r\n     pool.CalculateMemPoolAncestors(entry, setAncestors, noLimit, noLimit, noLimit, noLimit, dummy, false);\r\n \r\n     for (CTxMemPool::txiter it : setAncestors) {\r\n         if (SignalsOptInRBF(it->GetTx())) {\r\n             return RBFTransactionState::REPLACEABLE_BIP125;\r\n         }\r\ndiff --git i/src/util/epochguard.h w/src/util/epochguard.h\r\nindex 1570ec4eb4..79c0abb4eb 100644\r\n--- i/src/util/epochguard.h\r\n+++ w/src/util/epochguard.h\r\n@@ -42,12 +42,16 @@ public:\r\n     Epoch& operator=(const Epoch&) = delete;\r\n \r\n     bool guarded() const { return m_guarded; }\r\n \r\n     class Marker\r\n     {\r\n+    public:\r\n+        Marker() = default;\r\n+        Marker(const Marker& other) = default;\r\n+\r\n     private:\r\n         uint64_t m_marker = 0;\r\n \r\n         // only allow modification via Epoch member functions\r\n         friend class Epoch;\r\n         Marker& operator=(const Marker&) = delete;\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/865127481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652627479",
    "pull_request_review_id": 685085356,
    "id": 652627479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjYyNzQ3OQ==",
    "diff_hunk": "@@ -475,7 +475,9 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+  if test x$suppress_external_warnings == xno ; then\n+    AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])",
    "path": "configure.ac",
    "position": 6,
    "original_position": 6,
    "commit_id": "1111457d7433c2cca1d7e98946f6954e3a0280ef",
    "original_commit_id": "fa9824ca11a4edff2ffd583d500a4b28a8f06a05",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm almost certain @hebasto already made this comment, but I must have imagined it. Can you move this up above `AX_CHECK_COMPILE_FLAG([-Wdocumentation]`, inside the existing ` if test x$suppress_external_warnings != xno ; then` check. Then this is ok.",
    "created_at": "2021-06-16T12:11:52Z",
    "updated_at": "2021-06-16T12:13:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652627479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652627479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652627479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652627479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 479,
    "original_line": 479,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652638653",
    "pull_request_review_id": 685100236,
    "id": 652638653,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjYzODY1Mw==",
    "diff_hunk": "@@ -475,7 +475,9 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+  if test x$suppress_external_warnings == xno ; then\n+    AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])",
    "path": "configure.ac",
    "position": 6,
    "original_position": 6,
    "commit_id": "1111457d7433c2cca1d7e98946f6954e3a0280ef",
    "original_commit_id": "fa9824ca11a4edff2ffd583d500a4b28a8f06a05",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> inside the existing if test x$suppress_external_warnings != xno ; then check.\r\n\r\nThat wouldn't work. The check needs to be `== xno`, not `!= xno`. Alternatively it can be `!= xyes`, I guess.\r\n\r\nAlso, I want to keep the `NOWARN_CXXFLAGS` in one section and not mix it with the `WARN_CXXFLAGS` section",
    "created_at": "2021-06-16T12:27:21Z",
    "updated_at": "2021-06-16T12:27:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652638653",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652638653"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652638653"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652638653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 479,
    "original_line": 479,
    "side": "RIGHT",
    "in_reply_to_id": 652627479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652651030",
    "pull_request_review_id": 685116626,
    "id": 652651030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjY1MTAzMA==",
    "diff_hunk": "@@ -475,7 +475,9 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+  if test x$suppress_external_warnings == xno ; then\n+    AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])",
    "path": "configure.ac",
    "position": 6,
    "original_position": 6,
    "commit_id": "1111457d7433c2cca1d7e98946f6954e3a0280ef",
    "original_commit_id": "fa9824ca11a4edff2ffd583d500a4b28a8f06a05",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, in this case we're removing a suppression only when enabling other suppressions. Changing this to `!=yes` would better match how we generally do this in configure",
    "created_at": "2021-06-16T12:43:48Z",
    "updated_at": "2021-06-16T12:43:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652651030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652651030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652651030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652651030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 479,
    "original_line": 479,
    "side": "RIGHT",
    "in_reply_to_id": 652627479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652705400",
    "pull_request_review_id": 685190075,
    "id": 652705400,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjcwNTQwMA==",
    "diff_hunk": "@@ -475,7 +475,9 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n+  if test x$suppress_external_warnings == xno ; then\n+    AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])",
    "path": "configure.ac",
    "position": 6,
    "original_position": 6,
    "commit_id": "1111457d7433c2cca1d7e98946f6954e3a0280ef",
    "original_commit_id": "fa9824ca11a4edff2ffd583d500a4b28a8f06a05",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, pushed a fix. Didn't re-test.\r\n\r\n```diff\r\n-  if test x$suppress_external_warnings == xno ; then\r\n+  if test x$suppress_external_warnings != xyes ; then\r\n",
    "created_at": "2021-06-16T13:45:54Z",
    "updated_at": "2021-06-16T13:45:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652705400",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652705400"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22258#discussion_r652705400"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22258"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652705400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 479,
    "original_line": 479,
    "side": "RIGHT",
    "in_reply_to_id": 652627479
  }
]