MarcoFalke,2019-12-25 01:04:10,"Last failure: https://travis-ci.org/bitcoin/bitcoin/jobs/629019510#L3660\n\nRe-run ci, to see if it is reproducible.",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-568816136,568816136,
MarcoFalke,2020-01-09 23:04:38,"To fix the wallet_groups timeout,  you might need a diff that looks like:\n\n```diff\ndiff --git a/test/functional/wallet_groups.py b/test/functional/wallet_groups.py\nindex 3cf8aaf3d..f2fa1d3e4 100755\n--- a/test/functional/wallet_groups.py\n+++ b/test/functional/wallet_groups.py\n@@ -16,7 +16,7 @@ class WalletGroupTest(BitcoinTestFramework):\n         self.setup_clean_chain = True\n    ",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-572797397,572797397,
DrahtBot,2020-01-14 09:34:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16539](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16539.html) (wallet: lower -txmaxfee default from 0.1 to",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-574085516,574085516,
MarcoFalke,2020-01-15 16:24:45,"Looks like feature_assumevalid needs the `self.rpc_timeout = 240` bumped as well. Also, there are about 10 tests left which don't run. You could remove the `--failfast` in `ci/test/06_script_b.sh` temporarily to run them all even if one fails.",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-574737879,574737879,
MarcoFalke,2020-01-20 13:49:03,"Ok, down to three failures :rocket: \n\n> `feature_assumevalid.py                           | ✖ Failed  | 206 s` \n> `feature_cltv.py                                  | ✖ Failed  | 205 s`\n\nI think they can be excluded for now because they mine too many blocks\n\n> `feature_help.py                                  | ✖ Failed  | 5 s`\n\nTimeout should be bumped here, probably\n\n",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-576282412,576282412,
practicalswift,2020-01-21 16:07:14,"Concept ACK\n\nNice first-time contribution! Welcome as a contributor @michiboo :)",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-576753167,576753167,
MarcoFalke,2020-01-21 17:32:23,"ok, one more timeout on travis. Might want to bump that and remove the temporary workarounds in the ci files (`failfast` and `UNIT_TESTS=false`).\n\nThen it should be ready for merge.",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-576792451,576792451,
MarcoFalke,2020-01-21 17:34:33,"Also could adjust the commit title to match the pull request title, which is a bit more descriptive.",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-576793411,576793411,
michiboo,2020-01-22 05:32:20,"Hi There is error: The job exceeded the maximum time limit for jobs, and has been terminated.\n\nNot sure how to avoid this.\n\n",https://github.com/bitcoin/bitcoin/pull/17770#issuecomment-577015264,577015264,
MarcoFalke,2019-12-18 15:14:12,"You might just bump the default in `def send_blocks(...`.\n\nHowever, feature_block.py might be the hardest to get right, as it includes a 1080 block reorg. Not sure how long that will take, but you might want to `export TEST_RUNNER_EXTRA=""--exclude feature_block` for now.",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r359399431,359399431,test/functional/feature_block.py
MarcoFalke,2019-12-19 17:03:08,"rpc calls don't have a timeout argument.\n\nAlso, this test properly failed with an uninitialized read:\n\n```\n node0 stderr ==27834== Thread 7 b-httpworker.2:\n\n==27834== Conditional jump or move depends on uninitialised value(s)\n\n==27834==    at 0x204563: rest_blockhash_by_height(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (r",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r359967525,359967525,test/functional/interface_rest.py
MarcoFalke,2019-12-19 18:27:15,"temporarily, for faster ci runs, you can also `export RUN_UNIT_TESTS=false`",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r360003774,360003774,ci/test/00_setup_env_native_valgrind.sh
practicalswift,2019-12-19 21:31:06,"Hrmm, that is super weird. Valgrind false positives are very rare, but I'm unable to reproduce. How the heck was this triggered? :)",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r360126826,360126826,test/functional/interface_rest.py
MarcoFalke,2019-12-20 14:09:14,"As mentioned previously, RPCs don't have timeout argument",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r360386982,360386982,test/functional/interface_rest.py
MarcoFalke,2019-12-25 12:19:44,"If the `feature_abortnode` test is causing issues that are non-trivial to fix, you might exclude it for now:\n\n```suggestion\nexport TEST_RUNNER_EXTRA=""--exclude feature_block,feature_abortnode""\n```",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r361306688,361306688,ci/test/00_setup_env_native_valgrind.sh
MarcoFalke,2020-01-03 11:46:57,"```suggestion\nexport TEST_RUNNER_EXTRA=""--exclude feature_block,rpc_bind.py --ipv4,feature_abortnode,wallet_createwallet""\n```\n\nDue to failure here: https://travis-ci.org/bitcoin/bitcoin/jobs/632228754#L2879",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r362783497,362783497,ci/test/00_setup_env_native_valgrind.sh
MarcoFalke,2020-01-03 11:47:23,This does not have a timeout argument. Please reset the change.,https://github.com/bitcoin/bitcoin/pull/17770#discussion_r362783590,362783590,test/functional/feature_abortnode.py
MarcoFalke,2020-01-14 19:41:58,"```suggestion\nexport TEST_RUNNER_EXTRA=""--exclude feature_block,rpc_bind,feature_abortnode,wallet_createwallet,wallet_multiwallet""\n```\n\nMaybe exclude this for now due to the failure  https://travis-ci.org/bitcoin/bitcoin/jobs/636719655#L4607",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r366536084,366536084,ci/test/00_setup_env_native_valgrind.sh
MarcoFalke,2020-01-23 21:50:13,"ok, then maybe revert the changes to this file altogether, but I'd still like to get this merged. The timeout changes help me running the valgrind tests on my own ci infrastructure. We can look into how to enable them on travis later on.",https://github.com/bitcoin/bitcoin/pull/17770#discussion_r370373537,370373537,ci/test/00_setup_env_native_valgrind.sh
MarcoFalke,2020-01-24 14:05:16,please reset all changes in this file to restore the inital state of the travis config,https://github.com/bitcoin/bitcoin/pull/17770#discussion_r370649119,370649119,ci/test/00_setup_env_native_valgrind.sh
