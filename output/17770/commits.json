[
  {
    "sha": "2d23082cbe4641175d752a5969f67cdadf1afcea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDIzMDgyY2JlNDY0MTE3NWQ3NTJhNTk2OWY2N2NkYWRmMWFmY2Vh",
    "commit": {
      "author": {
        "name": "Micky Yun Chan",
        "email": "michan@redhat.com",
        "date": "2019-12-18T06:54:25Z"
      },
      "committer": {
        "name": "Micky Yun Chan",
        "email": "michan@redhat.com",
        "date": "2020-01-25T07:51:35Z"
      },
      "message": "bump test timeouts so that functional tests run in valgrind",
      "tree": {
        "sha": "99c97bfda49497de34cbda28efd44cd1ae606170",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99c97bfda49497de34cbda28efd44cd1ae606170"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d23082cbe4641175d752a5969f67cdadf1afcea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d23082cbe4641175d752a5969f67cdadf1afcea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2d23082cbe4641175d752a5969f67cdadf1afcea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d23082cbe4641175d752a5969f67cdadf1afcea/comments",
    "author": {
      "login": "michiboo",
      "id": 26637492,
      "node_id": "MDQ6VXNlcjI2NjM3NDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26637492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michiboo",
      "html_url": "https://github.com/michiboo",
      "followers_url": "https://api.github.com/users/michiboo/followers",
      "following_url": "https://api.github.com/users/michiboo/following{/other_user}",
      "gists_url": "https://api.github.com/users/michiboo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michiboo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michiboo/subscriptions",
      "organizations_url": "https://api.github.com/users/michiboo/orgs",
      "repos_url": "https://api.github.com/users/michiboo/repos",
      "events_url": "https://api.github.com/users/michiboo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michiboo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "michiboo",
      "id": 26637492,
      "node_id": "MDQ6VXNlcjI2NjM3NDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26637492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michiboo",
      "html_url": "https://github.com/michiboo",
      "followers_url": "https://api.github.com/users/michiboo/followers",
      "following_url": "https://api.github.com/users/michiboo/following{/other_user}",
      "gists_url": "https://api.github.com/users/michiboo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michiboo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michiboo/subscriptions",
      "organizations_url": "https://api.github.com/users/michiboo/orgs",
      "repos_url": "https://api.github.com/users/michiboo/repos",
      "events_url": "https://api.github.com/users/michiboo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michiboo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fef85bfa3cd7f76e83b8b57f9e4acd63eb664ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fef85bfa3cd7f76e83b8b57f9e4acd63eb664ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fef85bfa3cd7f76e83b8b57f9e4acd63eb664ec"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 22,
      "deletions": 9
    },
    "files": [
      {
        "sha": "744b8ee70fa4b6cdb5ac989016bd2410c6479072",
        "filename": "contrib/valgrind.supp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -184,3 +184,16 @@\n    ...\n    fun:_ZN5BCLog6Logger12StartLoggingEv\n }\n+{\n+   Suppress BCLog::Logger::StartLogging() still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   ...\n+   fun:_ZN5BCLog6Logger12StartLoggingEv\n+}\n+{\n+   Suppress rest_blockhash_by_height Conditional jump or move depends on uninitialised value(s)\n+   Memcheck:Cond\n+   fun:_ZL24rest_blockhash_by_heightP11HTTPRequestRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n+}"
      },
      {
        "sha": "80c3cab5e1b2fdab82a75229c468d6d76aad89b3",
        "filename": "test/functional/feature_abortnode.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/feature_abortnode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/feature_abortnode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_abortnode.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -40,7 +40,7 @@ def run_test(self):\n \n             # Check that node0 aborted\n             self.log.info(\"Waiting for crash\")\n-            wait_until(lambda: self.nodes[0].is_node_stopped(), timeout=60)\n+            wait_until(lambda: self.nodes[0].is_node_stopped(), timeout=200)\n         self.log.info(\"Node crashed - now verifying restart fails\")\n         self.nodes[0].assert_start_raises_init_error()\n "
      },
      {
        "sha": "95905f477b357d91e84d7f45dc9aea13cf3297fe",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -1401,7 +1401,7 @@ def reconnect_p2p(self, timeout=60):\n         self.nodes[0].disconnect_p2ps()\n         self.bootstrap_p2p(timeout=timeout)\n \n-    def send_blocks(self, blocks, success=True, reject_reason=None, force_send=False, reconnect=False, timeout=60):\n+    def send_blocks(self, blocks, success=True, reject_reason=None, force_send=False, reconnect=False, timeout=960):\n         \"\"\"Sends blocks to test node. Syncs and verifies that tip has advanced to most recent block.\n \n         Call with success = False if the tip shouldn't advance to the most recent block.\"\"\""
      },
      {
        "sha": "e3e2456183a34520c8e0eaecf59379cd052f12d0",
        "filename": "test/functional/feature_help.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/feature_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/feature_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_help.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -17,7 +17,7 @@ def setup_network(self):\n         # Don't start the node\n \n     def get_node_output(self, *, ret_code_expected):\n-        ret_code = self.nodes[0].process.wait(timeout=5)\n+        ret_code = self.nodes[0].process.wait(timeout=60)\n         assert_equal(ret_code, ret_code_expected)\n         self.nodes[0].stdout.seek(0)\n         self.nodes[0].stderr.seek(0)"
      },
      {
        "sha": "3b148d5cf094ceb59626ff1b4e4257a98ba44403",
        "filename": "test/functional/mempool_reorg.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_reorg.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -76,7 +76,7 @@ def run_test(self):\n         spend_101_id = self.nodes[0].sendrawtransaction(spend_101_raw)\n         spend_102_1_id = self.nodes[0].sendrawtransaction(spend_102_1_raw)\n \n-        self.sync_all()\n+        self.sync_all(timeout=360)\n \n         assert_equal(set(self.nodes[0].getrawmempool()), {spend_101_id, spend_102_1_id, timelock_tx_id})\n \n@@ -91,7 +91,7 @@ def run_test(self):\n         for node in self.nodes:\n             node.invalidateblock(new_blocks[0])\n \n-        self.sync_all()\n+        self.sync_all(timeout=360)\n \n         # mempool should be empty.\n         assert_equal(set(self.nodes[0].getrawmempool()), set())"
      },
      {
        "sha": "15584aab21086e7d1899f7af2df6115e84cfa352",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -78,7 +78,7 @@ def run_test(self):\n \n         # Peer 1, despite serving up a bunch of nonsense, should still be connected.\n         self.log.info(\"Waiting for node to drop junk messages.\")\n-        node.p2p.sync_with_ping(timeout=320)\n+        node.p2p.sync_with_ping(timeout=400)\n         assert node.p2p.is_connected\n \n         #"
      },
      {
        "sha": "1cc1fb164b9fa0dc442998ea5262e3c338ef689f",
        "filename": "test/functional/rpc_setban.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/rpc_setban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/rpc_setban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_setban.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -26,7 +26,7 @@ def run_test(self):\n         self.nodes[1].setban(\"127.0.0.1\", \"add\")\n \n         # Node 0 should not be able to reconnect\n-        with self.nodes[1].assert_debug_log(expected_msgs=['dropped (banned)\\n'], timeout=5):\n+        with self.nodes[1].assert_debug_log(expected_msgs=['dropped (banned)\\n'], timeout=50):\n             self.restart_node(1, [])\n             self.nodes[0].addnode(\"127.0.0.1:\" + str(p2p_port(1)), \"onetry\")\n "
      },
      {
        "sha": "a39dfc78959fcffdf89c97c3e6d6af8674d9765c",
        "filename": "test/functional/wallet_dump.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/wallet_dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/wallet_dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_dump.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -137,7 +137,7 @@ def run_test(self):\n \n         # encrypt wallet, restart, unlock and dump\n         self.nodes[0].encryptwallet('test')\n-        self.nodes[0].walletpassphrase('test', 10)\n+        self.nodes[0].walletpassphrase('test', 100)\n         # Should be a no-op:\n         self.nodes[0].keypoolrefill()\n         self.nodes[0].dumpwallet(wallet_enc_dump)"
      },
      {
        "sha": "bbca54da3415ae25fca111ccf4b16ace75542ee4",
        "filename": "test/functional/wallet_groups.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/wallet_groups.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d23082cbe4641175d752a5969f67cdadf1afcea/test/functional/wallet_groups.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_groups.py?ref=2d23082cbe4641175d752a5969f67cdadf1afcea",
        "patch": "@@ -16,7 +16,7 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 3\n         self.extra_args = [[], [], ['-avoidpartialspends']]\n-        self.rpc_timeout = 120\n+        self.rpc_timeout = 240\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      }
    ]
  }
]