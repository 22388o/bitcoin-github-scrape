[
  {
    "sha": "258d33b41a27917f59e3aee856d032a23cbb5b05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNThkMzNiNDFhMjc5MTdmNTllM2FlZTg1NmQwMzJhMjNjYmI1YjA1",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-16T08:19:02Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-09-04T05:48:06Z"
      },
      "message": "[mempool] Mark unaccepted txs present in mempool as 'already there'.\n\nOn startup, the wallets will start pumping wallet transactions into the mempool in a different thread while LoadMempool() is running.\nThis will sometimes result in transactions \"failing\" to be accepted into mempool, but only for the reason that they were already\nput there by a wallet. The log message for mempool load would note this as a 'failure' to import, which was misleading; it should\ninstead mark it as the transaction already being in the mempool.",
      "tree": {
        "sha": "4afbc29daf715a289ca929447037a41ff2da80cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4afbc29daf715a289ca929447037a41ff2da80cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/258d33b41a27917f59e3aee856d032a23cbb5b05",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlms6RYACgkQV692LbM1\nMyImnw//eZHgcPaVfPAiRGI4PtDDQzP2SO8z7Ak8oEaOLR9jB3d0i7kxubdycSNV\nHUASdS2U+c82WWDBZO8nTKJnfBSsID1wkoYKD4h12zPIre5U7vbnX4LYV7GQtaOu\nv8AqOANqkmEv6TlR7A01m8+LiZlmuGJmsBjO1gywHIYm1S0c5qKOgbCy2tQKZ624\n0Vb9hakjwp3hx4J97J7FkKCBQDmrjSNLWRxPJAmak83QRD8CkKgGWXs5R1nPHXLF\nxHKZd6uM3XlxCtIJi7BOecTWg2ovDwsEKZV/08Or75yIYqnEgiSZGWalSzuqEy/0\nJMirkeTg4uQGDw6u8xLNcVHYsGi5zvYOtQnpAZVbZ3BTLoWYqUibkH5pww3wIUUm\nSRiA58RwzIKaucFK4XYj20AfacS3l91eppQo35slCizQljucZF07uzuqOFl6nCza\n42tdEztGQxblf2Ei3Z09WLjW5BCAUKYmvwI3Ks6q6d2z26zGhpinpeqsaT1ewzeX\nY68wyTm7y00r+IbsK4z5gPrJVxtSVwYL75AOtJUU7kM156S/jbKZt2s8kRJW4M6W\nxip3HI3iJIIsENv9DPfEMswFB6MnycpBCcNb+3SetTgK6JgReTg8SWA/TJVB6qW7\nW45ocExVgkjCp69GCSUlgBDy+BUrsd3Ft0HPNbbmLRx82A0nGh0=\n=Xl7t\n-----END PGP SIGNATURE-----",
        "payload": "tree 4afbc29daf715a289ca929447037a41ff2da80cc\nparent ce665863b137ac4a7470cf006a92aa7694faca71\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1502871542 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1504504086 +0900\n\n[mempool] Mark unaccepted txs present in mempool as 'already there'.\n\nOn startup, the wallets will start pumping wallet transactions into the mempool in a different thread while LoadMempool() is running.\nThis will sometimes result in transactions \"failing\" to be accepted into mempool, but only for the reason that they were already\nput there by a wallet. The log message for mempool load would note this as a 'failure' to import, which was misleading; it should\ninstead mark it as the transaction already being in the mempool.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/258d33b41a27917f59e3aee856d032a23cbb5b05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/258d33b41a27917f59e3aee856d032a23cbb5b05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/258d33b41a27917f59e3aee856d032a23cbb5b05/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce665863b137ac4a7470cf006a92aa7694faca71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce665863b137ac4a7470cf006a92aa7694faca71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce665863b137ac4a7470cf006a92aa7694faca71"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 13,
      "deletions": 4
    },
    "files": [
      {
        "sha": "dac9793097cf38cc5b327161147a0fcf7a54e23e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/258d33b41a27917f59e3aee856d032a23cbb5b05/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/258d33b41a27917f59e3aee856d032a23cbb5b05/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=258d33b41a27917f59e3aee856d032a23cbb5b05",
        "patch": "@@ -4278,8 +4278,9 @@ bool LoadMempool(void)\n     }\n \n     int64_t count = 0;\n-    int64_t skipped = 0;\n+    int64_t expired = 0;\n     int64_t failed = 0;\n+    int64_t already_there = 0;\n     int64_t nNow = GetTime();\n \n     try {\n@@ -4309,10 +4310,18 @@ bool LoadMempool(void)\n                 if (state.IsValid()) {\n                     ++count;\n                 } else {\n-                    ++failed;\n+                    // mempool may contain the transaction already, e.g. from\n+                    // wallet(s) having loaded it while we were processing\n+                    // mempool transactions; consider these as valid, instead of\n+                    // failed, but mark them as 'already there'\n+                    if (mempool.exists(tx->GetHash())) {\n+                        ++already_there;\n+                    } else {\n+                        ++failed;\n+                    }\n                 }\n             } else {\n-                ++skipped;\n+                ++expired;\n             }\n             if (ShutdownRequested())\n                 return false;\n@@ -4328,7 +4337,7 @@ bool LoadMempool(void)\n         return false;\n     }\n \n-    LogPrintf(\"Imported mempool transactions from disk: %i successes, %i failed, %i expired\\n\", count, failed, skipped);\n+    LogPrintf(\"Imported mempool transactions from disk: %i succeeded, %i failed, %i expired, %i already there\\n\", count, failed, expired, already_there);\n     return true;\n }\n "
      }
    ]
  }
]