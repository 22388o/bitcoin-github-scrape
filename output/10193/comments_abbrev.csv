dcousens,2017-04-12T04:32:27Z,"concept ACK,  but maybe follow [after verification/approval] with a removal of the includes too?",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-293471397,293471397,
practicalswift,2017-04-12T07:24:35Z,"concept ACK\n\nVery good!",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-293495971,293495971,
jtimon,2017-04-13T00:15:01Z,"Updated OP and code increasing the scope to fully ```remove #include <boost/foreach.hpp>``` as discussed here and on IRC.\n\nAlthough I expect travis to pass, I encountered a problem and ""fixed it"" by commenting part of prevector_tests.cpp in https://github.com/bitcoin/bitcoin/pull/10193/commits/cc40182b533dbe6282e7c6cb8d2dae61f9a7ead4 I tried https://github.com/bitcoin/bitcoin/pull/10193/commit",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-293742166,293742166,
gmaxwell,2017-04-13T19:32:25Z,"Luke points out that if only travis is running this it is a vulnerability because we'll be falsely confident in the changes.   Other people should run it, but then we're exposed because I assume many people have a workflow that will git pull / git diff and run scripts without reading all the commit messages. spudowiar  suggested on IRC that the review script ask you to confirm the script it's goin",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-293999963,293999963,
MarcoFalke,2017-04-13T19:58:46Z,"The issue that you can not trust travis for the result of the run (i.e. red vs green) is true regardless of the scripted-diff script. Though, I agree with @gmaxwell that travis serves as a good tool to notify pr authors of issues with the commit. Also agree that the interactive approach should prevent most evil scripts from being run.",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-294006225,294006225,
jtimon,2017-04-17T19:29:41Z,"It seems some more general comments really belong in #10189 .\nI agree with the concerns. I think anyone giving an utACK to an ""scripted-diff"" (or whatever we chose as the prefix) commit should read the script and either review the changes (that's what I did for #10189) or run the script locally. Even if the script in #10189 facilitates review and will help travis warn you when your commit is not",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-294567070,294567070,
jtimon,2017-06-01T17:26:11Z,"Rebased. I still don't know what's wrong with the reverse iterator, so I separated the first 3 commits in #10502",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-305562943,305562943,
jtimon,2017-06-02T01:35:02Z,"Needed rebase, see https://github.com/bitcoin/bitcoin/pull/10502#issuecomment-305664766",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-305665216,305665216,
jtimon,2017-06-05T20:53:04Z,"Needed rebase.\nAlso, it seems I solved the reverse iterator problem in prevector_tests.cpp thanks to @theuni 's suggestion.\n\nNote: cfields thinks I should be doing what I've done on prevector_tests everywhere, so it's interesting if this passes the tests",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-306305832,306305832,
sipa,2017-06-14T01:07:26Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-308290668,308290668,
jtimon,2017-06-14T03:36:28Z,"Rebased, we still don't know if the fix @theuni suggested is needed only needed on prevector_tests.cpp as I though or everywhere as he thinks.\n\nIf he is right, ideally all 5 lines changed in https://github.com/bitcoin/bitcoin/pull/10193/commits/ad087bd496e46b4ae93b96089c0d609f183d3e4d (aka 'scripted-diff: Remove BOOST_REVERSE_FOREACH' for when the rebase) deserve their own test that fails with",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-308310618,308310618,
theuni,2017-06-14T05:07:35Z,"Concept ACK, but NACK until reverse_range/reverse_iterator have their own tests as @jtimon mentioned above. I believe that the current usage is broken due to scope issues with reverse_iterate in a range-based-for. A language lawyer may prove otherwise, but it's unnecessarily risky without tests to back it up.",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-308320888,308320888,
jtimon,2017-06-14T15:03:02Z,"I don't mean writting their own test for reverse_range/reverse_iterator, at that point I think I'd rather just delete it.\n\nWhat I mean is that if the 5 changes in https://github.com/bitcoin/bitcoin/commit/ad087bd496e46b4ae93b96089c0d609f183d3e4d are incorrect (as you think they are and unlike those in https://github.com/bitcoin/bitcoin/pull/10193/commits/e01c26c1f81a6ba5949e8292e42979e26be971a",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-308459910,308459910,
jtimon,2017-06-18T21:47:37Z,"TODO As pointed out on IRC by @theuni it seems we neither need to do the same as in prevector_tests everywhere, it is not even needed in prevector_tests.cpp itself with a small fix in prevector. Thanks again. ",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-309305146,309305146,
jtimon,2017-06-19T00:37:18Z,"Updated with @theuni 's latest proposed fix and fully removing ForEachMacros from clang-format following @MarcoFalke 's hint.\n",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-309313735,309313735,
theuni,2017-06-19T22:40:39Z,"NACK retracted after some local experimentation. This is effectively tested in the prevector tests, which now work as expected.\n\nutACK other than the header name nit.",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-309593564,309593564,
jtimon,2017-06-22T01:49:40Z,"Fixed @theuni 's nit.\n",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-310252976,310252976,
sipa,2017-06-22T08:09:36Z,utACK b1268a19d0b80401339ede2188abbd389f8d7fb0,https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-310308120,310308120,
practicalswift,2017-06-22T08:17:50Z,utACK b1268a1 modulo licensing approval from @arvidsson :-),https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-310309999,310309999,
fanquake,2017-06-28T00:56:23Z,"ACK b1268a1\n\n~140 Boost includes left, with the majority being in /test code.",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-311526605,311526605,
laanwj,2017-07-04T16:05:15Z,utACK b1268a1,https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-312911786,312911786,
paveljanik,2017-07-08T12:02:11Z,"This PR brought few shadowing warnings:\n\n```\n./reverse_iterator.h:20:22: warning: declaration shadows a field of 'reverse_range<T>' [-Wshadow]\n```\n",https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-313851883,313851883,
jtimon,2017-07-08T17:51:24Z,Sorry about that. It seems I don't get those warnings locally?,https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-313870924,313870924,
paveljanik,2017-07-10T04:30:40Z,@jtimon You have to build with `-Wshadow`.,https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-313999277,313999277,
jtimon,2017-07-10T18:04:59Z,@paveljanik any reason why that's not the default if we want to comply with it?,https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-314186983,314186983,
paveljanik,2017-07-10T18:15:03Z,Long story short: compilers are evolving and support this option differently. Sometimes old versions warn about correct code etc.,https://github.com/bitcoin/bitcoin/pull/10193#issuecomment-314189878,314189878,
dcousens,2017-04-13T00:41:05Z,is the `decltype` even needed?,https://github.com/bitcoin/bitcoin/pull/10193#discussion_r111290497,111290497,src/reverse_iterator.hpp
tjps,2017-04-13T07:33:13Z,"PAIRTYPE only exists in service of BOOST_FOREACH, would it make sense to remove it in this PR as well?",https://github.com/bitcoin/bitcoin/pull/10193#discussion_r111326802,111326802,src/init.cpp
jtimon,2017-04-17T12:09:42Z,"Yes, if I remove it I get ```‘begin’ function uses ‘auto’ type specifier without trailing return type```.\nIf I replace the auto with T::reverse_iterator I get ```need ‘typename’ before ‘T::reverse_iterator’ because ‘T’ is a dependent scope```.",https://github.com/bitcoin/bitcoin/pull/10193#discussion_r111734748,111734748,src/reverse_iterator.hpp
dcousens,2017-04-17T13:10:51Z,"@jtimon right, omitting `decltype` is a C++_14_ feature - my bad",https://github.com/bitcoin/bitcoin/pull/10193#discussion_r111739520,111739520,src/reverse_iterator.hpp
MarcoFalke,2017-06-18T20:57:01Z,Is this macro still used?,https://github.com/bitcoin/bitcoin/pull/10193#discussion_r122600703,122600703,src/.clang-format
jtimon,2017-06-18T21:45:38Z,I think it was never used but it was there from the beginning ( https://github.com/jtimon/bitcoin/commit/2887bffcfdc138f53c60091ab2906790971c9af5 ). @sipa do you remember why we add it? Perhaps we can Remove the full ForEachMacro line ?,https://github.com/bitcoin/bitcoin/pull/10193#discussion_r122601549,122601549,src/.clang-format
theuni,2017-06-19T22:36:18Z,nit: please rename to reverse_iterator.h to match the other headers,https://github.com/bitcoin/bitcoin/pull/10193#discussion_r122842213,122842213,src/Makefile.am
MarcoFalke,2017-06-20T07:40:41Z,Can we just use this here? I couldn't find that this is MIT licensed. ,https://github.com/bitcoin/bitcoin/pull/10193#discussion_r122901120,122901120,src/reverse_iterator.hpp
jtimon,2017-06-22T01:38:05Z,"I assumed it is public domain, but perhaps we should ask the author? \nping @arvidsson",https://github.com/bitcoin/bitcoin/pull/10193#discussion_r123404163,123404163,src/reverse_iterator.hpp
arvidsson,2017-06-22T12:55:11Z,"Yeah, it's public domain.",https://github.com/bitcoin/bitcoin/pull/10193#discussion_r123501486,123501486,src/reverse_iterator.hpp
practicalswift,2017-06-22T13:24:33Z,Thanks @arvidsson!,https://github.com/bitcoin/bitcoin/pull/10193#discussion_r123508221,123508221,src/reverse_iterator.hpp
