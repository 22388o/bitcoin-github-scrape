[
  {
    "sha": "6d2d2eb49389d70a5db327e133c9c90748f82d5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDJkMmViNDkzODlkNzBhNWRiMzI3ZTEzM2M5YzkwNzQ4ZjgyZDVm",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-07-18T00:19:21Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-08-28T22:57:28Z"
      },
      "message": "RPC: gettxout: Slightly improve doc and tests",
      "tree": {
        "sha": "61a3e63c1e850983815db56dc9cdf7300866c848",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61a3e63c1e850983815db56dc9cdf7300866c848"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d2d2eb49389d70a5db327e133c9c90748f82d5f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZpJ/cAAoJEIhmwY6hyUSiZ1YP/j/goh5Tyn7PHXJQ9C6KJvqF\narPx3tt+mJa6D8ZYmgvnwsMxWnRCrRFTyrfKjTwrpemyAVurK7CFlaX2lQxxlshI\nnIAgah2Vij8BY8MtcpiotSKIo/aVsLab4Gw85PBusbxKl7v5KZgSVrTTPg4YbLN2\nJ1XaECidKZVpmdVRl8bnhtmv3XWP3vnNInXr4rR7kvZB4XGGkBFiAVwcLqVvTMSg\n4Uezf/ng9TS/pEqz8c9ZBvlE1aIq2FHCsW2IVoNp7paRKnKUzgv776HBO535wd+o\npQudtGUUexmyWat1mWMMYwEH0awgGqJjpVfQFFO3DOVeJdvnS1oiC2TpytdcjiHQ\nqAgOlwBKqT6yAOKsDXJeCY52uF5yFoFRXxPDjrFZWoBluLABorpXqt6MVI55SkXK\n1+9yEckY6aC5YntDCNXv0DAVXizcAmGV3ZIuEU/gg8T27APZVrhrNjoFcbgvYez0\n+Qk+o6vC6PNCe7VTixc8focRBVBhDcYBWTRrFE24/WkMgFNhcqswQMCgkZHX1xQl\na85eqpNGy8xrvJ/kuq6lKGWfvO123mu8lq8ExVE6LNtdiSnKGd6GsHOJ2F6ALNuH\nnM5ivOfr9hfgkJKOHT9V+davl9Dw/ryI8e0EbZPL1l++OTYBLd/s3HxAo9ChmCp1\nBhL1f5Qebgw1rGrq9Fyk\n=6EkU\n-----END PGP SIGNATURE-----",
        "payload": "tree 61a3e63c1e850983815db56dc9cdf7300866c848\nparent 0b019357ff09e7a522307fc271d6b60562a7b890\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1500337161 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1503961048 +0200\n\nRPC: gettxout: Slightly improve doc and tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d2d2eb49389d70a5db327e133c9c90748f82d5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d2d2eb49389d70a5db327e133c9c90748f82d5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d2d2eb49389d70a5db327e133c9c90748f82d5f/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b019357ff09e7a522307fc271d6b60562a7b890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b019357ff09e7a522307fc271d6b60562a7b890",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b019357ff09e7a522307fc271d6b60562a7b890"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "10eb7f13a3abf8bace4c1e46e54ff088e9f89006",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d2d2eb49389d70a5db327e133c9c90748f82d5f/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d2d2eb49389d70a5db327e133c9c90748f82d5f/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=6d2d2eb49389d70a5db327e133c9c90748f82d5f",
        "patch": "@@ -944,9 +944,10 @@ UniValue gettxout(const JSONRPCRequest& request)\n             \"gettxout \\\"txid\\\" n ( include_mempool )\\n\"\n             \"\\nReturns details about an unspent transaction output.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"txid\\\"       (string, required) The transaction id\\n\"\n-            \"2. n              (numeric, required) vout number\\n\"\n-            \"3. include_mempool  (boolean, optional) Whether to include the mempool\\n\"\n+            \"1. \\\"txid\\\"             (string, required) The transaction id\\n\"\n+            \"2. \\\"n\\\"                (numeric, required) vout number\\n\"\n+            \"3. \\\"include_mempool\\\"  (boolean, optional) Whether to include the mempool. Default: true.\"\n+            \"     Note that an unspent output that is spent in the mempool won't appear.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"bestblock\\\" : \\\"hash\\\",    (string) the block hash\\n\""
      },
      {
        "sha": "a37c457bc813476a6d02fe828366e887fd5aae4c",
        "filename": "test/functional/wallet.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d2d2eb49389d70a5db327e133c9c90748f82d5f/test/functional/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d2d2eb49389d70a5db327e133c9c90748f82d5f/test/functional/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet.py?ref=6d2d2eb49389d70a5db327e133c9c90748f82d5f",
        "patch": "@@ -56,6 +56,15 @@ def run_test(self):\n         assert_equal(len(self.nodes[1].listunspent()), 1)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n+        self.log.info(\"test gettxout\")\n+        confirmed_txid, confirmed_index = utxos[0][\"txid\"], utxos[0][\"vout\"]\n+        # First, outputs that are unspent both in the chain and in the\n+        # mempool should appear with or without include_mempool\n+        txout = self.nodes[0].gettxout(txid=confirmed_txid, n=confirmed_index, include_mempool=False)\n+        assert_equal(txout['value'], 50)\n+        txout = self.nodes[0].gettxout(txid=confirmed_txid, n=confirmed_index, include_mempool=True)\n+        assert_equal(txout['value'], 50)\n+        \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n         # Locked memory should use at least 32 bytes to sign each transaction\n         self.log.info(\"test getmemoryinfo\")\n@@ -65,10 +74,9 @@ def run_test(self):\n         memory_after = self.nodes[0].getmemoryinfo()\n         assert(memory_before['locked']['used'] + 64 <= memory_after['locked']['used'])\n \n-        self.log.info(\"test gettxout\")\n+        self.log.info(\"test gettxout (second part)\")\n         # utxo spent in mempool should be visible if you exclude mempool\n         # but invisible if you include mempool\n-        confirmed_txid, confirmed_index = utxos[0][\"txid\"], utxos[0][\"vout\"]\n         txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, False)\n         assert_equal(txout['value'], 50)\n         txout = self.nodes[0].gettxout(confirmed_txid, confirmed_index, True)"
      }
    ]
  }
]