jonasschnelli,2017-11-25T08:22:33Z,"Nice. Thanks for contributing.\nConcept ACK.\n\nWhat holds you back in completing this with supporting hex/bin? Should be trivial.",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346926397,346926397,
aaron-hanson,2017-11-25T08:34:57Z,"@jonasschnelli Yeah I noticed the hex/bin pattern but wasn't entirely sure if I should use those here too.  I suppose I wasn't sure exactly what should be serialized in this case, as the other endpoints using bin/hex are serializing whole class/struct instances like CBlockHeader or CBlock, whereas this is a simple hash string.  I can certainly add that support.\n\nThanks for taking a look!",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346926916,346926916,
jonasschnelli,2017-11-25T08:39:21Z,"@aaron-hanson.\nYou can just create a data stream and push the hashes onto the stream. A rest client could save ~50% brutto bandwidth over a JSON/hexstring.\n```\nCDataStream ssFooBar(SER_NETWORK, PROTOCOL_VERSION);\nssGetUTXOResponse << pindex->GetBlockHash();\n```\n",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346927096,346927096,
aaron-hanson,2017-11-25T10:16:21Z,"Added bin/hex formats, associated tests and documentation.",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346931585,346931585,
aaron-hanson,2017-11-25T23:28:40Z,"> Another option would be to overload /rest/block/[hash|height].[bin,hex.json]. Note that json response includes the hash.\n\n@promag - I thought about this too...  After researching a bit I found an older issue (#6011) about essentially the same thing, but in RPC.  I assumed from the opinions there that I should probably just add this blockhash endpoint and not overload the block endpoint.",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346973037,346973037,
promag,2017-11-26T00:52:39Z,"As others say in #6011, it was possible to query block by height but with 2 calls. With REST call there is no way unless you walk back from the tip. Unless we want to mirror the RPC interface, I think overloading sounds cooler.\n\nIn that scenario, the difference between the 2 endpoints would be cache headers, since by hash the block is immutable but not by height (at least near the tip).",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346976256,346976256,
promag,2017-11-26T00:54:41Z,BTW nice first contribution.,https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-346976318,346976318,
promag,2017-11-27T09:38:46Z,utACK b026c5f. Needs squash.,https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-347127668,347127668,
promag,2018-02-03T15:01:59Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-362818827,362818827,
jnewbery,2018-04-03T21:54:02Z,"@aaron-hanson - are you still working on this? It needs rebasing and squashing.\n\nSuggest we close with 'up for grabs' if there's no activity on this PR soon.",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-378411811,378411811,
aaron-hanson,2018-04-03T22:29:44Z,"@jnewbery - ah sorry, for some reason I missed the previous comments...  I'll squash/rebase and retest tonight.",https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-378419831,378419831,
aaron-hanson,2018-04-04T02:24:14Z,@jnewbery @promag - squashed and rebased.,https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-378459553,378459553,
aaron-hanson,2018-06-18T21:01:36Z,@jnewbery thanks for the tips!  I should have time this week to make the style adjustments and do a new rebase.,https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-398194454,398194454,
adamjonas,2019-10-21T18:07:58Z,This was replaced by #14353. Up for grabs label can be removed.,https://github.com/bitcoin/bitcoin/pull/11765#issuecomment-544637283,544637283,
jonasschnelli,2017-11-25T19:48:11Z,"Instead of forming the stream, use `req->WriteReply(HTTP_OK, pindex->GetBlockHash()->GetHex());`?",https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153052912,153052912,src/rest.cpp
aaron-hanson,2017-11-25T20:20:22Z,Yeah I was wondering about this...I had just followed the pattern for the other endpoints' hex formats.  Directly writing the output of pindex->GetBlockHash().GetHex() reverses the order of the bytes as compared to HexStr().  I'm not sure which is correct?,https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153053540,153053540,src/rest.cpp
promag,2017-11-26T15:03:44Z,Only json format? ðŸ˜„ ,https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153072870,153072870,src/rest.cpp
aaron-hanson,2017-11-26T16:18:15Z,"Ah, nice catch...details!",https://github.com/bitcoin/bitcoin/pull/11765#discussion_r153074933,153074933,src/rest.cpp
jnewbery,2018-04-04T13:45:34Z,"Could the call to `pindex->GetBlockHash()` be refactored out of the switch statement, both to reduce code repetition and to minimise the scope of where `cs_main` is held?",https://github.com/bitcoin/bitcoin/pull/11765#discussion_r179144650,179144650,src/rest.cpp
jnewbery,2018-04-04T13:47:12Z,"Be aware of #12766, which completely refactors this test (and makes it much better IMO). That obviously conflicts heavily with this change.",https://github.com/bitcoin/bitcoin/pull/11765#discussion_r179145196,179145196,test/functional/interface_rest.py
