[
  {
    "sha": "6ba82cb60a2d991feb6934c10707b9ff157cd904",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YmE4MmNiNjBhMmQ5OTFmZWI2OTM0YzEwNzA3YjlmZjE1N2NkOTA0",
    "commit": {
      "author": {
        "name": "jet0",
        "email": "fact@protonmail.ch",
        "date": "2017-04-19T13:03:55Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-04-19T13:03:55Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\nupdate from master",
      "tree": {
        "sha": "3e439bd8d02625e75db5903c767a007c22ad6c9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e439bd8d02625e75db5903c767a007c22ad6c9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ba82cb60a2d991feb6934c10707b9ff157cd904",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ba82cb60a2d991feb6934c10707b9ff157cd904",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ba82cb60a2d991feb6934c10707b9ff157cd904",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ba82cb60a2d991feb6934c10707b9ff157cd904/comments",
    "author": {
      "login": "jet0",
      "id": 27317396,
      "node_id": "MDQ6VXNlcjI3MzE3Mzk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27317396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jet0",
      "html_url": "https://github.com/jet0",
      "followers_url": "https://api.github.com/users/jet0/followers",
      "following_url": "https://api.github.com/users/jet0/following{/other_user}",
      "gists_url": "https://api.github.com/users/jet0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jet0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jet0/subscriptions",
      "organizations_url": "https://api.github.com/users/jet0/orgs",
      "repos_url": "https://api.github.com/users/jet0/repos",
      "events_url": "https://api.github.com/users/jet0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jet0/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9111df9673beb6d6616d491a5478f09b5f14d040",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9111df9673beb6d6616d491a5478f09b5f14d040",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9111df9673beb6d6616d491a5478f09b5f14d040"
      },
      {
        "sha": "c91ca0ace9bd62eea8158b92cfc53d6d219e37b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c91ca0ace9bd62eea8158b92cfc53d6d219e37b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c91ca0ace9bd62eea8158b92cfc53d6d219e37b7"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 18,
      "deletions": 43
    },
    "files": [
      {
        "sha": "4bb260aa588ae2c5eeb6b5e723de43455f404aef",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=6ba82cb60a2d991feb6934c10707b9ff157cd904",
        "patch": "@@ -18,14 +18,8 @@\n  */\n bool TransactionRecord::showTransaction(const CWalletTx &wtx)\n {\n-    if (wtx.IsCoinBase())\n-    {\n-        // Ensures we show generated coins / mined transactions at depth 1\n-        if (!wtx.IsInMainChain())\n-        {\n-            return false;\n-        }\n-    }\n+    // There are currently no cases where we hide transactions, but\n+    // we may want to use this in the future for things like RBF.\n     return true;\n }\n "
      },
      {
        "sha": "8eeba72a064b2f2b6063de09ad8ab5c6ca235f31",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=6ba82cb60a2d991feb6934c10707b9ff157cd904",
        "patch": "@@ -424,6 +424,17 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n         BOOST_CHECK_EQUAL(response.write(), strprintf(\"[{\\\"success\\\":false,\\\"error\\\":{\\\"code\\\":-1,\\\"message\\\":\\\"Failed to rescan before time %d, transactions may be missing.\\\"}},{\\\"success\\\":true}]\", newTip->GetBlockTimeMax()));\n         ::pwalletMain = backup;\n     }\n+\n+    // Verify ScanForWalletTransactions does not return null when the scan is\n+    // elided due to the nTimeFirstKey optimization.\n+    {\n+        CWallet wallet;\n+        {\n+            LOCK(wallet.cs_wallet);\n+            wallet.UpdateTimeFirstKey(newTip->GetBlockTime() + 7200 + 1);\n+        }\n+        BOOST_CHECK_EQUAL(newTip, wallet.ScanForWalletTransactions(newTip));\n+    }\n }\n \n // Check that GetImmatureCredit() returns a newly calculated value instead of"
      },
      {
        "sha": "b5e26e26d3c26f6afb86617660420b408b979bc2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 31,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6ba82cb60a2d991feb6934c10707b9ff157cd904",
        "patch": "@@ -1155,33 +1155,6 @@ void CWallet::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const\n     for (size_t i = 0; i < pblock->vtx.size(); i++) {\n         SyncTransaction(pblock->vtx[i], pindex, i);\n     }\n-\n-    // The GUI expects a NotifyTransactionChanged when a coinbase tx\n-    // which is in our wallet moves from in-the-best-block to\n-    // 2-confirmations (as it only displays them at that time).\n-    // We do that here.\n-    if (hashPrevBestCoinbase.IsNull()) {\n-        // Immediately after restart we have no idea what the coinbase\n-        // transaction from the previous block is.\n-        // For correctness we scan over the entire wallet, looking for\n-        // the previous block's coinbase, just in case it is ours, so\n-        // that we can notify the UI that it should now be displayed.\n-        if (pindex->pprev) {\n-            for (const std::pair<uint256, CWalletTx>& p : mapWallet) {\n-                if (p.second.IsCoinBase() && p.second.hashBlock == pindex->pprev->GetBlockHash()) {\n-                    NotifyTransactionChanged(this, p.first, CT_UPDATED);\n-                    break;\n-                }\n-            }\n-        }\n-    } else {\n-        std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(hashPrevBestCoinbase);\n-        if (mi != mapWallet.end()) {\n-            NotifyTransactionChanged(this, hashPrevBestCoinbase, CT_UPDATED);\n-        }\n-    }\n-\n-    hashPrevBestCoinbase = pblock->vtx[0]->GetHash();\n }\n \n void CWallet::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) {\n@@ -1542,16 +1515,17 @@ void CWalletTx::GetAccountAmounts(const std::string& strAccount, CAmount& nRecei\n  * exist in the wallet will be updated.\n  *\n  * Returns pointer to the first block in the last contiguous range that was\n- * successfully scanned.\n- *\n+ * successfully scanned or elided (elided if pIndexStart points at a block\n+ * before CWallet::nTimeFirstKey). Returns null if there is no such range, or\n+ * the range doesn't include chainActive.Tip().\n  */\n CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n {\n-    CBlockIndex* ret = nullptr;\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n     CBlockIndex* pindex = pindexStart;\n+    CBlockIndex* ret = pindexStart;\n     {\n         LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n@@ -3887,7 +3861,7 @@ bool CWallet::InitLoadWallet()\n \n     std::string walletFile = GetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n \n-    if (walletFile.find_first_of(\"/\\\\\") != std::string::npos) {\n+    if (boost::filesystem::path(walletFile).filename() != walletFile) {\n         return InitError(_(\"-wallet parameter must only specify a filename (not a path)\"));\n     } else if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n         return InitError(_(\"Invalid characters in -wallet filename\"));"
      },
      {
        "sha": "06e7e14990068e2fd8adc4051ba27e33877d68a1",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ba82cb60a2d991feb6934c10707b9ff157cd904/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=6ba82cb60a2d991feb6934c10707b9ff157cd904",
        "patch": "@@ -715,10 +715,6 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      */\n     bool AddWatchOnly(const CScript& dest) override;\n \n-    // Used to NotifyTransactionChanged of the previous block's coinbase when\n-    // the next block comes in\n-    uint256 hashPrevBestCoinbase;\n-\n public:\n     /*\n      * Main wallet lock."
      }
    ]
  }
]