jnewbery,2019-11-01 14:28:13,h/t to @jonatack for adding logging in #17327. It wouldn't have been obvious where the delays were being introduced without that PR.,https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548808211,548808211,
jnewbery,2019-11-01 14:29:49,"Sample run before this PR:\n\n```\n ./rpc_fundrawtransaction.py \n2019-11-01T14:11:43.898000Z TestFramework (INFO): Initializing test directory /tmp/user/1000/bitcoin_func_test__37epvjg\n2019-11-01T14:11:45.270000Z TestFramework (INFO): Connect nodes, set fees, generate blocks, and sync\n...\n2019-11-01T14:12:41.473000Z TestFramework (INFO): Tests successful\n```\n\n(58 seconds)\n\naft",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548808808,548808808,
promag,2019-11-01 15:55:19,"> rpc_fundrawtransaction.py is not intended to be a test for transaction\nrelay\n\nConcept ACK, nice speedup!",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548841636,548841636,
jonatack,2019-11-01 16:50:02,"In test_runner.py::BASE_SCRIPTS, rpc_fundrawtransaction.py could be moved down 3 groups to the upper part of `Tests less than 30s`.",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548862741,548862741,
achow101,2019-11-01 16:53:57,Are there other tests where we could make a similar improvement?,https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548865481,548865481,
jnewbery,2019-11-01 16:58:36,"> Are there other tests where we could make a similar improvement?\n\nYes. Anything that is sped up by https://github.com/bitcoin/bitcoin/pull/15881 could be individually sped up by changing how txs are relayed in that test. Alternatively, running the tests under a python profiler and checking which ones spend a lot of time in `sync_mempools` would show places that could be optimized.",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548867153,548867153,
MarcoFalke,2019-11-01 17:02:21,"If you decide to re-sort the tests, could also include the ones that have been made faster here: https://github.com/bitcoin/bitcoin/issues/16613#issuecomment-541375007",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548868514,548868514,
jnewbery,2019-11-01 21:40:07,Made it faster,https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548960321,548960321,
jnewbery,2019-11-01 21:40:43,"> If you decide to re-sort the tests, could also include the ones that have been made faster here: #16613 (comment)\n\nI think that could be done separately",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548960465,548960465,
MarcoFalke,2019-11-01 21:44:05,Rebase or force push to work around the GitHub bug?,https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548961374,548961374,
jnewbery,2019-11-01 21:45:27,"> Rebase or force push to work around the GitHub bug?\n\nDone. Thanks!",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-548961779,548961779,
jonatack,2019-11-04 08:02:03,"> Run times in seconds for me:\n> \n> [ff22751](https://github.com/bitcoin/bitcoin/commit/ff22751417c6fbbd22f4eefd0e23431a83335c13): 62, 61, 52, 56, 61, 64\n> \n> [a8f7497](https://github.com/bitcoin/bitcoin/commit/a8f7497a2335842dd357fa16ce1b38962a718b2a): 20, 22, 21, 21, 20, 22\n\n2919ad318a723c7b90147298d93dd95458c7715f: 20, 21, 22, 24, 21, 21 -> I'm not seeing improvement over a8f7497a23",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-549252458,549252458,
jnewbery,2019-11-04 18:41:12,"> I'm not seeing improvement over a8f7497\n\nI see at least a second saved on average from not having to stop-start the nodes. I think not stop-starting when unnecessary makes a cleaner test in any case.",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-549490829,549490829,
MarcoFalke,2019-11-06 20:16:05,"ACK af7bae734089f6af0029b0887932ccd9a469e12e ðŸ›´\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK af7bae734089f6af0029b0887932ccd9a469e12e ðŸ›´\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjUQgv/SnHpKGtJxibslQvpMWvhSH/cHWuncQh/jXzz7ygbG1fBHdLK2H",https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-550482255,550482255,
promag,2019-11-06 20:42:36,Here we go :owl: ,https://github.com/bitcoin/bitcoin/pull/17340#issuecomment-550491880,550491880,
jonatack,2019-11-04 09:49:17,"s/127.0.01/127.0.0.1/ ?\n\nCredit to @practicalswift who caught it in my PR ;)",https://github.com/bitcoin/bitcoin/pull/17340#discussion_r341965504,341965504,test/functional/rpc_fundrawtransaction.py
Sjors,2019-11-04 17:28:40,"Maybe also make it more specific: `-whitelist=relay@127.0.0.1`.\n\n~You could also add `-whitebind` to cover both inbound and outbound, however for some reason this requires you to specify a port, so you'd have to tweak the test suite for that.~\n\nAfaik whitelist only works for inbound connections. Not sure if that matters here.",https://github.com/bitcoin/bitcoin/pull/17340#discussion_r342174303,342174303,test/functional/rpc_fundrawtransaction.py
jnewbery,2019-11-04 18:39:59,Fixed. Thanks!,https://github.com/bitcoin/bitcoin/pull/17340#discussion_r342205949,342205949,test/functional/rpc_fundrawtransaction.py
jonatack,2019-11-06 10:43:08,"Could do\n```diff\n     def set_test_params(self):\n-        self.num_nodes = 4\n+        num_nodes = 4\n+        self.num_nodes = num_nodes\n         self.setup_clean_chain = True\n         # This test isn't testing tx relay. Set whitelist on the peers for\n         # instant tx relay.\n-        self.extra_args = [['-whitelist=127.0.0.1']] * 4\n+        self.extra_args = [['-whitelist=1",https://github.com/bitcoin/bitcoin/pull/17340#discussion_r343026799,343026799,test/functional/rpc_fundrawtransaction.py
jnewbery,2019-11-06 19:57:12,"even better, just:\n\n```\n        self.extra_args = [['-whitelist=127.0.0.1']] * self.num_nodes\n```\n\nwhich I've now done.\n",https://github.com/bitcoin/bitcoin/pull/17340#discussion_r343298038,343298038,test/functional/rpc_fundrawtransaction.py
jonatack,2019-11-07 09:16:00,"Yes, even better; doing the same in wallet_avoidreuse.py",https://github.com/bitcoin/bitcoin/pull/17340#discussion_r343544191,343544191,test/functional/rpc_fundrawtransaction.py
