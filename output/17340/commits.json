[
  {
    "sha": "646b593bbd0db113c6e45ab92177b8f5251e8710",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDZiNTkzYmJkMGRiMTEzYzZlNDVhYjkyMTc3YjhmNTI1MWU4NzEw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-01T14:21:01Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-04T18:20:23Z"
      },
      "message": "[tests] Speed up rpc_fundrawtransaction.py\n\nMost of the time in rpc_fundrawtransaction.py is spent waiting for\nunconfirmed transactions to propagate. Net processing adds a poisson\nrandom delay to the time it will INV transactions with a mean interval\nof 5 seconds. Calls like the following:\n\n```\nself.nodes[2].sendrawtransaction(signedTx['hex'])\nself.sync_all()\nself.nodes[1].generate(1)\n````\n\nwill therefore introduce a delay waiting for the mempools to sync.\nInstead just generate the block on the node that sent the transaction:\n\n```\nself.nodes[2].sendrawtransaction(signedTx['hex'])\nself.nodes[2].generate(1)\n```\n\nrpc_fundrawtransaction.py is not intended to be a test for transaction\nrelay, so it's ok to do this.",
      "tree": {
        "sha": "31ff443171ddb47b5cb49cbba0c6cfb9d3451001",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31ff443171ddb47b5cb49cbba0c6cfb9d3451001"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/646b593bbd0db113c6e45ab92177b8f5251e8710",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/646b593bbd0db113c6e45ab92177b8f5251e8710",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/646b593bbd0db113c6e45ab92177b8f5251e8710",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/646b593bbd0db113c6e45ab92177b8f5251e8710/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c737839471feeebdd6c4e9e29d81ed33cdbc5540",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c737839471feeebdd6c4e9e29d81ed33cdbc5540",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c737839471feeebdd6c4e9e29d81ed33cdbc5540"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 5,
      "deletions": 10
    },
    "files": [
      {
        "sha": "e0421bb32270835cf560d17b24685c9d02094c14",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/646b593bbd0db113c6e45ab92177b8f5251e8710/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/646b593bbd0db113c6e45ab92177b8f5251e8710/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=646b593bbd0db113c6e45ab92177b8f5251e8710",
        "patch": "@@ -470,8 +470,7 @@ def test_spend_2of2(self):\n \n         # Send 1.2 BTC to msig addr.\n         self.nodes[0].sendtoaddress(mSigObj, 1.2)\n-        self.sync_all()\n-        self.nodes[1].generate(1)\n+        self.nodes[0].generate(1)\n         self.sync_all()\n \n         oldBalance = self.nodes[1].getbalance()\n@@ -482,8 +481,7 @@ def test_spend_2of2(self):\n \n         signedTx = self.nodes[2].signrawtransactionwithwallet(fundedTx['hex'])\n         self.nodes[2].sendrawtransaction(signedTx['hex'])\n-        self.sync_all()\n-        self.nodes[1].generate(1)\n+        self.nodes[2].generate(1)\n         self.sync_all()\n \n         # Make sure funds are received at node1.\n@@ -550,8 +548,7 @@ def test_many_inputs_fee(self):\n \n         # Empty node1, send some small coins from node0 to node1.\n         self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True)\n-        self.sync_all()\n-        self.nodes[0].generate(1)\n+        self.nodes[1].generate(1)\n         self.sync_all()\n \n         for i in range(0,20):\n@@ -579,8 +576,7 @@ def test_many_inputs_send(self):\n \n         # Again, empty node1, send some small coins from node0 to node1.\n         self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True)\n-        self.sync_all()\n-        self.nodes[0].generate(1)\n+        self.nodes[1].generate(1)\n         self.sync_all()\n \n         for i in range(0,20):\n@@ -597,8 +593,7 @@ def test_many_inputs_send(self):\n         fundedTx = self.nodes[1].fundrawtransaction(rawtx)\n         fundedAndSignedTx = self.nodes[1].signrawtransactionwithwallet(fundedTx['hex'])\n         self.nodes[1].sendrawtransaction(fundedAndSignedTx['hex'])\n-        self.sync_all()\n-        self.nodes[0].generate(1)\n+        self.nodes[1].generate(1)\n         self.sync_all()\n         assert_equal(oldBalance+Decimal('50.19000000'), self.nodes[0].getbalance()) #0.19+block reward\n "
      }
    ]
  },
  {
    "sha": "9a8505299ba392acbab4647963113b0c29495f1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTg1MDUyOTliYTM5MmFjYmFiNDY0Nzk2MzExM2IwYzI5NDk1ZjFk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-01T21:38:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-06T19:56:29Z"
      },
      "message": "[tests] Use -whitelist in rpc_fundrawtransaction.py\n\nMakes tx relay faster",
      "tree": {
        "sha": "d7278dca91277097e9bd569494f4f7ffcb80ed7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7278dca91277097e9bd569494f4f7ffcb80ed7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a8505299ba392acbab4647963113b0c29495f1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a8505299ba392acbab4647963113b0c29495f1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a8505299ba392acbab4647963113b0c29495f1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a8505299ba392acbab4647963113b0c29495f1d/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "646b593bbd0db113c6e45ab92177b8f5251e8710",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/646b593bbd0db113c6e45ab92177b8f5251e8710",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/646b593bbd0db113c6e45ab92177b8f5251e8710"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "84f7ac6400d43375cb914d4b244e11c8a4b6c12b",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a8505299ba392acbab4647963113b0c29495f1d/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a8505299ba392acbab4647963113b0c29495f1d/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=9a8505299ba392acbab4647963113b0c29495f1d",
        "patch": "@@ -28,6 +28,9 @@ class RawTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 4\n         self.setup_clean_chain = True\n+        # This test isn't testing tx relay. Set whitelist on the peers for\n+        # instant tx relay.\n+        self.extra_args = [['-whitelist=127.0.0.1']] * self.num_nodes\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      }
    ]
  },
  {
    "sha": "af7bae734089f6af0029b0887932ccd9a469e12e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjdiYWU3MzQwODlmNmFmMDAyOWIwODg3OTMyY2NkOWE0NjllMTJl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-01T21:38:44Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-06T19:56:35Z"
      },
      "message": "[tests] Don't stop-start unnecessarily in rpc_fundrawtransaction.py\n\nThis was only added in c1dde3a949b36ce9c2155777b3fa1372e7ed97d8 to match\nbehaviour when `encryptwallet` would restart the node. It's not required\nfor the test (and slows things down).",
      "tree": {
        "sha": "7be783d45a56f981e732cc13d20047e0d3f28da5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7be783d45a56f981e732cc13d20047e0d3f28da5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af7bae734089f6af0029b0887932ccd9a469e12e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af7bae734089f6af0029b0887932ccd9a469e12e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af7bae734089f6af0029b0887932ccd9a469e12e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af7bae734089f6af0029b0887932ccd9a469e12e/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a8505299ba392acbab4647963113b0c29495f1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a8505299ba392acbab4647963113b0c29495f1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a8505299ba392acbab4647963113b0c29495f1d"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 0,
      "deletions": 16
    },
    "files": [
      {
        "sha": "693051edc0a43174f43712f3360145504bd34066",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af7bae734089f6af0029b0887932ccd9a469e12e/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af7bae734089f6af0029b0887932ccd9a469e12e/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=af7bae734089f6af0029b0887932ccd9a469e12e",
        "patch": "@@ -494,22 +494,6 @@ def test_locked_wallet(self):\n         self.log.info(\"Test fundrawtxn with locked wallet\")\n \n         self.nodes[1].encryptwallet(\"test\")\n-        self.stop_nodes()\n-\n-        self.start_nodes()\n-        # This test is not meant to test fee estimation and we'd like\n-        # to be sure all txns are sent at a consistent desired feerate.\n-        for node in self.nodes:\n-            node.settxfee(self.min_relay_tx_fee)\n-\n-        connect_nodes(self.nodes[0], 1)\n-        connect_nodes(self.nodes[1], 2)\n-        connect_nodes(self.nodes[0], 2)\n-        connect_nodes(self.nodes[0], 3)\n-        # Again lock the watchonly UTXO or nodes[0] may spend it, because\n-        # lockunspent is memory-only and thus lost on restart.\n-        self.nodes[0].lockunspent(False, [{\"txid\": self.watchonly_txid, \"vout\": self.watchonly_vout}])\n-        self.sync_all()\n \n         # Drain the keypool.\n         self.nodes[1].getnewaddress()"
      }
    ]
  }
]