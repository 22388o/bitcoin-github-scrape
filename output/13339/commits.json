[
  {
    "sha": "9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTViNWVlODFmMTViMWQ4OWNiMjVmZjNlMTM3YTY3MjUzNmNkYzQ2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-05-29T13:37:53Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-15T11:47:26Z"
      },
      "message": "wallet: Replace %w by wallet name in -walletnotify script\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>",
      "tree": {
        "sha": "2ad92d33d68988a6c57e621ae5431fe88dd6ba5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ad92d33d68988a6c57e621ae5431fe88dd6ba5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6196e930018181301b5972842ae384ea4288ff34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6196e930018181301b5972842ae384ea4288ff34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6196e930018181301b5972842ae384ea4288ff34"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 22,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2e58f355129cd5dd0deff922d5749a3982f27477",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
        "patch": "@@ -63,6 +63,7 @@\n #include <malloc.h>\n #endif\n \n+#include <boost/algorithm/string/replace.hpp>\n #include <thread>\n #include <typeinfo>\n #include <univalue.h>\n@@ -1022,6 +1023,15 @@ fs::path GetSpecialFolderPath(int nFolder, bool fCreate)\n }\n #endif\n \n+#ifndef WIN32\n+std::string ShellEscape(const std::string& arg)\n+{\n+    std::string escaped = arg;\n+    boost::replace_all(escaped, \"'\", \"'\\\"'\\\"'\");\n+    return \"'\" + escaped + \"'\";\n+}\n+#endif\n+\n #if HAVE_SYSTEM\n void runCommand(const std::string& strCommand)\n {"
      },
      {
        "sha": "c3424e7da77fab17ebd51e342d5e3643dea944b2",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
        "patch": "@@ -81,6 +81,9 @@ fs::path GetConfigFile(const std::string& confPath);\n #ifdef WIN32\n fs::path GetSpecialFolderPath(int nFolder, bool fCreate = true);\n #endif\n+#ifndef WIN32\n+std::string ShellEscape(const std::string& arg);\n+#endif\n #if HAVE_SYSTEM\n void runCommand(const std::string& strCommand);\n #endif"
      },
      {
        "sha": "5e6e36e5b83ced51228828d2c5e8b02bc2a3c99a",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
        "patch": "@@ -62,7 +62,7 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-walletbroadcast\",  strprintf(\"Make the wallet broadcast transactions (default: %u)\", DEFAULT_WALLETBROADCAST), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-walletdir=<dir>\", \"Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::WALLET);\n #if HAVE_SYSTEM\n-    gArgs.AddArg(\"-walletnotify=<cmd>\", \"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-walletnotify=<cmd>\", \"Execute command when a wallet transaction changes. %s in cmd is replaced by TxID and %w is replaced by wallet name. %w is not currently implemented on windows. On systems where %w is supported, it should NOT be quoted because this would break shell escaping used to invoke the command.\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n #endif\n     gArgs.AddArg(\"-walletrbf\", strprintf(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\", DEFAULT_WALLET_RBF), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-zapwallettxes=<mode>\", \"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\""
      },
      {
        "sha": "fd8c68870dbe13fd48e324ac2ae11fad71e00a0a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
        "patch": "@@ -835,6 +835,14 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     if (!strCmd.empty())\n     {\n         boost::replace_all(strCmd, \"%s\", wtxIn.GetHash().GetHex());\n+#ifndef WIN32\n+        // Substituting the wallet name isn't currently supported on windows\n+        // because windows shell escaping has not been implemented yet:\n+        // https://github.com/bitcoin/bitcoin/pull/13339#issuecomment-537384875\n+        // A few ways it could be implemented in the future are described in:\n+        // https://github.com/bitcoin/bitcoin/pull/13339#issuecomment-461288094\n+        boost::replace_all(strCmd, \"%w\", ShellEscape(GetName()));\n+#endif\n         std::thread t(runCommand, strCmd);\n         t.detach(); // thread runs free\n     }"
      }
    ]
  },
  {
    "sha": "4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTllZmFjNjc4YTljMGVhNGU0YzdkZDk1NmVhMDM2YWU2Y2YxN2Vj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-05-29T13:42:21Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-01-31T22:43:26Z"
      },
      "message": "test: Check wallet name in -walletnotify script",
      "tree": {
        "sha": "a10e476d57c52a41a1619b8c2a3bba2253ff5c70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a10e476d57c52a41a1619b8c2a3bba2253ff5c70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a5b5ee81f15b1d89cb25ff3e137a672536cdc46"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 15,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b110a559c09dcb25f6258a25c132505f113194c8",
        "filename": "test/functional/feature_notifications.py",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec/test/functional/feature_notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec/test/functional/feature_notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_notifications.py?ref=4e9efac678a9c0ea4e4c7dd956ea036ae6cf17ec",
        "patch": "@@ -13,13 +13,24 @@\n     connect_nodes,\n )\n \n+# Linux allow all characters other than \\x00\n+# Windows disallow control characters (0-31) and /\\?%:|\"<>\n+FILE_CHAR_START = 32 if os.name == 'nt' else 1\n+FILE_CHAR_END = 128\n+FILE_CHAR_BLACKLIST = '/\\\\?%*:|\"<>' if os.name == 'nt' else '/'\n+\n+\n+def notify_outputname(walletname, txid):\n+    return txid if os.name == 'nt' else '{}_{}'.format(walletname, txid)\n+\n \n class NotificationsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.setup_clean_chain = True\n \n     def setup_network(self):\n+        self.wallet = ''.join(chr(i) for i in range(FILE_CHAR_START, FILE_CHAR_END) if chr(i) not in FILE_CHAR_BLACKLIST)\n         self.alertnotify_dir = os.path.join(self.options.tmpdir, \"alertnotify\")\n         self.blocknotify_dir = os.path.join(self.options.tmpdir, \"blocknotify\")\n         self.walletnotify_dir = os.path.join(self.options.tmpdir, \"walletnotify\")\n@@ -33,7 +44,8 @@ def setup_network(self):\n                             \"-blocknotify=echo > {}\".format(os.path.join(self.blocknotify_dir, '%s'))],\n                            [\"-blockversion=211\",\n                             \"-rescan\",\n-                            \"-walletnotify=echo > {}\".format(os.path.join(self.walletnotify_dir, '%s'))]]\n+                            \"-wallet={}\".format(self.wallet),\n+                            \"-walletnotify=echo > {}\".format(os.path.join(self.walletnotify_dir, notify_outputname('%w', '%s')))]]\n         super().setup_network()\n \n     def run_test(self):\n@@ -53,7 +65,7 @@ def run_test(self):\n             wait_until(lambda: len(os.listdir(self.walletnotify_dir)) == block_count, timeout=10)\n \n             # directory content should equal the generated transaction hashes\n-            txids_rpc = list(map(lambda t: t['txid'], self.nodes[1].listtransactions(\"*\", block_count)))\n+            txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n             self.stop_node(1)\n             for tx_file in os.listdir(self.walletnotify_dir):\n@@ -67,7 +79,7 @@ def run_test(self):\n             wait_until(lambda: len(os.listdir(self.walletnotify_dir)) == block_count, timeout=10)\n \n             # directory content should equal the generated transaction hashes\n-            txids_rpc = list(map(lambda t: t['txid'], self.nodes[1].listtransactions(\"*\", block_count)))\n+            txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n \n         # TODO: add test for `-alertnotify` large fork notifications"
      }
    ]
  }
]