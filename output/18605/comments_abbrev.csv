DrahtBot,2020-04-12 13:07:03,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-612611439,612611439,
laanwj,2020-04-13 11:14:16,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-612858079,612858079,
fanquake,2020-04-16 00:27:20,Rebased for #17929 and added a commit for Guix. ,https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-614345523,614345523,
jonasschnelli,2020-04-16 06:42:00,"Nice. Concept ACK.\nIs there a clang equivalent for `--gc-sections`?\n`fdata-sections` AFAIK is also supported in clang.\nCould the clang linker flag be `-dead_strip`?",https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-614446495,614446495,
fanquake,2020-04-22 09:36:21,"I've been doing some experiments with Windows builds, and passing `--gc-sections` there currently results in an _increase_ in binary size. I still need to test using a more recent version of binutils.\n\n> Is there a clang equivalent for --gc-sections?\n\n`gc-sections` is a linker flag, so as long as Clang forwards it through, and whichever linker you are using understands it, it should work. ",https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-617668298,617668298,
fanquake,2020-05-22 06:44:35,"I've updated this to drop the changes for Windows for now. After some more experimenting it wasn't clear that it was working as we'd like and I was still seeing increased binary sizes with newer binutils.\n\nI have also updated the PR description with a comparison of the size differences for a gitian build of master vs this branch.",https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-632519808,632519808,
practicalswift,2020-09-18 05:25:05,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-694659135,694659135,
fanquake,2020-11-22 04:21:56,"I rebased this and ran some gitian builds to compare master (816132e6eb23c06287c1e820cc0990d2317c2f10) and this PR (d05d56047a38686c70dc066d010ed8f06990508b) (also included 0.20.1):\n```bash\n# ls -la bitcoin-0.20.1/bin/\n2055800 Jul 31 12:01 bitcoin-cli\n31843176 Jul 31 12:01 bitcoin-qt\n2376152 Jul 31 12:01 bitcoin-tx\n5952832 Jul 31 12:01 bitcoin-wallet\n10312344 Jul 31 12:01 bitcoind\n",https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-731696286,731696286,
dergoegge,2020-12-09 13:51:16,"I confirmed the space savings by running the gitian builds on master and this PR. I also read up on how the used options (`functions-sections`, `data-sections`, `gc-sections`) work and if there any unwanted side effects.\n\nTwo questions:\n1. *AFAICT the options are not active in the depends build. Why not?* \n\nhttps://github.com/bitcoin/bitcoin/blob/d05d56047a38686c70dc066d010ed8f06990508b/",https://github.com/bitcoin/bitcoin/pull/18605#issuecomment-741783719,741783719,
laanwj,2020-04-16 16:24:35,"These flags are effective for the depends build too, I hope?",https://github.com/bitcoin/bitcoin/pull/18605#discussion_r409687492,409687492,contrib/gitian-descriptors/gitian-linux.yml
