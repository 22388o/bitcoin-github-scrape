[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515586615",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16470#issuecomment-515586615",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16470",
    "id": 515586615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTU4NjYxNQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-26T20:19:30Z",
    "updated_at": "2019-07-26T20:19:30Z",
    "author_association": "MEMBER",
    "body": "Example:\r\n\r\n```\r\n2019-07-26T20:11:22.049000Z TestFramework (INFO): Test a re-org of one week's worth of blocks (1088 blocks)\r\n[...]\r\n node0 2019-07-26T20:14:44.224983Z [msghand] UpdateTip: new best=02a38b39fec53caf38302ad6075fb32f1f5dc52737ac36c60dbfbb11849038c4 height=766 version=0x00000004 log2_work=10.583083 tx=12824 date='2019-07-26T20:22:31Z' progress=1.000000 cache=1.6MiB(12000txo) \r\n test  2019-07-26T20:14:58.425000Z TestFramework.mininode (DEBUG): Closed connection to: 127.0.0.1:13931 \r\n[...]\r\n2019-07-26T20:14:58.552000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/test_framework.py\", line 193, in main\r\n    self.run_test()\r\n  File \"./test/functional/feature_block.py\", line 1233, in run_test\r\n    self.send_blocks([block], True, timeout=60*60)\r\n  File \"./test/functional/feature_block.py\", line 1365, in send_blocks\r\n    self.nodes[0].p2p.send_blocks_and_test(blocks, self.nodes[0], success=success, reject_reason=reject_reason, force_send=force_send, timeout=timeout, expect_disconnect=reconnect)\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/mininode.py\", line 561, in send_blocks_and_test\r\n    self.sync_with_ping(timeout=timeout)\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/mininode.py\", line 441, in sync_with_ping\r\n    wait_until(test_function, timeout=timeout, lock=mininode_lock)\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/util.py\", line 211, in wait_until\r\n    if predicate():\r\n  File \"/root/workspace/bitcoin-core/test/functional/test_framework/mininode.py\", line 439, in test_function\r\n    assert self.is_connected\r\nAssertionError\r\n2019-07-26T20:14:58.723000Z TestFramework (INFO): Stopping nodes\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515586615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517282069",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16470#issuecomment-517282069",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16470",
    "id": 517282069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzI4MjA2OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-01T13:12:26Z",
    "updated_at": "2019-08-01T13:12:26Z",
    "author_association": "MEMBER",
    "body": "ACK fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517282069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021130",
    "pull_request_review_id": 267525313,
    "id": 308021130,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAyMTEzMA==",
    "diff_hunk": "@@ -399,20 +408,30 @@ def wait_for_getheaders(self, timeout=60):\n         value must be explicitly cleared before calling this method, or this will return\n         immediately with success. TODO: change this method to take a hash value and only\n         return true if the correct block header has been requested.\"\"\"\n-        test_function = lambda: self.last_message.get(\"getheaders\")\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"getheaders\")\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_inv(self, expected_inv, timeout=60):\n         \"\"\"Waits for an INV message and checks that the first inv object in the message was as expected.\"\"\"\n         if len(expected_inv) > 1:\n             raise NotImplementedError(\"wait_for_inv() will only verify the first inv object\")\n-        test_function = lambda: self.last_message.get(\"inv\") and \\\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"inv\") and \\\n                                 self.last_message[\"inv\"].inv[0].type == expected_inv[0].type and \\\n                                 self.last_message[\"inv\"].inv[0].hash == expected_inv[0].hash\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_verack(self, timeout=60):\n-        test_function = lambda: self.message_count[\"verack\"]\n+        def test_function():",
    "path": "test/functional/test_framework/mininode.py",
    "position": 66,
    "original_position": 66,
    "commit_id": "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
    "original_commit_id": "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you explain why not assert here?",
    "created_at": "2019-07-28T22:25:33Z",
    "updated_at": "2019-07-28T22:25:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021130",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021130"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021130"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 432,
    "original_line": 432,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021833",
    "pull_request_review_id": 267526109,
    "id": 308021833,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAyMTgzMw==",
    "diff_hunk": "@@ -399,20 +408,30 @@ def wait_for_getheaders(self, timeout=60):\n         value must be explicitly cleared before calling this method, or this will return\n         immediately with success. TODO: change this method to take a hash value and only\n         return true if the correct block header has been requested.\"\"\"\n-        test_function = lambda: self.last_message.get(\"getheaders\")\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"getheaders\")\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_inv(self, expected_inv, timeout=60):\n         \"\"\"Waits for an INV message and checks that the first inv object in the message was as expected.\"\"\"\n         if len(expected_inv) > 1:\n             raise NotImplementedError(\"wait_for_inv() will only verify the first inv object\")\n-        test_function = lambda: self.last_message.get(\"inv\") and \\\n+\n+        def test_function():\n+            assert self.is_connected\n+            return self.last_message.get(\"inv\") and \\\n                                 self.last_message[\"inv\"].inv[0].type == expected_inv[0].type and \\\n                                 self.last_message[\"inv\"].inv[0].hash == expected_inv[0].hash\n+\n         wait_until(test_function, timeout=timeout, lock=mininode_lock)\n \n     def wait_for_verack(self, timeout=60):\n-        test_function = lambda: self.message_count[\"verack\"]\n+        def test_function():",
    "path": "test/functional/test_framework/mininode.py",
    "position": 66,
    "original_position": 66,
    "commit_id": "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
    "original_commit_id": "fac2e6a6045e4ddd6b473f4f3ddbb69d9d6921f6",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is called in `add_p2p_connection`, which establishes the connection async. So the assert will fail on the first try.",
    "created_at": "2019-07-28T22:49:14Z",
    "updated_at": "2019-07-28T22:49:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021833",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021833"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16470#discussion_r308021833"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16470"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308021833/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 432,
    "original_line": 432,
    "side": "RIGHT",
    "in_reply_to_id": 308021130
  }
]