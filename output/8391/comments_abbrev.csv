NicolasDorier,2016-07-22T12:51:29Z,- Fixed the inverted condition of activation of ISM soft fork in RPC\n- Fix outdated rpc documentation for getblockchaininfo\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-234535324,234535324,
jtimon,2016-07-22T15:22:50Z,utACK besides nits.\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-234573715,234573715,
NicolasDorier,2016-07-22T16:12:49Z,"- BIP34 [does not activate on regnet](https://github.com/bitcoin/bitcoin/pull/8391/files#diff-64cbe1ad5465e13bc59ee8bb6f3de2e7R248), rationale explained on https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71903685\n",https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-234586998,234586998,
NicolasDorier,2016-07-23T01:49:30Z,"Sync of Testnet succeed, the Travis error is unrelated to this PR is it possible to run it again ? (still going on for mainnet)\n",https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-234692354,234692354,
NicolasDorier,2016-07-26T04:34:41Z,Intial sync of testnet and mainnet succeed.\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-235160443,235160443,
jtimon,2016-07-26T16:19:55Z,"Here are my proposed changes in code: https://github.com/jtimon/bitcoin/compare/remove-ism...consensus-post-remove-ism\n\nIn any case, utACK 122786d\n",https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-235321758,235321758,
sipa,2016-07-28T19:42:28Z,Note that #8418 adds a means to override the activation times for BIP9 activations in regtest mode. Perhaps a compatible approach can be followed here? Or is there no need for testing with different softforks activate in regtest?\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-236003190,236003190,
sipa,2016-07-31T23:21:16Z,utACK 122786d0e0170c73536360b705af711e1338adbf\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-236463081,236463081,
NicolasDorier,2016-07-31T23:57:45Z,I'll do a separate PR on top of this one for using the approach of #8418 alongs with @jtimon suggestion.\nI prefer keeping this PR as simple as I can.\n\nEDIT: something like https://github.com/NicolasDorier/bitcoin/commit/e4844f776a5048cf7f10c0ec326e9a1ad73cb39f\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-236464940,236464940,
laanwj,2016-08-04T10:21:06Z,ACK 122786d\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-237513837,237513837,
sdaftuar,2016-08-04T15:15:10Z,"@morcos and I were discussing this, and I think this change is subtle enough that it deserves some kind of BIP write-up.\n\nTechnically this change is a hardfork: old ISM-based code, when presented with an alternate chain history in which one of these softforks activated earlier, would then reject a subsequent block that violated the softfork before the hardcoded heights here, whereas this code wo",https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-237584871,237584871,
jtimon,2016-08-04T16:13:45Z,I agree a BIP makes sense.\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-237603155,237603155,
NicolasDorier,2016-08-04T20:42:51Z,will write BIP\n,https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-237677387,237677387,
NicolasDorier,2016-07-21T23:45:43Z,"actually, I don't need to compare the version. BIP65Height represent the 95% threshold height, so the first condition is always true.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71807475,71807475,src/main.cpp
laanwj,2016-07-22T12:36:07Z,Shouldn't this comparison be the other way around?\n,https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71871448,71871448,src/rpc/blockchain.cpp
instagibbs,2016-07-22T13:40:27Z,"""minVersion"" is a bit confusing after this.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71879682,71879682,src/rpc/blockchain.cpp
instagibbs,2016-07-22T13:53:47Z,seem like magic numbers without explanation\n,https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71881760,71881760,src/chainparams.cpp
instagibbs,2016-07-22T14:01:45Z,"nit: Any reason not to leave version check in? The fewer differences the better, imo. (clearly this isn't a HF, just asking)\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71883041,71883041,src/main.cpp
MarcoFalke,2016-07-22T14:03:16Z,Why is it not possible to check the hash for main and test?\n,https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71883277,71883277,src/chainparams.cpp
instagibbs,2016-07-22T14:04:17Z,"This comment doesn't really make sense to me since ""enforce"" is no longer anywhere. \n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71883407,71883407,src/rpc/blockchain.cpp
MarcoFalke,2016-07-22T14:05:31Z,Why is this diff necessary?\n,https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71883569,71883569,src/chainparams.cpp
instagibbs,2016-07-22T14:07:16Z,Where would that be useful? The hash is only used as an exception to BIP30 rule at https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L2358\n,https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71883820,71883820,src/chainparams.cpp
NicolasDorier,2016-07-22T14:12:02Z,"I'll update the comment, this magic number is chosen such that bip65 tests in python extended tests pass.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71884552,71884552,src/chainparams.cpp
NicolasDorier,2016-07-22T14:15:19Z,"Yes, will later make refactoring for libconsensus easier because this does not depend on Block anymore.\nMoreover, it is impossible that `block.nVersion` to be below 3 at this point. I'm using the 95% threshold for this test (compared to the 75% of before), so if the `block.nVersion` were below 3 it would have been rejected before by https://github.com/bitcoin/bitcoin/pull/8391/files#diff-7ec3c68a",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71885097,71885097,src/main.cpp
NicolasDorier,2016-07-22T14:26:52Z,What would be better ?\n,https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71887019,71887019,src/rpc/blockchain.cpp
sipa,2016-07-22T14:27:01Z,The IsSuperMajority call is slow.\n,https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71887042,71887042,src/main.cpp
instagibbs,2016-07-22T14:29:06Z,"""version"", like the caller SoftForkDesc\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71887420,71887420,src/rpc/blockchain.cpp
instagibbs,2016-07-22T14:30:47Z,"@sipa? Hm? I was just asking about nVersion check.  \n\nThat said, future refactoring purposes is good enough for me.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71887753,71887753,src/main.cpp
jtimon,2016-07-22T14:50:42Z,"We can make an array with an enum, like with vDeployments. Say, vPastDeployments, vOldDeployments, vBuriedDeployments, or something of the sort.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71891265,71891265,src/consensus/params.h
jtimon,2016-07-22T14:54:33Z,"Yeah, as @NicolasDorier points out the block.nVersion check can be safely removed from here because blocks with invalid versions will be rejected in ContextualCheckBlockHeader.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71891936,71891936,src/main.cpp
NicolasDorier,2016-07-22T15:00:36Z,"I prefer keeping change of logic and refactoring done in different PR. I want this PR to be easy to review, so I'm using the previous way of doing with BIP34Height.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71892975,71892975,src/consensus/params.h
jtimon,2016-07-22T15:08:26Z,"Well, you can leave BIP34 as it is and put the new things in the array if you think that is less disruptive, no?\nAnyway, if you feel strongly against doing it now, we can do it later. It's just feel cleaner not to put code to destroy it ""right afterwards"" (I can foresee the same ""we can do the refactor later"" argument when moving BIP113 there...).\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71894218,71894218,src/consensus/params.h
jtimon,2016-07-22T15:21:46Z,"Well, in fact, what that's doing is that if we're past BIP34Height but at BIP34Height we don't have the hardcoded block, then keep checking bip30 as if bip34 hadn't been activated. \nBut now in https://github.com/bitcoin/bitcoin/pull/8391/files#diff-7ec3c68a81efff79b6ca22ac1f1eabbaL3550 if we have a reorg below BIP34Height, BIP34 will be activated after BIP34Height regardless of the original activ",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71896343,71896343,src/chainparams.cpp
NicolasDorier,2016-07-22T16:06:53Z,"@MarcoFalke  I just re added it because without, tests with block v1 on regnet get rejected by the ""obsolete version"" (https://travis-ci.org/bitcoin/bitcoin/jobs/146661777).  \n\nIt makes sense as if BIP34Height is -1 then https://github.com/bitcoin/bitcoin/pull/8391/files#diff-7ec3c68a81efff79b6ca22ac1f1eabbaR3515 will kick out.\n",https://github.com/bitcoin/bitcoin/pull/8391#discussion_r71903685,71903685,src/chainparams.cpp
