paveljanik,2016-11-11T20:36:15Z,ACK https://github.com/bitcoin/bitcoin/pull/9131/commits/079142b75771c5b39a76a1eaa6347bce5e99c0b3\n,https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260049838,260049838,
luke-jr,2016-11-12T01:14:19Z,Is this enough? Does bool actually behave differently as an atomic if we don't use the atomic-specific functions? I would think using .exchange() would be necessary to ensure the logic is itself atomic as well.\n,https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260090999,260090999,
sipa,2016-11-12T01:45:34Z,"@luke-jr Yes. An assignment to an std::atomic results in a fully sequentially serialized behaviour. You can use .store(value, memory_order_relaxed) for example if you want weaker consistency (but still atomic) behaviour.\n",https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260093329,260093329,
sipa,2016-11-12T01:46:30Z,@theuni Can you comment here? You probably understand CConnman's threading model best.\n,https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260093392,260093392,
theuni,2016-11-12T21:47:19Z,"Sure, making it atomic should solve the problem at hand.\n\n@sipa I avoided commenting on the network active PR because IMO the model needs to change a bit to make it completely safe. I have some of those changes queued up, but I didn't want to stand in the way of the feature. For now, let's just make this atomic.\n\nUltimately, CConnman::Start and CConnman::Stop need to be used for network activa",https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260150521,260150521,
rebroad,2016-11-13T03:33:17Z,"Slightly OT, but when is it best to use locks vs atomics?\n",https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260164785,260164785,
sipa,2016-11-13T05:03:32Z,"@rebroad Whenever you can use atomics, atomics. They are many times faster than locks.\n",https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260167351,260167351,
sipa,2016-11-15T22:45:43Z,utACK 079142b75771c5b39a76a1eaa6347bce5e99c0b3\n,https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260794819,260794819,
laanwj,2016-11-16T09:09:27Z,"utACK https://github.com/bitcoin/bitcoin/commit/079142b75771c5b39a76a1eaa6347bce5e99c0b3\n\n> Slightly OT, but when is it best to use locks vs atomics?\n\nThis is not the first time that a question you ask is just a google search away. There is literally tons of CS literature about synchronization primitives. \nIn any case atomic access 'protects' only one variable, whereas locks can protect multi",https://github.com/bitcoin/bitcoin/pull/9131#issuecomment-260892296,260892296,
