practicalswift,2018-09-17T14:34:52Z,Introduced in PR #11372 (119b0f85e2). Friendly ping @sipa â€“ would you mind reviewing? :-),https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-422041993,422041993,
MarcoFalke,2018-09-17T16:30:08Z,Shouldn't `memory_cleanse` be more robust in handling zero-length data?,https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-422082623,422082623,
practicalswift,2018-09-17T19:16:59Z,@MarcoFalke Sure! Added a commit. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-422136765,422136765,
promag,2018-09-18T00:15:09Z,"> Shouldn't memory_cleanse be more robust in handling zero-length data?\n\n@MarcoFalke the same for `memset`?\n\n-0 ae17de5 because it changes `memory_cleanse` invariant.\n\nIMO should avoid the call to `memory_cleanse`.",https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-422211655,422211655,
practicalswift,2018-09-18T04:35:13Z,@MarcoFalke I think @promag has a good point. Now reverted to the original version.,https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-422252533,422252533,
practicalswift,2018-09-18T04:35:41Z,@promag Thanks for reviewing. Now updated. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-422252597,422252597,
MarcoFalke,2018-11-05T20:11:27Z,Could remove the suppression from the file in contrib?,https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-436018265,436018265,
practicalswift,2018-11-06T23:26:18Z,"@MarcoFalke Good point! Added commit 1cab4bb7e09c9d68e104460b67e5804848cd3c2e which removes UBSan suppression.\n\nPlease re-review :-)",https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-436446835,436446835,
DrahtBot,2018-11-08T21:48:56Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14239](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14239.html) (Avoid dividing by zero (undefined behaviour",https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-437168308,437168308,
practicalswift,2018-11-23T15:58:25Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-441274851,441274851,
practicalswift,2019-01-05T16:03:55Z,@luke-jr @promag @MarcoFalke Would you mind re-reviewing? :-),https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-451667315,451667315,
practicalswift,2019-01-15T19:58:14Z,@MarcoFalke Could this one get a release milestone? :-),https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-454529720,454529720,
promag,2019-02-07T15:19:06Z,"Agree with @laanwj, also (nit) could squash.\n\nutACK 524a876 otherwise.",https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-461464835,461464835,
practicalswift,2019-02-07T21:31:07Z,@laanwj @promag Good points. Fixed and squashed. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14242#issuecomment-461603294,461603294,
MarcoFalke,2018-09-17T22:59:30Z,This check is no longer needed?,https://github.com/bitcoin/bitcoin/pull/14242#discussion_r218253805,218253805,src/key_io.cpp
fingera,2018-09-20T06:10:29Z,"Notes\nIf size() is 0, data() may or may not return a null pointer.\nhttps://en.cppreference.com/w/cpp/container/vector/data",https://github.com/bitcoin/bitcoin/pull/14242#discussion_r219043896,219043896,src/key_io.cpp
luke-jr,2018-12-19T19:10:44Z,"We don't need to `memory_cleanse` if `data.size()` is zero, right?",https://github.com/bitcoin/bitcoin/pull/14242#discussion_r243039991,243039991,src/key_io.cpp
MarcoFalke,2018-12-19T19:33:22Z,C.f. ae17de5,https://github.com/bitcoin/bitcoin/pull/14242#discussion_r243047265,243047265,src/key_io.cpp
practicalswift,2019-01-05T16:03:12Z,Now calling `memory_cleanse` only if `data.data() != nullptr` and `data.size() > 0`.,https://github.com/bitcoin/bitcoin/pull/14242#discussion_r245481351,245481351,src/key_io.cpp
laanwj,2019-02-06T16:22:06Z,seems like an `!data.empty()` check would be enough here?,https://github.com/bitcoin/bitcoin/pull/14242#discussion_r254342521,254342521,src/key_io.cpp
