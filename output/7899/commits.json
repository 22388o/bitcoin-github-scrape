[
  {
    "sha": "d165af94540ad2b45f04561f51621cf791abfe6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMTY1YWY5NDU0MGFkMmI0NWYwNDU2MWY1MTYyMWNmNzkxYWJmZTZk",
    "commit": {
      "author": {
        "name": "Chris Moore",
        "email": "dooglus@gmail.com",
        "date": "2016-04-16T21:34:56Z"
      },
      "committer": {
        "name": "Chris Moore",
        "email": "dooglus@gmail.com",
        "date": "2016-04-16T21:34:56Z"
      },
      "message": "Add an optional 3rd parameter to signmessage to allow the user to specify the private key to use for signing the message.",
      "tree": {
        "sha": "d313f00b49dc55e3bc8d0666fb67592d15134fa5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d313f00b49dc55e3bc8d0666fb67592d15134fa5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d165af94540ad2b45f04561f51621cf791abfe6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d165af94540ad2b45f04561f51621cf791abfe6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d165af94540ad2b45f04561f51621cf791abfe6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d165af94540ad2b45f04561f51621cf791abfe6d/comments",
    "author": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73fc922ed64333d45f18d8a448f30cfa2ae0281e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73fc922ed64333d45f18d8a448f30cfa2ae0281e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73fc922ed64333d45f18d8a448f30cfa2ae0281e"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 20,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3eb47b27c5b0b72987591c30ba65b34a96dae973",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 4,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d165af94540ad2b45f04561f51621cf791abfe6d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d165af94540ad2b45f04561f51621cf791abfe6d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d165af94540ad2b45f04561f51621cf791abfe6d",
        "patch": "@@ -507,14 +507,15 @@ UniValue signmessage(const UniValue& params, bool fHelp)\n     if (!EnsureWalletIsAvailable(fHelp))\n         return NullUniValue;\n \n-    if (fHelp || params.size() != 2)\n+    if (fHelp || params.size() < 2 || params.size() > 3)\n         throw runtime_error(\n-            \"signmessage \\\"bitcoinaddress\\\" \\\"message\\\"\\n\"\n+            \"signmessage \\\"bitcoinaddress\\\" \\\"message\\\" ( \\\"privatekey\\\" )\\n\"\n             \"\\nSign a message with the private key of an address\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to use for the private key.\\n\"\n             \"2. \\\"message\\\"         (string, required) The message to create a signature of.\\n\"\n+            \"3. \\\"privatekey\\\"      (string, optional) The base58-encoded private key to use for signing the message.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"signature\\\"          (string) The signature of the message encoded in base 64\\n\"\n             \"\\nExamples:\\n\"\n@@ -530,7 +531,21 @@ UniValue signmessage(const UniValue& params, bool fHelp)\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n-    EnsureWalletIsUnlocked();\n+    bool fGivenKey = false;\n+    CBasicKeyStore tempKeystore;\n+\n+    if (params.size() > 2) {\n+        CBitcoinSecret vchSecret;\n+        if (!vchSecret.SetString(params[2].get_str()))\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid())\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        tempKeystore.AddKey(key);\n+        fGivenKey = true;\n+    }\n+    else\n+        EnsureWalletIsUnlocked();\n \n     string strAddress = params[0].get_str();\n     string strMessage = params[1].get_str();\n@@ -543,8 +558,9 @@ UniValue signmessage(const UniValue& params, bool fHelp)\n     if (!addr.GetKeyID(keyID))\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n \n+    const CKeyStore& keystore = fGivenKey ? tempKeystore : *pwalletMain;\n     CKey key;\n-    if (!pwalletMain->GetKey(keyID, key))\n+    if (!keystore.GetKey(keyID, key))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Private key not available\");\n \n     CHashWriter ss(SER_GETHASH, 0);"
      }
    ]
  }
]