theuni,2016-04-27T20:12:00Z,ut ACK https://github.com/bitcoin/bitcoin/pull/7959/commits/f4ac02ee7c6530c273503d8575a492e9b2ac1f13\n,https://github.com/bitcoin/bitcoin/pull/7959#issuecomment-215213438,215213438,
laanwj,2016-04-28T10:38:31Z,utACK https://github.com/bitcoin/bitcoin/pull/7959/commits/f4ac02ee7c6530c273503d8575a492e9b2ac1f13\n,https://github.com/bitcoin/bitcoin/pull/7959#issuecomment-215382005,215382005,
jonasschnelli,2016-04-29T11:34:22Z,utACK f4ac02ee7c6530c273503d8575a492e9b2ac1f13\n,https://github.com/bitcoin/bitcoin/pull/7959#issuecomment-215689374,215689374,
jonasschnelli,2016-04-28T08:30:25Z,What about doing the whole `bandb.Write(ban map)` & `CNode::SetBannedSetDirty(false);` while holding `LOCK(cs_setBanned);`?\nOtherwise there will always be a possible race condition that someone is adding a ban after  `CNode::SetBannedSetDirty(false);` and before `bandb.Write(banmap)` or `CNode::GetBanned(banmap)`.\n,https://github.com/bitcoin/bitcoin/pull/7959#discussion_r61390706,61390706,src/net.cpp
laanwj,2016-04-28T10:36:09Z,"> Otherwise there will always be a possible race condition that someone is adding a ban after CNode::SetBannedSetDirty(false); and before bandb.Write(banmap) or CNode::GetBanned(banmap).\n\nThat wouldn't be a race condition, but the way it's structured on purpose: because the change to the ban map will re-mark the map as dirty, the next write will catch it (there is a very slight window between `C",https://github.com/bitcoin/bitcoin/pull/7959#discussion_r61406375,61406375,src/net.cpp
