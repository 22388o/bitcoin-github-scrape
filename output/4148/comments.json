[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42524757",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-42524757",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 42524757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI0NzU3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-08T08:30:29Z",
    "updated_at": "2014-05-08T08:30:29Z",
    "author_association": "MEMBER",
    "body": "Fixes at least #3966.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42524757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42614112",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-42614112",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 42614112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjE0MTEy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-08T22:26:03Z",
    "updated_at": "2014-05-08T22:26:03Z",
    "author_association": "MEMBER",
    "body": "Rebased and added an interruption point in ActivateBestChain, as suggested by @laanwj.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42614112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43501623",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43501623",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 43501623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTAxNjIz",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-19T13:22:42Z",
    "updated_at": "2014-05-19T13:22:42Z",
    "author_association": "MEMBER",
    "body": "ACK on code changes\nAlso I've run with this patch for about a week now on my node. No problems.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43501623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43502932",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43502932",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 43502932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTAyOTMy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-19T13:30:43Z",
    "updated_at": "2014-05-19T13:30:43Z",
    "author_association": "MEMBER",
    "body": "I'm running this patch together with #2784, #4100 and #4177, and I'm seeing occasional segfaults. I believe this patch is the most likely cause, so I'll investigate first.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43502932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43505352",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43505352",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 43505352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTA1MzUy",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-19T13:46:32Z",
    "updated_at": "2014-05-19T13:47:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "initial review ACK (untested).\n\nI will try some lock-debug testing later this week.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43505352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43992875",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43992875",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 43992875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTkyODc1",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T10:25:14Z",
    "updated_at": "2014-05-23T10:25:14Z",
    "author_association": "MEMBER",
    "body": "@cozz Updated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43992875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43993067",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43993067",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 43993067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTkzMDY3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T10:27:43Z",
    "updated_at": "2014-05-23T10:27:43Z",
    "author_association": "MEMBER",
    "body": "I haven't seen any segfaults anymore since running on top of #4204.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43993067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43994725",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43994725",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 43994725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTk0NzI1",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T10:52:24Z",
    "updated_at": "2014-05-23T10:52:24Z",
    "author_association": "MEMBER",
    "body": "I still haven't had any segfaults running with this.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43994725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45453396",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-45453396",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 45453396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDUzMzk2",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T00:38:54Z",
    "updated_at": "2014-06-09T00:38:54Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/18e72167ddfeaea95253b62994c6d64b55b35005 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45453396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45469636",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-45469636",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
    "id": 45469636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY5NjM2",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T08:11:38Z",
    "updated_at": "2014-06-09T08:11:38Z",
    "author_association": "MEMBER",
    "body": "ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45469636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12450933",
    "pull_request_review_id": null,
    "id": 12450933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDUwOTMz",
    "diff_hunk": "@@ -2073,75 +2083,116 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        bool fInitialDownload;",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 211,
    "commit_id": "18e72167ddfeaea95253b62994c6d64b55b35005",
    "original_commit_id": "ed85993dc12e02f53f32a21d051a268c07876671",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should we have a `boost::this_thread::interruption_point()` here?\n",
    "created_at": "2014-05-08T20:33:04Z",
    "updated_at": "2014-06-09T00:21:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12450933",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12450933"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12450933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12450933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2150,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12454323",
    "pull_request_review_id": null,
    "id": 12454323,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDU0MzIz",
    "diff_hunk": "@@ -2073,75 +2083,116 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        bool fInitialDownload;",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 211,
    "commit_id": "18e72167ddfeaea95253b62994c6d64b55b35005",
    "original_commit_id": "ed85993dc12e02f53f32a21d051a268c07876671",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea!\n",
    "created_at": "2014-05-08T21:39:30Z",
    "updated_at": "2014-06-09T00:21:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12454323",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12454323"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12454323"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12454323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2150,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12808489",
    "pull_request_review_id": null,
    "id": 12808489,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODA4NDg5",
    "diff_hunk": "@@ -2087,70 +2091,111 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        boost::this_thread::interruption_point();\n+\n+        bool fInitialDownload;\n         {\n-            boost::replace_all(strCmd, \"%s\", chainActive.Tip()->GetBlockHash().GetHex());\n-            boost::thread t(runCommand, strCmd); // thread runs free\n+            LOCK(cs_main);\n+            pindexMostWork = FindMostWorkChain();\n+\n+            // Whether we have anything to do at all.\n+            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip())\n+                return true;\n+\n+            if (!ActivateBestChainStep(state, pindexMostWork))\n+                return false;\n+\n+            pindexNewTip = chainActive.Tip();\n+            fInitialDownload = IsInitialBlockDownload();\n         }\n-    }\n+        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n+\n+        // Notifications/callbacks that can run without cs_main\n+        if (!fInitialDownload) {\n+            uint256 hashNewTip = pindexNewTip->GetBlockHash();\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n+            LOCK(cs_vNodes);\n+            BOOST_FOREACH(CNode* pnode, vNodes)\n+                if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))",
    "path": "src/main.cpp",
    "position": 202,
    "original_position": 202,
    "commit_id": "18e72167ddfeaea95253b62994c6d64b55b35005",
    "original_commit_id": "f6a6adcc433dceb89c7875e38ac649bd8e2875a1",
    "user": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't chainActive here and a few lines below accessed without cs_main?\n",
    "created_at": "2014-05-19T18:24:45Z",
    "updated_at": "2014-06-09T00:21:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12808489",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12808489"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12808489"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12808489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2172,
    "original_line": 2184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12945589",
    "pull_request_review_id": null,
    "id": 12945589,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTQ1NTg5",
    "diff_hunk": "@@ -2087,70 +2091,111 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        boost::this_thread::interruption_point();\n+\n+        bool fInitialDownload;\n         {\n-            boost::replace_all(strCmd, \"%s\", chainActive.Tip()->GetBlockHash().GetHex());\n-            boost::thread t(runCommand, strCmd); // thread runs free\n+            LOCK(cs_main);\n+            pindexMostWork = FindMostWorkChain();\n+\n+            // Whether we have anything to do at all.\n+            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip())\n+                return true;\n+\n+            if (!ActivateBestChainStep(state, pindexMostWork))\n+                return false;\n+\n+            pindexNewTip = chainActive.Tip();\n+            fInitialDownload = IsInitialBlockDownload();\n         }\n-    }\n+        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n+\n+        // Notifications/callbacks that can run without cs_main\n+        if (!fInitialDownload) {\n+            uint256 hashNewTip = pindexNewTip->GetBlockHash();\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n+            LOCK(cs_vNodes);\n+            BOOST_FOREACH(CNode* pnode, vNodes)\n+                if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))",
    "path": "src/main.cpp",
    "position": 202,
    "original_position": 202,
    "commit_id": "18e72167ddfeaea95253b62994c6d64b55b35005",
    "original_commit_id": "f6a6adcc433dceb89c7875e38ac649bd8e2875a1",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice catch. However, chainActive should never be modified anywhere but in the thread calling this method (the message handler), so it can't be the cause for the segfault i observed (perhaps #4204 fixed it, though). I'll fix it.\n",
    "created_at": "2014-05-22T11:37:16Z",
    "updated_at": "2014-06-09T00:21:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12945589",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12945589"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12945589"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12945589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2172,
    "original_line": 2184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14020535",
    "pull_request_review_id": null,
    "id": 14020535,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDIwNTM1",
    "diff_hunk": "@@ -2649,7 +2664,11 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n \n-    LogPrintf(\"ProcessBlock: ACCEPTED\\n\");",
    "path": "src/main.cpp",
    "position": 291,
    "original_position": 291,
    "commit_id": "18e72167ddfeaea95253b62994c6d64b55b35005",
    "original_commit_id": "18e72167ddfeaea95253b62994c6d64b55b35005",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ahem! #3984 did this!\n",
    "created_at": "2014-06-20T13:59:23Z",
    "updated_at": "2014-06-20T13:59:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r14020535",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14020535"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r14020535"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14020535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2652,
    "original_line": 2652,
    "side": "RIGHT"
  }
]