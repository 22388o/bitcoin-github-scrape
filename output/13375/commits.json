[
  {
    "sha": "89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWUxNmYxYmVlOWMyZmMzM2Y4M2VkNTQ3MmFmZjNmNTZkYThmZTBi",
    "commit": {
      "author": {
        "name": "Abhishek Jha",
        "email": "j7.abhi@gmail.com",
        "date": "2018-06-02T20:25:37Z"
      },
      "committer": {
        "name": "Abhishek Jha",
        "email": "j7.abhi@gmail.com",
        "date": "2018-06-07T12:15:10Z"
      },
      "message": "utils and library : check for addresses in translation\n\naddress check in translations Minor changes\n\nextra whitespace removed\n\nminor errors\n\nminor fixes\n\nchecking after removing whitespaces\n\nregular expression refined\n\nusing errors",
      "tree": {
        "sha": "dcdea7a42f16190d784dec04eea30be21a070874",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcdea7a42f16190d784dec04eea30be21a070874"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b/comments",
    "author": {
      "login": "undercoverGod",
      "id": 19704537,
      "node_id": "MDQ6VXNlcjE5NzA0NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19704537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/undercoverGod",
      "html_url": "https://github.com/undercoverGod",
      "followers_url": "https://api.github.com/users/undercoverGod/followers",
      "following_url": "https://api.github.com/users/undercoverGod/following{/other_user}",
      "gists_url": "https://api.github.com/users/undercoverGod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/undercoverGod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/undercoverGod/subscriptions",
      "organizations_url": "https://api.github.com/users/undercoverGod/orgs",
      "repos_url": "https://api.github.com/users/undercoverGod/repos",
      "events_url": "https://api.github.com/users/undercoverGod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/undercoverGod/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "undercoverGod",
      "id": 19704537,
      "node_id": "MDQ6VXNlcjE5NzA0NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19704537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/undercoverGod",
      "html_url": "https://github.com/undercoverGod",
      "followers_url": "https://api.github.com/users/undercoverGod/followers",
      "following_url": "https://api.github.com/users/undercoverGod/following{/other_user}",
      "gists_url": "https://api.github.com/users/undercoverGod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/undercoverGod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/undercoverGod/subscriptions",
      "organizations_url": "https://api.github.com/users/undercoverGod/orgs",
      "repos_url": "https://api.github.com/users/undercoverGod/repos",
      "events_url": "https://api.github.com/users/undercoverGod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/undercoverGod/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e24bf1ce184bc8d5bba70a3f3e9c43c2df07f4d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e24bf1ce184bc8d5bba70a3f3e9c43c2df07f4d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e24bf1ce184bc8d5bba70a3f3e9c43c2df07f4d3"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e002f1ca0c3bd4ca577bde00925715a2170b9c86",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=89e16f1bee9c2fc33f83ed5472aff3f56da8fe0b",
        "patch": "@@ -30,6 +30,8 @@\n LOCALE_DIR = 'src/qt/locale'\n # Minimum number of messages for translation to be considered at all\n MIN_NUM_MESSAGES = 10\n+# Regular expression for addresses\n+ADDRESS_RE = re.compile('(1|3|bc1)[a-zA-HJ-NP-Z0-9]{25,34}')\n \n def check_at_repository_root():\n     if not os.path.exists('.git'):\n@@ -80,6 +82,10 @@ def sanitize_string(s):\n     return s.replace('\\n',' ')\n \n def check_format_specifiers(source, translation, errors, numerus):\n+    # Check for btc address in translation after removing whitespaces\n+    if re.search(ADDRESS_RE, ''.join(translation.split())):\n+        errors.append(\"WARNING...Address found in translation for '%s': '%s'\\nMessage will be deleted\" % (sanitize_string(source), sanitize_string(translation)))\n+        return False\n     source_f = split_format_specifiers(find_format_specifiers(source))\n     # assert that no source messages contain both Qt and strprintf format specifiers\n     # if this fails, go change the source as this is hacky and confusing!\n@@ -159,6 +165,7 @@ def postprocess_translations(reduce_diff_hacks=False):\n                 for translation in translations:\n                     if translation is None:\n                         continue\n+\n                     errors = []\n                     valid = check_format_specifiers(source, translation, errors, numerus)\n \n@@ -178,6 +185,7 @@ def postprocess_translations(reduce_diff_hacks=False):\n                 if translation_node.get('type') == 'unfinished':\n                     context.remove(message)\n \n+\n         # check if document is (virtually) empty, and remove it if so\n         num_messages = 0\n         for context in root.findall('context'):"
      }
    ]
  }
]