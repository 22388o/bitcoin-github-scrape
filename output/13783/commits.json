[
  {
    "sha": "fa511e8dad87ddee7bf03b82f2ed69e546021004",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTUxMWU4ZGFkODdkZGVlN2JmMDNiODJmMmVkNjllNTQ2MDIxMDA0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-07-27T18:35:28Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-09-11T16:08:17Z"
      },
      "message": "Pass tx pool reference into CheckSequenceLocks",
      "tree": {
        "sha": "40cafe3215b8b7af4af4c2d377887d8ffafb13d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40cafe3215b8b7af4af4c2d377887d8ffafb13d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa511e8dad87ddee7bf03b82f2ed69e546021004",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbl+hxAAoJEM4rdWl+aaVIThEMAMUDZeDrxQvZmuT2MPusNWFb\n9lGwPJT3kdl0KVK1XnkGyPfbcE1u2QvJmpILe918uNFPToHDPG1btzDo5xVd5Oz/\n1EtgTSvDZBkWKAtR3jciRWp5WyyQNLb/oOfW6cRKGNH55U8U3/dL8S0ILdvpLbNu\nqKC2PvjWmW/Cyi3jKVDOfrx9K8cjc3QtZBqgQ2uKT14kMbYQT8OHdGUtS91uHIBr\nzkGI7jZyBcAIkVk9e/dUvqEedrTKV3e4z57Bw6v+I6uc8egXhElSHbaIn0fJeBZJ\n12AyyosJ1oM/HWKGzY+6mzaQARhJZ0M4e7NUEBwlAu8XjRTRI4RZKG/V+3ZgZ/Y+\nkEzgXysHUtu/Emw5z31DXSV/D+oXtK93+SKziJ450PeNQ3fW6iliWaSiEmMTkZ2D\nrwG+dMgM6pkBUaQyh7MdUsQtUze7OmGjo3D35WUF1YwUoJbbi7Enml5lGIogRod9\nzQLXU38f2onf3QtI9WJZBGIs7m00sYlOrQySfucWnA==\n=Uxhz\n-----END PGP SIGNATURE-----",
        "payload": "tree 40cafe3215b8b7af4af4c2d377887d8ffafb13d7\nparent 362518791ade834d7f1f25b679ba236dcf5c3ad0\nauthor MarcoFalke <falke.marco@gmail.com> 1532716528 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1536682097 -0400\n\nPass tx pool reference into CheckSequenceLocks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa511e8dad87ddee7bf03b82f2ed69e546021004",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa511e8dad87ddee7bf03b82f2ed69e546021004",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa511e8dad87ddee7bf03b82f2ed69e546021004/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "362518791ade834d7f1f25b679ba236dcf5c3ad0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/362518791ade834d7f1f25b679ba236dcf5c3ad0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/362518791ade834d7f1f25b679ba236dcf5c3ad0"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "354ca7507eb0585ba600bf7bc344b47345a6ed61",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=fa511e8dad87ddee7bf03b82f2ed69e546021004",
        "patch": "@@ -92,8 +92,8 @@ static CBlockIndex CreateBlockIndex(int nHeight)\n \n static bool TestSequenceLocks(const CTransaction &tx, int flags) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    LOCK(mempool.cs);\n-    return CheckSequenceLocks(tx, flags);\n+    LOCK(::mempool.cs);\n+    return CheckSequenceLocks(::mempool, tx, flags);\n }\n \n // Test suite for ancestor feerate transaction selection."
      },
      {
        "sha": "34a1e539df0703096a2b4b0f91d9895cd8bb2066",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=fa511e8dad87ddee7bf03b82f2ed69e546021004",
        "patch": "@@ -498,7 +498,7 @@ void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMem\n         const CTransaction& tx = it->GetTx();\n         LockPoints lp = it->GetLockPoints();\n         bool validLP =  TestLockPointValidity(&lp);\n-        if (!CheckFinalTx(tx, flags) || !CheckSequenceLocks(tx, flags, &lp, validLP)) {\n+        if (!CheckFinalTx(tx, flags) || !CheckSequenceLocks(*this, tx, flags, &lp, validLP)) {\n             // Note if CheckSequenceLocks fails the LockPoints may still be invalid\n             // So it's critical that we remove the tx and not depend on the LockPoints.\n             txToRemove.insert(it);"
      },
      {
        "sha": "259ee891a9e18d8a99619cc966b26b51f802e4c5",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa511e8dad87ddee7bf03b82f2ed69e546021004",
        "patch": "@@ -361,10 +361,10 @@ bool TestLockPointValidity(const LockPoints* lp)\n     return true;\n }\n \n-bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp, bool useExistingLockPoints)\n+bool CheckSequenceLocks(const CTxMemPool& pool, const CTransaction& tx, int flags, LockPoints* lp, bool useExistingLockPoints)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(mempool.cs);\n+    AssertLockHeld(pool.cs);\n \n     CBlockIndex* tip = chainActive.Tip();\n     assert(tip != nullptr);\n@@ -387,7 +387,7 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp, bool\n     }\n     else {\n         // pcoinsTip contains the UTXO set for chainActive.Tip()\n-        CCoinsViewMemPool viewMemPool(pcoinsTip.get(), mempool);\n+        CCoinsViewMemPool viewMemPool(pcoinsTip.get(), pool);\n         std::vector<int> prevheights;\n         prevheights.resize(tx.vin.size());\n         for (size_t txinIndex = 0; txinIndex < tx.vin.size(); txinIndex++) {\n@@ -679,7 +679,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // be mined yet.\n         // Must keep pool.cs for this unless we change CheckSequenceLocks to take a\n         // CoinsViewCache instead of create its own\n-        if (!CheckSequenceLocks(tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n+        if (!CheckSequenceLocks(pool, tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"non-BIP68-final\");\n \n         CAmount nFees = 0;"
      },
      {
        "sha": "d21f0606f9b7025c8aba00a6f5e4d9bbdd35ada9",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa511e8dad87ddee7bf03b82f2ed69e546021004/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa511e8dad87ddee7bf03b82f2ed69e546021004",
        "patch": "@@ -347,7 +347,7 @@ bool TestLockPointValidity(const LockPoints* lp) EXCLUSIVE_LOCKS_REQUIRED(cs_mai\n  *\n  * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp = nullptr, bool useExistingLockPoints = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+bool CheckSequenceLocks(const CTxMemPool& pool, const CTransaction& tx, int flags, LockPoints* lp = nullptr, bool useExistingLockPoints = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n /**\n  * Closure representing one script verification"
      }
    ]
  }
]