[
  {
    "sha": "fabb6dfe6e734eadd91448122f2ce8c1612c39a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJiNmRmZTZlNzM0ZWFkZDkxNDQ4MTIyZjJjZThjMTYxMmMzOWE2",
    "commit": {
      "author": {
        "name": "Guido Vranken",
        "email": "guidovranken@gmail.com",
        "date": "2021-04-26T20:08:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-04T04:53:20Z"
      },
      "message": "script: Replace address-of idiom with vector data() method",
      "tree": {
        "sha": "21f85bb563f76911304db14f5f7fe69a4450c6b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21f85bb563f76911304db14f5f7fe69a4450c6b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabb6dfe6e734eadd91448122f2ce8c1612c39a6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgAHQv/SSYZdDjL/4Ak5YST5342KMA4kpzzhZPuxfcqmgyYQiWJYRLRh3c63FHo\nN729rLot7bBzCD3Af0J++UOI2V1i0VHJQq43OPFqwVtE9ic9fUkeehOm8u8ayYVp\nf0XTmycIwNyeThCHGkVMLz4d9Cs8PSMqXfp5csBKYcI8oKIc35QvLyfYhZqqTkjT\nJszdpUblQQQTq+tJcqg3J1bsoMR65sISnvKoPWlp17yrRjEE3uf8kWrB7R+sGd6I\nh8gOuhuotJkID7bZ6Iii6N38oRG7IhinTkbQqsFLdwkexkGSkY5PgSjG1c9ZxsXk\nOMOeEbulzv4xkXaLAcrGf/MX8ZW2S6UhR8M/pdCCMZQnhT8evBX3DWrpuRZD2mx+\n2QzzClWUQCdNggH4QWhXnoy+6jponHuVMPkRUr4IogTfgoF1useeGk000JR8XvGS\nDYudBNxkbmIA2C81McN0qSm+7w8aBmJGVGdQle4nG47S+52iJtmzQhO5ha2XfYlY\nSyUgFSck\n=u+Cy\n-----END PGP SIGNATURE-----",
        "payload": "tree 21f85bb563f76911304db14f5f7fe69a4450c6b5\nparent e2d4e67a8fccfaebad5accced629711bb6402d3f\nauthor Guido Vranken <guidovranken@gmail.com> 1619467715 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620104000 +0200\n\nscript: Replace address-of idiom with vector data() method\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabb6dfe6e734eadd91448122f2ce8c1612c39a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabb6dfe6e734eadd91448122f2ce8c1612c39a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabb6dfe6e734eadd91448122f2ce8c1612c39a6/comments",
    "author": {
      "login": "guidovranken",
      "id": 6846644,
      "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6846644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guidovranken",
      "html_url": "https://github.com/guidovranken",
      "followers_url": "https://api.github.com/users/guidovranken/followers",
      "following_url": "https://api.github.com/users/guidovranken/following{/other_user}",
      "gists_url": "https://api.github.com/users/guidovranken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
      "organizations_url": "https://api.github.com/users/guidovranken/orgs",
      "repos_url": "https://api.github.com/users/guidovranken/repos",
      "events_url": "https://api.github.com/users/guidovranken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guidovranken/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2d4e67a8fccfaebad5accced629711bb6402d3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2d4e67a8fccfaebad5accced629711bb6402d3f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2d4e67a8fccfaebad5accced629711bb6402d3f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c5ff3d8d13c4d6efac4dde9613f9ef6ae33d7761",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabb6dfe6e734eadd91448122f2ce8c1612c39a6/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabb6dfe6e734eadd91448122f2ce8c1612c39a6/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=fabb6dfe6e734eadd91448122f2ce8c1612c39a6",
        "patch": "@@ -53,7 +53,7 @@ class CSignatureCache\n     ComputeEntryECDSA(uint256& entry, const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubkey) const\n     {\n         CSHA256 hasher = m_salted_hasher_ecdsa;\n-        hasher.Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(&vchSig[0], vchSig.size()).Finalize(entry.begin());\n+        hasher.Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(vchSig.data(), vchSig.size()).Finalize(entry.begin());\n     }\n \n     void"
      }
    ]
  },
  {
    "sha": "fa05dddc42770809fdae4d9c35155f8117960019",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA1ZGRkYzQyNzcwODA5ZmRhZTRkOWMzNTE1NWY4MTE3OTYwMDE5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-30T13:32:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-04T04:53:32Z"
      },
      "message": "refactor: Use CPubKey vector constructor where possible",
      "tree": {
        "sha": "daaf2d3f9598f89b8c3a8230c765f7a4df1cd9d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/daaf2d3f9598f89b8c3a8230c765f7a4df1cd9d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa05dddc42770809fdae4d9c35155f8117960019",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjrOQv7BTw1aSgiMji3++fzfTKg2bA47TpmxxYA7tF5POpv6Fhb4hb+vgWZJ7JG\ngcSu29XWnbwm4yyrKwm3E8MKEr6vD64OzhQH2g29c1fv8yBOqae6yIX3509e7Fqz\nV8QFpjxg78V6D6gVZ4faXUvks332FXlrVZ1cuxQNrw2Xy7uiQ2ZMwYMZnjHr7K4G\nNwYzUNu6QxER2Mw28u+ImuoCp3+hgkxhJIld4RQdRy/VvGelLzQe0Yyc+/Vcig1N\nTXWL2iv0Yl/9x+184qX4Bb385FwGKugRRQCw8Zt2J3X6GNsVF99gPFxwMz0IDQ1d\nRUYQae71dTFCTBFm9KvqlKrqyzWYHfHojf5EKL0h6/d82/BBhmqKBFv2jh7nxfDH\n4LtegLodvUgExdnbhfrmkP6jekUfSjH4spm32PBySr6TCAlKRVu4YeRN8+GUpGhO\n84p6msfevqeylDPOaUM3ph5kOhXWc5i+FHTpvrTadD+SgPzFgclt1KLemfYOcpeR\nZz8d8HD4\n=Makp\n-----END PGP SIGNATURE-----",
        "payload": "tree daaf2d3f9598f89b8c3a8230c765f7a4df1cd9d0\nparent fabb6dfe6e734eadd91448122f2ce8c1612c39a6\nauthor MarcoFalke <falke.marco@gmail.com> 1619789560 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620104012 +0200\n\nrefactor: Use CPubKey vector constructor where possible\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa05dddc42770809fdae4d9c35155f8117960019",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa05dddc42770809fdae4d9c35155f8117960019",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa05dddc42770809fdae4d9c35155f8117960019/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fabb6dfe6e734eadd91448122f2ce8c1612c39a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabb6dfe6e734eadd91448122f2ce8c1612c39a6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fabb6dfe6e734eadd91448122f2ce8c1612c39a6"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a161c428668008f1ef87f251ac8242a55a688214",
        "filename": "src/compressor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa05dddc42770809fdae4d9c35155f8117960019/src/compressor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa05dddc42770809fdae4d9c35155f8117960019/src/compressor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.cpp?ref=fa05dddc42770809fdae4d9c35155f8117960019",
        "patch": "@@ -124,7 +124,7 @@ bool DecompressScript(CScript& script, unsigned int nSize, const CompressedScrip\n         unsigned char vch[33] = {};\n         vch[0] = nSize - 2;\n         memcpy(&vch[1], in.data(), 32);\n-        CPubKey pubkey(&vch[0], &vch[33]);\n+        CPubKey pubkey{vch};\n         if (!pubkey.Decompress())\n             return false;\n         assert(pubkey.size() == 65);"
      },
      {
        "sha": "066d2d5d4804fa264c5897491933b6b803cac1da",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa05dddc42770809fdae4d9c35155f8117960019/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa05dddc42770809fdae4d9c35155f8117960019/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=fa05dddc42770809fdae4d9c35155f8117960019",
        "patch": "@@ -101,7 +101,7 @@ class CPubKey\n     }\n \n     //! Construct a public key from a byte vector.\n-    explicit CPubKey(const std::vector<unsigned char>& _vch)\n+    explicit CPubKey(Span<const uint8_t> _vch)\n     {\n         Set(_vch.begin(), _vch.end());\n     }"
      },
      {
        "sha": "b54ba204f05249a2743fdd10e4fa0bfa8b6abb4e",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa05dddc42770809fdae4d9c35155f8117960019/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa05dddc42770809fdae4d9c35155f8117960019/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=fa05dddc42770809fdae4d9c35155f8117960019",
        "patch": "@@ -1098,7 +1098,7 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n     TxoutType txntype = Solver(script, data);\n \n     if (txntype == TxoutType::PUBKEY) {\n-        CPubKey pubkey(data[0].begin(), data[0].end());\n+        CPubKey pubkey(data[0]);\n         if (pubkey.IsValid()) {\n             return std::make_unique<PKDescriptor>(InferPubkey(pubkey, ctx, provider));\n         }\n@@ -1122,7 +1122,7 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n     if (txntype == TxoutType::MULTISIG) {\n         std::vector<std::unique_ptr<PubkeyProvider>> providers;\n         for (size_t i = 1; i + 1 < data.size(); ++i) {\n-            CPubKey pubkey(data[i].begin(), data[i].end());\n+            CPubKey pubkey(data[i]);\n             providers.push_back(InferPubkey(pubkey, ctx, provider));\n         }\n         return std::make_unique<MultisigDescriptor>((int)data[0][0], std::move(providers));"
      },
      {
        "sha": "a851765c576d4658cb3873c61b6292bb468ec098",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa05dddc42770809fdae4d9c35155f8117960019/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa05dddc42770809fdae4d9c35155f8117960019/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=fa05dddc42770809fdae4d9c35155f8117960019",
        "patch": "@@ -469,7 +469,7 @@ RPCHelpMan importpubkey()\n     if (!IsHex(request.params[0].get_str()))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey must be a hex string\");\n     std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n-    CPubKey pubKey(data.begin(), data.end());\n+    CPubKey pubKey(data);\n     if (!pubKey.IsFullyValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey is not a valid public key\");\n \n@@ -871,7 +871,7 @@ static std::string RecurseImportData(const CScript& script, ImportData& import_d\n \n     switch (script_type) {\n     case TxoutType::PUBKEY: {\n-        CPubKey pubkey(solverdata[0].begin(), solverdata[0].end());\n+        CPubKey pubkey(solverdata[0]);\n         import_data.used_keys.emplace(pubkey.GetID(), false);\n         return \"\";\n     }\n@@ -893,7 +893,7 @@ static std::string RecurseImportData(const CScript& script, ImportData& import_d\n     }\n     case TxoutType::MULTISIG: {\n         for (size_t i = 1; i + 1< solverdata.size(); ++i) {\n-            CPubKey pubkey(solverdata[i].begin(), solverdata[i].end());\n+            CPubKey pubkey(solverdata[i]);\n             import_data.used_keys.emplace(pubkey.GetID(), false);\n         }\n         return \"\";\n@@ -997,7 +997,7 @@ static UniValue ProcessImportLegacy(ImportData& import_data, std::map<CKeyID, CP\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey \\\"\" + str + \"\\\" must be a hex string\");\n         }\n         auto parsed_pubkey = ParseHex(str);\n-        CPubKey pubkey(parsed_pubkey.begin(), parsed_pubkey.end());\n+        CPubKey pubkey(parsed_pubkey);\n         if (!pubkey.IsFullyValid()) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey \\\"\" + str + \"\\\" is not a valid public key\");\n         }"
      }
    ]
  },
  {
    "sha": "face9611093377e8502d91f2ff56f9319a56357c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNlOTYxMTA5MzM3N2U4NTAyZDkxZjJmZjU2ZjkzMTlhNTYzNTdj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-30T17:04:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-04T04:53:37Z"
      },
      "message": "refactor: Use only one temporary buffer in CreateObfuscateKey",
      "tree": {
        "sha": "1762fd3c121ec3e849c7cae40515e6e4a4f36bd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1762fd3c121ec3e849c7cae40515e6e4a4f36bd9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/face9611093377e8502d91f2ff56f9319a56357c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiH4wwAnWfdPcfRo+V56x2yMjbQcMio0U+J5xbgjC83XEZb6PcppB0+Ydtelq+z\nSjhqpaeRYQSGgDVCsro1Kdma2QLCHHaPo2Z7KR0ilmpezPXiK51MQ/vgSKNKIejH\nLTBVnqdZ7776D+syoTRLjdH4KdxUnBCeXFIeYKKLP1kYZdyMAVU3lRpaCvbS5zYI\n9E5nzzfQZnj0PsVCw6QIqA5eMemQrUEi80WE3k+KRf91qn4Yx/sVogYU55xohFa2\nj6QYXMBYU5gk9NZAsP1wlX1QaftFFE4X7OsPJBH1H8fawzIo0xwEQzg/L8bMpF9+\nEdN7R3X4CwaD9wO/DoAp6x1G23YilAot6rqDiV2IXIiAulKrOpvlqJPozrJ4JrN8\nEG5hKyFOmCM5NjK6U26vOG8b7phsmCdxkNm4iK1jelM12MW3cvRUJ2rgRvGLGXfo\nK6sSAslquPNZcFXQQ/fbN5zpGgzjZknpgrMvxPFrL1ASC1kVWEuUTjKu8Omv+xfW\nOeQZKgtH\n=JHme\n-----END PGP SIGNATURE-----",
        "payload": "tree 1762fd3c121ec3e849c7cae40515e6e4a4f36bd9\nparent fa05dddc42770809fdae4d9c35155f8117960019\nauthor MarcoFalke <falke.marco@gmail.com> 1619802262 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620104017 +0200\n\nrefactor: Use only one temporary buffer in CreateObfuscateKey\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/face9611093377e8502d91f2ff56f9319a56357c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/face9611093377e8502d91f2ff56f9319a56357c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/face9611093377e8502d91f2ff56f9319a56357c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa05dddc42770809fdae4d9c35155f8117960019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa05dddc42770809fdae4d9c35155f8117960019",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa05dddc42770809fdae4d9c35155f8117960019"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3a1086bf4c5a77c7b44c904b0355294868ceae97",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/face9611093377e8502d91f2ff56f9319a56357c/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/face9611093377e8502d91f2ff56f9319a56357c/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=face9611093377e8502d91f2ff56f9319a56357c",
        "patch": "@@ -220,10 +220,9 @@ const unsigned int CDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n  */\n std::vector<unsigned char> CDBWrapper::CreateObfuscateKey() const\n {\n-    unsigned char buff[OBFUSCATE_KEY_NUM_BYTES];\n-    GetRandBytes(buff, OBFUSCATE_KEY_NUM_BYTES);\n-    return std::vector<unsigned char>(&buff[0], &buff[OBFUSCATE_KEY_NUM_BYTES]);\n-\n+    std::vector<uint8_t> ret(OBFUSCATE_KEY_NUM_BYTES);\n+    GetRandBytes(ret.data(), OBFUSCATE_KEY_NUM_BYTES);\n+    return ret;\n }\n \n bool CDBWrapper::IsEmpty()"
      }
    ]
  },
  {
    "sha": "faece47c4706783e0460ed977390a44630b2d44c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVjZTQ3YzQ3MDY3ODNlMDQ2MGVkOTc3MzkwYTQ0NjMwYjJkNDRj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-30T17:52:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-04T04:55:30Z"
      },
      "message": "refactor: Avoid &foo[0] on C-Style arrays\n\nThis is confusing at best when parts of a class use the\nredundant operators and other parts do not.",
      "tree": {
        "sha": "ec86896e9ef5d37816a454a72fa5c98246c0cf99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec86896e9ef5d37816a454a72fa5c98246c0cf99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faece47c4706783e0460ed977390a44630b2d44c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjHowv7BtXF1267euHxPrJ8cODBFKtDduAo49hFcQYTrK8YZP5icvM4oQRM7YaU\nrYE8D/7zKzDyhDzb1xCIaTw3bwklquRmqUKOPWLvbG18tOOcTS942xqI3r+5GzRX\ng8f4JR45uVu2YbRdGZGvblewXoq8OwH9U9Cf5D16rQHZWQcCtrxef+UD8ab4smJc\nlqP1my5tlzpfYjEwy9yoz/rmJXOSswUPEif9PSfY/sEQHP4HyjZcWTiM0FlL2V4y\nVNXTOkYytN7LbW0HhdkGQg5IAa6Ln3IYvEC5yVYUs2UubX8o66Ug2KXd8TF+vTEA\nisswvWRiiVV3m4Qz+Im/BU5ETrNO3LEgCK3rtS604JKYrLQfsRaMzhsj9+AxHiNE\nbo2H0hXABHtWwXSsxAezQnqc6vsUK3/NMIoj/7lBfIiufkc6on8xsjBbcWokviHY\nJocewa8RZLwBOCY6Zcl2JQllSRsdc3tyYhIfl3pfUxTV/9/3MYQ4KFY5orqaLA+2\nPGglKr9j\n=tbf8\n-----END PGP SIGNATURE-----",
        "payload": "tree ec86896e9ef5d37816a454a72fa5c98246c0cf99\nparent face9611093377e8502d91f2ff56f9319a56357c\nauthor MarcoFalke <falke.marco@gmail.com> 1619805120 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620104130 +0200\n\nrefactor: Avoid &foo[0] on C-Style arrays\n\nThis is confusing at best when parts of a class use the\nredundant operators and other parts do not.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faece47c4706783e0460ed977390a44630b2d44c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faece47c4706783e0460ed977390a44630b2d44c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faece47c4706783e0460ed977390a44630b2d44c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "face9611093377e8502d91f2ff56f9319a56357c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/face9611093377e8502d91f2ff56f9319a56357c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/face9611093377e8502d91f2ff56f9319a56357c"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "5666adebb870885fa8878381a67ae08f258d7ad2",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faece47c4706783e0460ed977390a44630b2d44c/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faece47c4706783e0460ed977390a44630b2d44c/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=faece47c4706783e0460ed977390a44630b2d44c",
        "patch": "@@ -293,7 +293,7 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n bool CExtKey::Derive(CExtKey &out, unsigned int _nChild) const {\n     out.nDepth = nDepth + 1;\n     CKeyID id = key.GetPubKey().GetID();\n-    memcpy(&out.vchFingerprint[0], &id, 4);\n+    memcpy(out.vchFingerprint, &id, 4);\n     out.nChild = _nChild;\n     return key.Derive(out.key, out.chaincode, _nChild, chaincode);\n }\n@@ -312,7 +312,7 @@ void CExtKey::SetSeed(const unsigned char *seed, unsigned int nSeedLen) {\n CExtPubKey CExtKey::Neuter() const {\n     CExtPubKey ret;\n     ret.nDepth = nDepth;\n-    memcpy(&ret.vchFingerprint[0], &vchFingerprint[0], 4);\n+    memcpy(ret.vchFingerprint, vchFingerprint, 4);\n     ret.nChild = nChild;\n     ret.pubkey = key.GetPubKey();\n     ret.chaincode = chaincode;"
      },
      {
        "sha": "3ee49a778bf5ed499eb98935a61d383c5dd8c9bc",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faece47c4706783e0460ed977390a44630b2d44c/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faece47c4706783e0460ed977390a44630b2d44c/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=faece47c4706783e0460ed977390a44630b2d44c",
        "patch": "@@ -151,7 +151,7 @@ struct CExtKey {\n     friend bool operator==(const CExtKey& a, const CExtKey& b)\n     {\n         return a.nDepth == b.nDepth &&\n-            memcmp(&a.vchFingerprint[0], &b.vchFingerprint[0], sizeof(vchFingerprint)) == 0 &&\n+            memcmp(a.vchFingerprint, b.vchFingerprint, sizeof(vchFingerprint)) == 0 &&\n             a.nChild == b.nChild &&\n             a.chaincode == b.chaincode &&\n             a.key == b.key;"
      },
      {
        "sha": "a89988cc904557a9d064ac48a0f9008120f9fa75",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faece47c4706783e0460ed977390a44630b2d44c/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faece47c4706783e0460ed977390a44630b2d44c/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=faece47c4706783e0460ed977390a44630b2d44c",
        "patch": "@@ -293,7 +293,7 @@ void CExtPubKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE]) {\n bool CExtPubKey::Derive(CExtPubKey &out, unsigned int _nChild) const {\n     out.nDepth = nDepth + 1;\n     CKeyID id = pubkey.GetID();\n-    memcpy(&out.vchFingerprint[0], &id, 4);\n+    memcpy(out.vchFingerprint, &id, 4);\n     out.nChild = _nChild;\n     return pubkey.Derive(out.pubkey, out.chaincode, _nChild, chaincode);\n }"
      },
      {
        "sha": "b653c202fc48a3176f5df6336849edb259c12e72",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faece47c4706783e0460ed977390a44630b2d44c/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faece47c4706783e0460ed977390a44630b2d44c/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=faece47c4706783e0460ed977390a44630b2d44c",
        "patch": "@@ -247,7 +247,7 @@ struct CExtPubKey {\n     friend bool operator==(const CExtPubKey &a, const CExtPubKey &b)\n     {\n         return a.nDepth == b.nDepth &&\n-            memcmp(&a.vchFingerprint[0], &b.vchFingerprint[0], sizeof(vchFingerprint)) == 0 &&\n+            memcmp(a.vchFingerprint, b.vchFingerprint, sizeof(vchFingerprint)) == 0 &&\n             a.nChild == b.nChild &&\n             a.chaincode == b.chaincode &&\n             a.pubkey == b.pubkey;"
      },
      {
        "sha": "6ae866cc076be682acd2cf090d12771764517d00",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faece47c4706783e0460ed977390a44630b2d44c/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faece47c4706783e0460ed977390a44630b2d44c/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=faece47c4706783e0460ed977390a44630b2d44c",
        "patch": "@@ -168,7 +168,7 @@ bool CZMQAbstractPublishNotifier::SendZmqMessage(const char *command, const void\n \n     /* send three parts, command & data & a LE 4byte sequence number */\n     unsigned char msgseq[sizeof(uint32_t)];\n-    WriteLE32(&msgseq[0], nSequence);\n+    WriteLE32(msgseq, nSequence);\n     int rc = zmq_send_multipart(psocket, command, strlen(command), data, size, msgseq, (size_t)sizeof(uint32_t), nullptr);\n     if (rc == -1)\n         return false;"
      }
    ]
  },
  {
    "sha": "fac30eec42c486ec1bfd696293040a7aa0f04625",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWMzMGVlYzQyYzQ4NmVjMWJmZDY5NjI5MzA0MGE3YWEwZjA0NjI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-30T18:03:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-04T04:55:31Z"
      },
      "message": "refactor: Replace &foo[0] with foo.data()",
      "tree": {
        "sha": "562aadddf3da65e1366d45b2860d8e11c476d866",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/562aadddf3da65e1366d45b2860d8e11c476d866"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac30eec42c486ec1bfd696293040a7aa0f04625",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgCjgv+O/vbplBM/PjMugD8R1XT5nmoqJ3q/3RdKuP66yKCnaxprw1DFcNTChLq\ngzL09l463VsxFNIotGdbz4JV38T45gThlHwFyoR4Ivk4oXwHdBdWgU2S5kF6S04U\nCo1KRoZWD7Asw9NPcdw7ij8I0WzfLvUZRcmvoOeFsiPxbQmVG2PC4jsj8qBngrni\nyOZm6Gm47NWlzEgIbBI2UfvwIJR99A4nWpZ4Ql7Mrej8OQdHgAtslCBQh2x4rRBM\nkYBNUdKgPvSb/G6mbViLEzbr1PRrsxyL5LgM4g8IknlAVhiqhUM4zPQV9B1Q6GHK\n7dd0VHEwrk8XPk8E0HD6WGpzScCYl+uVk4u4vGz1KTjqvP++TLjzYl7BOCNavS5+\nwQMlRId7ohpLvvsBgdEMn/pCBvrU0xgtfh1xYDKmHlomTC3KsvmIh+DXOxFfx/A4\nbuXYSZEUcbr8rJJFK6q2kuxdEynZXiQwlTr+HHGLF/c/vy/nfh4rnAbbNYlnO5vY\nUX10TvIf\n=PcvM\n-----END PGP SIGNATURE-----",
        "payload": "tree 562aadddf3da65e1366d45b2860d8e11c476d866\nparent faece47c4706783e0460ed977390a44630b2d44c\nauthor MarcoFalke <falke.marco@gmail.com> 1619805815 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620104131 +0200\n\nrefactor: Replace &foo[0] with foo.data()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac30eec42c486ec1bfd696293040a7aa0f04625",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac30eec42c486ec1bfd696293040a7aa0f04625",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac30eec42c486ec1bfd696293040a7aa0f04625/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faece47c4706783e0460ed977390a44630b2d44c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faece47c4706783e0460ed977390a44630b2d44c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faece47c4706783e0460ed977390a44630b2d44c"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 40,
      "deletions": 40
    },
    "files": [
      {
        "sha": "f3c8517130b34b0d25af88724b77e178faf0e768",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -45,7 +45,7 @@ int main()\n     stream << vanillaSpendTx;\n \n     bitcoinconsensus_error err;\n-    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n+    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, stream.data(), stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n     std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n \n     getchar();"
      },
      {
        "sha": "cc6db8d33eff58b2c68d0762f6b62463080681d8",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -248,7 +248,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n \n         CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n         ssTx << *newTx;\n-        transaction_array.append((const char*)&(ssTx[0]), ssTx.size());\n+        transaction_array.append((const char*)ssTx.data(), ssTx.size());\n     }\n \n     // Add addresses / update labels that we've sent to the address book,"
      },
      {
        "sha": "174f4cef3121ca10693f65a30d2e2b2a250d9dd7",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -628,7 +628,7 @@ std::vector<unsigned char> FastRandomContext::randbytes(size_t len)\n     if (requires_seed) RandomSeed();\n     std::vector<unsigned char> ret(len);\n     if (len > 0) {\n-        rng.Keystream(&ret[0], len);\n+        rng.Keystream(ret.data(), len);\n     }\n     return ret;\n }"
      },
      {
        "sha": "dc0f165be03664c2ed75cae5421da8a64d269d04",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -1890,7 +1890,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n             const valtype& script_bytes = SpanPopBack(stack);\n             exec_script = CScript(script_bytes.begin(), script_bytes.end());\n             uint256 hash_exec_script;\n-            CSHA256().Write(&exec_script[0], exec_script.size()).Finalize(hash_exec_script.begin());\n+            CSHA256().Write(exec_script.data(), exec_script.size()).Finalize(hash_exec_script.begin());\n             if (memcmp(hash_exec_script.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }"
      },
      {
        "sha": "65867c1c1405f9c7f5c69465a0aa501b26495e17",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -53,14 +53,14 @@ class CSignatureCache\n     ComputeEntryECDSA(uint256& entry, const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubkey) const\n     {\n         CSHA256 hasher = m_salted_hasher_ecdsa;\n-        hasher.Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(vchSig.data(), vchSig.size()).Finalize(entry.begin());\n+        hasher.Write(hash.begin(), 32).Write(pubkey.data(), pubkey.size()).Write(vchSig.data(), vchSig.size()).Finalize(entry.begin());\n     }\n \n     void\n     ComputeEntrySchnorr(uint256& entry, const uint256 &hash, Span<const unsigned char> sig, const XOnlyPubKey& pubkey) const\n     {\n         CSHA256 hasher = m_salted_hasher_schnorr;\n-        hasher.Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(sig.data(), sig.size()).Finalize(entry.begin());\n+        hasher.Write(hash.begin(), 32).Write(pubkey.data(), pubkey.size()).Write(sig.data(), sig.size()).Finalize(entry.begin());\n     }\n \n     bool"
      },
      {
        "sha": "da0092f9e3b9397c05466592446b623cc64597ff",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -167,7 +167,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n         return true;\n \n     case TxoutType::WITNESS_V0_SCRIPTHASH:\n-        CRIPEMD160().Write(&vSolutions[0][0], vSolutions[0].size()).Finalize(h160.begin());\n+        CRIPEMD160().Write(vSolutions[0].data(), vSolutions[0].size()).Finalize(h160.begin());\n         if (GetCScript(provider, sigdata, CScriptID{h160}, scriptRet)) {\n             ret.push_back(std::vector<unsigned char>(scriptRet.begin(), scriptRet.end()));\n             return true;"
      },
      {
        "sha": "b7ba46bd3035df58b784fe31d79db3b45c611bc3",
        "filename": "src/test/compress_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/compress_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/compress_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/compress_tests.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -79,7 +79,7 @@ BOOST_AUTO_TEST_CASE(compress_script_to_ckey_id)\n     // Check compressed script\n     BOOST_CHECK_EQUAL(out.size(), 21U);\n     BOOST_CHECK_EQUAL(out[0], 0x00);\n-    BOOST_CHECK_EQUAL(memcmp(&out[1], &script[3], 20), 0); // compare the 20 relevant chars of the CKeyId in the script\n+    BOOST_CHECK_EQUAL(memcmp(out.data() + 1, script.data() + 3, 20), 0); // compare the 20 relevant chars of the CKeyId in the script\n }\n \n BOOST_AUTO_TEST_CASE(compress_script_to_cscript_id)\n@@ -96,7 +96,7 @@ BOOST_AUTO_TEST_CASE(compress_script_to_cscript_id)\n     // Check compressed script\n     BOOST_CHECK_EQUAL(out.size(), 21U);\n     BOOST_CHECK_EQUAL(out[0], 0x01);\n-    BOOST_CHECK_EQUAL(memcmp(&out[1], &script[2], 20), 0); // compare the 20 relevant chars of the CScriptId in the script\n+    BOOST_CHECK_EQUAL(memcmp(out.data() + 1, script.data() + 2, 20), 0); // compare the 20 relevant chars of the CScriptId in the script\n }\n \n BOOST_AUTO_TEST_CASE(compress_script_to_compressed_pubkey_id)\n@@ -113,8 +113,8 @@ BOOST_AUTO_TEST_CASE(compress_script_to_compressed_pubkey_id)\n \n     // Check compressed script\n     BOOST_CHECK_EQUAL(out.size(), 33U);\n-    BOOST_CHECK_EQUAL(memcmp(&out[0], &script[1], 1), 0);\n-    BOOST_CHECK_EQUAL(memcmp(&out[1], &script[2], 32), 0); // compare the 32 chars of the compressed CPubKey\n+    BOOST_CHECK_EQUAL(memcmp(out.data(), script.data() + 1, 1), 0);\n+    BOOST_CHECK_EQUAL(memcmp(out.data() + 1, script.data() + 2, 32), 0); // compare the 32 chars of the compressed CPubKey\n }\n \n BOOST_AUTO_TEST_CASE(compress_script_to_uncompressed_pubkey_id)\n@@ -130,7 +130,7 @@ BOOST_AUTO_TEST_CASE(compress_script_to_uncompressed_pubkey_id)\n \n     // Check compressed script\n     BOOST_CHECK_EQUAL(out.size(), 33U);\n-    BOOST_CHECK_EQUAL(memcmp(&out[1], &script[2], 32), 0); // first 32 chars of CPubKey are copied into out[1:]\n+    BOOST_CHECK_EQUAL(memcmp(out.data() + 1, script.data() + 2, 32), 0); // first 32 chars of CPubKey are copied into out[1:]\n     BOOST_CHECK_EQUAL(out[0], 0x04 | (script[65] & 0x01)); // least significant bit (lsb) of last char of pubkey is mapped into out[0]\n }\n "
      },
      {
        "sha": "edec5f0a31900be2d811324cbeec17f38367b705",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -33,7 +33,7 @@ static void TestVector(const Hasher &h, const In &in, const Out &out) {\n     hash.resize(out.size());\n     {\n         // Test that writing the whole input string at once works.\n-        Hasher(h).Write((unsigned char*)&in[0], in.size()).Finalize(&hash[0]);\n+        Hasher(h).Write((const uint8_t*)in.data(), in.size()).Finalize(hash.data());\n         BOOST_CHECK(hash == out);\n     }\n     for (int i=0; i<32; i++) {\n@@ -42,15 +42,15 @@ static void TestVector(const Hasher &h, const In &in, const Out &out) {\n         size_t pos = 0;\n         while (pos < in.size()) {\n             size_t len = InsecureRandRange((in.size() - pos + 1) / 2 + 1);\n-            hasher.Write((unsigned char*)&in[pos], len);\n+            hasher.Write((const uint8_t*)in.data() + pos, len);\n             pos += len;\n             if (pos > 0 && pos + 2 * out.size() > in.size() && pos < in.size()) {\n                 // Test that writing the rest at once to a copy of a hasher works.\n-                Hasher(hasher).Write((unsigned char*)&in[pos], in.size() - pos).Finalize(&hash[0]);\n+                Hasher(hasher).Write((const uint8_t*)in.data() + pos, in.size() - pos).Finalize(hash.data());\n                 BOOST_CHECK(hash == out);\n             }\n         }\n-        hasher.Finalize(&hash[0]);\n+        hasher.Finalize(hash.data());\n         BOOST_CHECK(hash == out);\n     }\n }"
      },
      {
        "sha": "7fd7559d7201ac4314de98c41c3680543b2b1596",
        "filename": "src/test/fuzz/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/fuzz/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/fuzz/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -273,7 +273,7 @@ CScript ConsumeScript(FuzzedDataProvider& fuzzed_data_provider, const size_t max\n     CScript r_script{b.begin(), b.end()};\n     if (maybe_p2wsh && fuzzed_data_provider.ConsumeBool()) {\n         uint256 script_hash;\n-        CSHA256().Write(&r_script[0], r_script.size()).Finalize(script_hash.begin());\n+        CSHA256().Write(r_script.data(), r_script.size()).Finalize(script_hash.begin());\n         r_script.clear();\n         r_script << OP_0 << ToByteVector(script_hash);\n     }"
      },
      {
        "sha": "44fbfa597032995adb56512dbb30d4c15efe00fa",
        "filename": "src/test/script_standard_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/script_standard_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/script_standard_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_standard_tests.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -98,7 +98,7 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\n \n     // TxoutType::WITNESS_V0_SCRIPTHASH\n     uint256 scriptHash;\n-    CSHA256().Write(&redeemScript[0], redeemScript.size())\n+    CSHA256().Write(redeemScript.data(), redeemScript.size())\n         .Finalize(scriptHash.begin());\n \n     s.clear();\n@@ -370,7 +370,7 @@ BOOST_AUTO_TEST_CASE(script_standard_GetScriptFor_)\n     witnessScript << OP_1 << ToByteVector(pubkeys[0]) << OP_1 << OP_CHECKMULTISIG;\n \n     uint256 scriptHash;\n-    CSHA256().Write(&witnessScript[0], witnessScript.size())\n+    CSHA256().Write(witnessScript.data(), witnessScript.size())\n         .Finalize(scriptHash.begin());\n \n     expected.clear();"
      },
      {
        "sha": "171234f745fbad1dd15eaf6063817d6a640402fe",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -155,10 +155,10 @@ void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScript\n     if (libconsensus_flags == flags) {\n         int expectedSuccessCode = expect ? 1 : 0;\n         if (flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS) {\n-            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(scriptPubKey.data(), scriptPubKey.size(), txCredit.vout[0].nValue, (const unsigned char*)&stream[0], stream.size(), 0, libconsensus_flags, nullptr) == expectedSuccessCode, message);\n+            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(scriptPubKey.data(), scriptPubKey.size(), txCredit.vout[0].nValue, stream.data(), stream.size(), 0, libconsensus_flags, nullptr) == expectedSuccessCode, message);\n         } else {\n-            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(scriptPubKey.data(), scriptPubKey.size(), 0, (const unsigned char*)&stream[0], stream.size(), 0, libconsensus_flags, nullptr) == expectedSuccessCode, message);\n-            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), 0, libconsensus_flags, nullptr) == expectedSuccessCode, message);\n+            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(scriptPubKey.data(), scriptPubKey.size(), 0, stream.data(), stream.size(), 0, libconsensus_flags, nullptr) == expectedSuccessCode, message);\n+            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), stream.data(), stream.size(), 0, libconsensus_flags, nullptr) == expectedSuccessCode, message);\n         }\n     }\n #endif\n@@ -224,7 +224,7 @@ struct KeyData\n         pubkey0 = key0.GetPubKey();\n         pubkey0H = key0.GetPubKey();\n         pubkey0C = key0C.GetPubKey();\n-        *const_cast<unsigned char*>(&pubkey0H[0]) = 0x06 | (pubkey0H[64] & 1);\n+        *const_cast<unsigned char*>(pubkey0H.data()) = 0x06 | (pubkey0H[64] & 1);\n \n         key1.Set(vchKey1, vchKey1 + 32, false);\n         key1C.Set(vchKey1, vchKey1 + 32, true);\n@@ -290,7 +290,7 @@ class TestBuilder\n         } else if (wm == WitnessMode::SH) {\n             witscript = scriptPubKey;\n             uint256 hash;\n-            CSHA256().Write(&witscript[0], witscript.size()).Finalize(hash.begin());\n+            CSHA256().Write(witscript.data(), witscript.size()).Finalize(hash.begin());\n             scriptPubKey = CScript() << witnessversion << ToByteVector(hash);\n         }\n         if (P2SH) {\n@@ -774,7 +774,7 @@ BOOST_AUTO_TEST_CASE(script_build)\n     {\n         CScript witscript = CScript() << ToByteVector(keys.pubkey0);\n         uint256 hash;\n-        CSHA256().Write(&witscript[0], witscript.size()).Finalize(hash.begin());\n+        CSHA256().Write(witscript.data(), witscript.size()).Finalize(hash.begin());\n         std::vector<unsigned char> hashBytes = ToByteVector(hash);\n         hashBytes.pop_back();\n         tests.push_back(TestBuilder(CScript() << OP_0 << hashBytes,\n@@ -1520,7 +1520,7 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_returns_true)\n     stream << spendTx;\n \n     bitcoinconsensus_error err;\n-    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), nIn, libconsensus_flags, &err);\n+    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), stream.data(), stream.size(), nIn, libconsensus_flags, &err);\n     BOOST_CHECK_EQUAL(result, 1);\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_OK);\n }\n@@ -1543,7 +1543,7 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_tx_index_err)\n     stream << spendTx;\n \n     bitcoinconsensus_error err;\n-    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), nIn, libconsensus_flags, &err);\n+    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), stream.data(), stream.size(), nIn, libconsensus_flags, &err);\n     BOOST_CHECK_EQUAL(result, 0);\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_TX_INDEX);\n }\n@@ -1566,7 +1566,7 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_tx_size)\n     stream << spendTx;\n \n     bitcoinconsensus_error err;\n-    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size() * 2, nIn, libconsensus_flags, &err);\n+    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), stream.data(), stream.size() * 2, nIn, libconsensus_flags, &err);\n     BOOST_CHECK_EQUAL(result, 0);\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_TX_SIZE_MISMATCH);\n }\n@@ -1589,7 +1589,7 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_tx_serialization)\n     stream << 0xffffffff;\n \n     bitcoinconsensus_error err;\n-    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), nIn, libconsensus_flags, &err);\n+    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), stream.data(), stream.size(), nIn, libconsensus_flags, &err);\n     BOOST_CHECK_EQUAL(result, 0);\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_TX_DESERIALIZE);\n }\n@@ -1612,7 +1612,7 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_amount_required_err)\n     stream << spendTx;\n \n     bitcoinconsensus_error err;\n-    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), nIn, libconsensus_flags, &err);\n+    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), stream.data(), stream.size(), nIn, libconsensus_flags, &err);\n     BOOST_CHECK_EQUAL(result, 0);\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_AMOUNT_REQUIRED);\n }\n@@ -1635,7 +1635,7 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_invalid_flags)\n     stream << spendTx;\n \n     bitcoinconsensus_error err;\n-    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), nIn, libconsensus_flags, &err);\n+    int result = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), stream.data(), stream.size(), nIn, libconsensus_flags, &err);\n     BOOST_CHECK_EQUAL(result, 0);\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_INVALID_FLAGS);\n }\n@@ -1733,7 +1733,7 @@ BOOST_AUTO_TEST_CASE(script_assets_test)\n     size_t length = file.tellg();\n     file.seekg(0, std::ios::beg);\n     std::string data(length, '\\0');\n-    file.read(&data[0], data.size());\n+    file.read(data.data(), data.size());\n     UniValue tests = read_json(data);\n     BOOST_CHECK(tests.isArray());\n     BOOST_CHECK(tests.size() > 0);"
      },
      {
        "sha": "251778e40194504354d3b76b3eb5c03a6a47b3a6",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -78,7 +78,7 @@ bool CCrypter::Encrypt(const CKeyingMaterial& vchPlaintext, std::vector<unsigned\n     vchCiphertext.resize(vchPlaintext.size() + AES_BLOCKSIZE);\n \n     AES256CBCEncrypt enc(vchKey.data(), vchIV.data(), true);\n-    size_t nLen = enc.Encrypt(&vchPlaintext[0], vchPlaintext.size(), vchCiphertext.data());\n+    size_t nLen = enc.Encrypt(vchPlaintext.data(), vchPlaintext.size(), vchCiphertext.data());\n     if(nLen < vchPlaintext.size())\n         return false;\n     vchCiphertext.resize(nLen);\n@@ -97,7 +97,7 @@ bool CCrypter::Decrypt(const std::vector<unsigned char>& vchCiphertext, CKeyingM\n     vchPlaintext.resize(nLen);\n \n     AES256CBCDecrypt dec(vchKey.data(), vchIV.data(), true);\n-    nLen = dec.Decrypt(vchCiphertext.data(), vchCiphertext.size(), &vchPlaintext[0]);\n+    nLen = dec.Decrypt(vchCiphertext.data(), vchCiphertext.size(), vchPlaintext.data());\n     if(nLen == 0)\n         return false;\n     vchPlaintext.resize(nLen);\n@@ -121,7 +121,7 @@ bool DecryptSecret(const CKeyingMaterial& vMasterKey, const std::vector<unsigned\n     memcpy(chIV.data(), &nIV, WALLET_CRYPTO_IV_SIZE);\n     if(!cKeyCrypter.SetKey(vMasterKey, chIV))\n         return false;\n-    return cKeyCrypter.Decrypt(vchCiphertext, *((CKeyingMaterial*)&vchPlaintext));\n+    return cKeyCrypter.Decrypt(vchCiphertext, vchPlaintext);\n }\n \n bool DecryptKey(const CKeyingMaterial& vMasterKey, const std::vector<unsigned char>& vchCryptedSecret, const CPubKey& vchPubKey, CKey& key)"
      },
      {
        "sha": "ea045eb6d8173134a1f18e196b3947bdd8346cd7",
        "filename": "src/wallet/salvage.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/salvage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/salvage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/salvage.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -154,8 +154,8 @@ bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::v\n             warnings.push_back(strprintf(Untranslated(\"WARNING: WalletBatch::Recover skipping %s: %s\"), strType, strErr));\n             continue;\n         }\n-        Dbt datKey(&row.first[0], row.first.size());\n-        Dbt datValue(&row.second[0], row.second.size());\n+        Dbt datKey(row.first.data(), row.first.size());\n+        Dbt datValue(row.second.data(), row.second.size());\n         int ret2 = pdbCopy->put(ptxn, &datKey, &datValue, DB_NOOVERWRITE);\n         if (ret2 > 0)\n             fSuccess = false;"
      },
      {
        "sha": "2eb9ca5c6df2e9247c7238bfe5bda30637f9c2dd",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -162,7 +162,7 @@ IsMineResult IsMineInner(const LegacyScriptPubKeyMan& keystore, const CScript& s\n             break;\n         }\n         uint160 hash;\n-        CRIPEMD160().Write(&vSolutions[0][0], vSolutions[0].size()).Finalize(hash.begin());\n+        CRIPEMD160().Write(vSolutions[0].data(), vSolutions[0].size()).Finalize(hash.begin());\n         CScriptID scriptID = CScriptID(hash);\n         CScript subscript;\n         if (keystore.GetCScript(scriptID, subscript)) {"
      },
      {
        "sha": "3d0ef9f8c0c5cac957561f162cf435269c2ad2a4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac30eec42c486ec1bfd696293040a7aa0f04625/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fac30eec42c486ec1bfd696293040a7aa0f04625",
        "patch": "@@ -603,12 +603,12 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n     CKeyingMaterial _vMasterKey;\n \n     _vMasterKey.resize(WALLET_CRYPTO_KEY_SIZE);\n-    GetStrongRandBytes(&_vMasterKey[0], WALLET_CRYPTO_KEY_SIZE);\n+    GetStrongRandBytes(_vMasterKey.data(), WALLET_CRYPTO_KEY_SIZE);\n \n     CMasterKey kMasterKey;\n \n     kMasterKey.vchSalt.resize(WALLET_CRYPTO_SALT_SIZE);\n-    GetStrongRandBytes(&kMasterKey.vchSalt[0], WALLET_CRYPTO_SALT_SIZE);\n+    GetStrongRandBytes(kMasterKey.vchSalt.data(), WALLET_CRYPTO_SALT_SIZE);\n \n     CCrypter crypter;\n     int64_t nStartTime = GetTimeMillis();"
      }
    ]
  }
]