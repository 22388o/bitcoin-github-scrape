jtimon,2015-01-26T12:31:57Z,Updated adding MANDATORY_SCRIPT_VERIFY_FLAGS to consensus.h and STANDARD_SCRIPT_VERIFY_FLAGS and STANDARD_NOT_MANDATORY_VERIFY_FLAGS to policy.h\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-71453906,71453906,
jtimon,2015-02-03T19:45:24Z,Needed rebase.\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-72720146,72720146,
jtimon,2015-02-15T21:03:00Z,Rebased adding LOCKTIME_THRESHOLD to consensus.h\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-74436826,74436826,
jtimon,2015-02-21T21:46:28Z,Moved MANDATORY_SCRIPT_VERIFY_FLAGS to policy as suggested by @TheBlueMatt and @sipa \n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-75394676,75394676,
jtimon,2015-03-03T19:33:10Z,Renamed policy.o to policy/policy.o \n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-77017023,77017023,
jtimon,2015-03-11T13:28:21Z,"Not exactly sure why, but it needed rebase. Ping @laanwj @theuni \nThis is quite trivial and the best first step for any consensus and policy code movements IMO.\n",https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-78262222,78262222,
jtimon,2015-03-11T17:09:26Z,Rebased with @laanwj 's fix that should make travis happy again\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-78308482,78308482,
maaku,2015-03-12T05:12:23Z,utACK. I like the direction this is going towards.\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-78424948,78424948,
jtimon,2015-03-13T12:38:50Z,Rebased without @laanwj 's fix after #5883 has been merged\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-78953145,78953145,
theuni,2015-03-15T20:42:22Z,"I really don't like the introduction of globals into policy.h, but I understand that they're a temporary measure.\n\nutACK, with the assumption that the globals will be removed fairly quickly.\n",https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-81232563,81232563,
jtimon,2015-03-17T10:58:16Z,"@theuni All globals and constants should ideally become attributes of CStandardPolicy and thus encapsulated and not exposed to the rest of the code.\nRebased moving the `#include ""script/interpreter.h""` from consensus.h to policy.h as pointed out by @theuni \n",https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-82273924,82273924,
jtimon,2015-03-24T17:16:53Z,"I improved the includes (ie not including consensus/consensus.h and policy/policy.h from main.h): even if there's going to be an include cleanup commit later, there's no reason not to do things right from the beginning here.\nAfter that, github says that this needs rebase but it's not true, I rebased it to master locally just fine.\nI'm not sure about what should I do next...should I still rebase?",https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-85605266,85605266,
jtimon,2015-03-24T17:24:00Z,"Never mind, it does need rebase now.\n",https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-85607526,85607526,
jtimon,2015-03-26T11:56:16Z,Needed rebase.\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-86482185,86482185,
jtimon,2015-04-01T13:10:02Z,"Closing in favor of #5669 and #5595. The first commit will be in both, the second commit only on the policy PR.\n",https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-88473954,88473954,
jtimon,2015-04-23T00:30:16Z,Reopened as suggested by @theuni \n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-95374732,95374732,
jtimon,2015-04-23T00:46:06Z,Updated only with the consensus constants but not the policy constants and globals.\nThis should be hyper-mergeable.\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-95377068,95377068,
theuni,2015-04-23T03:19:27Z,"ACK. I asked @jtimon to re-open this (and slim it down to what it is now) in an effort to focus some of the current tangled PRs. I'm hoping we can serialize some of this work to get it in faster, so I'll take the blame for blowing up everyone's mailboxes with closed/reworked PRs today :). \n",https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-95413213,95413213,
morcos,2015-04-23T20:34:21Z,I like the idea of going ahead and getting some of this reorganization out of the way if we're going to do it.  I reviewed this and did some basic testing and it looks good to me.\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-95712012,95712012,
sipa,2015-04-24T09:54:19Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5696#issuecomment-95877776,95877776,
TheBlueMatt,2015-02-04T00:06:18Z,"Not sold on this part...MANDATORY_SCRIPT_VERIFY_FLAGS is more about ""what we accept now"", whereas consensus code is generally ""what we accept(ed) at the time the block was generated based on its version""\n",https://github.com/bitcoin/bitcoin/pull/5696#discussion_r24052619,24052619,src/consensus/consensus.h
TheBlueMatt,2015-02-04T00:07:46Z,Why not also move this?\n,https://github.com/bitcoin/bitcoin/pull/5696#discussion_r24052681,24052681,src/script/standard.h
jtimon,2015-02-04T01:08:29Z,"As explained in the PR:\n""This will also open the door to some cleaning up on the includes.\nnMaxDatacarrierBytes and MAX_OP_RETURN_RELAY are not moved from script/standard.o to policy.o because policy.o is in server while script/standard.o is in common and wouldn't link.""\n\nIt can be done later, see https://github.com/jtimon/bitcoin/commit/d66803ee06175d71ff7605ed1cfa8b91aec23f62\n",https://github.com/bitcoin/bitcoin/pull/5696#discussion_r24055568,24055568,src/script/standard.h
jtimon,2015-02-04T01:14:13Z,"I've been thinking that Consensus could be a factory of an interface taking nHeight as parameter instead of a namespace.\nExample:\n\n```\nif (Consensus(nHeight).CheckBlock(block, state))\n```\n\nOtherwise all consensus functions affected by softforks will have to take int nHeight as parameter.\nBut it's probably too soon for something like that.\nI'm not sure what you're proposing though, leaving",https://github.com/bitcoin/bitcoin/pull/5696#discussion_r24055862,24055862,src/consensus/consensus.h
Diapolo,2015-04-27T06:48:08Z,"Why was this needed, seems I can compile without it.\n",https://github.com/bitcoin/bitcoin/pull/5696#discussion_r29123490,29123490,src/qt/transactiondesc.cpp
jtimon,2015-04-27T08:42:32Z,"The question is not whether you can compile with it or not, the question is whether qt/transactiondesc.cpp is using anything declared in wallet/db.h or not. It's better to indicate dependencies explicitly.\n\nTry commenting `#include ""main.h""` and `#include ""wallet/db.h""` and build again.\n\nYou will notice that \n\n```\n#include ""coins.h""\n#include <boost/foreach.hpp>\n```\n\nis missing but...yea",https://github.com/bitcoin/bitcoin/pull/5696#discussion_r29129115,29129115,src/qt/transactiondesc.cpp
