[
  {
    "sha": "35e408f8a48a5406cec214c1d660e6f6a2d026f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWU0MDhmOGE0OGE1NDA2Y2VjMjE0YzFkNjYwZTZmNmEyZDAyNmYz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-02T16:43:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-12-02T16:54:16Z"
      },
      "message": "Regard connection failures as attempt for addrman\n\nThis avoids connecting to them again too soon in ThreadOpenConnections.\n\nMake an exception for connection failures to the proxy as these\nshouldn't affect the status of specific nodes.",
      "tree": {
        "sha": "b6d60a54e62f760266b4f854182eadf8c8438f20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6d60a54e62f760266b4f854182eadf8c8438f20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35e408f8a48a5406cec214c1d660e6f6a2d026f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35e408f8a48a5406cec214c1d660e6f6a2d026f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35e408f8a48a5406cec214c1d660e6f6a2d026f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35e408f8a48a5406cec214c1d660e6f6a2d026f3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90f7aa777865864d5cf7d1f12af8ef37d851faab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90f7aa777865864d5cf7d1f12af8ef37d851faab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90f7aa777865864d5cf7d1f12af8ef37d851faab"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 25,
      "deletions": 7
    },
    "files": [
      {
        "sha": "f1c49d0382a0575938d45527839236319b5eaeca",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35e408f8a48a5406cec214c1d660e6f6a2d026f3/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35e408f8a48a5406cec214c1d660e6f6a2d026f3/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=35e408f8a48a5406cec214c1d660e6f6a2d026f3",
        "patch": "@@ -399,7 +399,9 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n \n     // Connect\n     SOCKET hSocket;\n-    if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, Params().GetDefaultPort()) : ConnectSocket(addrConnect, hSocket))\n+    bool proxyConnectionFailed = false;\n+    if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, Params().GetDefaultPort(), nConnectTimeout, &proxyConnectionFailed) :\n+                  ConnectSocket(addrConnect, hSocket, nConnectTimeout, &proxyConnectionFailed))\n     {\n         addrman.Attempt(addrConnect);\n \n@@ -415,6 +417,10 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n         pnode->nTimeConnected = GetTime();\n \n         return pnode;\n+    } else if (!proxyConnectionFailed) {\n+        // If connecting to the node failed, and failure is not caused by a problem connecting to\n+        // the proxy, mark this as an attempt.\n+        addrman.Attempt(addrConnect);\n     }\n \n     return NULL;"
      },
      {
        "sha": "053c645a1be10231c7a93f2a0390d23f05039c55",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35e408f8a48a5406cec214c1d660e6f6a2d026f3/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35e408f8a48a5406cec214c1d660e6f6a2d026f3/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=35e408f8a48a5406cec214c1d660e6f6a2d026f3",
        "patch": "@@ -519,18 +519,23 @@ bool IsProxy(const CNetAddr &addr) {\n     return false;\n }\n \n-bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n+bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed)\n {\n     proxyType proxy;\n+    if (outProxyConnectionFailed)\n+        *outProxyConnectionFailed = false;\n     // no proxy needed (none set for target network)\n     if (!GetProxy(addrDest.GetNetwork(), proxy))\n         return ConnectSocketDirectly(addrDest, hSocketRet, nTimeout);\n \n     SOCKET hSocket = INVALID_SOCKET;\n \n     // first connect to proxy server\n-    if (!ConnectSocketDirectly(proxy, hSocket, nTimeout))\n+    if (!ConnectSocketDirectly(proxy, hSocket, nTimeout)) {\n+        if (outProxyConnectionFailed)\n+            *outProxyConnectionFailed = true;\n         return false;\n+    }\n     // do socks negotiation\n     if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))\n         return false;\n@@ -539,10 +544,14 @@ bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n     return true;\n }\n \n-bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout)\n+bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout, bool *outProxyConnectionFailed)\n {\n     string strDest;\n     int port = portDefault;\n+\n+    if (outProxyConnectionFailed)\n+        *outProxyConnectionFailed = false;\n+\n     SplitHostPort(string(pszDest), port, strDest);\n \n     SOCKET hSocket = INVALID_SOCKET;\n@@ -561,8 +570,11 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n     if (!HaveNameProxy())\n         return false;\n     // first connect to name proxy server\n-    if (!ConnectSocketDirectly(nameProxy, hSocket, nTimeout))\n+    if (!ConnectSocketDirectly(nameProxy, hSocket, nTimeout)) {\n+        if (outProxyConnectionFailed)\n+            *outProxyConnectionFailed = true;\n         return false;\n+    }\n     // do socks negotiation\n     if (!Socks5(strDest, (unsigned short)port, hSocket))\n         return false;"
      },
      {
        "sha": "09fe094946e69d52611540f2b0360e3f950b6678",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35e408f8a48a5406cec214c1d660e6f6a2d026f3/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35e408f8a48a5406cec214c1d660e6f6a2d026f3/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=35e408f8a48a5406cec214c1d660e6f6a2d026f3",
        "patch": "@@ -182,8 +182,8 @@ bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nM\n bool Lookup(const char *pszName, CService& addr, int portDefault = 0, bool fAllowLookup = true);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);\n bool LookupNumeric(const char *pszName, CService& addr, int portDefault = 0);\n-bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout = nConnectTimeout);\n-bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault = 0, int nTimeout = nConnectTimeout);\n+bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed = 0);\n+bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout, bool *outProxyConnectionFailed = 0);\n /** Return readable error string for a network error code */\n std::string NetworkErrorString(int err);\n /** Close socket and set hSocket to INVALID_SOCKET */"
      }
    ]
  }
]