[
  {
    "sha": "0a573682f24d20cb178b8b6f97c35ec46901c4db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTU3MzY4MmYyNGQyMGNiMTc4YjhiNmY5N2MzNWVjNDY5MDFjNGRi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-08T09:33:53Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-09T13:53:13Z"
      },
      "message": "tests: Add fuzzing harness for CheckTransaction(...), IsStandardTx(...) and other CTransaction related functions",
      "tree": {
        "sha": "a460bcc5dbf752a4d0f29d5b71698d5715fe1401",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a460bcc5dbf752a4d0f29d5b71698d5715fe1401"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a573682f24d20cb178b8b6f97c35ec46901c4db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a573682f24d20cb178b8b6f97c35ec46901c4db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a573682f24d20cb178b8b6f97c35ec46901c4db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a573682f24d20cb178b8b6f97c35ec46901c4db/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df50fd194fb804edba8a513b1eb699de38ca3963",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df50fd194fb804edba8a513b1eb699de38ca3963",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df50fd194fb804edba8a513b1eb699de38ca3963"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 89,
      "deletions": 0
    },
    "files": [
      {
        "sha": "698bcaac78c9a102c8c43ec338680e8dcfe07700",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a573682f24d20cb178b8b6f97c35ec46901c4db/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a573682f24d20cb178b8b6f97c35ec46901c4db/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=0a573682f24d20cb178b8b6f97c35ec46901c4db",
        "patch": "@@ -22,6 +22,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/netaddr_deserialize \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n+  test/fuzz/transaction \\\n   test/fuzz/transaction_deserialize \\\n   test/fuzz/txoutcompressor_deserialize \\\n   test/fuzz/txundo_deserialize\n@@ -321,6 +322,13 @@ test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCO\n test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blocktransactionsrequest_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_blocktransactionsrequest_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_transaction_SOURCES = $(FUZZ_SUITE) test/fuzz/transaction.cpp\n+test_fuzz_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_transaction_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "96d7947b076e4d3e1571815abd4030ff35ae7bb9",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a573682f24d20cb178b8b6f97c35ec46901c4db/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a573682f24d20cb178b8b6f97c35ec46901c4db/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=0a573682f24d20cb178b8b6f97c35ec46901c4db",
        "patch": "@@ -0,0 +1,81 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+#include <consensus/tx_check.h>\n+#include <consensus/tx_verify.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <core_memusage.h>\n+#include <policy/policy.h>\n+#include <policy/settings.h>\n+#include <primitives/transaction.h>\n+#include <streams.h>\n+#include <test/fuzz/fuzz.h>\n+#include <util/rbf.h>\n+#include <validation.h>\n+#include <version.h>\n+\n+#include <cassert>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n+    try {\n+        int nVersion;\n+        ds >> nVersion;\n+        ds.SetVersion(nVersion);\n+    } catch (const std::ios_base::failure& e) {\n+        return;\n+    }\n+    bool valid = true;\n+    const CTransaction tx = [&] {\n+        try {\n+            return CTransaction(deserialize, ds);\n+        } catch (const std::ios_base::failure& e) {\n+            valid = false;\n+            return CTransaction();\n+        }\n+    }();\n+    if (!valid) {\n+        return;\n+    }\n+\n+    CValidationState state_with_dupe_check;\n+    const bool valid_with_dupe_check = CheckTransaction(tx, state_with_dupe_check, /* fCheckDuplicateInputs= */ true);\n+    CValidationState state_without_dupe_check;\n+    const bool valid_without_dupe_check = CheckTransaction(tx, state_without_dupe_check, /* fCheckDuplicateInputs= */ false);\n+    if (valid_with_dupe_check) {\n+        assert(valid_without_dupe_check);\n+    }\n+\n+    const CFeeRate dust_relay_fee{DUST_RELAY_TX_FEE};\n+    std::string reason;\n+    const bool is_standard_with_permit_bare_multisig = IsStandardTx(tx, /* permit_bare_multisig= */ true, dust_relay_fee, reason);\n+    const bool is_standard_without_permit_bare_multisig = IsStandardTx(tx, /* permit_bare_multisig= */ false, dust_relay_fee, reason);\n+    if (is_standard_without_permit_bare_multisig) {\n+        assert(is_standard_with_permit_bare_multisig);\n+    }\n+\n+    (void)tx.GetHash();\n+    (void)tx.GetTotalSize();\n+    try {\n+        (void)tx.GetValueOut();\n+    } catch (const std::runtime_error&) {\n+    }\n+    (void)tx.GetWitnessHash();\n+    (void)tx.HasWitness();\n+    (void)tx.IsCoinBase();\n+    (void)tx.IsNull();\n+    (void)tx.ToString();\n+\n+    (void)EncodeHexTx(tx);\n+    (void)GetLegacySigOpCount(tx);\n+    (void)GetTransactionWeight(tx);\n+    (void)GetVirtualTransactionSize(tx);\n+    (void)IsFinalTx(tx, /* nBlockHeight= */ 1024, /* nBlockTime= */ 1024);\n+    (void)IsStandardTx(tx, reason);\n+    (void)RecursiveDynamicUsage(tx);\n+    (void)SignalsOptInRBF(tx);\n+}"
      }
    ]
  },
  {
    "sha": "5c2987636faa5bc175b37b81fd98ab48e576da0b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzI5ODc2MzZmYWE1YmMxNzViMzdiODFmZDk4YWI0OGU1NzZkYTBi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-08T20:55:31Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-09T13:53:13Z"
      },
      "message": "tests: Remove TRANSACTION_DESERIALIZE (replaced by transaction fuzzer)",
      "tree": {
        "sha": "aacf6ac904d460683ce8287f4945d93a7e5e267a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aacf6ac904d460683ce8287f4945d93a7e5e267a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c2987636faa5bc175b37b81fd98ab48e576da0b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c2987636faa5bc175b37b81fd98ab48e576da0b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c2987636faa5bc175b37b81fd98ab48e576da0b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c2987636faa5bc175b37b81fd98ab48e576da0b/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a573682f24d20cb178b8b6f97c35ec46901c4db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a573682f24d20cb178b8b6f97c35ec46901c4db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a573682f24d20cb178b8b6f97c35ec46901c4db"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 0,
      "deletions": 12
    },
    "files": [
      {
        "sha": "48df50d100971c6264e2b2edbf5a7fa37962f8a9",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c2987636faa5bc175b37b81fd98ab48e576da0b/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c2987636faa5bc175b37b81fd98ab48e576da0b/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=5c2987636faa5bc175b37b81fd98ab48e576da0b",
        "patch": "@@ -23,7 +23,6 @@ FUZZ_TARGETS = \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/transaction \\\n-  test/fuzz/transaction_deserialize \\\n   test/fuzz/txoutcompressor_deserialize \\\n   test/fuzz/txundo_deserialize\n \n@@ -203,12 +202,6 @@ test_fuzz_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n-test_fuzz_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n-test_fuzz_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTRANSACTION_DESERIALIZE=1\n-test_fuzz_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-test_fuzz_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-\n test_fuzz_blocklocator_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n test_fuzz_blocklocator_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKLOCATOR_DESERIALIZE=1\n test_fuzz_blocklocator_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      },
      {
        "sha": "3a6876ad3938e99aabe39593ce2fb1fc4b837a83",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c2987636faa5bc175b37b81fd98ab48e576da0b/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c2987636faa5bc175b37b81fd98ab48e576da0b/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=5c2987636faa5bc175b37b81fd98ab48e576da0b",
        "patch": "@@ -40,11 +40,6 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n                 CBlock block;\n                 ds >> block;\n             } catch (const std::ios_base::failure& e) {return;}\n-#elif TRANSACTION_DESERIALIZE\n-            try\n-            {\n-                CTransaction tx(deserialize, ds);\n-            } catch (const std::ios_base::failure& e) {return;}\n #elif BLOCKLOCATOR_DESERIALIZE\n             try\n             {"
      }
    ]
  }
]