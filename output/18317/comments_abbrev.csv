DrahtBot,2020-03-11 17:43:05,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16463 ([BIP 174] Implement serialization support for GLOBAL_XPUB field. by achow101)\n\nIf you consider this pull request",https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-597773325,597773325,
sipa,2020-03-30 23:18:13,"Addressed a number of comments, and included some of @ryanofsky's code suggestions. I've also revamped the merkleblock serializers using the new FOR_READ/FOR_WRITE.",https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-606301664,606301664,
sipa,2020-05-18 21:33:32,Anyone else feel like reviewing this? We're getting close. ,https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-630447051,630447051,
practicalswift,2020-05-19 04:41:17,"Strong concept ACK\n\nNew code is much easier to read and reason about.",https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-630575471,630575471,
MarcoFalke,2020-05-19 22:00:54,"re-ACK f9ee0f37c2, only change is new documentation commit for CustomUintFormatter ðŸ“‚\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK f9ee0f37c2, only change is new documentation commit for CustomUintFormatter ðŸ“‚\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqr",https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-631106741,631106741,
ryanofsky,2020-03-26 14:40:22,"In commit ""Convert everything except wallet/qt to new serialization"" (4a185971f495ab89d869a4744d36aa1a8c9aea3f)\n\nIs it safe to drop the Init call here? It seems needed to avoid leaving nTime uninitialized if READWRITE(obj.nTime) is skipped below.\n\nI was experimenting a little bit with how to be able to bring back `if (ser_action.ForRead())` ability in the new framework now that the object ",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398625457,398625457,src/protocol.h
ryanofsky,2020-03-26 17:47:44,"In commit ""Add ConvertFormatter"" (7c5a0c7c53c7cec8f4f6d074d90c5e8988f61c15)\n\nI think it would be better not to have this class, or maybe expose it less widely:\n\n- It only seems to be used one place currently, and I think CustomUintFormatter could be used there instead.\n- It seems easy to confuse with `READWRITEAS`, and not obvious when you'd use `READWRITEAS` vs `READWRITE` with `Convert",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398770856,398770856,src/serialize.h
ryanofsky,2020-03-26 18:57:18,"In commit ""Convert everything except wallet/qt to new serialization"" (4a185971f495ab89d869a4744d36aa1a8c9aea3f)\n\nLast commit is mostly repetitive changes of this form. Maybe a big regex in a scripted diff could be used to do the boilerplate subtitutions in a separate commit, so the more complicated changes here stand out.",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398817741,398817741,src/bloom.h
ryanofsky,2020-03-26 19:04:02,"In commit ""Convert everything except wallet/qt to new serialization"" (4a185971f495ab89d869a4744d36aa1a8c9aea3f)\n\nI suggested dropping ConvertFormatter in another comment for a few reasons. CustomUintFormatter could be used instead here if extended to support enums:\n\n```diff\ndiff --git a/src/protocol.h b/src/protocol.h\nindex c1a21264705..901471e110d 100644\n--- a/src/protocol.h\n+++ b",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398821936,398821936,src/protocol.h
ryanofsky,2020-03-27 20:21:13,"In commit ""Convert merkleblock to new serialization"" (25bfbbeb63eca1f1c8852a8a08844069d9e06776)\n\nMaybe better to keep constructor below private and just declare SERIALIZE_METHODS before it, assuming there's a valid reason for the constructor to be private.",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r399518137,399518137,src/merkleblock.h
sipa,2020-03-30 23:13:47,"That's great! I've turned this snippet into a separate commit (with you as author; please let me know if you prefer a different approach). It also adds the corresponding SER_WRITE, as it turns out to be useful further.",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400549708,400549708,src/protocol.h
sipa,2020-03-30 23:14:45,I've taken your approach of merging it into `CustomUintFormatter`.,https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550066,400550066,src/serialize.h
sipa,2020-03-30 23:15:23,"I think that would be pretty hard to do, especially the classname argument to `SERIALIZE_METHODS` is hard to figure out with a regexp. Do you have any concrete ideas?",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550280,400550280,src/bloom.h
sipa,2020-03-30 23:15:50,I've turned this into a separate commit with you as author.,https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550416,400550416,src/protocol.h
sipa,2020-03-30 23:16:20,I think this was a mistake; fixed.,https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550568,400550568,src/merkleblock.h
MarcoFalke,2020-05-19 18:38:12,"in commit 769ee5fa0011ae658770586442715452a656559d:\n\nAny reason why you remove the comment? ""This is only intended\nto implement serializers that are compatible with existing formats, and\nits use is not recommended for new data structures.""",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427518341,427518341,src/serialize.h
MarcoFalke,2020-05-19 19:46:27,"Clang has tooling to do these kind of refactors. Though, I haven't figured out how to run them in a scripted-diff.",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427557191,427557191,src/bloom.h
MarcoFalke,2020-05-19 19:47:38,"Going forward, the Init should probably be removed and replaced with a slim and clean C++11 initializer",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427557837,427557837,src/protocol.h
sipa,2020-05-19 21:26:35,"What do you mean with ""C++11 initializer"" ?",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427609952,427609952,src/protocol.h
sipa,2020-05-19 21:31:00,I suspect it was just lost in refactoring. Added a new commit that adds it back.,https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427612141,427612141,src/serialize.h
MarcoFalke,2020-05-19 21:45:11,"> What do you mean with ""C++11 initializer"" ?\n\n\n#19020 ",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427618650,427618650,src/protocol.h
MarcoFalke,2020-05-19 21:48:42,"in commit f9ee0f37c28f604bc82dab502ce229c66ef5b3b9\n\nNot recommend for big endian or anything that can be serialized with this wrapper? For example, I am wondering if there is a recommended way to serialize enums or should new code rather not use enums instead? ",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427620268,427620268,src/serialize.h
sipa,2020-05-19 21:50:47,"The comment is only intended to apply to big endian serialization. Any suggestions to make that clearer?\n\nIf it's confusing, I think it's also fine to just drop the comment. When picking a serialization for a new structure I doubt anyone would intentionally complicate their code by using big endian serialization.",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427621184,427621184,src/serialize.h
sipa,2020-05-19 21:51:20,Commented there: https://github.com/bitcoin/bitcoin/pull/19020/commits/eac91b03763880417b81037f890dd5a463ce8dde#r427620111,https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427621443,427621443,src/protocol.h
MarcoFalke,2020-05-19 21:58:34,"> I doubt anyone would intentionally complicate their code by using big endian serialization\n\nMakes sense",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427624619,427624619,src/serialize.h
ryanofsky,2020-05-19 23:42:54,"In commit ""Add comments to CustomUintFormatter"" (f9ee0f37c28f604bc82dab502ce229c66ef5b3b9)\n\nre: ""not recommended for new data structures"", it'd be nice to say what preferred alternatives are. Compact ints, varints, little endian fixed width ints? I keep forgetting all the int types myself..\n",https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427661148,427661148,src/serialize.h
sipa,2020-05-20 00:32:36,@ryanofsky Maybe the serialization code just shouldn't contain protocol design advice.,https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427676171,427676171,src/serialize.h
