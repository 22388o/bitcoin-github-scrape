[
  {
    "sha": "85c807c9ead3215021503348e75851900dfa08db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWM4MDdjOWVhZDMyMTUwMjE1MDMzNDhlNzU4NTE5MDBkZmEwOGRi",
    "commit": {
      "author": {
        "name": "Rusty Russell",
        "email": "rusty@rustcorp.com.au",
        "date": "2016-04-12T06:14:18Z"
      },
      "committer": {
        "name": "Rusty Russell",
        "email": "rusty@rustcorp.com.au",
        "date": "2016-04-13T07:23:52Z"
      },
      "message": "getblockchaininfo: make bip9_softforks an object, not an array.\n\nWe can't change \"softforks\", but it seems far more logical to use tags\nin an object rather than using an \"id\" field in an array.\n\nFor example, to get the csv status before, you need to iterate the\narray to find the entry with 'id' field equal to \"csv\":\n\n   jq '.bip9_softforks | map(select(.id == \"csv\"))[] | .status'\n\nNow:\n   jq '.bip9_softforks.csv.status'\n\nThere is no issue with fork names being incompatible with JSON tags,\nsince we're selecting them ourselves.\n\nSigned-off-by: Rusty Russell <rusty@rustcorp.com.au>",
      "tree": {
        "sha": "6cbfafb99c6ecc71196f79e93b753b17a1701591",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cbfafb99c6ecc71196f79e93b753b17a1701591"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85c807c9ead3215021503348e75851900dfa08db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85c807c9ead3215021503348e75851900dfa08db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85c807c9ead3215021503348e75851900dfa08db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85c807c9ead3215021503348e75851900dfa08db/comments",
    "author": {
      "login": "rustyrussell",
      "id": 775844,
      "node_id": "MDQ6VXNlcjc3NTg0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rustyrussell",
      "html_url": "https://github.com/rustyrussell",
      "followers_url": "https://api.github.com/users/rustyrussell/followers",
      "following_url": "https://api.github.com/users/rustyrussell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rustyrussell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
      "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
      "repos_url": "https://api.github.com/users/rustyrussell/repos",
      "events_url": "https://api.github.com/users/rustyrussell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rustyrussell",
      "id": 775844,
      "node_id": "MDQ6VXNlcjc3NTg0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rustyrussell",
      "html_url": "https://github.com/rustyrussell",
      "followers_url": "https://api.github.com/users/rustyrussell/followers",
      "following_url": "https://api.github.com/users/rustyrussell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rustyrussell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
      "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
      "repos_url": "https://api.github.com/users/rustyrussell/repos",
      "events_url": "https://api.github.com/users/rustyrussell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "934f2b5e769368d1a2407d41d53cafd5d51e6b36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/934f2b5e769368d1a2407d41d53cafd5d51e6b36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/934f2b5e769368d1a2407d41d53cafd5d51e6b36"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 8,
      "deletions": 17
    },
    "files": [
      {
        "sha": "e63343d35232e4bb89e1d77eb893cbcf120554bc",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85c807c9ead3215021503348e75851900dfa08db/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85c807c9ead3215021503348e75851900dfa08db/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=85c807c9ead3215021503348e75851900dfa08db",
        "patch": "@@ -79,11 +79,7 @@ def generate_blocks(self, number, version, test_blocks = []):\n \n     def get_bip9_status(self, key):\n         info = self.nodes[0].getblockchaininfo()\n-        for row in info['bip9_softforks']:\n-            if row['id'] == key:\n-                return row\n-        raise IndexError ('key:\"%s\" not found' % key)\n-\n+        return info['bip9_softforks'][key]\n \n     def test_BIP(self, bipName, activated_version, invalidate, invalidatePostSignature):\n         # generate some coins for later"
      },
      {
        "sha": "acb7f8a6b49df058a2f6495d13bce98a485547c6",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85c807c9ead3215021503348e75851900dfa08db/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85c807c9ead3215021503348e75851900dfa08db/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=85c807c9ead3215021503348e75851900dfa08db",
        "patch": "@@ -548,7 +548,4 @@ def create_lots_of_big_transactions(node, txouts, utxos, fee):\n \n def get_bip9_status(node, key):\n     info = node.getblockchaininfo()\n-    for row in info['bip9_softforks']:\n-        if row['id'] == key:\n-            return row\n-    raise IndexError ('key:\"%s\" not found' % key)\n+    return info['bip9_softforks'][key]"
      },
      {
        "sha": "7a01a10b7d629b8c97f97a1c182640545ac1237a",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85c807c9ead3215021503348e75851900dfa08db/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85c807c9ead3215021503348e75851900dfa08db/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=85c807c9ead3215021503348e75851900dfa08db",
        "patch": "@@ -608,10 +608,9 @@ static UniValue SoftForkDesc(const std::string &name, int version, CBlockIndex*\n     return rv;\n }\n \n-static UniValue BIP9SoftForkDesc(const std::string& name, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n+static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n {\n     UniValue rv(UniValue::VOBJ);\n-    rv.push_back(Pair(\"id\", name));\n     const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n     switch (thresholdState) {\n     case THRESHOLD_DEFINED: rv.push_back(Pair(\"status\", \"defined\")); break;\n@@ -660,15 +659,14 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n             \"        \\\"reject\\\": { ... }      (object) progress toward rejecting pre-softfork blocks (same fields as \\\"enforce\\\")\\n\"\n             \"     }, ...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"bip9_softforks\\\": [       (array) status of BIP9 softforks in progress\\n\"\n-            \"     {\\n\"\n-            \"        \\\"id\\\": \\\"xxxx\\\",        (string) name of the softfork\\n\"\n+            \"  \\\"bip9_softforks\\\": {          (object) status of BIP9 softforks in progress\\n\"\n+            \"     \\\"xxxx\\\" : {                (string) name of the softfork\\n\"\n             \"        \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"lockedin\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n             \"        \\\"bit\\\": xx,             (numeric) the bit, 0-28, in the block version field used to signal this soft fork\\n\"\n             \"        \\\"startTime\\\": xx,       (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n             \"        \\\"timeout\\\": xx          (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n             \"     }\\n\"\n-            \"  ]\\n\"\n+            \"  }\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getblockchaininfo\", \"\")\n@@ -691,11 +689,11 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     CBlockIndex* tip = chainActive.Tip();\n     UniValue softforks(UniValue::VARR);\n-    UniValue bip9_softforks(UniValue::VARR);\n+    UniValue bip9_softforks(UniValue::VOBJ);\n     softforks.push_back(SoftForkDesc(\"bip34\", 2, tip, consensusParams));\n     softforks.push_back(SoftForkDesc(\"bip66\", 3, tip, consensusParams));\n     softforks.push_back(SoftForkDesc(\"bip65\", 4, tip, consensusParams));\n-    bip9_softforks.push_back(BIP9SoftForkDesc(\"csv\", consensusParams, Consensus::DEPLOYMENT_CSV));\n+    bip9_softforks.push_back(Pair(\"csv\", BIP9SoftForkDesc(consensusParams, Consensus::DEPLOYMENT_CSV)));\n     obj.push_back(Pair(\"softforks\",             softforks));\n     obj.push_back(Pair(\"bip9_softforks\", bip9_softforks));\n "
      }
    ]
  },
  {
    "sha": "d12760b16ac30734b5e3b047df8aaf6564e927db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMTI3NjBiMTZhYzMwNzM0YjVlM2IwNDdkZjhhYWY2NTY0ZTkyN2Ri",
    "commit": {
      "author": {
        "name": "Rusty Russell",
        "email": "rusty@rustcorp.com.au",
        "date": "2016-04-13T07:24:07Z"
      },
      "committer": {
        "name": "Rusty Russell",
        "email": "rusty@rustcorp.com.au",
        "date": "2016-04-13T07:24:07Z"
      },
      "message": "rpc-tests: handle KeyError nicely in test_framework.py\n\nbtcdrak wrote this for me.\n\nSigned-off-by: Rusty Russell <rusty@rustcorp.com.au>",
      "tree": {
        "sha": "e21262573876b0ba1bd7d550145164c43e74eb03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e21262573876b0ba1bd7d550145164c43e74eb03"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d12760b16ac30734b5e3b047df8aaf6564e927db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d12760b16ac30734b5e3b047df8aaf6564e927db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d12760b16ac30734b5e3b047df8aaf6564e927db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d12760b16ac30734b5e3b047df8aaf6564e927db/comments",
    "author": {
      "login": "rustyrussell",
      "id": 775844,
      "node_id": "MDQ6VXNlcjc3NTg0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rustyrussell",
      "html_url": "https://github.com/rustyrussell",
      "followers_url": "https://api.github.com/users/rustyrussell/followers",
      "following_url": "https://api.github.com/users/rustyrussell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rustyrussell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
      "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
      "repos_url": "https://api.github.com/users/rustyrussell/repos",
      "events_url": "https://api.github.com/users/rustyrussell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rustyrussell",
      "id": 775844,
      "node_id": "MDQ6VXNlcjc3NTg0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rustyrussell",
      "html_url": "https://github.com/rustyrussell",
      "followers_url": "https://api.github.com/users/rustyrussell/followers",
      "following_url": "https://api.github.com/users/rustyrussell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rustyrussell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
      "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
      "repos_url": "https://api.github.com/users/rustyrussell/repos",
      "events_url": "https://api.github.com/users/rustyrussell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85c807c9ead3215021503348e75851900dfa08db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85c807c9ead3215021503348e75851900dfa08db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85c807c9ead3215021503348e75851900dfa08db"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3b08cd1384d4e227564ccd0fbe02e7b059e9dfe7",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d12760b16ac30734b5e3b047df8aaf6564e927db/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d12760b16ac30734b5e3b047df8aaf6564e927db/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=d12760b16ac30734b5e3b047df8aaf6564e927db",
        "patch": "@@ -142,6 +142,9 @@ def main(self):\n         except AssertionError as e:\n             print(\"Assertion failed: \"+ str(e))\n             traceback.print_tb(sys.exc_info()[2])\n+        except KeyError as e:\n+            print(\"key not found: \"+ str(e))\n+            traceback.print_tb(sys.exc_info()[2])\n         except Exception as e:\n             print(\"Unexpected exception caught during testing: \"+str(e))\n             traceback.print_tb(sys.exc_info()[2])"
      }
    ]
  }
]