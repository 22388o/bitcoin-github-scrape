MarcoFalke,2020-05-18 10:38:51,"Concept ACK. It would be nice to motivate the change in the opening post a bit:\n\n* The functions never return nullptr, so returning a string makes code at call sites easier to review (reviewers don't have to read the source code to verify that a nullptr is never returned)\n* All call sites convert to string anyway",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630098067,630098067,
kcalvinalvin,2020-05-18 12:02:39,"> Concept ACK. It would be nice to motivate the change in the opening post a bit:\n> \n>     * The functions never return nullptr, so returning a string makes code at call sites easier to review (reviewers don't have to read the source code to verify that a nullptr is never returned)\n> \n>     * All call sites convert to string anyway\n\nThanks for the comment! Added those bits in the post",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630135440,630135440,
MarcoFalke,2020-05-18 12:17:26,Also you can leave out the listing of files that you changed and what changes you made to those files. This is clear from reading the diff/looking at the changed files.,https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630143492,630143492,
kcalvinalvin,2020-05-18 12:26:54,"> Also you can leave out the listing of files that you changed and what changes you made to those files. This is clear from reading the diff/looking at the changed files.\n\nOk. Should I take those out or just note for future PRs?",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630148487,630148487,
MarcoFalke,2020-05-18 12:39:16,"Both a suggestion for future PRs as well as this one, because the pull request description will end up in the merge commit, if this is merged.",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630155072,630155072,
kcalvinalvin,2020-05-18 12:41:24,Done :),https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630156234,630156234,
hebasto,2020-05-18 14:16:26,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630211687,630211687,
kcalvinalvin,2020-05-18 16:07:10,"Addressed ```GetTxnOutputType()``` in the new commit as requested [here](https://github.com/bitcoin/bitcoin/issues/19000#issuecomment-630205502)\n\n",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630282767,630282767,
sipa,2020-05-18 17:05:36,"It's unfortunate to make these functions return an `std::string` by value, as it implies a string copy every time they are called. This could be avoided by having a `static const std::string` inside the function for every value, and returning them as `const std::string&`.",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630316301,630316301,
MarcoFalke,2020-05-18 17:08:10,"All callers put the return value into a string anyway. So return value optimization (or whatever it is called) should take care of this and make it a no-op, no?\n\nGoing forward, with C++17 they can be made constexpr string views if performance is really a concern.",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630317646,630317646,
tryphe,2020-05-18 17:35:11,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630332335,630332335,
sipa,2020-05-18 17:50:46,"@MarcoFalke That's a good point - this PR isn't making anything worse in that case. It could be improved later, but no need add extra complexity for that now.",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-630340032,630340032,
MarcoFalke,2020-05-20 12:08:34,"ACK bdd9cb6a9bc314400ad655a45ee32e03756468d1 ðŸ¥‘\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK bdd9cb6a9bc314400ad655a45ee32e03756468d1 ðŸ¥‘\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhkggv/dG77SPx7h89oenzVpqi337dajwuIwkr5AzDinyxCC+s+ZuWqRX",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-631433304,631433304,
laanwj,2020-05-21 15:14:37,"ACK on the changes.\n\nCan you please reformat your commit message though to put an empty line between the title and the body? Tools such as `git log --pretty=oneline` currently merge the entire description into the title, which is messy:\n```\nbdd9cb6a9bc314400ad655a45ee32e03756468d1 (pull/19004/head) script: Replace const char* to std::string Some functions should be returning std::string in",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-632142506,632142506,
hebasto,2020-05-21 15:18:05,"> Can you please reformat your commit message though to put an empty line between the title and the body?\n\n... and replace `script: ` prefix with `refactor: ` ?",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-632144401,632144401,
kcalvinalvin,2020-05-21 16:43:45,"> ACK on the changes.\n> \n> Can you please reformat your commit message though to put an empty line between the title and the body?\n\nDone :)\n\n> ... and replace `script: ` prefix with `refactor: ` ?\n\nAlso Done :)\n\nAlso changed the GitHub PR title from `script:` prefix to `refactor:`",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-632214529,632214529,
MarcoFalke,2020-05-21 16:45:59,"re-ACK c57f03ce17 (no changes since previous review) ðŸšƒ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK c57f03ce17 (no changes since previous review) ðŸšƒ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg5Ugv/RLY5cmEYDu4MGRx80v7YSnQnpIxJ2l2+ls",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-632217298,632217298,
Empact,2020-05-26 21:57:05,"~0 I like all of these except `GetOpName`, which could return `nullptr` in place of `""OP_UNKNOWN""` - seems reasonable to minimize processing in the unknown case:\nhttps://github.com/bitcoin/bitcoin/compare/master...Empact:replace-char-with-string\n",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-634302006,634302006,
MarcoFalke,2020-05-26 23:19:08,"Given that none of the call sites checked for nullptr of the char array, I'd find it very dangerous to re-introduce this sharp edge. Also for optional return values, we generally use Optional. In any case, I think this can be discussed in a follow-up pull request.",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-634330481,634330481,
Empact,2020-05-26 23:21:51,"Fair enough, Code Review ACK https://github.com/bitcoin/bitcoin/pull/19004/commits/c57f03ce1741b38af448bec7b22ab9f8ac21f067",https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-634331333,634331333,
practicalswift,2020-05-27 09:48:47,ACK c57f03ce1741b38af448bec7b22ab9f8ac21f067 -- patch looks correct,https://github.com/bitcoin/bitcoin/pull/19004#issuecomment-634552859,634552859,
practicalswift,2020-05-18 13:55:31,To minimize the diff consider calling the variable `strName`: `const std::string strName = GetOpName(static_cast<opcodetype>(op));` perhaps? :),https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426644219,426644219,src/core_read.cpp
practicalswift,2020-05-18 13:56:42,"I suggest doing this as `if (name == ""OP_UNKNOWN"")` instead to make it more idiomatic and thus easier for others to review and reason about :)",https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426645021,426645021,src/core_read.cpp
kcalvinalvin,2020-05-18 16:05:19,Addressed in the new commit,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426736433,426736433,src/core_read.cpp
kcalvinalvin,2020-05-18 16:05:29,Changed in the new commit,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426736558,426736558,src/core_read.cpp
hebasto,2020-05-18 16:18:05,Why this change is needed?,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426744697,426744697,src/core_write.cpp
hebasto,2020-05-18 16:20:39,This function has `return nullptr;` statement. It seems wrong :),https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426746287,426746287,src/script/standard.cpp
kcalvinalvin,2020-05-18 16:29:35,Yeah should be changed. Though I'm not sure it should be an assert or if it should return an Optional as stated [here](https://github.com/bitcoin/bitcoin/issues/19000#issuecomment-630228064),https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426751824,426751824,src/script/standard.cpp
kcalvinalvin,2020-05-18 16:30:46,I don't think it's needed. I'll revert the change.,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426752634,426752634,src/core_write.cpp
MarcoFalke,2020-05-18 16:34:02,"An assert seems appropriate, as this is unreachable code",https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426754479,426754479,src/script/standard.cpp
hebasto,2020-05-18 16:34:40,[Developer Notes - C++ data structures](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures) could be useful :),https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426754841,426754841,src/script/standard.cpp
kcalvinalvin,2020-05-18 16:49:05,Changed to assert,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426763229,426763229,src/script/standard.cpp
tryphe,2020-05-18 17:42:30,`#include <string>`,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426792498,426792498,src/script/standard.h
tryphe,2020-05-18 17:43:53,`#include <string>` :),https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426793217,426793217,src/script/standard.cpp
tryphe,2020-05-18 17:44:47,`#include <string>`,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426793711,426793711,src/script/script.cpp
tryphe,2020-05-18 17:45:27,`#include <string>` (it's not included but should have been before anyhow),https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426794107,426794107,src/core_read.cpp
tryphe,2020-05-18 17:45:56,`#include <string>`,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426794371,426794371,src/bitcoin-cli.cpp
kcalvinalvin,2020-05-18 18:01:23,"I've purposely only put ```#include <string>``` where the compiler yells at me since there are other ```.h``` and ```.cpp``` files that use ```std::string``` but omit ```#include <string>``` since there were some other file that had it.\n\nNot quite sure which I should follow...",https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426802838,426802838,src/script/standard.h
sipa,2020-05-18 18:03:20,"You should include whatever you use in that module. There are certainly existing violations in the codebase, but that's not guidance.",https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426803878,426803878,src/script/standard.h
kcalvinalvin,2020-05-18 18:32:42,Thanks for the input. Added #include <string>,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426818842,426818842,src/script/standard.h
kcalvinalvin,2020-05-18 18:32:48,addressed,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426818911,426818911,src/script/standard.cpp
kcalvinalvin,2020-05-18 18:32:53,addressed,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426818947,426818947,src/script/script.cpp
kcalvinalvin,2020-05-18 18:33:02,addressed,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426819010,426819010,src/core_read.cpp
kcalvinalvin,2020-05-18 18:33:06,addressed,https://github.com/bitcoin/bitcoin/pull/19004#discussion_r426819047,426819047,src/bitcoin-cli.cpp
