[
  {
    "sha": "fadd4029dced574778ade228931a7706f92bc676",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWRkNDAyOWRjZWQ1NzQ3NzhhZGUyMjg5MzFhNzcwNmY5MmJjNjc2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-16T10:28:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-19T08:45:39Z"
      },
      "message": "psbt: Assert that tx has a value in UpdatePSBTOutput\n\nThis was previously done implicitly in boost::optional by BOOST_ASSERT.\nAlso, it was checked at runtime by valgrind if for some reason the\nassert was disabled.\n\nstd::optional dereference won't assert, so add the Assert here\nexplicitly.\n\nThe explicit Assert also helps to document the code better.",
      "tree": {
        "sha": "0779b54f6c47226ccd1524ff3855c63350ae6ed9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0779b54f6c47226ccd1524ff3855c63350ae6ed9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fadd4029dced574778ade228931a7706f92bc676",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhw1gwAmHThJ2PacmRm4GAEoNyhRtCzXEOvMny7c7HlFNAVSMqD/WrmloSfgwMZ\nnXyyNth/3Vq/24hf/VCQUZbhw1++CxsKtB2S97ELu0ASshTykdY3ye7cQCEQg1P/\nN4gNBaha92hWn+buKDTHm30ZCq1bkTjUnU8fc0H+njfN/o0hj/pPyjhDvAq2V18T\np6CdTcy8Wdn/txFbzBo7NxbqhJjPIqtjw+laJZLwr5BpLH4j2nmhm+6KtiqgOFGe\nfDCwh50EaHINsFL+uDMilpEV3i8oQOPzpLzfsyqAC2Yk6ifRkCK3hDsIiMzI6Hgj\nqnB1URComnBUfhNmvF+jVGqAkjQT02ySFL810Fh9W2gEix7Ue517X3T0iGgMoujT\nkuJ+75qUcYOczPVnvjDsW7aUqZmBUME41HFCHe2fqJcXX2x/3gk3xv8ZGH+bCe7r\nm2URzw23TIBXGkRULmGiVR1UUotJO+fitlZ0ThWV0aF2wdKhsNU3vinnkKvRSfd1\ns+SO3DVv\n=TZOk\n-----END PGP SIGNATURE-----",
        "payload": "tree 0779b54f6c47226ccd1524ff3855c63350ae6ed9\nparent 20f4a9421ba644a1a1443aa16feb0aa481a0974f\nauthor MarcoFalke <falke.marco@gmail.com> 1608114502 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1608367539 +0100\n\npsbt: Assert that tx has a value in UpdatePSBTOutput\n\nThis was previously done implicitly in boost::optional by BOOST_ASSERT.\nAlso, it was checked at runtime by valgrind if for some reason the\nassert was disabled.\n\nstd::optional dereference won't assert, so add the Assert here\nexplicitly.\n\nThe explicit Assert also helps to document the code better.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadd4029dced574778ade228931a7706f92bc676",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fadd4029dced574778ade228931a7706f92bc676",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadd4029dced574778ade228931a7706f92bc676/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "20f4a9421ba644a1a1443aa16feb0aa481a0974f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20f4a9421ba644a1a1443aa16feb0aa481a0974f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/20f4a9421ba644a1a1443aa16feb0aa481a0974f"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4db57d3cd0909e23727a451090b21db12470d980",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fadd4029dced574778ade228931a7706f92bc676/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fadd4029dced574778ade228931a7706f92bc676/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=fadd4029dced574778ade228931a7706f92bc676",
        "patch": "@@ -3,6 +3,8 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <psbt.h>\n+\n+#include <util/check.h>\n #include <util/strencodings.h>\n \n \n@@ -207,7 +209,8 @@ size_t CountPSBTUnsignedInputs(const PartiallySignedTransaction& psbt) {\n \n void UpdatePSBTOutput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index)\n {\n-    const CTxOut& out = psbt.tx->vout.at(index);\n+    CMutableTransaction& tx = *Assert(psbt.tx);\n+    const CTxOut& out = tx.vout.at(index);\n     PSBTOutput& psbt_out = psbt.outputs.at(index);\n \n     // Fill a SignatureData with output info\n@@ -217,7 +220,7 @@ void UpdatePSBTOutput(const SigningProvider& provider, PartiallySignedTransactio\n     // Construct a would-be spend of this output, to update sigdata with.\n     // Note that ProduceSignature is used to fill in metadata (not actual signatures),\n     // so provider does not need to provide any private keys (it can be a HidingSigningProvider).\n-    MutableTransactionSignatureCreator creator(psbt.tx.get_ptr(), /* index */ 0, out.nValue, SIGHASH_ALL);\n+    MutableTransactionSignatureCreator creator(&tx, /* index */ 0, out.nValue, SIGHASH_ALL);\n     ProduceSignature(provider, creator, out.scriptPubKey, sigdata);\n \n     // Put redeem_script, witness_script, key paths, into PSBTOutput."
      }
    ]
  },
  {
    "sha": "fa7e803f3e4df33117927aef6fef9bfaee4f410d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdlODAzZjNlNGRmMzMxMTc5MjdhZWY2ZmVmOWJmYWVlNGY0MTBk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-16T11:02:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-19T08:45:58Z"
      },
      "message": "Remove unused MakeOptional\n\nThe only use was to work around a compiler warning in an ancient\ncompiler, which we no longer support.",
      "tree": {
        "sha": "57ebb7c6c8bb816c70384457db158ecb494ef2ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57ebb7c6c8bb816c70384457db158ecb494ef2ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7e803f3e4df33117927aef6fef9bfaee4f410d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUirLwv9GYXn9+RRnfIAb/DywTGcvSd1442bJPyIpYlgg6po4fqjv+Yo5UiEM1RW\nidus3O+OMyBJQkTPx8evEfGxTuX9xPj27of5OaNwqB0gyMoPJEXbLr6QJEPSgpKA\nJPkyTHd/6rvpryezKo/d52VxhCL1It+c5jcJvH0x2UECs3aWa9KkF+j+3xOuRBTJ\nJO44AtNDRsHPhGuJE0FhvtyfpbU3BhrJsRAPef4GxycOwxanAn24F0rCTU/jWyF1\nTbKwGBClNf99ugvyGU/TFmCnV3mum85SvOA7NJSJJB9hZpLeh44aaqGgysL1DLM+\nhsCdjs9hDIZSHsVyd+vwpKzwZuVKNUfYIorG5ULOpPVSS/nHX2S3cHr5p1tS1oXL\nvgsYdG2wP4ZS1M4Teq9Ah+JnlEEK5v090V2TqrCFu8QDruLPjYnwHCsWjnbOt15+\nye3FZJCqjPQxz8hKA1o0GOItnYHt2NVgYy2Y8knwqYU3DTr1Eq206pzOsTCAS2t4\nFhivTIEj\n=A9dG\n-----END PGP SIGNATURE-----",
        "payload": "tree 57ebb7c6c8bb816c70384457db158ecb494ef2ce\nparent fadd4029dced574778ade228931a7706f92bc676\nauthor MarcoFalke <falke.marco@gmail.com> 1608116547 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1608367558 +0100\n\nRemove unused MakeOptional\n\nThe only use was to work around a compiler warning in an ancient\ncompiler, which we no longer support.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7e803f3e4df33117927aef6fef9bfaee4f410d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7e803f3e4df33117927aef6fef9bfaee4f410d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7e803f3e4df33117927aef6fef9bfaee4f410d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fadd4029dced574778ade228931a7706f92bc676",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fadd4029dced574778ade228931a7706f92bc676",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fadd4029dced574778ade228931a7706f92bc676"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 3,
      "deletions": 12
    },
    "files": [
      {
        "sha": "252d56fd5876888308e4ec5f8ad6273ce43a97dd",
        "filename": "src/optional.h",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7e803f3e4df33117927aef6fef9bfaee4f410d/src/optional.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7e803f3e4df33117927aef6fef9bfaee4f410d/src/optional.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/optional.h?ref=fa7e803f3e4df33117927aef6fef9bfaee4f410d",
        "patch": "@@ -13,13 +13,6 @@\n template <typename T>\n using Optional = boost::optional<T>;\n \n-//! Substitute for C++17 std::make_optional\n-template <typename T>\n-Optional<T> MakeOptional(bool condition, T&& value)\n-{\n-    return boost::make_optional(condition, std::forward<T>(value));\n-}\n-\n //! Substitute for C++17 std::nullopt\n static auto& nullopt = boost::none;\n "
      },
      {
        "sha": "614ebd22f6f07eefca3963883183b537ef1e0155",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7e803f3e4df33117927aef6fef9bfaee4f410d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7e803f3e4df33117927aef6fef9bfaee4f410d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fa7e803f3e4df33117927aef6fef9bfaee4f410d",
        "patch": "@@ -1573,8 +1573,7 @@ static RPCHelpMan listsinceblock()\n \n     LOCK(wallet.cs_wallet);\n \n-    // The way the 'height' is initialized is just a workaround for the gcc bug #47679 since version 4.6.0.\n-    Optional<int> height = MakeOptional(false, int()); // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n+    Optional<int> height;    // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n     Optional<int> altheight; // Height of the specified block, even if it's in a deactivated chain.\n     int target_confirms = 1;\n     isminefilter filter = ISMINE_SPENDABLE;\n@@ -3597,7 +3596,7 @@ static RPCHelpMan rescanblockchain()\n     }\n \n     int start_height = 0;\n-    Optional<int> stop_height = MakeOptional(false, int());\n+    Optional<int> stop_height;\n     uint256 start_block;\n     {\n         LOCK(pwallet->cs_wallet);"
      },
      {
        "sha": "e8a67ede2b5f42edb9815448a73cb0910b41408f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7e803f3e4df33117927aef6fef9bfaee4f410d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7e803f3e4df33117927aef6fef9bfaee4f410d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fa7e803f3e4df33117927aef6fef9bfaee4f410d",
        "patch": "@@ -4055,8 +4055,7 @@ std::shared_ptr<CWallet> CWallet::Create(interfaces::Chain& chain, const std::st\n \n         // No need to read and scan block if block was created before\n         // our wallet birthday (as adjusted for block time variability)\n-        // The way the 'time_first_key' is initialized is just a workaround for the gcc bug #47679 since version 4.6.0.\n-        Optional<int64_t> time_first_key = MakeOptional(false, int64_t());;\n+        Optional<int64_t> time_first_key;\n         for (auto spk_man : walletInstance->GetAllScriptPubKeyMans()) {\n             int64_t time = spk_man->GetTimeFirstKey();\n             if (!time_first_key || time < *time_first_key) time_first_key = time;"
      }
    ]
  },
  {
    "sha": "fa4435e22f78f632a455016ce00a357009aac059",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ0MzVlMjJmNzhmNjMyYTQ1NTAxNmNlMDBhMzU3MDA5YWFjMDU5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-05T21:02:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-19T08:46:55Z"
      },
      "message": "Replace boost::optional with std::optional",
      "tree": {
        "sha": "2880dcbc02b4c6612c08759c1c4f7304a7328b53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2880dcbc02b4c6612c08759c1c4f7304a7328b53"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4435e22f78f632a455016ce00a357009aac059",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj3Fgv8Cot5ELmii95wU/sQUmd9fBetIjXVfKw3VgNtJbGfINuIO4/gZAgUywU+\n9utVWX3ghPuM3ZJz4vcldahiCOY4oIg8iMDfurQak8xzWfpdN9vq/FLeXhvlTF6f\nCcfZBWIHqq5NKjP7BeC0fe5ozlXLBnH1ovxver8GLOH2UKp9XBro9VHrZU9iRyip\nG8ubIDQKLJ1kjuFDvusi/qBFyKCR5+apT6r2xfssr7Qsp66SIs9JLdlf24k1CnEL\nOvTpNe38mVWWAVAJJFvcSrrmcdGWZEMXKUAayNypkU/S9d2kTNMvK4aRGenRpUcF\n47yFPNI9EuOPFCFPVA+C6UOGRFT1zOIWsX1FzWrL90KXvAhQ2MrjhXV1ptxtelYQ\nBDrKa07kgKQ0MnGPlOmnmn8keqd3BnOq8MVNdKUlj3QX0cv37FDIc+Ah8O9Fbb2Z\nH38C7bLey3wGmiIcrLT/MeT1ijzSQSrl+Esd1Zzcn04KxC6NRemgiRi/EtfCqsjL\nK8qSNBD7\n=OfK8\n-----END PGP SIGNATURE-----",
        "payload": "tree 2880dcbc02b4c6612c08759c1c4f7304a7328b53\nparent fa7e803f3e4df33117927aef6fef9bfaee4f410d\nauthor MarcoFalke <falke.marco@gmail.com> 1591390964 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1608367615 +0100\n\nReplace boost::optional with std::optional\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4435e22f78f632a455016ce00a357009aac059",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4435e22f78f632a455016ce00a357009aac059",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4435e22f78f632a455016ce00a357009aac059/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa7e803f3e4df33117927aef6fef9bfaee4f410d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7e803f3e4df33117927aef6fef9bfaee4f410d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7e803f3e4df33117927aef6fef9bfaee4f410d"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "b385cec085f3218a1a3ba65d9525806934ede6c1",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4435e22f78f632a455016ce00a357009aac059/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4435e22f78f632a455016ce00a357009aac059/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=fa4435e22f78f632a455016ce00a357009aac059",
        "patch": "@@ -36,7 +36,7 @@ static void WalletBalance(benchmark::Bench& bench, const bool set_dirty, const b\n     if (add_watchonly) importaddress(wallet, ADDRESS_WATCHONLY);\n \n     for (int i = 0; i < 100; ++i) {\n-        generatetoaddress(test_setup.m_node, address_mine.get_value_or(ADDRESS_WATCHONLY));\n+        generatetoaddress(test_setup.m_node, address_mine.value_or(ADDRESS_WATCHONLY));\n         generatetoaddress(test_setup.m_node, ADDRESS_WATCHONLY);\n     }\n     SyncWithValidationInterfaceQueue();"
      },
      {
        "sha": "40c6b6cc31b3e713981d2bd68bbf95290540d623",
        "filename": "src/optional.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4435e22f78f632a455016ce00a357009aac059/src/optional.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4435e22f78f632a455016ce00a357009aac059/src/optional.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/optional.h?ref=fa4435e22f78f632a455016ce00a357009aac059",
        "patch": "@@ -5,15 +5,16 @@\n #ifndef BITCOIN_OPTIONAL_H\n #define BITCOIN_OPTIONAL_H\n \n+#include <optional>\n #include <utility>\n \n-#include <boost/optional.hpp>\n-\n //! Substitute for C++17 std::optional\n+//! DEPRECATED use std::optional in new code.\n template <typename T>\n-using Optional = boost::optional<T>;\n+using Optional = std::optional<T>;\n \n //! Substitute for C++17 std::nullopt\n-static auto& nullopt = boost::none;\n+//! DEPRECATED use std::nullopt in new code.\n+static auto& nullopt = std::nullopt;\n \n #endif // BITCOIN_OPTIONAL_H"
      },
      {
        "sha": "aea5e8e60a22a6cc25aaee71756f5b976fbd6c3f",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=fa4435e22f78f632a455016ce00a357009aac059",
        "patch": "@@ -231,7 +231,7 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n     // Write back transaction\n     mtx = CMutableTransaction(*tx_new);\n     // Mark new tx not replaceable, if requested.\n-    if (!coin_control.m_signal_bip125_rbf.get_value_or(wallet.m_signal_rbf)) {\n+    if (!coin_control.m_signal_bip125_rbf.value_or(wallet.m_signal_rbf)) {\n         for (auto& input : mtx.vin) {\n             if (input.nSequence < 0xfffffffe) input.nSequence = 0xfffffffe;\n         }"
      },
      {
        "sha": "e87e315bf476b1ced4cba8e6cc93d589f1af215e",
        "filename": "src/wallet/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/fees.cpp?ref=fa4435e22f78f632a455016ce00a357009aac059",
        "patch": "@@ -49,7 +49,7 @@ CFeeRate GetMinimumFeeRate(const CWallet& wallet, const CCoinControl& coin_contr\n         // We will use smart fee estimation\n         unsigned int target = coin_control.m_confirm_target ? *coin_control.m_confirm_target : wallet.m_confirm_target;\n         // By default estimates are economical iff we are signaling opt-in-RBF\n-        bool conservative_estimate = !coin_control.m_signal_bip125_rbf.get_value_or(wallet.m_signal_rbf);\n+        bool conservative_estimate = !coin_control.m_signal_bip125_rbf.value_or(wallet.m_signal_rbf);\n         // Allow to override the default fee estimate mode over the CoinControl instance\n         if (coin_control.m_fee_mode == FeeEstimateMode::CONSERVATIVE) conservative_estimate = true;\n         else if (coin_control.m_fee_mode == FeeEstimateMode::ECONOMICAL) conservative_estimate = false;"
      },
      {
        "sha": "ae4e8f28989f12513b4e06f7f51fc3c19f9804b8",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fa4435e22f78f632a455016ce00a357009aac059",
        "patch": "@@ -309,7 +309,7 @@ static RPCHelpMan getrawchangeaddress()\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error: This wallet has no available keys\");\n     }\n \n-    OutputType output_type = pwallet->m_default_change_type.get_value_or(pwallet->m_default_address_type);\n+    OutputType output_type = pwallet->m_default_change_type.value_or(pwallet->m_default_address_type);\n     if (!request.params[0].isNull()) {\n         if (!ParseOutputType(request.params[0].get_str(), output_type)) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown address type '%s'\", request.params[0].get_str()));"
      },
      {
        "sha": "ed5de6e852bee62e0a39a8f42d92ac7a08235638",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4435e22f78f632a455016ce00a357009aac059/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fa4435e22f78f632a455016ce00a357009aac059",
        "patch": "@@ -85,9 +85,9 @@ static void UpdateWalletSetting(interfaces::Chain& chain,\n                                 std::vector<bilingual_str>& warnings)\n {\n     if (load_on_startup == nullopt) return;\n-    if (load_on_startup.get() && !AddWalletSetting(chain, wallet_name)) {\n+    if (load_on_startup.value() && !AddWalletSetting(chain, wallet_name)) {\n         warnings.emplace_back(Untranslated(\"Wallet load on startup setting could not be updated, so wallet may not be loaded next node startup.\"));\n-    } else if (!load_on_startup.get() && !RemoveWalletSetting(chain, wallet_name)) {\n+    } else if (!load_on_startup.value() && !RemoveWalletSetting(chain, wallet_name)) {\n         warnings.emplace_back(Untranslated(\"Wallet load on startup setting could not be updated, so wallet may still be loaded next node startup.\"));\n     }\n }\n@@ -3051,7 +3051,7 @@ bool CWallet::CreateTransactionInternal(\n         // to avoid conflicting with other possible uses of nSequence,\n         // and in the spirit of \"smallest possible change from prior\n         // behavior.\"\n-        const uint32_t nSequence = coin_control.m_signal_bip125_rbf.get_value_or(m_signal_rbf) ? MAX_BIP125_RBF_SEQUENCE : (CTxIn::SEQUENCE_FINAL - 1);\n+        const uint32_t nSequence = coin_control.m_signal_bip125_rbf.value_or(m_signal_rbf) ? MAX_BIP125_RBF_SEQUENCE : (CTxIn::SEQUENCE_FINAL - 1);\n         for (const auto& coin : selected_coins) {\n             txNew.vin.push_back(CTxIn(coin.outpoint, CScript(), nSequence));\n         }"
      },
      {
        "sha": "393f734abeb2500f17f35c9baab89653ed5cdb23",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4435e22f78f632a455016ce00a357009aac059/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4435e22f78f632a455016ce00a357009aac059/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=fa4435e22f78f632a455016ce00a357009aac059",
        "patch": "@@ -60,7 +60,6 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/multi_index/ordered_index.hpp\n     boost/multi_index/sequenced_index.hpp\n     boost/multi_index_container.hpp\n-    boost/optional.hpp\n     boost/preprocessor/cat.hpp\n     boost/preprocessor/stringize.hpp\n     boost/process.hpp"
      }
    ]
  }
]