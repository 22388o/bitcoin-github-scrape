laanwj,2020-12-16 11:14:49,"Nice, concept ACK, this is a surprisingly small patch.\n",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746126172,746126172,
hebasto,2020-12-16 11:21:10,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746133718,746133718,
jonatack,2020-12-16 11:34:13,Concept ACK -- nice,https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746149990,746149990,
jnewbery,2020-12-16 11:34:42,"Concept ACK.\n\n#19806 could be rebased on this to remove the need for additional boost dependencies: https://github.com/bitcoin/bitcoin/pull/19806#discussion_r543721793.\n\n@MarcoFalke do you still consider #19426 a prerequisite for this? (https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-733637916)",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746150621,746150621,
practicalswift,2020-12-16 11:44:23,Concept ACK: nice to get rid of old cruft,https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746160465,746160465,
MarcoFalke,2020-12-16 11:53:33,"> @MarcoFalke do you still consider #19426 a prerequisite for this? (#19183 (comment))\n\nI was hoping to get that in first, so that the first commit is easier to review. Though, it is not a strict requirement.",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746171853,746171853,
MarcoFalke,2020-12-16 12:07:40,"References for the third commit:\n\nhttps://www.boost.org/doc/libs/1_75_0/libs/optional/doc/html/boost_optional/reference/header__boost_optional_optional_hpp_/detailed_semantics___optional_values.html\n\nhttps://en.cppreference.com/w/cpp/utility/optional",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746189503,746189503,
DrahtBot,2020-12-16 16:54:42,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19806 (validation: UTXO snapshot activation by jamesob)\n* #19426 (refactor: Change * to & in MutableTransactionSignature",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-746626732,746626732,
promag,2020-12-18 09:50:28,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-747992140,747992140,
jnewbery,2020-12-18 11:55:24,"> Replace get_ptr() with &value() in UpdatePSBTOutput\n> This is safe because a value is always contained in this optional\n\nWhat do you think about explicitly stating that assumption at the top of the function:\n\n```diff\n--- a/src/psbt.cpp\n+++ b/src/psbt.cpp\n@@ -207,7 +207,11 @@ size_t CountPSBTUnsignedInputs(const PartiallySignedTransaction& psbt) {\n \n void UpdatePSBTOutput(cons",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-748046093,748046093,
practicalswift,2020-12-19 09:26:34,cr ACK fa4435e22f78f632a455016ce00a357009aac059: patch looks correct!,https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-748448066,748448066,
laanwj,2020-12-21 12:10:01,code review ACK fa4435e22f78f632a455016ce00a357009aac059,https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-748941941,748941941,
apoelstra,2021-08-03 19:28:00,"Since this PR many of the functional tests fail with `--valgrind`. This feels like a compiler bug. It doesn't happen with `--enable-debug` and stops happening when I try to add trace code or extra conditonals.\n\ne.g. on 68c7acf6bb7733261865afdcc05ee687ef75489d\n```\n19:25:55 -bash@camus ~/code/bitcoin/bitcoin/master 68c7acf6bb7$ ./test/functional/interface_bitcoin_cli.py --valgrind\n2021-08-",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-892105663,892105663,
apoelstra,2021-08-03 21:05:39,I think it is https://gcc.gnu.org/bugzilla/show_bug.cgi?id=80635,https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-892165870,892165870,
MarcoFalke,2021-08-04 05:43:35,"See also https://github.com/bitcoin/bitcoin/pull/18785, an unrelated but similar issue",https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-892379969,892379969,
promag,2020-12-18 10:00:23,To avoid conflicts with other pulls or backports? If so it could mention an acceptable time to remove this alias.,https://github.com/bitcoin/bitcoin/pull/20671#discussion_r545726169,545726169,src/optional.h
MarcoFalke,2020-12-18 10:29:52,"I'd say when 0.21.1 is out or when 0.22 is about to get branched off, whichever happens first.",https://github.com/bitcoin/bitcoin/pull/20671#discussion_r545742067,545742067,src/optional.h
promag,2020-12-18 11:08:04,Sounds good to me.,https://github.com/bitcoin/bitcoin/pull/20671#discussion_r545761989,545761989,src/optional.h
hebasto,2020-12-19 12:07:27,"nit: to be explicit\n```suggestion\n    CMutableTransaction& tx = *Assert(psbt.tx.has_value());\n```\nas were [suggested](https://github.com/bitcoin/bitcoin/pull/20671#issuecomment-748046093) by @jnewbery.",https://github.com/bitcoin/bitcoin/pull/20671#discussion_r546231098,546231098,src/psbt.cpp
MarcoFalke,2020-12-19 12:12:46,"That wouldn't compile. Also, what is the benefit of it?",https://github.com/bitcoin/bitcoin/pull/20671#discussion_r546231508,546231508,src/psbt.cpp
hebasto,2020-12-19 12:21:16,"> That wouldn't compile.\n\nIndeed :man_facepalming: \n\nSorry for noise.",https://github.com/bitcoin/bitcoin/pull/20671#discussion_r546232310,546232310,src/psbt.cpp
