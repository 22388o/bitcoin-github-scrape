vasild,2020-04-23 20:13:53,cc @Empact @hebasto @theuni ,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-618640575,618640575,
DrahtBot,2020-04-23 20:37:51,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20125 (rpc, wallet: Expose database format in getwalletinfo by promag)\n* #19077 (wallet: Add sqlite as an alternative wa",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-618654939,618654939,
vasild,2020-04-24 09:02:16,"To test that this works as intended plant some warning in a Qt header (if you don't have already!). For example:\n```cpp\ninline bool f(int iii, unsigned uuu) { return iii < uuu; }\n```\nin `/qt/installed/here/include/qt5/QtCore/qglobal.h` and see that the warning is gone with `./configure --enable-suppress-external-warnings`.\n",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-618894244,618894244,
vasild,2020-04-24 09:16:15,"We currently compile our code with some warnings explicitly silenced: `-Wno-unused-local-typedef -Wno-deprecated-register -Wno-implicit-fallthrough`.\n\nCurrently Bitcoin Core is free of such warnings, but they can sneak in at anytime completely unnoticed - due to the above flags nobody will notice if a new code introduces such a warning.\n\nIf this PR gets merged, then we can consider removin",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-618900740,618900740,
jonatack,2020-04-25 16:18:48,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-619403824,619403824,
brakmic,2020-05-01 10:12:56,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-622330175,622330175,
hebasto,2020-05-03 23:56:52,"Tested on Ubuntu 20.04 LTS (gcc 9.3.0) and macOS 10.15.4 (llvm clang 10.0). Works as expected.\n\nI've looked through our docs, and didn't find any compiler warning policy. Or did I miss it?\n\nFrom the POV of a user who respects one's own safety and builds one's own node binaries from the source, I believe there is no a such thing like a ""harmless compiler warning"". At least for major OSes (t",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-623204927,623204927,
vasild,2020-05-04 06:35:41,"> Tested on Ubuntu 20.04 LTS (gcc 9.3.0) and macOS 10.15.4 (llvm clang 10.0). Works as expected.\n\nExcellent!\n \n> From the POV of a user who respects one's own safety and builds one's own node binaries from the source, I believe there is no a such thing like a ""harmless compiler warning"".\n\nI agree. This is why the new option is `off` by default. And I do not think it should ever be chan",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-623284571,623284571,
vasild,2020-06-15 17:06:15,Rebased (trivial conflict with the merged #18297).,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-644257147,644257147,
vasild,2020-08-11 12:18:44,Rebased to resolve conflicts.,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-671911571,671911571,
vasild,2020-09-01 13:02:23,Rebased to resolve conflicts.,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-684835756,684835756,
practicalswift,2020-09-13 06:49:45,"ACK 272066393dd3a70df7fc889cea95e1c7c943fc1a\n\nThanks for doing this @vasild: having this in `master` would allow us to enable additional compiler diagnostics without having to worry about warning spam from external dependencies :)",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-691622922,691622922,
vasild,2020-09-23 09:47:36,"Updated: use `-isystem` instead of `-idirafter` because if there are two incompatible boost installations in the system, for example in `/usr/include/boost` and in `/whatever/boost`, then `-I/whatever` or `-isystem /whatever` will cause the second one to be picked (correct) while `-idirafter /whatever` will cause the first one to be picked from `/usr/include` (incorrect). Thanks, @hebasto!\n\nAl",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-697257147,697257147,
vasild,2020-09-25 13:57:14,"> It would be nice to list some system setups ...\n\nYou mean here on GitHub? Here is one:\nFreeBSD 12, all defaults (boost 1.72, Qt 5.15.0, bdb 5.3.28), without this option 27519 warnings are printed. Some of them:\n\n```\n/usr/local/include/boost/system/error_code.hpp:290:18: warning: 'name' overrides a member function but is not marked 'override' [-Wsuggest-override]\n\n/usr/local/inclu",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-698944163,698944163,
vasild,2020-09-29 08:28:45,"Another example:\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/730973642#L2748\n\n```\n/home/travis/build/bitcoin/bitcoin/depends/arm-linux-gnueabihf/share/../include/boost/process/detail/posix/executor.hpp:191:16: warning: ignoring return value of ‘ssize_t write(int, const void*, size_t)’, declared with attribute warn_unused_result [-Wunused-result]\n\n         ::write(_pipe_sink, &len",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-700537378,700537378,
practicalswift,2020-09-29 18:14:52,ACK 359870798edb77474a57536e5b13512b2d388253: patch looks correct,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-700891721,700891721,
DrahtBot,2020-10-01 07:28:37,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 1769828684f16b53e5fbf65173f508b9ea1b4b9c<br>(master) | commit 75b42f93afd3071ef89fa9b179350e2585b98a9c<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`2c90411d96eeef0a...`](https://drahtbot.space/guix/bitcoin/bitcoin/1769828684f16b53e5fbf65173f508b9ea1b4b9c/bitcoin-1769828684f1-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-701946040,701946040,
DrahtBot,2020-10-02 16:53:32,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 3487e421a7fef4b28381efcf21a7e38483946cec<br>(master) | commit 075064ee51fc09455f3d2c52732f45a43fb58bcf<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`610763669e7e3cb7...`](https://drahtbot.space/gitian/bitcoin/bitcoin/3487e421a7fef4b28381efcf21a7e38483946cec/bitcoin-3487e421a7fe-aarch64-l,https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-702843177,702843177,
practicalswift,2020-10-13 14:33:44,"ACK ba8950ee0134a7958e3e9b041cd54d222feb09a1: diff looks correct!\n\nReally looking forward to having this in `master` :)",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-707780712,707780712,
laanwj,2020-10-14 17:11:16,"Thanks for adding this option, it definitely helps reduce the flood of warnings in boost and qt etc.",https://github.com/bitcoin/bitcoin/pull/18750#issuecomment-708539039,708539039,
hebasto,2020-09-16 09:31:43,Should these lines be a part of `Makefile.qt.include`?,https://github.com/bitcoin/bitcoin/pull/18750#discussion_r489299256,489299256,configure.ac
vasild,2020-09-18 11:04:16,I don't think it is possible to call functions defined in `configure.ac` from a `Makefile`.,https://github.com/bitcoin/bitcoin/pull/18750#discussion_r490871364,490871364,configure.ac
hebasto,2020-09-20 21:00:34,nit: [Use $(...) notation instead of legacy backticked \`...\`.](https://github.com/koalaman/shellcheck/wiki/SC2006),https://github.com/bitcoin/bitcoin/pull/18750#discussion_r491733935,491733935,configure.ac
vasild,2020-09-23 09:43:44,Done.,https://github.com/bitcoin/bitcoin/pull/18750#discussion_r493381362,493381362,configure.ac
luke-jr,2020-10-12 14:17:10,Should use `${SED}` here in place of `sed`,https://github.com/bitcoin/bitcoin/pull/18750#discussion_r503327017,503327017,configure.ac
luke-jr,2020-10-12 14:28:45,"This incorrectly excludes `/usr/includefoo`\n\nPerhaps use `s#-isystem /usr/include([/ ]|$)#-I/usr/include\1#g`",https://github.com/bitcoin/bitcoin/pull/18750#discussion_r503334736,503334736,configure.ac
vasild,2020-10-12 16:19:38,"Done, except that the `#` separator causes the following during `autogen.sh`:\n\n```\nconfigure.ac:11: error: m4_init: unbalanced m4_divert_push:\nconfigure.ac:1199: m4_divert_push: GROW\nconfigure.ac:11: m4_divert: BODY\nconfigure.ac:1171: SUPPRESS_WARNINGS is expanded from...\nconfigure.ac:1171: SUPPRESS_WARNINGS is expanded from...\nconfigure.ac:1171: SUPPRESS_WARNINGS is expanded from.",https://github.com/bitcoin/bitcoin/pull/18750#discussion_r503401951,503401951,configure.ac
vasild,2020-10-12 16:19:44,Done,https://github.com/bitcoin/bitcoin/pull/18750#discussion_r503402007,503402007,configure.ac
