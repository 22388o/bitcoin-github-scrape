[
  {
    "sha": "6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWJlOWY1YjExY2Q0YTVlY2I2Y2FjYTg0NDNmZTI5NTBhNDE3ODQy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-05-02T18:41:01Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-11T10:39:45Z"
      },
      "message": "Allow blockfilter in conjunction with prune",
      "tree": {
        "sha": "54c2d223a6ae3c780369289d67e7ebbf49a2a40c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54c2d223a6ae3c780369289d67e7ebbf49a2a40c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6abe9f5b11cd4a5ecb6caca8443fe2950a417842/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a59e7ed0bc34cd9fc0d03f0e2f29239104a98f8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a59e7ed0bc34cd9fc0d03f0e2f29239104a98f8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a59e7ed0bc34cd9fc0d03f0e2f29239104a98f8f"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 41,
      "deletions": 3
    },
    "files": [
      {
        "sha": "38958a82e91b78432bb69debcf48f3dd2cc2e0d7",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6abe9f5b11cd4a5ecb6caca8443fe2950a417842/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6abe9f5b11cd4a5ecb6caca8443fe2950a417842/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
        "patch": "@@ -65,6 +65,43 @@ bool BaseIndex::Init()\n         m_best_block_index = g_chainman.m_blockman.FindForkInGlobalIndex(::ChainActive(), locator);\n     }\n     m_synced = m_best_block_index.load() == ::ChainActive().Tip();\n+    if (!m_synced) {\n+        bool prune_violation = false;\n+        if (!m_best_block_index) {\n+            // index is not built yet\n+            // make sure we have all block data back to the genesis\n+            const CBlockIndex* block = ::ChainActive().Tip();\n+            while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n+                block = block->pprev;\n+            }\n+            prune_violation = block != ::ChainActive().Genesis();\n+        }\n+        // in case the index has a best block set and is not fully synced\n+        // check if we have the required blocks to continue building the index\n+        else {\n+            const CBlockIndex* block_to_test = m_best_block_index.load();\n+            if (!ChainActive().Contains(block_to_test)) {\n+                // if the bestblock is not part of the mainchain, find the fork\n+                // and make sure we have all data down to the fork\n+                block_to_test = ::ChainActive().FindFork(block_to_test);\n+            }\n+            const CBlockIndex* block = ::ChainActive().Tip();\n+            prune_violation = true;\n+            // check backwards from the tip if we have all block data until we reach the indexes bestblock\n+            while (block_to_test && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n+                if (block_to_test == block) {\n+                    prune_violation = false;\n+                    break;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        if (prune_violation) {\n+            // throw error and graceful shutdown if we can't build the index\n+            FatalError(\"%s: %s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\", __func__, GetName());\n+            return false;\n+        }\n+    }\n     return true;\n }\n \n@@ -177,6 +214,10 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     assert(current_tip->GetAncestor(new_tip->nHeight) == new_tip);\n \n     // In the case of a reorg, ensure persisted block locator is not stale.\n+    // Pruning has a minimum of 288 blocks-to-keep and getting the index\n+    // out of sync may be possible but a users fault.\n+    // In case we reorg beyond the pruned depth, ReadBlockFromDisk would\n+    // throw and lead to a graceful shutdown\n     m_best_block_index = new_tip;\n     if (!Commit()) {\n         // If commit fails, revert the best block index to avoid corruption."
      },
      {
        "sha": "52e9bd6d66ada62599b1dc00bc32e6ea5dfc74c3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6abe9f5b11cd4a5ecb6caca8443fe2950a417842/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6abe9f5b11cd4a5ecb6caca8443fe2950a417842/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
        "patch": "@@ -1023,9 +1023,6 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     if (args.GetArg(\"-prune\", 0)) {\n         if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n-        if (!g_enabled_filter_types.empty()) {\n-            return InitError(_(\"Prune mode is incompatible with -blockfilterindex.\"));\n-        }\n     }\n \n     // -bind and -whitebind can't be set when not listening"
      }
    ]
  },
  {
    "sha": "00d57ff76854938ead800767fb673a8af46eac8e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMGQ1N2ZmNzY4NTQ5MzhlYWQ4MDA3NjdmYjY3M2E4YWY0NmVhYzhl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-12-10T12:36:47Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-11T10:39:45Z"
      },
      "message": "Avoid accessing nullpointer in BaseIndex::GetSummary()",
      "tree": {
        "sha": "433c852ae405cdf0d2c046d2d7044a418c1f605d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/433c852ae405cdf0d2c046d2d7044a418c1f605d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00d57ff76854938ead800767fb673a8af46eac8e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00d57ff76854938ead800767fb673a8af46eac8e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00d57ff76854938ead800767fb673a8af46eac8e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00d57ff76854938ead800767fb673a8af46eac8e/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6abe9f5b11cd4a5ecb6caca8443fe2950a417842",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6abe9f5b11cd4a5ecb6caca8443fe2950a417842"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "25644c3b41ecf15ff72f397864c0549bfa74a75a",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00d57ff76854938ead800767fb673a8af46eac8e/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00d57ff76854938ead800767fb673a8af46eac8e/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=00d57ff76854938ead800767fb673a8af46eac8e",
        "patch": "@@ -366,6 +366,6 @@ IndexSummary BaseIndex::GetSummary() const\n     IndexSummary summary{};\n     summary.name = GetName();\n     summary.synced = m_synced;\n-    summary.best_block_height = m_best_block_index.load()->nHeight;\n+    summary.best_block_height = m_best_block_index ? m_best_block_index.load()->nHeight : 0;\n     return summary;\n }"
      }
    ]
  },
  {
    "sha": "5e112269c311a559bfded814d3c3c438349a1986",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTExMjI2OWMzMTFhNTU5YmZkZWQ4MTRkM2MzYzQzODM0OWExOTg2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-12-10T12:21:54Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-16T09:26:15Z"
      },
      "message": "Avoid pruning below the blockfilterindex sync height",
      "tree": {
        "sha": "2f8e1a8a8f3c7849d3733f4029a203afe43473bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f8e1a8a8f3c7849d3733f4029a203afe43473bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e112269c311a559bfded814d3c3c438349a1986",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e112269c311a559bfded814d3c3c438349a1986",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e112269c311a559bfded814d3c3c438349a1986",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e112269c311a559bfded814d3c3c438349a1986/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00d57ff76854938ead800767fb673a8af46eac8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00d57ff76854938ead800767fb673a8af46eac8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00d57ff76854938ead800767fb673a8af46eac8e"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6f76d8f5fd97e426dd6f78b01cb4f97c24ce055f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e112269c311a559bfded814d3c3c438349a1986/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e112269c311a559bfded814d3c3c438349a1986/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5e112269c311a559bfded814d3c3c438349a1986",
        "patch": "@@ -17,6 +17,7 @@\n #include <cuckoocache.h>\n #include <flatfile.h>\n #include <hash.h>\n+#include <index/blockfilterindex.h>\n #include <index/txindex.h>\n #include <logging.h>\n #include <logging/timer.h>\n@@ -2249,17 +2250,25 @@ bool CChainState::FlushStateToDisk(\n     {\n         bool fFlushForPrune = false;\n         bool fDoFullFlush = false;\n+\n         CoinsCacheSizeState cache_state = GetCoinsCacheSizeState(&m_mempool);\n         LOCK(cs_LastBlockFile);\n         if (fPruneMode && (fCheckForPruning || nManualPruneHeight > 0) && !fReindex) {\n+            // make sure we don't prune above the blockfilterindexes bestblocks\n+            // pruning is height-based\n+            int last_prune = m_chain.Height(); // last height we can prune\n+            ForEachBlockFilterIndex([&](BlockFilterIndex& index) {\n+               last_prune = std::max(1, std::min(last_prune, index.GetSummary().best_block_height));\n+            });\n+\n             if (nManualPruneHeight > 0) {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune (manual)\", BCLog::BENCH);\n \n-                m_blockman.FindFilesToPruneManual(setFilesToPrune, nManualPruneHeight, m_chain.Height());\n+                m_blockman.FindFilesToPruneManual(setFilesToPrune, std::min(last_prune, nManualPruneHeight), m_chain.Height());\n             } else {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune\", BCLog::BENCH);\n \n-                m_blockman.FindFilesToPrune(setFilesToPrune, chainparams.PruneAfterHeight(), m_chain.Height(), IsInitialBlockDownload());\n+                m_blockman.FindFilesToPrune(setFilesToPrune, chainparams.PruneAfterHeight(), m_chain.Height(), last_prune, IsInitialBlockDownload());\n                 fCheckForPruning = false;\n             }\n             if (!setFilesToPrune.empty()) {\n@@ -3934,7 +3943,7 @@ void PruneBlockFilesManual(int nManualPruneHeight)\n     }\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n     if (chain_tip_height < 0 || nPruneTarget == 0) {\n@@ -3944,7 +3953,7 @@ void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPr\n         return;\n     }\n \n-    unsigned int nLastBlockWeCanPrune = chain_tip_height - MIN_BLOCKS_TO_KEEP;\n+    unsigned int nLastBlockWeCanPrune = std::min(prune_height, chain_tip_height - static_cast<int>(MIN_BLOCKS_TO_KEEP));\n     uint64_t nCurrentUsage = CalculateCurrentUsage();\n     // We don't check to prune until after we've allocated new space for files\n     // So we should leave a buffer under our target to account for another allocation"
      },
      {
        "sha": "30d8c9c17a4b3eac5d51cbe3824fe89609aa5337",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e112269c311a559bfded814d3c3c438349a1986/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e112269c311a559bfded814d3c3c438349a1986/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=5e112269c311a559bfded814d3c3c438349a1986",
        "patch": "@@ -361,7 +361,7 @@ class BlockManager\n      *\n      * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n      */\n-    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, bool is_ibd);\n+    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd);\n \n public:\n     BlockMap m_block_index GUARDED_BY(cs_main);"
      }
    ]
  },
  {
    "sha": "c286a22f7b63a8bd336d5d7606c339053ee0054b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjg2YTIyZjdiNjNhOGJkMzM2ZDVkNzYwNmMzMzkwNTNlZTAwNTRi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-12-10T10:39:37Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-16T09:26:17Z"
      },
      "message": "Add debug startup parameter -fastprune for more effective pruning tests",
      "tree": {
        "sha": "9678e8ba40b1e8afc7033f4714e1ccaee39f4f52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9678e8ba40b1e8afc7033f4714e1ccaee39f4f52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c286a22f7b63a8bd336d5d7606c339053ee0054b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c286a22f7b63a8bd336d5d7606c339053ee0054b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c286a22f7b63a8bd336d5d7606c339053ee0054b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c286a22f7b63a8bd336d5d7606c339053ee0054b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e112269c311a559bfded814d3c3c438349a1986",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e112269c311a559bfded814d3c3c438349a1986",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e112269c311a559bfded814d3c3c438349a1986"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f439436e075f061ed03d183d7153a8bb8cbac178",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c286a22f7b63a8bd336d5d7606c339053ee0054b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c286a22f7b63a8bd336d5d7606c339053ee0054b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=c286a22f7b63a8bd336d5d7606c339053ee0054b",
        "patch": "@@ -406,7 +406,7 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nDefaultPort = 18444;\n-        nPruneAfterHeight = 1000;\n+        nPruneAfterHeight = gArgs.GetBoolArg(\"-fastprune\", false) ? 100 : 1000;\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n "
      },
      {
        "sha": "c3af44fa0cafe7bb8f040f3c0c6722869dc8e209",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c286a22f7b63a8bd336d5d7606c339053ee0054b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c286a22f7b63a8bd336d5d7606c339053ee0054b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c286a22f7b63a8bd336d5d7606c339053ee0054b",
        "patch": "@@ -386,6 +386,7 @@ void SetupServerArgs(NodeContext& node)\n #endif\n     argsman.AddArg(\"-assumevalid=<hex>\", strprintf(\"If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s, signet: %s)\", defaultChainParams->GetConsensus().defaultAssumeValid.GetHex(), testnetChainParams->GetConsensus().defaultAssumeValid.GetHex(), signetChainParams->GetConsensus().defaultAssumeValid.GetHex()), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-blocksdir=<dir>\", \"Specify directory to hold blocks subdirectory for *.dat files (default: <datadir>)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-fastprune\", \"Use smaller block files and lower minimum prune height for testing purposes\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n #if HAVE_SYSTEM\n     argsman.AddArg(\"-blocknotify=<cmd>\", \"Execute command when the best block changes (%s in cmd is replaced by block hash)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif"
      },
      {
        "sha": "13860454dc35efeea9c34ac9b0624c66eb9764d0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c286a22f7b63a8bd336d5d7606c339053ee0054b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c286a22f7b63a8bd336d5d7606c339053ee0054b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=c286a22f7b63a8bd336d5d7606c339053ee0054b",
        "patch": "@@ -3212,7 +3212,7 @@ static bool FindBlockPos(FlatFilePos &pos, unsigned int nAddSize, unsigned int n\n \n     bool finalize_undo = false;\n     if (!fKnown) {\n-        while (vinfoBlockFile[nFile].nSize + nAddSize >= MAX_BLOCKFILE_SIZE) {\n+        while (vinfoBlockFile[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64kb */ : MAX_BLOCKFILE_SIZE)) {\n             // when the undo file is keeping up with the block file, we want to flush it explicitly\n             // when it is lagging behind (more blocks arrive than are being connected), we let the\n             // undo block write case handle it\n@@ -4004,7 +4004,7 @@ void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPr\n \n static FlatFileSeq BlockFileSeq()\n {\n-    return FlatFileSeq(GetBlocksDir(), \"blk\", BLOCKFILE_CHUNK_SIZE);\n+    return FlatFileSeq(GetBlocksDir(), \"blk\", gArgs.GetBoolArg(\"-fastprune\", false) ? 0x4000 /* 16kb */ : BLOCKFILE_CHUNK_SIZE);\n }\n \n static FlatFileSeq UndoFileSeq()"
      }
    ]
  },
  {
    "sha": "ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjNhMGEyZmI5MTVkOGI4Mzg0YzMwYThiMzhiNGI1Y2MzNTIzNmZk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-12-10T10:43:46Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-16T09:30:37Z"
      },
      "message": "Add functional test for blockfilterindex in prune-mode",
      "tree": {
        "sha": "64aca5dabb3162bf9f1a89733fcbfe78ed37bc4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64aca5dabb3162bf9f1a89733fcbfe78ed37bc4e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c286a22f7b63a8bd336d5d7606c339053ee0054b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c286a22f7b63a8bd336d5d7606c339053ee0054b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c286a22f7b63a8bd336d5d7606c339053ee0054b"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 50,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a380aae09810190bac2f04e0bf099728f8a539a7",
        "filename": "test/functional/feature_blockfilterindex_prune.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd/test/functional/feature_blockfilterindex_prune.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd/test/functional/feature_blockfilterindex_prune.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_blockfilterindex_prune.py?ref=ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
        "patch": "@@ -0,0 +1,49 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test blockfilterindex in conjunction with prune.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+    assert_greater_than,\n+)\n+\n+class FeatureBlockfilterindexPruneTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-fastprune\", \"-prune=1\"], [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\"]]\n+\n+    def run_test(self):\n+        # test basic pruning compatibility & filter access of pruned blocks\n+        self.log.info(\"check if we can access a blockfilter when pruning is enabled but no blocks are actually pruned\")\n+        assert(len(self.nodes[1].getblockfilter(self.nodes[1].getbestblockhash())['filter']) > 0)\n+        self.nodes[1].generate(500)\n+        self.sync_all()\n+        self.log.info(\"prune some blocks\")\n+        pruneheight = self.nodes[1].pruneblockchain(400)\n+        assert(pruneheight != 0)\n+        self.log.info(\"check if we can access the tips blockfilter when we have pruned some blocks\")\n+        assert(len(self.nodes[1].getblockfilter(self.nodes[1].getbestblockhash())['filter']) > 0)\n+        self.log.info(\"check if we can access the blockfilter of a pruned block\")\n+        assert(len(self.nodes[1].getblockfilter(self.nodes[1].getblockhash(2))['filter']) > 0)\n+        self.log.info(\"start node without blockfilterindex\")\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=self.extra_args[0])\n+        self.log.info(\"make sure accessing the blockfilters throws an error\")\n+        assert_raises_rpc_error(-1,\"Index is not enabled for filtertype basic\", self.nodes[1].getblockfilter, self.nodes[1].getblockhash(2))\n+        self.nodes[1].generate(1000)\n+        self.log.info(\"prune below the blockfilterindexes best block while blockfilters are disabled\")\n+        pruneheight_new = self.nodes[1].pruneblockchain(1000)\n+        assert_greater_than(pruneheight_new, pruneheight)\n+        self.stop_node(1)\n+        self.log.info(\"make sure we get an init error when starting the node again with block filters\")\n+        self.nodes[1].assert_start_raises_init_error(extra_args=self.extra_args[1])\n+        self.nodes[1].assert_debug_log([\"basic block filter index best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"])\n+        self.log.info(\"make sure the node starts again with the -reindex arg\")\n+        reindex_args = self.extra_args[1]\n+        reindex_args.append(\"-reindex\")\n+        self.start_node(1, extra_args=reindex_args)\n+\n+if __name__ == '__main__':\n+    FeatureBlockfilterindexPruneTest().main()"
      },
      {
        "sha": "d744ac218ce4f3b33f069904bb841b262a359b57",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
        "patch": "@@ -288,6 +288,7 @@\n     'feature_help.py',\n     'feature_shutdown.py',\n     'p2p_ibd_txrelay.py',\n+    'feature_blockfilterindex_prune.py'\n     # Don't append tests at the end to avoid merge conflicts\n     # Put them in a random line within the section that fits their approximate run-time\n ]"
      }
    ]
  },
  {
    "sha": "84716b134e9afca2fba7731de4af1f22fa1b1518",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDcxNmIxMzRlOWFmY2EyZmJhNzczMWRlNGFmMWYyMmZhMWIxNTE4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-12-10T19:11:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2021-02-16T09:30:41Z"
      },
      "message": "Add \"index/blockfilterindex -> validation -> index/blockfilterindex\" to expected circular dependencies",
      "tree": {
        "sha": "b982f0344c0f2d117bb2de42ac8f66d3fcc5132c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b982f0344c0f2d117bb2de42ac8f66d3fcc5132c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84716b134e9afca2fba7731de4af1f22fa1b1518",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84716b134e9afca2fba7731de4af1f22fa1b1518",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84716b134e9afca2fba7731de4af1f22fa1b1518",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84716b134e9afca2fba7731de4af1f22fa1b1518/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab3a0a2fb915d8b8384c30a8b38b4b5cc35236fd"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "509c9231d242403181f377946999909d77b98822",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84716b134e9afca2fba7731de4af1f22fa1b1518/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84716b134e9afca2fba7731de4af1f22fa1b1518/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=84716b134e9afca2fba7731de4af1f22fa1b1518",
        "patch": "@@ -11,6 +11,7 @@ export LC_ALL=C\n EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"chainparamsbase -> util/system -> chainparamsbase\"\n     \"index/txindex -> validation -> index/txindex\"\n+    \"index/blockfilterindex -> validation -> index/blockfilterindex\"\n     \"policy/fees -> txmempool -> policy/fees\"\n     \"qt/addresstablemodel -> qt/walletmodel -> qt/addresstablemodel\"\n     \"qt/bitcoingui -> qt/walletframe -> qt/bitcoingui\""
      }
    ]
  }
]