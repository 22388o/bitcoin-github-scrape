[
  {
    "sha": "25963221090274b55f5181dfd3a37fef1c0e0bcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTk2MzIyMTA5MDI3NGI1NWY1MTgxZGZkM2EzN2ZlZjFjMGUwYmNj",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-10T22:14:04Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-16T19:46:06Z"
      },
      "message": "net: Replace uiInterface global with CConnman::clientInterface member",
      "tree": {
        "sha": "bb6d5013391a6bb574d17ebf469b5ee3991435ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb6d5013391a6bb574d17ebf469b5ee3991435ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25963221090274b55f5181dfd3a37fef1c0e0bcc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl+J+H4ACgkQQQEIES5+\nqB9RFg//dTcB3K5iaOHmwBzm/e0GsshyXC3DzMtS4bexC96TcSAHt54WiTS/xZkK\nuGS5NrRXAbOD3dfemm6+JfA+bpT2nz+EZAg6+FWp7av6qnWCrV2umeVO2lOLdwyd\nZonRIxDqLfqxjbk8GnJx+lMtdBXAtwbfXY5gVbWqaapD0fmFYnU/A3LHHes8rAaL\n8Da9JNQBCaH/3KbFtORnFSj2W6DIUEjRSoFmLHpa3C1R16/yQEd/t5QrjmXuNbkg\nuswdS+dQZPe+9GmjsIQZdiv4deD9CVX/WJPvOPFvWK0jHlbsuj71zlkeCwYzsaf+\neMxMvVy4ICRdLOLo6peainSJIIvQi4kTOEuZ4A6j4tVlSa2dxpKlLSHeGqMRCDQ1\n7pQFYLk/ybPbr8VULIO2LsbijWSZRvX4JRmYnXxuYcBmW/uRuK3cNl715e7ipbnJ\ngMa9NdnC1LCO0jY3tYRv2dcggruggAfgGXQMavGRNokLBew2T/ozvdtipAURvPbj\nfQLZpljAj3uSOgihxHKv82uDI81RxXCKL8XoBMXQvus4XbNTXGnwhc+l30TiowNx\ngrUBrv36EL5Iw8BvicD1fbDASw6BT44J1R3TdkxMRe7oVPU4JIlQUGT5As4TI8jn\nf6VEKm3n07kM62zjWXc7XZDgbqS77VdKTM1kf8tWD/agSHaT+Yk=\n=EzdU\n-----END PGP SIGNATURE-----",
        "payload": "tree bb6d5013391a6bb574d17ebf469b5ee3991435ed\nparent 9e8d2bd076d78ba59abceb80106f44fe26246b14\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599776044 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1602877566 +0300\n\nnet: Replace uiInterface global with CConnman::clientInterface member\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25963221090274b55f5181dfd3a37fef1c0e0bcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/25963221090274b55f5181dfd3a37fef1c0e0bcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25963221090274b55f5181dfd3a37fef1c0e0bcc/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e8d2bd076d78ba59abceb80106f44fe26246b14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8d2bd076d78ba59abceb80106f44fe26246b14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e8d2bd076d78ba59abceb80106f44fe26246b14"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "1d2d465552ad8a3150cd8341a81958f79570a72e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25963221090274b55f5181dfd3a37fef1c0e0bcc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25963221090274b55f5181dfd3a37fef1c0e0bcc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=25963221090274b55f5181dfd3a37fef1c0e0bcc",
        "patch": "@@ -2353,8 +2353,9 @@ void CConnman::SetNetworkActive(bool active)\n     }\n \n     fNetworkActive = active;\n-\n-    uiInterface.NotifyNetworkActiveChanged(fNetworkActive);\n+    if (clientInterface) {\n+        clientInterface->NotifyNetworkActiveChanged(fNetworkActive);\n+    }\n }\n \n CConnman::CConnman(uint64_t nSeed0In, uint64_t nSeed1In, bool network_active)\n@@ -2471,7 +2472,9 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n         LogPrintf(\"%i block-relay-only anchors will be tried for connections.\\n\", m_anchors.size());\n     }\n \n-    uiInterface.InitMessage(_(\"Starting network threads...\").translated);\n+    if (clientInterface) {\n+        clientInterface->InitMessage(_(\"Starting network threads...\").translated);\n+    }\n \n     fAddressesInitialized = true;\n "
      }
    ]
  },
  {
    "sha": "7eccce5788b9147dabd2d007076d498624c355b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZWNjY2U1Nzg4YjkxNDdkYWJkMmQwMDcwNzZkNDk4NjI0YzM1NWI1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-10T22:45:44Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-16T19:48:55Z"
      },
      "message": "Drop unused argument in NetworkActiveChanged signal",
      "tree": {
        "sha": "f33a35d0d1e1c9db411aa9999ce5d4d55d2c3278",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f33a35d0d1e1c9db411aa9999ce5d4d55d2c3278"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7eccce5788b9147dabd2d007076d498624c355b5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl+J+ScACgkQQQEIES5+\nqB9koRAAoo1KSeIWnvuaIx/wVLdbqtnW5tM69YGmJXn268SHVDZ/Uftou8RCsUH5\n4q2JP0aG3OUrYRahMEPpavdA+N+1oIYJxthUKcH1B8YodP8HZxQ6B2mV6tXqUTex\nddOpE3RrHHqWSAAkrKk2rEUdPOQIGRrcrLDWXIXjtPstkOv5CLqfz9OuEyyV9QQ7\nU2hpQevaZBEbbZJHctXUGYoowhmX+VcQZXl5VEyHMsMYvQ0OlrYr+ycV9UhQ6LDq\nb5bJgGWbX4U76xL0pqt5O/DFlI13YnJFSha9sxbqGkQbFOeRgW3t9t26FMQ38/1s\n8SaLAcf1ToIeu39u4GiKrjQilfHkLS8K4BVU+rSjaLAl9D1tE4abJmdZgyV9nstX\nHPyNI6QNzftihXm5OVbutGCHo2/5/d3LYJoSEnwoxW2m16rzCJyWmt5PQKgxDEaC\nn30gWtVSDdsg5EHjkJflh4k5KH+WtJZ33I6gP/IAqkv8Q6pnzpIPhfb+ZIjH5Hl0\nTLtaj5jxZu3A5wk3ylVWbXqTsISI/zE9cWqWlLWF6Ywu9HcoLpxkHZANjHSrzt+I\nqGK2XSojp1bJurERlniQ0MOM0Es8MpeCIvctcuBE8Tm+k3wW+bv9jjM237Wxu0ES\ng2kYWT5mSlfSpZfT53QUpd3Iycukkze6cLVgoVNr/FUVz7iG3Fw=\n=67Pc\n-----END PGP SIGNATURE-----",
        "payload": "tree f33a35d0d1e1c9db411aa9999ce5d4d55d2c3278\nparent 25963221090274b55f5181dfd3a37fef1c0e0bcc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599777944 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1602877735 +0300\n\nDrop unused argument in NetworkActiveChanged signal\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eccce5788b9147dabd2d007076d498624c355b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7eccce5788b9147dabd2d007076d498624c355b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eccce5788b9147dabd2d007076d498624c355b5/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "25963221090274b55f5181dfd3a37fef1c0e0bcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25963221090274b55f5181dfd3a37fef1c0e0bcc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/25963221090274b55f5181dfd3a37fef1c0e0bcc"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 15,
      "deletions": 16
    },
    "files": [
      {
        "sha": "ea5505e3c0f77f2071bdb6c62b3acfe7e2d2b909",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -200,7 +200,7 @@ class Node\n     virtual std::unique_ptr<Handler> handleNotifyNumConnectionsChanged(NotifyNumConnectionsChangedFn fn) = 0;\n \n     //! Register handler for network active messages.\n-    using NotifyNetworkActiveChangedFn = std::function<void(bool network_active)>;\n+    using NotifyNetworkActiveChangedFn = std::function<void()>;\n     virtual std::unique_ptr<Handler> handleNotifyNetworkActiveChanged(NotifyNetworkActiveChangedFn fn) = 0;\n \n     //! Register handler for notify alert messages."
      },
      {
        "sha": "ba354a3e89fd50b7042bebef4f54880dc34155d5",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -2354,7 +2354,7 @@ void CConnman::SetNetworkActive(bool active)\n \n     fNetworkActive = active;\n     if (clientInterface) {\n-        clientInterface->NotifyNetworkActiveChanged(fNetworkActive);\n+        clientInterface->NotifyNetworkActiveChanged();\n     }\n }\n "
      },
      {
        "sha": "103b268ea3518dcc1a9ba8f6a97a5b580f14381b",
        "filename": "src/node/ui_interface.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/node/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/node/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/ui_interface.cpp?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -46,7 +46,7 @@ bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, cons\n bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}\n void CClientUIInterface::InitMessage(const std::string& message) { return g_ui_signals.InitMessage(message); }\n void CClientUIInterface::NotifyNumConnectionsChanged(int newNumConnections) { return g_ui_signals.NotifyNumConnectionsChanged(newNumConnections); }\n-void CClientUIInterface::NotifyNetworkActiveChanged(bool networkActive) { return g_ui_signals.NotifyNetworkActiveChanged(networkActive); }\n+void CClientUIInterface::NotifyNetworkActiveChanged() { return g_ui_signals.NotifyNetworkActiveChanged(); }\n void CClientUIInterface::NotifyAlertChanged() { return g_ui_signals.NotifyAlertChanged(); }\n void CClientUIInterface::ShowProgress(const std::string& title, int nProgress, bool resume_possible) { return g_ui_signals.ShowProgress(title, nProgress, resume_possible); }\n void CClientUIInterface::NotifyBlockTip(SynchronizationState s, const CBlockIndex* i) { return g_ui_signals.NotifyBlockTip(s, i); }"
      },
      {
        "sha": "7d7135e606697efc0d7d3018b68d638160fd1668",
        "filename": "src/node/ui_interface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/node/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/node/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/ui_interface.h?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -86,7 +86,7 @@ class CClientUIInterface\n     ADD_SIGNALS_DECL_WRAPPER(NotifyNumConnectionsChanged, void, int newNumConnections);\n \n     /** Network activity state changed. */\n-    ADD_SIGNALS_DECL_WRAPPER(NotifyNetworkActiveChanged, void, bool networkActive);\n+    ADD_SIGNALS_DECL_WRAPPER(NotifyNetworkActiveChanged, void, void);\n \n     /**\n      * Status bar alerts changed."
      },
      {
        "sha": "47c65e340a25ee6699d90eccb53cc2c947cbad20",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -930,7 +930,7 @@ void BitcoinGUI::setNumConnections(int count)\n     updateNetworkState();\n }\n \n-void BitcoinGUI::setNetworkActive(bool networkActive)\n+void BitcoinGUI::setNetworkActive()\n {\n     updateNetworkState();\n }"
      },
      {
        "sha": "fc730c17ec6bf2315a2bbc23c635492f85dbd4c1",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -220,7 +220,7 @@ public Q_SLOTS:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n     /** Set network state shown in the UI */\n-    void setNetworkActive(bool networkActive);\n+    void setNetworkActive();\n     /** Set number of blocks and last block date shown in the UI */\n     void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers, SynchronizationState sync_state);\n "
      },
      {
        "sha": "98fea741f77eb040d4765f386414f8e0b84be295",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -146,9 +146,9 @@ void ClientModel::updateNumConnections(int numConnections)\n     Q_EMIT numConnectionsChanged(numConnections);\n }\n \n-void ClientModel::updateNetworkActive(bool networkActive)\n+void ClientModel::updateNetworkActive()\n {\n-    Q_EMIT networkActiveChanged(networkActive);\n+    Q_EMIT networkActiveChanged();\n }\n \n void ClientModel::updateAlert()\n@@ -241,10 +241,9 @@ static void NotifyNumConnectionsChanged(ClientModel *clientmodel, int newNumConn\n     assert(invoked);\n }\n \n-static void NotifyNetworkActiveChanged(ClientModel *clientmodel, bool networkActive)\n+static void NotifyNetworkActiveChanged(ClientModel* clientmodel)\n {\n-    bool invoked = QMetaObject::invokeMethod(clientmodel, \"updateNetworkActive\", Qt::QueuedConnection,\n-                              Q_ARG(bool, networkActive));\n+    bool invoked = QMetaObject::invokeMethod(clientmodel, \"updateNetworkActive\", Qt::QueuedConnection);\n     assert(invoked);\n }\n \n@@ -296,7 +295,7 @@ void ClientModel::subscribeToCoreSignals()\n     // Connect signals to client\n     m_handler_show_progress = m_node.handleShowProgress(std::bind(ShowProgress, this, std::placeholders::_1, std::placeholders::_2));\n     m_handler_notify_num_connections_changed = m_node.handleNotifyNumConnectionsChanged(std::bind(NotifyNumConnectionsChanged, this, std::placeholders::_1));\n-    m_handler_notify_network_active_changed = m_node.handleNotifyNetworkActiveChanged(std::bind(NotifyNetworkActiveChanged, this, std::placeholders::_1));\n+    m_handler_notify_network_active_changed = m_node.handleNotifyNetworkActiveChanged(std::bind(NotifyNetworkActiveChanged, this));\n     m_handler_notify_alert_changed = m_node.handleNotifyAlertChanged(std::bind(NotifyAlertChanged, this));\n     m_handler_banned_list_changed = m_node.handleBannedListChanged(std::bind(BannedListChanged, this));\n     m_handler_notify_block_tip = m_node.handleNotifyBlockTip(std::bind(BlockTipChanged, this, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3, false));"
      },
      {
        "sha": "af643d1a0c13d1c0777a64b6c295411be0f3b229",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -108,7 +108,7 @@ class ClientModel : public QObject\n     void numConnectionsChanged(int count);\n     void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool header, SynchronizationState sync_state);\n     void mempoolSizeChanged(long count, size_t mempoolSizeInBytes);\n-    void networkActiveChanged(bool networkActive);\n+    void networkActiveChanged();\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n \n@@ -120,7 +120,7 @@ class ClientModel : public QObject\n \n public Q_SLOTS:\n     void updateNumConnections(int numConnections);\n-    void updateNetworkActive(bool networkActive);\n+    void updateNetworkActive();\n     void updateAlert();\n     void updateBanlist();\n };"
      },
      {
        "sha": "d5c7a36b760793dd819744e1f164d0f072b9dcb3",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -863,7 +863,7 @@ void RPCConsole::setNumConnections(int count)\n     updateNetworkState();\n }\n \n-void RPCConsole::setNetworkActive(bool networkActive)\n+void RPCConsole::setNetworkActive()\n {\n     updateNetworkState();\n }"
      },
      {
        "sha": "008ded143fc25b9a1b20b497a5febe0ddf9319c9",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eccce5788b9147dabd2d007076d498624c355b5/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=7eccce5788b9147dabd2d007076d498624c355b5",
        "patch": "@@ -106,7 +106,7 @@ public Q_SLOTS:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n     /** Set network state shown in the UI */\n-    void setNetworkActive(bool networkActive);\n+    void setNetworkActive();\n     /** Set number of blocks and last block date shown in the UI */\n     void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers);\n     /** Set size (number of transactions and memory usage) of the mempool in the UI */"
      }
    ]
  },
  {
    "sha": "f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGNiZTZiNGMyNDNhOGZmOWNkYmIwYjFjNGVlYWY0MDYyMGM2ZmVh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-10T22:59:25Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-16T19:50:12Z"
      },
      "message": "Drop unused argument in NumConnectionsChanged signal",
      "tree": {
        "sha": "f82743365e4b13b6a52fca5ce9b07b1963827524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f82743365e4b13b6a52fca5ce9b07b1963827524"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl+J+XQACgkQQQEIES5+\nqB9pIA//WvVtHYmnhOazwWTbMpowXpTjpQKg8hHnVCQsyLOurmljsy5G+0OZniZo\nBozDFrbWNj9SG4Pp9ayZoWAPiIU+bJnVsv+lpPBaI2DUyDtJntmpv4vKjjlwSeOp\nP1wwSnqIXAH8HjLMLFdHrpXLxf+ulQkMIaEbm6AFBiKLsHRX39fJyqWFA46Sl7tG\nsgmCNRlkA8frwnz6OHuZIkPPAQ5r5oC9hb8sXbdnIEyF20oq5eWk5FVf+JB9ab2+\n9n2q4D4sSNDtJ+QcQGKhhZZ6UmLtN+Pmr0OOcZSZz+z0RPrKIH0xUaV+UxkWifPc\nR5mykS3svICM65PG3XSGqQn9LZns14QN81eZiPTDKj7ZteRe1N2qKPXmvLqYqKeW\nrZhHBiPLtZG5I+CmurF+HrqJd7WVv3FYSSxxiqHGROUPMC3gVc4GWU0lsZV4CDA4\nuyxY/2VvxpLEV6ixJ6LNVbLTCIh3e4eBpy0KjnUl2wsFeK/xBj0jiyOqf+GPPCz6\ndzqL94r76/2z6wHFZ95M11wYAmclP1smZeUVau/LGQaZ97LBndqIokd80grZocyc\n6HkAk1T+3kZfSMA88KZoOvoOUBjPZHPXkWSyNuPeu43ODyNAgz9R0Y5OKSaloOSD\nr/KfL2J6xWZPjwf5/b5eA1DNSuzjuV62gXkD8+rXeo9RjF5o/TU=\n=hV+2\n-----END PGP SIGNATURE-----",
        "payload": "tree f82743365e4b13b6a52fca5ce9b07b1963827524\nparent 7eccce5788b9147dabd2d007076d498624c355b5\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599778765 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1602877812 +0300\n\nDrop unused argument in NumConnectionsChanged signal\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7eccce5788b9147dabd2d007076d498624c355b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eccce5788b9147dabd2d007076d498624c355b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7eccce5788b9147dabd2d007076d498624c355b5"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 20,
      "deletions": 24
    },
    "files": [
      {
        "sha": "1cff3064a4ef5fc74af24a0a3cdbf5c3f3f11655",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -196,7 +196,7 @@ class Node\n     virtual std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) = 0;\n \n     //! Register handler for number of connections changed messages.\n-    using NotifyNumConnectionsChangedFn = std::function<void(int new_num_connections)>;\n+    using NotifyNumConnectionsChangedFn = std::function<void()>;\n     virtual std::unique_ptr<Handler> handleNotifyNumConnectionsChanged(NotifyNumConnectionsChangedFn fn) = 0;\n \n     //! Register handler for network active messages."
      },
      {
        "sha": "e0c012e5a7ac4b0d04e0b644de63155655ca2590",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -1213,15 +1213,12 @@ void CConnman::DisconnectNodes()\n \n void CConnman::NotifyNumConnectionsChanged()\n {\n-    size_t vNodesSize;\n-    {\n-        LOCK(cs_vNodes);\n-        vNodesSize = vNodes.size();\n-    }\n-    if(vNodesSize != nPrevNodeCount) {\n+    const size_t vNodesSize = WITH_LOCK(cs_vNodes, return vNodes.size());\n+    if (vNodesSize != nPrevNodeCount) {\n         nPrevNodeCount = vNodesSize;\n-        if(clientInterface)\n-            clientInterface->NotifyNumConnectionsChanged(vNodesSize);\n+        if (clientInterface) {\n+            clientInterface->NotifyNumConnectionsChanged();\n+        }\n     }\n }\n "
      },
      {
        "sha": "70640b9e3f4758d523f1725a654aa8edbdafdd12",
        "filename": "src/node/ui_interface.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/node/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/node/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/ui_interface.cpp?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -45,7 +45,7 @@ ADD_SIGNALS_IMPL_WRAPPER(BannedListChanged);\n bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\n bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}\n void CClientUIInterface::InitMessage(const std::string& message) { return g_ui_signals.InitMessage(message); }\n-void CClientUIInterface::NotifyNumConnectionsChanged(int newNumConnections) { return g_ui_signals.NotifyNumConnectionsChanged(newNumConnections); }\n+void CClientUIInterface::NotifyNumConnectionsChanged() { return g_ui_signals.NotifyNumConnectionsChanged(); }\n void CClientUIInterface::NotifyNetworkActiveChanged() { return g_ui_signals.NotifyNetworkActiveChanged(); }\n void CClientUIInterface::NotifyAlertChanged() { return g_ui_signals.NotifyAlertChanged(); }\n void CClientUIInterface::ShowProgress(const std::string& title, int nProgress, bool resume_possible) { return g_ui_signals.ShowProgress(title, nProgress, resume_possible); }"
      },
      {
        "sha": "04ebed5f4a411fe7eebbb817f6454e386daf8fd5",
        "filename": "src/node/ui_interface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/node/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/node/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/ui_interface.h?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -83,7 +83,7 @@ class CClientUIInterface\n     ADD_SIGNALS_DECL_WRAPPER(InitMessage, void, const std::string& message);\n \n     /** Number of network connections changed. */\n-    ADD_SIGNALS_DECL_WRAPPER(NotifyNumConnectionsChanged, void, int newNumConnections);\n+    ADD_SIGNALS_DECL_WRAPPER(NotifyNumConnectionsChanged, void, void);\n \n     /** Network activity state changed. */\n     ADD_SIGNALS_DECL_WRAPPER(NotifyNetworkActiveChanged, void, void);"
      },
      {
        "sha": "2e9d7887cef2f5d4fbac48ec28a92340fc94775b",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -925,7 +925,7 @@ void BitcoinGUI::updateNetworkState()\n     connectionsControl->setPixmap(platformStyle->SingleColorIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n }\n \n-void BitcoinGUI::setNumConnections(int count)\n+void BitcoinGUI::setNumConnections()\n {\n     updateNetworkState();\n }"
      },
      {
        "sha": "47dd32a5a80ecc19d19c3751e664f0cc449cbceb",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -218,7 +218,7 @@ class BitcoinGUI : public QMainWindow\n \n public Q_SLOTS:\n     /** Set number of connections shown in the UI */\n-    void setNumConnections(int count);\n+    void setNumConnections();\n     /** Set network state shown in the UI */\n     void setNetworkActive();\n     /** Set number of blocks and last block date shown in the UI */"
      },
      {
        "sha": "e307a1b21ecb4a2deec40ed7f3a905fccb3823df",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -141,9 +141,9 @@ uint256 ClientModel::getBestBlockHash()\n     return m_cached_tip_blocks;\n }\n \n-void ClientModel::updateNumConnections(int numConnections)\n+void ClientModel::updateNumConnections()\n {\n-    Q_EMIT numConnectionsChanged(numConnections);\n+    Q_EMIT numConnectionsChanged();\n }\n \n void ClientModel::updateNetworkActive()\n@@ -233,11 +233,10 @@ static void ShowProgress(ClientModel *clientmodel, const std::string &title, int\n     assert(invoked);\n }\n \n-static void NotifyNumConnectionsChanged(ClientModel *clientmodel, int newNumConnections)\n+static void NotifyNumConnectionsChanged(ClientModel* clientmodel)\n {\n     // Too noisy: qDebug() << \"NotifyNumConnectionsChanged: \" + QString::number(newNumConnections);\n-    bool invoked = QMetaObject::invokeMethod(clientmodel, \"updateNumConnections\", Qt::QueuedConnection,\n-                              Q_ARG(int, newNumConnections));\n+    bool invoked = QMetaObject::invokeMethod(clientmodel, \"updateNumConnections\", Qt::QueuedConnection);\n     assert(invoked);\n }\n \n@@ -294,7 +293,7 @@ void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     m_handler_show_progress = m_node.handleShowProgress(std::bind(ShowProgress, this, std::placeholders::_1, std::placeholders::_2));\n-    m_handler_notify_num_connections_changed = m_node.handleNotifyNumConnectionsChanged(std::bind(NotifyNumConnectionsChanged, this, std::placeholders::_1));\n+    m_handler_notify_num_connections_changed = m_node.handleNotifyNumConnectionsChanged(std::bind(NotifyNumConnectionsChanged, this));\n     m_handler_notify_network_active_changed = m_node.handleNotifyNetworkActiveChanged(std::bind(NotifyNetworkActiveChanged, this));\n     m_handler_notify_alert_changed = m_node.handleNotifyAlertChanged(std::bind(NotifyAlertChanged, this));\n     m_handler_banned_list_changed = m_node.handleBannedListChanged(std::bind(BannedListChanged, this));"
      },
      {
        "sha": "33591723d320b247f24661bcd93ecb5995017f96",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -105,7 +105,7 @@ class ClientModel : public QObject\n     void unsubscribeFromCoreSignals();\n \n Q_SIGNALS:\n-    void numConnectionsChanged(int count);\n+    void numConnectionsChanged();\n     void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool header, SynchronizationState sync_state);\n     void mempoolSizeChanged(long count, size_t mempoolSizeInBytes);\n     void networkActiveChanged();\n@@ -119,7 +119,7 @@ class ClientModel : public QObject\n     void showProgress(const QString &title, int nProgress);\n \n public Q_SLOTS:\n-    void updateNumConnections(int numConnections);\n+    void updateNumConnections();\n     void updateNetworkActive();\n     void updateAlert();\n     void updateBanlist();"
      },
      {
        "sha": "28c2a3c0ed605055b3ccc8610f8adfbb3f04941a",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -574,7 +574,7 @@ void RPCConsole::setClientModel(ClientModel *model, int bestblock_height, int64_\n     ui->trafficGraph->setClientModel(model);\n     if (model && clientModel->getPeerTableModel() && clientModel->getBanTableModel()) {\n         // Keep up to date with client\n-        setNumConnections(model->getNumConnections());\n+        setNumConnections();\n         connect(model, &ClientModel::numConnectionsChanged, this, &RPCConsole::setNumConnections);\n \n         setNumBlocks(bestblock_height, QDateTime::fromTime_t(bestblock_date), verification_progress, false);\n@@ -855,7 +855,7 @@ void RPCConsole::updateNetworkState()\n     ui->numberOfConnections->setText(connections);\n }\n \n-void RPCConsole::setNumConnections(int count)\n+void RPCConsole::setNumConnections()\n {\n     if (!clientModel)\n         return;"
      },
      {
        "sha": "89127cc2ef65f4dd5d8ae05c650e5b3d0513e84b",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "patch": "@@ -104,7 +104,7 @@ public Q_SLOTS:\n     void message(int category, const QString &msg) { message(category, msg, false); }\n     void message(int category, const QString &message, bool html);\n     /** Set number of connections shown in the UI */\n-    void setNumConnections(int count);\n+    void setNumConnections();\n     /** Set network state shown in the UI */\n     void setNetworkActive();\n     /** Set number of blocks and last block date shown in the UI */"
      }
    ]
  },
  {
    "sha": "72632da03f6e16f35f29acbc3b7abde5bab5f927",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjYzMmRhMDNmNmUxNmYzNWYyOWFjYmMzYjdhYmRlNWJhYjVmOTI3",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-11T07:59:47Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-19T18:10:54Z"
      },
      "message": "Split CConnman::GetNodeCount() in two functions\n\nThis change prevents repetitive traversing vNodes.",
      "tree": {
        "sha": "c08c2c9940723b3207338c47674caeb7ffb03a3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c08c2c9940723b3207338c47674caeb7ffb03a3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72632da03f6e16f35f29acbc3b7abde5bab5f927",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl+N1q4ACgkQQQEIES5+\nqB8GEg/9Fa5ij0cpP5zvDqYUiUXiuTDFvlPvWjdhFgsvX4Ww1q73Ks1SKuSCWl6N\nmhDOPPKekUZrcOJ4cjkapDMhnqOdIyBzmT2lHe+ZdE3XTOwTSQriNtfFqlqZPNrt\nUTK/XWMaAumXehcs90hMuvaHGuVmZHwlGLacK0pzR6KL96GQv4K9as263MQ2Td4Z\n0KgKZCevwn8KlMGba+qud61gCuxDLVxLE+APvKEm13nuoZYxfKD9yGUWDG3NQfk7\nlFlSUlMUySHQ3ZOKhcR2+SGMlMWmKdMDN2DXLP9galNF7Jq9Sy4o06KXie7nlj5W\nGQNH903t5QylrI9O85Etxz/JOC5ADmcA90FrOATAnA9JRkYbZ9PsNNCc1VyTT2+R\nu6C49/dmNugxB7UkmFoRnXs0cVu8jrWbxDgLKQcbn/BvytBAV9q3VPWtUcyl+Wmy\nllbZWhbgIKV8LrkFmWqWZjdxeJoxSurfeCW48kM24fLnf9D0zuVMBXISZw6Zz6K/\nxMyacukqeA5FzUE+rufUdyXBdj7jN+hLymxZQbQe5j2C2bUpBnNBWI6SBq1JGST4\nsc8RBsYkKFH8akpyLu5e+fyseQX4qigj34WR43kL7PtFtMlQYpzgvChj/egRB1X9\no50HZcnzWf79RKtek4c+VuxxwhpxUoNwyrUqVDO04Z5UihRsW2E=\n=Qzs7\n-----END PGP SIGNATURE-----",
        "payload": "tree c08c2c9940723b3207338c47674caeb7ffb03a3b\nparent f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599811187 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1603131054 +0300\n\nSplit CConnman::GetNodeCount() in two functions\n\nThis change prevents repetitive traversing vNodes.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72632da03f6e16f35f29acbc3b7abde5bab5f927",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72632da03f6e16f35f29acbc3b7abde5bab5f927",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72632da03f6e16f35f29acbc3b7abde5bab5f927/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4cbe6b4c243a8ff9cdbb0b1c4eeaf40620c6fea"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 48,
      "deletions": 58
    },
    "files": [
      {
        "sha": "c1606fd9ee9d0a127e0d151064d075829a06ddba",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -87,10 +87,17 @@ class NodeImpl : public Node\n         }\n     }\n     bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n-    size_t getNodeCount(CConnman::NumConnections flags) override\n+\n+    size_t peerCount() override\n     {\n-        return m_context->connman ? m_context->connman->GetNodeCount(flags) : 0;\n+        return m_context->connman ? m_context->connman->PeerCount() : 0;\n     }\n+\n+    ConnCounts connectionCounts() override\n+    {\n+        return m_context->connman ? m_context->connman->GetConnectionCounts() : ConnCounts();\n+    }\n+\n     bool getNodesStats(NodesStats& stats) override\n     {\n         stats.clear();"
      },
      {
        "sha": "44a9b337017e8463f1493f415018eeb7ccfe2c3d",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -6,7 +6,7 @@\n #define BITCOIN_INTERFACES_NODE_H\n \n #include <amount.h>     // For CAmount\n-#include <net.h>        // For CConnman::NumConnections\n+#include <net.h>        // For ConnCounts\n #include <net_types.h>  // For banmap_t\n #include <netaddress.h> // For Network\n #include <support/allocators/secure.h> // For SecureString\n@@ -87,8 +87,11 @@ class Node\n     //! Get proxy.\n     virtual bool getProxy(Network net, proxyType& proxy_info) = 0;\n \n-    //! Get number of connections.\n-    virtual size_t getNodeCount(CConnman::NumConnections flags) = 0;\n+    //! Get number of peers.\n+    virtual size_t peerCount() = 0;\n+\n+    //! Get numbers of connections of different types.\n+    virtual ConnCounts connectionCounts() = 0;\n \n     //! Get stats for connected nodes.\n     using NodesStats = std::vector<std::tuple<CNodeStats, bool, CNodeStateStats>>;"
      },
      {
        "sha": "fa6a2b32f8044598a6728f949c5fa42c16f45b7d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 11,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -2729,20 +2729,17 @@ bool CConnman::RemoveAddedNode(const std::string& strNode)\n     return false;\n }\n \n-size_t CConnman::GetNodeCount(NumConnections flags)\n+ConnCounts CConnman::GetConnectionCounts()\n {\n-    LOCK(cs_vNodes);\n-    if (flags == CConnman::CONNECTIONS_ALL) // Shortcut if we want total\n-        return vNodes.size();\n-\n-    int nNum = 0;\n-    for (const auto& pnode : vNodes) {\n-        if (flags & (pnode->IsInboundConn() ? CONNECTIONS_IN : CONNECTIONS_OUT)) {\n-            nNum++;\n+    int num_in{0};\n+    int num_out{0};\n+    {\n+        LOCK(cs_vNodes);\n+        for (const auto& pnode : vNodes) {\n+            pnode->IsInboundConn() ? ++num_in : ++num_out;\n         }\n     }\n-\n-    return nNum;\n+    return {num_in, num_out};\n }\n \n void CConnman::GetNodeStats(std::vector<CNodeStats>& vstats)"
      },
      {
        "sha": "e747895a460c9ea000401b17766a1a836c703e1d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -183,18 +183,21 @@ enum class ConnectionType {\n     ADDR_FETCH,\n };\n \n+struct ConnCounts {\n+    const int all{0};\n+    const int in{0};\n+    const int out{0};\n+\n+    ConnCounts() {}\n+    ConnCounts(int num_in, int num_out)\n+        : all(num_in + num_out), in(num_in), out(num_out) {}\n+};\n+\n class NetEventsInterface;\n class CConnman\n {\n public:\n \n-    enum NumConnections {\n-        CONNECTIONS_NONE = 0,\n-        CONNECTIONS_IN = (1U << 0),\n-        CONNECTIONS_OUT = (1U << 1),\n-        CONNECTIONS_ALL = (CONNECTIONS_IN | CONNECTIONS_OUT),\n-    };\n-\n     struct Options\n     {\n         ServiceFlags nLocalServices = NODE_NONE;\n@@ -346,7 +349,8 @@ class CConnman\n     bool RemoveAddedNode(const std::string& node);\n     std::vector<AddedNodeInfo> GetAddedNodeInfo();\n \n-    size_t GetNodeCount(NumConnections num);\n+    size_t PeerCount() { return WITH_LOCK(cs_vNodes, return vNodes.size()); }\n+    ConnCounts GetConnectionCounts();\n     void GetNodeStats(std::vector<CNodeStats>& vstats);\n     bool DisconnectNode(const std::string& node);\n     bool DisconnectNode(const CSubNet& subnet);"
      },
      {
        "sha": "1675806708c166c780336eaee862a0e26e56839a",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -898,7 +898,7 @@ void BitcoinGUI::gotoLoadPSBT(bool from_clipboard)\n \n void BitcoinGUI::updateNetworkState()\n {\n-    int count = clientModel->getNumConnections();\n+    int count = m_node.peerCount();\n     QString icon;\n     switch(count)\n     {"
      },
      {
        "sha": "cc90f7f3a7e71e5fafdc053582c9ee7bd02e5f2b",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 15,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -68,20 +68,6 @@ ClientModel::~ClientModel()\n     m_thread->wait();\n }\n \n-int ClientModel::getNumConnections(unsigned int flags) const\n-{\n-    CConnman::NumConnections connections = CConnman::CONNECTIONS_NONE;\n-\n-    if(flags == CONNECTIONS_IN)\n-        connections = CConnman::CONNECTIONS_IN;\n-    else if (flags == CONNECTIONS_OUT)\n-        connections = CConnman::CONNECTIONS_OUT;\n-    else if (flags == CONNECTIONS_ALL)\n-        connections = CConnman::CONNECTIONS_ALL;\n-\n-    return m_node.getNodeCount(connections);\n-}\n-\n int ClientModel::getHeaderTipHeight() const\n {\n     if (cachedBestHeaderHeight == -1) {\n@@ -162,7 +148,7 @@ enum BlockSource ClientModel::getBlockSource() const\n         return BlockSource::REINDEX;\n     else if (m_node.getImporting())\n         return BlockSource::DISK;\n-    else if (getNumConnections() > 0)\n+    else if (m_node.peerCount() > 0)\n         return BlockSource::NETWORK;\n \n     return BlockSource::NONE;"
      },
      {
        "sha": "88b6746cb0f4be4f36b7ebb2a01802613027bc27",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -35,13 +35,6 @@ enum class BlockSource {\n     NETWORK\n };\n \n-enum NumConnections {\n-    CONNECTIONS_NONE = 0,\n-    CONNECTIONS_IN   = (1U << 0),\n-    CONNECTIONS_OUT  = (1U << 1),\n-    CONNECTIONS_ALL  = (CONNECTIONS_IN | CONNECTIONS_OUT),\n-};\n-\n /** Model for Bitcoin network client. */\n class ClientModel : public QObject\n {\n@@ -55,9 +48,6 @@ class ClientModel : public QObject\n     OptionsModel *getOptionsModel();\n     PeerTableModel *getPeerTableModel();\n     BanTableModel *getBanTableModel();\n-\n-    //! Return number of connections, default is in- and outbound (total)\n-    int getNumConnections(unsigned int flags = CONNECTIONS_ALL) const;\n     int getNumBlocks() const;\n     uint256 getBestBlockHash();\n     int getHeaderTipHeight() const;"
      },
      {
        "sha": "438aef14898e61efc3499c07f95dc6e5d76a5e00",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -844,9 +844,10 @@ void RPCConsole::message(int category, const QString &message, bool html)\n \n void RPCConsole::updateNetworkState()\n {\n-    QString connections = QString::number(clientModel->getNumConnections()) + \" (\";\n-    connections += tr(\"In:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_IN)) + \" / \";\n-    connections += tr(\"Out:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_OUT)) + \")\";\n+    const ConnCounts conn_counts = m_node.connectionCounts();\n+    QString connections = QString::number(conn_counts.all) + \" (\";\n+    connections += tr(\"In:\") + \" \" + QString::number(conn_counts.in) + \" / \";\n+    connections += tr(\"Out:\") + \" \" + QString::number(conn_counts.out) + \")\";\n \n     if(!clientModel->node().getNetworkActive()) {\n         connections += \" (\" + tr(\"Network activity disabled\") + \")\";"
      },
      {
        "sha": "908a87667f8b4753e179c8586ae0a8470496518c",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -663,8 +663,9 @@ static RPCHelpMan getblocktemplate()\n     if(!node.connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    if (node.connman->GetNodeCount(CConnman::CONNECTIONS_ALL) == 0)\n+    if (node.connman->PeerCount() == 0) {\n         throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, PACKAGE_NAME \" is not connected!\");\n+    }\n \n     if (::ChainstateActive().IsInitialBlockDownload())\n         throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, PACKAGE_NAME \" is in initial sync and waiting for blocks...\");"
      },
      {
        "sha": "8a8d04b205f2fb6c5b169fc71233281f7c204f85",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72632da03f6e16f35f29acbc3b7abde5bab5f927/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "patch": "@@ -56,7 +56,7 @@ static RPCHelpMan getconnectioncount()\n     if(!node.connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    return (int)node.connman->GetNodeCount(CConnman::CONNECTIONS_ALL);\n+    return (int)node.connman->PeerCount();\n },\n     };\n }\n@@ -583,9 +583,10 @@ static RPCHelpMan getnetworkinfo()\n     obj.pushKV(\"timeoffset\",    GetTimeOffset());\n     if (node.connman) {\n         obj.pushKV(\"networkactive\", node.connman->GetNetworkActive());\n-        obj.pushKV(\"connections\", (int)node.connman->GetNodeCount(CConnman::CONNECTIONS_ALL));\n-        obj.pushKV(\"connections_in\", (int)node.connman->GetNodeCount(CConnman::CONNECTIONS_IN));\n-        obj.pushKV(\"connections_out\", (int)node.connman->GetNodeCount(CConnman::CONNECTIONS_OUT));\n+        const ConnCounts conn_counts = node.connman->GetConnectionCounts();\n+        obj.pushKV(\"connections\", conn_counts.all);\n+        obj.pushKV(\"connections_in\", conn_counts.in);\n+        obj.pushKV(\"connections_out\", conn_counts.out);\n     }\n     obj.pushKV(\"networks\",      GetNetworksInfo());\n     obj.pushKV(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK()));"
      }
    ]
  },
  {
    "sha": "a855538a20f62b423ce7948c22b1320d5bde5ac7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODU1NTM4YTIwZjYyYjQyM2NlNzk0OGMyMmIxMzIwZDViZGU1YWM3",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-11T09:09:12Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-19T18:10:56Z"
      },
      "message": "rpc: Add `connections_onion_only` to `getnetworkinfo` output",
      "tree": {
        "sha": "48f004c6ce1d02ac022a2dafa1762a10f1391bf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48f004c6ce1d02ac022a2dafa1762a10f1391bf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a855538a20f62b423ce7948c22b1320d5bde5ac7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl+N1rAACgkQQQEIES5+\nqB/6ExAAlOzX3wQsGH4yVYeUQwbglRMAMA7ExLZsyb2dZGrIWIpZdBzl72I32ZHJ\nBfz3B9riwCEZyCBAaoEvKjmAmgPCFVJWHUE5jxRUZDpKQDR8k6dfQUhIdSHzukHP\nyTQuYd8CRP9CK4O6xBfuBltejN2Qij9sVzziVttvDPgoOODM2UwMC+d5wysVKS95\nBX3/TfwPsW3azDrRePAnWU0i1T3UMfT+hvUPralTRQHPAWipmb3TiRfapv/TB56y\nZU3a2TttBSFoV/RFRZag/v6RETOXbSOOMPpH4IsmpoJx1ceO4hm1lh28D1/00NUi\n7myx8/M3EbTp0dMmT4RaALePOx2s1Djw5/EM3bQJBOHpMGM6R2kZRXt7W+6KO0/S\ngQA3AI3OHmlZivgfIWexmGHcqd/GMjBhrZxiX3cugUluwV6h1wC8AfVtZK/unCxL\nJsu0syp4HLdnlzsO+z8X4tB4jrt00fD2n8D3f9v9xDZ4HmAjDJsLL32ORgtnomrH\nsFgfAwI7vBakvRd/qmk8yqCCAjIPOlAs6xFXnHkwFjsYUOljeq4TXKm0ywECcBr8\nBH72oUBjO4RDsD/KPBnroLZdfYfiAUcP6kUGsXM27CAmHQH+I6f06/bhCjpFb/ol\nU/0ahU24GbubFKVhjfQwus34IdA5OnlRRJ0dCHFXDazYJcdRbGk=\n=SphP\n-----END PGP SIGNATURE-----",
        "payload": "tree 48f004c6ce1d02ac022a2dafa1762a10f1391bf4\nparent 72632da03f6e16f35f29acbc3b7abde5bab5f927\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599815352 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1603131056 +0300\n\nrpc: Add `connections_onion_only` to `getnetworkinfo` output\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a855538a20f62b423ce7948c22b1320d5bde5ac7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a855538a20f62b423ce7948c22b1320d5bde5ac7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a855538a20f62b423ce7948c22b1320d5bde5ac7/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72632da03f6e16f35f29acbc3b7abde5bab5f927",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72632da03f6e16f35f29acbc3b7abde5bab5f927"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e4b3c126c35b8465c3c594395bd0806220190bf7",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a855538a20f62b423ce7948c22b1320d5bde5ac7/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a855538a20f62b423ce7948c22b1320d5bde5ac7/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a855538a20f62b423ce7948c22b1320d5bde5ac7",
        "patch": "@@ -2733,13 +2733,16 @@ ConnCounts CConnman::GetConnectionCounts()\n {\n     int num_in{0};\n     int num_out{0};\n+    bool onion_only{false};\n     {\n         LOCK(cs_vNodes);\n+        if (!vNodes.empty()) onion_only = true;\n         for (const auto& pnode : vNodes) {\n             pnode->IsInboundConn() ? ++num_in : ++num_out;\n+            if (pnode->ConnectedThroughNetwork() != NET_ONION) onion_only = false;\n         }\n     }\n-    return {num_in, num_out};\n+    return {num_in, num_out, onion_only};\n }\n \n void CConnman::GetNodeStats(std::vector<CNodeStats>& vstats)"
      },
      {
        "sha": "35bcdda8895fc5b6744fb7b9703e89bc9434932d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a855538a20f62b423ce7948c22b1320d5bde5ac7/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a855538a20f62b423ce7948c22b1320d5bde5ac7/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a855538a20f62b423ce7948c22b1320d5bde5ac7",
        "patch": "@@ -187,10 +187,11 @@ struct ConnCounts {\n     const int all{0};\n     const int in{0};\n     const int out{0};\n+    const bool onion_only{false};\n \n     ConnCounts() {}\n-    ConnCounts(int num_in, int num_out)\n-        : all(num_in + num_out), in(num_in), out(num_out) {}\n+    ConnCounts(int num_in, int num_out, bool is_onion_only)\n+        : all(num_in + num_out), in(num_in), out(num_out), onion_only(is_onion_only) {}\n };\n \n class NetEventsInterface;"
      },
      {
        "sha": "c525a7464e08430cc17cb80ee7bbd18766968db9",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a855538a20f62b423ce7948c22b1320d5bde5ac7/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a855538a20f62b423ce7948c22b1320d5bde5ac7/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=a855538a20f62b423ce7948c22b1320d5bde5ac7",
        "patch": "@@ -533,10 +533,11 @@ static RPCHelpMan getnetworkinfo()\n                         }},\n                         {RPCResult::Type::BOOL, \"localrelay\", \"true if transaction relay is requested from peers\"},\n                         {RPCResult::Type::NUM, \"timeoffset\", \"the time offset\"},\n+                        {RPCResult::Type::BOOL, \"networkactive\", \"whether p2p networking is enabled\"},\n                         {RPCResult::Type::NUM, \"connections\", \"the total number of connections\"},\n                         {RPCResult::Type::NUM, \"connections_in\", \"the number of inbound connections\"},\n                         {RPCResult::Type::NUM, \"connections_out\", \"the number of outbound connections\"},\n-                        {RPCResult::Type::BOOL, \"networkactive\", \"whether p2p networking is enabled\"},\n+                        {RPCResult::Type::BOOL, \"connections_onion_only\", \"whether all connections are through the onion network\"},\n                         {RPCResult::Type::ARR, \"networks\", \"information per network\",\n                         {\n                             {RPCResult::Type::OBJ, \"\", \"\",\n@@ -587,6 +588,7 @@ static RPCHelpMan getnetworkinfo()\n         obj.pushKV(\"connections\", conn_counts.all);\n         obj.pushKV(\"connections_in\", conn_counts.in);\n         obj.pushKV(\"connections_out\", conn_counts.out);\n+        obj.pushKV(\"connections_onion_only\", conn_counts.onion_only);\n     }\n     obj.pushKV(\"networks\",      GetNetworksInfo());\n     obj.pushKV(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK()));"
      }
    ]
  },
  {
    "sha": "da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYThiMTA5MmZjMmQ1ZmE1ZWU5ZGEzMzEwZGFlMTZkNGM5MTliYzFi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-18T10:23:11Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-20T10:38:17Z"
      },
      "message": "qa: Add feature_onion.py",
      "tree": {
        "sha": "bfdb0c9ce68d6c9e9c683112e9502b1f8da0c017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfdb0c9ce68d6c9e9c683112e9502b1f8da0c017"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl+OvhkACgkQQQEIES5+\nqB9xCBAAkCmR8DXKCTIBOzbT7N7IhR78xaZIcXMJ+rJSV3JZjPIBCR/hsvoq1wsl\npx2pvr3X/1JAtc5FniK/pIlbzqyrh55aVROuJOYeCHoYEGO3h6jwf0Sq2Jj3U0YR\nPi479P/Ik/uIMFegFNn3/aJC3Ne479kOi9Awj9G/UDZnt2mdRbrfbYUvKNb3NHZ3\nEYxYSYDDpFjqJvjia5g6J9+3ffeBemwHOlQg7K/nBf5LBzPT+Ci5JQc9k9z2T5dU\nM8JaaDswvr9m2s+5LL40mgrT1bfyOTIrBlOVALZYpfNHEHGH5cFmX4c+R0fzXErz\nbQ7lGO86G4m9f9UfZKCF2XaRzqUt9wgtgjClIxNceDa1fDy95KO5vXcdL+C+SVMm\nPfks3azY/wY+WnSwWw17JngyUeBQEraMOI+o08WfUbYNZZC9vDz3UKiyRMbbwCpT\nXpT09lwOg7rLpYIqClniImpfG2UoFcJdM0TsTufZCiqapC7I66JSZV8h6RJ4hBRz\nv1Wn8ktchihwOVJotN65bQP3FmtnlTgspcWqqBp+NuWkdD/QnIvvq0s8y6C7lHz5\nl+WJ2R8lXDObc67Jau3YosiUe7VUPVHMaMQDvlimqOJcvKdBdtlIWlp1S8szccp7\nOJSXUfZNtJupDfwpJ0NAuxbxFHiyA6pRzifZmVyqcvjIx5x7BLQ=\n=uQaM\n-----END PGP SIGNATURE-----",
        "payload": "tree bfdb0c9ce68d6c9e9c683112e9502b1f8da0c017\nparent a855538a20f62b423ce7948c22b1320d5bde5ac7\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1603016591 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1603190297 +0300\n\nqa: Add feature_onion.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a855538a20f62b423ce7948c22b1320d5bde5ac7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a855538a20f62b423ce7948c22b1320d5bde5ac7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a855538a20f62b423ce7948c22b1320d5bde5ac7"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 108,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fe6a167c81f937c74c6e6fd7bdbae67f3aa5f8d6",
        "filename": "test/functional/feature_onion.py",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b/test/functional/feature_onion.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b/test/functional/feature_onion.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_onion.py?ref=da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b",
        "patch": "@@ -0,0 +1,104 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test bitcoind with 'onion'-tagged peers.\n+\n+Tested inbound and outbound peers.\n+\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.socks5 import Socks5Configuration, Socks5Server\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    assert_equal,\n+)\n+\n+\n+class OnionTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def setup_network(self):\n+        port = PORT_MIN + 2 * PORT_RANGE + (os.getpid() % 1000)\n+        self.bind_onion = '127.0.0.1:{}'.format(port)\n+\n+        proxy_conf = Socks5Configuration()\n+        port += 1\n+        proxy_conf.addr = ('127.0.0.1', port)\n+        proxy_conf.unauth = True\n+        Socks5Server(proxy_conf).start()\n+\n+        args = [\n+            ['-bind={}=onion'.format(self.bind_onion), '-onion={0[0]}:{0[1]}'.format(proxy_conf.addr)],\n+            [],\n+            ]\n+        self.add_nodes(self.num_nodes, extra_args=args)\n+        self.start_nodes()\n+\n+    def reset_connections(self):\n+        with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: false\\n']):\n+            self.nodes[0].setnetworkactive(state=False)\n+        assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], False)\n+        self.wait_until(lambda: self.nodes[0].getnetworkinfo()['connections'] == 0)\n+        with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: true\\n']):\n+            self.nodes[0].setnetworkactive(state=True)\n+        assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], True)\n+\n+    def test_connections(self, in_clearnet=0, in_onion=0, out_onion=0):\n+        self.reset_connections()\n+\n+        for i in range(in_clearnet):\n+            self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n+        self.wait_until(lambda: self.nodes[0].getnetworkinfo()['connections'] == in_clearnet)\n+\n+        if in_onion > 0:\n+            if in_onion > 1:\n+                self.log.warning(\"Maximum 1 inbound 'onion'-tagged connection is supported.\")\n+                in_onion = 1\n+            self.nodes[1].addnode(self.bind_onion, 'onetry')\n+        self.wait_until(lambda: self.nodes[0].getnetworkinfo()['connections'] == in_clearnet + in_onion)\n+\n+        # Create a connection to a dummy Socks5 server just before\n+        # the getnetworkinfo RPC, as such connections are short-lived.\n+        if out_onion > 0:\n+            if out_onion > 1:\n+                self.log.warning(\"Maximum 1 outbound onion connection is supported.\")\n+                out_onion = 1\n+            self.nodes[0].addnode('bitcoinostk4e4re.onion:18444', 'onetry')\n+\n+        network_info = self.nodes[0].getnetworkinfo()\n+        assert_equal(network_info[\"connections\"], in_clearnet + in_onion + out_onion)\n+        assert_equal(network_info[\"connections_in\"], in_clearnet + in_onion)\n+        assert_equal(network_info[\"connections_out\"], out_onion)\n+        assert_equal(network_info[\"connections_onion_only\"], in_clearnet == 0 and (in_onion + out_onion) > 0)\n+\n+    def run_test(self):\n+        self.log.info(\"Checking a node without any peers...\")\n+        self.test_connections(in_clearnet=0, in_onion=0, out_onion=0)\n+\n+        self.log.info(\"Checking onion only connections...\")\n+        self.test_connections(in_clearnet=0, in_onion=0, out_onion=1)\n+        self.test_connections(in_clearnet=0, in_onion=1, out_onion=0)\n+        self.test_connections(in_clearnet=0, in_onion=1, out_onion=1)\n+\n+        self.log.info(\"Checking clearnet only connections...\")\n+        self.test_connections(in_clearnet=1, in_onion=0, out_onion=0)\n+        self.test_connections(in_clearnet=2, in_onion=0, out_onion=0)\n+\n+        self.log.info(\"Checking mixed type connections...\")\n+        self.test_connections(in_clearnet=1, in_onion=0, out_onion=1)\n+        self.test_connections(in_clearnet=1, in_onion=1, out_onion=0)\n+        self.test_connections(in_clearnet=1, in_onion=1, out_onion=1)\n+        self.test_connections(in_clearnet=2, in_onion=0, out_onion=1)\n+        self.test_connections(in_clearnet=2, in_onion=1, out_onion=0)\n+        self.test_connections(in_clearnet=2, in_onion=1, out_onion=1)\n+\n+\n+if __name__ == '__main__':\n+    OnionTest().main()"
      },
      {
        "sha": "a555251c74dbb1b2b30c5d7fd65c1257f71e962f",
        "filename": "test/functional/test_framework/socks5.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b/test/functional/test_framework/socks5.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b/test/functional/test_framework/socks5.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/socks5.py?ref=da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b",
        "patch": "@@ -6,6 +6,7 @@\n \n import socket\n import threading\n+import time\n import queue\n import logging\n \n@@ -116,6 +117,8 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.info('Proxy: %s', cmdin)\n+            # Some tests, e.g., feature_onion.py, require prolonged lifetime of a connection.\n+            time.sleep(0.25)\n             # Fall through to disconnect\n         except Exception as e:\n             logger.exception(\"socks5 request handling failed.\")"
      },
      {
        "sha": "355ba5fe2323014f73b91bb98da4dbcf1bd68220",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b",
        "patch": "@@ -225,6 +225,7 @@\n     'feature_dersig.py',\n     'feature_cltv.py',\n     'rpc_uptime.py',\n+    'feature_onion.py',\n     'wallet_resendwallettransactions.py',\n     'wallet_fallbackfee.py',\n     'rpc_dumptxoutset.py',"
      }
    ]
  }
]