hebasto,2020-10-16 22:03:22,"The commits moved from https://github.com/bitcoin-core/gui/pull/86 already have two ACKs:\n- from @jnewbery https://github.com/bitcoin-core/gui/pull/86#issuecomment-691905056\n> Code review ACK https://github.com/bitcoin-core/gui/commit/6549abcb072d73e0ac91c7992cc5d86eb4064b70 (node changes only. Did not fully review qt changes)\n\n- from @Sjors https://github.com/bitcoin-core/gui/pull/86#pull",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-710673472,710673472,
DrahtBot,2020-10-17 02:57:15,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20494 (refactor: Move node and wallet code out of src/interfaces by ryanofsky)\n* #20267 (Disable and fix tests for when ",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-710734202,710734202,
Sjors,2020-10-17 07:52:12,"Concept ACK.\n\nAgree that a functional test for `connections_onion_only` would be good, but not sure how easy it is. You could spin up two test nodes, 0 with default settings, 1 with `-onlynet=onion` and `-bind=...=onion`, and then connect node 0 to node 1 via it's ""onion"" port. In that case node 1 should have `connections_onion_only=true`.",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-710768868,710768868,
hebasto,2020-10-17 12:25:30,"Updated 174848ffb88767fe9190dd7fa160e7187dfcdc07 -> 9371757d9031ad40ca99543bb4d24fc48e00b32e ([pr20172.01](https://github.com/hebasto/bitcoin/commits/pr20172.01) -> [pr20172.02](https://github.com/hebasto/bitcoin/commits/pr20172.02), [diff](https://github.com/hebasto/bitcoin/compare/pr20172.01..pr20172.02)):\n\n- addressed all of @jonatack's and @Sjors' comments\n- added a functional test",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-710886459,710886459,
hebasto,2020-10-17 21:18:55,"~Hmm, the current [pr20172.03](https://github.com/hebasto/bitcoin/commits/pr20172.03) branch does not pass macOS 10.14 build on Travis.~\n\n~The alternative [pr20172.04](https://github.com/hebasto/bitcoin/commits/pr20172.04) branch pass locally on macOS 10.15 and Linux Mint 20 (Focal codebase), but it does not pass on Travis at all.~\n\n~What is the correct portable way to `-bind=localhost` an",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-711081738,711081738,
hebasto,2020-10-18 12:02:23,"Updated 9371757d9031ad40ca99543bb4d24fc48e00b32e -> d301cc5c564f8c130949567602e182917efef18e ([pr20172.02](https://github.com/hebasto/bitcoin/commits/pr20172.02) -> [pr20172.06](https://github.com/hebasto/bitcoin/commits/pr20172.06), [diff](https://github.com/hebasto/bitcoin/compare/pr20172.02..pr20172.06)):\n\n- fixed functional test\n\nTravis is green now!",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-711157670,711157670,
hebasto,2020-10-19 09:20:40,"@jnewbery \n> This PR contains qt-only changes. It shouldn't be too difficult to separate the changes so that PRs to the main repo only contain changes to the node code, and PRs to the GUI repo only contain changes to qt code.\n\nClear qt-only changes are already [leaved](https://github.com/bitcoin-core/gui/pull/86) in the GUI repo. This pull contains two commits that modify signal signatures. ",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-711899704,711899704,
hebasto,2020-10-19 22:35:12,"Updated d301cc5c564f8c130949567602e182917efef18e -> caebabfc4b239bfb854228f041a6b4220e87e3af ([pr20172.06](https://github.com/hebasto/bitcoin/commits/pr20172.06) -> [pr20172.09](https://github.com/hebasto/bitcoin/commits/pr20172.09), [diff](https://github.com/hebasto/bitcoin/compare/pr20172.06..pr20172.09)):\n\n- reworked functional test\n\n- addressed @jnewbery's [comment](https://github.com/",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-712479264,712479264,
hebasto,2020-10-20 10:47:05,"Updated 85ff09ef5d4da9991ee1e9761662d003ff464679 -> da8b1092fc2d5fa5ee9da3310dae16d4c919bc1b ([pr20172.10](https://github.com/hebasto/bitcoin/commits/pr20172.10) -> [pr20172.11](https://github.com/hebasto/bitcoin/commits/pr20172.11), [diff](https://github.com/hebasto/bitcoin/compare/pr20172.10..pr20172.11)):\n\n- addressed @jnewbery's [comment](https://github.com/bitcoin/bitcoin/pull/20172#discu",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-712763616,712763616,
Sjors,2020-10-20 12:39:29,tACK da8b109,https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-712819523,712819523,
kristapsk,2020-11-05 15:30:55,"I'm thinking about this in a context of if / when other privacy network support is added to Bitcoin Core (like I2P, #20254). What people might want then is not ""are all of my connections Tor only?"", but ""are all of my connections using privacy networks?"" and ""which privacy networks are they using?"".",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-722451210,722451210,
DrahtBot,2020-12-01 09:43:05,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-736358448,736358448,
hebasto,2021-05-03 19:55:55,Closing. Leaving it up for grabs.,https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-831495795,831495795,
jonatack,2020-10-16 22:30:20,s/all connection/all connections/,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r506748086,506748086,src/rpc/net.cpp
jonatack,2020-10-16 22:36:26,"Style nit: I'd put both of the ConnCounts declarations all on one line with `{}`. It looks like this is clang-format output, but ISTM this particular formatting is ugly, wastes space, and isn't followed in the new code additions we see while reviewing. Maybe others disagree :man_shrugging: ",https://github.com/bitcoin/bitcoin/pull/20172#discussion_r506749645,506749645,src/net.h
hebasto,2020-10-17 12:26:00,Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-710886459).,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r506938197,506938197,src/rpc/net.cpp
hebasto,2020-10-17 12:26:13,Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-710886459).,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r506938225,506938225,src/net.h
jnewbery,2020-10-19 08:44:28,Perhaps name this function `GetConnectionCounts()`?,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r507574400,507574400,src/net.h
jnewbery,2020-10-19 09:07:41,What is this onion address?,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r507589923,507589923,test/functional/feature_onion.py
hebasto,2020-10-19 09:14:43,It has been taken from https://github.com/bitcoin/bitcoin/blob/d9d9a293520d26ca8fec8caebab46db103b29903/test/functional/feature_proxy.py#L139,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r507594173,507594173,test/functional/feature_onion.py
jnewbery,2020-10-19 10:06:23,This repetitious code could potentially be refactored into a small helper function `get_connection_info()`.,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r507626814,507626814,test/functional/feature_onion.py
jnewbery,2020-10-19 10:07:20,"I'm confused about how this works. It creates an outbound connection to where? Why does that outbound connection show up here, but is gone by the time you call `getnetworkinfo()` again?",https://github.com/bitcoin/bitcoin/pull/20172#discussion_r507627340,507627340,test/functional/feature_onion.py
hebasto,2020-10-19 10:12:31,"> It creates an outbound connection to where?\n\nTo created `self.proxy`.\n\n> Why does that outbound connection show up here, but is gone by the time you call `getnetworkinfo()` again?\n\n~IDK why `add_p2p_connection(P2PInterface())` causes drop of the connection to the proxy.~",https://github.com/bitcoin/bitcoin/pull/20172#discussion_r507630284,507630284,test/functional/feature_onion.py
hebasto,2020-10-19 22:29:24,"> Why does that outbound connection show up here, but is gone by the time you call `getnetworkinfo()` again?\n\nConnections to a dummy Socks5 server are short-lived:https://github.com/bitcoin/bitcoin/blob/45385018e13e167521e655c36128d8ee4f2a3e0b/test/functional/test_framework/socks5.py#L113-L124",https://github.com/bitcoin/bitcoin/pull/20172#discussion_r508099612,508099612,test/functional/feature_onion.py
hebasto,2020-10-19 22:35:45,Sure! [Updated](https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-712479264).,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r508102005,508102005,src/net.h
hebasto,2020-10-19 22:36:30,Thanks! [Reworked](https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-712479264).,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r508102278,508102278,test/functional/feature_onion.py
hebasto,2020-10-19 22:36:57,[Reworked](https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-712479264).,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r508102443,508102443,test/functional/feature_onion.py
jnewbery,2020-10-20 08:01:23,Stop-starting the nodes 11 times just to test new connections seems very inefficient. Is there a reason you need to do this stop-start?,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r508290004,508290004,test/functional/feature_onion.py
hebasto,2020-10-20 10:47:27,Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/20172#issuecomment-712763616).,https://github.com/bitcoin/bitcoin/pull/20172#discussion_r508399612,508399612,test/functional/feature_onion.py
