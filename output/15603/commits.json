[
  {
    "sha": "5801dd628dcc12039bcfabec939401ae16e61955",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODAxZGQ2MjhkY2MxMjAzOWJjZmFiZWM5Mzk0MDFhZTE2ZTYxOTU1",
    "commit": {
      "author": {
        "name": "gwillen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-03-14T20:00:50Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-03-22T19:39:17Z"
      },
      "message": "docs: Add more tips to productivity.md\n\nAdd advice to productivity.md on:\n- Using ccache to optimal effect\n- The with-incompatible-bdb configure option\n- Building less than the entire set of targets",
      "tree": {
        "sha": "b0f467717c4d1cb372d5dbdffdf096289f5d444a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0f467717c4d1cb372d5dbdffdf096289f5d444a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5801dd628dcc12039bcfabec939401ae16e61955",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5801dd628dcc12039bcfabec939401ae16e61955",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5801dd628dcc12039bcfabec939401ae16e61955",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5801dd628dcc12039bcfabec939401ae16e61955/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fa1f6258c05648f901d7135f8b6606f60428e70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fa1f6258c05648f901d7135f8b6606f60428e70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fa1f6258c05648f901d7135f8b6606f60428e70"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 28,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5c2ce770f7813f075562104a32991ad1578517a4",
        "filename": "doc/productivity.md",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5801dd628dcc12039bcfabec939401ae16e61955/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5801dd628dcc12039bcfabec939401ae16e61955/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=5801dd628dcc12039bcfabec939401ae16e61955",
        "patch": "@@ -8,6 +8,7 @@ Table of Contents\n    * [Cache compilations with `ccache`](#cache-compilations-with-ccache)\n    * [Disable features with `./configure`](#disable-features-with-configure)\n    * [Make use of your threads with `make -j`](#make-use-of-your-threads-with-make--j)\n+   * [Only build what you need](#only-build-what-you-need)\n    * [Multiple working directories with `git worktrees`](#multiple-working-directories-with-git-worktrees)\n * [Writing code](#writing-code)\n    * [Format C/C++/Protobuf diffs with `clang-format-diff.py`](#format-ccprotobuf-diffs-with-clang-format-diffpy)\n@@ -32,6 +33,17 @@ Install `ccache` through your distribution's package manager, and run `./configu\n \n To use ccache for all your C/C++ projects, follow the symlinks method [here](https://ccache.samba.org/manual/latest.html#_run_modes) to set it up.\n \n+To get the most out of ccache, put something like this in `~/.ccache/ccache.conf`:\n+\n+```\n+max_size = 50.0G  # or whatever cache size you prefer; default is 5G; 0 means unlimited\n+base_dir = /home/yourname  # or wherever you keep your source files\n+```\n+\n+Note: base_dir is required for ccache to share cached compiles of the same file across different repositories / paths; it will only do this for paths under base_dir. So this option is required for effective use of ccache with git worktrees (described below).\n+\n+You _must not_ set base_dir to \"/\", or anywhere that contains system headers (according to the ccache docs).\n+\n ### Disable features with `./configure`\n \n After running `./autogen.sh`, which generates the `./configure` file, use `./configure --help` to identify features that you can disable to save on compilation time. A few common flags:\n@@ -43,6 +55,8 @@ After running `./autogen.sh`, which generates the `./configure` file, use `./con\n --without-gui\n ```\n \n+If you do need the wallet enabled, it is common for devs to add `--with-incompatible-bdb`. This uses your system bdb version for the wallet, so you don't have to find a copy of bdb 4.8. Wallets from such a build will be incompatible with any release binary (and vice versa), so use with caution on mainnet.\n+\n ### Make use of your threads with `make -j`\n \n If you have multiple threads on your machine, you can tell `make` to utilize all of them with:\n@@ -51,6 +65,20 @@ If you have multiple threads on your machine, you can tell `make` to utilize all\n make -j\"$(($(nproc)+1))\"\n ```\n \n+### Only build what you need\n+\n+When rebuilding during development, note that running `make`, without giving a target, will do a lot of work you probably don't need. It will build the GUI (unless you've disabled it) and all the tests (which take much longer to build than the app does).\n+\n+Obviously, it is important to build and run the tests at appropriate times -- but when you just want a quick compile to check your work, consider picking one or a set of build targets relevant to what you're working on, e.g.:\n+\n+```sh\n+make src/bitcoind src/bitcoin-cli\n+make src/qt/bitcoin-qt\n+make -C src bitcoin_bench\n+```\n+\n+(You can and should combine this with `-j`, as above, for a parallel build.)\n+\n ### Multiple working directories with `git worktrees`\n \n If you work with multiple branches or multiple copies of the repository, you should try `git worktrees`."
      }
    ]
  }
]