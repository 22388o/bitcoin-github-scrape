[
  {
    "sha": "caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWEzY2EzNmRmYmY2OThkMmJjN2ZjYjdhNDZiODE1YWE3ZjE1NDZj",
    "commit": {
      "author": {
        "name": "Harald Hoyer",
        "email": "harald@hoyer.xyz",
        "date": "2015-07-08T04:58:30Z"
      },
      "committer": {
        "name": "Harald Hoyer",
        "email": "harald@redhat.com",
        "date": "2015-07-08T05:29:20Z"
      },
      "message": "Allow OP_RETURN with two PUSHDATA\n\nHaving two PUSHDATA allows the use of a marker for SPV bloom filtering.\n\nThis avoids having two transactions, where the first one triggers the\nbloom filter.",
      "tree": {
        "sha": "532f4adaeadb76e990e6c659e6cf729b2558053e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/532f4adaeadb76e990e6c659e6cf729b2558053e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c/comments",
    "author": {
      "login": "haraldh",
      "id": 427825,
      "node_id": "MDQ6VXNlcjQyNzgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/427825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haraldh",
      "html_url": "https://github.com/haraldh",
      "followers_url": "https://api.github.com/users/haraldh/followers",
      "following_url": "https://api.github.com/users/haraldh/following{/other_user}",
      "gists_url": "https://api.github.com/users/haraldh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haraldh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haraldh/subscriptions",
      "organizations_url": "https://api.github.com/users/haraldh/orgs",
      "repos_url": "https://api.github.com/users/haraldh/repos",
      "events_url": "https://api.github.com/users/haraldh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haraldh/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "haraldh",
      "id": 427825,
      "node_id": "MDQ6VXNlcjQyNzgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/427825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haraldh",
      "html_url": "https://github.com/haraldh",
      "followers_url": "https://api.github.com/users/haraldh/followers",
      "following_url": "https://api.github.com/users/haraldh/following{/other_user}",
      "gists_url": "https://api.github.com/users/haraldh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haraldh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haraldh/subscriptions",
      "organizations_url": "https://api.github.com/users/haraldh/orgs",
      "repos_url": "https://api.github.com/users/haraldh/repos",
      "events_url": "https://api.github.com/users/haraldh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haraldh/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "086cb336cd8ac0b2a7ad9ff0544c014569c7db38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/086cb336cd8ac0b2a7ad9ff0544c014569c7db38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/086cb336cd8ac0b2a7ad9ff0544c014569c7db38"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 53,
      "deletions": 3
    },
    "files": [
      {
        "sha": "39699420fadc59d8b9af3adfb06dad62da89ccb5",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c",
        "patch": "@@ -53,8 +53,10 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         mTemplates.insert(make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n \n         // Empty, provably prunable, data-carrying output\n-        if (GetBoolArg(\"-datacarrier\", true))\n-            mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA));\n+        if (GetBoolArg(\"-datacarrier\", true)) {\n+                mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA << OP_SMALLDATA));\n+                mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA));\n+        }\n         mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n@@ -77,6 +79,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n \n         opcodetype opcode1, opcode2;\n         vector<unsigned char> vch1, vch2;\n+        size_t datacarrierbytes = 0;\n \n         // Compare\n         CScript::const_iterator pc1 = script1.begin();\n@@ -143,7 +146,8 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n             else if (opcode2 == OP_SMALLDATA)\n             {\n                 // small pushdata, <= nMaxDatacarrierBytes\n-                if (vch1.size() > nMaxDatacarrierBytes)\n+                datacarrierbytes += vch1.size();\n+                if (datacarrierbytes > nMaxDatacarrierBytes)\n                     break;\n             }\n             else if (opcode1 != opcode2 || vch1 != vch2)"
      },
      {
        "sha": "7e5a5c92f28ef2eabc4fcca524d24c09b39609ee",
        "filename": "src/test/bloom_tests.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c/src/test/bloom_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c/src/test/bloom_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bloom_tests.cpp?ref=caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c",
        "patch": "@@ -537,4 +537,31 @@ BOOST_AUTO_TEST_CASE(rolling_bloom)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(bloom_op_return)\n+{\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0*CENT;\n+    vector<unsigned char> part2(ParseHex(\"9876543210\"));\n+    vector<unsigned char> part1(ParseHex(\"E0FF\"));\n+    tx.vout[0].scriptPubKey = CScript() << OP_RETURN << part1 << part2;\n+\n+    CBloomFilter filter(10, 0.000001, 0, BLOOM_UPDATE_NONE);\n+    filter.insert(part1);\n+    BOOST_CHECK_MESSAGE(filter.IsRelevantAndUpdate(tx), \"Simple Bloom filter didn't match tx hash with OP_RETURN\");\n+\n+    filter = CBloomFilter(10, 0.000001, 0, BLOOM_UPDATE_NONE);\n+    filter.insert(ParseHex(\"E0FE\"));\n+    BOOST_CHECK_MESSAGE(!filter.IsRelevantAndUpdate(tx), \"Bloom filter matched wrong tx hash with OP_RETURN\");\n+\n+    filter = CBloomFilter(10, 0.000001, 0, BLOOM_UPDATE_NONE);\n+    filter.insert(part2);\n+    BOOST_CHECK_MESSAGE(filter.IsRelevantAndUpdate(tx), \"Simple Bloom filter didn't match tx hash with OP_RETURN second argument\");\n+\n+    filter = CBloomFilter(10, 0.000001, 0, BLOOM_UPDATE_NONE);\n+    filter.insert(ParseHex(\"9876543211\"));\n+    BOOST_CHECK_MESSAGE(!filter.IsRelevantAndUpdate(tx), \"Bloom filter matched wrong tx hash with OP_RETURN second argument\");\n+}\n+\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "c0338fe04fa19987e8bf24e19af6d90bc1a48b4e",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=caa3ca36dfbf698d2bc7fcb7a46b815aa7f1546c",
        "patch": "@@ -358,6 +358,25 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3800\");\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n+    // 80-byte TX_NULL_DATA two split (standard)\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN\n+                                       << ParseHex(\"11223344556677889900112233445566778899001122334455667788990011223344556677889900\")\n+                                       << ParseHex(\"11223344556677889900112233445566778899001122334455667788990011223344556677889900\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+\n+    // 81-byte TX_NULL_DATA split in two (non-standard)\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN\n+                                       << ParseHex(\"11223344556677889900112233445566778899001122334455667788990011223344556677889900\")\n+                                       << ParseHex(\"1122334455667788990011223344556677889900112233445566778899001122334455667788990000\");\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+\n+    // 60-byte TX_NULL_DATA split in three (non-standard)\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN\n+                                       << ParseHex(\"1122334455667788990011223344556677889900\")\n+                                       << ParseHex(\"1122334455667788990011223344556677889900\")\n+                                       << ParseHex(\"1122334455667788990011223344556677889900\");\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+\n     // TX_NULL_DATA w/o PUSHDATA\n     t.vout.resize(1);\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN;"
      }
    ]
  }
]