[
  {
    "sha": "3260b4c09006ea5c1b00c599a14e6c706ac760f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjYwYjRjMDkwMDZlYTVjMWIwMGM1OTlhMTRlNmM3MDZhYzc2MGY4",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-04-28T15:37:50Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-06-01T10:53:57Z"
      },
      "message": "remove GetBoolArg() fDefault parameter defaulting to false\n\n- explicitly set the default of all GetBoolArg() calls\n- rework getarg_test.cpp and util_tests.cpp to cover this change\n- some indentation fixes\n- move macdockiconhandler.h include in bitcoin.cpp to the \"our headers\"\n  section",
      "tree": {
        "sha": "f413a27870dbbf73933c73c58823e377a5c4b22f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f413a27870dbbf73933c73c58823e377a5c4b22f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3260b4c09006ea5c1b00c599a14e6c706ac760f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3260b4c09006ea5c1b00c599a14e6c706ac760f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3260b4c09006ea5c1b00c599a14e6c706ac760f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3260b4c09006ea5c1b00c599a14e6c706ac760f8/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3d661110dae5fe62585ab753ef996f081a11855d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d661110dae5fe62585ab753ef996f081a11855d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d661110dae5fe62585ab753ef996f081a11855d"
      }
    ],
    "stats": {
      "total": 137,
      "additions": 61,
      "deletions": 76
    },
    "files": [
      {
        "sha": "c99b74f183fe4daca5bcf4dec4577b864f0f7fd3",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -757,7 +757,7 @@ void StartRPCThreads()\n     rpc_io_service = new asio::io_service();\n     rpc_ssl_context = new ssl::context(*rpc_io_service, ssl::context::sslv23);\n \n-    const bool fUseSSL = GetBoolArg(\"-rpcssl\");\n+    const bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n \n     if (fUseSSL)\n     {\n@@ -1037,7 +1037,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n \n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\") &&\n+    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\", false) &&\n         !pcmd->okSafeMode)\n         throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n \n@@ -1071,7 +1071,7 @@ Object CallRPC(const string& strMethod, const Array& params)\n                 GetConfigFile().string().c_str()));\n \n     // Connect to localhost\n-    bool fUseSSL = GetBoolArg(\"-rpcssl\");\n+    bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n     asio::io_service io_service;\n     ssl::context context(io_service, ssl::context::sslv23);\n     context.set_options(ssl::context::no_sslv2);"
      },
      {
        "sha": "78f838f7cb405c5d6fe4435046d62834c2a5be9a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -198,7 +198,7 @@ bool AppInit(int argc, char* argv[])\n             exit(ret);\n         }\n #if !defined(WIN32)\n-        fDaemon = GetBoolArg(\"-daemon\");\n+        fDaemon = GetBoolArg(\"-daemon\", false);\n         if (fDaemon)\n         {\n             // Daemonize\n@@ -495,7 +495,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 2: parameter interactions\n \n-    fTestNet = GetBoolArg(\"-testnet\");\n+    fTestNet = GetBoolArg(\"-testnet\", false);\n     Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);\n \n     if (mapArgs.count(\"-bind\")) {\n@@ -526,7 +526,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         SoftSetBoolArg(\"-discover\", false);\n     }\n \n-    if (GetBoolArg(\"-salvagewallet\")) {\n+    if (GetBoolArg(\"-salvagewallet\", false)) {\n         // Rewrite just private keys: rescan to find transactions\n         SoftSetBoolArg(\"-rescan\", true);\n     }\n@@ -543,8 +543,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n-    fDebug = GetBoolArg(\"-debug\");\n-    fBenchmark = GetBoolArg(\"-benchmark\");\n+    fDebug = GetBoolArg(\"-debug\", false);\n+    fBenchmark = GetBoolArg(\"-benchmark\", false);\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n     nScriptCheckThreads = GetArg(\"-par\", 0);\n@@ -559,20 +559,20 @@ bool AppInit2(boost::thread_group& threadGroup)\n     if (fDebug)\n         fDebugNet = true;\n     else\n-        fDebugNet = GetBoolArg(\"-debugnet\");\n+        fDebugNet = GetBoolArg(\"-debugnet\", false);\n \n     if (fDaemon)\n         fServer = true;\n     else\n-        fServer = GetBoolArg(\"-server\");\n+        fServer = GetBoolArg(\"-server\", false);\n \n     /* force fServer when running without GUI */\n #if !defined(QT_GUI)\n     fServer = true;\n #endif\n-    fPrintToConsole = GetBoolArg(\"-printtoconsole\");\n-    fPrintToDebugger = GetBoolArg(\"-printtodebugger\");\n-    fLogTimestamps = GetBoolArg(\"-logtimestamps\");\n+    fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n+    fPrintToDebugger = GetBoolArg(\"-printtodebugger\", false);\n+    fLogTimestamps = GetBoolArg(\"-logtimestamps\", false);\n \n     if (mapArgs.count(\"-timeout\"))\n     {\n@@ -677,7 +677,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         }\n     }\n \n-    if (GetBoolArg(\"-salvagewallet\"))\n+    if (GetBoolArg(\"-salvagewallet\", false))\n     {\n         // Recover readable keypairs:\n         if (!CWalletDB::Recover(bitdb, \"wallet.dat\", true))\n@@ -799,7 +799,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 7: load block chain\n \n-    fReindex = GetBoolArg(\"-reindex\");\n+    fReindex = GetBoolArg(\"-reindex\", false);\n \n     // Upgrading to 0.8; hard-link the old blknnnn.dat files into /blocks/\n     filesystem::path blocksDir = GetDataDir() / \"blocks\";\n@@ -922,7 +922,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     }\n     printf(\" block index %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n \n-    if (GetBoolArg(\"-printblockindex\") || GetBoolArg(\"-printblocktree\"))\n+    if (GetBoolArg(\"-printblockindex\", false) || GetBoolArg(\"-printblocktree\", false))\n     {\n         PrintBlockTree();\n         return false;\n@@ -1018,7 +1018,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     RegisterWallet(pwalletMain);\n \n     CBlockIndex *pindexRescan = pindexBest;\n-    if (GetBoolArg(\"-rescan\"))\n+    if (GetBoolArg(\"-rescan\", false))\n         pindexRescan = pindexGenesisBlock;\n     else\n     {"
      },
      {
        "sha": "a98b83b6af50d906c13d0bcc523adf50aee50b73",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -2931,7 +2931,7 @@ string GetWarnings(string strFor)\n     string strStatusBar;\n     string strRPC;\n \n-    if (GetBoolArg(\"-testsafemode\"))\n+    if (GetBoolArg(\"-testsafemode\", false))\n         strRPC = \"test\";\n \n     if (!CLIENT_VERSION_IS_RELEASE)\n@@ -4175,7 +4175,7 @@ CBlockTemplate* CreateNewBlock(CReserveKey& reservekey)\n         // Priority order to process transactions\n         list<COrphan> vOrphan; // list memory doesn't move\n         map<uint256, vector<COrphan*> > mapDependers;\n-        bool fPrintPriority = GetBoolArg(\"-printpriority\");\n+        bool fPrintPriority = GetBoolArg(\"-printpriority\", false);\n \n         // This vector will be sorted into a priority queue:\n         vector<TxPriority> vecPriority;"
      },
      {
        "sha": "fbf57fffd2693ea91bd0265d8b8375855c32b9de",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -15,6 +15,9 @@\n #include \"ui_interface.h\"\n #include \"paymentserver.h\"\n #include \"splashscreen.h\"\n+#ifdef Q_OS_MAC\n+#include \"macdockiconhandler.h\"\n+#endif\n \n #include <QMessageBox>\n #include <QTextCodec>\n@@ -23,10 +26,6 @@\n #include <QTranslator>\n #include <QLibraryInfo>\n \n-#ifdef Q_OS_MAC\n-#include \"macdockiconhandler.h\"\n-#endif\n-\n #if defined(BITCOIN_NEED_QT_PLUGINS) && !defined(_BITCOIN_QT_PLUGINS_INCLUDED)\n #define _BITCOIN_QT_PLUGINS_INCLUDED\n #define __INSURE__\n@@ -152,7 +151,7 @@ int main(int argc, char *argv[])\n     // as it is used to locate QSettings)\n     QApplication::setOrganizationName(\"Bitcoin\");\n     QApplication::setOrganizationDomain(\"bitcoin.org\");\n-    if(GetBoolArg(\"-testnet\")) // Separate UI settings for testnet\n+    if (GetBoolArg(\"-testnet\", false)) // Separate UI settings for testnet\n         QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n     else\n         QApplication::setApplicationName(\"Bitcoin-Qt\");\n@@ -204,13 +203,14 @@ int main(int argc, char *argv[])\n \n #ifdef Q_OS_MAC\n     // on mac, also change the icon now because it would look strange to have a testnet splash (green) and a std app icon (orange)\n-    if(GetBoolArg(\"-testnet\")) {\n+    if(GetBoolArg(\"-testnet\", false))\n+    {\n         MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin_testnet\"));\n     }\n #endif\n \n     SplashScreen splash(QPixmap(), 0);\n-    if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\"))\n+    if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n     {\n         splash.show();\n         splash.setAutoFillBackground(true);\n@@ -254,7 +254,7 @@ int main(int argc, char *argv[])\n                 window.setCurrentWallet(\"~Default\");\n \n                 // If -min option passed, start window minimized.\n-                if(GetBoolArg(\"-min\"))\n+                if(GetBoolArg(\"-min\", false))\n                 {\n                     window.showMinimized();\n                 }"
      },
      {
        "sha": "d60b2ef4bae5527e195649abcb77d55fba258c97",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -26,7 +26,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n \n     // load the bitmap for writing some text over it\n     QPixmap newPixmap;\n-    if(GetBoolArg(\"-testnet\")) {\n+    if(GetBoolArg(\"-testnet\", false)) {\n         newPixmap     = QPixmap(\":/images/splash_testnet\");\n     }\n     else {"
      },
      {
        "sha": "d2cac68706e79b8f24ec42d57397e153f787a016",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -33,7 +33,7 @@ Value getgenerate(const Array& params, bool fHelp)\n             \"getgenerate\\n\"\n             \"Returns true or false.\");\n \n-    return GetBoolArg(\"-gen\");\n+    return GetBoolArg(\"-gen\", false);\n }\n \n \n@@ -84,16 +84,16 @@ Value getmininginfo(const Array& params, bool fHelp)\n             \"Returns an object containing mining-related information.\");\n \n     Object obj;\n-    obj.push_back(Pair(\"blocks\",        (int)nBestHeight));\n-    obj.push_back(Pair(\"currentblocksize\",(uint64_t)nLastBlockSize));\n-    obj.push_back(Pair(\"currentblocktx\",(uint64_t)nLastBlockTx));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n-    obj.push_back(Pair(\"generate\",      GetBoolArg(\"-gen\")));\n-    obj.push_back(Pair(\"genproclimit\",  (int)GetArg(\"-genproclimit\", -1)));\n-    obj.push_back(Pair(\"hashespersec\",  gethashespersec(params, false)));\n-    obj.push_back(Pair(\"pooledtx\",      (uint64_t)mempool.size()));\n-    obj.push_back(Pair(\"testnet\",       fTestNet));\n+    obj.push_back(Pair(\"blocks\",           (int)nBestHeight));\n+    obj.push_back(Pair(\"currentblocksize\", (uint64_t)nLastBlockSize));\n+    obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n+    obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n+    obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n+    obj.push_back(Pair(\"generate\",         GetBoolArg(\"-gen\", false)));\n+    obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n+    obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));\n+    obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n+    obj.push_back(Pair(\"testnet\",          fTestNet));\n     return obj;\n }\n "
      },
      {
        "sha": "c89d218f80f1777250ff64f20de3c879d1c7898d",
        "filename": "src/test/getarg_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 20,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/test/getarg_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/test/getarg_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/getarg_tests.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -6,8 +6,7 @@\n \n BOOST_AUTO_TEST_SUITE(getarg_tests)\n \n-static void\n-ResetArgs(const std::string& strArg)\n+static void ResetArgs(const std::string& strArg)\n {\n     std::vector<std::string> vecArg;\n     boost::split(vecArg, strArg, boost::is_space(), boost::token_compress_on);\n@@ -26,62 +25,50 @@ ResetArgs(const std::string& strArg)\n BOOST_AUTO_TEST_CASE(boolarg)\n {\n     ResetArgs(\"-foo\");\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n \n-    BOOST_CHECK(!GetBoolArg(\"-fo\"));\n     BOOST_CHECK(!GetBoolArg(\"-fo\", false));\n     BOOST_CHECK(GetBoolArg(\"-fo\", true));\n \n-    BOOST_CHECK(!GetBoolArg(\"-fooo\"));\n     BOOST_CHECK(!GetBoolArg(\"-fooo\", false));\n     BOOST_CHECK(GetBoolArg(\"-fooo\", true));\n \n     ResetArgs(\"-foo=0\");\n-    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n     ResetArgs(\"-foo=1\");\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n \n     // New 0.6 feature: auto-map -nosomething to !-something:\n     ResetArgs(\"-nofoo\");\n-    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n     ResetArgs(\"-nofoo=1\");\n-    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n     ResetArgs(\"-foo -nofoo\");  // -foo should win\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n \n     ResetArgs(\"-foo=1 -nofoo=1\");  // -foo should win\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n \n     ResetArgs(\"-foo=0 -nofoo=0\");  // -foo should win\n-    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n     // New 0.6 feature: treat -- same as -:\n     ResetArgs(\"--foo=1\");\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n \n     ResetArgs(\"--nofoo=1\");\n-    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n \n@@ -133,7 +120,7 @@ BOOST_AUTO_TEST_CASE(intarg)\n BOOST_AUTO_TEST_CASE(doubledash)\n {\n     ResetArgs(\"--foo\");\n-    BOOST_CHECK_EQUAL(GetBoolArg(\"-foo\"), true);\n+    BOOST_CHECK_EQUAL(GetBoolArg(\"-foo\", false), true);\n \n     ResetArgs(\"--foo=verbose --bar=1\");\n     BOOST_CHECK_EQUAL(GetArg(\"-foo\", \"\"), \"verbose\");\n@@ -143,25 +130,24 @@ BOOST_AUTO_TEST_CASE(doubledash)\n BOOST_AUTO_TEST_CASE(boolargno)\n {\n     ResetArgs(\"-nofoo\");\n-    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n \n     ResetArgs(\"-nofoo=1\");\n-    BOOST_CHECK(!GetBoolArg(\"-foo\"));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", true));\n     BOOST_CHECK(!GetBoolArg(\"-foo\", false));\n \n     ResetArgs(\"-nofoo=0\");\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n     BOOST_CHECK(GetBoolArg(\"-foo\", true));\n     BOOST_CHECK(GetBoolArg(\"-foo\", false));\n \n     ResetArgs(\"-foo --nofoo\");\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n \n     ResetArgs(\"-nofoo -foo\"); // foo always wins:\n-    BOOST_CHECK(GetBoolArg(\"-foo\"));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", true));\n+    BOOST_CHECK(GetBoolArg(\"-foo\", false));\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "64bd3a1b28d16154e5f21c2ce5ebf3d3bfe0468f",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -31,7 +31,7 @@ BOOST_AUTO_TEST_CASE(util_criticalsection)\n }\n \n BOOST_AUTO_TEST_CASE(util_MedianFilter)\n-{    \n+{\n     CMedianFilter<int> filter(5, 15);\n \n     BOOST_CHECK_EQUAL(filter.median(), 15);\n@@ -56,10 +56,10 @@ BOOST_AUTO_TEST_CASE(util_MedianFilter)\n }\n \n static const unsigned char ParseHex_expected[65] = {\n-    0x04, 0x67, 0x8a, 0xfd, 0xb0, 0xfe, 0x55, 0x48, 0x27, 0x19, 0x67, 0xf1, 0xa6, 0x71, 0x30, 0xb7, \n-    0x10, 0x5c, 0xd6, 0xa8, 0x28, 0xe0, 0x39, 0x09, 0xa6, 0x79, 0x62, 0xe0, 0xea, 0x1f, 0x61, 0xde, \n-    0xb6, 0x49, 0xf6, 0xbc, 0x3f, 0x4c, 0xef, 0x38, 0xc4, 0xf3, 0x55, 0x04, 0xe5, 0x1e, 0xc1, 0x12, \n-    0xde, 0x5c, 0x38, 0x4d, 0xf7, 0xba, 0x0b, 0x8d, 0x57, 0x8a, 0x4c, 0x70, 0x2b, 0x6b, 0xf1, 0x1d, \n+    0x04, 0x67, 0x8a, 0xfd, 0xb0, 0xfe, 0x55, 0x48, 0x27, 0x19, 0x67, 0xf1, 0xa6, 0x71, 0x30, 0xb7,\n+    0x10, 0x5c, 0xd6, 0xa8, 0x28, 0xe0, 0x39, 0x09, 0xa6, 0x79, 0x62, 0xe0, 0xea, 0x1f, 0x61, 0xde,\n+    0xb6, 0x49, 0xf6, 0xbc, 0x3f, 0x4c, 0xef, 0x38, 0xc4, 0xf3, 0x55, 0x04, 0xe5, 0x1e, 0xc1, 0x12,\n+    0xde, 0x5c, 0x38, 0x4d, 0xf7, 0xba, 0x0b, 0x8d, 0x57, 0x8a, 0x4c, 0x70, 0x2b, 0x6b, 0xf1, 0x1d,\n     0x5f\n };\n BOOST_AUTO_TEST_CASE(util_ParseHex)\n@@ -123,13 +123,13 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(mapArgs.empty() && mapMultiArgs.empty());\n \n     ParseParameters(5, (char**)argv_test);\n-    // expectation: -ignored is ignored (program name argument), \n+    // expectation: -ignored is ignored (program name argument),\n     // -a, -b and -ccc end up in map, -d ignored because it is after\n     // a non-option argument (non-GNU option parsing)\n     BOOST_CHECK(mapArgs.size() == 3 && mapMultiArgs.size() == 3);\n-    BOOST_CHECK(mapArgs.count(\"-a\") && mapArgs.count(\"-b\") && mapArgs.count(\"-ccc\") \n+    BOOST_CHECK(mapArgs.count(\"-a\") && mapArgs.count(\"-b\") && mapArgs.count(\"-ccc\")\n                 && !mapArgs.count(\"f\") && !mapArgs.count(\"-d\"));\n-    BOOST_CHECK(mapMultiArgs.count(\"-a\") && mapMultiArgs.count(\"-b\") && mapMultiArgs.count(\"-ccc\") \n+    BOOST_CHECK(mapMultiArgs.count(\"-a\") && mapMultiArgs.count(\"-b\") && mapMultiArgs.count(\"-ccc\")\n                 && !mapMultiArgs.count(\"f\") && !mapMultiArgs.count(\"-d\"));\n \n     BOOST_CHECK(mapArgs[\"-a\"] == \"\" && mapArgs[\"-ccc\"] == \"multiple\");\n@@ -154,10 +154,10 @@ BOOST_AUTO_TEST_CASE(util_GetArg)\n     BOOST_CHECK_EQUAL(GetArg(\"inttest1\", -1), 12345);\n     BOOST_CHECK_EQUAL(GetArg(\"inttest2\", -1), 81985529216486895LL);\n     BOOST_CHECK_EQUAL(GetArg(\"inttest3\", -1), -1);\n-    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest1\"), true);\n-    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest2\"), false);\n-    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest3\"), false);\n-    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest4\"), true);\n+    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest1\", false), true);\n+    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest2\", false), false);\n+    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest3\", false), false);\n+    BOOST_CHECK_EQUAL(GetBoolArg(\"booltest4\", false), true);\n }\n \n BOOST_AUTO_TEST_CASE(util_WildcardMatch)"
      },
      {
        "sha": "0bd29602333f7d44cb8c2d169024139027b21bd3",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -518,7 +518,7 @@ static void InterpretNegativeSetting(string name, map<string, string>& mapSettin\n         positive.append(name.begin()+3, name.end());\n         if (mapSettingsRet.count(positive) == 0)\n         {\n-            bool value = !GetBoolArg(name);\n+            bool value = !GetBoolArg(name, false);\n             mapSettingsRet[positive] = (value ? \"1\" : \"0\");\n         }\n     }\n@@ -1171,7 +1171,6 @@ bool TruncateFile(FILE *file, unsigned int length) {\n #endif\n }\n \n-\n // this function tries to raise the file descriptor limit to the requested number.\n // It returns the actual file descriptor limit (which may be more or less than nMinFD)\n int RaiseFileDescriptorLimit(int nMinFD) {\n@@ -1257,8 +1256,8 @@ void ShrinkDebugFile()\n             fclose(file);\n         }\n     }\n-    else if(file != NULL)\n-\t     fclose(file);\n+    else if (file != NULL)\n+        fclose(file);\n }\n \n "
      },
      {
        "sha": "941e0d99ac5ed9fb05045940f37542ede8b6f6ba",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3260b4c09006ea5c1b00c599a14e6c706ac760f8/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=3260b4c09006ea5c1b00c599a14e6c706ac760f8",
        "patch": "@@ -390,7 +390,7 @@ int64 GetArg(const std::string& strArg, int64 nDefault);\n  * @param default (true or false)\n  * @return command-line argument or default value\n  */\n-bool GetBoolArg(const std::string& strArg, bool fDefault=false);\n+bool GetBoolArg(const std::string& strArg, bool fDefault);\n \n /**\n  * Set an argument if it doesn't already have a value"
      }
    ]
  }
]