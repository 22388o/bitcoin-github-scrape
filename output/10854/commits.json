[
  {
    "sha": "095b9174645f5b855dd5946c99cea4f4ffb5a034",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTViOTE3NDY0NWY1Yjg1NWRkNTk0NmM5OWNlYTRmNGZmYjVhMDM0",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-07-17T17:00:00Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-07-17T17:00:00Z"
      },
      "message": "Avoid using sizes on non-fixed-width types to derive protocol constants.\n\nThanks to awemany for pointing this out.",
      "tree": {
        "sha": "7d4ab7b7a5e598d0c9814f930f6ff74df28308a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d4ab7b7a5e598d0c9814f930f6ff74df28308a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/095b9174645f5b855dd5946c99cea4f4ffb5a034",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/095b9174645f5b855dd5946c99cea4f4ffb5a034",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/095b9174645f5b855dd5946c99cea4f4ffb5a034",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/095b9174645f5b855dd5946c99cea4f4ffb5a034/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b019357ff09e7a522307fc271d6b60562a7b890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b019357ff09e7a522307fc271d6b60562a7b890",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b019357ff09e7a522307fc271d6b60562a7b890"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6c9f76d2156fc622682dfa745dd432a0955a8ba8",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/095b9174645f5b855dd5946c99cea4f4ffb5a034/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/095b9174645f5b855dd5946c99cea4f4ffb5a034/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=095b9174645f5b855dd5946c99cea4f4ffb5a034",
        "patch": "@@ -20,6 +20,7 @@\n #include \"init.h\"\n #include \"policy/fees.h\"\n #include \"policy/policy.h\"\n+#include \"policy/rbf.h\"\n #include \"pow.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n@@ -488,9 +489,9 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             if (!setConflicts.count(ptxConflicting->GetHash()))\n             {\n                 // Allow opt-out of transaction replacement by setting\n-                // nSequence >= maxint-1 on all inputs.\n+                // nSequence > MAX_BIP125_RBF_SEQUENCE (SEQUENCE_FINAL-2) on all inputs.\n                 //\n-                // maxint-1 is picked to still allow use of nLockTime by\n+                // SEQUENCE_FINAL-1 is picked to still allow use of nLockTime by\n                 // non-replaceable transactions. All inputs rather than just one\n                 // is for the sake of multi-party protocols, where we don't\n                 // want a single party to be able to disable replacement.\n@@ -504,7 +505,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                 {\n                     for (const CTxIn &_txin : ptxConflicting->vin)\n                     {\n-                        if (_txin.nSequence < std::numeric_limits<unsigned int>::max()-1)\n+                        if (_txin.nSequence <= MAX_BIP125_RBF_SEQUENCE)\n                         {\n                             fReplacementOptOut = false;\n                             break;"
      },
      {
        "sha": "ea0493cd0bf0b9498a22d93c577a45eb5bdcade4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/095b9174645f5b855dd5946c99cea4f4ffb5a034/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/095b9174645f5b855dd5946c99cea4f4ffb5a034/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=095b9174645f5b855dd5946c99cea4f4ffb5a034",
        "patch": "@@ -2723,7 +2723,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                 // to avoid conflicting with other possible uses of nSequence,\n                 // and in the spirit of \"smallest possible change from prior\n                 // behavior.\"\n-                const uint32_t nSequence = coin_control.signalRbf ? MAX_BIP125_RBF_SEQUENCE : (std::numeric_limits<unsigned int>::max() - 1);\n+                const uint32_t nSequence = coin_control.signalRbf ? MAX_BIP125_RBF_SEQUENCE : (CTxIn::SEQUENCE_FINAL - 1);\n                 for (const auto& coin : setCoins)\n                     txNew.vin.push_back(CTxIn(coin.outpoint,CScript(),\n                                               nSequence));"
      }
    ]
  }
]