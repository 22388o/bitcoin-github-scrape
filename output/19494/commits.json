[
  {
    "sha": "b03697b68e24bea7a177f84954c93691450d5638",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDM2OTdiNjhlMjRiZWE3YTE3N2Y4NDk1NGM5MzY5MTQ1MGQ1NjM4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-11T16:40:42Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-12T05:52:28Z"
      },
      "message": "doc: CONTRIBUTING.md improvements",
      "tree": {
        "sha": "79f489af4f7e0c9d1abf4ddb75110057aed67d19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79f489af4f7e0c9d1abf4ddb75110057aed67d19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b03697b68e24bea7a177f84954c93691450d5638",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8KpSEACgkQT1chs9Dj\nkh1LMg/9F/ca6NKaY/g4o9XGMHmVvD6a1cmwSH6/ZGDT9gMIChlecK87GZ5DTKOL\njkoEIl1EsXI0GPbEuZJtTJJd8M8jVceQYmAkh/GSK06NvIAOyMaIk8t4lAGNkf+y\nJN6UBi05mEJ/wvPFYMWoGPOBKi+D2X6lI2acHt3edBt2nTNWP1DPg8gzMOEQEX61\nLtnWDOgmcTWCIc1QbY1JfglyXT93ASgrfDofA7eTZIRoGIkW4EYWVb3oIcd4HmGj\nH7Pxte/NN12Pc4cItlmSoh+bYokL41jKP0qvLOCeos3YV0dypS4Eb7EwEMMAEnG9\nq/05SrN3dKuQsgFeVRUOePW99NBmsZh4zJP2i6kNvt6esxiU9XO0df9GoAc/5YYa\nkNDp7swmoM280Na7CKfjN4FAvcRqZbpGjHeXYw1XYp+mdYpPq7fFdJFSeYvjsGZr\nMrBOJ14iHHmvNyOlCoOkcwiFMdXjSblv/rJ1Lssg081m869z03q4aywPRkYoFJdy\nKq9Dndf5WLC6FLzSbAQ1MIqDyaVTX9BKmDgI09YtatQV6V9GO0wqgUr35mIg5Mur\n46Qz8kEotYWBnsGHHTF2L3UjcykSJWGeExxg7dMJAUAfTrYr+XIeRazqq96SlCn3\n68cNVV9TZDdqkn7eU61u43WWs2CSAGQeZQ1KN/9FzOXYHGOOjMw=\n=gJbn\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIB+oChoj7UZbRD2kH2lUMxVNyAz0YMXboqpogiJDE8ljCP/wEEBxZT2DCGJa\nCucM9Onxl6QI8QRfCqUj8AjhgQ3NWI3NrACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEHgtYmJ4065AW/ZxlZWrk9MI\n8SA4Z1zfa0HXwsXYi7PStgNauU0b14A0tXozMrXPTxJhywjxBF8KpSPwCChN5MAr\nq3sZAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmf/8BCJoZHV9N2CDATQzRE0JamRCPEEXwqlIvAIUI39HhCR0GgA\ng9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmfwELXJJMdE8/PRh0UzTrPJRkQI8QRfCqUi8AiC2uYLjm9kSgCD3+MNLvkM\njiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 79f489af4f7e0c9d1abf4ddb75110057aed67d19\nparent 160800ac105568a59e343411d21a90e9530e1b9e\nauthor Jon Atack <jon@atack.com> 1594485642 +0200\ncommitter Jon Atack <jon@atack.com> 1594533148 +0200\n\ndoc: CONTRIBUTING.md improvements\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b03697b68e24bea7a177f84954c93691450d5638",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b03697b68e24bea7a177f84954c93691450d5638",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b03697b68e24bea7a177f84954c93691450d5638/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "160800ac105568a59e343411d21a90e9530e1b9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/160800ac105568a59e343411d21a90e9530e1b9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/160800ac105568a59e343411d21a90e9530e1b9e"
      }
    ],
    "stats": {
      "total": 114,
      "additions": 62,
      "deletions": 52
    },
    "files": [
      {
        "sha": "11a0f4bac7d799a4b591b853c851b7e2b5455c4b",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 62,
        "deletions": 52,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b03697b68e24bea7a177f84954c93691450d5638/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b03697b68e24bea7a177f84954c93691450d5638/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=b03697b68e24bea7a177f84954c93691450d5638",
        "patch": "@@ -6,27 +6,28 @@ welcome to contribute towards development in the form of peer review, testing\n and patches. This document explains the practical process and guidelines for\n contributing.\n \n-Firstly in terms of structure, there is no particular concept of \"Core\n+First, in terms of structure, there is no particular concept of \"Bitcoin Core\n developers\" in the sense of privileged people. Open source often naturally\n-revolves around meritocracy where longer term contributors gain more trust from\n-the developer community. However, some hierarchy is necessary for practical\n-purposes. As such there are repository \"maintainers\" who are responsible for\n-merging pull requests as well as a \"lead maintainer\" who is responsible for the\n-release cycle, overall merging, moderation and appointment of maintainers.\n+revolves around a meritocracy where contributors earn trust from the developer\n+community over time. Nevertheless, some hierarchy is necessary for practical\n+purposes. As such, there are repository \"maintainers\" who are responsible for\n+merging pull requests, as well as a \"lead maintainer\" who is responsible for the\n+release cycle as well as overall merging, moderation and appointment of\n+maintainers.\n \n Getting Started\n ---------------\n \n New contributors are very welcome and needed.\n \n-Reviewing and testing is the most effective way you can contribute as a new\n-contributor, and it also will teach you much more about the code and process\n-than opening PRs. Please refer to the section [peer review](#peer-review) later\n-in this document.\n+Reviewing and testing is highly valued and the most effective way you can contribute\n+as a new contributor. It also will teach you much more about the code and\n+process than opening pull requests. Please refer to the [peer review](#peer-review)\n+section below.\n \n Before you start contributing, familiarize yourself with the Bitcoin Core build\n system and tests. Refer to the documentation in the repository on how to build\n-Bitcoin Core and how to run the unit and functional tests.\n+Bitcoin Core and how to run the unit tests, functional tests, and fuzz tests.\n \n There are many open issues of varying difficulty waiting to be fixed.\n If you're looking for somewhere to start contributing, check out the\n@@ -62,7 +63,7 @@ history logs can be found\n on [http://www.erisian.com.au/bitcoin-core-dev/](http://www.erisian.com.au/bitcoin-core-dev/)\n and [http://gnusha.org/bitcoin-core-dev/](http://gnusha.org/bitcoin-core-dev/).\n \n-Discussion about code base improvements happens in GitHub issues and on pull\n+Discussion about codebase improvements happens in GitHub issues and pull\n requests.\n \n The developer\n@@ -75,7 +76,7 @@ Contributor Workflow\n --------------------\n \n The codebase is maintained using the \"contributor workflow\" where everyone\n-without exception contributes patch proposals using \"pull requests\". This\n+without exception contributes patch proposals using \"pull requests\" (PRs). This\n facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n@@ -113,6 +114,9 @@ In general, [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_comm\n and diffs should be easy to read. For this reason, do not mix any formatting\n fixes or code moves with actual code changes.\n \n+Make sure each individual commit is hygienic: that it builds successfully on its\n+own without warnings, errors, regressions, or test failures.\n+\n Commit messages should be verbose by default consisting of a short subject line\n (50 chars max), a blank line and detailed explanatory text as separate\n paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n@@ -124,7 +128,7 @@ If a particular commit references another issue, please add the reference. For\n example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n will cause the corresponding issue to be closed when the pull request is merged.\n \n-Commit messages should never contain any `@` mentions.\n+Commit messages should never contain any `@` mentions (usernames prefixed with \"@\").\n \n Please refer to the [Git manual](https://git-scm.com/doc) for more information\n about Git.\n@@ -158,10 +162,16 @@ Examples:\n     qt: Add feed bump button\n     log: Fix typo in log message\n \n-The body of the pull request should contain enough description about what the\n-patch does together with any justification/reasoning. You should include\n-references to any discussions (for example other tickets or mailing list\n-discussions).\n+The body of the pull request should contain sufficient description of *what* the\n+patch does, and even more importantly, *why*, with justification and reasoning.\n+You should include references to any discussions (for example, other issues or\n+mailing list discussions).\n+\n+The description for a new pull request should not contain any `@` mentions. The\n+PR description will be included in the commit message when the PR is merged and\n+any users mentioned in the description will be annoyingly notified each time a\n+fork of Bitcoin Core copies the merge. Instead, make any username mentions in a\n+subsequent comment to the PR.\n \n ### Translation changes\n \n@@ -197,13 +207,13 @@ before it will be merged. The basic squashing workflow is shown below.\n     # Save and quit.\n     git push -f # (force push to GitHub)\n \n-Please update the resulting commit message if needed. It should read as a\n-coherent message. In most cases, this means that you should not just list the\n-interim commits.\n+Please update the resulting commit message, if needed. It should read as a\n+coherent message. In most cases, this means not just listing the interim\n+commits.\n \n-If you have problems with squashing (or other workflows with `git`), you can\n-alternatively enable \"Allow edits from maintainers\" in the right GitHub\n-sidebar and ask for help in the pull request.\n+If you have problems with squashing or other git workflows, you can enable\n+\"Allow edits from maintainers\" in the right-hand sidebar of the GitHub web\n+interface and ask for help in the pull request.\n \n Please refrain from creating several pull requests for the same change.\n Use the pull request that is already open (or was created earlier) to amend\n@@ -287,8 +297,8 @@ In general, all pull requests must:\n \n   - Have a clear use case, fix a demonstrable bug or serve the greater good of\n     the project (for example refactoring for modularisation);\n-  - Be well peer reviewed;\n-  - Have unit tests and functional tests where appropriate;\n+  - Be well peer-reviewed;\n+  - Have unit tests, functional tests, and fuzz tests, where appropriate;\n   - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n   - Not break the existing test suite;\n   - Where bugs are fixed, where possible, there should be unit tests\n@@ -315,7 +325,7 @@ spread out over GitHub, mailing list and IRC discussions).\n #### Conceptual Review\n \n A review can be a conceptual review, where the reviewer leaves a comment\n- * `Concept (N)ACK`, meaning \"I do (not) agree in the general goal of this pull\n+ * `Concept (N)ACK`, meaning \"I do (not) agree with the general goal of this pull\n    request\",\n  * `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n    approach of this change\".\n@@ -325,30 +335,28 @@ NACKs without accompanying reasoning may be disregarded.\n \n #### Code Review\n \n-After conceptual agreement on the change, code review can be provided. It is\n-starting with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the\n-topic branch. The review is followed by a description of how the reviewer did\n-the review. The following\n-language is used within pull-request comments:\n+After conceptual agreement on the change, code review can be provided. A review\n+begins with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the PR\n+branch, followed by a description of how the reviewer did the review. The\n+following language is used within pull request comments:\n \n-  - \"I have tested the code\", involving\n-    change-specific manual testing in addition to running the unit and functional\n-    tests, and in case it is not obvious how the manual testing was done, it should\n-    be described;\n+  - \"I have tested the code\", involving change-specific manual testing in\n+    addition to running the unit, functional, or fuzz tests, and in case it is\n+    not obvious how the manual testing was done, it should be described;\n   - \"I have not tested the code, but I have reviewed it and it looks\n     OK, I agree it can be merged\";\n-  - Nit refers to trivial, often non-blocking issues.\n+  - A \"nit\" refers to a trivial, often non-blocking issue.\n \n Project maintainers reserve the right to weigh the opinions of peer reviewers\n-using common sense judgement and also may weight based on meritocracy: Those\n-that have demonstrated a deeper commitment and understanding towards the project\n-(over time) or have clear domain expertise may naturally have more weight, as\n-one would expect in all walks of life.\n+using common sense judgement and may also weigh based on merit. Reviewers that\n+have demonstrated a deeper commitment and understanding of the project over time\n+or who have clear domain expertise may naturally have more weight, as one would\n+expect in all walks of life.\n \n-Where a patch set affects consensus critical code, the bar will be set much\n+Where a patch set affects consensus-critical code, the bar will be much\n higher in terms of discussion and peer review requirements, keeping in mind that\n mistakes could be very costly to the wider community. This includes refactoring\n-of consensus critical code.\n+of consensus-critical code.\n \n Where a patch set proposes to change the Bitcoin consensus, it must have been\n discussed extensively on the mailing list and IRC, be accompanied by a widely\n@@ -365,7 +373,7 @@ about:\n \n   - It may be because of a feature freeze due to an upcoming release. During this time,\n     only bug fixes are taken into consideration. If your pull request is a new feature,\n-    it will not be prioritized until the release is over. Wait for release.\n+    it will not be prioritized until after the release. Wait for the release.\n   - It may be because the changes you are suggesting do not appeal to people. Rather than\n     nits and critique, which require effort and means they care enough to spend time on your\n     contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n@@ -375,16 +383,18 @@ about:\n     [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n     Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n     their opinion on the concept itself.\n-  - It may be because your code is too complex for all but a few people. And those people\n+  - It may be because your code is too complex for all but a few people, and those people\n     may not have realized your pull request even exists. A great way to find people who\n     are qualified and care about the code you are touching is the\n     [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n-    find the person touching the code you are touching before you and see if you can find\n-    them and give them a nudge. Don't be incessant about the nudging though.\n+    look up who last modified the code you are changing and see if you can find\n+    them and give them a nudge. Don't be incessant about the nudging, though.\n   - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n-    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n-    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n-    when someone else is asking for feedback on their code, and universe balances out.\n+    a look. If you think you've been waiting for an unreasonably long time (say,\n+    more than a month) for no particular reason (a few lines changed, etc.),\n+    this is totally fine. Try to return the favor when someone else is asking\n+    for feedback on their code, and the universe balances out.\n+  - Remember that the best thing you can do while waiting is give review to others!\n \n \n Backporting\n@@ -393,11 +403,11 @@ Backporting\n Security and bug fixes can be backported from `master` to release\n branches.\n If the backport is non-trivial, it may be appropriate to open an\n-additional PR, to backport the change, only after the original PR\n+additional PR to backport the change, but only after the original PR\n has been merged.\n Otherwise, backports will be done in batches and\n the maintainers will use the proper `Needs backport (...)` labels\n-when needed (the original author does not need to worry).\n+when needed (the original author does not need to worry about it).\n \n A backport should contain the following metadata in the commit body:\n "
      }
    ]
  }
]