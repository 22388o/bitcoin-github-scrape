ps1dr3x,2019-05-13 08:51:21,"I just noticed that the function `AddAndGetDestinationForScript`, called by `addmultisigaddress` to calculate the destination, should already do this check (calling `IsSolvable` function) and falling back to legacy, but for some reason it doesn't (`IsSolvable` returns true).  (https://github.com/bitcoin/bitcoin/blob/master/src/outputtype.cpp#L76)\nI'm digging into it",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491735018,491735018,
MarcoFalke,2019-05-13 13:23:02,Be reminded that bugfixes *must* be accompanied by a test that fails before the change and passes after it,https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491820101,491820101,
ps1dr3x,2019-05-13 14:10:21,"Thank you for the reminder @MarcoFalke , I'll add a test soon. I'm just trying to figure out if my current fix is enough or there are any other broken parts in the process, because there's a comment [here](https://github.com/bitcoin/bitcoin/blob/master/src/outputtype.cpp#L88) saying that the use of uncompressed keys should be managed, but apparently it's not",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491838630,491838630,
gmaxwell,2019-05-13 19:23:20,"@MarcoFalke  so, you would prefer we close this fix of a potentially money losing bug if no one felt like adding a test case for trivial functionality?  I couldn't more strongly disagree.",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491952710,491952710,
MarcoFalke,2019-05-13 19:36:39,"So you would prefer to not have a test, so that we can regress on this in the future and cause money loss for users?",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491956871,491956871,
sipa,2019-05-13 19:41:41,"Nothing prevents fixing the bug, and the  separately adding a test. I certainly agree we should have tests for issues discovered in the past, but that doesn't mean there is a strong requirement to have one in the same PR, by the same author.",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491958530,491958530,
gmaxwell,2019-05-13 19:56:38,"@MarcoFalke Perhaps I misunderstood you.  It sounded to me like you were expressing the view that a fix wouldn't be accepted if it was submitted without an automated test, if so I believe that isn't a position that we should take.\n\nIf instead you were just expressing doubt that there was actually a bug here to fix, then I agree. But coming with an automated test is not the bar for determining ",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491963285,491963285,
ps1dr3x,2019-05-13 20:29:55,"This is what I'm trying to understand @gmaxwell  , it doesn't happen `always`:\n\n```\n./bitcoin-cli addmultisigaddress 1 '[""045897fee25bd7c5692510b2f50fcae9aa20fbc4d49d59814f4c7fdb5c4bc6eb1c0ce382458f9588e922e0d509ed8d34856787380075b00418b02e0bf7c652ef9d"",""02ac46c6d74d15e60f4f1035ff07ef740aca1d68d55ba0b8d336a73d7a35858831"",""0224a4dc5620714a9ecf67a09583d1e4c04f5bedb8ecea99028da05bb15a2a7e07""]' ",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491974354,491974354,
gmaxwell,2019-05-13 20:33:44,"Indeed, I just tested further.  It appears to me that it only auto switches to legacy when more than the threshold of keys is uncompressed. 0_o  This is absolutely a bug.\n\n> $ ./bitcoin-cli addmultisigaddress 2 '[""047211a824f55b505228e4c3d5194c1fcfaa15a456abdf37f9b9d97a4040afc073dee6c89064984f03385237d92167c13e236446b417ab79a0fcae412ae3316b77"",""0279BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491975542,491975542,
ps1dr3x,2019-05-13 20:37:47,"I noticed that, and also [this](https://github.com/bitcoin/bitcoin/blob/master/src/outputtype.cpp#L88) comment only after opening the PR, so this commit now seems more like a workaround for a problem which I still don't understand.\n\nI followed the code of the function `AddAndGetDestinationForScript` but I still don't get where/when this fallback happens, and why only few cases are affected.",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491976857,491976857,
achow101,2019-05-13 20:41:44,I believe this affects `createmultisigaddress` as well. A more correct fix would be to change `AddAndGetDestinationForScript` and possibly `ProduceSignature` as well. I can work on a better fix for this when I have time next week.,https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491978168,491978168,
ps1dr3x,2019-05-13 21:00:45,"Maybe is unrelated and I'm missing something stupid because I don't have any experience on the bitcoin test framework, but I'm having some problems even with the test.\nI wrote this simple test in `rpc_createmultisig.py` (because seems there's only one file for both the calls):\n\n```python\n    def do_multisig_fallback_to_legacy(self):\n        self.log.info('Check that addmultisigaddress an",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491984949,491984949,
sdaftuar,2019-05-13 21:30:01,"@ps1dr3x I haven't dived into this but I noticed that your test uses a ""3..."" prefix for the address, but the address encoding for regtest/testnet (which is what we use in our test framework) is different than mainnet, so P2SH addresses will start with a ""2"".",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-491994265,491994265,
ps1dr3x,2019-05-13 22:00:52,"Oh yeah you're right, I didn't thought about that! Thank you @sdaftuar :+1: \n",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-492003199,492003199,
MarcoFalke,2019-05-13 22:02:23,"It is fine if you don't add a test case if it is too hard to get one. I thought this would be a single line added with an assert, but I guess it turned out more involved?",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-492003601,492003601,
ps1dr3x,2019-05-13 22:27:36,"Yes, and at this point maybe that test will not even fit for the real causes @MarcoFalke . I asked mainly because I was experimenting but I'll not commit that, at least before the real causes are discovered :)\n\nAnyway, meanwhile that @achow101 cannot work on this, I'll continue to try getting more information (or hopefully finding possible fixes) on this",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-492009781,492009781,
achow101,2019-05-13 23:30:40,This was simpler than expected. I've opened a PR: #16022,https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-492023169,492023169,
meshcollider,2019-06-18 23:47:12,"Closing in favor of #16026, thank you for your help @ps1dr3x ðŸ˜„ Hope you continue contributing in the future!",https://github.com/bitcoin/bitcoin/pull/16012#issuecomment-503352366,503352366,
