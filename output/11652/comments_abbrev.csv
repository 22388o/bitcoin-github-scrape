practicalswift,2017-11-22T07:40:30Z,Anyone willing to review? :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-346267856,346267856,
practicalswift,2018-01-11T21:14:31Z,@ajtowns @TheBlueMatt Thanks for reviewing! I've now addressed your feedback. Would you mind re-reviewing? :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-357063432,357063432,
MarcoFalke,2018-01-12T23:20:29Z,"General note: Instead of documenting the locking assumptions in the OP of this pull request, wouldn't it be better to put them in the header files? Imo, this increases review efficiency.",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-357381269,357381269,
practicalswift,2018-03-12T23:21:21Z,@MarcoFalke You mean as an interim before we've added `GUARDED_BY(…)` annotations for each guarded variable?,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-372494945,372494945,
MarcoFalke,2018-03-12T23:40:05Z,"No, I meant adding the `GUARDED_BY` to header files whenever possible",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-372498265,372498265,
practicalswift,2018-03-14T18:16:26Z,"@MarcoFalke Sure! New version with `GUARDED_BY` + the implied `EXCLUSIVE_LOCKS_REQUIRED` :-)\n\nCould you please review? :-)",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-373123891,373123891,
practicalswift,2018-03-25T18:16:47Z,"Hrmm, the `i686-w64-mingw32` build seems to timeout for some reason.",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-375991337,375991337,
ryanofsky,2018-03-27T01:16:29Z,"> Hrmm, the i686-w64-mingw32 build seems to timeout for some reason.\n\nShould be fixed by rebasing after #12772",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-376363391,376363391,
practicalswift,2018-03-27T11:09:25Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-376486216,376486216,
ajtowns,2018-03-28T01:13:00Z,"9bd9d9f8302d4cdde2f25f4d7a008f8f0a0ccea2 looks good to me, fwiw, but it needs another rebase anyway to cope with scoped enums.",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-376726757,376726757,
practicalswift,2018-03-28T02:36:12Z,"Rebased!\n\n@ajtowns Thanks for the review. Please re-review :-)",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-376740788,376740788,
practicalswift,2018-04-03T11:37:49Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-378219823,378219823,
practicalswift,2018-04-09T13:38:29Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-379754904,379754904,
practicalswift,2018-04-23T09:02:41Z,"Thanks to @TheBlueMatt's insightful review I've now managed to reduce the size of this PR significantly (by having `LookupBlockIndex` perform `cs_main` locking). Thanks!\n\nPlease re-review :-)\n",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-383505377,383505377,
practicalswift,2018-04-26T04:30:14Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-384509684,384509684,
practicalswift,2018-05-04T14:14:15Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-386614721,386614721,
practicalswift,2018-05-30T03:37:30Z,@MarcoFalke Thanks for reviewing! Now moved to the header file. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-393020021,393020021,
practicalswift,2018-06-07T17:48:58Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-395507721,395507721,
rickblackjr,2018-07-09T23:32:43Z,"\nWhat is this and how to stop getting these constant notifications?\n\n\nSent via the Samsung GALAXY S® 5, an AT&T 4G LTE smartphone\n\n\n-------- Original message --------\nFrom: DrahtBot <notifications@github.com>\nDate: 7/9/18 19:29 (GMT-05:00)\nTo: bitcoin/bitcoin <bitcoin@noreply.github.com>\nCc: Subscribed <subscribed@noreply.github.com>\nSubject: Re: [bitcoin/bitcoin] Add missi",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-403651953,403651953,
practicalswift,2018-07-10T16:42:06Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-403889048,403889048,
practicalswift,2018-07-11T23:14:40Z,@MarcoFalke Thanks for reviewing! Feedback addressed. Let me know if it looks good now. I’ll implement the `validation.cpp` changes into #13083 when the changes introduced here has been reviewed.,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-404339290,404339290,
practicalswift,2018-08-27T22:33:56Z,@MarcoFalke Pushed an updated version. See the latest commit which adds `extern CChain& chainActive GUARDED_BY(cs_main)` (`validation.h`) plus required locking. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-416390743,416390743,
DrahtBot,2018-09-21T13:29:46Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14711](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14711.html) (Remove uses of chainActive and mapBlockInde",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-423531317,423531317,
practicalswift,2018-10-09T04:24:57Z,"Updated!\n\n@ajtowns @TheBlueMatt @MarcoFalke @ryanofsky Please re-review :-)",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-428055210,428055210,
TheBlueMatt,2018-10-10T02:51:22Z,"> Please just put a cs_main at the top of the load-from disk loop thing, there is no reason to lock and unlock cs_main 20 times during single-threaded init.\n\nLooks like you never did this.",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-428420285,428420285,
practicalswift,2018-10-24T08:41:34Z,"@TheBlueMatt Can you confirm that your suggestion is addressed in the latest version? :-)  If not I might need help identifying the ""load-from disk loop thing"" :-)",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-432566584,432566584,
practicalswift,2018-11-06T23:11:07Z,@TheBlueMatt Friendly ping :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-436443361,436443361,
practicalswift,2018-11-27T09:31:49Z,@MarcoFalke I'll do that once my other two open locking PRs #13128 and #13123 have been processed (either merged or closed). I try to limit my work in progress in the form of open pull requests :-),https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-441989417,441989417,
MarcoFalke,2019-01-10T17:15:26Z,I think this can be reopened and rebased.,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453177469,453177469,
practicalswift,2019-01-10T17:35:50Z,"@MarcoFalke I force-pushed before re-opening, so now I'm unable to re-open. Could you re-open? :-)",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453185061,453185061,
MarcoFalke,2019-01-10T17:59:20Z,"I can't force push 7e11716932b8a1f6f1aa2c06e1990b64950a89bc to your branch either, since the pull request is closed.\n\nTry\n\n```\ngit push origin 7e11716932b8a1f6f1aa2c06e1990b64950a89bc:init-and-validation-locks -f\n# reopen\ngit push origin init-and-validation-locks -f",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453192845,453192845,
practicalswift,2019-01-10T18:05:10Z,@MarcoFalke Thanks! Now re-opened and force-pushed. WIP for now.,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453194766,453194766,
practicalswift,2019-01-10T19:12:09Z,"@MarcoFalke I'm a bit unsure how to resolve the locking errors below (see Travis OS X output). Do you have any suggestion?\n\nIf `m_wallet.chain().lock(…)` succeeds then we have acquired `cs_main` and access to `chainActive` should be OK?\n\n```\ninterfaces/wallet.cpp:335:22: error: reading variable 'chainActive' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\n        nu",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453217053,453217053,
MarcoFalke,2019-01-10T19:15:32Z,"The compiler doesn't understand that, though. You'd have to add a temporary annotation or use the interface (c.f. #14711)",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453218246,453218246,
ryanofsky,2019-01-10T19:39:08Z,"re: https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453217053\n\n> I'm a bit unsure how to resolve the locking errors below (see Travis OS X output). Do you have any suggestion?\n\nYou could use the `LockAnnotation` class to resolve these errors. See 081accb875412f38718f2e40ed7bbdf15e6f4ef8 from #14437 for examples. Rebasing on top of #14711 would also resolve them.",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453226382,453226382,
practicalswift,2019-01-10T21:04:18Z,@MarcoFalke Would you mind taking over this PR if it put it up for grabs? At the moment I'm afraid I don't have time to resolve the remaining issues.,https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453253059,453253059,
ryanofsky,2019-01-10T21:31:57Z,"> At the moment I'm afraid I don't have time to resolve the remaining issues.\n\nAre there other issues besides the need for lock annotations in the wallet? If not, we could just treat this PR as blocked until #14711 is merged, since it removes the need for them.",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-453261648,453261648,
practicalswift,2019-01-17T21:33:47Z,"Closing in favour of PR #15191 and #15192. They cover everything in this PR except the `chainActive` locks.\n\nI'll revisit the missing `cs_main` locks required for `chainActive` once #14711 is merged.",https://github.com/bitcoin/bitcoin/pull/11652#issuecomment-455340022,455340022,
ajtowns,2018-01-11T05:33:40Z,"Dropping the ""return false"" doesn't seem right...",https://github.com/bitcoin/bitcoin/pull/11652#discussion_r160868182,160868182,src/validation.cpp
ajtowns,2018-01-11T05:54:36Z,This has moved into CChainState::UnloadBlockIndex.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r160869982,160869982,src/validation.cpp
practicalswift,2018-01-11T07:19:16Z,"Ouch, thanks! Will fix!",https://github.com/bitcoin/bitcoin/pull/11652#discussion_r160879420,160879420,src/validation.cpp
TheBlueMatt,2018-04-17T17:36:46Z,This is incorrect.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r182166460,182166460,src/rpc/blockchain.cpp
TheBlueMatt,2018-04-17T17:37:47Z,You dont have to add a new scope for stuff like this - holding cs_main through an extra line of LogPrintf during init is perfectly fine.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r182166762,182166762,src/validation.cpp
TheBlueMatt,2018-04-17T17:41:46Z,Why the extra scope here? Its during init/deinit so everything is single-threaded anyway.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r182167927,182167927,src/validation.cpp
TheBlueMatt,2018-04-17T17:44:41Z,Can we just take cs_main inside instead of requiring it? Seems like that would massively reduce the diff size here.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r182168816,182168816,src/validation.h
practicalswift,2018-04-23T08:06:15Z,"Oh, thanks. Switching to `UniValue gettxoutsetinfo(const JSONRPCRequest& request) EXCLUSIVE_LOCKS_REQUIRED(cs_main)` instead.",https://github.com/bitcoin/bitcoin/pull/11652#discussion_r183306098,183306098,src/rpc/blockchain.cpp
practicalswift,2018-04-23T08:07:30Z,Fixed!,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r183306449,183306449,src/validation.cpp
practicalswift,2018-04-23T09:00:49Z,Fixed!,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r183320826,183320826,src/validation.cpp
practicalswift,2018-04-23T09:01:01Z,"Oh, very good point! Now fixed!",https://github.com/bitcoin/bitcoin/pull/11652#discussion_r183320885,183320885,src/validation.h
promag,2018-04-23T10:01:38Z,Don't we want to avoid recursive locks?,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r183338620,183338620,src/validation.h
MarcoFalke,2018-05-29T23:44:09Z,Should be in the header file. See #13083,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r191607322,191607322,src/validation.cpp
MarcoFalke,2018-07-10T16:47:07Z,This is incorrect and ignored by clang anyway,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201415803,201415803,src/rpc/blockchain.cpp
MarcoFalke,2018-07-10T16:48:26Z,Unrelated addition?,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201416239,201416239,src/wallet/wallet.h
MarcoFalke,2018-07-10T16:50:02Z,"Those annotations are ignored by clang if they are at the implementation, please add them to where the function signature is defined.",https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201416757,201416757,src/validation.cpp
MarcoFalke,2018-07-10T16:50:32Z,Same here. (this comment holds for all other instances as well),https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201416942,201416942,src/validation.cpp
MarcoFalke,2018-07-10T17:07:56Z,Probably best to fix those in #13083 as well,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201422556,201422556,src/validation.cpp
practicalswift,2018-07-11T20:18:00Z,@MarcoFalke In what way? Doesn’t reading the variable `pcoinsdbview` require holding the mutex `cs_main`?,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201825956,201825956,src/rpc/blockchain.cpp
MarcoFalke,2018-07-11T23:02:43Z,"All the rpc calls are called through function pointers, which breaks clangs static analyser. Clearly there is no way to acquire this lock in the caller of `gettxoutsetinfo`. If the lock is missing, it should be added...",https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201865908,201865908,src/rpc/blockchain.cpp
practicalswift,2018-07-11T23:25:03Z,@TheBlueMatt I’ve now reverted to the original version after @MarcoFalke’s comment in https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201865908. Could you two help me resolve this? Why is it incorrect? Doesn’t reading the variable `pcoinsdbview` require holding the mutex `cs_main`?,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r201869536,201869536,src/rpc/blockchain.cpp
MarcoFalke,2018-07-14T13:49:26Z,Missing `GUARDED_BY(cs_main)`.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r202515527,202515527,src/validation.h
MarcoFalke,2018-07-14T13:49:57Z,Missing annotation for this function,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r202515539,202515539,src/validation.h
MarcoFalke,2018-07-18T13:10:32Z,"Also requires `::mempool.cs` to be held, no?",https://github.com/bitcoin/bitcoin/pull/11652#discussion_r203371634,203371634,src/validation.h
practicalswift,2018-08-27T22:30:44Z,@MarcoFalke Do you mean `GetSpendHeight`? `GetSpendHeight` locks `cs_main` itself :-),https://github.com/bitcoin/bitcoin/pull/11652#discussion_r213135647,213135647,src/validation.h
practicalswift,2018-08-27T22:31:24Z,@MarcoFalke Now fixed. See separate commit.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r213135749,213135749,src/validation.h
practicalswift,2018-08-27T22:32:36Z,@MarcoFalke Due to what access? :-),https://github.com/bitcoin/bitcoin/pull/11652#discussion_r213135961,213135961,src/validation.h
promag,2018-08-27T23:25:14Z,Missing `:-)` in the above comment.,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r213145333,213145333,src/validation.h
MarcoFalke,2018-09-20T20:20:49Z,Why this change?,https://github.com/bitcoin/bitcoin/pull/11652#discussion_r219304795,219304795,src/validation.h
