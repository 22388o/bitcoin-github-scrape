[
  {
    "sha": "9a75d29b6f0d6c4834e451b0fae2200786655a35",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTc1ZDI5YjZmMGQ2YzQ4MzRlNDUxYjBmYWUyMjAwNzg2NjU1YTM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-06-23T14:52:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-09-26T10:57:55Z"
      },
      "message": "devtools: Check for high-entropy ASLR in 64-bit PE executables\n\ncheck_PE_PIE only checked for DYNAMIC_BASE, this is not enough\nfor (secure) ASLR on 64-bit.",
      "tree": {
        "sha": "366138821473a24601ebde9e3abd9a5f79369be1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/366138821473a24601ebde9e3abd9a5f79369be1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a75d29b6f0d6c4834e451b0fae2200786655a35",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a75d29b6f0d6c4834e451b0fae2200786655a35",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a75d29b6f0d6c4834e451b0fae2200786655a35",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a75d29b6f0d6c4834e451b0fae2200786655a35/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08338942b50f915add72156e02a2131310d56e45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08338942b50f915add72156e02a2131310d56e45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08338942b50f915add72156e02a2131310d56e45"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 40,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8271240859601d310f47689c86057e24e66588b4",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 40,
        "deletions": 8,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a75d29b6f0d6c4834e451b0fae2200786655a35/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a75d29b6f0d6c4834e451b0fae2200786655a35/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=9a75d29b6f0d6c4834e451b0fae2200786655a35",
        "patch": "@@ -12,6 +12,7 @@\n \n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+NONFATAL = {'HIGH_ENTROPY_VA'} # checks which are non-fatal for now but only generate a warning\n \n def check_ELF_PIE(executable):\n     '''\n@@ -114,26 +115,50 @@ def check_ELF_Canary(executable):\n \n def get_PE_dll_characteristics(executable):\n     '''\n-    Get PE DllCharacteristics bits\n+    Get PE DllCharacteristics bits.\n+    Returns a tuple (arch,bits) where arch is 'i386:x86-64' or 'i386'\n+    and bits is the DllCharacteristics value.\n     '''\n     p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n+    arch = ''\n+    bits = 0\n     for line in stdout.split('\\n'):\n         tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'architecture:':\n+            arch = tokens[1].rstrip(',')\n         if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            return int(tokens[1],16)\n-    return 0\n+            bits = int(tokens[1],16)\n+    return (arch,bits)\n \n+IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n+IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n+IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n \n-def check_PE_PIE(executable):\n+def check_PE_DYNAMIC_BASE(executable):\n     '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    reqbits = IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n+    return (bits & reqbits) == reqbits\n+\n+# On 64 bit, must support high-entropy 64-bit address space layout randomization in addition to DYNAMIC_BASE\n+# to have secure ASLR.\n+def check_PE_HIGH_ENTROPY_VA(executable):\n+    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    if arch == 'i386:x86-64': \n+        reqbits = IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n+    else: # Unnecessary on 32-bit\n+        assert(arch == 'i386')\n+        reqbits = 0\n+    return (bits & reqbits) == reqbits\n \n def check_PE_NX(executable):\n     '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n \n CHECKS = {\n 'ELF': [\n@@ -143,7 +168,8 @@ def check_PE_NX(executable):\n     ('Canary', check_ELF_Canary)\n ],\n 'PE': [\n-    ('PIE', check_PE_PIE),\n+    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n+    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n     ('NX', check_PE_NX)\n ]\n }\n@@ -168,12 +194,18 @@ def identify_executable(executable):\n                 continue\n \n             failed = []\n+            warning = []\n             for (name, func) in CHECKS[etype]:\n                 if not func(filename):\n-                    failed.append(name)\n+                    if name in NONFATAL:\n+                        warning.append(name)\n+                    else:\n+                        failed.append(name)\n             if failed:\n                 print('%s: failed %s' % (filename, ' '.join(failed)))\n                 retval = 1\n+            if warning:\n+                print('%s: warning %s' % (filename, ' '.join(warning)))\n         except IOError:\n             print('%s: cannot open' % filename)\n             retval = 1"
      }
    ]
  },
  {
    "sha": "62c291596bccca43609e61a01a027e86a81f69b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MmMyOTE1OTZiY2NjYTQzNjA5ZTYxYTAxYTAyN2U4NmE4MWY2OWIy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-06-23T14:54:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-09-26T10:57:55Z"
      },
      "message": "build: supply `-Wl,--high-entropy-va`\n\nThis should enable high-entropy ASLR on 64-bit targets, for better\nmitigation of exploits.",
      "tree": {
        "sha": "9d9c6cdd439d74687a38ae15090122d6164f65eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d9c6cdd439d74687a38ae15090122d6164f65eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62c291596bccca43609e61a01a027e86a81f69b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62c291596bccca43609e61a01a027e86a81f69b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62c291596bccca43609e61a01a027e86a81f69b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62c291596bccca43609e61a01a027e86a81f69b2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a75d29b6f0d6c4834e451b0fae2200786655a35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a75d29b6f0d6c4834e451b0fae2200786655a35",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a75d29b6f0d6c4834e451b0fae2200786655a35"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "44094e8ceea17078c41f827c92f3e4736066c8a9",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62c291596bccca43609e61a01a027e86a81f69b2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62c291596bccca43609e61a01a027e86a81f69b2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=62c291596bccca43609e61a01a027e86a81f69b2",
        "patch": "@@ -488,6 +488,7 @@ if test x$use_hardening != xno; then\n \n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n "
      }
    ]
  }
]