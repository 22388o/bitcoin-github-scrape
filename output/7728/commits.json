[
  {
    "sha": "9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGNhMmQ1OTJkYzIyOGM5ODI3YzJiOGZmM2EzYmFjODUyN2U3Zjlm",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-20T19:22:49Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-04-14T17:25:26Z"
      },
      "message": "Trivial: Fees: Add KB=1000 constant",
      "tree": {
        "sha": "d9fbc263be95f63f89bdcc87ecdd27741c3da5dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9fbc263be95f63f89bdcc87ecdd27741c3da5dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97d0b9889f151449656d6b575f4f864df0f91a80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97d0b9889f151449656d6b575f4f864df0f91a80",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97d0b9889f151449656d6b575f4f864df0f91a80"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "cf754f54f77b740b1316685fff489e431da8ca93",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f",
        "patch": "@@ -16,6 +16,7 @@ typedef int64_t CAmount;\n \n static const CAmount COIN = 100000000;\n static const CAmount CENT = 1000000;\n+static const size_t KB = 1000;\n \n extern const std::string CURRENCY_UNIT;\n \n@@ -37,7 +38,7 @@ inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <=\n class CFeeRate\n {\n private:\n-    CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n+    CAmount nSatoshisPerK; //! unit is satoshis-per-1000-bytes\n public:\n     /** Fee rate of 0 satoshis per kB */\n     CFeeRate() : nSatoshisPerK(0) { }\n@@ -52,7 +53,7 @@ class CFeeRate\n     /**\n      * Return the fee in satoshis for a size of 1000 bytes\n      */\n-    CAmount GetFeePerK() const { return GetFee(1000); }\n+    CAmount GetFeePerK() const { return GetFee(KB); }\n     friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n     friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n     friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }"
      }
    ]
  },
  {
    "sha": "ddca6423f558a5f0d019bc821a28dc8bbe0d16d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGNhNjQyM2Y1NThhNWYwZDAxOWJjODIxYTI4ZGM4YmJlMGQxNmQ3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-20T20:02:15Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-05-20T10:13:45Z"
      },
      "message": "Fees: Tests: Check CFeeRate internal precision in mempool_tests.cpp",
      "tree": {
        "sha": "5a572cf573cad318bd669ac1da1b210619a46e7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a572cf573cad318bd669ac1da1b210619a46e7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9dca2d592dc228c9827c2b8ff3a3bac8527e7f9f"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 11,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d02dc7e4b133e0b83272ec6ddf45ffafa3a4fb5e",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=ddca6423f558a5f0d019bc821a28dc8bbe0d16d7",
        "patch": "@@ -566,11 +566,20 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     BOOST_CHECK_EQUAL(pool.GetMinFee(pool.DynamicMemoryUsage() * 9 / 2).GetFeePerK(), (maxFeeRateRemoved.GetFeePerK() + 1000)/8);\n     // ... with a 1/4 halflife when mempool is < 1/4 its target size\n \n-    SetMockTime(42 + 7*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    unsigned i = 5;\n+    // The current internal CFeeRate precision is KB (1000)\n+    while (pool.GetMinFee(1).GetFeePerK() > (int)(2 * KB)) {\n+        SetMockTime(42 + (++i)*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    }\n+    // test increased stored precision in CFeeRate\n+    SetMockTime(42 + i * CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 1557); // Change this value when changing CFeeRate's internal precision\n+\n+    SetMockTime(42 + (i+1)*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n     BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 1000);\n     // ... but feerate should never drop below 1000\n \n-    SetMockTime(42 + 8*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    SetMockTime(42 + (i+2)*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n     BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 0);\n     // ... unless it has gone all the way to 0 (after getting past 1000/2)\n "
      }
    ]
  },
  {
    "sha": "d5eed84ef76cae48107983e5c3e3f8c71aa654e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWVlZDg0ZWY3NmNhZTQ4MTA3OTgzZTVjM2UzZjhjNzFhYTY1NGUw",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-31T14:38:34Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-05-20T10:13:56Z"
      },
      "message": "Fees: Tests: Check CFeeRate full constructor in amount_tests.cpp",
      "tree": {
        "sha": "e641bb1506ad5c77d1355a450f2922aaf746b570",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e641bb1506ad5c77d1355a450f2922aaf746b570"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5eed84ef76cae48107983e5c3e3f8c71aa654e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5eed84ef76cae48107983e5c3e3f8c71aa654e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5eed84ef76cae48107983e5c3e3f8c71aa654e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5eed84ef76cae48107983e5c3e3f8c71aa654e0/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ddca6423f558a5f0d019bc821a28dc8bbe0d16d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddca6423f558a5f0d019bc821a28dc8bbe0d16d7"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "07cd7a34710353b49cb29e601f8ef6f3fc9bb0e1",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5eed84ef76cae48107983e5c3e3f8c71aa654e0/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5eed84ef76cae48107983e5c3e3f8c71aa654e0/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=d5eed84ef76cae48107983e5c3e3f8c71aa654e0",
        "patch": "@@ -66,6 +66,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     BOOST_CHECK(CFeeRate(CAmount(27), 789) == CFeeRate(34));\n     // Maximum size in bytes, should not crash\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n+\n+    // With full constructor (allows to test internal precission)\n+    feeRate = CFeeRate(1000, KB * 2);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(0), 0);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(1), 1);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB - 1), 499);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB), 500);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB + 1), 500);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB * 2), 1000);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB * 10), 5000);\n+\n+    feeRate = CFeeRate(1000 * 1000, KB * KB * KB);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(0), 0);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(1), 1);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB - 1), 1);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB), 1);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee((KB * 2) - 1), 1); // Lost precision\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB * 2), 2);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB * 10), 10);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee((KB * 10) - 1), 9);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB * 100), 100);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee((KB * KB) - 1), 999);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB * KB), 1000);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee((KB * KB * KB) - 1), 999999);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(KB * KB * KB), 1000000);\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]