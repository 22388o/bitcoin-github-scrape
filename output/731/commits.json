[
  {
    "sha": "56c6e3696d0f8e222395be00f9e532412781b339",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmM2ZTM2OTZkMGY4ZTIyMjM5NWJlMDBmOWU1MzI0MTI3ODFiMzM5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-28T10:14:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-28T10:14:05Z"
      },
      "message": "Fix transaction type in UI: not all tx'es with \"from\"/\"to\" field are necessarily IP tx'es\n\n- Also, prepare for OP_EVAL by calling all transactions without bitcoin address \"SendToOther\"/\"RecvFromOther\",\n (IP tx'es are so rare they can be put together with funky EV_EVAL scripts)",
      "tree": {
        "sha": "0e9a63c0a0e63ca2beafc4e954cb69bcddddc05f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e9a63c0a0e63ca2beafc4e954cb69bcddddc05f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56c6e3696d0f8e222395be00f9e532412781b339",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c6e3696d0f8e222395be00f9e532412781b339",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56c6e3696d0f8e222395be00f9e532412781b339",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c6e3696d0f8e222395be00f9e532412781b339/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "625b56de6491170ad6a2e45c57d974fca6160750",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/625b56de6491170ad6a2e45c57d974fca6160750",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/625b56de6491170ad6a2e45c57d974fca6160750"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 31,
      "deletions": 33
    },
    "files": [
      {
        "sha": "2cd135df344a2258daaa533d552f71ba8789c6c0",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 20,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=56c6e3696d0f8e222395be00f9e532412781b339",
        "patch": "@@ -64,29 +64,30 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                     sub.credit = nUnmatured;\n                 }\n             }\n-            else if (!mapValue[\"from\"].empty() || !mapValue[\"message\"].empty())\n-            {\n-                // Received by IP connection\n-                sub.type = TransactionRecord::RecvFromIP;\n-                if (!mapValue[\"from\"].empty())\n-                    sub.address = mapValue[\"from\"];\n-            }\n             else\n             {\n+                bool foundAddress = false;\n                 // Received by Bitcoin Address\n-                sub.type = TransactionRecord::RecvWithAddress;\n                 BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n                 {\n                     if(wallet->IsMine(txout))\n                     {\n                         CBitcoinAddress address;\n                         if (ExtractAddress(txout.scriptPubKey, address) && wallet->HaveKey(address))\n                         {\n+                            sub.type = TransactionRecord::RecvWithAddress;\n                             sub.address = address.ToString();\n+                            foundAddress = true;\n+                            break;\n                         }\n-                        break;\n                     }\n                 }\n+                if(!foundAddress)\n+                {\n+                    // Received by IP connection, or other non-address transaction like OP_EVAL\n+                    sub.type = TransactionRecord::RecvFromOther;\n+                    sub.address = mapValue[\"from\"];\n+                }\n             }\n             parts.append(sub);\n         }\n@@ -127,21 +128,19 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                         // from a transaction sent back to our own address.\n                         continue;\n                     }\n-                    else if(!mapValue[\"to\"].empty())\n+\n+                    CBitcoinAddress address;\n+                    if (ExtractAddress(txout.scriptPubKey, address))\n                     {\n-                        // Sent to IP\n-                        sub.type = TransactionRecord::SendToIP;\n-                        sub.address = mapValue[\"to\"];\n+                        // Sent to Bitcoin Address\n+                        sub.type = TransactionRecord::SendToAddress;\n+                        sub.address = address.ToString();\n                     }\n                     else\n                     {\n-                        // Sent to Bitcoin Address\n-                        sub.type = TransactionRecord::SendToAddress;\n-                        CBitcoinAddress address;\n-                        if (ExtractAddress(txout.scriptPubKey, address))\n-                        {\n-                            sub.address = address.ToString();\n-                        }\n+                        // Sent to IP, or other non-address transaction like OP_EVAL\n+                        sub.type = TransactionRecord::SendToOther;\n+                        sub.address = mapValue[\"to\"];\n                     }\n \n                     int64 nValue = txout.nValue;"
      },
      {
        "sha": "db06374c44d3eb995a19e2bc4915154b22eb9270",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=56c6e3696d0f8e222395be00f9e532412781b339",
        "patch": "@@ -65,9 +65,9 @@ class TransactionRecord\n         Other,\n         Generated,\n         SendToAddress,\n-        SendToIP,\n+        SendToOther,\n         RecvWithAddress,\n-        RecvFromIP,\n+        RecvFromOther,\n         SendToSelf\n     };\n "
      },
      {
        "sha": "b863546691dab3e29f117a9da23ccc2819d52588",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=56c6e3696d0f8e222395be00f9e532412781b339",
        "patch": "@@ -345,12 +345,11 @@ QString TransactionTableModel::formatTxType(const TransactionRecord *wtx) const\n     {\n     case TransactionRecord::RecvWithAddress:\n         return tr(\"Received with\");\n-    case TransactionRecord::RecvFromIP:\n-        return tr(\"Received from IP\");\n+    case TransactionRecord::RecvFromOther:\n+        return tr(\"Received from\");\n     case TransactionRecord::SendToAddress:\n+    case TransactionRecord::SendToOther:\n         return tr(\"Sent to\");\n-    case TransactionRecord::SendToIP:\n-        return tr(\"Sent to IP\");\n     case TransactionRecord::SendToSelf:\n         return tr(\"Payment to yourself\");\n     case TransactionRecord::Generated:\n@@ -367,10 +366,10 @@ QVariant TransactionTableModel::txAddressDecoration(const TransactionRecord *wtx\n     case TransactionRecord::Generated:\n         return QIcon(\":/icons/tx_mined\");\n     case TransactionRecord::RecvWithAddress:\n-    case TransactionRecord::RecvFromIP:\n+    case TransactionRecord::RecvFromOther:\n         return QIcon(\":/icons/tx_input\");\n     case TransactionRecord::SendToAddress:\n-    case TransactionRecord::SendToIP:\n+    case TransactionRecord::SendToOther:\n         return QIcon(\":/icons/tx_output\");\n     default:\n         return QIcon(\":/icons/tx_inout\");\n@@ -382,12 +381,12 @@ QString TransactionTableModel::formatTxToAddress(const TransactionRecord *wtx, b\n {\n     switch(wtx->type)\n     {\n-    case TransactionRecord::RecvFromIP:\n+    case TransactionRecord::RecvFromOther:\n         return QString::fromStdString(wtx->address);\n     case TransactionRecord::RecvWithAddress:\n     case TransactionRecord::SendToAddress:\n         return lookupAddress(wtx->address, tooltip);\n-    case TransactionRecord::SendToIP:\n+    case TransactionRecord::SendToOther:\n         return QString::fromStdString(wtx->address);\n     case TransactionRecord::SendToSelf:\n     case TransactionRecord::Generated:\n@@ -478,7 +477,7 @@ QVariant TransactionTableModel::txStatusDecoration(const TransactionRecord *wtx)\n QString TransactionTableModel::formatTooltip(const TransactionRecord *rec) const\n {\n     QString tooltip = formatTxStatus(rec) + QString(\"\\n\") + formatTxType(rec);\n-    if(rec->type==TransactionRecord::RecvFromIP || rec->type==TransactionRecord::SendToIP ||\n+    if(rec->type==TransactionRecord::RecvFromOther || rec->type==TransactionRecord::SendToOther ||\n        rec->type==TransactionRecord::SendToAddress || rec->type==TransactionRecord::RecvWithAddress)\n     {\n         tooltip += QString(\" \") + formatTxToAddress(rec, true);"
      },
      {
        "sha": "4c357d13799fed127f2c38476a0cd6179d39658c",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c6e3696d0f8e222395be00f9e532412781b339/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=56c6e3696d0f8e222395be00f9e532412781b339",
        "patch": "@@ -71,9 +71,9 @@ TransactionView::TransactionView(QWidget *parent) :\n \n     typeWidget->addItem(tr(\"All\"), TransactionFilterProxy::ALL_TYPES);\n     typeWidget->addItem(tr(\"Received with\"), TransactionFilterProxy::TYPE(TransactionRecord::RecvWithAddress) |\n-                                        TransactionFilterProxy::TYPE(TransactionRecord::RecvFromIP));\n+                                        TransactionFilterProxy::TYPE(TransactionRecord::RecvFromOther));\n     typeWidget->addItem(tr(\"Sent to\"), TransactionFilterProxy::TYPE(TransactionRecord::SendToAddress) |\n-                                  TransactionFilterProxy::TYPE(TransactionRecord::SendToIP));\n+                                  TransactionFilterProxy::TYPE(TransactionRecord::SendToOther));\n     typeWidget->addItem(tr(\"To yourself\"), TransactionFilterProxy::TYPE(TransactionRecord::SendToSelf));\n     typeWidget->addItem(tr(\"Mined\"), TransactionFilterProxy::TYPE(TransactionRecord::Generated));\n     typeWidget->addItem(tr(\"Other\"), TransactionFilterProxy::TYPE(TransactionRecord::Other));"
      }
    ]
  }
]