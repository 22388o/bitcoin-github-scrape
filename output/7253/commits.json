[
  {
    "sha": "0d595894f028248a1a1b00491dad95320844c685",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDU5NTg5NGYwMjgyNDhhMWExYjAwNDkxZGFkOTUzMjA4NDRjNjg1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-25T13:12:37Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-25T13:15:01Z"
      },
      "message": "Bugfix: update-translations: Allow numerus translations to omit %n specifier (usually when it only has one possible value)",
      "tree": {
        "sha": "2e0247f1075f4280ffe45793a518dbba035c0341",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e0247f1075f4280ffe45793a518dbba035c0341"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d595894f028248a1a1b00491dad95320844c685",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d595894f028248a1a1b00491dad95320844c685",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d595894f028248a1a1b00491dad95320844c685",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d595894f028248a1a1b00491dad95320844c685/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da59f283350343a623820fa9ea48dd1ebb817064",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da59f283350343a623820fa9ea48dd1ebb817064",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da59f283350343a623820fa9ea48dd1ebb817064"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3e34b339714888027b9a39f60c99ad6d6a3ef9c9",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d595894f028248a1a1b00491dad95320844c685/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d595894f028248a1a1b00491dad95320844c685/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=0d595894f028248a1a1b00491dad95320844c685",
        "patch": "@@ -70,18 +70,21 @@ def sanitize_string(s):\n     '''Sanitize string for printing'''\n     return s.replace('\\n',' ')\n \n-def check_format_specifiers(source, translation, errors):\n+def check_format_specifiers(source, translation, errors, numerus):\n     source_f = split_format_specifiers(find_format_specifiers(source))\n     # assert that no source messages contain both Qt and strprintf format specifiers\n     # if this fails, go change the source as this is hacky and confusing!\n     assert(not(source_f[0] and source_f[1]))\n     try:\n         translation_f = split_format_specifiers(find_format_specifiers(translation))\n     except IndexError:\n-        errors.append(\"Parse error in translation '%s'\" % sanitize_string(translation))\n+        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n         return False\n     else:\n         if source_f != translation_f:\n+            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n+                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n+                return True\n             errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n             return False\n     return True\n@@ -148,7 +151,7 @@ def postprocess_translations(reduce_diff_hacks=False):\n                     if translation is None:\n                         continue\n                     errors = []\n-                    valid = check_format_specifiers(source, translation, errors)\n+                    valid = check_format_specifiers(source, translation, errors, numerus)\n \n                     for error in errors:\n                         print('%s: %s' % (filename, error))"
      }
    ]
  }
]