DrahtBot,2019-11-24 23:53:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18647 (rpc: remove g_rpc_node & g_rpc_chain by brakmic)\n\nIf you consider this pull request important, please also help ",https://github.com/bitcoin/bitcoin/pull/17579#issuecomment-557942635,557942635,
andrewtoth,2020-01-25 01:27:43,@theStack thank you for the review. I've addressed all comments.,https://github.com/bitcoin/bitcoin/pull/17579#issuecomment-578362213,578362213,
sipa,2020-03-27 03:27:49,"utACK 4111967281a37cfe0d34802a80dba0715bfe3ffb\n\nNice cleanup, and also nice to hoist the DepthInMainChain check out of the inner loop.\n\nOptionally, since this is more than a pure code move, some of the variable names/comments could be improved as well (the ""addresses"" variable name, as well as the comment referring to pubkeys are outdated).",https://github.com/bitcoin/bitcoin/pull/17579#issuecomment-604795680,604795680,
MarcoFalke,2019-11-24 22:38:32,"style-nit: Instead of returning an UniValue, I'd prefer to return a `CAmount`, so that (if needed) the function can also be called from unit tests easily.",https://github.com/bitcoin/bitcoin/pull/17579#discussion_r349952741,349952741,src/wallet/rpcwallet.cpp
andrewtoth,2019-11-25 23:12:04,Done,https://github.com/bitcoin/bitcoin/pull/17579#discussion_r350471066,350471066,src/wallet/rpcwallet.cpp
andrewtoth,2019-11-27 00:21:30,@MarcoFalke can you expand on how returning `CAmount` makes it easier to test? Is it due to not having `UniValue` as a dependency? In that case I should remove `UniValue` as a parameter as well.,https://github.com/bitcoin/bitcoin/pull/17579#discussion_r351043470,351043470,src/wallet/rpcwallet.cpp
andrewtoth,2019-12-02 20:56:59,"This uses the multiple address case, used by `getreceivedbylabel`, and the singular case used by `getreceivedbyaddress` is no longer needed.",https://github.com/bitcoin/bitcoin/pull/17579#discussion_r352824275,352824275,src/wallet/rpcwallet.cpp
theStack,2020-01-23 23:08:32,Variable naming: s/`wallet`/`pwallet` (see e.g. `ListReceived()` and `SendMoney()` in the same file) to be more consistent,https://github.com/bitcoin/bitcoin/pull/17579#discussion_r370402737,370402737,src/wallet/rpcwallet.cpp
theStack,2020-01-23 23:10:18,nit: Remove extra space after `return`,https://github.com/bitcoin/bitcoin/pull/17579#discussion_r370403279,370403279,src/wallet/rpcwallet.cpp
theStack,2020-01-23 23:15:47,"More a matter of taste, but this could simply be put in the `if` condition above and without an extra variable (that is used only once anyway)? Like\n```\nif (wtx.IsCoinBase() || !locked_chain.checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n    continue;\n}\n```",https://github.com/bitcoin/bitcoin/pull/17579#discussion_r370405036,370405036,src/wallet/rpcwallet.cpp
theStack,2020-01-23 23:21:17,nit: put `/* by_label */` before boolean parameter `false` to increase readability.,https://github.com/bitcoin/bitcoin/pull/17579#discussion_r370406635,370406635,src/wallet/rpcwallet.cpp
theStack,2020-01-23 23:21:40,nit: put `/* by_label */` before boolean parameter `true` to increase readability.,https://github.com/bitcoin/bitcoin/pull/17579#discussion_r370406744,370406744,src/wallet/rpcwallet.cpp
MarcoFalke,2020-03-27 16:24:36,"```suggestion\nstatic CAmount GetReceived(interfaces::Chain::Lock& locked_chain, const CWallet& wallet, const UniValue& params, bool by_label) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n```",https://github.com/bitcoin/bitcoin/pull/17579#discussion_r399386787,399386787,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-20 14:15:25,"```suggestion\n    const int min_depth{params[1].isNull() ? 1 : params[1].get_int()};\n```\n\ncan be written shorter",https://github.com/bitcoin/bitcoin/pull/17579#discussion_r411413645,411413645,src/wallet/rpcwallet.cpp
