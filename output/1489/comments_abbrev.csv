luke-jr,2012-06-21T21:23:36Z,Neither getwork nor getmemorypool should be even trying to call CreateNewBlock in parallel... they cache its results.\n\n(Not that there's anything wrong with this  optimization.)\n,https://github.com/bitcoin/bitcoin/pull/1489#issuecomment-6494845,6494845,
jgarzik,2012-06-21T22:18:31Z,The former does not follow from the latter.\n,https://github.com/bitcoin/bitcoin/pull/1489#issuecomment-6496026,6496026,
luke-jr,2012-06-21T22:49:38Z,"@jgarzik There should be a mutex on the cache, so I'm not sure how you'd get into CreateNewBlock concurrently. Unless you're thinking of getwork and getmemorypool at the same time, but I can't think of any reason to support that...\n",https://github.com/bitcoin/bitcoin/pull/1489#issuecomment-6496621,6496621,
luke-jr,2012-06-21T23:50:40Z,"This also conflicts with #1240 as-is: can copyFinal return map<uint256, CTransaction> instead?\n",https://github.com/bitcoin/bitcoin/pull/1489#issuecomment-6497558,6497558,
jgarzik,2012-06-21T23:51:18Z,"The cache is only accessed when you think it would be accessed: quickly upon read, or after building a block.  The cache's lock need not be held while building a new block.\n",https://github.com/bitcoin/bitcoin/pull/1489#issuecomment-6497564,6497564,
luke-jr,2012-06-22T00:00:21Z,"IMO, it's better to hold it while building a new block: instead of having 20 parallel CreateNewBlock running at potentially 1/20th the speed each for no benefit, you get a single one that finishes in 1/20th the time and the rest use the cached value from...\n",https://github.com/bitcoin/bitcoin/pull/1489#issuecomment-6497691,6497691,
jgarzik,2012-06-27T15:51:33Z,"Closing, not enough interest.  It remains a valid technique if we want to explore this avenue in the future.\n",https://github.com/bitcoin/bitcoin/pull/1489#issuecomment-6607226,6607226,
