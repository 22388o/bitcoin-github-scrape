[
  {
    "sha": "31603fe438c25ab5e4f899276b00b25b8ebab326",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTYwM2ZlNDM4YzI1YWI1ZTRmODk5Mjc2YjAwYjI1YjhlYmFiMzI2",
    "commit": {
      "author": {
        "name": "Jeremy Rubin",
        "email": "j@rubin.io",
        "date": "2020-08-18T06:26:28Z"
      },
      "committer": {
        "name": "Jeremy Rubin",
        "email": "j@rubin.io",
        "date": "2021-07-30T15:59:50Z"
      },
      "message": "Convert net std::list buffers to std::forward_list and track last element\n\nCo-authored-by: joshiaastha <joshiaastha6@gmail.com>",
      "tree": {
        "sha": "ad452a6719c5f22172400e33d5e441cf5ca82637",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad452a6719c5f22172400e33d5e441cf5ca82637"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31603fe438c25ab5e4f899276b00b25b8ebab326",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31603fe438c25ab5e4f899276b00b25b8ebab326",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31603fe438c25ab5e4f899276b00b25b8ebab326",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31603fe438c25ab5e4f899276b00b25b8ebab326/comments",
    "author": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b1fb50def0dea0cd320bc43c12d9a12edde0390",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b1fb50def0dea0cd320bc43c12d9a12edde0390",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b1fb50def0dea0cd320bc43c12d9a12edde0390"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 23,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b995b5cd8fcb109215f2a9c51356cc7d0474c903",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31603fe438c25ab5e4f899276b00b25b8ebab326/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31603fe438c25ab5e4f899276b00b25b8ebab326/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=31603fe438c25ab5e4f899276b00b25b8ebab326",
        "patch": "@@ -659,7 +659,7 @@ bool CNode::ReceiveMsgBytes(Span<const uint8_t> msg_bytes, bool& complete)\n             i->second += result->m_raw_message_size;\n \n             // push the message to the process queue,\n-            vRecvMsg.push_back(std::move(*result));\n+            m_recv_msg_most_recent = vRecvMsg.insert_after(m_recv_msg_most_recent, std::move(*result));\n \n             complete = true;\n         }\n@@ -1577,14 +1577,18 @@ void CConnman::SocketHandler()\n                 if (notify) {\n                     size_t nSizeAdded = 0;\n                     auto it(pnode->vRecvMsg.begin());\n-                    for (; it != pnode->vRecvMsg.end(); ++it) {\n+                    // it2 will hold the before end iterator.\n+                    auto it2 = it;\n+                    for (; it != pnode->vRecvMsg.end(); it2 = it++) {\n                         // vRecvMsg contains only completed CNetMessage\n                         // the single possible partially deserialized message are held by TransportDeserializer\n                         nSizeAdded += it->m_raw_message_size;\n                     }\n                     {\n                         LOCK(pnode->cs_vProcessMsg);\n-                        pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                        pnode->vProcessMsg.splice_after(pnode->m_process_msg_most_recent, pnode->vRecvMsg, pnode->vRecvMsg.before_begin(), it);\n+                        pnode->m_process_msg_most_recent = it2;\n+                        pnode->m_recv_msg_most_recent = pnode->vRecvMsg.before_begin();\n                         pnode->nProcessQueueSize += nSizeAdded;\n                         pnode->fPauseRecv = pnode->nProcessQueueSize > nReceiveFloodSize;\n                     }\n@@ -2984,6 +2988,8 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, SOCKET hSocketIn, const\n       m_conn_type(conn_type_in),\n       nLocalServices(nLocalServicesIn)\n {\n+    m_recv_msg_most_recent = vRecvMsg.before_begin();\n+    m_process_msg_most_recent = vProcessMsg.before_begin();\n     if (inbound_onion) assert(conn_type_in == ConnectionType::INBOUND);\n     hSocket = hSocketIn;\n     addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;"
      },
      {
        "sha": "d16cb23d1791f4e45f7a08d499454b3a38fc3748",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31603fe438c25ab5e4f899276b00b25b8ebab326/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31603fe438c25ab5e4f899276b00b25b8ebab326/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=31603fe438c25ab5e4f899276b00b25b8ebab326",
        "patch": "@@ -37,6 +37,7 @@\n #include <optional>\n #include <thread>\n #include <vector>\n+#include <forward_list>\n \n class CScheduler;\n class CNode;\n@@ -414,7 +415,8 @@ class CNode\n     Mutex cs_vRecv;\n \n     RecursiveMutex cs_vProcessMsg;\n-    std::list<CNetMessage> vProcessMsg GUARDED_BY(cs_vProcessMsg);\n+    std::forward_list<CNetMessage> vProcessMsg GUARDED_BY(cs_vProcessMsg);\n+    std::forward_list<CNetMessage>::iterator m_process_msg_most_recent GUARDED_BY(cs_vProcessMsg);\n     size_t nProcessQueueSize{0};\n \n     RecursiveMutex cs_sendProcessing;\n@@ -693,7 +695,8 @@ class CNode\n     //! service advertisements.\n     const ServiceFlags nLocalServices;\n \n-    std::list<CNetMessage> vRecvMsg;  // Used only by SocketHandler thread\n+    std::forward_list<CNetMessage> vRecvMsg;  // Used only by SocketHandler thread\n+    std::forward_list<CNetMessage>::iterator m_recv_msg_most_recent;\n \n     mutable RecursiveMutex cs_addrName;\n     std::string addrName GUARDED_BY(cs_addrName);"
      },
      {
        "sha": "08f666e2b6f46fb2b0ea607101211bee988e479b",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31603fe438c25ab5e4f899276b00b25b8ebab326/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31603fe438c25ab5e4f899276b00b25b8ebab326/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=31603fe438c25ab5e4f899276b00b25b8ebab326",
        "patch": "@@ -4035,12 +4035,14 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     // Don't bother if send buffer is too full to respond anyway\n     if (pfrom->fPauseSend) return false;\n \n-    std::list<CNetMessage> msgs;\n+    std::forward_list<CNetMessage> msgs;\n     {\n         LOCK(pfrom->cs_vProcessMsg);\n         if (pfrom->vProcessMsg.empty()) return false;\n         // Just take one message\n-        msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n+        msgs.splice_after(msgs.before_begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.before_begin());\n+        if (pfrom->vProcessMsg.empty())\n+            pfrom->m_process_msg_most_recent = pfrom->vProcessMsg.before_begin();\n         pfrom->nProcessQueueSize -= msgs.front().m_raw_message_size;\n         pfrom->fPauseRecv = pfrom->nProcessQueueSize > m_connman.GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();"
      },
      {
        "sha": "6231a2ace6a19d267d046dfb29708942636a706a",
        "filename": "src/test/util/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31603fe438c25ab5e4f899276b00b25b8ebab326/src/test/util/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31603fe438c25ab5e4f899276b00b25b8ebab326/src/test/util/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/net.cpp?ref=31603fe438c25ab5e4f899276b00b25b8ebab326",
        "patch": "@@ -16,14 +16,17 @@ void ConnmanTestMsg::NodeReceiveMsgBytes(CNode& node, Span<const uint8_t> msg_by\n     if (complete) {\n         size_t nSizeAdded = 0;\n         auto it(node.vRecvMsg.begin());\n-        for (; it != node.vRecvMsg.end(); ++it) {\n+        auto it2 = it;\n+        for (; it != node.vRecvMsg.end(); it2 = it++) {\n             // vRecvMsg contains only completed CNetMessage\n             // the single possible partially deserialized message are held by TransportDeserializer\n             nSizeAdded += it->m_raw_message_size;\n         }\n         {\n             LOCK(node.cs_vProcessMsg);\n-            node.vProcessMsg.splice(node.vProcessMsg.end(), node.vRecvMsg, node.vRecvMsg.begin(), it);\n+            node.vProcessMsg.splice_after(node.m_process_msg_most_recent, node.vRecvMsg, node.vRecvMsg.before_begin(), it);\n+            node.m_process_msg_most_recent = it2;\n+            node.m_recv_msg_most_recent = node.vRecvMsg.before_begin();\n             node.nProcessQueueSize += nSizeAdded;\n             node.fPauseRecv = node.nProcessQueueSize > nReceiveFloodSize;\n         }"
      }
    ]
  }
]