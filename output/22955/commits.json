[
  {
    "sha": "fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM2NmQwYTM5Y2IwYjRiYzU2NWI1NzA4N2JhODRkZDkzMmU5YjZk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-12T09:03:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-12T10:13:58Z"
      },
      "message": "test: Simplify p2p_blocksonly test with new miniwallet rescan_utxos method",
      "tree": {
        "sha": "09620ee11e4341d746599da50679488c343d2d4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09620ee11e4341d746599da50679488c343d2d4d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiq4wv9Ennjlk3VBPBdqjx9ToeZURqO+Ipuu31D7LYOwtPqGDvIDg2VWB5Wmzs+\njz8s9tVcBUQoK+MwgfAcBaqaLG/AiAcAKwim8iY1N7YKfiVFVqQag4wGoIwHXPes\n6F7hmkhK3Sp19QqpdflRAxds7EpvYFxD3jwXKm8FrNEzBR+xo97sDaniVk+m2Pz7\nxZD3C7tozxh6suoWXfCzvPjM5iKbARFxPUr+WvLCWnB6t7qIWLLW3WeLbHV5fWXL\nmXKF6JSHrRzVtqDFVm1Tn8KMdCfwmsrzW6shgR/15/bRlW9mk+KTxi1cAqrPKZ2+\n53cctp0uEXleOALfY/JSQYtA/OjOupBf/2xPLISMPzcBXAlT1zNfrCQTqxq7kLu/\nLLiShkk6tppIMAWJ714V5+75VcRXEkWEqWTltmJWrDk847f7yDANtf40ERnKfPJn\nCedV85QH9/Q4fGRG+Kffv+QB0ZHSP2iFeZzDj4nO8r1aNb5VjFO9aJaPqhGivblX\nJDZQ0Fyo\n=d23V\n-----END PGP SIGNATURE-----",
        "payload": "tree 09620ee11e4341d746599da50679488c343d2d4d\nparent 053a5fc7d912d597cd6dc7376b479420d1eae1c0\nauthor MarcoFalke <falke.marco@gmail.com> 1631437436 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1631441638 +0200\n\ntest: Simplify p2p_blocksonly test with new miniwallet rescan_utxos method\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "053a5fc7d912d597cd6dc7376b479420d1eae1c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/053a5fc7d912d597cd6dc7376b479420d1eae1c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/053a5fc7d912d597cd6dc7376b479420d1eae1c0"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 12,
      "deletions": 9
    },
    "files": [
      {
        "sha": "774f3744f655d11ed2f410e9ec7a8dc671082ae8",
        "filename": "test/functional/p2p_blocksonly.py",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d/test/functional/p2p_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d/test/functional/p2p_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blocksonly.py?ref=fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
        "patch": "@@ -6,7 +6,6 @@\n \n import time\n \n-from test_framework.blocktools import COINBASE_MATURITY\n from test_framework.messages import msg_tx\n from test_framework.p2p import P2PInterface, P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n@@ -16,15 +15,13 @@\n \n class P2PBlocksOnly(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n         self.num_nodes = 1\n         self.extra_args = [[\"-blocksonly\"]]\n \n     def run_test(self):\n         self.miniwallet = MiniWallet(self.nodes[0])\n         # Add enough mature utxos to the wallet, so that all txs spend confirmed coins\n-        self.generate(self.miniwallet, 2)\n-        self.generate(self.nodes[0], COINBASE_MATURITY)\n+        self.miniwallet.rescan_utxos()\n \n         self.blocksonly_mode_tests()\n         self.blocks_relay_conn_tests()\n@@ -83,7 +80,7 @@ def blocks_relay_conn_tests(self):\n         # Ensure we disconnect if a block-relay-only connection sends us a transaction\n         self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"block-relay-only\")\n         assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n-        _, txid, _, tx_hex = self.check_p2p_tx_violation(index=2)\n+        _, txid, _, tx_hex = self.check_p2p_tx_violation()\n \n         self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n         conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n@@ -96,11 +93,9 @@ def blocks_relay_conn_tests(self):\n         conn.sync_send_with_ping()\n         assert(int(txid, 16) not in conn.get_invs())\n \n-    def check_p2p_tx_violation(self, index=1):\n+    def check_p2p_tx_violation(self):\n         self.log.info('Check that txs from P2P are rejected and result in disconnect')\n-        input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(index), 2)['tx'][0]['txid']\n-        utxo_to_spend = self.miniwallet.get_utxo(txid=input_txid)\n-        spendtx = self.miniwallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_to_spend)\n+        spendtx = self.miniwallet.create_self_transfer(from_node=self.nodes[0])\n \n         with self.nodes[0].assert_debug_log(['transaction sent in violation of protocol peer=0']):\n             self.nodes[0].p2ps[0].send_message(msg_tx(spendtx['tx']))"
      },
      {
        "sha": "08086bc0b98295bef1e0d193ba6cfccc7b57c8dd",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
        "patch": "@@ -79,6 +79,14 @@ def __init__(self, test_node, *, mode=MiniWalletMode.ADDRESS_OP_TRUE):\n             self._address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n             self._scriptPubKey = bytes.fromhex(self._test_node.validateaddress(self._address)['scriptPubKey'])\n \n+    def rescan_utxos(self):\n+        \"\"\"Drop all utxos and rescan the utxo set\"\"\"\n+        self._utxos = []\n+        res = self._test_node.scantxoutset(action=\"start\", scanobjects=[f'raw({self._scriptPubKey.hex()})'])\n+        assert_equal(True, res['success'])\n+        for utxo in res['unspents']:\n+            self._utxos.append({'txid': utxo['txid'], 'vout': utxo['vout'], 'value': utxo['amount']})\n+\n     def scan_blocks(self, *, start=1, num):\n         \"\"\"Scan the blocks for self._address outputs and add them to self._utxos\"\"\"\n         for i in range(start, start + num):"
      }
    ]
  },
  {
    "sha": "fa66a7d732f9fd60d72f22087f0d5aadf3064bfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTY2YTdkNzMyZjlmZDYwZDcyZjIyMDg3ZjBkNWFhZGYzMDY0YmZi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-11T08:02:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-12T10:53:50Z"
      },
      "message": "p2p: Rename fBlocksOnly, Add test\n\nThe new name describes better what the bool does and also limits the confusion of the three different concepts:\n* fBlocksOnly (This bool to skip tx invs)\n* -blocksonly (A setting to ignore incoming txs)\n* block-relay-only (A connection type in the block-relay-only P2P graph)",
      "tree": {
        "sha": "d718a28d79abd92fc77315e184e1162b9f7d1c3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d718a28d79abd92fc77315e184e1162b9f7d1c3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg4+gv/QfqpUrUPEzs/ydR8vRs4UJWWwZr1GyuGX+t5v4LzjiEvYeJRKdetF7qW\nMVS0SJCQQZo55IVNvg6bHNZlxwdJDRyefyoNKXKGKOECyemLDUrSEzsOv3h0maYq\ncvC9wFnhYCCDya1Eijuhu92ghknSHB0Ikw+2xLgaOVCCQANveMuYCmlfi0OaXJd/\ngieoUyV7xb2RnvYOg/AtB9GUZQ51yjP9ePNkqGUSyEWhLDNFQNP8GvyD0eilteUN\nCwi2ue3JtKglbWGi0SL2ofJJIylzPNIXSnRr3D8PgMMlY1EuiTxWx0Pqf9fctYRT\n6XeSGy/6LEeh6OsVn2bI8hvoewnn/I2Rj1DcxkrJe629O97pbuXkFwDIEkd30PVt\nAfODrLNPb+Spl5hc5vgwKxTljKBYWJEOR/V8ySTDk/O0thFZzrgTSv7Xe+BNDeY8\nC9sLM3h58/q11y/gGJpWg4lncNsjKxxcXSISCRHYEq5EBznQsmzIzaZROKMBf8zd\nBHuIW/kc\n=9PUh\n-----END PGP SIGNATURE-----",
        "payload": "tree d718a28d79abd92fc77315e184e1162b9f7d1c3a\nparent fac66d0a39cb0b4bc565b57087ba84dd932e9b6d\nauthor MarcoFalke <falke.marco@gmail.com> 1631347322 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1631444030 +0200\n\np2p: Rename fBlocksOnly, Add test\n\nThe new name describes better what the bool does and also limits the confusion of the three different concepts:\n* fBlocksOnly (This bool to skip tx invs)\n* -blocksonly (A setting to ignore incoming txs)\n* block-relay-only (A connection type in the block-relay-only P2P graph)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac66d0a39cb0b4bc565b57087ba84dd932e9b6d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 13,
      "deletions": 6
    },
    "files": [
      {
        "sha": "80655c61e7989d00d8d3738ab1a2c0d166303318",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa66a7d732f9fd60d72f22087f0d5aadf3064bfb",
        "patch": "@@ -2909,13 +2909,13 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             return;\n         }\n \n-        // We won't accept tx inv's if we're in blocks-only mode, or this is a\n+        // Reject tx INVs when the -blocksonly setting is enabled, or this is a\n         // block-relay-only peer\n-        bool fBlocksOnly = m_ignore_incoming_txs || (pfrom.m_tx_relay == nullptr);\n+        bool reject_tx_invs{m_ignore_incoming_txs || (pfrom.m_tx_relay == nullptr)};\n \n         // Allow peers with relay permission to send data other than blocks in blocks only mode\n         if (pfrom.HasPermission(NetPermissionFlags::Relay)) {\n-            fBlocksOnly = false;\n+            reject_tx_invs = false;\n         }\n \n         LOCK(cs_main);\n@@ -2954,7 +2954,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n \n                 pfrom.AddKnownTx(inv.hash);\n-                if (fBlocksOnly) {\n+                if (reject_tx_invs) {\n                     LogPrint(BCLog::NET, \"transaction (%s) inv sent in violation of protocol, disconnecting peer=%d\\n\", inv.hash.ToString(), pfrom.GetId());\n                     pfrom.fDisconnect = true;\n                     return;"
      },
      {
        "sha": "94ae758d461d5701bd6eed8bef5f06c5d4d22a0b",
        "filename": "test/functional/p2p_blocksonly.py",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb/test/functional/p2p_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa66a7d732f9fd60d72f22087f0d5aadf3064bfb/test/functional/p2p_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blocksonly.py?ref=fa66a7d732f9fd60d72f22087f0d5aadf3064bfb",
        "patch": "@@ -6,7 +6,7 @@\n \n import time\n \n-from test_framework.messages import msg_tx\n+from test_framework.messages import msg_tx, msg_inv, CInv, MSG_WTX\n from test_framework.p2p import P2PInterface, P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n@@ -33,12 +33,19 @@ def blocksonly_mode_tests(self):\n         self.nodes[0].add_p2p_connection(P2PInterface())\n         tx, txid, wtxid, tx_hex = self.check_p2p_tx_violation()\n \n+        self.log.info('Check that tx invs also violate the protocol')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        with self.nodes[0].assert_debug_log(['transaction (0000000000000000000000000000000000000000000000000000000000001234) inv sent in violation of protocol, disconnecting peer']):\n+            self.nodes[0].p2ps[0].send_message(msg_inv([CInv(t=MSG_WTX, h=0x1234)]))\n+            self.nodes[0].p2ps[0].wait_for_disconnect()\n+            del self.nodes[0].p2ps[0]\n+\n         self.log.info('Check that txs from rpc are not rejected and relayed to other peers')\n         tx_relay_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n         assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], True)\n \n         assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n-        with self.nodes[0].assert_debug_log(['received getdata for: wtx {} peer=1'.format(wtxid)]):\n+        with self.nodes[0].assert_debug_log(['received getdata for: wtx {} peer'.format(wtxid)]):\n             self.nodes[0].sendrawtransaction(tx_hex)\n             tx_relay_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)"
      }
    ]
  }
]