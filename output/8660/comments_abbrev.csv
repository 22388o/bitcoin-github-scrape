dcousens,2016-09-04T05:23:35Z,"It's not overly complicated to maintain this index outside of `bitcoind`,   IMHO,  that is where it should be.   Perhaps `indexd` or some other service.\n~~Concept NACK~~\n\n**edit**: See https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-246633598\n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244585017,244585017,
luke-jr,2016-09-04T05:24:44Z,NACK. Txouts are not associated with addresses at all.\n,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244585044,244585044,
paveljanik,2016-09-04T06:47:42Z,"@luke-jr They are, but this association is not useful for 99.9% `bitcoind` users. And it slows down the normal work used by 100% of `bitcoind` users. So NACK.\n\nIf people need this, please contribute some description/work using the external indexing solution into `contrib/`.\n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244587264,244587264,
btcdrak,2016-09-04T12:26:36Z,Concept ACK from me.\n@paveljanik The feature is off by default so it shouldn't slow down anything for normal users.\nOT: If indexes are really considered so bad then `-txindex` should be removed.\n,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244600717,244600717,
djpnewton,2016-09-04T22:25:05Z,The inspiration for this PR is to try and make it easier to build a fully validating wallet that does not use significantly more resources then a full node itself.\n\nIt seems that most (all?) current solutions for building a wallet either involve added trust (SPV or centralized API services) or added resource requirements (bitcore.io needs 8GB RAM and 200GB disk space)\n\nThats the rationale (whi,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244632194,244632194,
luke-jr,2016-09-05T01:30:33Z,"If the RPC was by script (as the internals seem to be) instead of by address, it might make sense.\n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244641363,244641363,
dcousens,2016-09-05T01:59:49Z,"> If people need this, please contribute some description/work using the external indexing solution into contrib/.\n> \n> OT: If indexes are really considered so bad then -txindex should be removed.\n\nIMHO,  that is where `txindex` should be,  at least then it might easy to extend to things like this without adding 1000 SLOC.\n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244643813,244643813,
djpnewton,2016-09-05T03:28:11Z,@luke-jr the RPC accepts both hex encoded script or addresses\n,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244651551,244651551,
jonasschnelli,2016-09-05T07:54:58Z,> The inspiration for this PR is to try and make it easier to build a fully validating wallet that does not use significantly more resources then a full node itself.\n> \n> It seems that most (all?) current solutions for building a wallet either involve added trust (SPV or centralized API services) or added resource requirements (bitcore.io needs 8GB RAM and 200GB disk space)\n\nThese are good poi,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244681319,244681319,
dcousens,2016-09-05T08:22:10Z,"> Was it considered to add the index outside of bitcoin-core? I guess using ZMQ notifications together with REST (or RPC) would work. What would be the downsides or advantages of the ""external"" approach?\n\nAs someone who does this approach,   the only difficulties is ensuring that you handle orphans and forks properly.\nThey do happen enough and cause issues,  so you need to be prepared for the f",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244686846,244686846,
btcdrak,2016-09-05T10:42:03Z,"Indexes are desperately needed, there are quite a few users of my addrindex fork https://github.com/btcdrak/bitcoin/releases that demonstrate this need and there is a steady flow of people finding out about it. This PR is a more lightweight option and I think it should be part of Bitcoin Core in an easily accessible way (i.e. just turn on with a switch+reindex). While I could say add it to my fork",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244716777,244716777,
sipa,2016-09-05T11:00:47Z,"`-txindex` was only added for backward compatibility with the pre-0.8 `getrawtransaction` RPC. I think people who need it should build an external solution. It's inefficient, requires updates all over the place, and doesn't even guarantee consistency when there are reorgs, and is not needed for any of the functions Bitcoin Core provides. The addrindex hack is even worse - it encourages people to b",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244720081,244720081,
jonasschnelli,2016-09-05T11:24:16Z,"Agree with @sipa.\n\nA maybe more scalable way how ""wallet"" (or lets say something like the BWS [bitpay wallet service]) could be built on top of bitcoin core would be:\n- add multiwallet support (something similar like https://github.com/bitcoin/bitcoin/pull/2184)\n- add support for pubkey only wallets (should be relatively trivial, partially solved with the current support for ""watchonly"")\n- ex",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244724149,244724149,
djpnewton,2016-09-05T20:34:32Z,The entire point of running a node is to provide validation for a wallet somewhere. That is what makes a node significant.\n\nIs it actually simple to provide this service outside of bitcoin-core? Are there any projects that manage to do it without duplicating the entire blockchain into their own database? It seems a real shame if we go to the trouble of assembling the UTXO set and cant provide wa,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244808619,244808619,
dcousens,2016-09-06T00:56:25Z,"> Are there any projects that manage to do it without duplicating the entire blockchain into their own database?\n\nOf course,  but this index is not small by any means.  \n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-244826833,244826833,
laanwj,2016-09-13T09:40:48Z,"I think this functionality is very useful. E.g. to get the current balance for an arbitrary address/script.\nMissed this a few times. I think external wallets such as `coinjoin` may find this useful as well.\n- **Sure**, you cannot use this with SPV but the primary reason for Bitcoin Core's existence is to be a full node. Storing the UTXO set comes with that. To be clear SPV mode is by no means th",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-246629305,246629305,
laanwj,2016-09-13T09:45:10Z,>  is bin encoding necessary?\n\nNo it's not necessary - only if there is a straightforward binary representation like for transactions and blocks. You don't have to make up one.\n,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-246630380,246630380,
dcousens,2016-09-13T09:58:36Z,"I wasn't aware this was just for UTXOs,  not txouts _at any point_ in history (aka, a full txout index, similar to the addrindex fork). \n\nlight concept ACK\n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-246633598,246633598,
dexX7,2016-09-13T19:57:54Z,"Concept ACK.\n\nSeveral projects I know of use the addrindex stuff from years ago to derive information about UTXO state, and this is much more elegant.\n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-246804378,246804378,
djpnewton,2016-09-15T10:49:34Z,Ok I converted the RPC tests to python and added some REST tests\n,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-247296272,247296272,
djpnewton,2016-09-17T05:05:01Z,addressed review nits by @MarcoFalke (thank you)\n,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-247749469,247749469,
jmcorgan,2016-09-26T12:09:33Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-249552395,249552395,
btcdrak,2016-12-16T11:05:14Z,needs rebase ,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-267570981,267570981,
gmaxwell,2017-01-02T15:03:28Z,"Concept ACK. Comment, can others provide feeback: I think the argument should be changed to unspentoutputindex or utxoindex or something like that, otherwise it sounds like it indexes everything. Similar for the rpc names.  ",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-269983461,269983461,
droark,2017-01-03T22:02:25Z,"Hmmm. If @djpnewton doesn't pick this up again in the next few days, I'll seriously consider keeping it going.",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-270237816,270237816,
paveljanik,2017-01-05T19:50:31Z,"Needs rebase.\n",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-270739825,270739825,
djpnewton,2017-01-05T22:55:31Z,"rebased\n\nI will start addressing review by @ryanofsky (cheers mate)\n\nAgree with @gmaxwell that naming is confusing, I am thinking about unifying it around ""-utxoindex""",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-270781928,270781928,
MarcoFalke,2017-01-05T23:36:21Z,"> I am thinking about unifying it around ""-utxoindex""\n\nSounds good.",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-270789809,270789809,
btcdrak,2017-01-18T12:19:42Z,needs rebase again.,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-273461245,273461245,
ryanofsky,2017-02-13T18:54:20Z,@djpnewton or @droark have you done more work on this? I'd be happy to help continue the effort on this feature.,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-279485887,279485887,
droark,2017-02-19T01:54:46Z,"@ryanofsky - I hadn't been working on this but I'm happy to run with the ball since the OP seems to have disappeared again. I'll post a new PR once it's up and running.\n\nThanks.",https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-280889534,280889534,
fanquake,2017-02-19T02:14:58Z,Closing this for now then. @droak or @ryanofsky can open a new PR once they've restarted the work.,https://github.com/bitcoin/bitcoin/pull/8660#issuecomment-280890298,280890298,
MarcoFalke,2016-09-04T21:29:21Z,We don't use bash anymore in /rpc-tests\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r77459023,77459023,qa/rpc-tests/txoutsbyaddress.sh
laanwj,2016-09-13T09:43:46Z,"Yes, please look at the existing tests in `qa/rpc-tests`, use the Python framework. Also add the test to `qa/pull-tester/rpc-tests.py` so it gets executed by default.\n",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78527524,78527524,qa/rpc-tests/txoutsbyaddress.sh
dexX7,2016-09-13T20:02:18Z,"My personal preference would be something shorter like `""txoutsindex""`, especially because it really indexes scripts and not addresses.\n",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78633250,78633250,src/init.cpp
djpnewton,2016-09-15T10:50:58Z,Sure I dont see a problem with that\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78936254,78936254,src/init.cpp
MarcoFalke,2016-09-15T10:51:40Z,"Nit: You can put something like the following up a few lines, so the scope is not limited to `setup_network`.\n\n``` py\nself.extra_args = [[""-txoutsbyaddressindex""]] * 3\n```\n",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78936349,78936349,qa/rpc-tests/rest.py
MarcoFalke,2016-09-15T10:53:06Z,Or just `txoutindex` (or `utxoutindex` or `utxoindex`)\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78936504,78936504,src/init.cpp
MarcoFalke,2016-09-15T10:54:53Z,Nit: I think this is not required\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78936946,78936946,qa/rpc-tests/txoutsbyaddress.py
MarcoFalke,2016-09-15T10:56:26Z,"``` py\nself.nodes = start_nodes(3, self.options.tmpdir, self.extra_args)\n```\n\nshould work as well. (You can put `self.extra_args = [['-txoutindex'], []. []]` in `__init__()`)\n",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78937305,78937305,qa/rpc-tests/txoutsbyaddress.py
MarcoFalke,2016-09-15T10:58:13Z,Nit: you can move the `connect_*`s up into `setup_network()`. I think all other tests do this\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78937555,78937555,qa/rpc-tests/txoutsbyaddress.py
MarcoFalke,2016-09-15T10:59:55Z,Why is this required?\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r78937802,78937802,qa/rpc-tests/txoutsbyaddress.py
djpnewton,2016-09-17T04:58:40Z,"argh, paradox of choice!\n\nOk, how about if nobody has any objection I will change the name to ""txoutindex"" (command line parameter, RPC, REST etc)?\n",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r79276298,79276298,src/init.cpp
djpnewton,2016-09-17T05:02:41Z,node 2 is stopped so that later on it can be restarted and then orphan a block created by node 1 (to test txoutindex handles the reorg)\n\nbasically its stopped so I will not build on a block created by node 1\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r79276366,79276366,qa/rpc-tests/txoutsbyaddress.py
MarcoFalke,2016-09-26T14:02:22Z,Missing `+x` permission\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r80481163,80481163,qa/pull-tester/rpc-tests.py
djpnewton,2016-10-01T06:24:12Z,done\n,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r81444915,81444915,qa/pull-tester/rpc-tests.py
ryanofsky,2017-01-04T17:13:16Z,Maybe replace uint160 with CScriptID to make the map type more obvious.,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94623921,94623921,src/coinsbyscript.h
ryanofsky,2017-01-04T17:15:10Z,Could remove if using CScriptID as the map key type.,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94624230,94624230,src/coinsbyscript.h
ryanofsky,2017-01-04T17:22:31Z,Could assign these values inline above with c++11.,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94625475,94625475,src/coinstats.h
ryanofsky,2017-01-04T17:54:23Z,"Shouldn't this be inserting `tmp` into the map, not an empty CCoinsByScript() set?\n\nAlso,\n\n- It would be nice if this code had some basic c++ unit tests similar to coins_tests.cpp, even if they aren't as comprehensive.\n- Don't really need the other temporary `ret` variable here, could just return insert().second.\n- Could replace insert with emplace or emplace_hint here to avoid needing",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94630743,94630743,src/coinsbyscript.cpp
ryanofsky,2017-01-04T18:27:15Z,"could avoid the loop with\n\ncoinsByScript.setCoins.insert(it->second.setCoins.begin(), it->second.setCoins.end());",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94636717,94636717,src/txmempool.cpp
ryanofsky,2017-01-04T18:43:43Z,"Why is this exception being caught instead of passed on to the caller? I'd think it'd be better to remove the catch and have the error propogate up, or add a comment here which explains the cases where std::exception is expected and why they should return 0.",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94639719,94639719,src/txdb.cpp
ryanofsky,2017-01-04T18:57:35Z,"The CTxMemPool constructor saves a const reference to the second argument, so instead of passing literal false, you should pass a variable with a lifetime at least as long as CTxMemPool. Might be better to have the CTxMemPool class just store a bool instead of a reference to a bool to avoid the need to do this.",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94642613,94642613,src/test/mempool_tests.cpp
ryanofsky,2017-01-04T19:28:50Z,Should probably mention this in a comment.,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94648341,94648341,qa/rpc-tests/txoutsbyaddress.py
ryanofsky,2017-01-04T19:34:35Z,Maybe check other txouts fields here as well.,https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94649399,94649399,qa/rpc-tests/txoutsbyaddress.py
ryanofsky,2017-01-04T19:46:01Z,"Could use %z instead of (unsigned int) cast, I think.",https://github.com/bitcoin/bitcoin/pull/8660#discussion_r94651604,94651604,src/coinsbyscript.cpp
