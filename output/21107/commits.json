[
  {
    "sha": "9913419cc9db5f8ce7afa0c3774468c330136064",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTEzNDE5Y2M5ZGI1ZjhjZTdhZmEwYzM3NzQ0NjhjMzMwMTM2MDY0",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-02-08T02:24:50Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-02-08T05:24:44Z"
      },
      "message": "test: remove type: comments in favour of actual annotations\n\nNow that we require Python 3.6+, we should be using variable type\nannotations directly rather than # type: comments.\n\nAlso takes care of the discarded value issue in p2p_message_capture.py.\nSee: https://github.com/bitcoin/bitcoin/pull/19509/files#r571674446.",
      "tree": {
        "sha": "f063b8de6dd2e3e3591910f91a7395a9288b4c7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f063b8de6dd2e3e3591910f91a7395a9288b4c7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9913419cc9db5f8ce7afa0c3774468c330136064",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmAgy34ACgkQLuufXMCV\nJsH8vw//dqJbAHn3UTI9H/Mqjnud7rtlyLYM1DZ+1YTgTtPbhWyHjW+76XTZWTxq\njCorDqBywAicK4cQDPsHggDrMBbn/qXPP0Bif0ME9663kDM/q0BH/1j8E49t8OhO\ncYzAorh9xzFym1vem8VR4sCQcQsn0q56wHwO7QCV0jtv2TrOay2x9XDQ3n2kftWx\nOC78XTgAzRWGOv7h/AIG5e3KBlhnQqm4YLj/pYvPghgieutnXLA30TW5asx71WcW\ngrG/luvBMWJVraTDs0e9nNi4QCU821KKJfFef99APGytXQyqOlMPgCGipFkcxitM\njtAKBdsmLxjuE6QaySXYaV81p/dtVzbo/nl18LlcgibBdQkWJlAX8PtiQVt2Af1R\nzkj+MnPy4G4FV+7/3G/SEkzjvFjK1yjtIUnolocjnmdlbnEHt+g4PdEMG5rEWIye\nJHRmVQOOxNTxVHQcJ6Gnfr/0qtJThhAnNyO0VN+fvQH7HHy1B314megYsbY+fgQ6\naO1t8/1RoUMOy/mkXqcCoSKzzsV8RZBGUoE/jrfYNiE3gReXI7KC2rWKNE76fKDO\nebIBPxtsQsUtcBoD83g3xWmD5QRR4jBmXgO1dQzMdZ8xZMrauiaf+EhQgyW7V8HA\naCScS5JBIZmUkndz3wrnEixhmQPgUuJKZeztbIReppbbw0mnFZo=\n=ENNe\n-----END PGP SIGNATURE-----",
        "payload": "tree f063b8de6dd2e3e3591910f91a7395a9288b4c7c\nparent cf26ca3911f3c9ad1583716075b6dd07b76e3ff0\nauthor fanquake <fanquake@gmail.com> 1612751090 +0800\ncommitter fanquake <fanquake@gmail.com> 1612761884 +0800\n\ntest: remove type: comments in favour of actual annotations\n\nNow that we require Python 3.6+, we should be using variable type\nannotations directly rather than # type: comments.\n\nAlso takes care of the discarded value issue in p2p_message_capture.py.\nSee: https://github.com/bitcoin/bitcoin/pull/19509/files#r571674446.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9913419cc9db5f8ce7afa0c3774468c330136064",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9913419cc9db5f8ce7afa0c3774468c330136064",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9913419cc9db5f8ce7afa0c3774468c330136064/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf26ca3911f3c9ad1583716075b6dd07b76e3ff0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf26ca3911f3c9ad1583716075b6dd07b76e3ff0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf26ca3911f3c9ad1583716075b6dd07b76e3ff0"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "fab921ef193a534cd26ac41ab04380b024b24938",
        "filename": "test/functional/data/invalid_txs.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9913419cc9db5f8ce7afa0c3774468c330136064/test/functional/data/invalid_txs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9913419cc9db5f8ce7afa0c3774468c330136064/test/functional/data/invalid_txs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/invalid_txs.py?ref=9913419cc9db5f8ce7afa0c3774468c330136064",
        "patch": "@@ -57,7 +57,7 @@ class BadTxTemplate:\n     __metaclass__ = abc.ABCMeta\n \n     # The expected error code given by bitcoind upon submission of the tx.\n-    reject_reason = \"\"  # type: Optional[str]\n+    reject_reason: Optional[str] = \"\"\n \n     # Only specified if it differs from mempool acceptance error.\n     block_reject_reason = \"\""
      },
      {
        "sha": "080b2d93ad6e94e85585b04e53819150a140d68c",
        "filename": "test/functional/p2p_message_capture.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9913419cc9db5f8ce7afa0c3774468c330136064/test/functional/p2p_message_capture.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9913419cc9db5f8ce7afa0c3774468c330136064/test/functional/p2p_message_capture.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_message_capture.py?ref=9913419cc9db5f8ce7afa0c3774468c330136064",
        "patch": "@@ -42,14 +42,14 @@ def mini_parser(dat_file):\n             if not tmp_header_raw:\n                 break\n             tmp_header = BytesIO(tmp_header_raw)\n-            int.from_bytes(tmp_header.read(TIME_SIZE), \"little\")      # type: int\n+            tmp_header.read(TIME_SIZE) # skip the timestamp field\n             raw_msgtype = tmp_header.read(MSGTYPE_SIZE)\n-            msgtype = raw_msgtype.split(b'\\x00', 1)[0]     # type: bytes\n+            msgtype: bytes = raw_msgtype.split(b'\\x00', 1)[0]\n             remainder =  raw_msgtype.split(b'\\x00', 1)[1]\n             assert(len(msgtype) > 0)\n             assert(msgtype in MESSAGEMAP)\n             assert(len(remainder) == 0 or not remainder.decode().isprintable())\n-            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\")  # type: int\n+            length: int = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\")\n             data = f_in.read(length)\n             assert_equal(len(data), length)\n "
      },
      {
        "sha": "c35533698c7d521ab581a70606376ae16d33ac38",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9913419cc9db5f8ce7afa0c3774468c330136064/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9913419cc9db5f8ce7afa0c3774468c330136064/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=9913419cc9db5f8ce7afa0c3774468c330136064",
        "patch": "@@ -29,8 +29,6 @@\n LOCKTIME_THRESHOLD = 500000000\n ANNEX_TAG = 0x50\n \n-OPCODE_NAMES = {}  # type: Dict[CScriptOp, str]\n-\n LEAF_VERSION_TAPSCRIPT = 0xc0\n \n def hash160(s):\n@@ -47,7 +45,6 @@ def bn2vch(v):\n     # Serialize to bytes\n     return encoded_v.to_bytes(n_bytes, 'little')\n \n-_opcode_instances = []  # type: List[CScriptOp]\n class CScriptOp(int):\n     \"\"\"A single script opcode\"\"\"\n     __slots__ = ()\n@@ -111,6 +108,9 @@ def __new__(cls, n):\n             _opcode_instances.append(super().__new__(cls, n))\n             return _opcode_instances[n]\n \n+OPCODE_NAMES: Dict[CScriptOp, str] = {}\n+_opcode_instances: List[CScriptOp] = []\n+\n # Populate opcode instance table\n for n in range(0xff + 1):\n     CScriptOp(n)"
      }
    ]
  }
]