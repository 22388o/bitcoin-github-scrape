[
  {
    "sha": "fae596f0e421148b797197baff089a87b3193dbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWU1OTZmMGU0MjExNDhiNzk3MTk3YmFmZjA4OWE4N2IzMTkzZGJk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-30T12:49:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-07-15T18:18:11Z"
      },
      "message": "[qa] Sort scripts by time for pull_tester and don't overwrite setup_chain",
      "tree": {
        "sha": "4c2a8a9dbe33901ce14b1e8412157511d4b1b239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c2a8a9dbe33901ce14b1e8412157511d4b1b239"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae596f0e421148b797197baff089a87b3193dbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae596f0e421148b797197baff089a87b3193dbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae596f0e421148b797197baff089a87b3193dbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae596f0e421148b797197baff089a87b3193dbd/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3685e0c1da296be533fef4abcf1b1734ed7d85e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3685e0c1da296be533fef4abcf1b1734ed7d85e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3685e0c1da296be533fef4abcf1b1734ed7d85e7"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 17,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2aa131041a02bc7454e49d8d99d9ba53e989e902",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -110,6 +110,8 @@\n     'receivedby.py',\n     'mempool_resurrect_test.py',\n     'txn_doublespend.py --mineblock',\n+    'p2p-segwit.py',\n+    'segwit.py',\n     'txn_clone.py',\n     'getchaintips.py',\n     'rawtransactions.py',\n@@ -131,13 +133,12 @@\n     'disablewallet.py',\n     'sendheaders.py',\n     'keypool.py',\n+    'p2p-mempool.py',\n     'prioritise_transaction.py',\n     'invalidblockrequest.py',\n     'invalidtxrequest.py',\n     'abandonconflict.py',\n     'p2p-versionbits-warning.py',\n-    'p2p-segwit.py',\n-    'segwit.py',\n     'importprunedfunds.py',\n     'signmessages.py',\n ]"
      },
      {
        "sha": "5c5d778f429b9b664f339a30b3d13c8312b9db2b",
        "filename": "qa/rpc-tests/p2p-mempool.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-mempool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-mempool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-mempool.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -72,8 +72,11 @@ def send_mempool(self):\n         self.send_message(msg_mempool())\n \n class P2PMempoolTests(BitcoinTestFramework):\n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n \n     def setup_network(self):\n         # Start a node with maxuploadtarget of 200 MB (/24h)"
      },
      {
        "sha": "c67b7724516aae68551826b72c1102d4be5077ef",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -163,8 +163,11 @@ def __init__(self, sha256, n, nValue):\n \n \n class SegWitTest(BitcoinTestFramework):\n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 3)\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n \n     def add_options(self, parser):\n         parser.add_option(\"--oldbinary\", dest=\"oldbinary\","
      },
      {
        "sha": "f88230cbb9892b13f40fe0e2ed4663da8b4d4500",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -71,9 +71,10 @@ def getutxo(txid):\n \n class SegWitTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 3)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n \n     def setup_network(self):\n         self.nodes = []"
      }
    ]
  },
  {
    "sha": "fa2d68f79c459b505652728c3d8da60679f98ae3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJkNjhmNzljNDU5YjUwNTY1MjcyOGMzZDhkYTYwNjc5Zjk4YWUz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-07-08T15:59:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-08-07T21:13:08Z"
      },
      "message": "[qa] Adjust timeouts for micro-optimization of run time",
      "tree": {
        "sha": "a94f0719e9621bd716b16de4b9ce4f2c10ddbd69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a94f0719e9621bd716b16de4b9ce4f2c10ddbd69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2d68f79c459b505652728c3d8da60679f98ae3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2d68f79c459b505652728c3d8da60679f98ae3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2d68f79c459b505652728c3d8da60679f98ae3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2d68f79c459b505652728c3d8da60679f98ae3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fae596f0e421148b797197baff089a87b3193dbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae596f0e421148b797197baff089a87b3193dbd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fae596f0e421148b797197baff089a87b3193dbd"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "31fa19dd33a63b54ab3bb8ac53af439d03ac92e9",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2d68f79c459b505652728c3d8da60679f98ae3/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2d68f79c459b505652728c3d8da60679f98ae3/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fa2d68f79c459b505652728c3d8da60679f98ae3",
        "patch": "@@ -121,7 +121,7 @@ def hex_str_to_bytes(hex_str):\n def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n-def sync_blocks(rpc_connections, wait=1, timeout=60):\n+def sync_blocks(rpc_connections, wait=0.125, timeout=60):\n     \"\"\"\n     Wait until everybody has the same tip\n     \"\"\"\n@@ -133,7 +133,7 @@ def sync_blocks(rpc_connections, wait=1, timeout=60):\n         timeout -= wait\n     raise AssertionError(\"Block sync failed\")\n \n-def sync_mempools(rpc_connections, wait=1, timeout=60):\n+def sync_mempools(rpc_connections, wait=0.5, timeout=60):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n     pools"
      }
    ]
  },
  {
    "sha": "fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ4Y2Y2M2U1ZjZhMmUyNmI0NGRiZjJiYmRkN2RmOTAxYzRlNmY0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-08-07T21:06:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-08-07T21:13:22Z"
      },
      "message": "[qa] Use single cache dir for chains",
      "tree": {
        "sha": "7ad02c2866f3487e099dd5b736be99bc6580ac8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ad02c2866f3487e099dd5b736be99bc6580ac8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa2d68f79c459b505652728c3d8da60679f98ae3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2d68f79c459b505652728c3d8da60679f98ae3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2d68f79c459b505652728c3d8da60679f98ae3"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 15,
      "deletions": 13
    },
    "files": [
      {
        "sha": "892b2a3e08e0c6bcee23db524d99a2abdb333bba",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
        "patch": "@@ -103,10 +103,9 @@ linux-build\n win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n qa/pull-tester/tests_config.py\n-qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n qa/tmp\n-cache/\n+qa/cache/*\n share/BitcoindComparisonTool.jar\n \n !src/leveldb*/Makefile"
      },
      {
        "sha": "05b41ae989162ac78b6f4d802bc0d594aaacc2fb",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
        "patch": "@@ -192,6 +192,7 @@ def runtests():\n         coverage = RPCCoverage()\n         print(\"Initializing coverage directory at %s\\n\" % coverage.dir)\n     flags = [\"--srcdir=%s/src\" % BUILDDIR] + passon_args\n+    flags.append(\"--cachedir=%s/qa/cache\" % BUILDDIR)\n     if coverage:\n         flags.append(coverage.flag)\n "
      },
      {
        "sha": "ced95212340621eb8131eb9874719cbb24b0d4a7",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
        "patch": "@@ -47,7 +47,7 @@ def setup_chain(self):\n         if self.setup_clean_chain:\n             initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n         else:\n-            initialize_chain(self.options.tmpdir, self.num_nodes)\n+            initialize_chain(self.options.tmpdir, self.num_nodes, self.options.cachedir)\n \n     def setup_nodes(self):\n         return start_nodes(self.num_nodes, self.options.tmpdir)\n@@ -108,6 +108,8 @@ def main(self):\n                           help=\"Don't stop bitcoinds after the test execution\")\n         parser.add_option(\"--srcdir\", dest=\"srcdir\", default=os.path.normpath(os.path.dirname(os.path.realpath(__file__))+\"/../../../src\"),\n                           help=\"Source directory containing bitcoind/bitcoin-cli (default: %default)\")\n+        parser.add_option(\"--cachedir\", dest=\"cachedir\", default=os.path.normpath(os.path.dirname(os.path.realpath(__file__))+\"/../../cache\"),\n+                          help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n         parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\","
      },
      {
        "sha": "3e10f13bb317e5a9222531e9167533601553a448",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fad8cf63e5f6a2e26b44dbf2bbdd7df901c4e6f4",
        "patch": "@@ -193,7 +193,7 @@ def wait_for_bitcoind_start(process, url, i):\n                 raise # unkown JSON RPC exception\n         time.sleep(0.25)\n \n-def initialize_chain(test_dir, num_nodes):\n+def initialize_chain(test_dir, num_nodes, cachedir):\n     \"\"\"\n     Create a cache of a 200-block-long chain (with wallet) for MAX_NODES\n     Afterward, create num_nodes copies from the cache\n@@ -202,20 +202,20 @@ def initialize_chain(test_dir, num_nodes):\n     assert num_nodes <= MAX_NODES\n     create_cache = False\n     for i in range(MAX_NODES):\n-        if not os.path.isdir(os.path.join('cache', 'node'+str(i))):\n+        if not os.path.isdir(os.path.join(cachedir, 'node'+str(i))):\n             create_cache = True\n             break\n \n     if create_cache:\n \n         #find and delete old cache directories if any exist\n         for i in range(MAX_NODES):\n-            if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))):\n-                shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n+            if os.path.isdir(os.path.join(cachedir,\"node\"+str(i))):\n+                shutil.rmtree(os.path.join(cachedir,\"node\"+str(i)))\n \n         # Create cache directories, run bitcoinds:\n         for i in range(MAX_NODES):\n-            datadir=initialize_datadir(\"cache\", i)\n+            datadir=initialize_datadir(cachedir, i)\n             args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n             if i > 0:\n                 args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n@@ -257,13 +257,13 @@ def initialize_chain(test_dir, num_nodes):\n         wait_bitcoinds()\n         disable_mocktime()\n         for i in range(MAX_NODES):\n-            os.remove(log_filename(\"cache\", i, \"debug.log\"))\n-            os.remove(log_filename(\"cache\", i, \"db.log\"))\n-            os.remove(log_filename(\"cache\", i, \"peers.dat\"))\n-            os.remove(log_filename(\"cache\", i, \"fee_estimates.dat\"))\n+            os.remove(log_filename(cachedir, i, \"debug.log\"))\n+            os.remove(log_filename(cachedir, i, \"db.log\"))\n+            os.remove(log_filename(cachedir, i, \"peers.dat\"))\n+            os.remove(log_filename(cachedir, i, \"fee_estimates.dat\"))\n \n     for i in range(num_nodes):\n-        from_dir = os.path.join(\"cache\", \"node\"+str(i))\n+        from_dir = os.path.join(cachedir, \"node\"+str(i))\n         to_dir = os.path.join(test_dir,  \"node\"+str(i))\n         shutil.copytree(from_dir, to_dir)\n         initialize_datadir(test_dir, i) # Overwrite port/rpcport in bitcoin.conf"
      }
    ]
  }
]