practicalswift,2019-09-28 08:09:18,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16978#issuecomment-536164662,536164662,
MarcoFalke,2019-10-04 13:16:41,Addressed feedback by @davereikher ,https://github.com/bitcoin/bitcoin/pull/16978#issuecomment-538392446,538392446,
davereikher,2019-10-10 05:03:43,Tested ACK fae43a97ca947cd0802392e9bb86d9d0572c0fba,https://github.com/bitcoin/bitcoin/pull/16978#issuecomment-540363926,540363926,
DrahtBot,2019-11-07 14:27:30,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/16978#issuecomment-551102062,551102062,
practicalswift,2019-10-03 20:24:56,"Is this intentionally abbreviated as `SEEDR`, or should it be `SEED`/`SEEDER`?",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331235746,331235746,src/test/setup_common.h
MarcoFalke,2019-10-03 20:30:43,Happy to change it to something else if you can find a better name,https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331238415,331238415,src/test/setup_common.h
practicalswift,2019-10-03 20:37:28,I was thinking simply `SEED`? :),https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331241164,331241164,src/test/setup_common.h
MarcoFalke,2019-10-03 20:46:57,Changed. Let's hope this doesn't conflict with any windows symbols,https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331245146,331245146,src/test/setup_common.h
davereikher,2019-10-04 11:32:57,Is `if (seed.IsNull())` necessary in this line? Isn't `seed` always null here?,https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331457548,331457548,src/test/setup_common.cpp
davereikher,2019-10-04 12:09:50,"I think the `contrib/devtools/test_deterministic_coverage.sh` script will fail to detect non-deterministic coverage if the seed is fixed between runs. Isn't it the whole point of that script?\nTo make sure I ran a single test, `wallet_tests/coin_mark_dirty_immature_credit` 30 times using the script and I always got the same coverage.\nIf I'm not mistaken, the main purpose here is to log the seed",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331469068,331469068,contrib/devtools/test_deterministic_coverage.sh
MarcoFalke,2019-10-04 13:05:33,"It will be set once for the process, so (ideally) should only be null once",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331489893,331489893,src/test/setup_common.cpp
MarcoFalke,2019-10-04 13:16:16,"Thanks, switched to `xxd -l 32 -p /dev/urandom | tr -d "" \n""`",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331494657,331494657,contrib/devtools/test_deterministic_coverage.sh
davereikher,2019-10-04 14:30:55,"This makes the seed different between subsequent runs of the script, but the script will still show deterministic coverage each time it runs, since the seed doesn't change between iterations within the script, so this line should be moved down into this loop:\nhttps://github.com/bitcoin/bitcoin/blob/faad0e8e4d61dfb115331c18e68adffb2b3ee471/contrib/devtools/test_deterministic_coverage.sh#L106\n",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r331532273,331532273,contrib/devtools/test_deterministic_coverage.sh
MarcoFalke,2019-10-07 17:45:57,"Huh? If you change the seed between runs and then compare the results of those runs, you are pretty much guaranteed to get non-deterministic coverage. I think this test should check for non-determinism across runs, assuming everything kept constant. That is, it should act as a proxy to be able to answer the question ""How reliable can test failures be reproduced"".",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r332151131,332151131,contrib/devtools/test_deterministic_coverage.sh
MarcoFalke,2019-10-07 17:49:31,"I think you are looking for the test to answer the question ""How deterministic is coverage across runs"", which is also a useful question to ask. Not sure how to accommodate both. ",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r332152736,332152736,contrib/devtools/test_deterministic_coverage.sh
MarcoFalke,2019-10-08 14:30:07,"And a random seed is already picked per process in the while loop you referenced below. So moving the `export RANDOM_CTX_SEED` wouldn't make any observable difference.\n\n\nSo either I leave it as is or remove the `export RANDOM_CTX_SEED` from this file again. What do you think?",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r332545634,332545634,contrib/devtools/test_deterministic_coverage.sh
davereikher,2019-10-09 11:10:01,"Sorry for the delay,\n\n> Huh? If you change the seed between runs and then compare the results of those runs, you are pretty much guaranteed to get non-deterministic coverage. I think this test should check for non-determinism across runs, assuming everything kept constant.\n\nYou're right, many tests fail with a fixed seed (I tried 5 different tests from the list in the script and all of the",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r332955163,332955163,contrib/devtools/test_deterministic_coverage.sh
MarcoFalke,2019-10-09 14:28:58,"> Isn't the seed set to RANDOM_CTX_SEED if this environment variable is found and thus the seed is the same for all runs in the loop if this line is located outside the loop?\n\nYes, but putting it *inside* the loop will make it pick a new seed every time. This is already the default behaviour when no seed is provided at all. So might as well leave it out completely.",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r333046577,333046577,contrib/devtools/test_deterministic_coverage.sh
davereikher,2019-10-09 15:02:57,"Oh ok, so yes, I think it's best to remove it then.",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r333067000,333067000,contrib/devtools/test_deterministic_coverage.sh
MarcoFalke,2019-10-09 15:20:45,"Ok, removed. Thanks for the discussion!",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r333077240,333077240,contrib/devtools/test_deterministic_coverage.sh
davereikher,2019-10-10 05:04:06,Likewise!,https://github.com/bitcoin/bitcoin/pull/16978#discussion_r333330928,333330928,contrib/devtools/test_deterministic_coverage.sh
davereikher,2019-10-10 05:12:24,"BTW,\n> ... I'll update when it gets to a 1000.\n\nThe script found non-deterministic behaviour at iteration 399, meaning it ran the entire test suite 398 times with a different seed each run and did not detect non-deterministic coverage in any of them. The non-determinism in run 399 might be caused by a test that should be included in the list of tests in the script. I'm not sure how to isolat",https://github.com/bitcoin/bitcoin/pull/16978#discussion_r333332210,333332210,contrib/devtools/test_deterministic_coverage.sh
