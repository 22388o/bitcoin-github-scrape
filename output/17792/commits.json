[
  {
    "sha": "179d55f0526082b46415a7f5b6c3742a403f3306",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzlkNTVmMDUyNjA4MmI0NjQxNWE3ZjViNmMzNzQyYTQwM2YzMzA2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-11T22:21:43Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-14T09:34:35Z"
      },
      "message": "zmq: Fix due to invalid argument and multiple notifiers\n\nGithub-Pull: #17445\nRebased-From: 3e730bf90aaf53c41ff3a778f6aac15d163d1c0c",
      "tree": {
        "sha": "1bd5cebeee00c2d4259d9993cd0b9a25d4cc781f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bd5cebeee00c2d4259d9993cd0b9a25d4cc781f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/179d55f0526082b46415a7f5b6c3742a403f3306",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/179d55f0526082b46415a7f5b6c3742a403f3306",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/179d55f0526082b46415a7f5b6c3742a403f3306",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/179d55f0526082b46415a7f5b6c3742a403f3306/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb123c6527c02a5936dbf7fee675b992b5c21936",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb123c6527c02a5936dbf7fee675b992b5c21936",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb123c6527c02a5936dbf7fee675b992b5c21936"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "233a45d19fa1271031d755e0b92b09e04cbd1062",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/179d55f0526082b46415a7f5b6c3742a403f3306/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/179d55f0526082b46415a7f5b6c3742a403f3306/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=179d55f0526082b46415a7f5b6c3742a403f3306",
        "patch": "@@ -112,7 +112,8 @@ bool CZMQAbstractPublishNotifier::Initialize(void *pcontext)\n \n void CZMQAbstractPublishNotifier::Shutdown()\n {\n-    assert(psocket);\n+    // Early return if Initialize was not called\n+    if (!psocket) return;\n \n     int count = mapPublishNotifiers.count(address);\n "
      },
      {
        "sha": "89c55f31f3b1cadebbf2927b616c35c5859c4731",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/179d55f0526082b46415a7f5b6c3742a403f3306/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/179d55f0526082b46415a7f5b6c3742a403f3306/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=179d55f0526082b46415a7f5b6c3742a403f3306",
        "patch": "@@ -59,6 +59,10 @@ def test_basic(self):\n         # Note that the publishing order is not defined in the documentation and\n         # is subject to change.\n         import zmq\n+\n+        # Invalid zmq arguments don't take down the node, see #17185.\n+        self.restart_node(0, [\"-zmqpubrawtx=foo\", \"-zmqpubhashtx=bar\"])\n+\n         address = 'tcp://127.0.0.1:28332'\n         socket = self.ctx.socket(zmq.SUB)\n         socket.set(zmq.RCVTIMEO, 60000)"
      }
    ]
  },
  {
    "sha": "7e66d04770bfb21862e52736c4859d7a878cb906",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTY2ZDA0NzcwYmZiMjE4NjJlNTI3MzZjNDg1OWQ3YTg3OGNiOTA2",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-09-27T11:31:44Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-14T09:34:35Z"
      },
      "message": "Drop signal CClientUIInterface::LoadWallet\n\nGithub-Pull: #16963\nRebased-From: 81ea66c30e2953dee24d5b127c28daa0d9452a28",
      "tree": {
        "sha": "ca7cd6afd4defa0fcac5e68010d14664f666a5ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca7cd6afd4defa0fcac5e68010d14664f666a5ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e66d04770bfb21862e52736c4859d7a878cb906",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e66d04770bfb21862e52736c4859d7a878cb906",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e66d04770bfb21862e52736c4859d7a878cb906",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e66d04770bfb21862e52736c4859d7a878cb906/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "179d55f0526082b46415a7f5b6c3742a403f3306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/179d55f0526082b46415a7f5b6c3742a403f3306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/179d55f0526082b46415a7f5b6c3742a403f3306"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 46,
      "deletions": 21
    },
    "files": [
      {
        "sha": "80c79bf6c6038a6513ad256f4b9b80bd83dbdc27",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -12,6 +12,8 @@ enum class WalletCreationStatus;\n \n namespace interfaces {\n class Chain;\n+class Handler;\n+class Wallet;\n }\n \n class DummyWalletInit : public WalletInitInterface {\n@@ -81,9 +83,13 @@ WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString&\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n-namespace interfaces {\n+using LoadWalletFn = std::function<void(std::unique_ptr<interfaces::Wallet> wallet)>;\n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n \n-class Wallet;\n+namespace interfaces {\n \n std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet)\n {"
      },
      {
        "sha": "aa44a69f080e487ba98aa380a4445ea52020fca4",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -339,7 +339,6 @@ class ChainImpl : public Chain\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n-    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n     void showProgress(const std::string& title, int progress, bool resume_possible) override\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);"
      },
      {
        "sha": "e09958600044b9724e29f7a6c33302019d671251",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -43,7 +43,7 @@ class Wallet;\n //!   asynchronously\n //!   (https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-380101269).\n //!\n-//! * The initMessages() and loadWallet() methods which the wallet uses to send\n+//! * The initMessage() and showProgress() methods which the wallet uses to send\n //!   notifications to the GUI should go away when GUI and wallet can directly\n //!   communicate with each other without going through the node\n //!   (https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253321096).\n@@ -208,9 +208,6 @@ class Chain\n     //! Send init error.\n     virtual void initError(const std::string& message) = 0;\n \n-    //! Send wallet load notification to the GUI.\n-    virtual void loadWallet(std::unique_ptr<Wallet> wallet) = 0;\n-\n     //! Send progress indicator.\n     virtual void showProgress(const std::string& title, int progress, bool resume_possible) = 0;\n "
      },
      {
        "sha": "4e235688fee69198fe08394389a29a8c232a84a4",
        "filename": "src/interfaces/handler.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/handler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/handler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.cpp?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -22,11 +22,25 @@ class HandlerImpl : public Handler\n     boost::signals2::scoped_connection m_connection;\n };\n \n+class CleanupHandler : public Handler\n+{\n+public:\n+    explicit CleanupHandler(std::function<void()> cleanup) : m_cleanup(std::move(cleanup)) {}\n+    ~CleanupHandler() override { if (!m_cleanup) return; m_cleanup(); m_cleanup = nullptr; }\n+    void disconnect() override { if (!m_cleanup) return; m_cleanup(); m_cleanup = nullptr; }\n+    std::function<void()> m_cleanup;\n+};\n+\n } // namespace\n \n std::unique_ptr<Handler> MakeHandler(boost::signals2::connection connection)\n {\n     return MakeUnique<HandlerImpl>(std::move(connection));\n }\n \n+std::unique_ptr<Handler> MakeHandler(std::function<void()> cleanup)\n+{\n+    return MakeUnique<CleanupHandler>(std::move(cleanup));\n+}\n+\n } // namespace interfaces"
      },
      {
        "sha": "46918bc22e79b07ec8ca4b9624087eb2cb76ef4e",
        "filename": "src/interfaces/handler.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/handler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/handler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.h?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_INTERFACES_HANDLER_H\n #define BITCOIN_INTERFACES_HANDLER_H\n \n+#include <functional>\n #include <memory>\n \n namespace boost {\n@@ -30,6 +31,9 @@ class Handler\n //! Return handler wrapping a boost signal connection.\n std::unique_ptr<Handler> MakeHandler(boost::signals2::connection connection);\n \n+//! Return handler wrapping a cleanup function.\n+std::unique_ptr<Handler> MakeHandler(std::function<void()> cleanup);\n+\n } // namespace interfaces\n \n #endif // BITCOIN_INTERFACES_HANDLER_H"
      },
      {
        "sha": "b4e1a46131363b3c3865c49bed7c3ed57df15a7e",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -45,11 +45,10 @@ std::vector<fs::path> ListWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning);\n WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::string& warning, std::shared_ptr<CWallet>& result);\n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(interfaces::Node::LoadWalletFn load_wallet);\n \n namespace interfaces {\n \n-class Wallet;\n-\n namespace {\n \n class NodeImpl : public Node\n@@ -286,7 +285,7 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::unique_ptr<Wallet>& wallet) { fn(std::move(wallet)); }));\n+        return HandleLoadWallet(std::move(fn));\n     }\n     std::unique_ptr<Handler> handleNotifyNumConnectionsChanged(NotifyNumConnectionsChangedFn fn) override\n     {"
      },
      {
        "sha": "3968464efc5e1779d239463a57b9323e557e6693",
        "filename": "src/ui_interface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -16,7 +16,6 @@ struct UISignals {\n     boost::signals2::signal<CClientUIInterface::NotifyNumConnectionsChangedSig> NotifyNumConnectionsChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyNetworkActiveChangedSig> NotifyNetworkActiveChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyAlertChangedSig> NotifyAlertChanged;\n-    boost::signals2::signal<CClientUIInterface::LoadWalletSig> LoadWallet;\n     boost::signals2::signal<CClientUIInterface::ShowProgressSig> ShowProgress;\n     boost::signals2::signal<CClientUIInterface::NotifyBlockTipSig> NotifyBlockTip;\n     boost::signals2::signal<CClientUIInterface::NotifyHeaderTipSig> NotifyHeaderTip;\n@@ -36,7 +35,6 @@ ADD_SIGNALS_IMPL_WRAPPER(InitMessage);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNumConnectionsChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNetworkActiveChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyAlertChanged);\n-ADD_SIGNALS_IMPL_WRAPPER(LoadWallet);\n ADD_SIGNALS_IMPL_WRAPPER(ShowProgress);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyBlockTip);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyHeaderTip);\n@@ -48,7 +46,6 @@ void CClientUIInterface::InitMessage(const std::string& message) { return g_ui_s\n void CClientUIInterface::NotifyNumConnectionsChanged(int newNumConnections) { return g_ui_signals.NotifyNumConnectionsChanged(newNumConnections); }\n void CClientUIInterface::NotifyNetworkActiveChanged(bool networkActive) { return g_ui_signals.NotifyNetworkActiveChanged(networkActive); }\n void CClientUIInterface::NotifyAlertChanged() { return g_ui_signals.NotifyAlertChanged(); }\n-void CClientUIInterface::LoadWallet(std::unique_ptr<interfaces::Wallet>& wallet) { return g_ui_signals.LoadWallet(wallet); }\n void CClientUIInterface::ShowProgress(const std::string& title, int nProgress, bool resume_possible) { return g_ui_signals.ShowProgress(title, nProgress, resume_possible); }\n void CClientUIInterface::NotifyBlockTip(bool b, const CBlockIndex* i) { return g_ui_signals.NotifyBlockTip(b, i); }\n void CClientUIInterface::NotifyHeaderTip(bool b, const CBlockIndex* i) { return g_ui_signals.NotifyHeaderTip(b, i); }"
      },
      {
        "sha": "dad86ba697c2cdf53925893d20e1828cfd9fa80f",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -18,10 +18,6 @@ class connection;\n }\n } // namespace boost\n \n-namespace interfaces {\n-class Wallet;\n-} // namespace interfaces\n-\n /** General change type (added, updated, removed). */\n enum ChangeType\n {\n@@ -106,9 +102,6 @@ class CClientUIInterface\n      */\n     ADD_SIGNALS_DECL_WRAPPER(NotifyAlertChanged, void, );\n \n-    /** A wallet has been loaded. */\n-    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::unique_ptr<interfaces::Wallet>& wallet);\n-\n     /**\n      * Show progress e.g. for verifychain.\n      * resume_possible indicates shutting down now will result in the current progress action resuming upon restart."
      },
      {
        "sha": "64c7623bffd835b8a87f5d9c0762bf2ded9a9fb8",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -49,6 +49,7 @@ static const size_t OUTPUT_GROUP_MAX_ENTRIES = 10;\n \n static CCriticalSection cs_wallets;\n static std::vector<std::shared_ptr<CWallet>> vpwallets GUARDED_BY(cs_wallets);\n+static std::list<LoadWalletFn> g_load_wallet_fns GUARDED_BY(cs_wallets);\n \n bool AddWallet(const std::shared_ptr<CWallet>& wallet)\n {\n@@ -91,6 +92,13 @@ std::shared_ptr<CWallet> GetWallet(const std::string& name)\n     return nullptr;\n }\n \n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet)\n+{\n+    LOCK(cs_wallets);\n+    auto it = g_load_wallet_fns.emplace(g_load_wallet_fns.end(), std::move(load_wallet));\n+    return interfaces::MakeHandler([it] { LOCK(cs_wallets); g_load_wallet_fns.erase(it); });\n+}\n+\n static Mutex g_wallet_release_mutex;\n static std::condition_variable g_wallet_release_cv;\n static std::set<std::string> g_unloading_wallet_set;\n@@ -4585,7 +4593,12 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         }\n     }\n \n-    chain.loadWallet(interfaces::MakeWallet(walletInstance));\n+    {\n+        LOCK(cs_wallets);\n+        for (auto& load_wallet : g_load_wallet_fns) {\n+            load_wallet(interfaces::MakeWallet(walletInstance));\n+        }\n+    }\n \n     // Register with the validation interface. It's ok to do this after rescan since we're still holding locked_chain.\n     walletInstance->handleNotifications();"
      },
      {
        "sha": "789a2d92452c621e3a04590e266cc2e905604755",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e66d04770bfb21862e52736c4859d7a878cb906/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e66d04770bfb21862e52736c4859d7a878cb906/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=7e66d04770bfb21862e52736c4859d7a878cb906",
        "patch": "@@ -36,6 +36,8 @@\n \n #include <boost/signals2/signal.hpp>\n \n+using LoadWalletFn = std::function<void(std::unique_ptr<interfaces::Wallet> wallet)>;\n+\n //! Explicitly unload and delete the wallet.\n //! Blocks the current thread after signaling the unload intent so that all\n //! wallet clients release the wallet.\n@@ -49,6 +51,7 @@ bool HasWallets();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);\n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet);\n \n enum class WalletCreationStatus {\n     SUCCESS,"
      }
    ]
  },
  {
    "sha": "eafcea7a0ab17512f2b9e2a724685ca193920f04",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWZjZWE3YTBhYjE3NTEyZjJiOWUyYTcyNDY4NWNhMTkzOTIwZjA0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-09-26T20:43:44Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-14T09:34:35Z"
      },
      "message": "gui: Fix duplicate wallet showing up\n\nThe slot BitcoinGUI::addWallet can be invoked twice for the same\nWalletModel due to a concurrent wallet being loaded after the first `connect()`:\n\n```cpp\n connect(wallet_controller, &WalletController::walletAdded, this, &BitcoinGUI::addWallet);\n connect(wallet_controller, &WalletController::walletRemoved, this, &BitcoinGUI::removeWallet);\n\n for (WalletModel* wallet_model : m_wallet_controller->getOpenWallets()) {\n     addWallet(wallet_model);\n```\n\nGithub-Pull: #16963\nRebased-From: 6d6a7a8403ae923f189812edebdd95761de0e7f2",
      "tree": {
        "sha": "e8dd9f376a3359eb0a058b454451290d565c1465",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8dd9f376a3359eb0a058b454451290d565c1465"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eafcea7a0ab17512f2b9e2a724685ca193920f04",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eafcea7a0ab17512f2b9e2a724685ca193920f04",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eafcea7a0ab17512f2b9e2a724685ca193920f04",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eafcea7a0ab17512f2b9e2a724685ca193920f04/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e66d04770bfb21862e52736c4859d7a878cb906",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e66d04770bfb21862e52736c4859d7a878cb906",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e66d04770bfb21862e52736c4859d7a878cb906"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "784fdcb6e53c2866aa45defc5a66ebc0f81fbf0e",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eafcea7a0ab17512f2b9e2a724685ca193920f04/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eafcea7a0ab17512f2b9e2a724685ca193920f04/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=eafcea7a0ab17512f2b9e2a724685ca193920f04",
        "patch": "@@ -633,10 +633,10 @@ void BitcoinGUI::setWalletController(WalletController* wallet_controller)\n void BitcoinGUI::addWallet(WalletModel* walletModel)\n {\n     if (!walletFrame) return;\n+    if (!walletFrame->addWallet(walletModel)) return;\n     const QString display_name = walletModel->getDisplayName();\n     setWalletActionsEnabled(true);\n     rpcConsole->addWallet(walletModel);\n-    walletFrame->addWallet(walletModel);\n     m_wallet_selector->addItem(display_name, QVariant::fromValue(walletModel));\n     if (m_wallet_selector->count() == 2) {\n         m_wallet_selector_label_action->setVisible(true);"
      },
      {
        "sha": "9f03e8b5a57f486bbd78571413aae00ccd8025be",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eafcea7a0ab17512f2b9e2a724685ca193920f04/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eafcea7a0ab17512f2b9e2a724685ca193920f04/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=eafcea7a0ab17512f2b9e2a724685ca193920f04",
        "patch": "@@ -40,11 +40,11 @@ void WalletFrame::setClientModel(ClientModel *_clientModel)\n     this->clientModel = _clientModel;\n }\n \n-void WalletFrame::addWallet(WalletModel *walletModel)\n+bool WalletFrame::addWallet(WalletModel *walletModel)\n {\n-    if (!gui || !clientModel || !walletModel) return;\n+    if (!gui || !clientModel || !walletModel) return false;\n \n-    if (mapWalletViews.count(walletModel) > 0) return;\n+    if (mapWalletViews.count(walletModel) > 0) return false;\n \n     WalletView *walletView = new WalletView(platformStyle, this);\n     walletView->setBitcoinGUI(gui);\n@@ -68,6 +68,8 @@ void WalletFrame::addWallet(WalletModel *walletModel)\n     });\n \n     connect(walletView, &WalletView::outOfSyncWarningClicked, this, &WalletFrame::outOfSyncWarningClicked);\n+\n+    return true;\n }\n \n void WalletFrame::setCurrentWallet(WalletModel* wallet_model)"
      },
      {
        "sha": "20fad08b0ef8e51bbcbddc4d74c208e987654ed2",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eafcea7a0ab17512f2b9e2a724685ca193920f04/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eafcea7a0ab17512f2b9e2a724685ca193920f04/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=eafcea7a0ab17512f2b9e2a724685ca193920f04",
        "patch": "@@ -36,7 +36,7 @@ class WalletFrame : public QFrame\n \n     void setClientModel(ClientModel *clientModel);\n \n-    void addWallet(WalletModel *walletModel);\n+    bool addWallet(WalletModel *walletModel);\n     void setCurrentWallet(WalletModel* wallet_model);\n     void removeWallet(WalletModel* wallet_model);\n     void removeAllWallets();"
      }
    ]
  },
  {
    "sha": "88729d804e39fbb42aa92c039afe3641edf9190c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODcyOWQ4MDRlMzlmYmI0MmFhOTJjMDM5YWZlMzY0MWVkZjkxOTBj",
    "commit": {
      "author": {
        "name": "Adam Jonas",
        "email": "jonas@chaincode.com",
        "date": "2019-10-21T19:42:06Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-14T09:34:44Z"
      },
      "message": "Fix issue with conflicted mempool tx in listsinceblock\n\nlistsinceblock now checks that returned transactions are not\nconflicting with any transactions that are filtered out by\nthe given blockhash\n\nCo-Authored-By: Michael Chrostowski <michael.chrostowski@gmail.com>\n\nGithub-Pull: #17258\nRebased-From: 436ad436434b94982bcb7dc1d13a21949263ef73",
      "tree": {
        "sha": "1a1c5f34c58bbc658fec2e968c343413634dc047",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a1c5f34c58bbc658fec2e968c343413634dc047"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88729d804e39fbb42aa92c039afe3641edf9190c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88729d804e39fbb42aa92c039afe3641edf9190c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88729d804e39fbb42aa92c039afe3641edf9190c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88729d804e39fbb42aa92c039afe3641edf9190c/comments",
    "author": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eafcea7a0ab17512f2b9e2a724685ca193920f04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eafcea7a0ab17512f2b9e2a724685ca193920f04",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eafcea7a0ab17512f2b9e2a724685ca193920f04"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 50,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2b1f9f3752d750d0605210b173030d3d8535af6c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88729d804e39fbb42aa92c039afe3641edf9190c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88729d804e39fbb42aa92c039afe3641edf9190c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=88729d804e39fbb42aa92c039afe3641edf9190c",
        "patch": "@@ -1599,7 +1599,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         CWalletTx tx = pairWtx.second;\n \n-        if (depth == -1 || tx.GetDepthInMainChain(*locked_chain) < depth) {\n+        if (depth == -1 || abs(tx.GetDepthInMainChain(*locked_chain)) < depth) {\n             ListTransactions(*locked_chain, pwallet, tx, 0, true, transactions, filter, nullptr /* filter_label */);\n         }\n     }"
      },
      {
        "sha": "455e89e3106fe9212be8b5b66ec3e9da586bb15c",
        "filename": "test/functional/wallet_listsinceblock.py",
        "status": "modified",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88729d804e39fbb42aa92c039afe3641edf9190c/test/functional/wallet_listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88729d804e39fbb42aa92c039afe3641edf9190c/test/functional/wallet_listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listsinceblock.py?ref=88729d804e39fbb42aa92c039afe3641edf9190c",
        "patch": "@@ -5,13 +5,15 @@\n \"\"\"Test the listsincelast RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.messages import BIP125_SEQUENCE_NUMBER\n from test_framework.util import (\n     assert_array_result,\n     assert_equal,\n     assert_raises_rpc_error,\n     connect_nodes,\n )\n \n+from decimal import Decimal\n \n class ListSinceBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -33,6 +35,7 @@ def run_test(self):\n         self.test_reorg()\n         self.test_double_spend()\n         self.test_double_send()\n+        self.double_spends_filtered()\n \n     def test_no_blockhash(self):\n         txid = self.nodes[2].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n@@ -291,5 +294,51 @@ def test_double_send(self):\n             if tx['txid'] == txid1:\n                 assert_equal(tx['confirmations'], 2)\n \n+    def double_spends_filtered(self):\n+        '''\n+        `listsinceblock` was returning conflicted transactions even if they\n+        occurred before the specified cutoff blockhash\n+        '''\n+        spending_node = self.nodes[2]\n+        dest_address = spending_node.getnewaddress()\n+\n+        tx_input = dict(\n+            sequence=BIP125_SEQUENCE_NUMBER, **next(u for u in spending_node.listunspent()))\n+        rawtx = spending_node.createrawtransaction(\n+            [tx_input], {dest_address: tx_input[\"amount\"] - Decimal(\"0.00051000\"),\n+                         spending_node.getrawchangeaddress(): Decimal(\"0.00050000\")})\n+        signedtx = spending_node.signrawtransactionwithwallet(rawtx)\n+        orig_tx_id = spending_node.sendrawtransaction(signedtx[\"hex\"])\n+        original_tx = spending_node.gettransaction(orig_tx_id)\n+\n+        double_tx = spending_node.bumpfee(orig_tx_id)\n+\n+        # check that both transactions exist\n+        block_hash = spending_node.listsinceblock(\n+            spending_node.getblockhash(spending_node.getblockcount()))\n+        original_found = False\n+        double_found = False\n+        for tx in block_hash['transactions']:\n+            if tx['txid'] == original_tx['txid']:\n+                original_found = True\n+            if tx['txid'] == double_tx['txid']:\n+                double_found = True\n+        assert_equal(original_found, True)\n+        assert_equal(double_found, True)\n+\n+        lastblockhash = spending_node.generate(1)[0]\n+\n+        # check that neither transaction exists\n+        block_hash = spending_node.listsinceblock(lastblockhash)\n+        original_found = False\n+        double_found = False\n+        for tx in block_hash['transactions']:\n+            if tx['txid'] == original_tx['txid']:\n+                original_found = True\n+            if tx['txid'] == double_tx['txid']:\n+                double_found = True\n+        assert_equal(original_found, False)\n+        assert_equal(double_found, False)\n+\n if __name__ == '__main__':\n     ListSinceBlockTest().main()"
      }
    ]
  },
  {
    "sha": "a5489c9892fc12cb70c6c7b017881a9218d0b041",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTQ4OWM5ODkyZmMxMmNiNzBjNmM3YjAxNzg4MWE5MjE4ZDBiMDQx",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-11-27T15:56:04Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-14T10:35:34Z"
      },
      "message": "IsUsedDestination should count any known single-key address\n\nGithub-Pull: #17621\nRebased-From: 09502452bbbe21bb974f1de8cf53196373921ab9",
      "tree": {
        "sha": "5b12ab6f3438443e7816c20b50bf12e65b7b3c44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b12ab6f3438443e7816c20b50bf12e65b7b3c44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5489c9892fc12cb70c6c7b017881a9218d0b041",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5489c9892fc12cb70c6c7b017881a9218d0b041",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5489c9892fc12cb70c6c7b017881a9218d0b041",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5489c9892fc12cb70c6c7b017881a9218d0b041/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88729d804e39fbb42aa92c039afe3641edf9190c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88729d804e39fbb42aa92c039afe3641edf9190c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88729d804e39fbb42aa92c039afe3641edf9190c"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 45,
      "deletions": 15
    },
    "files": [
      {
        "sha": "fe004a862def56d58268d69e40a02b8837aa6406",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5489c9892fc12cb70c6c7b017881a9218d0b041/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5489c9892fc12cb70c6c7b017881a9218d0b041/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a5489c9892fc12cb70c6c7b017881a9218d0b041",
        "patch": "@@ -2924,7 +2924,7 @@ static UniValue listunspent(const JSONRPCRequest& request)\n         CTxDestination address;\n         const CScript& scriptPubKey = out.tx->tx->vout[out.i].scriptPubKey;\n         bool fValidAddress = ExtractDestination(scriptPubKey, address);\n-        bool reused = avoid_reuse && pwallet->IsUsedDestination(address);\n+        bool reused = avoid_reuse && pwallet->IsUsedDestination(out.tx->GetHash(), out.i);\n \n         if (destinations.size() && (!fValidAddress || !destinations.count(address)))\n             continue;"
      },
      {
        "sha": "2dfd60a91301dc6bbc27089cab7d7003c88f9648",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 7,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5489c9892fc12cb70c6c7b017881a9218d0b041/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5489c9892fc12cb70c6c7b017881a9218d0b041/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a5489c9892fc12cb70c6c7b017881a9218d0b041",
        "patch": "@@ -1073,17 +1073,31 @@ void CWallet::SetUsedDestinationState(const uint256& hash, unsigned int n, bool\n     }\n }\n \n-bool CWallet::IsUsedDestination(const CTxDestination& dst) const\n-{\n-    LOCK(cs_wallet);\n-    return ::IsMine(*this, dst) && GetDestData(dst, \"used\", nullptr);\n-}\n-\n bool CWallet::IsUsedDestination(const uint256& hash, unsigned int n) const\n {\n+    AssertLockHeld(cs_wallet);\n     CTxDestination dst;\n     const CWalletTx* srctx = GetWalletTx(hash);\n-    return srctx && ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst) && IsUsedDestination(dst);\n+    if (srctx) {\n+        assert(srctx->tx->vout.size() > n);\n+        // When descriptor wallets arrive, these additional checks are\n+        // likely superfluous and can be optimized out\n+        for (const auto& keyid : GetAffectedKeys(srctx->tx->vout[n].scriptPubKey, *this)) {\n+            WitnessV0KeyHash wpkh_dest(keyid);\n+            if (GetDestData(wpkh_dest, \"used\", nullptr)) {\n+                return true;\n+            }\n+            ScriptHash sh_wpkh_dest(wpkh_dest);\n+            if (GetDestData(sh_wpkh_dest, \"used\", nullptr)) {\n+                return true;\n+            }\n+            PKHash pkh_dest(keyid);\n+            if (GetDestData(pkh_dest, \"used\", nullptr)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n }\n \n bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)"
      },
      {
        "sha": "ee4ac91588364f7a42d12d1f3acc1f55655098c8",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5489c9892fc12cb70c6c7b017881a9218d0b041/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5489c9892fc12cb70c6c7b017881a9218d0b041/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=a5489c9892fc12cb70c6c7b017881a9218d0b041",
        "patch": "@@ -1004,9 +1004,8 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n \n     bool IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n-    // Whether this or any UTXO with the same CTxDestination has been spent.\n-    bool IsUsedDestination(const CTxDestination& dst) const;\n-    bool IsUsedDestination(const uint256& hash, unsigned int n) const;\n+    // Whether this or any known UTXO with the same single key has been spent.\n+    bool IsUsedDestination(const uint256& hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void SetUsedDestinationState(const uint256& hash, unsigned int n, bool used);\n \n     std::vector<OutputGroup> GroupOutputs(const std::vector<COutput>& outputs, bool single_coin) const;"
      },
      {
        "sha": "55b30afdee4465645820d105e98e1f335f183ab8",
        "filename": "test/functional/wallet_avoidreuse.py",
        "status": "modified",
        "additions": 21,
        "deletions": 4,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5489c9892fc12cb70c6c7b017881a9218d0b041/test/functional/wallet_avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5489c9892fc12cb70c6c7b017881a9218d0b041/test/functional/wallet_avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_avoidreuse.py?ref=a5489c9892fc12cb70c6c7b017881a9218d0b041",
        "patch": "@@ -83,7 +83,12 @@ def run_test(self):\n         reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n         self.test_fund_send_fund_senddirty()\n         reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n-        self.test_fund_send_fund_send()\n+        self.test_fund_send_fund_send(\"legacy\")\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send(\"p2sh-segwit\")\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send(\"bech32\")\n+\n \n     def test_persistence(self):\n         '''Test that wallet files persist the avoid_reuse flag.'''\n@@ -174,7 +179,7 @@ def test_fund_send_fund_senddirty(self):\n         assert_approx(self.nodes[1].getbalance(), 5, 0.001)\n         assert_approx(self.nodes[1].getbalance(avoid_reuse=False), 5, 0.001)\n \n-    def test_fund_send_fund_send(self):\n+    def test_fund_send_fund_send(self, second_addr_type):\n         '''\n         Test the simple case where [1] generates a new address A, then\n         [0] sends 10 BTC to A.\n@@ -184,7 +189,7 @@ def test_fund_send_fund_send(self):\n         [1] tries to spend 4 BTC (succeeds; change address sufficient)\n         '''\n \n-        fundaddr = self.nodes[1].getnewaddress()\n+        fundaddr = self.nodes[1].getnewaddress(label=\"\", address_type=\"legacy\")\n         retaddr = self.nodes[0].getnewaddress()\n \n         self.nodes[0].sendtoaddress(fundaddr, 10)\n@@ -205,7 +210,19 @@ def test_fund_send_fund_send(self):\n         # getbalances should show no used, 5 btc trusted\n         assert_balances(self.nodes[1], mine={\"used\": 0, \"trusted\": 5})\n \n-        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        # For the second send, we transmute it to a related single-key address\n+        # to make sure it's also detected as re-use\n+        fund_spk = self.nodes[0].getaddressinfo(fundaddr)[\"scriptPubKey\"]\n+        fund_decoded = self.nodes[0].decodescript(fund_spk)\n+        if second_addr_type == \"p2sh-segwit\":\n+            new_fundaddr = fund_decoded[\"segwit\"][\"p2sh-segwit\"]\n+        elif second_addr_type == \"bech32\":\n+            new_fundaddr = fund_decoded[\"segwit\"][\"addresses\"][0]\n+        else:\n+            new_fundaddr = fundaddr\n+            assert_equal(second_addr_type, \"legacy\")\n+\n+        self.nodes[0].sendtoaddress(new_fundaddr, 10)\n         self.nodes[0].generate(1)\n         self.sync_all()\n "
      }
    ]
  },
  {
    "sha": "e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMmM0NWQ4OWY3MjE5ZmQ1YmNmMTlhNmUwNGIyOTFhYmJiNGI1Zjk1",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-01-14T18:23:24Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-15T09:58:56Z"
      },
      "message": "IsUsedDestination shouldn't use key id as script id for ScriptHash\n\nGithub-Pull: #17924\nRebased-From: 4b8f1e989f3b969dc628b0801d5c31ebd373719c",
      "tree": {
        "sha": "9360461819db27115eb7a12d6c7f2ed7b3c4b342",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9360461819db27115eb7a12d6c7f2ed7b3c4b342"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5489c9892fc12cb70c6c7b017881a9218d0b041",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5489c9892fc12cb70c6c7b017881a9218d0b041",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5489c9892fc12cb70c6c7b017881a9218d0b041"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4c3b633fe4e42d8958a09283eb8b61ced8e44655",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95",
        "patch": "@@ -1087,7 +1087,7 @@ bool CWallet::IsUsedDestination(const uint256& hash, unsigned int n) const\n             if (GetDestData(wpkh_dest, \"used\", nullptr)) {\n                 return true;\n             }\n-            ScriptHash sh_wpkh_dest(wpkh_dest);\n+            ScriptHash sh_wpkh_dest(GetScriptForDestination(wpkh_dest));\n             if (GetDestData(sh_wpkh_dest, \"used\", nullptr)) {\n                 return true;\n             }"
      }
    ]
  },
  {
    "sha": "eac49073eb7c5d630dd9a285e36f743fa902c0ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWM0OTA3M2ViN2M1ZDYzMGRkOWEyODVlMzZmNzQzZmE5MDJjMGVl",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-01-14T20:05:53Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-15T09:59:47Z"
      },
      "message": "Don't allow implementers to think ScriptHash(Witness*()) results in nesting computation\n\nGithub-Pull: #17924\nRebased-From: 6dd59d2e491bc11ab26498668543e65440a3a931",
      "tree": {
        "sha": "082afb3afcc15bb8df3cc2e426171d5a94b9833e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/082afb3afcc15bb8df3cc2e426171d5a94b9833e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eac49073eb7c5d630dd9a285e36f743fa902c0ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eac49073eb7c5d630dd9a285e36f743fa902c0ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eac49073eb7c5d630dd9a285e36f743fa902c0ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eac49073eb7c5d630dd9a285e36f743fa902c0ee/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2c45d89f7219fd5bcf19a6e04b291abbb4b5f95"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0c344c773309d1b1604333de8f676e3f1b498661",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eac49073eb7c5d630dd9a285e36f743fa902c0ee/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eac49073eb7c5d630dd9a285e36f743fa902c0ee/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=eac49073eb7c5d630dd9a285e36f743fa902c0ee",
        "patch": "@@ -81,9 +81,14 @@ struct PKHash : public uint160\n     using uint160::uint160;\n };\n \n+struct WitnessV0KeyHash;\n struct ScriptHash : public uint160\n {\n     ScriptHash() : uint160() {}\n+    // These don't do what you'd expect.\n+    // Use ScriptHash(GetScriptForDestination(...)) instead.\n+    explicit ScriptHash(const WitnessV0KeyHash& hash) = delete;\n+    explicit ScriptHash(const PKHash& hash) = delete;\n     explicit ScriptHash(const uint160& hash) : uint160(hash) {}\n     explicit ScriptHash(const CScript& script);\n     using uint160::uint160;"
      }
    ]
  },
  {
    "sha": "b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODEwMWZiN2FjNGJmYTBlNWMwZWUyNDU5YjI0YmRkYWY1OWZlN2M0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-29T18:15:45Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-15T12:12:43Z"
      },
      "message": "Fix comparison function signature\n\nThis commit fixes build on CentOS 7 with GCC 4.8.5\n\nGithub-Pull: #17634\nRebased-From: b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
      "tree": {
        "sha": "f43e2c7ce84d373cbc4da1abc87109b0720ca74f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f43e2c7ce84d373cbc4da1abc87109b0720ca74f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eac49073eb7c5d630dd9a285e36f743fa902c0ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eac49073eb7c5d630dd9a285e36f743fa902c0ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eac49073eb7c5d630dd9a285e36f743fa902c0ee"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "64bfb7d6433c4dbcaa17ec42a725d586eda58efe",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
        "patch": "@@ -11,8 +11,7 @@\n #include <clientversion.h>\n #include <streams.h>\n \n-#include <algorithm>\n-\n+#include <utility>\n \n RecentRequestsTableModel::RecentRequestsTableModel(WalletModel *parent) :\n     QAbstractTableModel(parent), walletModel(parent)\n@@ -213,10 +212,10 @@ void RecentRequestsTableModel::updateDisplayUnit()\n     updateAmountColumnTitle();\n }\n \n-bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n+bool RecentRequestEntryLessThan::operator()(const RecentRequestEntry& left, const RecentRequestEntry& right) const\n {\n-    RecentRequestEntry *pLeft = &left;\n-    RecentRequestEntry *pRight = &right;\n+    const RecentRequestEntry* pLeft = &left;\n+    const RecentRequestEntry* pRight = &right;\n     if (order == Qt::DescendingOrder)\n         std::swap(pLeft, pRight);\n "
      },
      {
        "sha": "66e8d4f228e81ae1fcb85c1f6136f6577eb4efbe",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
        "patch": "@@ -43,7 +43,7 @@ class RecentRequestEntryLessThan\n public:\n     RecentRequestEntryLessThan(int nColumn, Qt::SortOrder fOrder):\n         column(nColumn), order(fOrder) {}\n-    bool operator()(RecentRequestEntry &left, RecentRequestEntry &right) const;\n+    bool operator()(const RecentRequestEntry& left, const RecentRequestEntry& right) const;\n \n private:\n     int column;"
      }
    ]
  },
  {
    "sha": "cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDY3YjFkY2I4ZjFlY2E4YzBjN2NlY2M2ZjRkZTI3YzdlZmU0MWQ1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-29T19:18:24Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-15T12:13:02Z"
      },
      "message": "Use correct C++11 header for std::swap()\n\nGithub-Pull: #17634\nRebased-From: 98fbd1cdffaa69357091cc67e959ac21119dfa16",
      "tree": {
        "sha": "fa36bf70769791e1d9b3a9fa5b6baf6701b1e267",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa36bf70769791e1d9b3a9fa5b6baf6701b1e267"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8101fb7ac4bfa0e5c0ee2459b24bddaf59fe7c4"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "16a994393efdc074db93e8120979d73ad4e38f4a",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
        "patch": "@@ -6,11 +6,11 @@\n #define BITCOIN_CUCKOOCACHE_H\n \n #include <array>\n-#include <algorithm>\n #include <atomic>\n-#include <cstring>\n #include <cmath>\n+#include <cstring>\n #include <memory>\n+#include <utility>\n #include <vector>\n \n "
      },
      {
        "sha": "34016879a5a1b2d3bd5e8b1201f868c897dbecc8",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
        "patch": "@@ -14,6 +14,7 @@\n #include <cstddef>\n #include <iterator>\n #include <type_traits>\n+#include <utility>\n \n #pragma pack(push, 1)\n /** Implements a drop-in replacement for std::vector<T> which stores up to N"
      },
      {
        "sha": "60a3178f96b2daab1d753f40d5ede3fdb4f185bc",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
        "patch": "@@ -10,7 +10,7 @@\n #include <sync.h>\n #include <util/time.h>\n \n-#include <algorithm>\n+#include <utility>\n \n #include <QDebug>\n #include <QList>"
      },
      {
        "sha": "ed6fecce9dab1de135a40c61826663d672c0ca16",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
        "patch": "@@ -11,7 +11,7 @@\n #include <interfaces/node.h>\n #include <sync.h>\n \n-#include <algorithm>\n+#include <utility>\n \n #include <QDebug>\n #include <QList>"
      },
      {
        "sha": "6c050ab9640f16655de59b725a2419ab6c6f65b8",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
        "patch": "@@ -18,6 +18,7 @@\n #include <condition_variable>\n \n #include <unordered_set>\n+#include <utility>\n \n // BasicTestingSetup not sufficient because nScriptCheckThreads is not set\n // otherwise."
      },
      {
        "sha": "4490a75e1858035a8310641ca6f0597e5f92b873",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=cd67b1dcb8f1eca8c0c7cecc6f4de27c7efe41d5",
        "patch": "@@ -22,7 +22,6 @@\n #include <txdb.h>\n #include <versionbits.h>\n \n-#include <algorithm>\n #include <atomic>\n #include <exception>\n #include <map>"
      }
    ]
  }
]