[
  {
    "sha": "ef9f495e931fad1e356757d6a40092596aa0205c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjlmNDk1ZTkzMWZhZDFlMzU2NzU3ZDZhNDAwOTI1OTZhYTAyMDVj",
    "commit": {
      "author": {
        "name": "Marko Bencun",
        "email": "marko.bencun@monetas.net",
        "date": "2017-02-23T07:38:41Z"
      },
      "committer": {
        "name": "Marko Bencun",
        "email": "marko.bencun@monetas.net",
        "date": "2017-02-24T00:19:29Z"
      },
      "message": "Trivial: fix comments referencing AppInit2\n\nIt was refactored into multiple functions in\n0cc8b6bc44bea29e24fa4e13d8a9bbe4f1483680.",
      "tree": {
        "sha": "620db571adbb0231123807bf49170504fed38e3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/620db571adbb0231123807bf49170504fed38e3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef9f495e931fad1e356757d6a40092596aa0205c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef9f495e931fad1e356757d6a40092596aa0205c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef9f495e931fad1e356757d6a40092596aa0205c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef9f495e931fad1e356757d6a40092596aa0205c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "692c9eddba67d5a7ceb85fa4b2632f664c68f418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/692c9eddba67d5a7ceb85fa4b2632f664c68f418",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/692c9eddba67d5a7ceb85fa4b2632f664c68f418"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 5,
      "deletions": 8
    },
    "files": [
      {
        "sha": "196b840cb7d880e3141322736c82dfeb70334196",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef9f495e931fad1e356757d6a40092596aa0205c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef9f495e931fad1e356757d6a40092596aa0205c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ef9f495e931fad1e356757d6a40092596aa0205c",
        "patch": "@@ -118,10 +118,6 @@ static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n // threads that should only be stopped after the main network-processing\n // threads have exited.\n //\n-// Note that if running -daemon the parent process returns from AppInit2\n-// before adding any threads to the threadGroup, so .join_all() returns\n-// immediately and the parent exits from main().\n-//\n // Shutdown for Qt is very similar, only it uses a QTimer to detect\n // fRequestShutdown getting set, and then does the normal Qt\n // shutdown thing.\n@@ -188,7 +184,7 @@ void Shutdown()\n     if (!lockShutdown)\n         return;\n \n-    /// Note: Shutdown() must be able to handle cases in which AppInit2() failed part of the way,\n+    /// Note: Shutdown() must be able to handle cases in which initialization failed part of the way,\n     /// for example if the data directory was found to be locked.\n     /// Be sure that anything that writes files or flushes caches only does this if the respective\n     /// module was initialized."
      },
      {
        "sha": "c31dea20677a4baa8f41e31ee9eb616610e8039f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef9f495e931fad1e356757d6a40092596aa0205c/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef9f495e931fad1e356757d6a40092596aa0205c/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ef9f495e931fad1e356757d6a40092596aa0205c",
        "patch": "@@ -268,7 +268,7 @@ void BitcoinCore::initialize()\n {\n     try\n     {\n-        qDebug() << __func__ << \": Running AppInit2 in thread\";\n+        qDebug() << __func__ << \": Running initialization in thread\";\n         if (!AppInitBasicSetup())\n         {\n             Q_EMIT initializeResult(false);\n@@ -457,7 +457,7 @@ void BitcoinApplication::initializeResult(int retval)\n     returnValue = retval ? 0 : 1;\n     if(retval)\n     {\n-        // Log this only after AppInit2 finishes, as then logging setup is guaranteed complete\n+        // Log this only after AppInitMain finishes, as then logging setup is guaranteed complete\n         qWarning() << \"Platform customization:\" << platformStyle->getName();\n #ifdef ENABLE_WALLET\n         PaymentServer::LoadRootCAs();"
      },
      {
        "sha": "6f47b725fbd04ead04f2621611fe56963bba364d",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef9f495e931fad1e356757d6a40092596aa0205c/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef9f495e931fad1e356757d6a40092596aa0205c/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=ef9f495e931fad1e356757d6a40092596aa0205c",
        "patch": "@@ -90,7 +90,8 @@ class CSignatureCache\n static CSignatureCache signatureCache;\n }\n \n-// To be called once in AppInit2/TestingSetup to initialize the signatureCache\n+// To be called once in AppInitMain/BasicTestingSetup to initialize the\n+// signatureCache.\n void InitSignatureCache()\n {\n     // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,"
      }
    ]
  }
]