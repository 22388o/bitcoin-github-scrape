[
  {
    "sha": "7f66701020efbb6898278cf75e1e0712c78316a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjY2NzAxMDIwZWZiYjY4OTgyNzhjZjc1ZTFlMDcxMmM3ODMxNmE0",
    "commit": {
      "author": {
        "name": "f139975",
        "email": "f139975@mvrht.com",
        "date": "2016-07-18T17:43:46Z"
      },
      "committer": {
        "name": "f139975",
        "email": "f139975@mvrht.com",
        "date": "2016-07-18T17:43:46Z"
      },
      "message": "Fix counting of sigops cost in mempool check\n\nThe new \"bytespersigop\" limit introduced the side effect of making most multisig transactions non-standard.\n\nThis fixes the issue by accurately counting the sigops cost, solely for the newly introduced check.",
      "tree": {
        "sha": "9c2cb77d23ed83bcf043b22ff9d687eb861404d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c2cb77d23ed83bcf043b22ff9d687eb861404d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f66701020efbb6898278cf75e1e0712c78316a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f66701020efbb6898278cf75e1e0712c78316a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f66701020efbb6898278cf75e1e0712c78316a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f66701020efbb6898278cf75e1e0712c78316a4/comments",
    "author": {
      "login": "f139975",
      "id": 20516749,
      "node_id": "MDQ6VXNlcjIwNTE2NzQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20516749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/f139975",
      "html_url": "https://github.com/f139975",
      "followers_url": "https://api.github.com/users/f139975/followers",
      "following_url": "https://api.github.com/users/f139975/following{/other_user}",
      "gists_url": "https://api.github.com/users/f139975/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/f139975/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/f139975/subscriptions",
      "organizations_url": "https://api.github.com/users/f139975/orgs",
      "repos_url": "https://api.github.com/users/f139975/repos",
      "events_url": "https://api.github.com/users/f139975/events{/privacy}",
      "received_events_url": "https://api.github.com/users/f139975/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "f139975",
      "id": 20516749,
      "node_id": "MDQ6VXNlcjIwNTE2NzQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20516749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/f139975",
      "html_url": "https://github.com/f139975",
      "followers_url": "https://api.github.com/users/f139975/followers",
      "following_url": "https://api.github.com/users/f139975/following{/other_user}",
      "gists_url": "https://api.github.com/users/f139975/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/f139975/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/f139975/subscriptions",
      "organizations_url": "https://api.github.com/users/f139975/orgs",
      "repos_url": "https://api.github.com/users/f139975/repos",
      "events_url": "https://api.github.com/users/f139975/events{/privacy}",
      "received_events_url": "https://api.github.com/users/f139975/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e3557b8e36308a27dbeb528569abe638c4d01dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e3557b8e36308a27dbeb528569abe638c4d01dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e3557b8e36308a27dbeb528569abe638c4d01dd"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 33,
      "deletions": 1
    },
    "files": [
      {
        "sha": "846646a4c5b75f27f3d921a8df0d7cfe5f911c9c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f66701020efbb6898278cf75e1e0712c78316a4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f66701020efbb6898278cf75e1e0712c78316a4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7f66701020efbb6898278cf75e1e0712c78316a4",
        "patch": "@@ -1047,6 +1047,34 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n+/** Compute accurate total signature operation cost of a transaction. */\n+static int64_t GetAccurateTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& inputs, int flags)\n+{\n+    int64_t nSigOps = 0;\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    {\n+        nSigOps += txin.scriptSig.GetSigOpCount(true);\n+    }\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    {\n+        nSigOps += txout.scriptPubKey.GetSigOpCount(true);\n+    }\n+    nSigOps *= WITNESS_SCALE_FACTOR;\n+\n+    if (tx.IsCoinBase())\n+        return nSigOps;\n+\n+    if (flags & SCRIPT_VERIFY_P2SH) {\n+        nSigOps += GetP2SHSigOpCount(tx, inputs) * WITNESS_SCALE_FACTOR;\n+    }\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut &prevout = inputs.GetOutputFor(tx.vin[i]);\n+        nSigOps += CountWitnessSigOps(tx.vin[i].scriptSig, prevout.scriptPubKey, i < tx.wit.vtxinwit.size() ? &tx.wit.vtxinwit[i].scriptWitness : NULL, flags);\n+    }\n+    return nSigOps;\n+}\n \n \n \n@@ -1296,7 +1324,11 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n         // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n         // merely non-standard transaction.\n-        if ((nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST) || (nBytesPerSigOp && nSigOpsCost > nSize * WITNESS_SCALE_FACTOR / nBytesPerSigOp))\n+        // To avoid making certain bare-multisig transactions non-standard,\n+        // the sigops are counted a second time\n+        int64_t nAccurateSigOpsCost = GetAccurateTransactionSigOpCost(tx, view, STANDARD_SCRIPT_VERIFY_FLAGS);\n+\n+        if ((nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST) || (nBytesPerSigOp && nAccurateSigOpsCost > nSize * WITNESS_SCALE_FACTOR / nBytesPerSigOp))\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n                 strprintf(\"%d\", nSigOpsCost));\n "
      }
    ]
  }
]