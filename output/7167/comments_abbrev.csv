gmaxwell,2015-12-04T00:07:00Z,This doesn't crash immediately from the use after free with the CValidationstate escaping its scope?\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161829742,161829742,
jameshilliard,2015-12-04T00:30:11Z,"Didn't crash for me....odd...tests passed on OSX(which is what I tested the change on), but not other OS's should it have failed?\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161834894,161834894,
jameshilliard,2015-12-04T01:03:09Z,"Hmm, so it appeared to crash sometimes, hopefully this should fix it.\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161841654,161841654,
luke-jr,2015-12-04T01:34:43Z,You still have a race on block.\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161846236,161846236,
jameshilliard,2015-12-04T01:36:29Z,"Yeah, I think I'm missing a lock, which lock does TBV need to be under?\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161846481,161846481,
morcos,2015-12-04T01:43:06Z,"So what will catch the runtime_error that is thrown if it fails?\nPreviously the RPC code caught that and returned an JSON-RPC error, but the node kept running.\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161847312,161847312,
jameshilliard,2015-12-04T02:31:41Z,@morcos I changed it to an assert so that it should shutdown instead\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161853651,161853651,
pstratem,2015-12-04T03:56:13Z,"Please gate this on an option off by default.\nOn Dec 3, 2015 6:31 PM, ""jameshilliard"" notifications@github.com wrote:\n\n> @morcos https://github.com/morcos I changed it to an assert so that it\n> should shutdown instead\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161853651.\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161867129,161867129,
jameshilliard,2015-12-04T04:03:57Z,@pstratem If it's off by default a miner could keep mining on invalid templates without realizing anything is wrong.\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161868236,161868236,
pstratem,2015-12-04T04:08:18Z,"I'm asking for background vs inline to be selectable.\n\nSo you always call TestBlockValidity, the question just being when.\nOn Dec 3, 2015 8:04 PM, ""jameshilliard"" notifications@github.com wrote:\n\n> @pstratem https://github.com/pstratem If it's off by default a miner\n> could keep mining on invalid templates without realizing anything is wrong.\n> \n> —\n> Reply to this email directly or view ",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161868558,161868558,
jameshilliard,2015-12-04T06:36:28Z,"Well I moved TBV to be inside of getblocktemplate, the only tests that seem to be failing now are the ones that expect TBV to be inside of CNB.\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-161890424,161890424,
jameshilliard,2015-12-05T01:09:49Z,"I'm thinking the easiest way to do this is to copy the block generated by CNB for the TBV thread and use a modified version of TBV that doesn't depend on the cs_main lock, is it possible to test the block well enough without the cs_main lock?\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162121452,162121452,
sipa,2015-12-05T03:00:47Z,"There is no way you can do TBV without cs_main, as it needs to access the\nUTXO set.\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162134582,162134582,
jameshilliard,2015-12-05T03:13:08Z,@sipa does it do the check based on the current UTXO set only or is it possible for it to do the check based off a historical UTXO set? ie so the thread can be run in the background with a trylock waiting for GBT to release its lock?\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162135151,162135151,
pstratem,2015-12-05T03:23:47Z,@jameshilliard the only way to make the test act truly in parallel would be to re-implement the utxo database as a proper mvcc database...\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162135606,162135606,
jameshilliard,2015-12-05T03:27:52Z,@pstratem it doesn't need to be parallel so much as not block CNB/GBT\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162135781,162135781,
sipa,2015-12-05T03:35:14Z,And not block with other calls to ProcessNewBlock.\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162136076,162136076,
jameshilliard,2015-12-05T03:39:41Z,What types of failures are we worried about in regards to CNB? Would it be reasonably safe to skip checks that depend on the UTXO set?\n,https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162136255,162136255,
sipa,2015-12-05T03:44:19Z,"If you skip checks based on the UTXO set, it cannot do anything. It can't\ndo double-spend detection, script evaluation, fee/subsidy calculations, ...\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162136449,162136449,
sipa,2015-12-05T03:48:49Z,"The new CNB code is already intended to never ever produce an invalid\nblock. TBV is a last-resort validation to be sure the code is working\nright. If you're going to skip checks, it is no longer useful; you could\njust as well not do any checks at all.\n\nSo, no, you need cs_main. And you need to make sure no ProcessBlock\nhappened in between either.\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162136634,162136634,
jameshilliard,2015-12-05T03:50:19Z,"@sipa Yeah, I wasn't sure if we are trying to protect against mempool errors or more just formatting errors.\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-162136859,162136859,
sipa,2016-05-17T06:44:37Z,"Closing, as this is not a viable strategy.\n\nI think there are alternatives possible (like not running TBV for every block, or running TBV while still holding cs_main, before after returning from the RPC), but maybe it's just much less needed with the much faster 0.12 CNB?\n",https://github.com/bitcoin/bitcoin/pull/7167#issuecomment-219632955,219632955,
