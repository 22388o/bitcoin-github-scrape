[
  {
    "sha": "c71117fcb04fc2e45b5e76fe96b077a07b0c0f82",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzExMTdmY2IwNGZjMmU0NWI1ZTc2ZmU5NmIwNzdhMDdiMGMwZjgy",
    "commit": {
      "author": {
        "name": "Bushstar",
        "email": "bushsolo@gmail.com",
        "date": "2021-05-25T06:15:34Z"
      },
      "committer": {
        "name": "Bushstar",
        "email": "bushsolo@gmail.com",
        "date": "2021-05-25T06:15:34Z"
      },
      "message": "net: remove non-blocking bool from interface",
      "tree": {
        "sha": "bed43ef6788fe13599ccc6fe296de1e08b43ca4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bed43ef6788fe13599ccc6fe296de1e08b43ca4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEErYffssvqlS9A3KY3IeCaVKNhX5kFAmCslgYACgkQIeCaVKNh\nX5l61A//RiRAO7Wv4lTObj0G0ynHuk9CPri5eIxWo51CzITc1LCjeAESo0ZsQsNg\nbh1PHQWbTBvIz89Ejxmx4dAko/3fxCDrqo3RROrMxgWpQjwNdL417j6/R8dP/gid\nDbfv5TvtV9p/roboEXBdOxZXAVJ48SBuiBxymVmv3POKskkJ4QJXDDemLSQxOXAs\n767kWToVjG3xWMzWHEuDHasp5EADxlmtfyoiPjLOMaSp7l3KfvH6pSUIBdyWnXf1\nndfOsyvC8eRBiGCXg77L2scr070pRoOAYVYrRvPTUhSvTrIdFMmyqVBecwPF+zaS\nGN8M4P3JKix3af42Y+8skXmIPdx8vzG6x72HtTTeHe+kyVyI7FeftIhppBeXcX70\nTOQmyWRWr95QfXFN0bwpn/DBe2k8DngDYOaAgDVZLvJ+i4SwOGCR8ifR1qKglRx6\nqIEEsaaLZDyoWAvUeYrv1JDofmih0/K9pMjmKVmozWfI05YpcIQNE4thdoFdyrwj\nNHM5+iwNDsjSgaS5nU5CUWsXqkuh0qltXmv70LQNydPb7VpFSEt248p9NWwLyYws\n9ot1sKqx4NH4/AYmDmETmYlSLuCvmfE7rsnU6DOZoFrL42GpvM7jznxBg4o3N3Bc\n72Z0jVetLCHrL9nup/EA2qYy+O3b2zMpenheCBqsUnS2CzdD14Q=\n=SXpn\n-----END PGP SIGNATURE-----",
        "payload": "tree bed43ef6788fe13599ccc6fe296de1e08b43ca4a\nparent b295395664bd37e26d168c329f238237b34aef8c\nauthor Bushstar <bushsolo@gmail.com> 1621923334 +0100\ncommitter Bushstar <bushsolo@gmail.com> 1621923334 +0100\n\nnet: remove non-blocking bool from interface\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82/comments",
    "author": {
      "login": "Bushstar",
      "id": 5293433,
      "node_id": "MDQ6VXNlcjUyOTM0MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5293433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bushstar",
      "html_url": "https://github.com/Bushstar",
      "followers_url": "https://api.github.com/users/Bushstar/followers",
      "following_url": "https://api.github.com/users/Bushstar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bushstar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bushstar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bushstar/subscriptions",
      "organizations_url": "https://api.github.com/users/Bushstar/orgs",
      "repos_url": "https://api.github.com/users/Bushstar/repos",
      "events_url": "https://api.github.com/users/Bushstar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bushstar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Bushstar",
      "id": 5293433,
      "node_id": "MDQ6VXNlcjUyOTM0MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5293433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bushstar",
      "html_url": "https://github.com/Bushstar",
      "followers_url": "https://api.github.com/users/Bushstar/followers",
      "following_url": "https://api.github.com/users/Bushstar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bushstar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bushstar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bushstar/subscriptions",
      "organizations_url": "https://api.github.com/users/Bushstar/orgs",
      "repos_url": "https://api.github.com/users/Bushstar/repos",
      "events_url": "https://api.github.com/users/Bushstar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bushstar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b295395664bd37e26d168c329f238237b34aef8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b295395664bd37e26d168c329f238237b34aef8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b295395664bd37e26d168c329f238237b34aef8c"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 10,
      "deletions": 22
    },
    "files": [
      {
        "sha": "6697a13921d2b2b5dcb87bd67303753bb756738d",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 20,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=c71117fcb04fc2e45b5e76fe96b077a07b0c0f82",
        "patch": "@@ -304,7 +304,7 @@ enum class IntrRecvError {\n  *\n  * @see This function can be interrupted by calling InterruptSocks5(bool).\n  *      Sockets can be made non-blocking with SetSocketNonBlocking(const\n- *      SOCKET&, bool).\n+ *      SOCKET&).\n  */\n static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const Sock& sock)\n {\n@@ -517,7 +517,7 @@ std::unique_ptr<Sock> CreateSockTCP(const CService& address_family)\n     SetSocketNoDelay(hSocket);\n \n     // Set the non-blocking option on the socket.\n-    if (!SetSocketNonBlocking(hSocket, true)) {\n+    if (!SetSocketNonBlocking(hSocket)) {\n         CloseSocket(hSocket);\n         LogPrintf(\"Error setting socket to non-blocking: %s\\n\", NetworkErrorString(WSAGetLastError()));\n         return nullptr;\n@@ -716,28 +716,16 @@ bool LookupSubNet(const std::string& strSubnet, CSubNet& ret, DNSLookupFn dns_lo\n     return false;\n }\n \n-bool SetSocketNonBlocking(const SOCKET& hSocket, bool fNonBlocking)\n+bool SetSocketNonBlocking(const SOCKET& hSocket)\n {\n-    if (fNonBlocking) {\n #ifdef WIN32\n-        u_long nOne = 1;\n-        if (ioctlsocket(hSocket, FIONBIO, &nOne) == SOCKET_ERROR) {\n+    u_long nOne = 1;\n+    if (ioctlsocket(hSocket, FIONBIO, &nOne) == SOCKET_ERROR) {\n #else\n-        int fFlags = fcntl(hSocket, F_GETFL, 0);\n-        if (fcntl(hSocket, F_SETFL, fFlags | O_NONBLOCK) == SOCKET_ERROR) {\n+    int fFlags = fcntl(hSocket, F_GETFL, 0);\n+    if (fcntl(hSocket, F_SETFL, fFlags | O_NONBLOCK) == SOCKET_ERROR) {\n #endif\n-            return false;\n-        }\n-    } else {\n-#ifdef WIN32\n-        u_long nZero = 0;\n-        if (ioctlsocket(hSocket, FIONBIO, &nZero) == SOCKET_ERROR) {\n-#else\n-        int fFlags = fcntl(hSocket, F_GETFL, 0);\n-        if (fcntl(hSocket, F_SETFL, fFlags & ~O_NONBLOCK) == SOCKET_ERROR) {\n-#endif\n-            return false;\n-        }\n+        return false;\n     }\n \n     return true;"
      },
      {
        "sha": "3425f1cf61995ee8313a8db043c20999732fbc9e",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c71117fcb04fc2e45b5e76fe96b077a07b0c0f82/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=c71117fcb04fc2e45b5e76fe96b077a07b0c0f82",
        "patch": "@@ -220,8 +220,8 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\n  */\n bool ConnectThroughProxy(const proxyType& proxy, const std::string& strDest, uint16_t port, const Sock& sock, int nTimeout, bool& outProxyConnectionFailed);\n \n-/** Disable or enable blocking-mode for a socket */\n-bool SetSocketNonBlocking(const SOCKET& hSocket, bool fNonBlocking);\n+/** Enable non-blocking mode for a socket */\n+bool SetSocketNonBlocking(const SOCKET& hSocket);\n /** Set the TCP_NODELAY flag on a socket */\n bool SetSocketNoDelay(const SOCKET& hSocket);\n void InterruptSocks5(bool interrupt);"
      }
    ]
  }
]