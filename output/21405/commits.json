[
  {
    "sha": "52f0be3a933225429b9b59b58de4fe54c2b20a02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MmYwYmUzYTkzMzIyNTQyOWI5YjU5YjU4ZGU0ZmU1NGMyYjIwYTAy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-03-10T06:31:10Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-03-10T06:31:10Z"
      },
      "message": "compat: remove memcpy -> memmove backwards compatibility alias\n\nIn glib 2.13 memcpy was changed such that the way it copied bytes was reversed.\nThis caused all sorts of issues for existing software, which depended on the\nexisting behavior (when they should have been using memmove). See:\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=12518\nhttps://bugzilla.redhat.com/show_bug.cgi?id=638477\n\nNow that we require glibc 2.17+ (#17538), we should be well clear of having to\nmaintain our memcpy ->  memmove aliasing, which was introduced in #4339.",
      "tree": {
        "sha": "845655cb778ae48044cb06bc4f3d92e7d994cc0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/845655cb778ae48044cb06bc4f3d92e7d994cc0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52f0be3a933225429b9b59b58de4fe54c2b20a02",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmBIZ64ACgkQLuufXMCV\nJsEWug/+LFFggZixNFczVjKyxJ97lgnCCy3fbna0coLQqx2smWvdTpGvqFnyP6sj\nTJbbO+lRJC19OxAUZ0hF8ZgBYAv/JU2NpMEHBG3U4F4EFjCiLQc2se9Htk5geaCY\nHg9KwVwBQ6hZMb8FJXFIzTY3X5jNMDr9OBbhnD69F/6dmYtELyvXmMONYp1OJGQl\nZEJYUFzw8PoyqZaav+tNGGGHpY6/aDE7l0pBrWhjBA3SR8ZzeqCn2p/8AbS/Su4J\nO2Ry8rcVXQiw++Cp0wJceTkEBpnExbIP6YA9GG1SK98ekY44FFLh+BPNlSgIeQzR\n72gNCS4GMoBnEIkOoN7bntgERQkb+a03HzxR0j8CINcwGO13LicBoly3uguJS4YX\ntx80fmjLOBkbNsHJ9FZV2jCvdqqnSjvmzwbJmTn6wbDxLQo6XcCp1edP7T2GPdYq\ncQ7UC6PfXamGK4eI/aqHRV2mHJC0he0845aYm7/vhw4jv5hScD7xlGKHWLi3YrhP\nWETVEjzNUtzCn5T9Nw98TC6DPLfqZi1qAgZMyaOcL+ejkVMyddCBcKGmYgEqc21M\n6gAJt+z4qlDYN+/sj6BcWcz7olsiWBQnkhNFWsd5gcnifu0LGyySqsJkRxy1oCBg\n7HG8bKzHKUgAZPA0PRkfaxzX/x2e4czCkv5PPxRkiz2B74mwhUs=\n=PT9T\n-----END PGP SIGNATURE-----",
        "payload": "tree 845655cb778ae48044cb06bc4f3d92e7d994cc0c\nparent bca5ee6f38f0ac89f0bb90d9e005b5bbd7c25b82\nauthor fanquake <fanquake@gmail.com> 1615357870 +0800\ncommitter fanquake <fanquake@gmail.com> 1615357870 +0800\n\ncompat: remove memcpy -> memmove backwards compatibility alias\n\nIn glib 2.13 memcpy was changed such that the way it copied bytes was reversed.\nThis caused all sorts of issues for existing software, which depended on the\nexisting behavior (when they should have been using memmove). See:\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=12518\nhttps://bugzilla.redhat.com/show_bug.cgi?id=638477\n\nNow that we require glibc 2.17+ (#17538), we should be well clear of having to\nmaintain our memcpy ->  memmove aliasing, which was introduced in #4339.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52f0be3a933225429b9b59b58de4fe54c2b20a02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52f0be3a933225429b9b59b58de4fe54c2b20a02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52f0be3a933225429b9b59b58de4fe54c2b20a02/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bca5ee6f38f0ac89f0bb90d9e005b5bbd7c25b82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bca5ee6f38f0ac89f0bb90d9e005b5bbd7c25b82",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bca5ee6f38f0ac89f0bb90d9e005b5bbd7c25b82"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 1,
      "deletions": 56
    },
    "files": [
      {
        "sha": "583779e865268ca08adfcdcf7ae28c5abc53a68a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=52f0be3a933225429b9b59b58de4fe54c2b20a02",
        "patch": "@@ -553,7 +553,6 @@ libbitcoin_util_a_SOURCES = \\\n   support/lockedpool.cpp \\\n   chainparamsbase.cpp \\\n   clientversion.cpp \\\n-  compat/glibc_sanity.cpp \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n   fs.cpp \\"
      },
      {
        "sha": "ff581d4a9e1866d980bdb6f8f87e6f6c3ec71f65",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=52f0be3a933225429b9b59b58de4fe54c2b20a02",
        "patch": "@@ -9,13 +9,6 @@\n #include <cstddef>\n #include <cstdint>\n \n-// Prior to GLIBC_2.14, memcpy was aliased to memmove.\n-extern \"C\" void* memmove(void* a, const void* b, size_t c);\n-extern \"C\" void* memcpy(void* a, const void* b, size_t c)\n-{\n-    return memmove(a, b, c);\n-}\n-\n #if defined(__i386__) || defined(__arm__)\n \n extern \"C\" int64_t __udivmoddi4(uint64_t u, uint64_t v, uint64_t* rp);"
      },
      {
        "sha": "06d0dd6fbabe1cfe9838f8accaa0691276bf38b7",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bca5ee6f38f0ac89f0bb90d9e005b5bbd7c25b82/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bca5ee6f38f0ac89f0bb90d9e005b5bbd7c25b82/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=bca5ee6f38f0ac89f0bb90d9e005b5bbd7c25b82",
        "patch": "@@ -1,45 +0,0 @@\n-// Copyright (c) 2009-2020 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n-#endif\n-\n-#include <cstddef>\n-\n-extern \"C\" void* memcpy(void* a, const void* b, size_t c);\n-void* memcpy_int(void* a, const void* b, size_t c)\n-{\n-    return memcpy(a, b, c);\n-}\n-\n-namespace\n-{\n-// trigger: Use the memcpy_int wrapper which calls our internal memcpy.\n-//   A direct call to memcpy may be optimized away by the compiler.\n-// test: Fill an array with a sequence of integers. memcpy to a new empty array.\n-//   Verify that the arrays are equal. Use an odd size to decrease the odds of\n-//   the call being optimized away.\n-template <unsigned int T>\n-bool sanity_test_memcpy()\n-{\n-    unsigned int memcpy_test[T];\n-    unsigned int memcpy_verify[T] = {};\n-    for (unsigned int i = 0; i != T; ++i)\n-        memcpy_test[i] = i;\n-\n-    memcpy_int(memcpy_verify, memcpy_test, sizeof(memcpy_test));\n-\n-    for (unsigned int i = 0; i != T; ++i) {\n-        if (memcpy_verify[i] != i)\n-            return false;\n-    }\n-    return true;\n-}\n-} // namespace\n-\n-bool glibc_sanity_test()\n-{\n-    return sanity_test_memcpy<1025>();\n-}"
      },
      {
        "sha": "8efa41610262ed7a72d738a413984b3aac550528",
        "filename": "src/compat/sanity.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/compat/sanity.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/compat/sanity.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/sanity.h?ref=52f0be3a933225429b9b59b58de4fe54c2b20a02",
        "patch": "@@ -5,7 +5,6 @@\n #ifndef BITCOIN_COMPAT_SANITY_H\n #define BITCOIN_COMPAT_SANITY_H\n \n-bool glibc_sanity_test();\n bool glibcxx_sanity_test();\n \n #endif // BITCOIN_COMPAT_SANITY_H"
      },
      {
        "sha": "dea3f42aa2d433414ddc4972c5a75117a923946a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=52f0be3a933225429b9b59b58de4fe54c2b20a02",
        "patch": "@@ -771,7 +771,7 @@ static bool InitSanityCheck()\n         return InitError(Untranslated(\"Elliptic curve cryptography sanity check failure. Aborting.\"));\n     }\n \n-    if (!glibc_sanity_test() || !glibcxx_sanity_test())\n+    if (!glibcxx_sanity_test())\n         return false;\n \n     if (!Random_SanityCheck()) {"
      },
      {
        "sha": "496292875da0ff2c23a8a4a6f90e393727dcfca9",
        "filename": "src/test/sanity_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/test/sanity_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52f0be3a933225429b9b59b58de4fe54c2b20a02/src/test/sanity_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sanity_tests.cpp?ref=52f0be3a933225429b9b59b58de4fe54c2b20a02",
        "patch": "@@ -13,7 +13,6 @@ BOOST_FIXTURE_TEST_SUITE(sanity_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(basic_sanity)\n {\n-  BOOST_CHECK_MESSAGE(glibc_sanity_test() == true, \"libc sanity test\");\n   BOOST_CHECK_MESSAGE(glibcxx_sanity_test() == true, \"stdlib sanity test\");\n   BOOST_CHECK_MESSAGE(ECC_InitSanityCheck() == true, \"secp256k1 sanity test\");\n   BOOST_CHECK_MESSAGE(ChronoSanityCheck() == true, \"chrono epoch test\");"
      }
    ]
  }
]