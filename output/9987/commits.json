[
  {
    "sha": "8dc957ae06366d023e0d23c92279c5fb04b515d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGM5NTdhZTA2MzY2ZDAyM2UwZDIzYzkyMjc5YzVmYjA0YjUxNWQw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-03-17T03:37:43Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-03-17T03:37:43Z"
      },
      "message": "Remove unused code",
      "tree": {
        "sha": "88f5add0685b47069022cf6fa64223a1750ade90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88f5add0685b47069022cf6fa64223a1750ade90"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dc957ae06366d023e0d23c92279c5fb04b515d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dc957ae06366d023e0d23c92279c5fb04b515d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8dc957ae06366d023e0d23c92279c5fb04b515d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8dc957ae06366d023e0d23c92279c5fb04b515d0/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8040ae6fc576e9504186f2ae3ff2c8125de1095c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8040ae6fc576e9504186f2ae3ff2c8125de1095c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8040ae6fc576e9504186f2ae3ff2c8125de1095c"
      }
    ],
    "stats": {
      "total": 78,
      "additions": 0,
      "deletions": 78
    },
    "files": [
      {
        "sha": "61e0eb74e60234db5708de3cbc2c397df70d4056",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -483,22 +483,6 @@ static bool findSighashFlags(int& flags, const std::string& flagStr)\n     return false;\n }\n \n-uint256 ParseHashUO(std::map<std::string,UniValue>& o, std::string strKey)\n-{\n-    if (!o.count(strKey))\n-        return uint256();\n-    return ParseHashUV(o[strKey], strKey);\n-}\n-\n-std::vector<unsigned char> ParseHexUO(std::map<std::string,UniValue>& o, std::string strKey)\n-{\n-    if (!o.count(strKey)) {\n-        std::vector<unsigned char> emptyVec;\n-        return emptyVec;\n-    }\n-    return ParseHexUV(o[strKey], strKey);\n-}\n-\n static CAmount AmountFromValue(const UniValue& value)\n {\n     if (!value.isNum() && !value.isStr())"
      },
      {
        "sha": "1dc29826afd00106cef6e5f7382ec0def91dedac",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -135,7 +135,6 @@ class CMainParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n-        fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n@@ -235,7 +234,6 @@ class CTestNetParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));\n \n-        fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         fMineBlocksOnDemand = false;\n@@ -307,7 +305,6 @@ class CRegTestParams : public CChainParams {\n         vFixedSeeds.clear(); //!< Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds.\n \n-        fMiningRequiresPeers = false;\n         fDefaultConsistencyChecks = true;\n         fRequireStandard = false;\n         fMineBlocksOnDemand = true;"
      },
      {
        "sha": "4fe88c691cf89c3df1acd6a4998348e7db197196",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -61,8 +61,6 @@ class CChainParams\n     int GetDefaultPort() const { return nDefaultPort; }\n \n     const CBlock& GenesisBlock() const { return genesis; }\n-    /** Make miner wait to have peers to avoid wasting work */\n-    bool MiningRequiresPeers() const { return fMiningRequiresPeers; }\n     /** Default value for -checkmempool and -checkblockindex argument */\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n@@ -89,7 +87,6 @@ class CChainParams\n     std::string strNetworkID;\n     CBlock genesis;\n     std::vector<SeedSpec6> vFixedSeeds;\n-    bool fMiningRequiresPeers;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;\n     bool fMineBlocksOnDemand;"
      },
      {
        "sha": "8ee49b33aeadd3effd80fe6f3e59a7b5dbc9b178",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -290,7 +290,6 @@ class CCoinsViewCursor\n \n     virtual bool GetKey(uint256 &key) const = 0;\n     virtual bool GetValue(CCoins &coins) const = 0;\n-    /* Don't care about GetKeySize here */\n     virtual unsigned int GetValueSize() const = 0;\n \n     virtual bool Valid() const = 0;"
      },
      {
        "sha": "414df76a7caf4beb5e0d5ef77112efc53fc1a507",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -132,10 +132,6 @@ class CDBIterator\n         return true;\n     }\n \n-    unsigned int GetKeySize() {\n-        return piter->key().size();\n-    }\n-\n     template<typename V> bool GetValue(V& value) {\n         leveldb::Slice slValue = piter->value();\n         try {"
      },
      {
        "sha": "dbd08ff2e10c4b70c62611bdd3f1b13e8408d54d",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -146,13 +146,6 @@ class WorkQueue\n         while (numThreads > 0)\n             cond.wait(lock);\n     }\n-\n-    /** Return current depth of queue */\n-    size_t Depth()\n-    {\n-        std::unique_lock<std::mutex> lock(cs);\n-        return queue.size();\n-    }\n };\n \n struct HTTPPathHandler"
      },
      {
        "sha": "e0163e6b17128695bbd14b98d38b48e494fb3277",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -2406,11 +2406,6 @@ void CConnman::MarkAddressGood(const CAddress& addr)\n     addrman.Good(addr);\n }\n \n-void CConnman::AddNewAddress(const CAddress& addr, const CAddress& addrFrom, int64_t nTimePenalty)\n-{\n-    addrman.Add(addr, addrFrom, nTimePenalty);\n-}\n-\n void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty)\n {\n     addrman.Add(vAddr, addrFrom, nTimePenalty);"
      },
      {
        "sha": "3bbe3861736e0b9d9006a7c5d74ae16f460cf518",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -207,10 +207,8 @@ class CConnman\n     size_t GetAddressCount() const;\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n-    void AddNewAddress(const CAddress& addr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n     std::vector<CAddress> GetAddresses();\n-    void AddressCurrentlyConnected(const CService& addr);\n \n     // Denial-of-service detection/prevention\n     // The idea is to detect peers that are behaving"
      },
      {
        "sha": "ad064e5690cc7f0d180b47ae02911638ac35178e",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -28,7 +28,6 @@ namespace RPCServer\n     void OnStarted(boost::function<void ()> slot);\n     void OnStopped(boost::function<void ()> slot);\n     void OnPreCommand(boost::function<void (const CRPCCommand&)> slot);\n-    void OnPostCommand(boost::function<void (const CRPCCommand&)> slot);\n }\n \n class CBlockIndex;"
      },
      {
        "sha": "552682ab6748794600ec60629e6e9920c09ff274",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -46,8 +46,6 @@ struct CLockLocation {\n         return mutexName + \"  \" + sourceFile + \":\" + itostr(sourceLine) + (fTry ? \" (TRY)\" : \"\");\n     }\n \n-    std::string MutexName() const { return mutexName; }\n-\n     bool fTry;\n private:\n     std::string mutexName;"
      },
      {
        "sha": "9274f50d8b46928c879600e12d432c5624cd40bc",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -97,7 +97,6 @@ class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n     }\n };\n \n-typedef CCriticalSection CDynamicCriticalSection;\n /** Wrapped boost mutex: supports waiting but not recursive locking */\n typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n "
      },
      {
        "sha": "559b3caf1c58579a8039d3dd58e163d43aaf1aac",
        "filename": "src/test/key_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/test/key_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/test/key_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_tests.cpp?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -29,34 +29,6 @@ static const CBitcoinAddress addr2C(\"1CRj2HyM1CXWzHAXLQtiGLyggNT9WQqsDs\");\n static const std::string strAddressBad(\"1HV9Lc3sNHZxwj4Zk6fB38tEmBryq2cBiF\");\n \n \n-#ifdef KEY_TESTS_DUMPINFO\n-void dumpKeyInfo(uint256 privkey)\n-{\n-    CKey key;\n-    key.resize(32);\n-    memcpy(&secret[0], &privkey, 32);\n-    std::vector<unsigned char> sec;\n-    sec.resize(32);\n-    memcpy(&sec[0], &secret[0], 32);\n-    printf(\"  * secret (hex): %s\\n\", HexStr(sec).c_str());\n-\n-    for (int nCompressed=0; nCompressed<2; nCompressed++)\n-    {\n-        bool fCompressed = nCompressed == 1;\n-        printf(\"  * %s:\\n\", fCompressed ? \"compressed\" : \"uncompressed\");\n-        CBitcoinSecret bsecret;\n-        bsecret.SetSecret(secret, fCompressed);\n-        printf(\"    * secret (base58): %s\\n\", bsecret.ToString().c_str());\n-        CKey key;\n-        key.SetSecret(secret, fCompressed);\n-        std::vector<unsigned char> vchPubKey = key.GetPubKey();\n-        printf(\"    * pubkey (hex): %s\\n\", HexStr(vchPubKey).c_str());\n-        printf(\"    * address (base58): %s\\n\", CBitcoinAddress(vchPubKey).ToString().c_str());\n-    }\n-}\n-#endif\n-\n-\n BOOST_FIXTURE_TEST_SUITE(key_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(key_test1)"
      },
      {
        "sha": "c365ad7555db3c24a865f0f5d66d127db1b24907",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8dc957ae06366d023e0d23c92279c5fb04b515d0/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=8dc957ae06366d023e0d23c92279c5fb04b515d0",
        "patch": "@@ -455,11 +455,6 @@ class TestBuilder\n     {\n         return comment;\n     }\n-\n-    const CScript& GetScriptPubKey()\n-    {\n-        return creditTx->vout[0].scriptPubKey;\n-    }\n };\n \n std::string JSONPrettyPrint(const UniValue& univalue)"
      }
    ]
  }
]