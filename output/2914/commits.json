[
  {
    "sha": "37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2M2Mzg5YzVhMGNhNjNhZTM1NzM0NDBlY2RmZTk1ZDI4YWQ4ZjA3",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-08-19T03:21:06Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-08-20T09:27:26Z"
      },
      "message": "Performance optimization for bloom filters.\n\nThis reduces a peer's ability to attack network resources by\n using a full bloom filter, but without reducing the usability\n of bloom filters.  It sets a default match everything filter\n for peers and it generalizes a prior optimization to\n cover more cases.",
      "tree": {
        "sha": "51ef4367b16dc75bd60d4de0da261b65cebf4f2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51ef4367b16dc75bd60d4de0da261b65cebf4f2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bc9a192696273c88966c39debf8d17f16ebe471",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bc9a192696273c88966c39debf8d17f16ebe471",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bc9a192696273c88966c39debf8d17f16ebe471"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 33,
      "deletions": 7
    },
    "files": [
      {
        "sha": "8e8d8fa06b920def8e79284d88deeb12ac5e3752",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
        "patch": "@@ -23,6 +23,8 @@ vData(min((unsigned int)(-1  / LN2SQUARED * nElements * log(nFPRate)), MAX_BLOOM\n // The ideal number of hash functions is filter size * ln(2) / number of elements\n // Again, we ignore filter parameters which will create a bloom filter with more hash functions than the protocol limits\n // See http://en.wikipedia.org/wiki/Bloom_filter for an explanation of these formulas\n+isFull(false),\n+isEmpty(false),\n nHashFuncs(min((unsigned int)(vData.size() * 8 / nElements * LN2), MAX_HASH_FUNCS)),\n nTweak(nTweakIn),\n nFlags(nFlagsIn)\n@@ -37,14 +39,15 @@ inline unsigned int CBloomFilter::Hash(unsigned int nHashNum, const std::vector<\n \n void CBloomFilter::insert(const vector<unsigned char>& vKey)\n {\n-    if (vData.size() == 1 && vData[0] == 0xff)\n+    if (isFull)\n         return;\n     for (unsigned int i = 0; i < nHashFuncs; i++)\n     {\n         unsigned int nIndex = Hash(i, vKey);\n         // Sets bit nIndex of vData\n         vData[nIndex >> 3] |= bit_mask[7 & nIndex];\n     }\n+    isEmpty = false;\n }\n \n void CBloomFilter::insert(const COutPoint& outpoint)\n@@ -63,8 +66,10 @@ void CBloomFilter::insert(const uint256& hash)\n \n bool CBloomFilter::contains(const vector<unsigned char>& vKey) const\n {\n-    if (vData.size() == 1 && vData[0] == 0xff)\n+    if (isFull)\n         return true;\n+    if (isEmpty)\n+        return false;\n     for (unsigned int i = 0; i < nHashFuncs; i++)\n     {\n         unsigned int nIndex = Hash(i, vKey);\n@@ -99,6 +104,10 @@ bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx, const uint256& ha\n     bool fFound = false;\n     // Match if the filter contains the hash of tx\n     //  for finding tx when they appear in a block\n+    if (isFull)\n+        return true;\n+    if (isEmpty)\n+        return false;\n     if (contains(hash))\n         fFound = true;\n \n@@ -158,3 +167,16 @@ bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx, const uint256& ha\n \n     return false;\n }\n+\n+void CBloomFilter::UpdateEmptyFull()\n+{\n+    bool full = true;\n+    bool empty = true;\n+    for (unsigned int i = 0; i < vData.size(); i++)\n+    {\n+        full &= vData[i] == 0xff;\n+        empty &= vData[i] == 0;\n+    }\n+    isFull = full;\n+    isEmpty = empty;\n+}"
      },
      {
        "sha": "f482bfcc10d2932467f815d4c9acaadceebebdf7",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
        "patch": "@@ -42,6 +42,8 @@ class CBloomFilter\n {\n private:\n     std::vector<unsigned char> vData;\n+    bool isFull;\n+    bool isEmpty;\n     unsigned int nHashFuncs;\n     unsigned int nTweak;\n     unsigned char nFlags;\n@@ -57,9 +59,7 @@ class CBloomFilter\n     // It should generally always be a random value (and is largely only exposed for unit testing)\n     // nFlags should be one of the BLOOM_UPDATE_* enums (not _MASK)\n     CBloomFilter(unsigned int nElements, double nFPRate, unsigned int nTweak, unsigned char nFlagsIn);\n-    // Using a filter initialized with this results in undefined behavior\n-    // Should only be used for deserialization\n-    CBloomFilter() {}\n+    CBloomFilter() : isFull(true) {}\n \n     IMPLEMENT_SERIALIZE\n     (\n@@ -83,6 +83,9 @@ class CBloomFilter\n \n     // Also adds any outputs which match the filter to the filter (to match their spending txes)\n     bool IsRelevantAndUpdate(const CTransaction& tx, const uint256& hash);\n+\n+    // Checks for empty and full filters to avoid wasting cpu\n+    void UpdateEmptyFull();\n };\n \n #endif /* BITCOIN_BLOOM_H */"
      },
      {
        "sha": "b62f107b4c7262d2aff0e12ef8bb9d55b421f173",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
        "patch": "@@ -3893,6 +3893,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             LOCK(pfrom->cs_filter);\n             delete pfrom->pfilter;\n             pfrom->pfilter = new CBloomFilter(filter);\n+            filter.UpdateEmptyFull();\n         }\n         pfrom->fRelayTxes = true;\n     }\n@@ -3922,7 +3923,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n     {\n         LOCK(pfrom->cs_filter);\n         delete pfrom->pfilter;\n-        pfrom->pfilter = NULL;\n+        pfrom->pfilter = new CBloomFilter();\n         pfrom->fRelayTxes = true;\n     }\n "
      },
      {
        "sha": "686861fbeb3ee49b7c500c0e947a54ab2daee211",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=37c6389c5a0ca63ae3573440ecdfe95d28ad8f07",
        "patch": "@@ -267,7 +267,7 @@ class CNode\n         nMisbehavior = 0;\n         fRelayTxes = false;\n         setInventoryKnown.max_size(SendBufferSize() / 1000);\n-        pfilter = NULL;\n+        pfilter = new CBloomFilter();\n \n         // Be shy and don't send version until we hear\n         if (hSocket != INVALID_SOCKET && !fInbound)"
      }
    ]
  }
]