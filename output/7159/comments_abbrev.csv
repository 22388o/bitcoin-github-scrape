dcousens,2015-12-03T10:35:34Z,Perhaps just parameterize the setting of `sequence` on inputs?  That way we can do other things too?\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161590919,161590919,
laanwj,2015-12-03T10:46:44Z,"I tend to agree with @dcousens, maybe this is slightly more 'user friendly', but allowing setting the underlying values is more in the spirit of raw transaction usage.\nAlso bitcoin-tx needs a similar change.\n",https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161594423,161594423,
jonasschnelli,2015-12-03T12:01:26Z,"> Perhaps just parameterize the setting of sequence on inputs? That way we can do other things too?\n\nFor `createrawtransaction` this could make sense, although, I think both should be possible (a nSequence per input as well as a general RBF-opt-in). I prefer exposing relevant features (RBF is relevant IMO) over a clear interface. Manual setting the nSequence to int.max-2 is not user friendly and",https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161612282,161612282,
laanwj,2015-12-03T12:06:45Z,"Sure, for `fundrawtransaction` it is different, as that is a wallet call (so the wallet will determine inputs for you). My comment just applies to `createrawtransaction`.\n",https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161614830,161614830,
jgarzik,2015-12-03T14:02:26Z,Don't extend createrawtransaction without also extending bitcoin-tx -- that's the preferred place for pure function work unconnected to wallet.\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161648535,161648535,
gmaxwell,2015-12-03T14:16:16Z,Anti-sniping (which I think createrawtransaction should do by default) is an argument against bitcoin-tx; even absent that: the complete application of createrawtransaction is not pure function-- you had to get the txids for the coins from somewhere... but sure this should have parity in bitcoin-tx.\n\nI think createrawtransaction should gain the ability to manually set sequences per input. No mor,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161652401,161652401,
laanwj,2015-12-03T14:23:30Z,"> Anti-sniping (which I think createrawtransaction should do by default) is an argument against bitcoin-tx; \n\nIt's not an argument against bitcoin-tx. A program can get the current block number from anywhere and pass it to `createrawtransaction` or `bitcoin-tx` alike. No need to create a tight coupling. Some parts of transaction creation are not pure function, that doesn't mean that steps in the",https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161654226,161654226,
jonasschnelli,2015-12-03T15:01:36Z,IIRC `createrawtransaction` does **not** do the nLockTime anti-sniping (only `CWallet::CreateTransaction()` = RPC `sendto`\* or `fundrawtransaction` does).\n\nI agree with @jgarzik that bitcoin-tx should also support nSequence and/or RBF opt-in. I check now if it makes sense to extend bitcoin-tx within this PR (or if it require to much work in terms or parameter parsing and syntax).\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161666384,161666384,
jonasschnelli,2015-12-03T15:46:48Z,Added two bitcoin-tx related commits.\n1. Allow to provide a sequence number (optional) for the **in** command (`in=TXID:VOUT(:SEQUENCE_NUMBER)`)\n2. Add a `rbfoptin(=N)` command (mutate a tx and set the input N's [or all] RBF flag)\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-161682463,161682463,
morcos,2015-12-11T20:55:12Z,"> I think createrawtransaction should gain the ability to manually set sequences per input. No more parameters are needed: just add ""seq"" to the dictionary that takes the vin/txid fields now.\n\nAre you going to add this? I think its a good idea.\n",https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-164045364,164045364,
jonasschnelli,2015-12-22T13:00:16Z,"> > I think createrawtransaction should gain the ability to manually set sequences per input. No more parameters are needed: just add ""seq"" to the dictionary that takes the vin/txid fields now.\n> \n> Are you going to add this? I think its a good idea.\n\nRebased & added a commit that allows to set the sequence per input when using `createrawtransaction`.\n",https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-166611157,166611157,
dcousens,2015-12-29T01:43:41Z,@jonasschnelli what is the syntax OOI?  (haven't had a chance to read the impl. yet)\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-167692471,167692471,
jonasschnelli,2015-12-29T07:47:10Z,@dcousens: The inputs object in `createrawtransation` now can have a `sequence`-value next to `txid` and `vout`.\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-167740440,167740440,
jonasschnelli,2016-01-11T08:31:13Z,"Here again the API changes:\n\n**API changes:**\n\n<pre>createrawtransaction [{\""txid\"":\""id\"",\""vout\"":n, <strong>\""sequence\"":<num></strong>},...] \n{\""address\"":amount,\""data\"":\""hex\"",...} ( locktime ) <strong>( opt into Replace-By-Fee )[bool]</strong></pre>\n\n<pre>fundrawtransaction \""hexstring\"" ( includeWatching ) <strong>( opt into Replace-By-Fee )[bool]</strong></pre>\n\n**Bitcoin-Tx**\n",https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-170463655,170463655,
jonasschnelli,2016-04-04T07:57:30Z,Rebased.\n\nIMO the `fundrawtransaction` and the `bitcoin-tx` are okay.\nThe only question is if we want the higher level function in `createrawtransaction` (setting the sequence-no per input is possible now).\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-205181782,205181782,
jgarzik,2016-04-04T13:36:28Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-205298215,205298215,
jonasschnelli,2016-04-12T11:46:34Z,Closing in favor of #7865.\n,https://github.com/bitcoin/bitcoin/pull/7159#issuecomment-208860330,208860330,
petertodd,2015-12-03T10:35:37Z,"Typo ""with height fees""\n",https://github.com/bitcoin/bitcoin/pull/7159#discussion_r46535631,46535631,src/rpcrawtransaction.cpp
jonasschnelli,2015-12-03T10:36:20Z,"Sorry.. meant to be ""higher fees"". Will fix.\n",https://github.com/bitcoin/bitcoin/pull/7159#discussion_r46535709,46535709,src/rpcrawtransaction.cpp
dcousens,2015-12-29T08:02:57Z,"This really isn't necessary,  the RBF rules are very clear such that if `sequence` is specified at all (aka, `< 0xffffffff - 2`?), then it will be used.\nIts as much work by the user to just add the `sequence` field per input,  so we could just omit this `opt-in RBF` parameter entirely.\n",https://github.com/bitcoin/bitcoin/pull/7159#discussion_r48525986,48525986,src/rpcrawtransaction.cpp
dcousens,2015-12-29T08:04:47Z,It would also be less confusing what `rbfOptIn` does in a context of it being disabled on the CLI.\n,https://github.com/bitcoin/bitcoin/pull/7159#discussion_r48526038,48526038,src/rpcrawtransaction.cpp
jonasschnelli,2015-12-29T08:24:29Z,But is setting all inputs sequence to INT-MAX-2 an adequate API for creating a transaction that is suitable for RBF? IMO a clear Boolean should be preferred.\n,https://github.com/bitcoin/bitcoin/pull/7159#discussion_r48526816,48526816,src/rpcrawtransaction.cpp
dcousens,2015-12-29T08:26:19Z,"> But is setting all inputs sequence to INT-MAX-2 an adequate API for creating a transaction that is suitable for RBF?\n\nIMHO, yes.\n",https://github.com/bitcoin/bitcoin/pull/7159#discussion_r48526883,48526883,src/rpcrawtransaction.cpp
