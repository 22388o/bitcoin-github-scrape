[
  {
    "sha": "bca76d28757932184a559b25dcba221f3145cc47",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiY2E3NmQyODc1NzkzMjE4NGE1NTliMjVkY2JhMjIxZjMxNDVjYzQ3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T08:27:33Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:05Z"
      },
      "message": "[Refactor] CreateTransaction(): use bit flags\nThis will allow to add flags for RBF and other features",
      "tree": {
        "sha": "9e8e339b1ea5c426085967d3bd7b08071b1b4054",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e8e339b1ea5c426085967d3bd7b08071b1b4054"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bca76d28757932184a559b25dcba221f3145cc47",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqRAAoJECnUvLZBb1Ps/7MP/2X8zIcqJWwRwQ87oBb0lBIZ\nqo6JI7wKdmQmv5alNKYl9AiCr3M332OeAUA/rTgQdPAu771NOJL0H/oVjO2E+0Hp\n+Al/Trc5DYz/lIPyy3n5rdulx8rHeLWFHLopAqGhlWJDMWmm2JUJ+uuFznyFGXQE\n9HTa/vxilPXxBntrHqQACAooa952H7j/CPO3vk3UNSuL24IG6uMTZYfWiWFOwq1H\nYmajg+rlLqAesGQi7zKjrVIVt+s+iSKYU22R7mouOBqLTW7en/62O7B9I9i0+9dg\nlcpk3MJLrgT8uxZJakW6N6DZjg2WbbDOlrpwRv8YWBNHqt9iXxCQkHO7mMjNWrBY\nc8MiYP0VcX9UoJTIh6zZBp+XYyjevgWja1/d3+nu0kbJnlXAAJvxt3Of372HtmXL\nuZjxmgQa/qL+gBvnwqn4KKcaDrHTJSNXoIpviQrSDNPOh0a5sM7lhMbN8Y8XxmgS\npO9XBrJ6iTX5llvunR9/GGVeigOKnVJL6F7x/yXd24OD5b64TNuv8QYn3hrvrCrY\n5iD8yulOedM9qNWAwd+/671autkfSRlVP1heyQzz/DKx39bAU9Ghpp9xuEIOKPBy\nBbp7Oau+Po2A2QtA6mKT7V6P+vdb549PKiUIRszP74JBvWzu3w22rNFACf5yoVC8\nUYLMarRYrzVVj1W+IBrX\n=2nE9\n-----END PGP SIGNATURE-----",
        "payload": "tree 9e8e339b1ea5c426085967d3bd7b08071b1b4054\nparent e662a76288011fe6a640f1c02c2381284ad93a03\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449131253 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755665 +0200\n\n[Refactor] CreateTransaction(): use bit flags\nThis will allow to add flags for RBF and other features\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bca76d28757932184a559b25dcba221f3145cc47",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bca76d28757932184a559b25dcba221f3145cc47",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bca76d28757932184a559b25dcba221f3145cc47/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e662a76288011fe6a640f1c02c2381284ad93a03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e662a76288011fe6a640f1c02c2381284ad93a03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e662a76288011fe6a640f1c02c2381284ad93a03"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 9,
      "deletions": 5
    },
    "files": [
      {
        "sha": "71301b2ca41d3d863d59d11365dbafce95796ff0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bca76d28757932184a559b25dcba221f3145cc47/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bca76d28757932184a559b25dcba221f3145cc47/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bca76d28757932184a559b25dcba221f3145cc47",
        "patch": "@@ -1951,7 +1951,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount &nFeeRet, int& nC\n \n     CReserveKey reservekey(this);\n     CWalletTx wtx;\n-    if (!CreateTransaction(vecSend, wtx, reservekey, nFeeRet, nChangePosRet, strFailReason, &coinControl, false))\n+    if (!CreateTransaction(vecSend, wtx, reservekey, nFeeRet, nChangePosRet, strFailReason, &coinControl, CREATE_TX_DONT_SIGN))\n         return false;\n \n     if (nChangePosRet != -1)\n@@ -1968,7 +1968,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount &nFeeRet, int& nC\n }\n \n bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet,\n-                                int& nChangePosRet, std::string& strFailReason, const CCoinControl* coinControl, bool sign)\n+                                int& nChangePosRet, std::string& strFailReason, const CCoinControl* coinControl, unsigned int flags)\n {\n     CAmount nValue = 0;\n     unsigned int nSubtractFeeFromAmount = 0;\n@@ -2189,7 +2189,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                     bool signSuccess;\n                     const CScript& scriptPubKey = coin.first->vout[coin.second].scriptPubKey;\n                     CScript& scriptSigRes = txNew.vin[nIn].scriptSig;\n-                    if (sign)\n+                    if (!(flags & CREATE_TX_DONT_SIGN))\n                         signSuccess = ProduceSignature(TransactionSignatureCreator(this, &txNewConst, nIn, SIGHASH_ALL), scriptPubKey, scriptSigRes);\n                     else\n                         signSuccess = ProduceSignature(DummySignatureCreator(this), scriptPubKey, scriptSigRes);\n@@ -2205,7 +2205,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 unsigned int nBytes = ::GetSerializeSize(txNew, SER_NETWORK, PROTOCOL_VERSION);\n \n                 // Remove scriptSigs if we used dummy signatures for fee calculation\n-                if (!sign) {\n+                if (flags & CREATE_TX_DONT_SIGN) {\n                     BOOST_FOREACH (CTxIn& vin, txNew.vin)\n                         vin.scriptSig = CScript();\n                 }"
      },
      {
        "sha": "da2ce3e738c08e751621d59fe8085806e1b96fd8",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bca76d28757932184a559b25dcba221f3145cc47/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bca76d28757932184a559b25dcba221f3145cc47/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=bca76d28757932184a559b25dcba221f3145cc47",
        "patch": "@@ -533,6 +533,10 @@ class CAccountingEntry\n     std::vector<char> _ssExtra;\n };\n \n+enum CreateTransactionFlags {\n+    CREATE_TX_DEFAULT     = 0,\n+    CREATE_TX_DONT_SIGN   = (1U << 0)\n+};\n \n /** \n  * A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n@@ -746,7 +750,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * selected by SelectCoins(); Also create the change output, when needed\n      */\n     bool CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosRet,\n-                           std::string& strFailReason, const CCoinControl *coinControl = NULL, bool sign = true);\n+                           std::string& strFailReason, const CCoinControl *coinControl = NULL, unsigned int flags = CREATE_TX_DEFAULT);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n     bool AddAccountingEntry(const CAccountingEntry&, CWalletDB & pwalletdb);"
      }
    ]
  },
  {
    "sha": "0df8bd5b50aea88b505427399dbf27b3a760b6f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGY4YmQ1YjUwYWVhODhiNTA1NDI3Mzk5ZGJmMjdiM2E3NjBiNmY5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T08:53:23Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:05Z"
      },
      "message": "Allow to opt-into RBF when creating a transaction",
      "tree": {
        "sha": "04a6d50dd129446dd5191b3179839af29810a566",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04a6d50dd129446dd5191b3179839af29810a566"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0df8bd5b50aea88b505427399dbf27b3a760b6f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqRAAoJECnUvLZBb1Ps100QAIPdIbNBry7fMTQ36mLHaAV2\nofgKu704uAYhlt8EfH6gDOPF82ML2zR6ZtZ6jnSErLy1GkcZfQVR9wfzi1xVDiiH\nVtOWry2Lyr/+49mkKOm+IZVmf+PzKLwE1m3Ohy7wE4VmXp89tyWD9qESEGncYOXO\nFPQ9acch1i5mXQ5+4uAnO7ywB7Q5cY1sAxQHF56rQQ53T9EEHVI5ayCWJs2T2rDu\nRmg4m0sydwMaORjQOuig5bZkz2xu7MbWRUCIs+MJronqEkEo/rd0wzmCfDaAywof\nraBe4c41lK1lTWd1WOmrQbLNQ81vHLuvH/G1QqFtUVgRjGEn6SYEuzSwP3SWc0Gn\nWydajP8w6jhdHOw5oKbBD1/Axa9bU5sQwo5KEIlI3jTlR09pOBFm3QhioNKyZAPw\neoupUlq2vRC/63a6Z/UXrJVRYTEPhA6V/KEacCqRtZoONaJL8M5GT0bn4e5C/Mnk\nFhT96yBZuzG8Zt5doayEqDlr+nvzYAVopYeLhlw+q/6x3LCJAtIn+10JuXB/KrBR\nrboKryTC5mukRad3VtO9Ez/xlQebhzEevXIXajLemOhq3wuV2G+6r1xP/ouScnfz\nVMzmBQbXtohyAz52c4bBZ82PAwb2f4NYGdTJ1BAKb+UTSh0+hprG15IZ8Ip9jzFX\nswlqn1G9sJDKhnNCs0VG\n=DWeG\n-----END PGP SIGNATURE-----",
        "payload": "tree 04a6d50dd129446dd5191b3179839af29810a566\nparent bca76d28757932184a559b25dcba221f3145cc47\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449132803 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755665 +0200\n\nAllow to opt-into RBF when creating a transaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0df8bd5b50aea88b505427399dbf27b3a760b6f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0df8bd5b50aea88b505427399dbf27b3a760b6f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0df8bd5b50aea88b505427399dbf27b3a760b6f9/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bca76d28757932184a559b25dcba221f3145cc47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bca76d28757932184a559b25dcba221f3145cc47",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bca76d28757932184a559b25dcba221f3145cc47"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b2732e92e4b0d58535965e6ad9514e0b161ebb4c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0df8bd5b50aea88b505427399dbf27b3a760b6f9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0df8bd5b50aea88b505427399dbf27b3a760b6f9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0df8bd5b50aea88b505427399dbf27b3a760b6f9",
        "patch": "@@ -2179,7 +2179,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 // nLockTime set above actually works.\n                 BOOST_FOREACH(const PAIRTYPE(const CWalletTx*,unsigned int)& coin, setCoins)\n                     txNew.vin.push_back(CTxIn(coin.first->GetHash(),coin.second,CScript(),\n-                                              std::numeric_limits<unsigned int>::max()-1));\n+                                              std::numeric_limits<unsigned int>::max() - ((flags & CREATE_TX_RBF_OPT_IN) ? 2 : 1) ));\n \n                 // Sign\n                 int nIn = 0;"
      },
      {
        "sha": "c69e60f1d56b26d1dcd1f90b30f3b8e3b951e912",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0df8bd5b50aea88b505427399dbf27b3a760b6f9/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0df8bd5b50aea88b505427399dbf27b3a760b6f9/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0df8bd5b50aea88b505427399dbf27b3a760b6f9",
        "patch": "@@ -535,7 +535,8 @@ class CAccountingEntry\n \n enum CreateTransactionFlags {\n     CREATE_TX_DEFAULT     = 0,\n-    CREATE_TX_DONT_SIGN   = (1U << 0)\n+    CREATE_TX_DONT_SIGN   = (1U << 0),\n+    CREATE_TX_RBF_OPT_IN  = (1U << 1)\n };\n \n /** "
      }
    ]
  },
  {
    "sha": "bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDU5YTA1MGYxNGY4ZThjNTEyZTYzZjZkNjcyMWFlNmNjYjhmYWQ3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T08:54:33Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:05Z"
      },
      "message": "[RPC] Add RBF support for createrawtransaction",
      "tree": {
        "sha": "95f9bcc1fc554151f0331c1708f54db08669c8f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95f9bcc1fc554151f0331c1708f54db08669c8f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqRAAoJECnUvLZBb1PsnTYP/2tmE1FJm8vmjpWYNfaQFt8H\n24MkMAaSv9LN+xtnYllL6lN2r/RZK9gioJm6S7XZdIicGfSUYxGghGd7UKRxgF8F\nIF8h6F8+1nfV0RBCPNNK0xDMB/GQK5iRCGYJsL6savq1StpmA1epJV7uAM+z22qu\nM4m8LPHy8XUYyJimk9432jQlqSJvLCjvdSBUxJkZUJkk/fdG26rPkY9ZnTqfZ8VZ\nd/AwJbWutcfuWuqMmRtiMylA3g6MmahCkyl3pCD3h2Ay69uRIHWTbetJ/VR+cDh4\nZKkAKg+LsTozeZrL134xTxbeiYLI2srSPnGJZ0U+d1PcJM31bGHb1BZ6xdh6yi2Z\ndGshz8RlwOMRM2P09k2xoBAsxji2ilGoWMnwVa34roPTWUTJfJNfE5oL6avys8KO\nByXf/nSVViMovlAPYrGJgzn52/8izdtmg9zGA1G3bayJiY5lJGa50uuSqA+QPs5U\n7bC51IZxwUDxsOWhHneIQ0X5EP6ia1GADRNGv5vxvNRgHfzfEaGBXsV5od36ol9P\nYhgs8Grk9bOxVeLgvnrMJ2fZsjNsLi+IzVv4V6gUBC0a8b09IR+doSpwSAU+kbOX\nYuXyc3q1bLAdZsAnMKl3iOiWe+XyCyOl60ngH0phndnQXlbqP2W2QWIGKzPQM0BG\nNjVvswYLYnWRc2zo+HLe\n=PCZC\n-----END PGP SIGNATURE-----",
        "payload": "tree 95f9bcc1fc554151f0331c1708f54db08669c8f6\nparent 0df8bd5b50aea88b505427399dbf27b3a760b6f9\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449132873 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755665 +0200\n\n[RPC] Add RBF support for createrawtransaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0df8bd5b50aea88b505427399dbf27b3a760b6f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0df8bd5b50aea88b505427399dbf27b3a760b6f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0df8bd5b50aea88b505427399dbf27b3a760b6f9"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "069af503de5e322ac3e6b8c5e6085bb60ade4b1a",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
        "patch": "@@ -77,6 +77,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"createrawtransaction\", 0 },\n     { \"createrawtransaction\", 1 },\n     { \"createrawtransaction\", 2 },\n+    { \"createrawtransaction\", 3 },\n     { \"signrawtransaction\", 1 },\n     { \"signrawtransaction\", 2 },\n     { \"sendrawtransaction\", 1 },"
      },
      {
        "sha": "cf7d3892c65c398787d60e7cf93244c7195f549e",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
        "patch": "@@ -319,9 +319,9 @@ UniValue verifytxoutproof(const UniValue& params, bool fHelp)\n \n UniValue createrawtransaction(const UniValue& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 2 || params.size() > 3)\n+    if (fHelp || params.size() < 2 || params.size() > 4)\n         throw runtime_error(\n-            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime )\\n\"\n+            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime ) ( opt into Replace-By-Fee )\\n\"\n             \"\\nCreate a transaction spending the given inputs and creating new outputs.\\n\"\n             \"Outputs can be addresses or data.\\n\"\n             \"Returns hex-encoded raw transaction.\\n\"\n@@ -344,6 +344,8 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n             \"      ...\\n\"\n             \"    }\\n\"\n             \"3. locktime                (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n+            \"4. opt into RBF            (boolean, optional, default=false) Allow this transaction to be replaced by a transaction with heigher fees\\n\"\n+\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"            (string) hex string of the transaction\\n\"\n \n@@ -370,6 +372,8 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n         rawTx.nLockTime = nLockTime;\n     }\n \n+    bool rbfOptIn = (params.size() > 3 && params[3].isTrue());\n+\n     for (unsigned int idx = 0; idx < inputs.size(); idx++) {\n         const UniValue& input = inputs[idx];\n         const UniValue& o = input.get_obj();\n@@ -384,6 +388,8 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout must be positive\");\n \n         uint32_t nSequence = (rawTx.nLockTime ? std::numeric_limits<uint32_t>::max() - 1 : std::numeric_limits<uint32_t>::max());\n+        if (rbfOptIn)\n+            nSequence = std::numeric_limits<uint32_t>::max() - 2;\n         CTxIn in(COutPoint(txid, nOutput), CScript(), nSequence);\n \n         rawTx.vin.push_back(in);"
      }
    ]
  },
  {
    "sha": "09499a308abec5d3de8edee30c0853f4fb75c107",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTQ5OWEzMDhhYmVjNWQzZGU4ZWRlZTMwYzA4NTNmNGZiNzVjMTA3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T09:04:28Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:05Z"
      },
      "message": "[RPC] Add RBF support for fundrawtransaction",
      "tree": {
        "sha": "10a49cff556c6ddc41bcc857d5ff510ef8949a96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10a49cff556c6ddc41bcc857d5ff510ef8949a96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09499a308abec5d3de8edee30c0853f4fb75c107",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqRAAoJECnUvLZBb1Ps7ggQAIAtcqkCicq1ebTtw+tLBIp5\nov57YYLQZAczWtQjf3a/6eIEbYepIeA1ODkwQxSMhVjuhesZxpgc9u4dyDZM3U1K\nOB0o7MDEJ5p9ty5Dldib46ZwIDeow9br5sK4tlMswlBnBTZSUydsQ5wSa4Djip12\nDkhR3llDLw+BtcoWbon/Qj2wXA2l92JtwoaCWfgfg0dRZlX49OjqnFoEpNEFLQ+c\nzrtIniJREW3ImbL8wu4WRvGu+dBk6hZsnIFuE1AlJlBT4BIMXGnfIbnVgDI8c1Ft\nfT3/4hLWvoX4B1jEcqOBC1iUJpaEbgpTC0MI6V8PBHNzNstLc4CxdprncLuYvIR6\nQgNMcg1kvGYFcps+l+FS5ZwJ6+EpELL/aKxpEwUMJGxoR9M3ZTR3I9+Fm23/pCPN\nvTD3qBgUjnHXrgw+1DuzdrbzHMa4Nf6z5RkcknCASAynZPL14Ot1ENqbYQdNMzNW\ngrOXL1JJvsrIpzsHfRtefUUIKqu+jln2VWMmRosF8dJ3AoijspxU1PKZHwUKaKo6\n6OmfdBnfoCDq9XxHiEbTJEU1RhsrhNbx8oy/BxKYRa3QovEEd/S7b213MFLw5BRA\nkZiU21sfMODE0VvDElhJowKHi9ymiIaqSQwWIHs2sgTD44dJT8k0879SGxfVMiSE\nVo7VKnb9ou6AYnVpC1ZF\n=C6Bi\n-----END PGP SIGNATURE-----",
        "payload": "tree 10a49cff556c6ddc41bcc857d5ff510ef8949a96\nparent bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449133468 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755665 +0200\n\n[RPC] Add RBF support for fundrawtransaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09499a308abec5d3de8edee30c0853f4fb75c107",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09499a308abec5d3de8edee30c0853f4fb75c107",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09499a308abec5d3de8edee30c0853f4fb75c107/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd59a050f14f8e8c512e63f6d6721ae6ccb8fad7"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9e3a1c0fb7c3f74d8161798b4020556f0d25be1b",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09499a308abec5d3de8edee30c0853f4fb75c107/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09499a308abec5d3de8edee30c0853f4fb75c107/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=09499a308abec5d3de8edee30c0853f4fb75c107",
        "patch": "@@ -82,6 +82,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"signrawtransaction\", 2 },\n     { \"sendrawtransaction\", 1 },\n     { \"fundrawtransaction\", 1 },\n+    { \"fundrawtransaction\", 2 },\n     { \"gettxout\", 1 },\n     { \"gettxout\", 2 },\n     { \"gettxoutproof\", 0 },"
      },
      {
        "sha": "7eaf76e90655fb167a5192572bf01da163c07536",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09499a308abec5d3de8edee30c0853f4fb75c107/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09499a308abec5d3de8edee30c0853f4fb75c107/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=09499a308abec5d3de8edee30c0853f4fb75c107",
        "patch": "@@ -2439,9 +2439,9 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     if (!EnsureWalletIsAvailable(fHelp))\n         return NullUniValue;\n \n-    if (fHelp || params.size() < 1 || params.size() > 2)\n+    if (fHelp || params.size() < 1 || params.size() > 3)\n         throw runtime_error(\n-                            \"fundrawtransaction \\\"hexstring\\\" includeWatching\\n\"\n+                            \"fundrawtransaction \\\"hexstring\\\" ( includeWatching ) ( opt into Replace-By-Fee )\\n\"\n                             \"\\nAdd inputs to a transaction until it has enough in value to meet its out value.\\n\"\n                             \"This will not modify existing inputs, and will add one change output to the outputs.\\n\"\n                             \"Note that inputs which were signed may need to be resigned after completion since in/outputs have been added.\\n\"\n@@ -2452,7 +2452,8 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n                             \"Only pay-to-pubkey, multisig, and P2SH versions thereof are currently supported for watch-only\\n\"\n                             \"\\nArguments:\\n\"\n                             \"1. \\\"hexstring\\\"     (string, required) The hex string of the raw transaction\\n\"\n-                            \"2. includeWatching (boolean, optional, default false) Also select inputs which are watch only\\n\"\n+                            \"2. includeWatching (boolean, optional, default=false) Also select inputs which are watch only\\n\"\n+                            \"3. opt into RBF    (boolean, optional, default=false) Allow this transaction to be replaced by a transaction with heigher fees\\n\"\n                             \"\\nResult:\\n\"\n                             \"{\\n\"\n                             \"  \\\"hex\\\":       \\\"value\\\", (string)  The resulting raw transaction (hex-encoded string)\\n\"\n@@ -2489,7 +2490,10 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     CAmount nFee;\n     string strFailReason;\n     int nChangePos = -1;\n-    if(!pwalletMain->FundTransaction(tx, nFee, nChangePos, strFailReason, includeWatching))\n+    unsigned int flags = CREATE_TX_DONT_SIGN;\n+    if (params.size() > 2 && params[2].isTrue())\n+        flags |= CREATE_TX_RBF_OPT_IN;\n+    if(!pwalletMain->FundTransaction(tx, nFee, nChangePos, strFailReason, includeWatching, flags))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, strFailReason);\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "6825afd1f80c7bf1acc7450262dc2a585d27341f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09499a308abec5d3de8edee30c0853f4fb75c107/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09499a308abec5d3de8edee30c0853f4fb75c107/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=09499a308abec5d3de8edee30c0853f4fb75c107",
        "patch": "@@ -1932,7 +1932,7 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount &nFeeRet, int& nChangePosRet, std::string& strFailReason, bool includeWatching)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount &nFeeRet, int& nChangePosRet, std::string& strFailReason, bool includeWatching, unsigned int flags)\n {\n     vector<CRecipient> vecSend;\n \n@@ -1951,7 +1951,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount &nFeeRet, int& nC\n \n     CReserveKey reservekey(this);\n     CWalletTx wtx;\n-    if (!CreateTransaction(vecSend, wtx, reservekey, nFeeRet, nChangePosRet, strFailReason, &coinControl, CREATE_TX_DONT_SIGN))\n+    if (!CreateTransaction(vecSend, wtx, reservekey, nFeeRet, nChangePosRet, strFailReason, &coinControl, flags))\n         return false;\n \n     if (nChangePosRet != -1)"
      },
      {
        "sha": "796175337bd40748a141a524cc309cea23357ebb",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09499a308abec5d3de8edee30c0853f4fb75c107/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09499a308abec5d3de8edee30c0853f4fb75c107/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=09499a308abec5d3de8edee30c0853f4fb75c107",
        "patch": "@@ -744,7 +744,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Insert additional inputs into the transaction by\n      * calling CreateTransaction();\n      */\n-    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, bool includeWatching);\n+    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, bool includeWatching, unsigned int flags = CREATE_TX_DONT_SIGN);\n \n     /**\n      * Create a new transaction paying the recipients with a set of coins"
      }
    ]
  },
  {
    "sha": "3051f53bf9832569d7b6ffcbe426237b1bbd5095",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDUxZjUzYmY5ODMyNTY5ZDdiNmZmY2JlNDI2MjM3YjFiYmQ1MDk1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T09:45:41Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:06Z"
      },
      "message": "[Tests] extend the replace-by-fee test to cover RPC rawtx features",
      "tree": {
        "sha": "3870c61b41d7949063080bd348be3a0f14192257",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3870c61b41d7949063080bd348be3a0f14192257"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3051f53bf9832569d7b6ffcbe426237b1bbd5095",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqSAAoJECnUvLZBb1PsFoQQAKjzAuLseypd14+URIkj0N8T\nAsIiyAi5vHs2cl87Xc1YnpGg3tqNL+YBt0dfkO8ud0BR/q4lqcsfhISqNUhWPfhd\nRVdYx9eHilz7uowUQCr7sTxwUDk0NLdAq4+pgnVlqZ0XdXIDxumyWa4kTZzn/hOG\n14uAEl7CXFbwMUkik03PFMNyDFb8cKFqkC1jfvHhz7aHjYJtD6hoXXm9fgxDl0kE\np8hcoFhnRAAHoeN7kj1isWTR+PjlJFwYICfNFfODf1A+kmU/EPy9oSDoN/swgPxH\nmbZTmgbyPS17aObuP5KjXBwvwTPP6R3cN9gFKAEqN/ZuUx/9Z49KAQl/dol70Sef\nAlS4reU9BQGrjHQXBK7DZjquLgCTkQE8/vFC9PjfBBjhLE8tEPlxaoxigP8jFD51\nTUihulJPYXHwpGpP412UFj1llmCWQ8FtViOdUBaRqICjUDsAYld8J3aNYctDMJ8a\nkJdSwGVAGptvV6CsomzNR2xDKu0XMlqI3rNHuLe/xYqcWeYcnAr5y2vZlGdWIZMr\nib145x+FwJvNpq2BPcQSdmHcIiLOPJA1XJL5U2wEWU5mor5NFVyVRj0DGHF3t/xI\nX8B/Jj07iKL3G+0cmJ6V6Ha8WXCya9wNMrshWSOfROKS7fSBSp43DiH8qz8CARcl\ntwF3tbGqMIclrtln/hnH\n=yRaB\n-----END PGP SIGNATURE-----",
        "payload": "tree 3870c61b41d7949063080bd348be3a0f14192257\nparent 09499a308abec5d3de8edee30c0853f4fb75c107\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449135941 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755666 +0200\n\n[Tests] extend the replace-by-fee test to cover RPC rawtx features\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3051f53bf9832569d7b6ffcbe426237b1bbd5095",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3051f53bf9832569d7b6ffcbe426237b1bbd5095",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3051f53bf9832569d7b6ffcbe426237b1bbd5095/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09499a308abec5d3de8edee30c0853f4fb75c107",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09499a308abec5d3de8edee30c0853f4fb75c107",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09499a308abec5d3de8edee30c0853f4fb75c107"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8dde8204cd965bf511e7024331f4db80fc5470f1",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3051f53bf9832569d7b6ffcbe426237b1bbd5095/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3051f53bf9832569d7b6ffcbe426237b1bbd5095/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=3051f53bf9832569d7b6ffcbe426237b1bbd5095",
        "patch": "@@ -111,6 +111,9 @@ def run_test(self):\n \n         print \"Running test opt-in...\"\n         self.test_opt_in()\n+        \n+        print \"Running test RPC...\"\n+        self.test_rpc()\n \n         print \"Running test prioritised transactions...\"\n         self.test_prioritised_transactions()\n@@ -587,5 +590,25 @@ def test_prioritised_transactions(self):\n \n         assert(tx2b_txid in self.nodes[0].getrawmempool())\n \n+    def test_rpc(self):\n+        us0 = self.nodes[0].listunspent()[0]\n+        ins = [us0];\n+        outs = {self.nodes[0].getnewaddress() : Decimal(1.0000000)}\n+        rawtx0 = self.nodes[0].createrawtransaction(ins, outs, 0, True)\n+        rawtx1 = self.nodes[0].createrawtransaction(ins, outs, 0, False)\n+        json0  = self.nodes[0].decoderawtransaction(rawtx0)\n+        json1  = self.nodes[0].decoderawtransaction(rawtx1)\n+        assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n+        assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967295)\n+\n+        rawtx2 = self.nodes[0].createrawtransaction([], outs)\n+        frawtx2a = self.nodes[0].fundrawtransaction(rawtx2, False, True)\n+        frawtx2b = self.nodes[0].fundrawtransaction(rawtx2, False, False)\n+\n+        json0  = self.nodes[0].decoderawtransaction(frawtx2a['hex'])\n+        json1  = self.nodes[0].decoderawtransaction(frawtx2b['hex'])\n+        assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n+        assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n+\n if __name__ == '__main__':\n     ReplaceByFeeTest().main()"
      }
    ]
  },
  {
    "sha": "e0bbcf76e860a41c80174a021b881889a791bada",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGJiY2Y3NmU4NjBhNDFjODAxNzRhMDIxYjg4MTg4OWE3OTFiYWRh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T15:29:45Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:06Z"
      },
      "message": "[bitcoin-tx] allow to set nSequence number over the in= command",
      "tree": {
        "sha": "f846fb6f1635fc6f913efbfe162311effd7f94e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f846fb6f1635fc6f913efbfe162311effd7f94e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0bbcf76e860a41c80174a021b881889a791bada",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqSAAoJECnUvLZBb1Ps3psP/R2VVTb6wulo+UYc57rymgCH\njPPsBRZZUnyii7/d3wnXvbTomYjNxQ78dFgN3jdQLHjgpFeFK0YqSO6ET5efq8AD\n3PpG6jiY34T7edlwT02hP4Z0SJ+Gi87AT/znSVp7ZUAkVbMrJFk5hpBxBk2d45kK\nlg3nn/tHiM9EMvhMOGnqbVfzz+pWdg9wfJy50dYuhUHZwuAvEnd4xtstXYryioMo\nBdmSJ9awOQdMnIh6gfYcTwvVe6ld44SujJ1TkjE6cStceGQgfQbHBVX7s2s56WUU\nJ3EXtQElylbUf8jKCf9cGNN/vFN4xvF4+KVPjuujjpEZWabYHf7hQSeGhkL/JY+Q\nVstBp27sE7mPdAaHvZphpCmyxRedDHamgRNE92xwbv24MQJMx0ZzP2rSA8p5Hsmw\norWC41on7qfOPJq6WdH8bQezMmHwEQm9Q0mcqXZD+QHgIS+2FYjJ0IaTRiN/HYY3\nLK2DrDnvDvaU6cVJR+7lV6qoKvIsPfJNMnCzBaTiQA0JoUHSGQZFkLLmsnXWZ9s+\n77DpPMYWwT+WesG5rNZK9lydzl7w3ekWxHq78Gzcza08r0rFDm3NVlc8ZYGBWNSp\nIpORqtnI9njRzhPp6dobUAhp2JePQMnjTK5JTRfIH3sfGtgPvKt9ST5q0+/aZDMe\nVN2eO3FJPCrIosxjJyh+\n=WyGI\n-----END PGP SIGNATURE-----",
        "payload": "tree f846fb6f1635fc6f913efbfe162311effd7f94e8\nparent 3051f53bf9832569d7b6ffcbe426237b1bbd5095\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449156585 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755666 +0200\n\n[bitcoin-tx] allow to set nSequence number over the in= command\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0bbcf76e860a41c80174a021b881889a791bada",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0bbcf76e860a41c80174a021b881889a791bada",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0bbcf76e860a41c80174a021b881889a791bada/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3051f53bf9832569d7b6ffcbe426237b1bbd5095",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3051f53bf9832569d7b6ffcbe426237b1bbd5095",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3051f53bf9832569d7b6ffcbe426237b1bbd5095"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 13,
      "deletions": 8
    },
    "files": [
      {
        "sha": "d5e2fc279bc2524fb6a64482cf37cc59925261e9",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0bbcf76e860a41c80174a021b881889a791bada/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0bbcf76e860a41c80174a021b881889a791bada/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=e0bbcf76e860a41c80174a021b881889a791bada",
        "patch": "@@ -71,7 +71,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n         strUsage = HelpMessageGroup(_(\"Commands:\"));\n         strUsage += HelpMessageOpt(\"delin=N\", _(\"Delete input N from TX\"));\n         strUsage += HelpMessageOpt(\"delout=N\", _(\"Delete output N from TX\"));\n-        strUsage += HelpMessageOpt(\"in=TXID:VOUT\", _(\"Add input to TX\"));\n+        strUsage += HelpMessageOpt(\"in=TXID:VOUT(:SEQUENCE_NUMBER)\", _(\"Add input to TX\"));\n         strUsage += HelpMessageOpt(\"locktime=N\", _(\"Set TX lock time to N\"));\n         strUsage += HelpMessageOpt(\"nversion=N\", _(\"Set TX version to N\"));\n         strUsage += HelpMessageOpt(\"outaddr=VALUE:ADDRESS\", _(\"Add address-based output to TX\"));\n@@ -181,15 +181,15 @@ static void MutateTxLocktime(CMutableTransaction& tx, const string& cmdVal)\n \n static void MutateTxAddInput(CMutableTransaction& tx, const string& strInput)\n {\n+    std::vector<std::string> vStrInputParts;\n+    boost::split(vStrInputParts, strInput, boost::is_any_of(\":\"));\n+\n     // separate TXID:VOUT in string\n-    size_t pos = strInput.find(':');\n-    if ((pos == string::npos) ||\n-        (pos == 0) ||\n-        (pos == (strInput.size() - 1)))\n+    if (vStrInputParts.size()<2)\n         throw runtime_error(\"TX input missing separator\");\n \n     // extract and validate TXID\n-    string strTxid = strInput.substr(0, pos);\n+    string strTxid = vStrInputParts[0];\n     if ((strTxid.size() != 64) || !IsHex(strTxid))\n         throw runtime_error(\"invalid TX input txid\");\n     uint256 txid(uint256S(strTxid));\n@@ -198,13 +198,18 @@ static void MutateTxAddInput(CMutableTransaction& tx, const string& strInput)\n     static const unsigned int maxVout = MAX_BLOCK_SIZE / minTxOutSz;\n \n     // extract and validate vout\n-    string strVout = strInput.substr(pos + 1, string::npos);\n+    string strVout = vStrInputParts[1];\n     int vout = atoi(strVout);\n     if ((vout < 0) || (vout > (int)maxVout))\n         throw runtime_error(\"invalid TX input vout\");\n \n+    // extract the optional sequence number\n+    uint32_t nSequenceIn=std::numeric_limits<unsigned int>::max();\n+    if (vStrInputParts.size() > 2)\n+        nSequenceIn = atoi(vStrInputParts[2]);\n+\n     // append to transaction input list\n-    CTxIn txin(txid, vout);\n+    CTxIn txin(txid, vout, CScript(), nSequenceIn);\n     tx.vin.push_back(txin);\n }\n "
      }
    ]
  },
  {
    "sha": "e83ca92b7ecd858707f16998eafca4c7b86ec94b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODNjYTkyYjdlY2Q4NTg3MDdmMTY5OThlYWZjYTRjN2I4NmVjOTRi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T15:42:01Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:06Z"
      },
      "message": "[bitcoin-tx] add rbfoptin command",
      "tree": {
        "sha": "b3a6cffc6235b277e7813fe166070aa25ce562e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3a6cffc6235b277e7813fe166070aa25ce562e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e83ca92b7ecd858707f16998eafca4c7b86ec94b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqSAAoJECnUvLZBb1PsXzEP/0SjY6ah6Jr/J5av6d6vlAy4\nkmgbn+1zAesAi0aKt7y9SEkVQpCcSR4sYxeYfU9pn8UaxO4g8UqFCs2Q4MLaru7H\nLsnPFIy+J1+w+mEcm5QNgRFXUpqhV0C57MKZz4GPPSvhrM62ls5Ejrcs++LcVUTA\nMOpHUXDa8phG9Qj/6crbfQ6ASq48qE/ZBF3aTOXBNPqkGKEewL9PmlG88/Ecv+W8\nPWvRznbbGVhFIoTBVYmfPJlfsvvSPdhddPYdRv8rgy3phQXKye8wBtxyO0dXhr66\nbJ6v2CheS8nWVM76B72mFHELsu9tkufQ2urFBHFUiyMAauan0dmztIdYhUs4L4CJ\ngZ+Nkg2UsuJw3rVdnRc3nr6TGMKGC8JRlC51eJkeWTf53DVQ8I9pz0IGLOTa9c33\np4FBD3g2rTvvD/QNOVNZ9G0AUMpAADDZOOkrd45OS7OLuvaTNlGa3EIwmzSJB+ZB\nlcZKz/IPQ2IJutHKOIChiuZkhjkBWBi2kjlFocU/lGRA+lAIpNEIpPe/fgssk322\n2hh852vh7BPX7ioD2l0wLGkvLjil61qY7iK7BJEfmonNe4611/7cg0S/sDX8auup\nZonO36kLlYm2EQuDzd/rYwc7KB2PFQ7UvvE6aQkufrOKkXU0NXNhk9WLixipxaKS\ntlGXuTjdCkmsHcMF+9lr\n=XtlN\n-----END PGP SIGNATURE-----",
        "payload": "tree b3a6cffc6235b277e7813fe166070aa25ce562e0\nparent e0bbcf76e860a41c80174a021b881889a791bada\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449157321 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755666 +0200\n\n[bitcoin-tx] add rbfoptin command\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83ca92b7ecd858707f16998eafca4c7b86ec94b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e83ca92b7ecd858707f16998eafca4c7b86ec94b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83ca92b7ecd858707f16998eafca4c7b86ec94b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0bbcf76e860a41c80174a021b881889a791bada",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0bbcf76e860a41c80174a021b881889a791bada",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0bbcf76e860a41c80174a021b881889a791bada"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78c3a986ba9a2a21efc2a2f4bde4835d30a5e253",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e83ca92b7ecd858707f16998eafca4c7b86ec94b/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e83ca92b7ecd858707f16998eafca4c7b86ec94b/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=e83ca92b7ecd858707f16998eafca4c7b86ec94b",
        "patch": "@@ -74,6 +74,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n         strUsage += HelpMessageOpt(\"in=TXID:VOUT(:SEQUENCE_NUMBER)\", _(\"Add input to TX\"));\n         strUsage += HelpMessageOpt(\"locktime=N\", _(\"Set TX lock time to N\"));\n         strUsage += HelpMessageOpt(\"nversion=N\", _(\"Set TX version to N\"));\n+        strUsage += HelpMessageOpt(\"rbfoptin(=N)\", _(\"Set RBF opt-in sequence number for input N (if not provided, opt-in all available inputs)\"));\n         strUsage += HelpMessageOpt(\"outaddr=VALUE:ADDRESS\", _(\"Add address-based output to TX\"));\n         strUsage += HelpMessageOpt(\"outdata=[VALUE:]DATA\", _(\"Add data-based output to TX\"));\n         strUsage += HelpMessageOpt(\"outscript=VALUE:SCRIPT\", _(\"Add raw script output to TX\"));\n@@ -179,6 +180,24 @@ static void MutateTxLocktime(CMutableTransaction& tx, const string& cmdVal)\n     tx.nLockTime = (unsigned int) newLocktime;\n }\n \n+static void MutateTxRBFOptIn(CMutableTransaction& tx, const string& strInIdx)\n+{\n+    // parse requested index\n+    int inIdx = atoi(strInIdx);\n+    if (inIdx < 0 || inIdx >= (int)tx.vin.size()) {\n+        string strErr = \"Invalid TX input index '\" + strInIdx + \"'\";\n+        throw runtime_error(strErr.c_str());\n+    }\n+\n+    // set the nSequence to MAX_INT - 2 (= RBF opt in flag)\n+    int cnt = 0;\n+    BOOST_FOREACH(CTxIn& txin, tx.vin) {\n+        if (strInIdx == \"\" || cnt == inIdx)\n+            txin.nSequence = std::numeric_limits<unsigned int>::max() - 2;\n+        cnt++;\n+    }\n+}\n+\n static void MutateTxAddInput(CMutableTransaction& tx, const string& strInput)\n {\n     std::vector<std::string> vStrInputParts;\n@@ -506,6 +525,8 @@ static void MutateTx(CMutableTransaction& tx, const string& command,\n         MutateTxVersion(tx, commandVal);\n     else if (command == \"locktime\")\n         MutateTxLocktime(tx, commandVal);\n+    else if (command == \"rbfoptin\")\n+        MutateTxRBFOptIn(tx, commandVal);\n \n     else if (command == \"delin\")\n         MutateTxDelInput(tx, commandVal);"
      }
    ]
  },
  {
    "sha": "b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjRlYmFmMDU2YmMwY2YyN2IzMDk3ZDljYzFkZWJjN2JlNTZkYmYz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-22T12:52:57Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-04T07:41:06Z"
      },
      "message": "[RPC] createrawtransaction: add option to set the sequence number per input",
      "tree": {
        "sha": "ecf2e0a1860272c4a5be3aae7b95b724664918ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ecf2e0a1860272c4a5be3aae7b95b724664918ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXAhqSAAoJECnUvLZBb1PsQGUP/03smX7p7L0Bc3zZ012P1jFq\nHEBET8xP8ow/FrrfJIHj1FlN0GIeq5cFeFulyySQQkTpGSM+oyqdLx2VO6nmD2RA\nXQXz0CfKsefMFGs6vmpIFzHrZaECVRlJN5asVOcC2mTst1YxLScOSQxXgklj6C5P\n4RcCmAfI1f24XxeRObCijv0gPEZErDdUhN/psL4eSCVgsdrkYSx+1VxdH+hhQRJA\nvF83DrVxX5Bzpv6kDl3tvZkl3PafDDOytFPdQcAepe94T7ZQcuh9n/rjtFV+RWIa\ndGUgSLl4+DW9/hIvT/3OuEtP7RV9WjtZ68yR86OqLuJwms040ReLQtm3eXJvRJUO\n3yPUetxfrXKGwCkuBFRk88hR2I4YXc1tCH2PdEnMADHGAHKsr5WVnn3mZ2Jh+M99\nQABxV8CFkpGPGDXmR7pBgaoI8lj9Cva6ry/H8VnM2RRD+kbLAChpmPvfg6MfsqmE\n+Ovt4czIZXS0mcKMJ8mw6DdoXA1PpT/8FeOoYhgSmmsSlCn+qHek6pXGuCgmCWwa\nmARVxlsb+CSvB453edTnNgBh7vd4A9RzzBZfSdY5kNZKJ+4JD/TILn7XVM+mmSof\n7rmHw+4lhZdUPziQFJplns5KLEXHAspo2t2BaoIYnpux3pZyS3qrJ5tHicY/IjME\nEXHYtIsS1cCfzi9K2lYh\n=pNXb\n-----END PGP SIGNATURE-----",
        "payload": "tree ecf2e0a1860272c4a5be3aae7b95b724664918ed\nparent e83ca92b7ecd858707f16998eafca4c7b86ec94b\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1450788777 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1459755666 +0200\n\n[RPC] createrawtransaction: add option to set the sequence number per input\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e83ca92b7ecd858707f16998eafca4c7b86ec94b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e83ca92b7ecd858707f16998eafca4c7b86ec94b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e83ca92b7ecd858707f16998eafca4c7b86ec94b"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "473c305dbc2ec56a38d0094fa8cd20352343d34e",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3",
        "patch": "@@ -139,5 +139,11 @@ def run_test(self):\n         self.sync_all()\n         assert_equal(self.nodes[0].getbalance(), bal+Decimal('50.00000000')+Decimal('2.19000000')) #block reward + tx\n \n+        inputs  = [ {'txid' : \"1d1d4e24ed99057e84c3f80fd8fbec79ed9e1acee37da269356ecea000000000\", 'vout' : 1, 'sequence' : 1000}]\n+        outputs = { self.nodes[0].getnewaddress() : 1 }\n+        rawtx   = self.nodes[0].createrawtransaction(inputs, outputs)\n+        decrawtx= self.nodes[0].decoderawtransaction(rawtx)\n+        assert_equal(decrawtx['vin'][0]['sequence'], 1000)\n+\n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      },
      {
        "sha": "a27238cee0f1cfce0c71f7c28b220dd74f2040a6",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b64ebaf056bc0cf27b3097d9cc1debc7be56dbf3",
        "patch": "@@ -334,6 +334,7 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",    (string, required) The transaction id\\n\"\n             \"         \\\"vout\\\":n        (numeric, required) The output number\\n\"\n+            \"         \\\"sequence\\\":n    (numeric, optional) The sequence number (will overwrite RBF opt-in)\\n\"\n             \"       }\\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n@@ -390,6 +391,10 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n         uint32_t nSequence = (rawTx.nLockTime ? std::numeric_limits<uint32_t>::max() - 1 : std::numeric_limits<uint32_t>::max());\n         if (rbfOptIn)\n             nSequence = std::numeric_limits<uint32_t>::max() - 2;\n+\n+        const UniValue& sequenceObj = find_value(o, \"sequence\");\n+        if (sequenceObj.isNum())\n+            nSequence = sequenceObj.get_int();\n         CTxIn in(COutPoint(txid, nOutput), CScript(), nSequence);\n \n         rawTx.vin.push_back(in);"
      }
    ]
  }
]