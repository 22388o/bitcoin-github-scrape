prayank23,2021-10-31 08:13:01,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23398#issuecomment-955656429,955656429,
lsilva01,2021-11-02 19:07:35,1b55103 addresses the scenario mentioned in https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741306021,https://github.com/bitcoin/bitcoin/pull/23398#issuecomment-958086917,958086917,
prayank23,2021-11-03 17:50:48,"reACK https://github.com/bitcoin/bitcoin/commit/1e30cf12706f0e7f843112452934bc9d02d759dc\n\nChanges since last review: https://github.com/bitcoin/bitcoin/compare/653dbb1..1e30cf1",https://github.com/bitcoin/bitcoin/pull/23398#issuecomment-959778028,959778028,
laanwj,2021-11-10 12:56:07,Code review ACK aa1a4c920495076ed5b5e3f05cb64d644bab6810,https://github.com/bitcoin/bitcoin/pull/23398#issuecomment-965105610,965105610,
MarcoFalke,2021-10-31 07:19:16,Would be nice to use `request.context.node.args` and not the global.,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r739768358,739768358,src/rpc/blockchain.cpp
lsilva01,2021-10-31 23:06:32,Done.,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r739889357,739889357,src/rpc/blockchain.cpp
luke-jr,2021-11-02 17:14:05,"Completely hypothetical scenario at the moment, but if there is no node context, we probably shouldn't throw an error here since the dump has presumably already succeeded.",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741306021,741306021,src/rpc/blockchain.cpp
lsilva01,2021-11-02 19:05:57,Done in 1b55103,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741387389,741387389,src/rpc/blockchain.cpp
MarcoFalke,2021-11-02 19:21:09,"How could this happen? If a mempool exists, a node context must have existed as well. See `EnsureAnyMemPool` above.\n\nThis is dead and confusing code.",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741396885,741396885,src/rpc/blockchain.cpp
luke-jr,2021-11-02 21:06:11,Maybe just move this to the top with EnsureAnyMemPool...,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741461912,741461912,src/rpc/blockchain.cpp
lsilva01,2021-11-02 21:22:24,Done in 0f6f763,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741471332,741471332,src/rpc/blockchain.cpp
luke-jr,2021-11-02 21:24:45,"Sorry, I mean the line with the EnsureNodeContext use...",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741472694,741472694,src/rpc/blockchain.cpp
lsilva01,2021-11-02 21:43:07,"Checked that `EnsureAnyMemPool` calls `EnsureAnyNodeContext(context)`.\nChanged the code accordingly.",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741482849,741482849,src/rpc/blockchain.cpp
lsilva01,2021-11-02 21:47:11,"I'm not sure which line you're referring to.\n\nThis code no longer calls `EnsureAnyNodeContext` because` EnsureAnyMemPool` already does,",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741484959,741484959,src/rpc/blockchain.cpp
luke-jr,2021-11-03 01:16:42,"That's an internal implementation detail of `EnsureAnyMemPool`. We also generally avoid pointers where nullptr is unacceptable.\n\n```suggestion\n    const NodeContext& node = EnsureAnyNodeContext(request.context);\n```",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741562550,741562550,src/rpc/blockchain.cpp
luke-jr,2021-11-03 01:20:13,"We've started using `fs::PathToString` instead of `.string()`\n\nSee #22937",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741563330,741563330,src/rpc/blockchain.cpp
lsilva01,2021-11-03 02:47:23,Done in 09c3395 . Thanks for suggestion.,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741584648,741584648,src/rpc/blockchain.cpp
lsilva01,2021-11-03 02:47:41,Done in 09c3395 . Thanks for suggestion.,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741584753,741584753,src/rpc/blockchain.cpp
ryanofsky,2021-11-03 02:49:18,"Good catch! This code would do a silent locale conversion on windows after we stop using boost.\n\nSince JSON strings must be UTF-8, would suggest using `.u8string()`. (`PathToString` is meant for internal use and string<->byte roundtrips and is not guaranteed to be UTF-8.)\n\n```c++\nret.pushKV(""filename"", fs::path((*node_context).args->GetDataDirNet() / ""mempool.dat"").u8string());\n```",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r741585271,741585271,src/rpc/blockchain.cpp
ryanofsky,2021-11-08 19:01:46,"In commit ""Add filename to savemempool RPC result"" (09c3395bc5efc0a969548e1d694a75458058342c)\n\nShould replace `fs::PathToString(node.args->GetDataDirNet() / ""mempool.dat"")` with `(node.args->GetDataDirNet() / ""mempool.dat"").u8string()`. The `PathToString` and `u8string` functions do the same thing right now, but u8string is meant to be used for strings which need to be UTF8 (required to produc",https://github.com/bitcoin/bitcoin/pull/23398#discussion_r745010990,745010990,src/rpc/blockchain.cpp
lsilva01,2021-11-09 16:13:17,Thanks for review. Done in 871e64d,https://github.com/bitcoin/bitcoin/pull/23398#discussion_r745777230,745777230,src/rpc/blockchain.cpp
