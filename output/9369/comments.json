[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267689587",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-267689587",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 267689587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzY4OTU4Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T20:34:06Z",
    "updated_at": "2016-12-16T20:34:06Z",
    "author_association": "MEMBER",
    "body": "utACK 022267ac634b13690414252c4deba7f499f98c63",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267689587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267772529",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-267772529",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 267772529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc3MjUyOQ==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-17T16:43:28Z",
    "updated_at": "2016-12-17T16:43:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK https://github.com/bitcoin/bitcoin/commit/022267ac634b13690414252c4deba7f499f98c63",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267772529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267864215",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-267864215",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 267864215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzg2NDIxNQ==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T01:42:35Z",
    "updated_at": "2016-12-19T01:42:35Z",
    "author_association": "MEMBER",
    "body": "utACK 406e975",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267864215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272529030",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-272529030",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 272529030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjUyOTAzMA==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T19:42:11Z",
    "updated_at": "2017-01-13T19:42:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think code style wise this would be improved by naming GetTimeSmart to RecomputeTimeSmart or ComputeTimeSmart because it's not a simple accessor. If someone were to decide to call GetTimeSmart in place of accessing the cached value, the name wouldn't imply the overhead otherwise.\r\n\r\nOtherwise, makes sense to me, utACK as is for 212a686.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272529030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273808834",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-273808834",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 273808834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzgwODgzNA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-19T15:38:07Z",
    "updated_at": "2017-01-19T15:38:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Renamed method to ComputeTimeSmart in 1c474c253170ffa7ebc50abca93bf673c0ae0f4f and squashed 1c474c253170ffa7ebc50abca93bf673c0ae0f4f -> b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273808834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279056064",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-279056064",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 279056064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTA1NjA2NA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T20:22:26Z",
    "updated_at": "2017-02-10T20:22:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rearranged commits to put tests before refactoring cb48cd7d720d7af466614652c1e2a56dcce068bc -> 6587aa3b293b89c81dd7a4a8cc142d6e0a5670f8 ([atw-timesmart.6](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.6) -> [atw-timesmart.7](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.7))\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279056064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283306821",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-283306821",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 283306821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzMwNjgyMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T10:44:08Z",
    "updated_at": "2017-03-01T10:44:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 6587aa3b293b89c81dd7a4a8cc142d6e0a5670f8 -> 2ffffb36e138a5e060b6b3eaada3080ee3c4de75 ([atw-timesmart.7](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.7) -> [atw-timesmart.8](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.8)) because of conflict in wallet.h with #9108.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283306821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/284051389",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-284051389",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9369",
    "id": 284051389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDA1MTM4OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T19:44:01Z",
    "updated_at": "2017-03-03T22:09:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed mocktime test bug in 819696357bb407196e6f01175f2d4459848c7d9b and rebased 819696357bb407196e6f01175f2d4459848c7d9b -> 79b25edd74053d7a655882d4c16bb5dba43c90a2 ([pr/atw-timesmart.9](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.9) -> [pr/atw-timesmart.10](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.10)) because of conflicts with pwalletMain renames in #9775.\r\n\r\nReduced test boilerplate in 5975523d1f647fe7de96dd16d89e363052dc38cb and squashed 5975523d1f647fe7de96dd16d89e363052dc38cb -> 630fc549e28cb33eb11df1b4f951339bf8152e4f ([pr/atw-timesmart.11](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.11) -> [pr/atw-timesmart.12](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.12))\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/284051389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92869959",
    "pull_request_review_id": 13394521,
    "id": 92869959,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyODY5OTU5",
    "diff_hunk": "@@ -3300,6 +3256,48 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+unsigned int CWallet::GetTimeSmart(const CWalletTx& wtx) const\n+{\n+    unsigned int nTimeSmart = wtx.nTimeReceived;\n+    if (!wtx.hashUnset()) {\n+        if (mapBlockIndex.count(wtx.hashBlock)) {\n+            int64_t latestNow = wtx.nTimeReceived;\n+            int64_t latestEntry = 0;\n+            {\n+                // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+                int64_t latestTolerated = latestNow + 300;\n+                const TxItems& txOrdered = wtxOrdered;\n+                for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                    CWalletTx* const pwtx = it->second.first;\n+                    if (pwtx == &wtx)\n+                        continue;\n+                    CAccountingEntry* const pacentry = it->second.second;\n+                    int64_t nSmartTime;\n+                    if (pwtx) {\n+                        nSmartTime = pwtx->nTimeSmart;\n+                        if (!nSmartTime)\n+                            nSmartTime = pwtx->nTimeReceived;\n+                    } else\n+                        nSmartTime = pacentry->nTime;\n+                    if (nSmartTime <= latestTolerated) {\n+                        latestEntry = nSmartTime;\n+                        if (nSmartTime > latestNow)\n+                            latestNow = nSmartTime;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            int64_t blocktime = mapBlockIndex[wtx.hashBlock]->GetBlockTime();\n+            nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n+        } else\n+            LogPrintf(\"GetTimeSmart(): found %s in block %s not in index\\n\",",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 92,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "406e9759478e86d37cd4fca255841fd3291417c3",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can use `__func__` here.\r\n",
    "created_at": "2016-12-16T19:20:59Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92869959",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92869959"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92869959"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92869959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3294,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92875006",
    "pull_request_review_id": 13399737,
    "id": 92875006,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyODc1MDA2",
    "diff_hunk": "@@ -3300,6 +3256,48 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+unsigned int CWallet::GetTimeSmart(const CWalletTx& wtx) const\n+{\n+    unsigned int nTimeSmart = wtx.nTimeReceived;\n+    if (!wtx.hashUnset()) {\n+        if (mapBlockIndex.count(wtx.hashBlock)) {\n+            int64_t latestNow = wtx.nTimeReceived;\n+            int64_t latestEntry = 0;\n+            {\n+                // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+                int64_t latestTolerated = latestNow + 300;\n+                const TxItems& txOrdered = wtxOrdered;\n+                for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                    CWalletTx* const pwtx = it->second.first;\n+                    if (pwtx == &wtx)\n+                        continue;\n+                    CAccountingEntry* const pacentry = it->second.second;\n+                    int64_t nSmartTime;\n+                    if (pwtx) {\n+                        nSmartTime = pwtx->nTimeSmart;\n+                        if (!nSmartTime)\n+                            nSmartTime = pwtx->nTimeReceived;\n+                    } else\n+                        nSmartTime = pacentry->nTime;\n+                    if (nSmartTime <= latestTolerated) {\n+                        latestEntry = nSmartTime;\n+                        if (nSmartTime > latestNow)\n+                            latestNow = nSmartTime;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            int64_t blocktime = mapBlockIndex[wtx.hashBlock]->GetBlockTime();\n+            nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n+        } else\n+            LogPrintf(\"GetTimeSmart(): found %s in block %s not in index\\n\",",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 92,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "406e9759478e86d37cd4fca255841fd3291417c3",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, done.",
    "created_at": "2016-12-16T19:50:59Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92875006",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92875006"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92875006"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92875006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3294,
    "side": "RIGHT",
    "in_reply_to_id": 92869959
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92917935",
    "pull_request_review_id": 13443282,
    "id": 92917935,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyOTE3OTM1",
    "diff_hunk": "@@ -844,51 +844,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n         wtx.nTimeReceived = GetAdjustedTime();\n         wtx.nOrderPos = IncOrderPosNext(&walletdb);\n         wtxOrdered.insert(make_pair(wtx.nOrderPos, TxPair(&wtx, (CAccountingEntry*)0)));\n-\n-        wtx.nTimeSmart = wtx.nTimeReceived;\n-        if (!wtxIn.hashUnset())",
    "path": "src/wallet/wallet.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "022267ac634b13690414252c4deba7f499f98c63",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The old code is testing `hashUnset()` of `wtxIn`. But the new code is checking `hashUnset()` of `wtx`. Is it the same?",
    "created_at": "2016-12-17T08:25:14Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92917935",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92917935"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92917935"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92917935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 901,
    "original_line": 849,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92921052",
    "pull_request_review_id": 13446083,
    "id": 92921052,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyOTIxMDUy",
    "diff_hunk": "@@ -844,51 +844,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n         wtx.nTimeReceived = GetAdjustedTime();\n         wtx.nOrderPos = IncOrderPosNext(&walletdb);\n         wtxOrdered.insert(make_pair(wtx.nOrderPos, TxPair(&wtx, (CAccountingEntry*)0)));\n-\n-        wtx.nTimeSmart = wtx.nTimeReceived;\n-        if (!wtxIn.hashUnset())",
    "path": "src/wallet/wallet.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "022267ac634b13690414252c4deba7f499f98c63",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, the change replaces this and other uses of `wtxIn` with `wtx`. Because this code is running in the case where `fInsertedNew ` is true, `wtx` at this point is just a copy of `wtxIn` with two extra fields set (`nTimeReceived` and `nOrderPos`)",
    "created_at": "2016-12-17T12:34:54Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92921052",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92921052"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92921052"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92921052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 901,
    "original_line": 849,
    "side": "RIGHT",
    "in_reply_to_id": 92917935
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93014619",
    "pull_request_review_id": 13534481,
    "id": 93014619,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMDE0NjE5",
    "diff_hunk": "@@ -3300,6 +3256,46 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+unsigned int CWallet::GetTimeSmart(const CWalletTx& wtx) const",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "022267ac634b13690414252c4deba7f499f98c63",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would it be an idea to put this on CWalletTx instead? A quick scan of the code doesn't reveal any accesses to CWallet fields.",
    "created_at": "2016-12-19T11:33:22Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93014619",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93014619"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93014619"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93014619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3259,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93016780",
    "pull_request_review_id": 13536632,
    "id": 93016780,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMDE2Nzgw",
    "diff_hunk": "@@ -3300,6 +3256,46 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+unsigned int CWallet::GetTimeSmart(const CWalletTx& wtx) const",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "022267ac634b13690414252c4deba7f499f98c63",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this makes most sense here next to CWallet::GetKeyBirthTimes. It ~~accesses CWallet::mapBlockIndex and~~ scans the CWallet::wtxOrdered field.",
    "created_at": "2016-12-19T11:46:06Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93016780",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93016780"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93016780"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93016780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3259,
    "side": "RIGHT",
    "in_reply_to_id": 93014619
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93017291",
    "pull_request_review_id": 13537151,
    "id": 93017291,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMDE3Mjkx",
    "diff_hunk": "@@ -3300,6 +3256,46 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+unsigned int CWallet::GetTimeSmart(const CWalletTx& wtx) const",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "022267ac634b13690414252c4deba7f499f98c63",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(Never mind part of comment above about mapBlockIndex, which is a global.)",
    "created_at": "2016-12-19T11:50:05Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93017291",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93017291"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93017291"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/93017291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3259,
    "side": "RIGHT",
    "in_reply_to_id": 93014619
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100457818",
    "pull_request_review_id": 21166049,
    "id": 100457818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDQ1NzgxOA==",
    "diff_hunk": "@@ -3324,6 +3280,67 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.",
    "path": "src/wallet/wallet.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think an additional comment below this describing what a smart timestamp is would be helpful, even if the reader may deduce this from the logic section below. (It's not super clear to me, but seems to be a way to adapt the time stamp depending on various hints deduced from the state of the transaction.)",
    "created_at": "2017-02-10T01:55:06Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100457818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100457818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100457818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100457818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3458,
    "original_line": 3284,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100458260",
    "pull_request_review_id": 21166049,
    "id": 100458260,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDQ1ODI2MA==",
    "diff_hunk": "@@ -3324,6 +3280,67 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.\n+ *\n+ * Logic:\n+ * - If sending a transaction, assign its timestamp to the current time.\n+ * - If receiving a transaction outside a block, assign its timestamp to the\n+ *   current time.\n+ * - If receiving a block with a future timestamp, assign all its (not already\n+ *   known) transactions' timestamps to the current time.\n+ * - If receiving a block with a past timestamp, before the most recent known\n+ *   transaction (that we care about), assign all its (not already known)\n+ *   transactions' timestamps to the same timestamp as that most-recent-known\n+ *   transaction.\n+ * - If receiving a block with a past timestamp, but after the most recent known\n+ *   transaction, assign all its (not already known) transactions' timestamps to\n+ *   the block time.\n+ *\n+ * For more information see CWalletTx::nTimeSmart,\n+ * https://bitcointalk.org/?topic=54527, or\n+ * https://github.com/bitcoin/bitcoin/pull/1393.\n+ */\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+{\n+    unsigned int nTimeSmart = wtx.nTimeReceived;\n+    if (!wtx.hashUnset()) {\n+        if (mapBlockIndex.count(wtx.hashBlock)) {\n+            int64_t latestNow = wtx.nTimeReceived;\n+            int64_t latestEntry = 0;\n+            {\n+                // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+                int64_t latestTolerated = latestNow + 300;\n+                const TxItems& txOrdered = wtxOrdered;\n+                for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                    CWalletTx* const pwtx = it->second.first;\n+                    if (pwtx == &wtx)\n+                        continue;\n+                    CAccountingEntry* const pacentry = it->second.second;\n+                    int64_t nSmartTime;\n+                    if (pwtx) {\n+                        nSmartTime = pwtx->nTimeSmart;\n+                        if (!nSmartTime)\n+                            nSmartTime = pwtx->nTimeReceived;\n+                    } else\n+                        nSmartTime = pacentry->nTime;\n+                    if (nSmartTime <= latestTolerated) {\n+                        latestEntry = nSmartTime;\n+                        if (nSmartTime > latestNow)\n+                            latestNow = nSmartTime;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            int64_t blocktime = mapBlockIndex[wtx.hashBlock]->GetBlockTime();\n+            nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n+        } else",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit / coding standard: E.g. Google coding style guide advises against `if (..) { .. } else ..`, recommending instead `if (..) { .. } else { .. }`, i.e. use braces in `else` if braces were used in `if`.",
    "created_at": "2017-02-10T01:59:27Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100458260",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100458260"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100458260"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100458260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3338,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100461779",
    "pull_request_review_id": 21169929,
    "id": 100461779,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDQ2MTc3OQ==",
    "diff_hunk": "@@ -3324,6 +3280,67 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.\n+ *\n+ * Logic:\n+ * - If sending a transaction, assign its timestamp to the current time.\n+ * - If receiving a transaction outside a block, assign its timestamp to the\n+ *   current time.\n+ * - If receiving a block with a future timestamp, assign all its (not already\n+ *   known) transactions' timestamps to the current time.\n+ * - If receiving a block with a past timestamp, before the most recent known\n+ *   transaction (that we care about), assign all its (not already known)\n+ *   transactions' timestamps to the same timestamp as that most-recent-known\n+ *   transaction.\n+ * - If receiving a block with a past timestamp, but after the most recent known\n+ *   transaction, assign all its (not already known) transactions' timestamps to\n+ *   the block time.\n+ *\n+ * For more information see CWalletTx::nTimeSmart,\n+ * https://bitcointalk.org/?topic=54527, or\n+ * https://github.com/bitcoin/bitcoin/pull/1393.\n+ */\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+{\n+    unsigned int nTimeSmart = wtx.nTimeReceived;\n+    if (!wtx.hashUnset()) {\n+        if (mapBlockIndex.count(wtx.hashBlock)) {\n+            int64_t latestNow = wtx.nTimeReceived;\n+            int64_t latestEntry = 0;\n+            {\n+                // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+                int64_t latestTolerated = latestNow + 300;\n+                const TxItems& txOrdered = wtxOrdered;\n+                for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                    CWalletTx* const pwtx = it->second.first;\n+                    if (pwtx == &wtx)\n+                        continue;\n+                    CAccountingEntry* const pacentry = it->second.second;\n+                    int64_t nSmartTime;\n+                    if (pwtx) {\n+                        nSmartTime = pwtx->nTimeSmart;\n+                        if (!nSmartTime)\n+                            nSmartTime = pwtx->nTimeReceived;\n+                    } else\n+                        nSmartTime = pacentry->nTime;\n+                    if (nSmartTime <= latestTolerated) {\n+                        latestEntry = nSmartTime;\n+                        if (nSmartTime > latestNow)\n+                            latestNow = nSmartTime;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            int64_t blocktime = mapBlockIndex[wtx.hashBlock]->GetBlockTime();\n+            nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n+        } else",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Our own coding style document says the same.",
    "created_at": "2017-02-10T02:38:27Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100461779",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100461779"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100461779"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100461779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3338,
    "side": "RIGHT",
    "in_reply_to_id": 100458260
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100574008",
    "pull_request_review_id": 21288799,
    "id": 100574008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDU3NDAwOA==",
    "diff_hunk": "@@ -3324,6 +3280,67 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.",
    "path": "src/wallet/wallet.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think I understand how this should change. The comment on `nTimeSmart` describes what the smart timestamp is and the comment on `ComputeTimeSmart` describes how a smart timestamp is computed, and both comments reference each other.",
    "created_at": "2017-02-10T16:44:22Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100574008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100574008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100574008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100574008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3458,
    "original_line": 3284,
    "side": "RIGHT",
    "in_reply_to_id": 100457818
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100613101",
    "pull_request_review_id": 21288799,
    "id": 100613101,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDYxMzEwMQ==",
    "diff_hunk": "@@ -3324,6 +3280,67 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.\n+ *\n+ * Logic:\n+ * - If sending a transaction, assign its timestamp to the current time.\n+ * - If receiving a transaction outside a block, assign its timestamp to the\n+ *   current time.\n+ * - If receiving a block with a future timestamp, assign all its (not already\n+ *   known) transactions' timestamps to the current time.\n+ * - If receiving a block with a past timestamp, before the most recent known\n+ *   transaction (that we care about), assign all its (not already known)\n+ *   transactions' timestamps to the same timestamp as that most-recent-known\n+ *   transaction.\n+ * - If receiving a block with a past timestamp, but after the most recent known\n+ *   transaction, assign all its (not already known) transactions' timestamps to\n+ *   the block time.\n+ *\n+ * For more information see CWalletTx::nTimeSmart,\n+ * https://bitcointalk.org/?topic=54527, or\n+ * https://github.com/bitcoin/bitcoin/pull/1393.\n+ */\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+{\n+    unsigned int nTimeSmart = wtx.nTimeReceived;\n+    if (!wtx.hashUnset()) {\n+        if (mapBlockIndex.count(wtx.hashBlock)) {\n+            int64_t latestNow = wtx.nTimeReceived;\n+            int64_t latestEntry = 0;\n+            {\n+                // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+                int64_t latestTolerated = latestNow + 300;\n+                const TxItems& txOrdered = wtxOrdered;\n+                for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                    CWalletTx* const pwtx = it->second.first;\n+                    if (pwtx == &wtx)\n+                        continue;\n+                    CAccountingEntry* const pacentry = it->second.second;\n+                    int64_t nSmartTime;\n+                    if (pwtx) {\n+                        nSmartTime = pwtx->nTimeSmart;\n+                        if (!nSmartTime)\n+                            nSmartTime = pwtx->nTimeReceived;\n+                    } else\n+                        nSmartTime = pacentry->nTime;\n+                    if (nSmartTime <= latestTolerated) {\n+                        latestEntry = nSmartTime;\n+                        if (nSmartTime > latestNow)\n+                            latestNow = nSmartTime;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            int64_t blocktime = mapBlockIndex[wtx.hashBlock]->GetBlockTime();\n+            nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n+        } else",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added braces in cb48cd7d720d7af466614652c1e2a56dcce068bc",
    "created_at": "2017-02-10T20:01:56Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100613101",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100613101"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100613101"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100613101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3338,
    "side": "RIGHT",
    "in_reply_to_id": 100458260
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100691355",
    "pull_request_review_id": 21406707,
    "id": 100691355,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDY5MTM1NQ==",
    "diff_hunk": "@@ -3324,6 +3280,67 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.",
    "path": "src/wallet/wallet.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It just felt like I didn't have a good grasp what it was by reading the code. You're probably right that it's sufficient if it's described in the variable comment, though.",
    "created_at": "2017-02-12T12:59:10Z",
    "updated_at": "2017-03-03T22:04:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100691355",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100691355"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100691355"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100691355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3458,
    "original_line": 3284,
    "side": "RIGHT",
    "in_reply_to_id": 100457818
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104737234",
    "pull_request_review_id": 25587262,
    "id": 104737234,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDczNzIzNA==",
    "diff_hunk": "@@ -3498,6 +3454,71 @@ void CWallet::GetKeyBirthTimes(std::map<CTxDestination, int64_t> &mapKeyBirth) c\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.\n+ *\n+ * Logic:\n+ * - If sending a transaction, assign its timestamp to the current time.\n+ * - If receiving a transaction outside a block, assign its timestamp to the\n+ *   current time.\n+ * - If receiving a block with a future timestamp, assign all its (not already\n+ *   known) transactions' timestamps to the current time.\n+ * - If receiving a block with a past timestamp, before the most recent known\n+ *   transaction (that we care about), assign all its (not already known)\n+ *   transactions' timestamps to the same timestamp as that most-recent-known\n+ *   transaction.\n+ * - If receiving a block with a past timestamp, but after the most recent known\n+ *   transaction, assign all its (not already known) transactions' timestamps to\n+ *   the block time.\n+ *\n+ * For more information see CWalletTx::nTimeSmart,\n+ * https://bitcointalk.org/?topic=54527, or\n+ * https://github.com/bitcoin/bitcoin/pull/1393.\n+ */\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+{\n+    unsigned int nTimeSmart = wtx.nTimeReceived;\n+    if (!wtx.hashUnset()) {\n+        if (mapBlockIndex.count(wtx.hashBlock)) {\n+            int64_t latestNow = wtx.nTimeReceived;\n+            int64_t latestEntry = 0;\n+\n+            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+            int64_t latestTolerated = latestNow + 300;\n+            const TxItems& txOrdered = wtxOrdered;\n+            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                CWalletTx* const pwtx = it->second.first;\n+                if (pwtx == &wtx) {\n+                    continue;\n+                }\n+                CAccountingEntry* const pacentry = it->second.second;\n+                int64_t nSmartTime;\n+                if (pwtx) {\n+                    nSmartTime = pwtx->nTimeSmart;\n+                    if (!nSmartTime) {\n+                        nSmartTime = pwtx->nTimeReceived;\n+                    }\n+                } else {\n+                    nSmartTime = pacentry->nTime;\n+                }\n+                if (nSmartTime <= latestTolerated) {\n+                    latestEntry = nSmartTime;\n+                    if (nSmartTime > latestNow) {\n+                        latestNow = nSmartTime;\n+                    }\n+                    break;\n+                }\n+            }\n+\n+            int64_t blocktime = mapBlockIndex[wtx.hashBlock]->GetBlockTime();\n+            nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n+        } else {\n+            LogPrintf(\"%s: found %s in block %s not in index\\n\", __func__, wtx.GetHash().ToString(), wtx.hashBlock.ToString());",
    "path": "src/wallet/wallet.cpp",
    "position": 116,
    "original_position": 116,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I mildly dislike that this log (which is about adding a transaction to the wallet and was originally in AddToWallet()) is now in ComputeTimeSmart() and will print with the name of the function, since it's not really anything to do with computing nTimeSmart. Does it make sense to leave this log in the AddToWallet() function somehow?",
    "created_at": "2017-03-07T18:09:46Z",
    "updated_at": "2017-03-07T18:12:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r104737234",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104737234"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r104737234"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104737234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3516,
    "original_line": 3516,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104737610",
    "pull_request_review_id": 25587262,
    "id": 104737610,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDczNzYxMA==",
    "diff_hunk": "@@ -3498,6 +3454,71 @@ void CWallet::GetKeyBirthTimes(std::map<CTxDestination, int64_t> &mapKeyBirth) c\n         mapKeyBirth[it->first] = it->second->GetBlockTime() - 7200; // block times can be 2h off\n }\n \n+/**\n+ * Compute smart timestamp for a transaction being added to the wallet.\n+ *\n+ * Logic:\n+ * - If sending a transaction, assign its timestamp to the current time.\n+ * - If receiving a transaction outside a block, assign its timestamp to the\n+ *   current time.\n+ * - If receiving a block with a future timestamp, assign all its (not already\n+ *   known) transactions' timestamps to the current time.\n+ * - If receiving a block with a past timestamp, before the most recent known\n+ *   transaction (that we care about), assign all its (not already known)\n+ *   transactions' timestamps to the same timestamp as that most-recent-known\n+ *   transaction.\n+ * - If receiving a block with a past timestamp, but after the most recent known\n+ *   transaction, assign all its (not already known) transactions' timestamps to\n+ *   the block time.\n+ *\n+ * For more information see CWalletTx::nTimeSmart,\n+ * https://bitcointalk.org/?topic=54527, or\n+ * https://github.com/bitcoin/bitcoin/pull/1393.\n+ */\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+{\n+    unsigned int nTimeSmart = wtx.nTimeReceived;\n+    if (!wtx.hashUnset()) {\n+        if (mapBlockIndex.count(wtx.hashBlock)) {\n+            int64_t latestNow = wtx.nTimeReceived;\n+            int64_t latestEntry = 0;\n+\n+            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+            int64_t latestTolerated = latestNow + 300;\n+            const TxItems& txOrdered = wtxOrdered;\n+            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                CWalletTx* const pwtx = it->second.first;\n+                if (pwtx == &wtx) {\n+                    continue;\n+                }\n+                CAccountingEntry* const pacentry = it->second.second;\n+                int64_t nSmartTime;\n+                if (pwtx) {\n+                    nSmartTime = pwtx->nTimeSmart;\n+                    if (!nSmartTime) {\n+                        nSmartTime = pwtx->nTimeReceived;\n+                    }\n+                } else {\n+                    nSmartTime = pacentry->nTime;\n+                }\n+                if (nSmartTime <= latestTolerated) {\n+                    latestEntry = nSmartTime;\n+                    if (nSmartTime > latestNow) {\n+                        latestNow = nSmartTime;\n+                    }\n+                    break;\n+                }\n+            }\n+\n+            int64_t blocktime = mapBlockIndex[wtx.hashBlock]->GetBlockTime();\n+            nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n+        } else {",
    "path": "src/wallet/wallet.cpp",
    "position": 115,
    "original_position": 115,
    "commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "original_commit_id": "630fc549e28cb33eb11df1b4f951339bf8152e4f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Style preference: consider not initializing nTimeSmart to wtx.nTimeReceived and only setting it here (to emphasise that nTimeSmart is only set to nTimeReceived when the transaction is received outside a block.",
    "created_at": "2017-03-07T18:11:24Z",
    "updated_at": "2017-03-07T18:12:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r104737610",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104737610"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9369#discussion_r104737610"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9369"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/104737610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3515,
    "original_line": 3515,
    "side": "RIGHT"
  }
]