sipa,2016-12-16T20:34:06Z,utACK 022267ac634b13690414252c4deba7f499f98c63,https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-267689587,267689587,
paveljanik,2016-12-17T16:43:28Z,ACK https://github.com/bitcoin/bitcoin/commit/022267ac634b13690414252c4deba7f499f98c63,https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-267772529,267772529,
fanquake,2016-12-19T01:42:35Z,utACK 406e975,https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-267864215,267864215,
JeremyRubin,2017-01-13T19:42:11Z,"I think code style wise this would be improved by naming GetTimeSmart to RecomputeTimeSmart or ComputeTimeSmart because it's not a simple accessor. If someone were to decide to call GetTimeSmart in place of accessing the cached value, the name wouldn't imply the overhead otherwise.\n\nOtherwise, makes sense to me, utACK as is for 212a686.\n",https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-272529030,272529030,
ryanofsky,2017-01-19T15:38:07Z,Renamed method to ComputeTimeSmart in 1c474c253170ffa7ebc50abca93bf673c0ae0f4f and squashed 1c474c253170ffa7ebc50abca93bf673c0ae0f4f -> b75a9b95a43bf88e9e977fb9ad5bcb5e3266bbd9.,https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-273808834,273808834,
ryanofsky,2017-02-10T20:22:26Z,"Rearranged commits to put tests before refactoring cb48cd7d720d7af466614652c1e2a56dcce068bc -> 6587aa3b293b89c81dd7a4a8cc142d6e0a5670f8 ([atw-timesmart.6](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.6) -> [atw-timesmart.7](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.7))\n",https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-279056064,279056064,
ryanofsky,2017-03-01T10:44:08Z,"Rebased 6587aa3b293b89c81dd7a4a8cc142d6e0a5670f8 -> 2ffffb36e138a5e060b6b3eaada3080ee3c4de75 ([atw-timesmart.7](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.7) -> [atw-timesmart.8](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.8)) because of conflict in wallet.h with #9108.\n",https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-283306821,283306821,
ryanofsky,2017-03-03T19:44:01Z,"Fixed mocktime test bug in 819696357bb407196e6f01175f2d4459848c7d9b and rebased 819696357bb407196e6f01175f2d4459848c7d9b -> 79b25edd74053d7a655882d4c16bb5dba43c90a2 ([pr/atw-timesmart.9](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.9) -> [pr/atw-timesmart.10](https://github.com/ryanofsky/bitcoin/commits/pr/atw-timesmart.10)) because of conflicts with pwalletMain renames in #9775.",https://github.com/bitcoin/bitcoin/pull/9369#issuecomment-284051389,284051389,
paveljanik,2016-12-16T19:20:59Z,"You can use `__func__` here.\n",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92869959,92869959,src/wallet/wallet.cpp
ryanofsky,2016-12-16T19:50:59Z,"Thanks, done.",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92875006,92875006,src/wallet/wallet.cpp
paveljanik,2016-12-17T08:25:14Z,The old code is testing `hashUnset()` of `wtxIn`. But the new code is checking `hashUnset()` of `wtx`. Is it the same?,https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92917935,92917935,src/wallet/wallet.cpp
ryanofsky,2016-12-17T12:34:54Z,"Yes, the change replaces this and other uses of `wtxIn` with `wtx`. Because this code is running in the case where `fInsertedNew ` is true, `wtx` at this point is just a copy of `wtxIn` with two extra fields set (`nTimeReceived` and `nOrderPos`)",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r92921052,92921052,src/wallet/wallet.cpp
laanwj,2016-12-19T11:33:22Z,Would it be an idea to put this on CWalletTx instead? A quick scan of the code doesn't reveal any accesses to CWallet fields.,https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93014619,93014619,src/wallet/wallet.cpp
ryanofsky,2016-12-19T11:46:06Z,I think this makes most sense here next to CWallet::GetKeyBirthTimes. It ~~accesses CWallet::mapBlockIndex and~~ scans the CWallet::wtxOrdered field.,https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93016780,93016780,src/wallet/wallet.cpp
ryanofsky,2016-12-19T11:50:05Z,"(Never mind part of comment above about mapBlockIndex, which is a global.)",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r93017291,93017291,src/wallet/wallet.cpp
kallewoof,2017-02-10T01:55:06Z,"I think an additional comment below this describing what a smart timestamp is would be helpful, even if the reader may deduce this from the logic section below. (It's not super clear to me, but seems to be a way to adapt the time stamp depending on various hints deduced from the state of the transaction.)",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100457818,100457818,src/wallet/wallet.cpp
kallewoof,2017-02-10T01:59:27Z,"Nit / coding standard: E.g. Google coding style guide advises against `if (..) { .. } else ..`, recommending instead `if (..) { .. } else { .. }`, i.e. use braces in `else` if braces were used in `if`.",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100458260,100458260,src/wallet/wallet.cpp
sipa,2017-02-10T02:38:27Z,Our own coding style document says the same.,https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100461779,100461779,src/wallet/wallet.cpp
ryanofsky,2017-02-10T16:44:22Z,"I don't think I understand how this should change. The comment on `nTimeSmart` describes what the smart timestamp is and the comment on `ComputeTimeSmart` describes how a smart timestamp is computed, and both comments reference each other.",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100574008,100574008,src/wallet/wallet.cpp
ryanofsky,2017-02-10T20:01:56Z,Added braces in cb48cd7d720d7af466614652c1e2a56dcce068bc,https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100613101,100613101,src/wallet/wallet.cpp
kallewoof,2017-02-12T12:59:10Z,"It just felt like I didn't have a good grasp what it was by reading the code. You're probably right that it's sufficient if it's described in the variable comment, though.",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r100691355,100691355,src/wallet/wallet.cpp
jnewbery,2017-03-07T18:09:46Z,"I mildly dislike that this log (which is about adding a transaction to the wallet and was originally in AddToWallet()) is now in ComputeTimeSmart() and will print with the name of the function, since it's not really anything to do with computing nTimeSmart. Does it make sense to leave this log in the AddToWallet() function somehow?",https://github.com/bitcoin/bitcoin/pull/9369#discussion_r104737234,104737234,src/wallet/wallet.cpp
jnewbery,2017-03-07T18:11:24Z,Style preference: consider not initializing nTimeSmart to wtx.nTimeReceived and only setting it here (to emphasise that nTimeSmart is only set to nTimeReceived when the transaction is received outside a block.,https://github.com/bitcoin/bitcoin/pull/9369#discussion_r104737610,104737610,src/wallet/wallet.cpp
