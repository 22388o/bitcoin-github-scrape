[
  {
    "sha": "c36e0083c357dafa8dca6b439809b347c5fbcb61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzZlMDA4M2MzNTdkYWZhOGRjYTZiNDM5ODA5YjM0N2M1ZmJjYjYx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T09:21:29Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T16:32:27Z"
      },
      "message": "Keep track of the latest wtxid",
      "tree": {
        "sha": "886648201f2990e37c09ccc568b62aa97c2fee42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/886648201f2990e37c09ccc568b62aa97c2fee42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c36e0083c357dafa8dca6b439809b347c5fbcb61",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlr9rpwACgkQHrd2uwPH\nki1T9hAAvWKVzWlgzCEAGzuByPidtgvU6fnkdQslwFT6ukSxF8yAtkYeISE8REJj\nUh0GXPbm2U8Vi+cGieZb0Jnt0xj9vhxmZ5diH848kJ3m/MHbqIK0/vVToD8ucvgn\nMM1U/K75ZBzkFQ16I8v70x/W3DiFKmPgOlMTVM5bdDYKmXeENxuu17L6JVuAcNfD\nLYHfET1EzgXCbqchowTabojHQ4ClPvKPNAddTeyFBa2HAM7Js5SQdbj6D1UlxM+e\niSSStIFF6sMggVDRC49SGNY+/awxUbj3Q8YLQkkDkKnnpHxCSa+DEWRr6i+njV9P\nLC0k+DPww0iuz903QLaFhn2A5cFaA6PXS/z3iGH6y9t0vFPo9G+BTERrKbDZZsGF\ncHwe+PulPCaVnfcBN1kSTCPdvDNipx1KyM6s1gGGTHDxCdrlOpyBSjktCbaS9Qyy\n4BGY31GmuIwS7wSQ2F6tHPlE1UUvjKz6GLnG1I5Ywgvdfb1yIUcBpspVxd9Cc6d4\nOCeRcSZMnX9mgIEcLBpSCcahjI1PFwMLqlG4AH4p1ubi+N0LpeAK5QMobee3l7sF\nKkWyyx9toSvUdWu3lNU7rAi7wAAF+81NbG9tWh5aZPuSD7JGLKKslfZXERIigCzt\nOqnYB7Zv7+B4D8m/pn8R6js9/tqD6uxR81ynqWAgI7Oe+ziW6vQ=\n=nQLd\n-----END PGP SIGNATURE-----",
        "payload": "tree 886648201f2990e37c09ccc568b62aa97c2fee42\nparent 13da2899ae42d48547e5cb491ea6aba4882b3306\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1526548889 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1526574747 +0200\n\nKeep track of the latest wtxid\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c36e0083c357dafa8dca6b439809b347c5fbcb61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c36e0083c357dafa8dca6b439809b347c5fbcb61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c36e0083c357dafa8dca6b439809b347c5fbcb61/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13da2899ae42d48547e5cb491ea6aba4882b3306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13da2899ae42d48547e5cb491ea6aba4882b3306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13da2899ae42d48547e5cb491ea6aba4882b3306"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6b431726d61319747e15a80671b41805b6c7dbb4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c36e0083c357dafa8dca6b439809b347c5fbcb61/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c36e0083c357dafa8dca6b439809b347c5fbcb61/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c36e0083c357dafa8dca6b439809b347c5fbcb61",
        "patch": "@@ -990,6 +990,19 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n         t.detach(); // thread runs free\n     }\n \n+    {\n+        // update the latest transaction id in case it has changed\n+        std::lock_guard<std::mutex> lock(m_cs_txadd);\n+        if (!wtxOrdered.empty()) {\n+            CWalletTx* pwtx = wtxOrdered.rbegin()->second.first;\n+            uint256 possible_latest_wtxid = pwtx->GetHash();\n+            if (m_latest_wtxid != possible_latest_wtxid) {\n+                m_latest_wtxid = possible_latest_wtxid;\n+                m_cond_txadd.notify_all();\n+            }\n+        }\n+    }\n+\n     return true;\n }\n \n@@ -1009,6 +1022,11 @@ bool CWallet::LoadToWallet(const CWalletTx& wtxIn)\n             }\n         }\n     }\n+    if (!wtxOrdered.empty()) {\n+        std::lock_guard<std::mutex> lock(m_cs_txadd);\n+        m_latest_wtxid = wtxOrdered.rbegin()->second.first->GetHash();\n+        m_cond_txadd.notify_all();\n+    }\n \n     return true;\n }"
      },
      {
        "sha": "e9c11ad77fa77bf5278ce1fc6440e33da66d3454",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c36e0083c357dafa8dca6b439809b347c5fbcb61/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c36e0083c357dafa8dca6b439809b347c5fbcb61/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=c36e0083c357dafa8dca6b439809b347c5fbcb61",
        "patch": "@@ -1180,6 +1180,11 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     /** Whether a given output is spendable by this wallet */\n     bool OutputEligibleForSpending(const COutput& output, const CoinEligibilityFilter& eligibility_filter) const;\n+\n+    /** mutex, container and condition variable for updating the latest transaction id */\n+    std::mutex m_cs_txadd;\n+    std::condition_variable m_cond_txadd;\n+    uint256 m_latest_wtxid;\n };\n \n /** A key allocated from the key pool. */"
      }
    ]
  },
  {
    "sha": "7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZmE3OGZhNzdjMjcwOWUyNzFiYTllNmJiNDNlNDBiNTcxZGUzMWM1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T09:30:33Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T18:40:49Z"
      },
      "message": "RPC: add listsincetx, a way to longpoll for new wallet transactions",
      "tree": {
        "sha": "75877a031e05f02fd7d1e85afc705a3c57f89f6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75877a031e05f02fd7d1e85afc705a3c57f89f6a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlr9zLIACgkQHrd2uwPH\nki2fZRAA0+4B9VowjhL7W6OQnGwK+a55mumMTXlpTBuhq0yWnupPyTmn1gxB/com\nK8/JPivux4hj95RPLlE+niQtfLA4MpwTINdqgaTfbZq3mCTTBPDVENLfM/+EO44+\nSb1VsvxK3EsenH/6xrRs4HPxixxElfeOWcS7zTqcajc+Ik9OYcEfY67EVbWBHJ2t\n90QGMWQhhVwVYwIL3WnMFj8hLCs81k/ijADJFnRgcuS7pTROFg1dj+QKS63pFyQe\nTK6a8DRXXfUS7yNNUh9m7LUD7latl1OSZaWhqbaRXTtLe3w4TXVjkHcBZhlE6hFP\nXKQNtOD5hcLMoT/UCnw37RMzqZhtHI0X+uRJUVMMKKH8beQr+60wnOBY9Is9PPP0\nlT0qLnvMCINy9BhuynJ5TxTboZBplEciZ1Bdeyxhsx9Au2EZOwv4Z0h0O4tZQdys\nbbAYIumwFZt7dgAyzsqCRZUwEONEUCesert/ZHAw+/gBH5RgViN5qFbrJiNqcG7I\njY67BNwfulK4e/X9dI8jpwZL23l7Fy2lj2GwtSvWf06IWtppkxKzkHxh+1HY6cMW\nXciAtAp81OY0msHoOLcVxJ0fjxMzs0bGVgU5/T4jgubQy4yGm4ptZUK6/G8mv/S2\ntyobz8iW0D7Dbd85pt30uQ2uu3ErguNKzQyVwfQsYZSYf2VGj4k=\n=cJBg\n-----END PGP SIGNATURE-----",
        "payload": "tree 75877a031e05f02fd7d1e85afc705a3c57f89f6a\nparent c36e0083c357dafa8dca6b439809b347c5fbcb61\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1526549433 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1526582449 +0200\n\nRPC: add listsincetx, a way to longpoll for new wallet transactions\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fa78fa77c2709e271ba9e6bb43e40b571de31c5/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c36e0083c357dafa8dca6b439809b347c5fbcb61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c36e0083c357dafa8dca6b439809b347c5fbcb61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c36e0083c357dafa8dca6b439809b347c5fbcb61"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 74,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ed974ed3ed921ef48f899465b1c3e67a1ac6144d",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fa78fa77c2709e271ba9e6bb43e40b571de31c5/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fa78fa77c2709e271ba9e6bb43e40b571de31c5/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
        "patch": "@@ -154,6 +154,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"echojson\", 9, \"arg9\" },\n     { \"rescanblockchain\", 0, \"start_height\"},\n     { \"rescanblockchain\", 1, \"stop_height\"},\n+    { \"listsincetx\", 1, \"polltime\"},\n };\n \n class CRPCConvertTable"
      },
      {
        "sha": "f865c2b733f5075c7d8e3285507c60dab99f949f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fa78fa77c2709e271ba9e6bb43e40b571de31c5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fa78fa77c2709e271ba9e6bb43e40b571de31c5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
        "patch": "@@ -2117,6 +2117,77 @@ static UniValue listaccounts(const JSONRPCRequest& request)\n     return ret;\n }\n \n+static UniValue listsincetx(const JSONRPCRequest& request)\n+{\n+    CWallet* const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"listsincetx \\\"txid\\\" (polltime)\\n\"\n+            \"\\nGet all transactions since a specific transaction [txid].\\n\"\n+            \"This call can be used as longpoll notification channel if follow-up transactions from the latest transaction-id are requested and [polltime] is greater than zero.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"txid\\\"               (string, required) The txid to list transactions since\\n\"\n+            \"1. \\\"polltime\\\"           (numeric, optional) If greater than zero, wait with a timeout of <polltime> seconds for new transactions. It will response immediately when new transactions arrive (default is 0)\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"listsincetx\", \"\\\"66f1e20f43780a67762fa00524e0c4ce0416339aa84e830d90e8dc636cd836e4\\\" 10\")\n+            + HelpExampleRpc(\"listsincetx\", \"\\\"66f1e20f43780a67762fa00524e0c4ce0416339aa84e830d90e8dc636cd836e4\\\", 10\")\n+        );\n+\n+    // Make sure the results are valid at least up to the most recent block\n+    // the user could have gotten from another RPC command prior to now\n+    pwallet->BlockUntilSyncedToCurrentChain();\n+\n+    // we assume that pwallet gets never deconstructed at this point\n+    uint256 hash;\n+    hash.SetHex(request.params[0].get_str());\n+    auto it_find = pwallet->mapWallet.find(hash);\n+    if (it_find == pwallet->mapWallet.end()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid or non-wallet transaction id\");\n+    }\n+\n+    UniValue transactions(UniValue::VARR);\n+\n+    // construct a function to populate the output array\n+    auto addTransactionsSince = [&transactions, &pwallet](uint256 wtxid_since) {\n+        LOCK2(cs_main, pwallet->cs_wallet); // we only lock at this point to allow non blocking long polling\n+        isminefilter filter = ISMINE_SPENDABLE;\n+        bool list = false;\n+        // reverse iterate over the ordere transaction map\n+        for (CWallet::TxItems::const_iterator it = pwallet->wtxOrdered.begin(); it != pwallet->wtxOrdered.end(); ++it) {\n+            CWalletTx* const pwtx = (*it).second.first;\n+            if (pwtx != nullptr && !list && wtxid_since == pwtx->GetHash()) {\n+                // transaction found;\n+                list = true;\n+                continue;\n+            } else if (list && pwtx != nullptr) {\n+                ListTransactions(pwallet, *pwtx, \"*\", 0, true, transactions, filter);\n+            }\n+        }\n+    };\n+\n+    // find transaction and eventually populate the array with follow-up transactions\n+    addTransactionsSince(it_find->first);\n+\n+    // in case nothing has been found (means newest transaction has been requested) and requested txid is valid, longpoll if requested\n+    if (transactions.empty() && !request.params[1].isNull() && request.params[1].get_int() > 0) {\n+        uint256 wtx_update;\n+        std::unique_lock<std::mutex> lock(pwallet->m_cs_txadd);\n+        wtx_update = pwallet->m_latest_wtxid;\n+\n+        // wait for new transactions and timeout when the given timeout value has been reached\n+        pwallet->m_cond_txadd.wait_for(lock, std::chrono::milliseconds(request.params[1].get_int() * 1000), [&pwallet, &wtx_update] {\n+            return (pwallet->m_latest_wtxid != wtx_update);\n+        });\n+        // we eventually have follow-up transactions now, add them to the output array\n+        addTransactionsSince(it_find->first);\n+    }\n+    return transactions;\n+}\n+\n static UniValue listsinceblock(const JSONRPCRequest& request)\n {\n     CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n@@ -4194,6 +4265,8 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"listlockunspent\",                  &listlockunspent,               {} },\n     { \"wallet\",             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\"} },\n     { \"wallet\",             \"listsinceblock\",                   &listsinceblock,                {\"blockhash\",\"target_confirmations\",\"include_watchonly\",\"include_removed\"} },\n+    { \"wallet\",             \"listsincetx\",                      &listsincetx,                   {\"txid\", \"polltime\"} },\n+\n     { \"wallet\",             \"listtransactions\",                 &listtransactions,              {\"account|dummy\",\"count\",\"skip\",\"include_watchonly\"} },\n     { \"wallet\",             \"listunspent\",                      &listunspent,                   {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n     { \"wallet\",             \"listwallets\",                      &listwallets,                   {} },"
      }
    ]
  },
  {
    "sha": "a6535bb3e54b0a0eb232991489163099dc8ac6a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjUzNWJiM2U1NGIwYTBlYjIzMjk5MTQ4OTE2MzA5OWRjOGFjNmEx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T09:31:36Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T18:40:51Z"
      },
      "message": "QA: add ListSinceTxTest test",
      "tree": {
        "sha": "756fa09d1639cd178198144bca863c109c970030",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/756fa09d1639cd178198144bca863c109c970030"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6535bb3e54b0a0eb232991489163099dc8ac6a1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlr9zLMACgkQHrd2uwPH\nki1l1g/8DsQHv09hC7kXBblaR3pRyNX4SVas2TIsFCQlEgA9/Q4pwIXEeFt65C2H\nTsdqocGcDzXfDem83izxajEoZR0AEovIDk+yh/tf49qAI25z1V5g0yjnHOpaigWj\nXTJp0FVDIqrai65uyFzUHCMQqGYUVu0MmEN4ZLwhKe0K27k5xmwBZJMPpsx1WOul\ni6p3hm9y1B/u0fB9y6+bzmQm26czlmNpvlyg5e1geE13L191Fyb4ZzHHhpZYBSDX\nnZovSlkydz2HCwYIK7meM8yCxLyh36onkaKs+8Krf/jkMxU5z5W5EdqD6pNNfEU1\nk5mizWMU7PKRsGJ+dYB0NKjhifBsmgRKPlMdRg7YBNlYz5lfUIIgul9WnP0nyf7s\nqcxFDcgDZ/aZxJvDZdPrtE6xoKu74pTHZW61Jgbe3LBrohOAsm0cAVCbQsHwrbAG\nteV64GOmi9FmfFpB8mkrE+fAHnkb+oJCZ52YlMyTR1zwyfwCCMT9RjIkfqz7Z+jD\nOnqsQB6O168YMC76Mi4xqi+Q7iRjNSaUMjfTeagCY8p18ByadclBJOJ41h8X2Dhq\npDWFCtKhfNVl8yFn5dMGmwfJAkRICR73KKnGm6ViFQOls+c89YAcxgiY3tnb+7Sk\n6UbmPVgf9LCCuMn/neVSlcicaKBDPlRROpwwI29xWHrYzWIx1mw=\n=fLaq\n-----END PGP SIGNATURE-----",
        "payload": "tree 756fa09d1639cd178198144bca863c109c970030\nparent 7fa78fa77c2709e271ba9e6bb43e40b571de31c5\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1526549496 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1526582451 +0200\n\nQA: add ListSinceTxTest test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6535bb3e54b0a0eb232991489163099dc8ac6a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6535bb3e54b0a0eb232991489163099dc8ac6a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6535bb3e54b0a0eb232991489163099dc8ac6a1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fa78fa77c2709e271ba9e6bb43e40b571de31c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fa78fa77c2709e271ba9e6bb43e40b571de31c5"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 67,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8963e0e497df9cbc5a2851cfbe0bef87b3e77a83",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6535bb3e54b0a0eb232991489163099dc8ac6a1/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6535bb3e54b0a0eb232991489163099dc8ac6a1/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=a6535bb3e54b0a0eb232991489163099dc8ac6a1",
        "patch": "@@ -127,6 +127,7 @@\n     'wallet_bumpfee.py',\n     'rpc_named_arguments.py',\n     'wallet_listsinceblock.py',\n+    'wallet_listsincetx.py',\n     'p2p_leak.py',\n     'wallet_encryption.py',\n     'feature_dersig.py',"
      },
      {
        "sha": "efc4f652b7493d36a7102fadf501035ca617e71b",
        "filename": "test/functional/wallet_listsincetx.py",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6535bb3e54b0a0eb232991489163099dc8ac6a1/test/functional/wallet_listsincetx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6535bb3e54b0a0eb232991489163099dc8ac6a1/test/functional/wallet_listsincetx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listsincetx.py?ref=a6535bb3e54b0a0eb232991489163099dc8ac6a1",
        "patch": "@@ -0,0 +1,66 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the listsincetx RPC including longpoll.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import threading\n+import time\n+\n+class LongpollThread(threading.Thread):\n+    def __init__(self, node, txid):\n+        threading.Thread.__init__(self)\n+        self.txid = txid\n+        self.node = node\n+        self.txlist = []\n+\n+    def run(self):\n+        self.txlist = self.node.listsincetx(self.txid, 10)\n+\n+\n+class ListSinceTxTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        self.nodes[0].generate(101)\n+        self.sync_all()\n+        newest_txid         = self.nodes[0].listtransactions()[-1]['txid']\n+        second_newest_txid  = self.nodes[0].listtransactions()[-2]['txid']\n+        listsinceoldest     = self.nodes[0].listsincetx(self.nodes[0].listtransactions(\"*\", 101)[0]['txid'])\n+        self.log.info(\"Testing synchronous listtxsince behaviour\")\n+        assert_equal(len(listsinceoldest), 100) #all follow up transactions\n+        assert_equal(listsinceoldest[-1]['txid'], newest_txid)\n+        assert_equal(listsinceoldest[-2]['txid'], second_newest_txid)\n+        assert_equal(self.nodes[0].listsincetx(second_newest_txid)[0]['txid'], newest_txid)\n+        assert_equal(len(self.nodes[0].listsincetx(newest_txid)), 0) #no transaction will follow the newest one\n+        assert_equal(len(self.nodes[0].listsincetx(newest_txid, 1)), 0) #poll with no result\n+        txid_n1_1 = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        txid_n1_2 = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 2)\n+        self.sync_all()\n+        assert_equal(self.nodes[1].listsincetx(txid_n1_1)[0]['txid'], txid_n1_2)\n+        assert_equal(len(self.nodes[1].listsincetx(txid_n1_2, 1)), 0) #poll with no result\n+\n+        self.log.info(\"Start long polling thread\")\n+        new_addr_n1 = self.nodes[1].getnewaddress()\n+        thr = LongpollThread(self.nodes[1], txid_n1_2)\n+        thr.start()\n+        self.log.info(\"Sending transaction from other node on main thread\")\n+        txid_n1_3 = self.nodes[0].sendtoaddress(new_addr_n1, 3)\n+        cnt = 0\n+        while True: #need to loop since sync_all won't work with an active RPC connection\n+            if len(thr.txlist) > 0:\n+                self.log.info(\"Lonpoll thread received transaction\")\n+                break\n+            time.sleep(1)\n+            cnt+=1\n+            assert(cnt < 10) #timeout of 10 seconds\n+        thr.join(5)\n+        assert_equal(thr.txlist[0]['txid'], txid_n1_3)\n+\n+if __name__ == '__main__':\n+    ListSinceTxTest().main()"
      }
    ]
  },
  {
    "sha": "2dadbc883ecf37c42ec29c904b19cc2e5fe39b30",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZGFkYmM4ODNlY2YzN2M0MmVjMjljOTA0YjE5Y2MyZTVmZTM5YjMw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T16:38:50Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-05-17T18:40:51Z"
      },
      "message": "Contrib: add walletnotify example code",
      "tree": {
        "sha": "a092bf63da09a343e461b1c3b0d8a83077c1009c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a092bf63da09a343e461b1c3b0d8a83077c1009c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2dadbc883ecf37c42ec29c904b19cc2e5fe39b30",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlr9zLMACgkQHrd2uwPH\nki3uVRAAjNtrGQEShVyjBqI3lYav2B9tlBh1M9CLNNKgF3Dl58evxYc86uGMByhv\n/IHSFITd3hKoFi+AujlB5t3RVDtCwVvviAxHKk+JZGbjn4TWlSJ0G8jT2vPUInLv\nUhIEH5cMq+yADEdj9Ib8fuVdPvRVdtSbF/lJs25YIy8gjMKmB2AxnEV67fneBOn0\nI+JP5BVDcvUN0xK1F95kB2+y+AsIkTFaYNBto/oJ7oyVtX/UzTO7dgsTlzzUF8yt\neP+fDmqsYozSrqGM4lFhPO6ai1I3EjynCSpi3uJw8sCSKbcUc41HKD9bYtwkiIm1\n9D6FoEo/yrGDOoOUqrYGwMyaxIXTcRhDosFQzysugR9iOaXspQevd4iLIsS3JAng\nN6B2YT1IDw78SlJTeiypWFHn9fi0rBlfqka9yDR+1jyGG3lXZG01cN3JFieKIahB\nlm+dN0oimeXCahCXs1GL+wlmaF0eCJJVF+zs5FSc6W6IdAsCqCZHSH5qpgdp/MEt\nIJIOrtTdBlFp7EZES5Uh7EGuwaXWaDd5UEwK2YYbtq0H590LhYI3eiVpZjlN/zus\nc+6qNFGC/qbNX0U6dsioukP8RHqnBJ/tkTmilGukiqL/jDQRBlyWF5/bRG+tjS2P\nskglrAxF8iM9h3cWR40RJ1ce0w4fVuOplTkg/uucaZuY/6zGrQM=\n=Pefa\n-----END PGP SIGNATURE-----",
        "payload": "tree a092bf63da09a343e461b1c3b0d8a83077c1009c\nparent a6535bb3e54b0a0eb232991489163099dc8ac6a1\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1526575130 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1526582451 +0200\n\nContrib: add walletnotify example code\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dadbc883ecf37c42ec29c904b19cc2e5fe39b30",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2dadbc883ecf37c42ec29c904b19cc2e5fe39b30",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dadbc883ecf37c42ec29c904b19cc2e5fe39b30/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6535bb3e54b0a0eb232991489163099dc8ac6a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6535bb3e54b0a0eb232991489163099dc8ac6a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6535bb3e54b0a0eb232991489163099dc8ac6a1"
      }
    ],
    "stats": {
      "total": 114,
      "additions": 114,
      "deletions": 0
    },
    "files": [
      {
        "sha": "88bc44e3057cf60a12b30e75586e74c266058ca5",
        "filename": "contrib/push/example_walletnotify.py",
        "status": "added",
        "additions": 114,
        "deletions": 0,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2dadbc883ecf37c42ec29c904b19cc2e5fe39b30/contrib/push/example_walletnotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2dadbc883ecf37c42ec29c904b19cc2e5fe39b30/contrib/push/example_walletnotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/push/example_walletnotify.py?ref=2dadbc883ecf37c42ec29c904b19cc2e5fe39b30",
        "patch": "@@ -0,0 +1,114 @@\n+#!/usr/bin/env python3\n+#\n+# Example code for wallet push notifications (similar to -walletnotify)\n+# ./example_walletnotify.py -network=regtest -datadir=~/-.bitcoin/regtest\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from __future__ import print_function\n+import argparse\n+import base64\n+try: # Python 3\n+    import http.client as httplib\n+except ImportError: # Python 2\n+    import httplib\n+import json\n+import os\n+import os.path\n+import sys\n+\n+settings = {}\n+\n+class BitcoinRPC:\n+    def __init__(self, host, port, username, password):\n+        authpair = \"%s:%s\" % (username, password)\n+        authpair = authpair.encode('utf-8')\n+        self.authhdr = b\"Basic \" + base64.b64encode(authpair)\n+        self.conn = httplib.HTTPConnection(host, port=port, timeout=30)\n+\n+    def execute(self, obj):\n+        try:\n+            self.conn.request('POST', '/', json.dumps(obj),\n+                { 'Authorization' : self.authhdr,\n+                  'Content-type' : 'application/json' })\n+        except ConnectionRefusedError:\n+            print('RPC connection refused. Check RPC settings and the server status.',\n+                  file=sys.stderr)\n+            return None\n+\n+        resp = self.conn.getresponse()\n+        if resp is None:\n+            print(\"JSON-RPC: no response\", file=sys.stderr)\n+            return None\n+\n+        body = resp.read().decode('utf-8')\n+        if len(body) == 0:\n+            print(\"Invalid response, auth may failed\")\n+            return\n+        resp_obj = json.loads(body)\n+        return resp_obj\n+\n+    @staticmethod\n+    def build_request(idx, method, params):\n+        obj = { 'version' : '1.1',\n+            'method' : method,\n+            'id' : idx }\n+        if params is None:\n+            obj['params'] = []\n+        else:\n+            obj['params'] = params\n+        return obj\n+\n+    @staticmethod\n+    def response_is_error(resp_obj):\n+        return 'error' in resp_obj and resp_obj['error'] is not None\n+\n+def get_rpc_cookie(datadir):\n+    # Open the cookie file\n+    with open(os.path.join(os.path.expanduser(datadir), '.cookie'), 'r') as f:\n+        combined = f.readline()\n+        combined_split = combined.split(\":\")\n+        settings['rpcuser'] = combined_split[0]\n+        settings['rpcpassword'] = combined_split[1]\n+\n+if __name__ == '__main__':\n+    parser = argparse.ArgumentParser(description=\n+                                     'WalletNotify push example that uses listsincetx under the hood (only works if there is already a transaction)'\n+                                     '/example_walletnotify.py -network=regtest -datadir=~/-.bitcoin/regtest')\n+    parser.add_argument('-network', default=\"regtest\",\n+                        help='Network to use (mainnet, testnet, regtest)')\n+    parser.add_argument('-host', default=\"127.0.0.1\",\n+                        help='Host to access')\n+    parser.add_argument('-rpcuser', default=\"user\",\n+                        help='RPC username')\n+    parser.add_argument('-rpcpassword', default=\"pass\",\n+                        help='RPC password')\n+    parser.add_argument('-datadir',\n+                        help='Datadir to read the RPC cookie from (if set, rpcuser/rpcpassword is obsolete)')\n+    args = parser.parse_args()\n+    if not args.datadir:\n+        parser.print_help()\n+        exit()\n+    settings['host'] = args.host\n+    if args.network == \"regtest\":\n+        settings['port'] =  18443\n+    elif args.network == \"mainnet\":\n+        settings['port'] =  8332\n+    elif args.network == \"testnet3\" or args.network == \"testnet\" :\n+        settings['port'] =  18332\n+    settings['rpcuser'] = args.rpcuser\n+    settings['rpcpassword'] = args.rpcpassword\n+    if args.datadir:\n+        get_rpc_cookie(args.datadir)\n+\n+    rpc = BitcoinRPC(settings['host'], settings['port'],\n+             settings['rpcuser'], settings['rpcpassword'])\n+    latest_wtx = rpc.execute(rpc.build_request(0, \"listtransactions\", [\"*\", 1]))['result'][-1]['txid']\n+    while True:\n+        res = rpc.execute(rpc.build_request(0, \"listsincetx\", [latest_wtx, 100]))\n+        for tx in res['result']:\n+            print(\"New txid\"+tx['txid']+\" with amount \"+str(tx['amount']))\n+        latest_wtx = res['result'][-1]['txid'] #update latest wtx"
      }
    ]
  }
]