practicalswift,2020-07-13 21:21:54,Concept ACK: simpler is better,https://github.com/bitcoin/bitcoin/pull/19508#issuecomment-657800089,657800089,
MarcoFalke,2020-07-14 07:45:53,Oh actually this might be fixing undefined behavior according to https://en.cppreference.com/w/cpp/container/span/operator_at,https://github.com/bitcoin/bitcoin/pull/19508#issuecomment-658026482,658026482,
MarcoFalke,2020-07-19 18:52:38,"Fixed in a new commit\n\nEdit: Reference: https://en.cppreference.com/w/cpp/container/span/empty",https://github.com/bitcoin/bitcoin/pull/19508#issuecomment-660690561,660690561,
DrahtBot,2020-07-20 00:48:18,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/19508#issuecomment-660739861,660739861,
theStack,2020-07-20 12:54:55,re-ACK https://github.com/bitcoin/bitcoin/pull/19508/commits/fa2ae0ac8d43086430a29c73940ad6b1cd129e96,https://github.com/bitcoin/bitcoin/pull/19508#issuecomment-661021521,661021521,
elichai,2020-07-26 08:48:43,"ACK fa2ae0ac8d43086430a29c73940ad6b1cd129e96\n\nI think the standard makes this UB to allow using analysis mechanisms like: https://github.com/bitcoin/bitcoin/blob/fa2ae0ac8d43086430a29c73940ad6b1cd129e96/src/span.h#L157 sanitizers will also probably check bounds here\n\nP.S. see the precondition in the standard's draft: http://eel.is/c++draft/views.span#span.elem-1\n",https://github.com/bitcoin/bitcoin/pull/19508#issuecomment-663960115,663960115,
sipa,2020-07-26 16:27:49,utACk,https://github.com/bitcoin/bitcoin/pull/19508#issuecomment-664009515,664009515,
jonatack,2020-07-20 13:32:13,"Verified this line is being hit by debug-building without it :smile: \n```cpp\nscript/descriptor.cpp:831:25: error: ‘__gnu_cxx::__alloc_traits<std::allocator<Span<const char> >, Span<const char> >::value_type’\n{aka ‘class Span<const char>’} has no member named ‘empty’\n  831 |     if (origin_split[0].empty() || origin_split[0][0] != '[') {\n      |                         ^~~~~\nscript/desc",https://github.com/bitcoin/bitcoin/pull/19508#discussion_r457385984,457385984,src/span.h
jonatack,2020-07-20 14:16:09,Also was good to re-visit `spanparsing.h/cpp` for this PR.,https://github.com/bitcoin/bitcoin/pull/19508#discussion_r457426340,457426340,src/span.h
