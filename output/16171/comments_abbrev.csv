meshcollider,2019-06-08 13:14:22,Also need to remove the option from the parameter list,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500123296,500123296,
TheBlueMatt,2019-06-08 13:32:44,Fixed some dangling references.,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500124498,500124498,
jnewbery,2019-06-08 13:35:54,"> Further, it breaks a lot of modern wallet behavior.\n\nPlease describe what wallet behaviour this breaks. The majority of nodes seem to use the default. What problem are caused by node operators having the option to set the RBF policy of their mempool?\n\nThis configuration option was added in https://github.com/bitcoin/bitcoin/pull/7386#issue-56728257. I can't see any harm in leaving this h",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500124738,500124738,
TheBlueMatt,2019-06-08 13:41:31,"> Please describe what wallet behaviour this breaks.\n\nIndeed, things are mostly fine precisely because no one appears to materially use this option. However, if people *were* using this option it would (obviously) break a pretty important behavior wallets rely on.\n\n> I can't see any harm in leaving this here.\n\nI don't think we generally leave around options which allow someone to hamst",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500125098,500125098,
luke-jr,2019-06-08 14:01:43,This seems to be an excuse to expect a uniform mempool and node policy. Concept NACK if so.,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500126502,500126502,
jnewbery,2019-06-08 15:26:16,"> I don't think we generally leave around options which allow someone to hamstring their node's performance for no reason.\n\nHamstring is a pretty strong word. Yes, this makes block propagation through these nodes marginally slower due to a slightly higher number of blocktxns required, but it doesn't prevent the node from propagating blocks and keeping up with tip\n\n> I think the burden of p",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500132628,500132628,
TheBlueMatt,2019-06-08 15:44:03,"> Hamstring is a pretty strong word.\n\nNot IMO, no. A blocktxn roundtrip is a huge, huge difference in block propagation speed.\n\n> No, the burden of proof is always on the author proposing the change. \n\nI really don't think this is true for an all-red patch (assuming there is justification that the code is unused/unnecessary, which I think is very, very clear in this case). If anything ",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500133904,500133904,
TheBlueMatt,2019-06-08 15:54:32,"Also note that there is (apparently) some quantity of hashrate still running with this option. That is:\na) likely a carryover from old drama that no longer applies and is a forgotten config option,\nb) interferes with some modern wallet behavior, causing them to not be able to get their transactions confirmed in a timely fashion,\nc) causing the given miner to lose out on reward because of som",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500134811,500134811,
jnewbery,2019-06-08 16:44:13,"Having spoken to others about this, I'm now a +0. I don't think either of the reasons given in the PR description are compelling enough to remove the option, but the fact that this option could be confusing for node operators means that ideally we wouldn't support it.",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500139316,500139316,
DrahtBot,2019-06-08 17:23:01,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15891](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15891.html) (test: Require standard txs in regtest by de",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500142910,500142910,
practicalswift,2019-06-09 08:17:56,"@TheBlueMatt, the context of this PR is yesterday's nice Breaking Bitcoin talk ""Mempool analysis and simulation"" where @kallewoof mentions that Antpool is not mining replacement RBF transactions ([this segment of the presentation](https://www.youtube.com/watch?v=DKOG0BQMmmg&t=18247)), right? I think that is worth mentioning in the OP: it makes the discussion easier to understand.\n\nPerhaps wort",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500194726,500194726,
Empact,2019-06-10 01:38:00,"Concept NACK\n\n> assuming there is justification that the code is unused/unnecessary, which I think is very, very clear in this case\n\nSeems you're begging the question. Would you evince the delays? Given [opinions differ](https://twitter.com/search?q=zero-conf%20rbf&src=typd) on whether to prioritize RBF over incremental confidence in zero-conf transactions, it seems worthwhile to offer an ",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500264471,500264471,
sdaftuar,2019-06-10 12:08:01,"Concept ACK.  I'm not sure it's worth arguing over as we have plenty of more important things to do, but I do think that we should get rid of this option -- I will try to explain because I suspect there's some misunderstanding of what this option does because I don't think this is something anyone should want to use.\n\nThe issue here is not about whether we continue the BIP 125 RBF compromise w",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500393271,500393271,
practicalswift,2019-06-10 15:51:37,"@sdaftuar Thanks for providing additional context and clarification.\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500469485,500469485,
kallewoof,2019-06-11 08:25:26,"Concept ACK. \n\nFor a bit of context, the miner that appeared to be using this flag (or something similar) claims it was a configuration error, which aligns with what @sdaftuar is saying.",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500740483,500740483,
promag,2019-06-11 14:13:31,@MarcoFalke aren't man files updated automatically?,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500860211,500860211,
MarcoFalke,2019-06-11 14:16:58,"True, but doesn't matter imo.",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500861772,500861772,
Empact,2019-06-11 15:13:08,"> For non-miners, I do not believe there is any good reason to run with mempool replacement disabled. \n\nIMO node operators have a right to decide how to interact with the network consistent with the protocol. So they do not need a good reason, or a valid excuse[1] to choose to disable or filter the transactions relayed or mined in some way. IMO we should design and advance the network with thi",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-500887247,500887247,
TheBlueMatt,2019-06-12 00:41:30,"> IMO node operators have a right to decide how to interact with the network consistent with the protocol. So they do not need a good reason, or a valid excuse[1] to choose to disable or filter the transactions relayed or mined in some way.\n\nSure, its a P2P network, and people can (and do!) do all kinds of obnoxious things. This does not, however, in any way, mean that we should for some reaso",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501075879,501075879,
Empact,2019-06-12 13:40:13,"> Indeed, I'm not sure this is worth arguing again, but I completely fail to understand how this is somehow worth keeping.\n\nI think the removal / change in behavior should be justified or not adopted. The reverse may be easier for the group, but it seems also a significantly lower level of rigor than I would think necessary to prevent problematic changes over time. IMO burden of proof should b",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501277967,501277967,
TheBlueMatt,2019-06-12 14:01:15,"Sadly, to my knowledge, almost all of our education efforts towards miners have fallen completely flat (despite lots of effort). I appreciate the idealism here, but I dont think it matches up with the real world. Anyway, this is why we can't have nice things.",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501287081,501287081,
MarcoFalke,2019-06-12 14:38:08,"Why was this closed? Bitcoin Core is not about maintaining every tx relay policy that was every added. If it was, we might as well re-add support for tx priority by coin-days-destroyed or other ""altruistic"" tx relay/mining features.",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501303451,501303451,
sipa,2019-06-12 16:20:04,"I'd like to see this reopened.\n\n@Empact I'm in agreement with you that our job is not deciding what policies should be in effect on the network, and that change needs justification. However, don't you think there is sufficient reason to remove an option that is:\n\n* (a) only useful when a large portion of (other) miners enforce it as well\n* (b) is detrimental to everyone (income for miners, RB",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501348348,501348348,
sipa,2019-06-12 16:35:27,"Maybe another way of looking at it: I think we should have configuration options for which we can give advice on the circumstances in which someone might want to use them. For this, I know of no reason why someone would (including ""they believe RBF is evil"").",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501354903,501354903,
kallewoof,2019-06-12 16:43:04,"The only entity that seems to have possibly used this flag claims it was a misconfiguration. Are there any other known entities that are actively using this, on purpose, for any reason? If not, I don't see why this should stay in the code. It has obviously confused, to monetary loss, at least one miner. That turns the question of ""is removing this thing justified?"" to ""is keeping this justified?"" ",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501358184,501358184,
Empact,2019-06-12 16:45:25,"I'm partial to argument (c), and all for removing unused functionality. How do we know it is effectively unused? How about declaring it deprecated, removing it in a future version, and reconsidering only if there is push-back?\n\nIn any case, I'm not in the anti-RBF camp (to whatever extent one exists), but I have seen incidental evidence of its existence.\n\nRe the others:\n* (a) minority de",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501359150,501359150,
practicalswift,2019-06-12 16:47:51,utACK 8053e5cdade87550f0381d51feab81dedfec6c46,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501360153,501360153,
promag,2019-06-12 23:06:12,"Deprecation would save from unlikely rantings, still ACK 8053e5c.",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501486070,501486070,
luke-jr,2019-06-13 02:15:18,How does this interact with adding full RBF (which uses the same param) when there is support for merging that?,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501521979,501521979,
jtimon,2019-06-13 10:16:32,"utACK 8053e5cdade87550f0381d51feab81dedfec6c46\n\nBesides all the reasons not to use it, if anyone really wants to use this, they can maintain the patch themselves (or pay someone to do it), it's a small and simple patch anyway.\n \n> How does this interact with adding full RBF (which uses the same param) when there is support for merging that?\n\nI guess adding full-rbf as an option would b",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501642051,501642051,
MarcoFalke,2019-06-13 10:48:32,"> How does this interact with adding full RBF (which uses the same param) when there is support for merging that?\n\nThe option is added back with the same name",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-501652078,501652078,
ajtowns,2019-06-18 00:59:47,"ACK 8053e5cdade87550f0381d51feab81dedfec6c46 -- quick code review, checked tests work\n\nBIP125 support seemed controversial, so it made sense to have an option available to allow nodes to revert back to the old behaviour from before BIP125 was added -- if everyone had decided BIP125 was a bad idea and done a ""UASF""-style mass-enabling of the option, that would have worked fine and we could have",https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-502904234,502904234,
laanwj,2019-06-18 14:26:03,Posthumous ACK 8053e5cdade87550f0381d51feab81dedfec6c46,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-503159637,503159637,
ryanofsky,2019-06-18 14:35:21,Does this change need release notes?,https://github.com/bitcoin/bitcoin/pull/16171#issuecomment-503163832,503163832,
promag,2019-06-08 13:36:07,I think these are updated automatically.,https://github.com/bitcoin/bitcoin/pull/16171#discussion_r291806899,291806899,doc/man/bitcoin-qt.1
MarcoFalke,2019-06-11 11:54:16,"style-nit: Might want to run this through clang-format, as you touch those lines anyway.",https://github.com/bitcoin/bitcoin/pull/16171#discussion_r292415454,292415454,src/validation.cpp
