dcousens,2016-06-08T22:51:59Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224755144,224755144,
sipa,2016-06-08T22:54:14Z,"I'm personally fine with C-style casts for integer types, because for the\nsemantics are simple, unambiguous, and much shorter than using the C++\nstyle.\n\nHowever, if people feel strongly about this, I'm fine with strictly\navoiding them.\n",https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224755649,224755649,
laanwj,2016-06-09T05:16:54Z,"I'm fine with C-style casts too for primitive types. No need to change anything there, they're not more magical than anything else.\n\nFor object types and such it makes sense to require c++ casts.\n\nACK on the scoped_ptr to unique_ptr change.\n",https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224802016,224802016,
dcousens,2016-06-09T05:27:47Z,"@laanwj it does make _searching_ for casts and points of concern much easier if you use `static_cast` and the rest of the C++ family of casts.\nThe C-syntax, while more concise in context, often bears a higher intellectual load as to the broader implications of the action in the long run,  IMHO.\n\nThe extra _safety guarantees_ are also a boon and pretty excellent for what I would consider safety ",https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224803336,224803336,
laanwj,2016-06-09T05:32:15Z,>  it does make searching for casts and points of concern much easier if you use static_cast and the rest of the C++ family of casts.\n\nHow often do you actually want to search for all casts?\n\n> The extra safety guarantees are also a boon and pretty excellent for what I would consider safety conscious software.\n\nCan you be more specific here? How are casts of primitive types safer using C++ s,https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224803873,224803873,
laanwj,2016-06-09T05:34:38Z,I'm also not looking forward to 20 PRs full of 'convert one type of cast to another'. In the time we run this project we've (as far as I know) never had a bug caused by casting. There's no immediate need here. I wrote those developer suggestions all after having found an issue caused by that particular thing. They're not meant for style preferences.\n,https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224804143,224804143,
laanwj,2016-06-09T06:24:38Z,"We should mention this one: avoid shadowing vars, and enable -Wshadow #8105\nVery sneaky bug introduced by this: https://github.com/bitcoin/bitcoin/pull/8102#issuecomment-221934374\n",https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224810292,224810292,
dcousens,2016-06-09T06:26:40Z,"> Can you be more specific here? How are casts of primitive types safer using C++ syntax?\n> \n> I know that pointer casts are safer using C++ syntax and as they are the dangerous kind of casting.\n\nPerhaps I mis-indicated that I was referring only to int style casts,  the above was a blanket opinion.\n\nIn respect to: \n\n> I agree with using C++ syntax when casting from const to non const point",https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224810582,224810582,
kazcw,2016-06-09T17:02:18Z,Removed the statement on C-style casts.\n,https://github.com/bitcoin/bitcoin/pull/8177#issuecomment-224960028,224960028,
