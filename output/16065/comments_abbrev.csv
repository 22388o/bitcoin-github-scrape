MarcoFalke,2019-05-21 12:50:47,Tend to NACK. This makes the code harder to read,https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494377427,494377427,
promag,2019-05-21 14:00:54,"I don't think it makes the code harder to read honestly. This saves a bit of CPU for each new `CBlockIndex` since `CBlockHeader::GetHash()` is not cached.\n\nHowever feel free to close, it's not my intention to waste review effort over saving some seconds in IBD.",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494404064,494404064,
jb55,2019-05-21 15:06:27,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494431468,494431468,
MarcoFalke,2019-05-21 15:58:35,"Instead of passing the block to `AddToBlockIndex`, you'd have to pass the hash and the block. Unintuitive and easy to accidentally pass the wrong hash. If this is a performance optimization, maybe the hash should be cached? And it needs a benchmark either way.",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494452442,494452442,
DrahtBot,2019-05-21 17:01:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15976](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15976.html) (refactor: move methods under CChainState (p",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494474938,494474938,
promag,2019-05-21 17:23:09,"@MarcoFalke fair enough, I'll see if such change is worth it.",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494482489,494482489,
promag,2019-05-21 21:48:32,@MarcoFalke let me know what you think.,https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494571740,494571740,
jonasschnelli,2019-05-22 10:03:15,"We are talking only about the block header hash? @promag: can you ""quantify"" the speedup? ",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494738491,494738491,
promag,2019-05-22 15:03:55,"Profiling was done in debug mode, going to close and reopen if relevant in release mode.",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494842611,494842611,
jamesob,2019-05-22 15:08:21,"Also tend to NACK unless we can show significant performance impact. Introducing an additional identity (`BlockHeaderHashed`) makes the code slightly more complicated, especially when introduced without any documentation (when should this be used and why?).",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494844465,494844465,
promag,2019-05-22 15:30:27,"Before reopening I'd like to share some profile results. The following is the result of running in release mode, with an empty `-datadir` before and after. It shows the total time spent on `ProcessNewBlockHeaders` (currently 574000 headers). As you can see reusing the hash reduces the total time from 2.44s to 1.67s.\n\nBefore:\n![Screenshot 2019-05-22 at 16 26 12](https://user-images.githubuser",https://github.com/bitcoin/bitcoin/pull/16065#issuecomment-494853746,494853746,
practicalswift,2019-05-22 14:56:08,`explicit`? :-),https://github.com/bitcoin/bitcoin/pull/16065#discussion_r286535295,286535295,src/validation.cpp
