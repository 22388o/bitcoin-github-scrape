[
  {
    "sha": "03914234b3c9c35d66b51d580fe727a0707394ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMzkxNDIzNGIzYzljMzVkNjZiNTFkNTgwZmU3MjdhMDcwNzM5NGNh",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-09-29T01:17:36Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-18T03:22:33Z"
      },
      "message": "Discourage NOPs reserved for soft-fork upgrades\n\nNOP1 to NOP10 are reserved for future soft-fork upgrades. In the event\nof an upgrade such NOPs have *VERIFY behavior, meaning that if their\narguments are not correct the script fails. Discouraging these NOPs by\nrejecting transactions containing them from the mempool ensures that\nwe'll never accept transactions, nor mine blocks, with scripts that are\nnow invalid according to the majority of hashing power even if we're not\nyet upgraded. Previously this wasn't an issue as the IsStandard() rules\ndidn't allow upgradable NOPs anyway, but 7f3b4e95 relaxed the\nIsStandard() rules for P2SH redemptions allowing any redeemScript to be\nspent.\n\nWe *do* allow upgradable NOPs in scripts so long as they are not\nexecuted. This is harmless as there is no opportunity for the script to\nbe invalid post-upgrade.",
      "tree": {
        "sha": "7b8bb1ddba7c75adefa5241bc97d3b5f0a5d2608",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b8bb1ddba7c75adefa5241bc97d3b5f0a5d2608"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03914234b3c9c35d66b51d580fe727a0707394ca",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJUart8XhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAxOTY4ZTY3Yjg4YzdhMGI3NmQ0MjZhNWVhNzJiOTIzYmZh\nYmFiZWQxZTY4M2QxYzQvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQJIFAPaXwkfsncAf/SpwkFvt1an1Tdnpj8DMPrsgL\n/5p4Sy1IvjX1Z/etxYATKgYfzae3wPjdUDPphM0lYmoHN9Vx4AxUW7toEhBaRFXi\nYF5fayNFQoUXlpQxEywRambXoMZeM7Qq5KqWwaJZCd6REQW0oi9pDyHVkX48al5K\nAYjf63G2NVa6RNsC9rnKzSeFM6Sy9JDYFYOHqJfKyMfNxBpwJSz63zc3y4QR2b/x\n5XK+FRdMwH/sVVjOd0K17Uxnz9jG3PCFEVW78TTXhLiS1jLoGTo+/lddvcANfK5J\ng/ivYntQxaDDELQ9thqsZ4b7ECMo60hb0XVLuWtIVjKEfkHiXc6SmylKA5clNA==\n=TOcd\n-----END PGP SIGNATURE-----",
        "payload": "tree 7b8bb1ddba7c75adefa5241bc97d3b5f0a5d2608\nparent 8adf457047677df1d58da070bae5629526bb5b74\nauthor Peter Todd <pete@petertodd.org> 1411953456 -0400\ncommitter Peter Todd <pete@petertodd.org> 1416280953 -0500\n\nDiscourage NOPs reserved for soft-fork upgrades\n\nNOP1 to NOP10 are reserved for future soft-fork upgrades. In the event\nof an upgrade such NOPs have *VERIFY behavior, meaning that if their\narguments are not correct the script fails. Discouraging these NOPs by\nrejecting transactions containing them from the mempool ensures that\nwe'll never accept transactions, nor mine blocks, with scripts that are\nnow invalid according to the majority of hashing power even if we're not\nyet upgraded. Previously this wasn't an issue as the IsStandard() rules\ndidn't allow upgradable NOPs anyway, but 7f3b4e95 relaxed the\nIsStandard() rules for P2SH redemptions allowing any redeemScript to be\nspent.\n\nWe *do* allow upgradable NOPs in scripts so long as they are not\nexecuted. This is harmless as there is no opportunity for the script to\nbe invalid post-upgrade.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03914234b3c9c35d66b51d580fe727a0707394ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03914234b3c9c35d66b51d580fe727a0707394ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03914234b3c9c35d66b51d580fe727a0707394ca/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8adf457047677df1d58da070bae5629526bb5b74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8adf457047677df1d58da070bae5629526bb5b74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8adf457047677df1d58da070bae5629526bb5b74"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 49,
      "deletions": 3
    },
    "files": [
      {
        "sha": "760086eaba31b3a753e4735a4ae026a3c1cd8e34",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -329,8 +329,14 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                 // Control\n                 //\n                 case OP_NOP:\n+                break;\n+\n                 case OP_NOP1: case OP_NOP2: case OP_NOP3: case OP_NOP4: case OP_NOP5:\n                 case OP_NOP6: case OP_NOP7: case OP_NOP8: case OP_NOP9: case OP_NOP10:\n+                {\n+                    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)\n+                        return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+                }\n                 break;\n \n                 case OP_IF:"
      },
      {
        "sha": "12b2719414202e6e0743f4fa90da46cbe0ce85e3",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -57,7 +57,18 @@ enum\n     // any other push causes the script to fail (BIP62 rule 3).\n     // In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n     // (softfork safe)\n-    SCRIPT_VERIFY_MINIMALDATA = (1U << 6)\n+    SCRIPT_VERIFY_MINIMALDATA = (1U << 6),\n+\n+    // Discourage use of NOPs reserved for upgrades (NOP1-10)\n+    //\n+    // Provided so that nodes can avoid accepting or mining transactions\n+    // containing executed NOP's whose meaning may change after a soft-fork,\n+    // thus rendering the script invalid; with this flag set executing\n+    // discouraged NOPs fails the script. This verification flag will never be\n+    // a mandatory flag applied to scripts in a block. NOPs that are not\n+    // executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\n+    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS  = (1U << 7)\n+\n };\n \n uint256 SignatureHash(const CScript &scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType);"
      },
      {
        "sha": "793fc0da417ba9aed7ca4dfe447e4129bfd68e12",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -59,6 +59,8 @@ const char* ScriptErrorString(const ScriptError serror)\n             return \"Non-canonical signature: S value is unnecessarily high\";\n         case SCRIPT_ERR_SIG_NULLDUMMY:\n             return \"Dummy CHECKMULTISIG argument must be zero\";\n+        case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS:\n+            return \"NOPx reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_UNKNOWN_ERROR:\n         case SCRIPT_ERR_ERROR_COUNT:\n         default: break;"
      },
      {
        "sha": "21153f1bd1ce65706b012919a0bcf090f3e10ba4",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -43,6 +43,9 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_SIG_HIGH_S,\n     SCRIPT_ERR_SIG_NULLDUMMY,\n \n+    /* softfork safeness */\n+    SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS,\n+\n     SCRIPT_ERR_ERROR_COUNT\n } ScriptError;\n "
      },
      {
        "sha": "c4b82b4c45ae5557f105944dea5eb56ea33857e9",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -47,7 +47,8 @@ static const unsigned int MANDATORY_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH;\n static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY_FLAGS |\n                                                          SCRIPT_VERIFY_STRICTENC |\n                                                          SCRIPT_VERIFY_MINIMALDATA |\n-                                                         SCRIPT_VERIFY_NULLDUMMY;\n+                                                         SCRIPT_VERIFY_NULLDUMMY |\n+                                                         SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS;\n \n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;"
      },
      {
        "sha": "0356d0be1c7fc4d413cf816b7cb4414c92641707",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -163,6 +163,23 @@ nSequences are max.\n [\"1\",\"NOP1 NOP2 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10 2 EQUAL\", \"P2SH,STRICTENC\"],\n [\"'NOP_1_to_10' NOP1 NOP2 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10\",\"'NOP_1_to_11' EQUAL\", \"P2SH,STRICTENC\"],\n \n+[\"Ensure 100% coverage of discouraged NOPS\"],\n+[\"1\", \"NOP1\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP2\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP3\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP4\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP5\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP6\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP7\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP8\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP9\",  \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+[\"1\", \"NOP10\", \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\"],\n+\n+[\"NOP10\", \"1\", \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\", \"Discouraged NOP10 in scriptSig\"],\n+\n+[\"1 0x01 0xb9\", \"HASH160 0x14 0x15727299b05b45fdaf9ac9ecf7565cfe27c3e567 EQUAL\",\n+ \"P2SH,DISCOURAGE_UPGRADABLE_NOPS\", \"Discouraged NOP10 in redeemScript\"],\n+\n [\"0x50\",\"1\", \"P2SH,STRICTENC\", \"opcode 0x50 is reserved\"],\n [\"1\", \"IF 0xba ELSE 1 ENDIF\", \"P2SH,STRICTENC\", \"opcodes above NOP10 invalid if executed\"],\n [\"1\", \"IF 0xbb ELSE 1 ENDIF\", \"P2SH,STRICTENC\"],"
      },
      {
        "sha": "0cf15631630f81485a35e5d38dde8410c085c29b",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -235,6 +235,11 @@ nSequences are max.\n [\"1\",\"NOP1 NOP2 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10 1 EQUAL\", \"P2SH,STRICTENC\"],\n [\"'NOP_1_to_10' NOP1 NOP2 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10\",\"'NOP_1_to_10' EQUAL\", \"P2SH,STRICTENC\"],\n \n+[\"1\", \"NOP\", \"P2SH,STRICTENC,DISCOURAGE_UPGRADABLE_NOPS\", \"Discourage NOPx flag allows OP_NOP\"],\n+\n+[\"0\", \"IF NOP10 ENDIF 1\", \"P2SH,STRICTENC,DISCOURAGE_UPGRADABLE_NOPS\",\n+ \"Discouraged NOPs are allowed if not executed\"],\n+\n [\"0\", \"IF 0xba ELSE 1 ENDIF\", \"P2SH,STRICTENC\", \"opcodes above NOP10 invalid if executed\"],\n [\"0\", \"IF 0xbb ELSE 1 ENDIF\", \"P2SH,STRICTENC\"],\n [\"0\", \"IF 0xbc ELSE 1 ENDIF\", \"P2SH,STRICTENC\"],"
      },
      {
        "sha": "e939e89972593b7beab81c091f96253f82e86ede",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03914234b3c9c35d66b51d580fe727a0707394ca/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03914234b3c9c35d66b51d580fe727a0707394ca/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=03914234b3c9c35d66b51d580fe727a0707394ca",
        "patch": "@@ -37,7 +37,8 @@ static std::map<string, unsigned int> mapFlagNames = boost::assign::map_list_of\n     (string(\"LOW_S\"), (unsigned int)SCRIPT_VERIFY_LOW_S)\n     (string(\"SIGPUSHONLY\"), (unsigned int)SCRIPT_VERIFY_SIGPUSHONLY)\n     (string(\"MINIMALDATA\"), (unsigned int)SCRIPT_VERIFY_MINIMALDATA)\n-    (string(\"NULLDUMMY\"), (unsigned int)SCRIPT_VERIFY_NULLDUMMY);\n+    (string(\"NULLDUMMY\"), (unsigned int)SCRIPT_VERIFY_NULLDUMMY)\n+    (string(\"DISCOURAGE_UPGRADABLE_NOPS\"), (unsigned int)SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS);\n \n unsigned int ParseScriptFlags(string strFlags)\n {"
      }
    ]
  }
]