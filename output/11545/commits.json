[
  {
    "sha": "ffee424de3797a320372d929528197b343f51386",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmVlNDI0ZGUzNzk3YTMyMDM3MmQ5Mjk1MjgxOTdiMzQzZjUxMzg2",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2017-10-19T15:19:26Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2017-10-21T15:03:03Z"
      },
      "message": "Support CMV signing of 17~20 key template",
      "tree": {
        "sha": "708b55b0fad0a4a1bdf01e990ed2d6438d8380d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/708b55b0fad0a4a1bdf01e990ed2d6438d8380d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffee424de3797a320372d929528197b343f51386",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffee424de3797a320372d929528197b343f51386",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffee424de3797a320372d929528197b343f51386",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffee424de3797a320372d929528197b343f51386/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13f53b750dc09cb59192b2aa4ac8e499ee36e1ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13f53b750dc09cb59192b2aa4ac8e499ee36e1ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13f53b750dc09cb59192b2aa4ac8e499ee36e1ca"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 41,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a7c88a87d09e1558513886cc58977c9295a1c8c3",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffee424de3797a320372d929528197b343f51386/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffee424de3797a320372d929528197b343f51386/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=ffee424de3797a320372d929528197b343f51386",
        "patch": "@@ -159,13 +159,15 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n             else if (opcode2 == OP_SMALLINTEGER)\n             {   // Single-byte small integer pushed onto vSolutions\n                 if (opcode1 == OP_0 ||\n-                    (opcode1 >= OP_1 && opcode1 <= OP_16))\n-                {\n+                    (opcode1 >= OP_1 && opcode1 <= OP_16)) {\n                     char n = (char)CScript::DecodeOP_N(opcode1);\n                     vSolutionsRet.push_back(valtype(1, n));\n-                }\n-                else\n+                } else if (opcode1 == 0x01 && CScriptNum(vch1, true).getint() > 16 && CScriptNum(vch1, true).getint() <= 20) {\n+                    // Handle single-byte pushes followed by values from 17 up to 20 for 20-of-20 CMV\n+                    vSolutionsRet.push_back(vch1);\n+                } else {\n                     break;\n+                }\n             }\n             else if (opcode1 != opcode2 || vch1 != vch2)\n             {"
      },
      {
        "sha": "85aa8e55379849697806ea0231d792b5470202bc",
        "filename": "src/test/script_standard_tests.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 3,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffee424de3797a320372d929528197b343f51386/src/test/script_standard_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffee424de3797a320372d929528197b343f51386/src/test/script_standard_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_standard_tests.cpp?ref=ffee424de3797a320372d929528197b343f51386",
        "patch": "@@ -17,9 +17,10 @@ BOOST_FIXTURE_TEST_SUITE(script_standard_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\n {\n-    CKey keys[3];\n-    CPubKey pubkeys[3];\n-    for (int i = 0; i < 3; i++) {\n+    const static unsigned int NUM_KEYS = 20;\n+    CKey keys[NUM_KEYS];\n+    CPubKey pubkeys[NUM_KEYS];\n+    for (unsigned int i = 0; i < NUM_KEYS; i++) {\n         keys[i].MakeNewKey(true);\n         pubkeys[i] = keys[i].GetPubKey();\n     }\n@@ -82,6 +83,37 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\n     BOOST_CHECK(solutions[3] == ToByteVector(pubkeys[2]));\n     BOOST_CHECK(solutions[4] == std::vector<unsigned char>({3}));\n \n+    // 17-of-20 TX_MULTISIG, with 1-byte varint pushes for each number\n+    s.clear();\n+    s << CScriptNum(0x11);\n+    for (unsigned int i = 0; i < NUM_KEYS; i++) {\n+        s << ToByteVector(pubkeys[i]);\n+    }\n+    s << CScriptNum(0x14) << OP_CHECKMULTISIG;\n+\n+    BOOST_CHECK(Solver(s, whichType, solutions));\n+    BOOST_CHECK_EQUAL(whichType, TX_MULTISIG);\n+    BOOST_CHECK_EQUAL(solutions.size(), 22);\n+    BOOST_CHECK(solutions[0] == std::vector<unsigned char>({17}));\n+    for (unsigned int i = 1; i < NUM_KEYS-1; i++) {\n+         BOOST_CHECK(solutions[i] == ToByteVector(pubkeys[i-1]));\n+    }\n+    BOOST_CHECK(solutions[21] == std::vector<unsigned char>({20}));\n+\n+    // 16-of-20 TX_MULTISIG, with non-minimal encoding of the first number\n+    // which should fail\n+    s.clear();\n+    s << CScriptNum(0x10);\n+    for (unsigned int i = 0; i < NUM_KEYS; i++) {\n+        s << ToByteVector(pubkeys[i]);\n+    }\n+    s << CScriptNum(0x14) << OP_CHECKMULTISIG;\n+\n+    BOOST_CHECK(!Solver(s, whichType, solutions));\n+    BOOST_CHECK_EQUAL(whichType, TX_NONSTANDARD);\n+    BOOST_CHECK_EQUAL(solutions.size(), 0);\n+\n+\n     // TX_NULL_DATA\n     s.clear();\n     s << OP_RETURN <<"
      }
    ]
  }
]