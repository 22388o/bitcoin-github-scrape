Sjors,2018-09-10T08:27:22Z,tACK fae497d on macOS 10.13.6,https://github.com/bitcoin/bitcoin/pull/14179#issuecomment-419830069,419830069,
jnewbery,2018-09-10T15:46:46Z,"This seems a little brittle (based on the exact text output of the help text).\n\nCalling `getwalletinfo` and catching the returned error is an alternative way to do this.",https://github.com/bitcoin/bitcoin/pull/14179#discussion_r216373536,216373536,test/functional/test_framework/test_framework.py
jnewbery,2018-09-10T17:41:09Z,Can you add a call to `import_deterministic_coinbase_privkeys()` to `setup_nodes()`? Would that reduce the number of tests that you need to change in this commit?,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r216411788,216411788,test/functional/test_framework/test_framework.py
MarcoFalke,2018-09-10T20:54:10Z,"Good idea to call this by default... This is now always called before `run_test`, unless `self.setup_clean_chain` is set.",https://github.com/bitcoin/bitcoin/pull/14179#discussion_r216469264,216469264,test/functional/test_framework/test_framework.py
practicalswift,2018-09-11T07:37:06Z,"`codespell`:\n\n```\ntest/functional/test_framework/test_node.py:103: adress  ==> address\n```",https://github.com/bitcoin/bitcoin/pull/14179#discussion_r216571716,216571716,test/functional/test_framework/test_node.py
ryanofsky,2018-09-12T20:11:00Z,Maybe substitute `cb_reward` with just `coinbase` to be more consistent.,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217171931,217171931,test/functional/wallet_listreceivedby.py
ryanofsky,2018-09-12T20:22:41Z,"Previous code and new changes here are pretty inscrutable. Can you explain at a high level what is changing here and why? Can you perhaps add comments to the code to make it clearer, for example to explain why new code skips lines containing 1970?",https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217175471,217175471,test/functional/wallet_dump.py
ryanofsky,2018-09-12T20:27:32Z,Couldn't the test framework implementation of `import_deterministic_coinbase_privkeys` be smart enough to know whether nodes are running or not with `node.is_node_stopped` (or other state)? It seems unfortunate that an individual test would need to override the `import_deterministic_coinbase_privkeys` method to get such basic functionality.,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217176860,217176860,test/functional/feature_fee_estimation.py
ryanofsky,2018-09-12T20:30:27Z,Why doesn't the default framework `import_deterministic_coinbase_privkeys` call work in this test? There should be a comment here to explain why this override is needed if the default behavior can't be fixed.,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217177804,217177804,test/functional/interface_zmq.py
ryanofsky,2018-09-12T20:35:32Z,"Can you add comment explaining need for this override? The stop_nodes immediately followed by start_nodes below seems very odd. And given that this is a wallet test, maybe it would be simpler to just keep the old behavior and just use the wallet instead of generating to hardcoded addresses?",https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217179510,217179510,test/functional/wallet_import_rescan.py
MarcoFalke,2018-09-13T13:23:38Z,Added a comment,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217381100,217381100,test/functional/wallet_import_rescan.py
MarcoFalke,2018-09-13T13:23:47Z,Fixed typo,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217381160,217381160,test/functional/test_framework/test_node.py
MarcoFalke,2018-09-13T13:24:10Z,Removed the unneeded import_deterministic_coinbase_privkeys ,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217381319,217381319,test/functional/interface_zmq.py
MarcoFalke,2018-09-13T13:24:52Z,Added a comment. Note that it is easier to see that nothing changed with --ignore-all-space,https://github.com/bitcoin/bitcoin/pull/14179#discussion_r217381559,217381559,test/functional/wallet_dump.py
