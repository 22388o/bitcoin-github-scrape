[
  {
    "sha": "5e47b19e50cf5a8de77dfe363988522cfd212c06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTQ3YjE5ZTUwY2Y1YThkZTc3ZGZlMzYzOTg4NTIyY2ZkMjEyYzA2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-15T20:42:50Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-17T19:10:59Z"
      },
      "message": "tests: Add harness which fuzzes EvalScript and VerifyScript using a fuzzed signature checker",
      "tree": {
        "sha": "46f337a37a5c6e19162de21d5dd8f311e7dce06b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46f337a37a5c6e19162de21d5dd8f311e7dce06b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e47b19e50cf5a8de77dfe363988522cfd212c06",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e47b19e50cf5a8de77dfe363988522cfd212c06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e47b19e50cf5a8de77dfe363988522cfd212c06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e47b19e50cf5a8de77dfe363988522cfd212c06/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39497d1f3268d3aa75a41d07a5a5442a463265c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39497d1f3268d3aa75a41d07a5a5442a463265c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39497d1f3268d3aa75a41d07a5a5442a463265c6"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 75,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e92b02a9bcd5621c23a42b54a7e150ec7306ade7",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e47b19e50cf5a8de77dfe363988522cfd212c06/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e47b19e50cf5a8de77dfe363988522cfd212c06/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=5e47b19e50cf5a8de77dfe363988522cfd212c06",
        "patch": "@@ -91,6 +91,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/script_ops \\\n   test/fuzz/scriptnum_ops \\\n   test/fuzz/service_deserialize \\\n+  test/fuzz/signature_checker \\\n   test/fuzz/snapshotmetadata_deserialize \\\n   test/fuzz/spanparsing \\\n   test/fuzz/string \\\n@@ -809,6 +810,12 @@ test_fuzz_service_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_service_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_service_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_signature_checker_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_signature_checker_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_signature_checker_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_signature_checker_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_signature_checker_SOURCES = $(FUZZ_SUITE) test/fuzz/signature_checker.cpp\n+\n test_fuzz_snapshotmetadata_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSNAPSHOTMETADATA_DESERIALIZE=1\n test_fuzz_snapshotmetadata_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "312db27adca1fff2f9ad336c4bb8d013fe68d61e",
        "filename": "src/test/fuzz/signature_checker.cpp",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e47b19e50cf5a8de77dfe363988522cfd212c06/src/test/fuzz/signature_checker.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e47b19e50cf5a8de77dfe363988522cfd212c06/src/test/fuzz/signature_checker.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signature_checker.cpp?ref=5e47b19e50cf5a8de77dfe363988522cfd212c06",
        "patch": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <pubkey.h>\n+#include <script/interpreter.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <util/memory.h>\n+\n+#include <cstdint>\n+#include <limits>\n+#include <string>\n+#include <vector>\n+\n+void initialize()\n+{\n+    static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+}\n+\n+namespace {\n+class FuzzedSignatureChecker : public BaseSignatureChecker\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+public:\n+    FuzzedSignatureChecker(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider(fuzzed_data_provider)\n+    {\n+    }\n+\n+    virtual bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+    {\n+        return m_fuzzed_data_provider.ConsumeBool();\n+    }\n+\n+    virtual bool CheckLockTime(const CScriptNum& nLockTime) const\n+    {\n+        return m_fuzzed_data_provider.ConsumeBool();\n+    }\n+\n+    virtual bool CheckSequence(const CScriptNum& nSequence) const\n+    {\n+        return m_fuzzed_data_provider.ConsumeBool();\n+    }\n+\n+    virtual ~FuzzedSignatureChecker() {}\n+};\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const unsigned int flags = fuzzed_data_provider.ConsumeIntegral<unsigned int>();\n+    const SigVersion sig_version = fuzzed_data_provider.PickValueInArray({SigVersion::BASE, SigVersion::WITNESS_V0});\n+    const std::string script_string_1 = fuzzed_data_provider.ConsumeRandomLengthString(65536);\n+    const std::vector<uint8_t> script_bytes_1{script_string_1.begin(), script_string_1.end()};\n+    const std::string script_string_2 = fuzzed_data_provider.ConsumeRandomLengthString(65536);\n+    const std::vector<uint8_t> script_bytes_2{script_string_2.begin(), script_string_2.end()};\n+    std::vector<std::vector<unsigned char>> stack;\n+    (void)EvalScript(stack, {script_bytes_1.begin(), script_bytes_1.end()}, flags, FuzzedSignatureChecker(fuzzed_data_provider), sig_version, nullptr);\n+    if ((flags & SCRIPT_VERIFY_CLEANSTACK) != 0 && ((flags & SCRIPT_VERIFY_P2SH) == 0 || (flags & SCRIPT_VERIFY_WITNESS) == 0)) {\n+        return;\n+    }\n+    if ((flags & SCRIPT_VERIFY_WITNESS) != 0 && (flags & SCRIPT_VERIFY_P2SH) == 0) {\n+        return;\n+    }\n+    (void)VerifyScript({script_bytes_1.begin(), script_bytes_1.end()}, {script_bytes_2.begin(), script_bytes_2.end()}, nullptr, flags, FuzzedSignatureChecker(fuzzed_data_provider), nullptr);\n+}"
      }
    ]
  }
]