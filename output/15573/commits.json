[
  {
    "sha": "56f1d28d9b606397c0c746b57243a0f2b971ff8a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmYxZDI4ZDliNjA2Mzk3YzBjNzQ2YjU3MjQzYTBmMmI5NzFmZjhh",
    "commit": {
      "author": {
        "name": "Lenny Maiorani",
        "email": "lenny@colorado.edu",
        "date": "2019-03-10T17:37:05Z"
      },
      "committer": {
        "name": "Lenny Maiorani",
        "email": "lenny@colorado.edu",
        "date": "2019-03-11T03:45:31Z"
      },
      "message": "dead code: Remove dead option in HexStr conversion\n\nProblem:\n- Nothing uses the `fspaces` argument to `HexStr()` besides unit\n  tests. This argument results in extra complexity and a small\n  performance decrease within the function for branch evalulation.\n\nSolution:\n- Remove unused `fspaces` option.",
      "tree": {
        "sha": "73b5b16e21e232842f3cc38ebee281653c61535a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73b5b16e21e232842f3cc38ebee281653c61535a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56f1d28d9b606397c0c746b57243a0f2b971ff8a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56f1d28d9b606397c0c746b57243a0f2b971ff8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56f1d28d9b606397c0c746b57243a0f2b971ff8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56f1d28d9b606397c0c746b57243a0f2b971ff8a/comments",
    "author": {
      "login": "ldm5180",
      "id": 639247,
      "node_id": "MDQ6VXNlcjYzOTI0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/639247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldm5180",
      "html_url": "https://github.com/ldm5180",
      "followers_url": "https://api.github.com/users/ldm5180/followers",
      "following_url": "https://api.github.com/users/ldm5180/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldm5180/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldm5180/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldm5180/subscriptions",
      "organizations_url": "https://api.github.com/users/ldm5180/orgs",
      "repos_url": "https://api.github.com/users/ldm5180/repos",
      "events_url": "https://api.github.com/users/ldm5180/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldm5180/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ldm5180",
      "id": 639247,
      "node_id": "MDQ6VXNlcjYzOTI0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/639247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldm5180",
      "html_url": "https://github.com/ldm5180",
      "followers_url": "https://api.github.com/users/ldm5180/followers",
      "following_url": "https://api.github.com/users/ldm5180/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldm5180/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldm5180/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldm5180/subscriptions",
      "organizations_url": "https://api.github.com/users/ldm5180/orgs",
      "repos_url": "https://api.github.com/users/ldm5180/repos",
      "events_url": "https://api.github.com/users/ldm5180/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldm5180/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "257f750cd986641afe04316ed0b22b646b56b60b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/257f750cd986641afe04316ed0b22b646b56b60b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/257f750cd986641afe04316ed0b22b646b56b60b"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 5,
      "deletions": 47
    },
    "files": [
      {
        "sha": "e106bdeb653ee98b327d98e1f4d8f3eab5909ade",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56f1d28d9b606397c0c746b57243a0f2b971ff8a/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56f1d28d9b606397c0c746b57243a0f2b971ff8a/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=56f1d28d9b606397c0c746b57243a0f2b971ff8a",
        "patch": "@@ -77,80 +77,40 @@ BOOST_AUTO_TEST_CASE(util_HexStr)\n         HexStr(ParseHex_expected, ParseHex_expected + sizeof(ParseHex_expected)),\n         \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\");\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(ParseHex_expected, ParseHex_expected + 5, true),\n-        \"04 67 8a fd b0\");\n-\n     BOOST_CHECK_EQUAL(\n         HexStr(ParseHex_expected + sizeof(ParseHex_expected),\n                ParseHex_expected + sizeof(ParseHex_expected)),\n         \"\");\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(ParseHex_expected + sizeof(ParseHex_expected),\n-               ParseHex_expected + sizeof(ParseHex_expected), true),\n-        \"\");\n-\n     BOOST_CHECK_EQUAL(\n         HexStr(ParseHex_expected, ParseHex_expected),\n         \"\");\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(ParseHex_expected, ParseHex_expected, true),\n-        \"\");\n-\n     std::vector<unsigned char> ParseHex_vec(ParseHex_expected, ParseHex_expected + 5);\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(ParseHex_vec, true),\n-        \"04 67 8a fd b0\");\n-\n     BOOST_CHECK_EQUAL(\n         HexStr(ParseHex_vec.rbegin(), ParseHex_vec.rend()),\n         \"b0fd8a6704\"\n     );\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(ParseHex_vec.rbegin(), ParseHex_vec.rend(), true),\n-        \"b0 fd 8a 67 04\"\n-    );\n-\n     BOOST_CHECK_EQUAL(\n         HexStr(std::reverse_iterator<const uint8_t *>(ParseHex_expected),\n                std::reverse_iterator<const uint8_t *>(ParseHex_expected)),\n         \"\"\n     );\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(std::reverse_iterator<const uint8_t *>(ParseHex_expected),\n-               std::reverse_iterator<const uint8_t *>(ParseHex_expected), true),\n-        \"\"\n-    );\n-\n     BOOST_CHECK_EQUAL(\n         HexStr(std::reverse_iterator<const uint8_t *>(ParseHex_expected + 1),\n                std::reverse_iterator<const uint8_t *>(ParseHex_expected)),\n         \"04\"\n     );\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(std::reverse_iterator<const uint8_t *>(ParseHex_expected + 1),\n-               std::reverse_iterator<const uint8_t *>(ParseHex_expected), true),\n-        \"04\"\n-    );\n-\n     BOOST_CHECK_EQUAL(\n         HexStr(std::reverse_iterator<const uint8_t *>(ParseHex_expected + 5),\n                std::reverse_iterator<const uint8_t *>(ParseHex_expected)),\n         \"b0fd8a6704\"\n     );\n \n-    BOOST_CHECK_EQUAL(\n-        HexStr(std::reverse_iterator<const uint8_t *>(ParseHex_expected + 5),\n-               std::reverse_iterator<const uint8_t *>(ParseHex_expected), true),\n-        \"b0 fd 8a 67 04\"\n-    );\n-\n     BOOST_CHECK_EQUAL(\n         HexStr(std::reverse_iterator<const uint8_t *>(ParseHex_expected + 65),\n                std::reverse_iterator<const uint8_t *>(ParseHex_expected)),"
      },
      {
        "sha": "7c4364a082538ea72b44b712b75008f1991cd50b",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56f1d28d9b606397c0c746b57243a0f2b971ff8a/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56f1d28d9b606397c0c746b57243a0f2b971ff8a/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=56f1d28d9b606397c0c746b57243a0f2b971ff8a",
        "patch": "@@ -12,6 +12,7 @@\n #include <attributes.h>\n \n #include <cstdint>\n+#include <iterator>\n #include <string>\n #include <vector>\n \n@@ -121,28 +122,25 @@ NODISCARD bool ParseUInt64(const std::string& str, uint64_t *out);\n NODISCARD bool ParseDouble(const std::string& str, double *out);\n \n template<typename T>\n-std::string HexStr(const T itbegin, const T itend, bool fSpaces=false)\n+std::string HexStr(const T itbegin, const T itend)\n {\n     std::string rv;\n     static const char hexmap[16] = { '0', '1', '2', '3', '4', '5', '6', '7',\n                                      '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n-    rv.reserve((itend-itbegin)*3);\n+    rv.reserve(std::distance(itbegin, itend) * 2);\n     for(T it = itbegin; it < itend; ++it)\n     {\n         unsigned char val = (unsigned char)(*it);\n-        if(fSpaces && it != itbegin)\n-            rv.push_back(' ');\n         rv.push_back(hexmap[val>>4]);\n         rv.push_back(hexmap[val&15]);\n     }\n-\n     return rv;\n }\n \n template<typename T>\n-inline std::string HexStr(const T& vch, bool fSpaces=false)\n+inline std::string HexStr(const T& vch)\n {\n-    return HexStr(vch.begin(), vch.end(), fSpaces);\n+    return HexStr(vch.begin(), vch.end());\n }\n \n /**"
      }
    ]
  }
]