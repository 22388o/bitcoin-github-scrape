DrahtBot,2019-03-04T20:54:13Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15382](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15382.html) ([util] add runCommandParseJSON by Sjors)\n\",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-469417628,469417628,
practicalswift,2019-03-05T15:57:10Z,"Concept ACK\n\nThanks for doing this! Diversity in testing is good!",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-469734859,469734859,
ken2812221,2019-03-06T09:57:56Z,"Concept ACK.\nNote that appveyor already have pre-built [QT libraries](https://www.appveyor.com/docs/windows-images-software/#qt)\n\nAnd the qt and vcpkg path could be arguments in msvc-autogen.py to generate the project file, so that the users could build qt on their own computer. like:\n```\npython build_msvc\msvc-autogen.py --qt=C:\Qt\5.9.7\msvc2017_64 --vcpkg=C:\Tools\vcpkg\n```",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-470044468,470044468,
sipsorcery,2019-03-06T10:24:49Z,"> Note that appveyor already have pre-built [QT libraries](https://www.appveyor.com/docs/windows-images-software/#qt)\n\nI did spot that but I'm pretty sure the appveyor Qt builds are dynamic linking and therefore incompatible with the static linking builds for all the other bitcoin core libraries.\n \n> And the qt and vcpkg path could be arguments in msvc-autogen.py to generate the project fi",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-470053649,470053649,
sipsorcery,2019-03-07T20:58:55Z,"There are lots of warnings for the msvc build of libbitcoin_qt. A lot are generated from the Qt code templates however there is one that looks a bit nasty:\n\n````\nc:\projects\bitcoin-72c17\src\qt\walletmodel.cpp(490): warning C4717: 'WalletModel::UnlockContext::CopyFrom': recursive on all control paths, function will cause runtime stack overflow [C:\projects\bitcoin-72c17\build_msvc\libbitcoi",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-470691649,470691649,
laanwj,2019-03-08T14:33:31Z,"Concept ACK, I did get bitcoin-qt to build once on MSVC in 2012 or so so, and know how much trouble it is I feel your pain.",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-470948391,470948391,
sipsorcery,2019-03-10T21:58:23Z,PR no longer work in progress and ready for review.,https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-471358147,471358147,
sipsorcery,2019-03-11T19:44:36Z,ping @ken2812221.,https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-471693610,471693610,
practicalswift,2019-03-12T21:11:03Z,Nit: A few of the files changed/added text files seem to be missing the expected `\n` as the last byte of each file.,https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-472182670,472182670,
sipsorcery,2019-03-13T09:03:57Z,"@ken2812221 @practicalswift thx for the reviews, recommendations have been acted on.",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-472336657,472336657,
Sjors,2019-03-14T20:21:37Z,"Concept ACK, will test later.",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-473045314,473045314,
jonasschnelli,2019-03-15T06:35:04Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-473175038,473175038,
practicalswift,2019-03-19T13:19:21Z,"Has this snippet been tested?\n\n```\n        UnlockContext& operator=(const UnlockContext& rhs) {\n            // Transfer context; old object no longer relocks wallet\n            *this = rhs;\n            rhs.relock = false;\n            return *this;\n        }\n```\n\nCould it result in infinite recursion?",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-474363657,474363657,
sipa,2019-05-10T00:44:00Z,"Concept ACK, assuming this causes Appveyor to run the Qt build config.",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-491114805,491114805,
sipsorcery,2019-06-29T08:07:34Z,Ping @NicolasDorier. Given you're working on the msbuild set up at the moment a review on this PR would be appreciated.,https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-506938103,506938103,
NicolasDorier,2019-07-01T08:03:15Z,"Btw, would it be a good idea to use QT's precompiled dynamic library instead of the static lib?\nWe are using the msvc build mainly for debugging stuff so I don't think it would matter too much and prevent a bunch of headache.",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-507160234,507160234,
sipsorcery,2019-07-01T08:15:04Z,"@NicolasDorier nooooo :(. You don't want to know how long I've spent getting the Qt build working.\n\nPutting aside the lost chunk of my life it would be a big change switching the build to dynamic linking. All the Bitcoin Core libraries would have to be built as dll's and there are then bound to be missing exports that will need to be added which would mean code changes.\n\nI'd highly recomme",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-507163992,507163992,
NicolasDorier,2019-07-03T12:14:45Z,"ok ok ! nevermind ;)\n\nSo yes, my other points hold though.",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-508067657,508067657,
sipsorcery,2019-07-03T20:21:25Z,"@NicolasDorier I've extracted the common Qt settings into `common.qt.init.vcxproj`. It didn't make sense to put them into a `.user` file which should be reserved for config settings users want on their local machine to override the repo settings.\n\nI think that addresses all the outstanding concerns you raised.",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-508241459,508241459,
laanwj,2019-07-31T08:25:13Z,"Looks like this is ready for a final round of ACKs (I cannot contribute here, I know nothing about msvc script and have no windows machines)",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-516750188,516750188,
NicolasDorier,2019-08-01T07:43:27Z,Will try it before final ACK (using the pre compiled binary),https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-517164034,517164034,
MarcoFalke,2019-08-02T19:34:24Z,re-(unsigned Concept ACK) 37df503062ca60f4a8dd7ebf2c9751615d9b6a7c,https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-517819763,517819763,
sipsorcery,2019-08-17T10:58:01Z,"For anyone interested in testing this PR here are the bare minimum steps. First 6 are to download the required Qt5.9.7 static libraries. You can build Qt yourself (see the readme file in this PR) but that will a LOT of effort, \n\n````\nwget https://github.com/sipsorcery/qt_win_binary/releases/download/v1.0/sha256sum.asc\nwget https://github.com/sipsorcery/qt_win_binary/releases/download/v1.0/",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-522227308,522227308,
fanquake,2019-08-19T12:07:07Z,Thanks @sipsorcery. I'll be testing this again tomorrow.,https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-522541271,522541271,
fanquake,2019-09-08T08:56:48Z,"@sipsorcery Looks like the windows build files might need some updates for [recent changes](https://github.com/bitcoin/bitcoin/pull/15450):\n```bash\nBuild FAILED.\n       ""C:\projects\bitcoin\build_msvc\bitcoin.sln"" (default target) (1) ->\n       ""C:\projects\bitcoin\build_msvc\bitcoin-qt\bitcoin-qt.vcxproj"" (default target) (22) ->\n       (Link target) -> \n         libbitcoin_qt.lib(wal",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-529183723,529183723,
sipsorcery,2019-09-08T09:03:43Z,"@fanquake yep I'm on it.\n\n",https://github.com/bitcoin/bitcoin/pull/15529#issuecomment-529184263,529184263,
fanquake,2019-03-04T23:13:09Z,"Trailing whitespace here, and a few other places (causing Travis failure).",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r262284993,262284993,.appveyor.yml
fanquake,2019-03-04T23:14:19Z,Can we check a `shasum256` after downloading.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r262285311,262285311,.appveyor.yml
ken2812221,2019-03-12T02:03:42Z,This seems like an unintentional change.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264496430,264496430,src/compat/byteswap.h
ken2812221,2019-03-12T02:03:55Z,This seems like an unintentional change.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264496461,264496461,src/compat/byteswap.h
ken2812221,2019-03-12T14:01:12Z,"I would prefer to use absolute path here because people may double click the script on their computer instead of running it in `cmd`, maybe you could add `MSVC_DIR` right after `SOURCE_DIR`\n```python3\nMSVC_DIR =  os.path.abspath(os.path.dirname(__file__))\n```\nand use\n```python3\nwith open(os.path.join(MSVC_DIR, 'Directory.Build.props'), 'r', encoding='utf-8') as rfile:\n```\n",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264692837,264692837,build_msvc/msvc-autogen.py
ken2812221,2019-03-12T14:05:27Z,"This would change the existing file that tracked by git. I think you could use `@QtBaseDir@` or something else that easy to locate the content and save the template to `Directory.Build.props.in`. Write to `Directory.Build.props` when we run the script. Then, the code could be two simple `replace()` function.",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264695014,264695014,build_msvc/msvc-autogen.py
ken2812221,2019-03-12T14:08:44Z,"I would prefer to use shutil to copy the files. Also, use absolute file path instead.",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264696662,264696662,build_msvc/msvc-autogen.py
ken2812221,2019-03-12T14:12:49Z,nit: and non-MSVC,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264698830,264698830,src/compat/byteswap.h
ken2812221,2019-03-12T14:14:16Z,Comment code should be removed.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264699569,264699569,src/qt/walletmodel.h
ken2812221,2019-03-12T14:14:24Z,Comment code should be removed.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264699664,264699664,src/qt/walletmodel.cpp
ken2812221,2019-03-12T14:14:32Z,Comment code should be removed.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264699728,264699728,src/qt/walletmodel.h
ken2812221,2019-03-12T14:26:42Z,The WholeProgramOptimization is to make sure that the generated cache is not too big to reduce cache save/load time. I remember that the cache could be over 1GB without this setting so that we can't store it with free appveyor plan.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264706218,264706218,.appveyor.yml
ken2812221,2019-03-12T14:28:38Z,If you change the python code not to use regular expression. It could be single slash here.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264707339,264707339,.appveyor.yml
ken2812221,2019-03-12T14:42:01Z,This seems like only changing tab size from 4 to 5?,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264714274,264714274,build_msvc/bitcoin.sln
ken2812221,2019-03-12T14:50:29Z,"```suggestion\n        uint64_t check = (uint64_t)1 << i;\n```\nfollow #14151",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264718678,264718678,src/qt/guiutil.cpp
sipsorcery,2019-03-12T19:56:21Z,The WholeProgramOptimization is off by default and I removed the cases where it was being set in individual project files.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264857538,264857538,.appveyor.yml
sipsorcery,2019-03-12T19:58:57Z,Not sure what you mean here?,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264858518,264858518,src/compat/byteswap.h
sipsorcery,2019-03-12T20:02:13Z,"Good point, didn't think of that.",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r264859731,264859731,build_msvc/msvc-autogen.py
practicalswift,2019-03-19T13:14:25Z,Check if it is defined instead?,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r266878279,266878279,src/compat/byteswap.h
practicalswift,2019-03-19T13:23:16Z,Nit: Could run `yapf` on the diff to get the proper formatting? See @MarcoFalke's https://github.com/MarcoFalke/yapf-diff,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r266882273,266882273,build_msvc/msvc-autogen.py
NicolasDorier,2019-06-29T08:51:39Z,is this meant to work if you ran the vcpkg above?,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r298793230,298793230,build_msvc/README.md
NicolasDorier,2019-06-29T08:56:24Z,why are you duplicating those lines? If a property should be set for any configuration then just wrap it in a `ItemDefinitionGroup` which does not have a `Condition` clause.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r298793330,298793330,build_msvc/bitcoin-qt/bitcoin-qt.vcxproj
NicolasDorier,2019-06-29T08:56:55Z,normal that there is two guid?,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r298793346,298793346,build_msvc/bitcoin.sln
NicolasDorier,2019-06-29T08:58:07Z,"`<QtBaseDir Condition=""'$(QtBaseDir)'==''"">` this allow somebody to put Qt where he wants (and specify it in the `common.init.vcxproj.user` of https://github.com/bitcoin/bitcoin/pull/16309)\n\nI think that the default value should be empty, even if it crashes.",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r298793362,298793362,build_msvc/common.init.vcxproj
sipsorcery,2019-06-29T09:01:15Z,Not necessarily. Building Qt is an exercise in perseverance. I typically find the build fails over 10 times before eventually working. This is not very comforting for repeatable and/or reliable builds and a superior alternative would be if the official Qt binaries contained static libraries. My compromise is to provide my own successful build as a download.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r298793431,298793431,build_msvc/README.md
NicolasDorier,2019-06-30T01:40:50Z,This should be in the `bitcoin-qt.vcxproj`,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r298815490,298815490,build_msvc/common.init.vcxproj
NicolasDorier,2019-06-30T01:41:45Z,"If you remove what is repeated in the `bitcoin-qt` project, you don't have to declare anything more than `QtBaseDir`",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r298815498,298815498,build_msvc/common.init.vcxproj
practicalswift,2019-08-01T08:33:36Z,Nit: No newline at end of file.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r309581928,309581928,build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj
practicalswift,2019-08-01T08:34:27Z,Nit: No newline at end of file.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r309582287,309582287,build_msvc/.gitignore
practicalswift,2019-08-01T08:34:39Z,Nit: No newline at end of file.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r309582371,309582371,build_msvc/bitcoin-qt/bitcoin-qt.vcxproj
MarcoFalke,2019-08-02T17:01:18Z,What are the comments in this file?,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310218366,310218366,.appveyor.yml
sipsorcery,2019-08-02T18:21:53Z,The comments are there for devs who would like to get artifacts from the appveyor build. The official decision was not to generate binaries from the Bitcoin Core build since it's not trusted. But it's still useful to provide the commented steps for devs who make a deliberate decision to enable artifacts.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310246423,310246423,.appveyor.yml
sipsorcery,2019-08-02T18:22:32Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310246652,310246652,build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj
sipsorcery,2019-08-02T18:22:40Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310246692,310246692,build_msvc/.gitignore
sipsorcery,2019-08-02T18:22:49Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310246742,310246742,build_msvc/bitcoin-qt/bitcoin-qt.vcxproj
MarcoFalke,2019-08-02T19:08:30Z,"Ah, so you could keep this 7z command uncommented, but leave the artifacts below commented?\n\nno strong opinion, though",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310262289,310262289,.appveyor.yml
MarcoFalke,2019-08-02T19:08:39Z,Why is this needed?,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310262351,310262351,.appveyor.yml
MarcoFalke,2019-08-02T19:09:26Z,"Please see:\n\n*  [MSVC] Copy build output to src/ automatically after build #16308 ",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310262566,310262566,.appveyor.yml
sipsorcery,2019-08-02T19:20:21Z,Good spot. No manual step required to move the binaries for testing since Nicolas added the equivalent task to the project file.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310266009,310266009,.appveyor.yml
fanquake,2019-08-04T01:13:32Z,Should this use the new syntax from #16483? `py -3 msvc-autogen.py`,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310366941,310366941,build_msvc/README.md
fanquake,2019-08-04T01:17:54Z,"```suggestion\nThe [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are:\n```",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310367010,310367010,build_msvc/README.md
fanquake,2019-08-04T01:28:44Z,"This is a bit of an ugly blob to have in the README.md. I assume it will remain fairly static?\n\nYou should be able to swap `-qt-libjpeg` for `-no-libjpeg` after #16441.",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310367143,310367143,build_msvc/README.md
fanquake,2019-08-04T01:35:38Z,"```suggestion\n     PS >py -3 msvc-autogen.py\n```",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r310367267,310367267,build_msvc/README.md
sipsorcery,2019-08-10T17:10:39Z,I agree it's very ugly. It could be left out however if another dev wants to build Qt on Windows to link with Bitcoin Core it's a very useful starting point. I've adjusted the libjpeg option in advance.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r312709687,312709687,build_msvc/README.md
sipsorcery,2019-08-10T17:10:53Z,Yes it should. Fixed.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r312709691,312709691,build_msvc/README.md
fanquake,2019-09-08T04:15:18Z,`double-conversion` is missing here,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r321991100,321991100,build_msvc/README.md
sipsorcery,2019-09-08T08:07:48Z,Thanks for reviewing! The `secp256k1` and `leveldb` packages aren't required anymore either since they're now included as source projects. I'll fix it up.,https://github.com/bitcoin/bitcoin/pull/15529#discussion_r321996565,321996565,build_msvc/README.md
hebasto,2021-09-08T09:22:48Z,"@NicolasDorier \n\nSee https://github.com/bitcoin/bitcoin/pull/22890/commits/5e42f2ad26d35950405480f3eea2ed73fdfba841 in #22890.",https://github.com/bitcoin/bitcoin/pull/15529#discussion_r704227978,704227978,build_msvc/common.init.vcxproj
