achow101,2017-08-31T13:52:47Z,"I don't know what is causing the travis failures.\n\n> Should it be possible to abort rescans caused by the RPC calls?\n\nYes. There is an `abortrescan` RPC call that lets you abort a rescan. But it is not accessible from the GUI.",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-326302001,326302001,
jonasschnelli,2017-09-06T23:59:27Z,"Tested a bit and there is a concurrency issue (maybe not related to this code but since you finally can test multiple rescans during the same runtime this PR may reveal the issue):\n\nSometimes the progress window does not show up (happened to me only if I canceled a rescan before) and the GUI is fully in locked state (due to the rescan).\nIn that case, the rescan is happening and the GUI is lo",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-327644157,327644157,
jonasschnelli,2017-09-07T17:17:42Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-327865918,327865918,
promag,2017-10-29T20:53:33Z,utACK 4657e40. Have you thought adding tests for the new RPC errors? (might be impossible?),https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-340293666,340293666,
jonasschnelli,2017-10-29T21:53:04Z,"Reminder: this PR currently causes a deadlock (at least on OSX):\nIMO it would require https://github.com/bitcoin/bitcoin/pull/11281 to work flawless.",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-340303786,340303786,
ryanofsky,2017-10-31T17:45:38Z,"@jonasschnelli, I don't see how this could be causing any deadlock that wasn't occurring before. The cancel callback isn't acquiring any locks, just updating an atomic\<bool>. Are you sure there is a problem in the current version of this PR?",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-340845143,340845143,
achow101,2017-10-31T18:08:54Z,@ryanofsky I think it is more that a deadlock currently exists in the rescanning code which this PR makes more obvious and easier to hit.,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-340852539,340852539,
ryanofsky,2017-10-31T18:43:11Z,"> @ryanofsky I think it is more that a deadlock currently exists in the rescanning code which this PR makes more obvious and easier to hit.\n\nI know that's the claim, but I don't understand what the deadlock is. What does the rescan code have to do with transactiontablemodel and why would shorter aborted scans cause more UI problems than longer full scans?",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-340865856,340865856,
promag,2017-12-05T07:48:37Z,Please see an alternative concept in #11826.,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-349223222,349223222,
achow101,2018-02-01T21:17:06Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-362404409,362404409,
achow101,2018-02-20T02:46:56Z,Review/Merge beg,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-366852167,366852167,
promag,2018-02-26T16:35:14Z,@achow101 needs rebase.,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-368563137,368563137,
achow101,2018-02-26T16:39:47Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-368564667,368564667,
ryanofsky,2018-03-12T21:44:11Z,utACK 7e53d957709c0bac88cabfc0f9370b33888504db. No changes since last review in Qt code. Just conflict resolution in other parts of the code.,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-372473110,372473110,
achow101,2018-03-14T18:10:13Z,Review beg for reviews from people other than @ryanofsky ,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-373121775,373121775,
MarcoFalke,2018-03-18T13:15:15Z,"utACK, but calling `rescanblockchain` in the GUI console no longer gives me the tiny ""Rescanning ..."" pop up, which prevents me from testing. Any idea?\n\nPop up on master:\n\n<img src=""https://user-images.githubusercontent.com/6399679/37566215-9299e7c8-2a8c-11e8-819f-bb1a7edc5403.png"" alt=""screenshot from 2018-03-18 09-10-58"" width=90pt style=""max-width:100%;"">\n",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-373998047,373998047,
achow101,2018-03-18T19:29:22Z,"That's strange. I'm seeing that now too, but I don't know why.",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-374037420,374037420,
achow101,2018-03-18T20:24:26Z,"Ok, I fixed that problem and also had to rebase.",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-374042066,374042066,
MarcoFalke,2018-03-18T22:57:10Z,"utACK c18cfb8fe0e5de02471011bef0e37f0a6d5920e6, but needs feedback addressed.",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-374062286,374062286,
MarcoFalke,2018-03-18T23:52:47Z,re-utACK 1de7f88f4cad0f59a6684e179177707c8efd7b3a (only changes were to address the feedback),https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-374068121,374068121,
MarcoFalke,2018-03-21T13:19:48Z,@jonasschnelli You tested this a bit last year. Mind to re-test?,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-374933403,374933403,
achow101,2018-03-28T17:59:07Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-376979077,376979077,
TheBlueMatt,2018-03-28T18:26:52Z,"This effectively reverts #10770. Please, no. If you want a specific cancel function, please split out showprogress into an init version and a rescan version, passing up std::functions from everywhere (and across the uiInterface interface, which people are still talking about making a process boundary) is really, really, really gross.",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-376988242,376988242,
achow101,2018-03-28T18:35:36Z,@TheBlueMatt I don't see any other way to implement such cancellations in the GUI. Perhaps you could suggest something?,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-376991136,376991136,
TheBlueMatt,2018-03-28T18:53:31Z,"We cancel just fine during init already (using StartShutdown()). If we want to *also* support cancelling via a rescan progress dialog, the rescan progress dialog should know how to make that happen. I still really don't think we need a generic interface here - we only use the dialog for one thing (and I'm not aware of any other cancelable proposed things to show there) - and making it common betwe",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-376996817,376996817,
ryanofsky,2018-03-28T19:09:08Z,"@TheBlueMatt, your objection seems the same as the ""I'm not very fond of callbacks"" criticism which came up earlier: https://github.com/bitcoin/bitcoin/pull/11200#pullrequestreview-59957173. I didn't think this was a big deal (or really a very substantive criticism), but it would be pretty easy to address by replacing the callback with a wallet `AbortRescans()` function that Qt code could call mor",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-377001650,377001650,
TheBlueMatt,2018-03-28T19:13:12Z,"Its a bit more broad, I'm a bit more than ""not fond of"" passing callbacks from random internal places all the way to GUI, plus we started with that and deliberately got rid of them. Adding them *back* would need more justification than ""well, this is a way that it can be done"".",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-377002909,377002909,
ryanofsky,2018-03-28T19:29:43Z,"I think supporting cancelling rescans is a worthwhile feature, and there are lots of ways it can be implemented. Which way to choose is mostly a question of how much much existing code you want to rewrite.\n\nHaving qt code just call an `AbortRescan` function when the cancel button is pressed is probably the simplest possible approach. Having the qt code call a generic `cancel` callback is a lit",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-377007507,377007507,
achow101,2018-03-31T20:06:48Z,"I changed the implementation to completely remove the callback. The `showProgress` dialog that is used for rescans just calls `AbortRescan` directly when cancel is clicked. This should work since the dialog is used only for rescanning.\n\nOP and title also updated.\n\nThe original branch with callbacks can be found here: https://github.com/achow101/bitcoin/tree/gui-rescan-abort-w-callback",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-377719672,377719672,
achow101,2018-04-05T21:34:17Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-379083858,379083858,
MarcoFalke,2018-04-08T21:57:31Z,Needs trivial rebase to accommodate a file rename.,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-379586077,379586077,
achow101,2018-04-08T22:08:52Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-379586786,379586786,
promag,2018-04-08T22:58:33Z,"> Changing the progress dialog to be aware of the differences between init and rescan would be another way to approach this, and probably a good idea, but just a larger change.\n\nI agree with @ryanofsky here. I'll try to push #11826 forward. Not that this shouldn't go forward.",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-379589699,379589699,
jonasschnelli,2018-04-09T16:37:09Z,"Could finally test this.\nI think it is an important feature because the way how users currently abort rescan is by force quitting the application (which is really not what we want).\n\nTested ACK bc2003cdf7102e03710dbc19e9c397b92e124fb4.\nI'd like to see @promag's nits addresses (lowercase methodname in QT, interface call via class member).",https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-379815025,379815025,
achow101,2018-04-12T21:00:51Z,Squashed the squashme. Is this ready for merging?,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-380942973,380942973,
MarcoFalke,2018-04-12T21:47:14Z,utACK ae1d2b0308d7fe9df7fc18699c69e9587e6154bd. Going to test this later...,https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-380954390,380954390,
meshcollider,2017-08-31T06:39:33Z,"Does this ""Cancel"" need a translation? ",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136255908,136255908,src/qt/bitcoingui.cpp
promag,2017-08-31T08:13:47Z,`} else {`,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136272060,136272060,src/qt/bitcoingui.cpp
promag,2017-08-31T08:15:17Z,`&` are next to the type. Same for remaining changes.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136272339,136272339,src/qt/bitcoingui.cpp
ryanofsky,2017-08-31T15:26:02Z,"In commit ""Add cancel function reference to ShowProgress""\n\nA typedef or using declaration for `std::function<void(void)>` might make the changes throughout this commit be more readable, and also make this code less fragile because SIGNAL and SLOT macros rely on string comparison.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136367653,136367653,src/qt/bitcoingui.cpp
ryanofsky,2017-08-31T16:05:28Z,"In commit ""Add cancel function reference to ShowProgress""\n\nNo need to write `std::function<void(void)>()` here and 12 other places. You can just pass {} or nullptr.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136378289,136378289,src/txdb.cpp
ryanofsky,2017-08-31T16:07:19Z,"In commit ""Add cancel button to rescan progress dialog""\n\nMaybe assert(cancel)",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136378687,136378687,src/qt/bitcoingui.cpp
ryanofsky,2017-08-31T16:53:27Z,"In commit ""Give an error when rescan is aborted by the user""\n\ns/TIMESTAMP_MIN/nTimeBegin/ here to fix test failures",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136389690,136389690,src/wallet/rpcdump.cpp
achow101,2017-08-31T17:35:11Z,"Oh, I didn't realize that that would work. Done.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136399488,136399488,src/txdb.cpp
achow101,2017-08-31T17:35:23Z,Done,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136399531,136399531,src/qt/bitcoingui.cpp
achow101,2017-08-31T17:35:26Z,Done,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136399546,136399546,src/qt/bitcoingui.cpp
achow101,2017-08-31T17:35:49Z,Done,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136399654,136399654,src/wallet/rpcdump.cpp
achow101,2017-08-31T17:37:57Z,"Yes, it does. Done",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136400147,136400147,src/qt/bitcoingui.cpp
jonasschnelli,2017-09-03T17:10:26Z,nit: use `std::bind` (and below),https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136721474,136721474,src/wallet/wallet.cpp
jonasschnelli,2017-09-03T17:12:14Z,use `nullptr` as default parameter for `cancel` to avoid adding `nullptr` to all non-callback `ShowProgress` calls?,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r136721626,136721626,src/ui_interface.h
achow101,2017-09-05T17:11:26Z,"I couldn't set a default parameter in the signal, so I'm not sure it is possible to do that. Or I'm just doing something wrong.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r137057150,137057150,src/ui_interface.h
achow101,2017-09-05T19:51:43Z,Done,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r137096304,137096304,src/wallet/wallet.cpp
ryanofsky,2017-10-12T18:47:13Z,Could just write `void()` instead of `void(void)` everywhere,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r144377812,144377812,src/qt/bitcoingui.cpp
ryanofsky,2017-10-12T19:01:21Z,"You added both `resume_possible` and `cancel` arguments to the ShowProgress signal in wallet.h so this should be `_3, _4`, instead of `false, _4`.\n\n(Another alternative if you want to ensure wallet resume_possible value is always false, is to not add resume_possible in wallet.h, and then change this to `false, _3`. But adding the argument and then silently ignoring like this does now isn't goo",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r144381320,144381320,src/qt/splashscreen.cpp
achow101,2017-10-31T18:21:13Z,Done,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r148084806,148084806,src/qt/bitcoingui.cpp
achow101,2017-10-31T18:21:18Z,Done,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r148084822,148084822,src/qt/splashscreen.cpp
achow101,2017-10-31T18:40:12Z,"Actually changing this seems to be causing a segfault, so I will leave it as is.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r148090207,148090207,src/qt/splashscreen.cpp
luke-jr,2018-03-06T19:54:53Z,Would be nice to have nullptr as a default for cancel.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r172640071,172640071,src/qt/bitcoingui.h
luke-jr,2018-03-06T19:57:15Z,"This is ugly, since RescanFromTime changes without a signature change. Better to have it throw an exception to be caught from callers, when cancelled.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r172640708,172640708,src/wallet/rpcdump.cpp
achow101,2018-03-06T20:31:51Z,I don't quite understand what you mean.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r172650156,172650156,src/wallet/rpcdump.cpp
achow101,2018-03-06T20:37:15Z,This was suggested before and I was not able to get it to work.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r172651635,172651635,src/qt/bitcoingui.h
sipa,2018-03-14T18:19:26Z,@luke-jr In what way does `RescanFromTime` change?,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r174561904,174561904,src/wallet/rpcdump.cpp
MarcoFalke,2018-03-18T21:20:44Z,"The following diff appears to be working for me. Could you help me find the steps to reproduce the segfault? Otherwise, I think this is a sensible suggestion.\n\n```diff\n--- a/src/qt/splashscreen.cpp\n+++ b/src/qt/splashscreen.cpp\n@@ -181,7 +181,7 @@ static void ShowProgress(SplashScreen *splash, const std::string &title, int nPr\n #ifdef ENABLE_WALLET\n void SplashScreen::ConnectWallet(C",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175304382,175304382,src/qt/splashscreen.cpp
MarcoFalke,2018-03-18T22:53:31Z,`RescanFromTime` uses `ScanForWalletTransactions` internally. And the interface of `ScanForWalletTransactions` is changed in this pull request.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175307876,175307876,src/wallet/rpcdump.cpp
MarcoFalke,2018-03-18T22:54:49Z,Please revert this change. This breaks other rpcs that use `ScanForWalletTransactions` directly,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175307915,175307915,src/wallet/wallet.cpp
MarcoFalke,2018-03-18T22:56:41Z,"Why is this check within the scope of the `(scanned_time > TIMESTAMP_MIN)` check? Wouldn't the following make more sense:\n\n```cpp\nif (pwallet->IsAbortingRescan()) throw JSONRPCError(RPC_MISC_ERROR, ""Rescan aborted by user."");\nif (scanned_time > TIMESTAMP_MIN) throw JSONRPCError(RPC_WALLET_ERROR, ""Rescan was unable to fully rescan the blockchain. Some transactions may be missing."");\n",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175307978,175307978,src/wallet/rpcdump.cpp
achow101,2018-03-18T23:38:07Z,Done,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175309652,175309652,src/wallet/wallet.cpp
achow101,2018-03-18T23:38:13Z,"Yes, done.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175309654,175309654,src/wallet/rpcdump.cpp
achow101,2018-03-18T23:38:25Z,That change was reverted.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175309663,175309663,src/wallet/rpcdump.cpp
achow101,2018-03-18T23:42:52Z,"Hmm, that diff works for me. I don't remember what I did that caused a segfault. Added this change.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r175309848,175309848,src/qt/splashscreen.cpp
promag,2018-04-08T22:50:34Z,"This code is repeated 4 times, maybe it's worth moving it to a function?",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r179964617,179964617,src/wallet/rpcdump.cpp
promag,2018-04-08T22:51:53Z,"Nit, period.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r179964637,179964637,src/interfaces/wallet.h
promag,2018-04-08T22:54:04Z,"Nit, `m_wallet->AbortRescan()`?",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r179964687,179964687,src/qt/walletmodel.cpp
promag,2018-04-08T22:54:31Z,"Nit, `void abortRescan() const`.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r179964697,179964697,src/qt/walletmodel.h
ryanofsky,2018-04-09T16:31:30Z,Would suggest renaming this method `abortRescan` and moving it above `backupWallet` (both here and in `wallet.cpp`). These interfaces are organized with regular methods on top and callback methods below. Also roughly with whole-wallet operations above operations on individual addresses and transactions.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180154579,180154579,src/interfaces/wallet.h
ryanofsky,2018-04-09T16:39:30Z,"In commit ""Add cancel button to rescan progress dialog""\n\nWould suggest dropping this method and just calling model.wallet().abortRescan() directly. I don't think there's a benefit to wrapping individual `Wallet` calls inside `WalletModel` methods unless they're doing extra work like synchronization or caching.",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180156831,180156831,src/qt/walletmodel.cpp
ryanofsky,2018-04-09T16:43:48Z,"In commit ""Give an error when rescan is aborted by the user""\n\n> This code is repeated 4 times, maybe it's worth moving it to a function?\n\nCould be nice, though to be honest a lot of other code is duplicated between the import* RPCs too. So effort might be better spent deduping larger chunks or deprecating older RPCs in favor of importmulti.\n\n",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180158040,180158040,src/wallet/rpcdump.cpp
achow101,2018-04-09T17:09:56Z,I think that should be part of a separate refactor for deduplicating all of the import* RPCs.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180165426,180165426,src/wallet/rpcdump.cpp
achow101,2018-04-09T17:16:24Z,Done (moved and added period).,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180167170,180167170,src/interfaces/wallet.h
achow101,2018-04-09T17:16:43Z,Removed and called directly from walletview,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180167250,180167250,src/qt/walletmodel.cpp
achow101,2018-04-09T17:16:50Z,Removed,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180167278,180167278,src/qt/walletmodel.h
ryanofsky,2018-04-09T17:41:31Z,"In commit ""Add cancel button to rescan progress dialog""\n\nThese changes from wallet to global `ShowProgress` calls seem unrelated. Are they intentional? It might make sense to change these if removing the wallet `ShowProgress` signal, but since that is still used in `CWallet::ScanForWalletTransactions`, this change just makes these calls inconsistent.\n\nIf this change is necessary it would b",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180174269,180174269,src/wallet/rpcdump.cpp
achow101,2018-04-09T17:56:38Z,"Because `CWallet::ShowProgress` has a cancel button now which is directly tied to `AbortRescan` (because it isn't used for anything except showing rescan progress), I needed a different progress bar which does not have a cancel button. This change makes that `ShowProgress` use `BitcoinGUI::ShowProgress` (which is tied toe `uiInterface`)which does not have a cancel button (and is also not used anyw",https://github.com/bitcoin/bitcoin/pull/11200#discussion_r180178630,180178630,src/wallet/rpcdump.cpp
promag,2018-04-14T08:58:49Z,Sure.,https://github.com/bitcoin/bitcoin/pull/11200#discussion_r181546647,181546647,src/wallet/rpcdump.cpp
