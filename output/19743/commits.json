[
  {
    "sha": "9f77b821764dcaebc97a5ae76c3052936418308d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Zjc3YjgyMTc2NGRjYWViYzk3YTVhZTc2YzMwNTI5MzY0MTgzMDhk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-08-17T05:36:26Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-08-18T06:30:36Z"
      },
      "message": "doc: release notes for -maxapsfee",
      "tree": {
        "sha": "22601c14631f2057ef686b1b1461255be0c8a981",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22601c14631f2057ef686b1b1461255be0c8a981"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f77b821764dcaebc97a5ae76c3052936418308d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl87dYwACgkQV692LbM1\nMyLqjQ/+JWXhU2UyCJVuYhWSfjnoM+WertchcZU5JSKgGIGomwNQPFg/HPSSPtqw\niv+pCtjZBS3zTGdDFO74Y4dz2CNt/g0Et3DiPtPKkdhU7t9LLWq/rTfF8NIxdnC8\nEjnzOcRfNlw2S1bxoFVmCIm/Ef3zblCLyfg6FC/3sR9dITd4zVXe0hc94R141kYy\nFW7UX245Xu5d1eGuBjj8ob0Xv1VbDZhbzlOcCL9I19F6lCkIKWh31allHm2i/gHA\nSGwp1C7D1xe+oSYa1mm0yKJY45f6Z4H0D795J+leO/baDpYr2OzhwdMcEZ/5GFai\nMA5txkPDorfwTo29oQPaH/e1/sEyBwhzG1sMxLSh1ROvakrGuQo/87Be41jlyftB\nHzOdP8il0+xD1K3ZRbdtDVvWcG7ByYepNrTzw/fj8OklNiNBpod0PXIYtqkijlea\nG5OJosaa1he5iXF6ter70RMjHmZRVm40S0RiJPKC9ZEX7aAjOcfHO7t5JjmtqPA9\nfxYUxK2KxJwkhMRqZ5yONh1GRe1cakyW4pNhC5k1CY5Xj0AfvQ7KbwqRu7qS9b3G\n45GbIfPUeReXP7BR6JTWfMMYXwRUPfd61n+mpJ1fsJaoUCwAonfhkPSE/SOd+RK/\nfNlT8S1d5/4AIfLRp5KjABrcyA98lQVr3Bhth3JQgl/x3c0I2C8=\n=Xtyz\n-----END PGP SIGNATURE-----",
        "payload": "tree 22601c14631f2057ef686b1b1461255be0c8a981\nparent e6e277f9ed4da7aff9b7b39a7838bada0c3e572a\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1597642586 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1597732236 +0900\n\ndoc: release notes for -maxapsfee\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f77b821764dcaebc97a5ae76c3052936418308d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f77b821764dcaebc97a5ae76c3052936418308d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f77b821764dcaebc97a5ae76c3052936418308d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6e277f9ed4da7aff9b7b39a7838bada0c3e572a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6e277f9ed4da7aff9b7b39a7838bada0c3e572a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6e277f9ed4da7aff9b7b39a7838bada0c3e572a"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "28b0abecd7bea74d8263ef92bf18bc1393199e87",
        "filename": "doc/release-notes-14582.md",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f77b821764dcaebc97a5ae76c3052936418308d/doc/release-notes-14582.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f77b821764dcaebc97a5ae76c3052936418308d/doc/release-notes-14582.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14582.md?ref=9f77b821764dcaebc97a5ae76c3052936418308d",
        "patch": "@@ -0,0 +1,14 @@\n+Configuration\n+-------------\n+\n+A new configuration flag `-maxapsfee` has been added, which sets the max allowed\n+avoid partial spends (APS) fee. It defaults to 0 (i.e. fee is the same with\n+and without APS). Setting it to -1 will disable APS, unless `-avoidpartialspends`\n+is set. (#14582)\n+\n+Wallet\n+------\n+\n+The wallet will now avoid partial spends (APS) by default, if this does not result\n+in a difference in fees compared to the non-APS variant. The allowed fee threshold\n+can be adjusted using the new `-maxapsfee` configuration option. (#14582)"
      }
    ]
  },
  {
    "sha": "7e31ea9fa0a59ced2293057acb14c71ec97db689",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTMxZWE5ZmEwYTU5Y2VkMjI5MzA1N2FjYjE0YzcxZWM5N2RiNjg5",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-08-17T05:38:21Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-08-18T10:24:39Z"
      },
      "message": "-maxapsfee: follow-up fixes\n\nCo-authored-by: Jon Atack <jon@atack.com>\nCo-authored-by: Samuel Dobson <dobsonsa68@gmail.com>",
      "tree": {
        "sha": "b01b925d1d9f412d68a9d222e35f02108bd78b4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b01b925d1d9f412d68a9d222e35f02108bd78b4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e31ea9fa0a59ced2293057acb14c71ec97db689",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl87rGcACgkQV692LbM1\nMyIm7Q/8CTqQR+6RL2q/q34wKlT+m/1EkkY8ci1Hf+8mdaUs5Dn08sViZsaEVVr7\ngXgIUaWeW3bCGjLT+RaVhmvdVTr099zVC46746LcKtKLamH0GY8PgO9V762weVdT\nVNC4EUyAAVKSQN9S4MhbvnJ2QRcKefpi2QyyGxO2xvCQJlEkmQ15Dv3uHUk2roly\njJoAUNiGB3Pse3EZL9REgoy1P6d+PSduoY1PnqtzS5CSdukEW3Z5xsvDwbFweXLJ\nRw1AHHzzIfYRMUXulv/ezR8EI+GkciHp0tysP6pUEmq7B++/ZWczLPgcjz5hclI2\nZg06dtgd9vBqq1Pg2uJD+NH85yg3n9f+wJtdt8rUKsJv18zpKTwYCzFaIGIxJMWX\nFSXjAohwBCklWDH6LAlgR5C4Nu/MCTefchGA/H0o+6OOPxEeCj8pSz41owmmwfeU\ndgxl/zek1SsUF/o6DNZjJ4zrfqQqxF8DrnPud231mw2rG0UHRrg1G0g5DGUAq5XR\nRzbDZN0bVefxCfMclcM+2E3Pr1X+V/WbERJiaeGDbn5vrFkp542kOSg3cLT22f/c\nWhy/HHP2LaZt+8+Gk5S8NmrD1xCAJtS4QuLXYIXN8RCyqEzSZM+2Wm4iV49V5OBo\nFXPj9PchNdUEiTPj+1v78Va3m3fdQU/oKTwcRHvAoE7vmHfpagY=\n=G3Dy\n-----END PGP SIGNATURE-----",
        "payload": "tree b01b925d1d9f412d68a9d222e35f02108bd78b4a\nparent 9f77b821764dcaebc97a5ae76c3052936418308d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1597642701 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1597746279 +0900\n\n-maxapsfee: follow-up fixes\n\nCo-authored-by: Jon Atack <jon@atack.com>\nCo-authored-by: Samuel Dobson <dobsonsa68@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e31ea9fa0a59ced2293057acb14c71ec97db689",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e31ea9fa0a59ced2293057acb14c71ec97db689",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e31ea9fa0a59ced2293057acb14c71ec97db689/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f77b821764dcaebc97a5ae76c3052936418308d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f77b821764dcaebc97a5ae76c3052936418308d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f77b821764dcaebc97a5ae76c3052936418308d"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 47,
      "deletions": 15
    },
    "files": [
      {
        "sha": "c132a4be42f96d6b01ed8bbaa4ef9df7cc4c2beb",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e31ea9fa0a59ced2293057acb14c71ec97db689/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e31ea9fa0a59ced2293057acb14c71ec97db689/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7e31ea9fa0a59ced2293057acb14c71ec97db689",
        "patch": "@@ -3890,16 +3890,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     }\n \n     if (gArgs.IsArgSet(\"-maxapsfee\")) {\n+        const std::string max_aps_fee{gArgs.GetArg(\"-maxapsfee\", \"\")};\n         CAmount n = 0;\n-        if (gArgs.GetArg(\"-maxapsfee\", \"\") == \"-1\") {\n+        if (max_aps_fee == \"-1\") {\n             n = -1;\n-        } else if (!ParseMoney(gArgs.GetArg(\"-maxapsfee\", \"\"), n)) {\n-            error = AmountErrMsg(\"maxapsfee\", gArgs.GetArg(\"-maxapsfee\", \"\"));\n+        } else if (!ParseMoney(max_aps_fee, n)) {\n+            error = AmountErrMsg(\"maxapsfee\", max_aps_fee);\n             return nullptr;\n         }\n         if (n > HIGH_APS_FEE) {\n             warnings.push_back(AmountHighWarn(\"-maxapsfee\") + Untranslated(\" \") +\n-                              _(\"This is the maximum transaction fee you pay to prioritize partial spend avoidance over regular coin selection.\"));\n+                              _(\"This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.\"));\n         }\n         walletInstance->m_max_aps_fee = n;\n     }"
      },
      {
        "sha": "e5c4f12f20518a36a91415c41e07de9e3640e726",
        "filename": "test/functional/wallet_groups.py",
        "status": "modified",
        "additions": 42,
        "deletions": 11,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e31ea9fa0a59ced2293057acb14c71ec97db689/test/functional/wallet_groups.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e31ea9fa0a59ced2293057acb14c71ec97db689/test/functional/wallet_groups.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_groups.py?ref=7e31ea9fa0a59ced2293057acb14c71ec97db689",
        "patch": "@@ -15,8 +15,14 @@\n class WalletGroupTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], [], ['-avoidpartialspends'], [\"-maxapsfee=0.0001\"]]\n+        self.num_nodes = 5\n+        self.extra_args = [\n+            [],\n+            [],\n+            [\"-avoidpartialspends\"],\n+            [\"-maxapsfee=0.00002719\"],\n+            [\"-maxapsfee=0.00002720\"],\n+        ]\n         self.rpc_timeout = 480\n \n     def skip_test_if_missing_module(self):\n@@ -50,8 +56,8 @@ def run_test(self):\n         # one output should be 0.2, the other should be ~0.3\n         v = [vout[\"value\"] for vout in tx1[\"vout\"]]\n         v.sort()\n-        assert_approx(v[0], 0.2)\n-        assert_approx(v[1], 0.3, 0.0001)\n+        assert_approx(v[0], vexp=0.2, vspan=0.0001)\n+        assert_approx(v[1], vexp=0.3, vspan=0.0001)\n \n         txid2 = self.nodes[2].sendtoaddress(self.nodes[0].getnewaddress(), 0.2)\n         tx2 = self.nodes[2].getrawtransaction(txid2, True)\n@@ -61,8 +67,8 @@ def run_test(self):\n         # one output should be 0.2, the other should be ~1.3\n         v = [vout[\"value\"] for vout in tx2[\"vout\"]]\n         v.sort()\n-        assert_approx(v[0], 0.2)\n-        assert_approx(v[1], 1.3, 0.0001)\n+        assert_approx(v[0], vexp=0.2, vspan=0.0001)\n+        assert_approx(v[1], vexp=1.3, vspan=0.0001)\n \n         # Test 'avoid partial if warranted, even if disabled'\n         self.sync_all()\n@@ -75,8 +81,8 @@ def run_test(self):\n         # - C0 1.0      - E1 0.5\n         # - C1 0.5      - F  ~1.3\n         # - D ~0.3\n-        assert_approx(self.nodes[1].getbalance(), 4.3, 0.0001)\n-        assert_approx(self.nodes[2].getbalance(), 4.3, 0.0001)\n+        assert_approx(self.nodes[1].getbalance(), vexp=4.3, vspan=0.0001)\n+        assert_approx(self.nodes[2].getbalance(), vexp=4.3, vspan=0.0001)\n         # Sending 1.4 btc should pick one 1.0 + one more. For node #1,\n         # this could be (A / B0 / C0) + (B1 / C1 / D). We ensure that it is\n         # B0 + B1 or C0 + C1, because this avoids partial spends while not being\n@@ -90,8 +96,8 @@ def run_test(self):\n         # ~0.1 and 1.4 and should come from the same destination\n         values = [vout[\"value\"] for vout in tx3[\"vout\"]]\n         values.sort()\n-        assert_approx(values[0], 0.1, 0.0001)\n-        assert_approx(values[1], 1.4)\n+        assert_approx(values[0], vexp=0.1, vspan=0.0001)\n+        assert_approx(values[1], vexp=1.4, vspan=0.0001)\n \n         input_txids = [vin[\"txid\"] for vin in tx3[\"vin\"]]\n         input_addrs = [self.nodes[1].gettransaction(txid)['details'][0]['address'] for txid in input_txids]\n@@ -104,13 +110,38 @@ def run_test(self):\n         self.nodes[0].sendtoaddress(addr_aps, 1.0)\n         self.nodes[0].generate(1)\n         self.sync_all()\n-        txid4 = self.nodes[3].sendtoaddress(self.nodes[0].getnewaddress(), 0.1)\n+        with self.nodes[3].assert_debug_log(['Fee non-grouped = 2820, grouped = 4160, using grouped']):\n+            txid4 = self.nodes[3].sendtoaddress(self.nodes[0].getnewaddress(), 0.1)\n         tx4 = self.nodes[3].getrawtransaction(txid4, True)\n         # tx4 should have 2 inputs and 2 outputs although one output would\n         # have been enough and the transaction caused higher fees\n         assert_equal(2, len(tx4[\"vin\"]))\n         assert_equal(2, len(tx4[\"vout\"]))\n \n+        addr_aps2 = self.nodes[3].getnewaddress()\n+        [self.nodes[0].sendtoaddress(addr_aps2, 1.0) for _ in range(5)]\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        with self.nodes[3].assert_debug_log(['Fee non-grouped = 5520, grouped = 8240, using non-grouped']):\n+            txid5 = self.nodes[3].sendtoaddress(self.nodes[0].getnewaddress(), 2.95)\n+        tx5 = self.nodes[3].getrawtransaction(txid5, True)\n+        # tx5 should have 3 inputs (1.0, 1.0, 1.0) and 2 outputs\n+        assert_equal(3, len(tx5[\"vin\"]))\n+        assert_equal(2, len(tx5[\"vout\"]))\n+\n+        # Test wallet option maxapsfee with node 4, which sets maxapsfee\n+        # 1 sat higher, crossing the threshold from non-grouped to grouped.\n+        addr_aps3 = self.nodes[4].getnewaddress()\n+        [self.nodes[0].sendtoaddress(addr_aps3, 1.0) for _ in range(5)]\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        with self.nodes[4].assert_debug_log(['Fee non-grouped = 5520, grouped = 8240, using grouped']):\n+            txid6 = self.nodes[4].sendtoaddress(self.nodes[0].getnewaddress(), 2.95)\n+        tx6 = self.nodes[4].getrawtransaction(txid6, True)\n+        # tx6 should have 5 inputs and 2 outputs\n+        assert_equal(5, len(tx6[\"vin\"]))\n+        assert_equal(2, len(tx6[\"vout\"]))\n+\n         # Empty out node2's wallet\n         self.nodes[2].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=self.nodes[2].getbalance(), subtractfeefromamount=True)\n         self.sync_all()"
      }
    ]
  }
]