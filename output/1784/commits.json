[
  {
    "sha": "5fb61b7af9654dcf210bf8b88ca682c4c61dba42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmI2MWI3YWY5NjU0ZGNmMjEwYmY4Yjg4Y2E2ODJjNGM2MWRiYTQy",
    "commit": {
      "author": {
        "name": "xanatos",
        "email": "xanatos@geocities.com",
        "date": "2012-09-04T13:31:28Z"
      },
      "committer": {
        "name": "xanatos",
        "email": "xanatos@geocities.com",
        "date": "2012-09-04T13:31:28Z"
      },
      "message": "Removing some implicit conversions\n\nI think that implicitly converting 3 (the number) to uint256, doing an & between two uint256 and finally comparing the result to an uint64 (the 0) is a little overkill if all you want is to check 2 bits of an uint256. \r\nI have to say the truth, I'm not sure if now we would be comparing the \"same\" 2 bits or the 2 bits from the other side of the uint256 (looking at operator= and Get64 I would say the same), but considering what this code wants to obtain, it shouldn't be a problem.\r\n\r\n(I'm not even sure if this code will be faster, but I do think that all those implicit conversions are b.a.d.). We could even do a (*hashrand.begin() & 3) but that would be quite unreadable.",
      "tree": {
        "sha": "3b1bab9ac848e682e60aaed61f41e2639b4e29a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b1bab9ac848e682e60aaed61f41e2639b4e29a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fb61b7af9654dcf210bf8b88ca682c4c61dba42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fb61b7af9654dcf210bf8b88ca682c4c61dba42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fb61b7af9654dcf210bf8b88ca682c4c61dba42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fb61b7af9654dcf210bf8b88ca682c4c61dba42/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9d7da11458b53dc12053d3625d05a21e8a7eeb2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d7da11458b53dc12053d3625d05a21e8a7eeb2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d7da11458b53dc12053d3625d05a21e8a7eeb2f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2b354d13b1f76e5c8cf9eb26d5a269f5fb66cde2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fb61b7af9654dcf210bf8b88ca682c4c61dba42/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fb61b7af9654dcf210bf8b88ca682c4c61dba42/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5fb61b7af9654dcf210bf8b88ca682c4c61dba42",
        "patch": "@@ -3277,7 +3277,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                         hashSalt = GetRandHash();\n                     uint256 hashRand = inv.hash ^ hashSalt;\n                     hashRand = Hash(BEGIN(hashRand), END(hashRand));\n-                    bool fTrickleWait = ((hashRand & 3) != 0);\n+                    bool fTrickleWait = ((hashRand.Get64() & 3) != 0);\n \n                     // always trickle our own transactions\n                     if (!fTrickleWait)"
      }
    ]
  }
]