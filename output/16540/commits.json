[
  {
    "sha": "fa1936f57bbf5aebb1f8fc18701441d79219d443",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE5MzZmNTdiYmY1YWViYjFmOGZjMTg3MDE0NDFkNzkyMTlkNDQz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-26T17:31:57Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-04T15:42:29Z"
      },
      "message": "logging: Add member for arbitrary print callbacks",
      "tree": {
        "sha": "82b944a2f5ad061909217366ed6bfe403eab654c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82b944a2f5ad061909217366ed6bfe403eab654c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1936f57bbf5aebb1f8fc18701441d79219d443",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjvCQwAsXTi8RwyU/oaefLF7rcePOqTcSf/FUM3GsFDBF0LkEZV0j1foAaaatR/\nRzlZRU44egmVDkWzuQPrV3IuxKmwrubGJlyfEjZFbBRijVdOf7UralZgF/GqgfSA\nf+r2YPLcnlcC4GxYtg8QFiC9npkPkqerUO1IZrtBd3nKiy36cYaV8Ep6z6piuwZ6\nh8HU/JsPhDEnGO5Bt1f7pogSbG/wH3l7KsyQRBkIdv7WN6gh07RFh7mjGD96OdmG\ncGWBZcRwuthxAxH5AZIKTVPv38TO4BHXUf1b8939wwOZQ7XJj2zi8+h28nPQLD08\njdk4os6gjyeSXm28IraN3p8A8RukoA1onn/uUaH2ghDcF24BezAelqiTb98sGwkf\nTv2stRcq5ibfi7C0a3l0xKgTePSJB6JHuu8tXVsKbRxDYlHGiTlk0vthKeO9Cd+/\npMRqMVx1Y0YDJVRbd//HNlVr2iUgKedLTelVQb09IlU8vkCXJ7LiAfpxbKF+P+2m\nc60lmfst\n=MIcR\n-----END PGP SIGNATURE-----",
        "payload": "tree 82b944a2f5ad061909217366ed6bfe403eab654c\nparent fba574c908bb61eff1a0e83c935f3526ba9035f2\nauthor MarcoFalke <falke.marco@gmail.com> 1569519117 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1572882149 -0500\n\nlogging: Add member for arbitrary print callbacks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1936f57bbf5aebb1f8fc18701441d79219d443",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1936f57bbf5aebb1f8fc18701441d79219d443",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1936f57bbf5aebb1f8fc18701441d79219d443/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fba574c908bb61eff1a0e83c935f3526ba9035f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fba574c908bb61eff1a0e83c935f3526ba9035f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fba574c908bb61eff1a0e83c935f3526ba9035f2"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 26,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b01177f23fb53c75f4ff44f57ec947b189d75ff0",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1936f57bbf5aebb1f8fc18701441d79219d443/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1936f57bbf5aebb1f8fc18701441d79219d443/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=fa1936f57bbf5aebb1f8fc18701441d79219d443",
        "patch": "@@ -67,6 +67,9 @@ bool BCLog::Logger::StartLogging()\n \n         if (m_print_to_file) FileWriteStr(s, m_fileout);\n         if (m_print_to_console) fwrite(s.data(), 1, s.size(), stdout);\n+        for (const auto& cb : m_print_callbacks) {\n+            cb(s);\n+        }\n \n         m_msgs_before_open.pop_front();\n     }\n@@ -81,6 +84,7 @@ void BCLog::Logger::DisconnectTestLogger()\n     m_buffering = true;\n     if (m_fileout != nullptr) fclose(m_fileout);\n     m_fileout = nullptr;\n+    m_print_callbacks.clear();\n }\n \n void BCLog::Logger::EnableCategory(BCLog::LogFlags flag)\n@@ -270,6 +274,9 @@ void BCLog::Logger::LogPrintStr(const std::string& str)\n         fwrite(str_prefixed.data(), 1, str_prefixed.size(), stdout);\n         fflush(stdout);\n     }\n+    for (const auto& cb : m_print_callbacks) {\n+        cb(str_prefixed);\n+    }\n     if (m_print_to_file) {\n         assert(m_fileout != nullptr);\n "
      },
      {
        "sha": "9ed41c2b98a859a2b09cf504bed6e37f45ec911c",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1936f57bbf5aebb1f8fc18701441d79219d443/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1936f57bbf5aebb1f8fc18701441d79219d443/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=fa1936f57bbf5aebb1f8fc18701441d79219d443",
        "patch": "@@ -77,6 +77,9 @@ namespace BCLog {\n \n         std::string LogTimestampStr(const std::string& str);\n \n+        /** Slots that connect to the print signal */\n+        std::list<std::function<void(const std::string&)>> m_print_callbacks /* GUARDED_BY(m_cs) */ {};\n+\n     public:\n         bool m_print_to_console = false;\n         bool m_print_to_file = false;\n@@ -95,7 +98,22 @@ namespace BCLog {\n         bool Enabled() const\n         {\n             std::lock_guard<std::mutex> scoped_lock(m_cs);\n-            return m_buffering || m_print_to_console || m_print_to_file;\n+            return m_buffering || m_print_to_console || m_print_to_file || !m_print_callbacks.empty();\n+        }\n+\n+        /** Connect a slot to the print signal and return the connection */\n+        std::list<std::function<void(const std::string&)>>::iterator PushBackCallback(std::function<void(const std::string&)> fun)\n+        {\n+            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            m_print_callbacks.push_back(std::move(fun));\n+            return --m_print_callbacks.end();\n+        }\n+\n+        /** Delete a connection */\n+        void DeleteCallback(std::list<std::function<void(const std::string&)>>::iterator it)\n+        {\n+            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            m_print_callbacks.erase(it);\n         }\n \n         /** Start logging (and flush all buffered messages) */"
      }
    ]
  },
  {
    "sha": "fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJjNDRjM2NjYzNlN2E1NGUyYWZjODYyYWRkZDU1NWQ1YTZlNTFi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-02T21:06:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-04T15:42:33Z"
      },
      "message": "test: Add ASSERT_DEBUG_LOG to unit test framework",
      "tree": {
        "sha": "25dcc1cf23640475cff8321843dba35499436e5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25dcc1cf23640475cff8321843dba35499436e5c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj8OgwAizDgO+aPgsIXzwA5xZ8QwUU455BSVCHnj92QAZUB2G/wek6ADYq2Tfj8\n5XSpxpSLmL8xv6ZGXuViUWRVY/B0xK6oN4obkGmN1FtBRBLjRBgPSB65CmmCIX64\nFfh/gNrGuYMG0Kt1FcwE6VuykgNPgEulVLNbvDPl/NDltVufv3Xf5B1HiWqS8Clo\nfHaGRL1kYRg78aN9F9CAF8GZ+bbbglbzD67jebSrkfAtkkMGM5XXVeJbj45H4WPl\nqpljH0CvVrMZ40PviysWKx7QZ8DJ6yQPwOIPn6s+DW9kmcDg1veSfsSEgXmknPAT\nyBzZvScgg+AiG5ml9WD7v+Jjq0/N3TC9buZsCObeAEMKpJKFu5YsQCNvZ2yuP+tw\nl7z0kO7MJogW/99+lMqpVltgwgACNq4oyBsHiFMiF/F1GXgELqNBaey9Fx0NV5KW\nP/2ce0QWj3FGJ+0lWai7SAuTKNJtT+yQBfsZ9FricLEinzUf3cWSYj5k2KO2Su03\n/z8CEAn+\n=/xm+\n-----END PGP SIGNATURE-----",
        "payload": "tree 25dcc1cf23640475cff8321843dba35499436e5c\nparent fa1936f57bbf5aebb1f8fc18701441d79219d443\nauthor MarcoFalke <falke.marco@gmail.com> 1564779997 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1572882153 -0500\n\ntest: Add ASSERT_DEBUG_LOG to unit test framework\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa1936f57bbf5aebb1f8fc18701441d79219d443",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1936f57bbf5aebb1f8fc18701441d79219d443",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1936f57bbf5aebb1f8fc18701441d79219d443"
      }
    ],
    "stats": {
      "total": 122,
      "additions": 97,
      "deletions": 25
    },
    "files": [
      {
        "sha": "7ee26c434953375f9de15367b6fab24ea3ffb65e",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
        "patch": "@@ -58,6 +58,8 @@ GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.r\n BITCOIN_TEST_SUITE = \\\n   test/lib/blockfilter.cpp \\\n   test/lib/blockfilter.h \\\n+  test/lib/logging.cpp \\\n+  test/lib/logging.h \\\n   test/lib/transaction_utils.cpp \\\n   test/lib/transaction_utils.h \\\n   test/main.cpp \\"
      },
      {
        "sha": "a5b7a2d591a32111af75ca74fa5f24a1c5817152",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
        "patch": "@@ -66,28 +66,31 @@ void noui_connect()\n     noui_InitMessageConn = uiInterface.InitMessage_connect(noui_InitMessage);\n }\n \n-bool noui_ThreadSafeMessageBoxSuppressed(const std::string& message, const std::string& caption, unsigned int style)\n+bool noui_ThreadSafeMessageBoxRedirect(const std::string& message, const std::string& caption, unsigned int style)\n {\n+    LogPrintf(\"%s: %s\\n\", caption, message);\n     return false;\n }\n \n-bool noui_ThreadSafeQuestionSuppressed(const std::string& /* ignored interactive message */, const std::string& message, const std::string& caption, unsigned int style)\n+bool noui_ThreadSafeQuestionRedirect(const std::string& /* ignored interactive message */, const std::string& message, const std::string& caption, unsigned int style)\n {\n+    LogPrintf(\"%s: %s\\n\", caption, message);\n     return false;\n }\n \n-void noui_InitMessageSuppressed(const std::string& message)\n+void noui_InitMessageRedirect(const std::string& message)\n {\n+    LogPrintf(\"init message: %s\\n\", message);\n }\n \n-void noui_suppress()\n+void noui_test_redirect()\n {\n     noui_ThreadSafeMessageBoxConn.disconnect();\n     noui_ThreadSafeQuestionConn.disconnect();\n     noui_InitMessageConn.disconnect();\n-    noui_ThreadSafeMessageBoxConn = uiInterface.ThreadSafeMessageBox_connect(noui_ThreadSafeMessageBoxSuppressed);\n-    noui_ThreadSafeQuestionConn = uiInterface.ThreadSafeQuestion_connect(noui_ThreadSafeQuestionSuppressed);\n-    noui_InitMessageConn = uiInterface.InitMessage_connect(noui_InitMessageSuppressed);\n+    noui_ThreadSafeMessageBoxConn = uiInterface.ThreadSafeMessageBox_connect(noui_ThreadSafeMessageBoxRedirect);\n+    noui_ThreadSafeQuestionConn = uiInterface.ThreadSafeQuestion_connect(noui_ThreadSafeQuestionRedirect);\n+    noui_InitMessageConn = uiInterface.InitMessage_connect(noui_InitMessageRedirect);\n }\n \n void noui_reconnect()"
      },
      {
        "sha": "621e9c2798245b0f028c0f80b6ae2fb5c60eb800",
        "filename": "src/noui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/noui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/noui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.h?ref=fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
        "patch": "@@ -17,10 +17,10 @@ void noui_InitMessage(const std::string& message);\n /** Connect all bitcoind signal handlers */\n void noui_connect();\n \n-/** Suppress all bitcoind signal handlers. Used to suppress output during test runs that produce expected errors */\n-void noui_suppress();\n+/** Redirect all bitcoind signal handlers to LogPrintf. Used to check or suppress output during test runs that produce expected errors */\n+void noui_test_redirect();\n \n-/** Reconnects the regular Non-GUI handlers after having used noui_suppress */\n+/** Reconnects the regular Non-GUI handlers after having used noui_test_redirect */\n void noui_reconnect();\n \n #endif // BITCOIN_NOUI_H"
      },
      {
        "sha": "4cfebf63dfaa9a467a6b14a692257ac4bef2b85f",
        "filename": "src/test/lib/logging.cpp",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/test/lib/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/test/lib/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/lib/logging.cpp?ref=fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
        "patch": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/lib/logging.h>\n+\n+#include <logging.h>\n+#include <noui.h>\n+#include <tinyformat.h>\n+#include <util/memory.h>\n+\n+#include <stdexcept>\n+\n+DebugLogHelper::DebugLogHelper(std::string message)\n+    : m_message{std::move(message)}\n+{\n+    m_print_connection = LogInstance().PushBackCallback(\n+        [this](const std::string& s) {\n+            if (m_found) return;\n+            m_found = s.find(m_message) != std::string::npos;\n+        });\n+    noui_test_redirect();\n+}\n+\n+void DebugLogHelper::check_found()\n+{\n+    noui_reconnect();\n+    LogInstance().DeleteCallback(m_print_connection);\n+    if (!m_found) {\n+        throw std::runtime_error(strprintf(\"'%s' not found in debug log\\n\", m_message));\n+    }\n+}"
      },
      {
        "sha": "ea1b0ad6f0cccaebb7f514d506323171eb20a752",
        "filename": "src/test/lib/logging.h",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/test/lib/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/test/lib/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/lib/logging.h?ref=fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
        "patch": "@@ -0,0 +1,29 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TEST_LIB_LOGGING_H\n+#define BITCOIN_TEST_LIB_LOGGING_H\n+\n+#include <util/macros.h>\n+\n+#include <functional>\n+#include <list>\n+#include <string>\n+\n+class DebugLogHelper\n+{\n+    const std::string m_message;\n+    bool m_found{false};\n+    std::list<std::function<void(const std::string&)>>::iterator m_print_connection;\n+\n+    void check_found();\n+\n+public:\n+    DebugLogHelper(std::string message);\n+    ~DebugLogHelper() { check_found(); }\n+};\n+\n+#define ASSERT_DEBUG_LOG(message) DebugLogHelper PASTE2(debugloghelper, __COUNTER__)(message)\n+\n+#endif // BITCOIN_TEST_LIB_LOGGING_H"
      },
      {
        "sha": "c1a6df72d552ee9a585ff844d88ceedbd86953e4",
        "filename": "src/test/timedata_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/test/timedata_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/test/timedata_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/timedata_tests.cpp?ref=fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
        "patch": "@@ -5,6 +5,7 @@\n \n #include <netaddress.h>\n #include <noui.h>\n+#include <test/lib/logging.h>\n #include <test/setup_common.h>\n #include <timedata.h>\n #include <warnings.h>\n@@ -59,9 +60,10 @@ BOOST_AUTO_TEST_CASE(addtimedata)\n     MultiAddTimeData(3, DEFAULT_MAX_TIME_ADJUSTMENT + 1);\n     // Filter size is 1 + 3 = 4: It is always initialized with a single element (offset 0)\n \n-    noui_suppress();\n-    MultiAddTimeData(1, DEFAULT_MAX_TIME_ADJUSTMENT + 1); //filter size 5\n-    noui_reconnect();\n+    {\n+        ASSERT_DEBUG_LOG(\"Please check that your computer's date and time are correct!\");\n+        MultiAddTimeData(1, DEFAULT_MAX_TIME_ADJUSTMENT + 1); //filter size 5\n+    }\n \n     BOOST_CHECK(GetWarnings(\"gui\").find(\"clock is wrong\") != std::string::npos);\n "
      },
      {
        "sha": "7a6907bc936bd44c7869704b22e304d9e3620a29",
        "filename": "src/wallet/test/init_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 12,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/wallet/test/init_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b/src/wallet/test/init_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/init_tests.cpp?ref=fa2c44c3ccc3e7a54e2afc862addd555d5a6e51b",
        "patch": "@@ -5,6 +5,7 @@\n #include <boost/test/unit_test.hpp>\n \n #include <noui.h>\n+#include <test/lib/logging.h>\n #include <test/setup_common.h>\n #include <util/system.h>\n #include <wallet/test/init_test_fixture.h>\n@@ -34,28 +35,31 @@ BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_custom)\n BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_does_not_exist)\n {\n     SetWalletDir(m_walletdir_path_cases[\"nonexistent\"]);\n-    noui_suppress();\n-    bool result = m_chain_client->verify();\n-    noui_reconnect();\n-    BOOST_CHECK(result == false);\n+    {\n+        ASSERT_DEBUG_LOG(\"does not exist\");\n+        bool result = m_chain_client->verify();\n+        BOOST_CHECK(result == false);\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_is_not_directory)\n {\n     SetWalletDir(m_walletdir_path_cases[\"file\"]);\n-    noui_suppress();\n-    bool result = m_chain_client->verify();\n-    noui_reconnect();\n-    BOOST_CHECK(result == false);\n+    {\n+        ASSERT_DEBUG_LOG(\"is not a directory\");\n+        bool result = m_chain_client->verify();\n+        BOOST_CHECK(result == false);\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_is_not_relative)\n {\n     SetWalletDir(m_walletdir_path_cases[\"relative\"]);\n-    noui_suppress();\n-    bool result = m_chain_client->verify();\n-    noui_reconnect();\n-    BOOST_CHECK(result == false);\n+    {\n+        ASSERT_DEBUG_LOG(\"is a relative path\");\n+        bool result = m_chain_client->verify();\n+        BOOST_CHECK(result == false);\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_no_trailing)"
      }
    ]
  }
]