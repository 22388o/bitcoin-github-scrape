[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756345460",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#issuecomment-756345460",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20876",
    "id": 756345460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjM0NTQ2MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-07T19:52:55Z",
    "updated_at": "2021-01-07T19:52:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20874 (test: Run mempool_limit.py even with wallet disabled by stackman27)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756345460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756989949",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#issuecomment-756989949",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20876",
    "id": 756989949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1Njk4OTk0OQ==",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-08T20:45:00Z",
    "updated_at": "2021-01-08T20:45:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK faabc26a61873b2cd0390a21df571fe53c893c11",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756989949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757387150",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#issuecomment-757387150",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20876",
    "id": 757387150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzM4NzE1MA==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-10T00:04:55Z",
    "updated_at": "2021-01-10T00:04:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK hehe, was just thinking that it'd be nice to have a just-create-don't-send option for the MiniWallet. What do you think of a bool option?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757387150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757443980",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#issuecomment-757443980",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20876",
    "id": 757443980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzQ0Mzk4MA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-10T09:19:35Z",
    "updated_at": "2021-01-10T09:21:44Z",
    "author_association": "MEMBER",
    "body": "> What do you think of a bool option?\r\n\r\nSure, but let's do that in the PR that needs the feature. (To not introduce dead code branches right away)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757443980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553825037",
    "pull_request_review_id": 564104713,
    "id": 553825037,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzgyNTAzNw==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 9,
    "original_position": 9,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I just have a conceptual question here. Why would we wanna send tx when we know it's going to fail? for instance I ran this code to check for failure and success and got\r\n![markoPR2](https://user-images.githubusercontent.com/26356227/103995201-feda0f00-514c-11eb-87e5-180380da79d3.PNG). Is it to retrieve the error reason? If so, since `reject-reason` is a part of the `tx_info` object can't we just return the `reject-reason` rather than raising an exception?  \r\n",
    "created_at": "2021-01-08T09:11:29Z",
    "updated_at": "2021-01-08T09:14:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r553825037",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553825037"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r553825037"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553825037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553842608",
    "pull_request_review_id": 564127958,
    "id": 553842608,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzg0MjYwOA==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 9,
    "original_position": 9,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "None of the code paths currently send a tx that we know is going to fail. Otherwise, `sendrawtransaction` would throw.",
    "created_at": "2021-01-08T09:46:29Z",
    "updated_at": "2021-01-08T09:46:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r553842608",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553842608"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r553842608"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553842608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 553825037
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554063992",
    "pull_request_review_id": 564420332,
    "id": 554063992,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDA2Mzk5Mg==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 9,
    "original_position": 9,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This makes me notice a potentially unwanted side-effect in `send_self_transfer`. If a test case is catching an exception in `send_self_transfer`, `self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})` is happening before some rpc calls and assertions that could potentially fail. This could cause some confusing behavior in the case an exception does get thrown, and `self._utxos` is left modified\r\n\r\nNot related to this PR imo as this behavior was already present, but do you think it would be useful to do `self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})` at the very end of this method, when we know it will succeed, in another PR?",
    "created_at": "2021-01-08T16:50:51Z",
    "updated_at": "2021-01-08T16:50:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554063992",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554063992"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554063992"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554063992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 553825037
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554066333",
    "pull_request_review_id": 564422051,
    "id": 554066333,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDA2NjMzMw==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 9,
    "original_position": 9,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well, I guess this would only apply if there are cases where `testmempoolaccept` succeeds but `sendrawtransaction` fails",
    "created_at": "2021-01-08T16:53:12Z",
    "updated_at": "2021-01-08T16:53:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554066333",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554066333"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554066333"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554066333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 553825037
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554068230",
    "pull_request_review_id": 564423537,
    "id": 554068230,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDA2ODIzMA==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)\n         assert_equal(tx_info['vsize'], vsize)\n-        assert_equal(tx_info['fee'], fee)\n-        return {'txid': txid, 'wtxid': tx_info['wtxid'], 'hex': tx_hex}\n+        assert_equal(tx_info['fees']['base'], fee)\n+        return {'txid': tx_info['txid'], 'wtxid': from_node.decoderawtransaction(tx_hex)['hash'], 'hex': tx_hex}",
    "path": "test/functional/test_framework/wallet.py",
    "position": 14,
    "original_position": 14,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unrelated to this PR: What are your thoughts of returning the entire `tx_info` here? There have been a few cases where that would have been nice when I worked with `MiniWallet`. If you think it's useful I could open a PR for that",
    "created_at": "2021-01-08T16:55:06Z",
    "updated_at": "2021-01-08T16:55:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554068230",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554068230"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554068230"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554068230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554489019",
    "pull_request_review_id": 564819053,
    "id": 554489019,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ4OTAxOQ==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)\n         assert_equal(tx_info['vsize'], vsize)\n-        assert_equal(tx_info['fee'], fee)\n-        return {'txid': txid, 'wtxid': tx_info['wtxid'], 'hex': tx_hex}\n+        assert_equal(tx_info['fees']['base'], fee)\n+        return {'txid': tx_info['txid'], 'wtxid': from_node.decoderawtransaction(tx_hex)['hash'], 'hex': tx_hex}",
    "path": "test/functional/test_framework/wallet.py",
    "position": 14,
    "original_position": 14,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@mjdietzx What fields are you thinking of in particular?\r\n\r\nAlso I'm pretty sure you can get wtxid with `tx.calc_sha256(with_witness=True)`",
    "created_at": "2021-01-10T00:10:59Z",
    "updated_at": "2021-01-10T00:11:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554489019",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554489019"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554489019"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554489019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT",
    "in_reply_to_id": 554068230
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554536520",
    "pull_request_review_id": 564842493,
    "id": 554536520,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDUzNjUyMA==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)\n         assert_equal(tx_info['vsize'], vsize)\n-        assert_equal(tx_info['fee'], fee)\n-        return {'txid': txid, 'wtxid': tx_info['wtxid'], 'hex': tx_hex}\n+        assert_equal(tx_info['fees']['base'], fee)\n+        return {'txid': tx_info['txid'], 'wtxid': from_node.decoderawtransaction(tx_hex)['hash'], 'hex': tx_hex}",
    "path": "test/functional/test_framework/wallet.py",
    "position": 14,
    "original_position": 14,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Also I'm pretty sure you can get wtxid with tx.calc_sha256(with_witness=True)\r\n\r\nsha256 here is is an `int`, not a hex encoding of how txids are represented in Bitcoin (with endian switched for some reason)",
    "created_at": "2021-01-10T09:17:36Z",
    "updated_at": "2021-01-10T09:17:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554536520",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554536520"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554536520"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554536520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT",
    "in_reply_to_id": 554068230
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554536700",
    "pull_request_review_id": 564842605,
    "id": 554536700,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDUzNjcwMA==",
    "diff_hunk": "@@ -71,9 +71,9 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n-        txid = from_node.sendrawtransaction(tx_hex)\n-        self._utxos.append({'txid': txid, 'vout': 0, 'value': send_value})\n-        tx_info = from_node.getmempoolentry(txid)\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        from_node.sendrawtransaction(tx_hex)\n         assert_equal(tx_info['vsize'], vsize)\n-        assert_equal(tx_info['fee'], fee)\n-        return {'txid': txid, 'wtxid': tx_info['wtxid'], 'hex': tx_hex}\n+        assert_equal(tx_info['fees']['base'], fee)\n+        return {'txid': tx_info['txid'], 'wtxid': from_node.decoderawtransaction(tx_hex)['hash'], 'hex': tx_hex}",
    "path": "test/functional/test_framework/wallet.py",
    "position": 14,
    "original_position": 14,
    "commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "original_commit_id": "faabc26a61873b2cd0390a21df571fe53c893c11",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> If you think it's useful I could open a PR for that\r\n\r\nSure, let's do that in the PR where the return value is needed.",
    "created_at": "2021-01-10T09:19:11Z",
    "updated_at": "2021-01-10T09:19:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554536700",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554536700"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20876#discussion_r554536700"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20876"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554536700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT",
    "in_reply_to_id": 554068230
  }
]