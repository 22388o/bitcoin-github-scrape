jnewbery,2018-04-23T17:24:20Z,~~Builds on top of #10740. Please review that first.~~,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-383655175,383655175,
jnewbery,2018-05-16T21:56:26Z,rebased,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-389678636,389678636,
jnewbery,2018-05-17T20:34:11Z,Addressed @promag comments.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390002098,390002098,
promag,2018-05-18T09:06:11Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390144903,390144903,
jonasschnelli,2018-05-18T13:37:29Z,"Tested ACK 53e71dc4474db083f99ca0d30ca3abd5a492b1a6.\nConceptually, I think adding an option for load/not-load could make sense,... or is the use care of pure wallet creation useless? Eventually create should never load since it should not hurt on RPC level to call a chain of commands to complete a task.",https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390209493,390209493,
jnewbery,2018-05-21T17:52:07Z,"> I think adding an option for load/not-load could make sense,... or is the use care of pure wallet creation useless? Eventually create should never load.\n\nMy first thoughts would be that `walletcreate` should always load the wallet on creation. It seems unintuitive to have to call loadwallet immediately after creating a new wallet.\n\nIf there's a requirement for 'create without load', then",https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390731005,390731005,
jonasschnelli,2018-05-21T18:41:54Z,"> My first thoughts would be that walletcreate should always load the wallet on creation. It seems unintuitive to have to call loadwallet immediately after creating a new wallet.\n\nNot sure here.\nWe do design an RPC interface/API and not end user function representations. An additional step seems acceptable if it widens the usability of the API.... though the question of what use cases a pure",https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390744897,390744897,
jnewbery,2018-05-21T19:12:16Z,@jonasschnelli - I'm happy to take wider feedback on this. My preference would be to keep the current branch's behaviour (always load when creating) and decide whether to add create-without-load later with a new argument. I'm happy to change that though if others think we should have create-without-load now.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390753126,390753126,
jonasschnelli,2018-05-21T19:15:43Z,"Yes. Lets try to get more opinions... I guess it could also be added later (an option to make create not load).\nHowever, this is a great PR and I'd like to underline my tested ACK https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390209493",https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390753978,390753978,
promag,2018-05-21T19:18:18Z,"Well if `createwallet` creates and loads the wallet and there is no use case for just create, then a valid alternative would be to add an option to `loadwallet` to create in case it doesn't exist?",https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390754612,390754612,
jnewbery,2018-05-21T20:03:00Z,"> a valid alternative would be to add an option to loadwallet to create in case it doesn't exist.\n\nI'd prefer to keep these two methods separate. It seems to me that reloading an existing wallet and creating a new wallet are completely different operations and should have their own RPC methods.",https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-390765767,390765767,
promag,2018-05-25T14:27:23Z,Needs rebase after #13063.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-392075239,392075239,
jnewbery,2018-05-25T15:20:06Z,Addressed @promag's comments.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-392091663,392091663,
promag,2018-05-30T21:56:23Z,Tested ACK 8266c84.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-393332862,393332862,
jnewbery,2018-05-31T21:11:39Z,Addressed all @promag and @MarcoFalke comments.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-393681918,393681918,
jimpo,2018-05-31T21:27:00Z,utACK f7e153e,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-393686019,393686019,
promag,2018-05-31T22:52:57Z,utACK f7e153e.,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-393707675,393707675,
MarcoFalke,2018-05-31T22:56:18Z,utACK f7e153e95f,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-393708290,393708290,
ken2812221,2018-06-01T05:55:32Z,Tested ACK f7e153e95f08e662427e8e4abcac8f53ab58281b,https://github.com/bitcoin/bitcoin/pull/13058#issuecomment-393768467,393768467,
jonasschnelli,2018-04-23T18:20:43Z,"As mentioned in #13028, I think this does not have sufficient concurrency protection (maybe okay since edge case). AFAIK, callers calling `CWallet::Verify` as well as inside the call, there is no lock being held, thus, I think, it is possible that there could be a race in `loadwallet` and `createwallet` bypassing the filename check.",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r183491698,183491698,src/wallet/wallet.cpp
promag,2018-04-29T10:41:37Z,Empty line.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r184878654,184878654,src/wallet/rpcwallet.cpp
promag,2018-05-17T15:58:33Z,This doesn't prevent concurrency which is very unlikely and so can be improved later. ,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189012629,189012629,src/wallet/rpcwallet.cpp
promag,2018-05-17T16:01:16Z,"Also call some method in `w9`, like `get_wallet_rpc('w9').getwalletinfo()`?",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189013559,189013559,test/functional/wallet_multiwallet.py
promag,2018-05-17T16:02:00Z,Could test invalid argument.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189013803,189013803,test/functional/wallet_multiwallet.py
promag,2018-05-17T16:02:23Z,Return same format as `loadwallet`?,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189013925,189013925,src/wallet/rpcwallet.cpp
promag,2018-05-17T16:04:40Z,Assert result.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189014676,189014676,test/functional/wallet_multiwallet.py
jnewbery,2018-05-17T20:24:03Z,"`CWallet::Verify()` below takes the `cs_wallets` lock, so I think the worst that can happen is the first wallet creation succeeds and the second fails `Verify()`.",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189089491,189089491,src/wallet/rpcwallet.cpp
jnewbery,2018-05-17T20:27:02Z,We don't exhaustively test invalid args for RPCs (since it's just hitting the univalue type checking code).,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189090386,189090386,test/functional/wallet_multiwallet.py
jnewbery,2018-05-17T20:32:54Z,sure. Added,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189091936,189091936,test/functional/wallet_multiwallet.py
jnewbery,2018-05-17T20:33:20Z,Done,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189092058,189092058,src/wallet/rpcwallet.cpp
jnewbery,2018-05-17T20:33:29Z,Done,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r189092102,189092102,test/functional/wallet_multiwallet.py
promag,2018-05-25T14:27:52Z,"nit, remove empty line.",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r190911519,190911519,src/wallet/rpcwallet.cpp
promag,2018-05-25T14:31:41Z,"Here `wallet_name`, above `filename` ðŸ™„  ",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r190912794,190912794,src/wallet/rpcwallet.cpp
jnewbery,2018-05-25T15:19:22Z,removed,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r190927225,190927225,src/wallet/rpcwallet.cpp
jnewbery,2018-05-25T15:19:26Z,fixed,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r190927252,190927252,src/wallet/rpcwallet.cpp
promag,2018-05-25T15:24:14Z,"```cpp\nstd::shared_ptr<CWallet> wallet = CWallet::CreateWalletFromFile(...);",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r190928812,190928812,src/wallet/rpcwallet.cpp
jnewbery,2018-05-25T16:12:32Z,Thanks promag. Rebased and fixed,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r190942185,190942185,src/wallet/rpcwallet.cpp
promag,2018-05-30T21:55:49Z,"nit, `can be created (and loaded) by calling ...`?",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r191935671,191935671,doc/release-notes-pr10740.md
ken2812221,2018-05-31T04:39:39Z,Are these `.dat` suffixes neccessary? It would create a folder named test.dat on my Windows PC.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r191987548,191987548,src/wallet/rpcwallet.cpp
MarcoFalke,2018-05-31T19:21:37Z,It seems confusing to call this `wallet_name` and instead accept also accept a path. Something in the named arg that indicates that this is a file would help. Also please make sure the doc string matches the named arg and then test for the name of the argument in the functional tests.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192209363,192209363,src/wallet/rpcwallet.cpp
MarcoFalke,2018-05-31T19:21:52Z,Same here,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192209448,192209448,src/wallet/rpcwallet.cpp
MarcoFalke,2018-05-31T19:23:19Z,Style-nit: Curly braces for multi-line-then statements,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192209818,192209818,src/wallet/rpcwallet.cpp
jnewbery,2018-05-31T20:55:10Z,Sure. Changed,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192234460,192234460,doc/release-notes-pr10740.md
jnewbery,2018-05-31T20:55:24Z,You're right. I've changed these to `testwallet`,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192234517,192234517,src/wallet/rpcwallet.cpp
jnewbery,2018-05-31T21:04:18Z,Changed.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192236937,192236937,src/wallet/rpcwallet.cpp
jnewbery,2018-05-31T21:11:02Z,"I can't think of a better argument name, so I've just updated the help text.",https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192238733,192238733,src/wallet/rpcwallet.cpp
jnewbery,2018-05-31T21:11:11Z,help text updated.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192238768,192238768,src/wallet/rpcwallet.cpp
jnewbery,2018-05-31T21:11:23Z,Also added a test to create a wallet using a full path.,https://github.com/bitcoin/bitcoin/pull/13058#discussion_r192238826,192238826,src/wallet/rpcwallet.cpp
