[
  {
    "sha": "9421317740a59110eba1576e2ee28dc4fe30e3cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDIxMzE3NzQwYTU5MTEwZWJhMTU3NmUyZWUyOGRjNGZlMzBlM2Ni",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-04-23T16:44:22Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-05-25T16:10:21Z"
      },
      "message": "[wallet] [rpc] Add `createwallet` RPC\n\nAdd a `createwallet` RPC to allow wallets to be created dynamically at\nruntime. This functionality is currently only available through RPC and\nnewly created wallets will not be displayed in the GUI.",
      "tree": {
        "sha": "d895363ac844de9acda94401d96d0e3518c67f9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d895363ac844de9acda94401d96d0e3518c67f9f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9421317740a59110eba1576e2ee28dc4fe30e3cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9421317740a59110eba1576e2ee28dc4fe30e3cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9421317740a59110eba1576e2ee28dc4fe30e3cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9421317740a59110eba1576e2ee28dc4fe30e3cb/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "610f4dd719ad690cde480b12665d2ba74284a826",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/610f4dd719ad690cde480b12665d2ba74284a826",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/610f4dd719ad690cde480b12665d2ba74284a826"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 47,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5fb0501c9996af72f88c7202a265c1d6f58e43a6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9421317740a59110eba1576e2ee28dc4fe30e3cb/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9421317740a59110eba1576e2ee28dc4fe30e3cb/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9421317740a59110eba1576e2ee28dc4fe30e3cb",
        "patch": "@@ -3114,6 +3114,52 @@ UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+UniValue createwallet(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"createwallet \\\"wallet_name\\\"\\n\"\n+            \"\\nCreates and loads a new wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"wallet_name\\\"    (string, required) The name for the new wallet.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"name\\\" :    <wallet_name>,        (string) The wallet name if created successfully.\\n\"\n+            \"  \\\"warning\\\" : <warning>,            (string) Warning message if wallet was not loaded cleanly.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"createwallet\", \"\\\"test.dat\\\"\")\n+            + HelpExampleRpc(\"createwallet\", \"\\\"test.dat\\\"\")\n+        );\n+    std::string wallet_name = request.params[0].get_str();\n+    std::string error;\n+    std::string warning;\n+\n+    fs::path wallet_path = fs::absolute(wallet_name, GetWalletDir());\n+    if (fs::symlink_status(wallet_path).type() != fs::file_not_found) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + wallet_name + \" already exists.\");\n+    }\n+\n+    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n+    if (!CWallet::Verify(wallet_name, false, error, warning)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n+    }\n+\n+    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(wallet_name, fs::absolute(wallet_name, GetWalletDir()));\n+    if (!wallet) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n+    }\n+    AddWallet(wallet);\n+\n+    wallet->postInitProcess();\n+\n+    UniValue obj(UniValue::VOBJ);\n+    obj.pushKV(\"name\", wallet->GetName());\n+    obj.pushKV(\"warning\", warning);\n+\n+    return obj;\n+}\n+\n static UniValue resendwallettransactions(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n@@ -4315,6 +4361,7 @@ static const CRPCCommand commands[] =\n     { \"hidden\",             \"addwitnessaddress\",                &addwitnessaddress,             {\"address\",\"p2sh\"} },\n     { \"wallet\",             \"backupwallet\",                     &backupwallet,                  {\"destination\"} },\n     { \"wallet\",             \"bumpfee\",                          &bumpfee,                       {\"txid\", \"options\"} },\n+    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"filename\"} },\n     { \"wallet\",             \"dumpprivkey\",                      &dumpprivkey,                   {\"address\"}  },\n     { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },"
      }
    ]
  },
  {
    "sha": "32167e8300894db700e8da2e066e3c0eeb1a293e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjE2N2U4MzAwODk0ZGI3MDBlOGRhMmUwNjZlM2MwZWViMWEyOTNl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-04-23T17:11:53Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-05-31T21:10:16Z"
      },
      "message": "[wallet] [tests] Add tests for `createwallet` RPC.",
      "tree": {
        "sha": "5d6b9b9a5de3f49cf4eb57896ff79869ad282e37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d6b9b9a5de3f49cf4eb57896ff79869ad282e37"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/32167e8300894db700e8da2e066e3c0eeb1a293e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32167e8300894db700e8da2e066e3c0eeb1a293e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/32167e8300894db700e8da2e066e3c0eeb1a293e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32167e8300894db700e8da2e066e3c0eeb1a293e/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9421317740a59110eba1576e2ee28dc4fe30e3cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9421317740a59110eba1576e2ee28dc4fe30e3cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9421317740a59110eba1576e2ee28dc4fe30e3cb"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "53638615f6c076b0082219ed41dc85ace0efe21a",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32167e8300894db700e8da2e066e3c0eeb1a293e/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32167e8300894db700e8da2e066e3c0eeb1a293e/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=32167e8300894db700e8da2e066e3c0eeb1a293e",
        "patch": "@@ -211,5 +211,28 @@ def run_test(self):\n         # Fail to load if wallet file is a symlink\n         assert_raises_rpc_error(-4, \"Wallet file verification failed: Invalid -wallet path 'w8_symlink'\", self.nodes[0].loadwallet, 'w8_symlink')\n \n+        self.log.info(\"Test dynamic wallet creation.\")\n+\n+        # Fail to create a wallet if it already exists.\n+        assert_raises_rpc_error(-4, \"Wallet w2 already exists.\", self.nodes[0].createwallet, 'w2')\n+\n+        # Successfully create a wallet with a new name\n+        loadwallet_name = self.nodes[0].createwallet('w9')\n+        assert_equal(loadwallet_name['name'], 'w9')\n+        w9 = node.get_wallet_rpc('w9')\n+        assert_equal(w9.getwalletinfo()['walletname'], 'w9')\n+\n+        assert 'w9' in self.nodes[0].listwallets()\n+\n+        # Successfully create a wallet using a full path\n+        new_wallet_dir = os.path.join(self.options.tmpdir, 'new_walletdir')\n+        new_wallet_name = os.path.join(new_wallet_dir, 'w10')\n+        loadwallet_name = self.nodes[0].createwallet(new_wallet_name)\n+        assert_equal(loadwallet_name['name'], new_wallet_name)\n+        w10 = node.get_wallet_rpc(new_wallet_name)\n+        assert_equal(w10.getwalletinfo()['walletname'], new_wallet_name)\n+\n+        assert new_wallet_name in self.nodes[0].listwallets()\n+\n if __name__ == '__main__':\n     MultiWalletTest().main()"
      }
    ]
  },
  {
    "sha": "f7e153e95f08e662427e8e4abcac8f53ab58281b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2UxNTNlOTVmMDhlNjYyNDI3ZThlNGFiY2FjOGY1M2FiNTgyODFi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-04-23T17:14:34Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-05-31T21:10:20Z"
      },
      "message": "[wallets] [docs] Add release notes for createwallet RPC.",
      "tree": {
        "sha": "b25746903d8976438e61c275e32138a2989eb29e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b25746903d8976438e61c275e32138a2989eb29e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7e153e95f08e662427e8e4abcac8f53ab58281b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7e153e95f08e662427e8e4abcac8f53ab58281b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7e153e95f08e662427e8e4abcac8f53ab58281b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7e153e95f08e662427e8e4abcac8f53ab58281b/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "32167e8300894db700e8da2e066e3c0eeb1a293e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32167e8300894db700e8da2e066e3c0eeb1a293e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/32167e8300894db700e8da2e066e3c0eeb1a293e"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 13,
      "deletions": 11
    },
    "files": [
      {
        "sha": "c81ea6a4db4e2c338bffd0537b2d262f38e859dc",
        "filename": "doc/release-notes-pr10740.md",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7e153e95f08e662427e8e4abcac8f53ab58281b/doc/release-notes-pr10740.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7e153e95f08e662427e8e4abcac8f53ab58281b/doc/release-notes-pr10740.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr10740.md?ref=f7e153e95f08e662427e8e4abcac8f53ab58281b",
        "patch": "@@ -1,8 +1,9 @@\n-Dynamic loading of wallets\n---------------------------\n+Dynamic loading and creation of wallets\n+---------------------------------------\n \n-Previously, wallets could only be loaded at startup, by specifying `-wallet` parameters on the command line or in the bitcoin.conf file. It is now possible to load wallets dynamically at runtime by calling the `loadwallet` RPC.\n+Previously, wallets could only be loaded or created at startup, by specifying `-wallet` parameters on the command line or in the bitcoin.conf file. It is now possible to load and create wallets dynamically at runtime:\n \n-The wallet can be specified as file/directory basename (which must be located in the `walletdir` directory), or as an absolute path to a file/directory.\n+- Existing wallets can be loaded by calling the `loadwallet` RPC. The wallet can be specified as file/directory basename (which must be located in the `walletdir` directory), or as an absolute path to a file/directory.\n+- New wallets can be created (and loaded) by calling the `createwallet` RPC. The provided name must not match a wallet file in the `walletdir` directory or the name of a wallet that is currently loaded.\n \n-This feature is currently only available through the RPC interface. Wallets loaded in this way will display in the bitcoin-qt GUI.\n+This feature is currently only available through the RPC interface."
      },
      {
        "sha": "456f08bc14b15bd908c9b5c25bfcf2808b42ad82",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7e153e95f08e662427e8e4abcac8f53ab58281b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7e153e95f08e662427e8e4abcac8f53ab58281b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=f7e153e95f08e662427e8e4abcac8f53ab58281b",
        "patch": "@@ -3116,21 +3116,22 @@ UniValue loadwallet(const JSONRPCRequest& request)\n \n UniValue createwallet(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 1)\n+    if (request.fHelp || request.params.size() != 1) {\n         throw std::runtime_error(\n             \"createwallet \\\"wallet_name\\\"\\n\"\n             \"\\nCreates and loads a new wallet.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"wallet_name\\\"    (string, required) The name for the new wallet.\\n\"\n+            \"1. \\\"wallet_name\\\"    (string, required) The name for the new wallet. If this is a path, the wallet will be created at the path location.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"name\\\" :    <wallet_name>,        (string) The wallet name if created successfully.\\n\"\n+            \"  \\\"name\\\" :    <wallet_name>,        (string) The wallet name if created successfully. If the wallet was created using a full path, the wallet_name will be the full path.\\n\"\n             \"  \\\"warning\\\" : <warning>,            (string) Warning message if wallet was not loaded cleanly.\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"createwallet\", \"\\\"test.dat\\\"\")\n-            + HelpExampleRpc(\"createwallet\", \"\\\"test.dat\\\"\")\n+            + HelpExampleCli(\"createwallet\", \"\\\"testwallet\\\"\")\n+            + HelpExampleRpc(\"createwallet\", \"\\\"testwallet\\\"\")\n         );\n+    }\n     std::string wallet_name = request.params[0].get_str();\n     std::string error;\n     std::string warning;\n@@ -4361,7 +4362,7 @@ static const CRPCCommand commands[] =\n     { \"hidden\",             \"addwitnessaddress\",                &addwitnessaddress,             {\"address\",\"p2sh\"} },\n     { \"wallet\",             \"backupwallet\",                     &backupwallet,                  {\"destination\"} },\n     { \"wallet\",             \"bumpfee\",                          &bumpfee,                       {\"txid\", \"options\"} },\n-    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"filename\"} },\n+    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"wallet_name\"} },\n     { \"wallet\",             \"dumpprivkey\",                      &dumpprivkey,                   {\"address\"}  },\n     { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },"
      }
    ]
  }
]