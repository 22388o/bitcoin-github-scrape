gavinandresen,2012-09-17T19:40:11Z,"My primary interest is neither simple code nor faster code. It is secure, backwards-compatible code.\n\nGiven the level of scrutiny the existing bitcoin codebase has had so far, I am very reluctant to commit changes to core code unless the benefits of the changes clearly outweigh the risks that the changes will have unintended side effects or open up new security holes.\n\nThat's not a ""no"" for th",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-8628118,8628118,
BitcoinPullTester,2012-09-18T00:46:30Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/80173de16776c468b187348f74cd16245c3e0416 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-8636113,8636113,
laanwj,2012-09-18T06:25:03Z,"I'm divided on this one. Some changes do make the code shorter and easier to read / more maintainable, others are somewhat more doubtful shortcuts made for speed.\n\nBut for example reducing the borderline-crazy loop in DecodeBase58 to:\n\n```\nwhile ((v = pszRBase58[*p]) >= 0)\n {\n    bn *= 58;\n    bn += v;\n    p++;\n }\n```\n\nis a pretty nice feat.\n\nIs there a usecase for fast base58?\n\nB",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-8642819,8642819,
roques,2012-09-19T08:16:12Z,Thanks for the reviews!  Based on them I've pushed some improvements.\n- added a comment explaining base58-encoding and how leading 0-bytes are encoded to preserve them. (btw. should it be `base-58` or `base58` in comments?)\n- corrected Hungarian notation of `pszRBase58` to `rgi8RBase58` and declared it `const` (Is there a style guide?  I'm unsure when it's OK not to use Hungarian notation)\n- sy,https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-8683878,8683878,
roques,2012-09-19T09:40:30Z,"""Wladimir J. van der Laan"" notifications@github.com writes:\n\n> Is there a usecase for fast base58?\n\nNot directly in bitcoind, unless the RPC-interface gets used heavily.\nHowever, https://bitcointalk.org/index.php?topic=88584.msg975993#msg975993\nmentions that it is a CPU hog and uses code, which due to some of its\nremaining quirks seems to be derived from Satoshi's implementation.\n\n```\nCh",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-8685694,8685694,
BitcoinPullTester,2012-09-20T20:47:19Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8a4bff050503b75c35ad3acd08d78be18c6b3da6 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-8744986,8744986,
luke-jr,2012-11-13T05:58:15Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-10316636,10316636,
roques,2012-11-13T20:12:26Z,Rebased on `master` as of a few minutes ago.\n,https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-10341556,10341556,
sipa,2012-11-14T10:01:29Z,"I do appreciate the readability of the code, and to a lesser extent the possibility for optimization. But it seems you're trying to bypass CBigNum wherever possible, directly calling OpenSSL routines. I agree CBigNum is only a thin wrapper, though, so perhaps we should see it as ""C++ interface for OpenSSL's bn"" and not ""abstract C++ bignum type"".\n",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-10360827,10360827,
jgarzik,2012-11-16T02:38:39Z,agree w/ @sipa \n,https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-10434714,10434714,
BitcoinPullTester,2012-11-24T22:57:05Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/eb7000f6e5be6cbc9b238bdd781ecb25496152ca for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-10684861,10684861,
gavinandresen,2013-01-14T20:01:59Z,"Closing this as ""risks outweigh benefits""\n",https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-12236808,12236808,
luke-jr,2013-07-22T06:20:24Z,Might be good to dig the tests out of this at least.\n,https://github.com/bitcoin/bitcoin/pull/1828#issuecomment-21326514,21326514,
