[
  {
    "sha": "8ed9c48f4ddc611480b5c681497ab363740f2bf8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWQ5YzQ4ZjRkZGM2MTE0ODBiNWM2ODE0OTdhYjM2Mzc0MGYyYmY4",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-11T10:05:35Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-11-13T18:34:41Z"
      },
      "message": "EncodeBase58: don't convert little- to big-endian just to undo it",
      "tree": {
        "sha": "c8eccbebc804669f78683da13606c7798d0fc6bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8eccbebc804669f78683da13606c7798d0fc6bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ed9c48f4ddc611480b5c681497ab363740f2bf8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ed9c48f4ddc611480b5c681497ab363740f2bf8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ed9c48f4ddc611480b5c681497ab363740f2bf8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ed9c48f4ddc611480b5c681497ab363740f2bf8/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2b12807d04e981d0a252cbda6ba80c87a809d6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2b12807d04e981d0a252cbda6ba80c87a809d6e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2b12807d04e981d0a252cbda6ba80c87a809d6e"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "04ea9d401c6aaf73621a4c8c860983e9357517dc",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ed9c48f4ddc611480b5c681497ab363740f2bf8/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ed9c48f4ddc611480b5c681497ab363740f2bf8/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=8ed9c48f4ddc611480b5c681497ab363740f2bf8",
        "patch": "@@ -32,14 +32,9 @@ inline std::string EncodeBase58(const unsigned char* pbegin, const unsigned char\n     CBigNum bn58 = 58;\n     CBigNum bn0 = 0;\n \n-    // Convert big endian data to little endian\n-    // Extra zero at the end make sure bignum will interpret as a positive number\n-    std::vector<unsigned char> vchTmp(pend-pbegin+1, 0);\n-    reverse_copy(pbegin, pend, vchTmp.begin());\n-\n-    // Convert little endian data to bignum\n+    // Convert big endian data to bignum\n     CBigNum bn;\n-    bn.setvch(vchTmp);\n+    BN_bin2bn(pbegin, pend - pbegin, &bn);\n \n     // Convert bignum to std::string\n     std::string str;"
      }
    ]
  },
  {
    "sha": "1d34bb345f65bd6c71104e73199669ff1908f005",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDM0YmIzNDVmNjViZDZjNzExMDRlNzMxOTk2NjlmZjE5MDhmMDA1",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-16T19:07:42Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-11-13T18:34:41Z"
      },
      "message": "CBigNum: use BN_foo_word() where possible",
      "tree": {
        "sha": "4abd414879684d8ec6561a5a96d2c977853cb9ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4abd414879684d8ec6561a5a96d2c977853cb9ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d34bb345f65bd6c71104e73199669ff1908f005",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d34bb345f65bd6c71104e73199669ff1908f005",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d34bb345f65bd6c71104e73199669ff1908f005",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d34bb345f65bd6c71104e73199669ff1908f005/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ed9c48f4ddc611480b5c681497ab363740f2bf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ed9c48f4ddc611480b5c681497ab363740f2bf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ed9c48f4ddc611480b5c681497ab363740f2bf8"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 44,
      "deletions": 10
    },
    "files": [
      {
        "sha": "decc5b91e72f7c817f4ec7e841102d491a6275d2",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 44,
        "deletions": 10,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d34bb345f65bd6c71104e73199669ff1908f005/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d34bb345f65bd6c71104e73199669ff1908f005/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=1d34bb345f65bd6c71104e73199669ff1908f005",
        "patch": "@@ -380,12 +380,26 @@ class CBigNum : public BIGNUM\n         return *this;\n     }\n \n+    CBigNum& operator+=(const BN_ULONG b)\n+    {\n+        if (!BN_add_word(this, b))\n+            throw bignum_error(\"CBigNum::operator+= : BN_add_word failed\");\n+        return *this;\n+    }\n+\n     CBigNum& operator-=(const CBigNum& b)\n     {\n         *this = *this - b;\n         return *this;\n     }\n \n+    CBigNum& operator-=(const BN_ULONG b)\n+    {\n+        if (!BN_sub_word(this, b))\n+            throw bignum_error(\"CBigNum::operator-= : BN_sub_word failed\");\n+        return *this;\n+    }\n+\n     CBigNum& operator*=(const CBigNum& b)\n     {\n         CAutoBN_CTX pctx;\n@@ -394,18 +408,42 @@ class CBigNum : public BIGNUM\n         return *this;\n     }\n \n+    CBigNum& operator*=(const BN_ULONG b)\n+    {\n+        if (!BN_mul_word(this, b))\n+            throw bignum_error(\"CBigNum::operator*= : BN_mul_word failed\");\n+        return *this;\n+    }\n+\n     CBigNum& operator/=(const CBigNum& b)\n     {\n         *this = *this / b;\n         return *this;\n     }\n \n+    CBigNum& operator/=(const BN_ULONG b)\n+    {\n+        BN_ULONG r = BN_div_word(this, b);\n+        if (r == (BN_ULONG)-1)\n+            throw bignum_error(\"CBigNum::operator/= : BN_div_word failed\");\n+        return *this;\n+    }\n+\n     CBigNum& operator%=(const CBigNum& b)\n     {\n         *this = *this % b;\n         return *this;\n     }\n \n+    CBigNum& operator%=(const BN_ULONG b)\n+    {\n+        BN_ULONG r = BN_mod_word(this, b);\n+        if (r == (BN_ULONG)-1)\n+            throw bignum_error(\"CBigNum::operator%= : BN_mod_word failed\");\n+        BN_set_word(this, r);\n+        return *this;\n+    }\n+\n     CBigNum& operator<<=(unsigned int shift)\n     {\n         if (!BN_lshift(this, this, shift))\n@@ -417,11 +455,9 @@ class CBigNum : public BIGNUM\n     {\n         // Note: BN_rshift segfaults on 64-bit if 2^shift is greater than the number\n         //   if built on ubuntu 9.04 or 9.10, probably depends on version of OpenSSL\n-        CBigNum a = 1;\n-        a <<= shift;\n-        if (BN_cmp(&a, this) > 0)\n+        if ((int)shift >= BN_num_bits(this))\n         {\n-            *this = 0;\n+            BN_zero(this);\n             return *this;\n         }\n \n@@ -434,8 +470,8 @@ class CBigNum : public BIGNUM\n     CBigNum& operator++()\n     {\n         // prefix operator\n-        if (!BN_add(this, this, BN_value_one()))\n-            throw bignum_error(\"CBigNum::operator++ : BN_add failed\");\n+        if (!BN_add_word(this, 1))\n+            throw bignum_error(\"CBigNum::operator++ : BN_add_word failed\");\n         return *this;\n     }\n \n@@ -450,10 +486,8 @@ class CBigNum : public BIGNUM\n     CBigNum& operator--()\n     {\n         // prefix operator\n-        CBigNum r;\n-        if (!BN_sub(&r, this, BN_value_one()))\n-            throw bignum_error(\"CBigNum::operator-- : BN_sub failed\");\n-        *this = r;\n+        if (!BN_sub_word(this, 1))\n+            throw bignum_error(\"CBigNum::operator-- : BN_sub_word failed\");\n         return *this;\n     }\n "
      }
    ]
  },
  {
    "sha": "749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDllODk4YjcwYzU4ZTJkYmRmNWQzMzBhZDRhYjViNmIxYTdkZTQw",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-19T07:31:15Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-11-13T19:28:57Z"
      },
      "message": "add test of DecodeBase58 skipping whitespace",
      "tree": {
        "sha": "955abb6cf5d9404a19bf78c48ff7d1f58b205c44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/955abb6cf5d9404a19bf78c48ff7d1f58b205c44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d34bb345f65bd6c71104e73199669ff1908f005",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d34bb345f65bd6c71104e73199669ff1908f005",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d34bb345f65bd6c71104e73199669ff1908f005"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0c51e4f69b572e8003920861bb9883695a6dd4b3",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40",
        "patch": "@@ -55,6 +55,12 @@ BOOST_AUTO_TEST_CASE(base58_DecodeBase58)\n     }\n \n     BOOST_CHECK(!DecodeBase58(\"invalid\", result));\n+\n+    // check that DecodeBase58 skips whitespace, but still fails with unexpected non-whitespace at the end.\n+    BOOST_CHECK(!DecodeBase58(\" \\t\\n\\v\\f\\r skip \\r\\f\\v\\n\\t a\", result));\n+    BOOST_CHECK( DecodeBase58(\" \\t\\n\\v\\f\\r skip \\r\\f\\v\\n\\t \", result));\n+    std::vector<unsigned char> expected = ParseHex(\"971a55\");\n+    BOOST_CHECK_EQUAL_COLLECTIONS(result.begin(), result.end(), expected.begin(), expected.end());\n }\n \n // Visitor to check address type"
      }
    ]
  },
  {
    "sha": "7cb83a08c669ff6fcde772aabade4148f09a02c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2I4M2EwOGM2NjlmZjZmY2RlNzcyYWFiYWRlNDE0OGYwOWEwMmM3",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-19T07:32:07Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-11-13T19:33:23Z"
      },
      "message": "reimplement De-/En-codeBase58()\n\n* Make use of faster word-sized bignum operators.\n* Use table-lookup instead of linear search to\n  find the value of a base58-digit.\n* Explain base-58 encoding",
      "tree": {
        "sha": "9ec0f4971da0bacb8ba291005fefda65136a5d35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ec0f4971da0bacb8ba291005fefda65136a5d35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7cb83a08c669ff6fcde772aabade4148f09a02c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cb83a08c669ff6fcde772aabade4148f09a02c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7cb83a08c669ff6fcde772aabade4148f09a02c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cb83a08c669ff6fcde772aabade4148f09a02c7/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/749e898b70c58e2dbdf5d330ad4ab5b6b1a7de40"
      }
    ],
    "stats": {
      "total": 150,
      "additions": 95,
      "deletions": 55
    },
    "files": [
      {
        "sha": "0eba2e19275b2bc8e3b3f76f985d9ec8ba70a951",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 95,
        "deletions": 55,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cb83a08c669ff6fcde772aabade4148f09a02c7/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cb83a08c669ff6fcde772aabade4148f09a02c7/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=7cb83a08c669ff6fcde772aabade4148f09a02c7",
        "patch": "@@ -12,6 +12,18 @@\n // - E-mail usually won't line-break if there's no punctuation to break at.\n // - Double-clicking selects the whole number as one word if it's all alphanumeric.\n //\n+// This base-58 codec encodes a sequence of bytes, not just a big-endian number.\n+// The difference is that we preserve the exact number of leading 0 bytes.\n+// Each leading zero is represented by a leading 0-value base-58 digit ('1').\n+// The remaining bytes, starting from the first non-zero byte, are then interpreted\n+// as a big-endian binary number and converted into a big-endian base-58 number.\n+//\n+// Example:\n+// base-58 encoded:  \"127\"  ==  binary: 0x00 0x40\n+// \"1\" leading 0-byte --------------------^^   ^^\n+// \"2\" 1-valued base-58 digit ----> 1*58 + 6 = 64\n+// \"7\" 6-valued base-58 digit -------------^\n+//\n #ifndef BITCOIN_BASE58_H\n #define BITCOIN_BASE58_H\n \n@@ -28,36 +40,33 @@ static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnop\n // Encode a byte sequence as a base58-encoded string\n inline std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n-    CAutoBN_CTX pctx;\n-    CBigNum bn58 = 58;\n-    CBigNum bn0 = 0;\n+    const unsigned char* p;\n+\n+    // Convert bignum to std::string\n+    std::string str;\n+    // Expected size increase from base58 conversion is log(256)/log(58) approximately 1.36566\n+    // use 350/256 to be safe\n+    str.reserve(((pend - pbegin) * 350) / 256 + 1);\n+\n+    // Leading zeros encoded as base58 zeros\n+    for (p = pbegin; p < pend && *p == 0; p++)\n+        str += pszBase58[0];\n+    ptrdiff_t nLeadingZeros = p - pbegin;\n \n     // Convert big endian data to bignum\n     CBigNum bn;\n-    BN_bin2bn(pbegin, pend - pbegin, &bn);\n+    BN_bin2bn(p, pend - p, &bn);\n \n-    // Convert bignum to std::string\n-    std::string str;\n-    // Expected size increase from base58 conversion is approximately 137%\n-    // use 138% to be safe\n-    str.reserve((pend - pbegin) * 138 / 100 + 1);\n-    CBigNum dv;\n-    CBigNum rem;\n-    while (bn > bn0)\n+    while (!!bn)\n     {\n-        if (!BN_div(&dv, &rem, &bn, &bn58, pctx))\n-            throw bignum_error(\"EncodeBase58 : BN_div failed\");\n-        bn = dv;\n-        unsigned int c = rem.getulong();\n-        str += pszBase58[c];\n+        BN_ULONG rem = BN_div_word(&bn, 58);\n+        if (rem == (BN_ULONG) -1)\n+            throw bignum_error(\"EncodeBase58 : BN_div_word failed\");\n+        str += pszBase58[rem];\n     }\n \n-    // Leading zeroes encoded as base58 zeros\n-    for (const unsigned char* p = pbegin; p < pend && *p == 0; p++)\n-        str += pszBase58[0];\n-\n-    // Convert little endian std::string to big endian\n-    reverse(str.begin(), str.end());\n+    // Convert little endian std::string after leading zeros to big endian\n+    reverse(str.begin() + nLeadingZeros, str.end());\n     return str;\n }\n \n@@ -71,47 +80,78 @@ inline std::string EncodeBase58(const std::vector<unsigned char>& vch)\n // returns true if decoding is successful\n inline bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet)\n {\n-    CAutoBN_CTX pctx;\n-    vchRet.clear();\n-    CBigNum bn58 = 58;\n+    // use unsigned char as array index\n+    const unsigned char* p = (const unsigned char*)psz;\n     CBigNum bn = 0;\n-    CBigNum bnChar;\n-    while (isspace(*psz))\n-        psz++;\n+\n+    // map base58 digit to number, BAD, or SPACE\n+    enum RBASE58 {\n+        // 0 .. 57\t\t\t// base58 digit of value 0 .. 57\n+        RBASE58_BAD   = -1,\t\t// neither base58, nor white space\n+        RBASE58_SPACE = -2\t\t// space, tab, newline, vtab, form feed, carriage return\n+    };\n+    static const signed char rgi8RBase58[256] =\n+        {-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1, 0, 1, 2, 3, 4, 5, 6, 7, 8,-1,-1,-1,-1,-1,-1,\n+         -1, 9,10,11,12,13,14,15,16,-1,17,18,19,20,21,-1,\n+         22,23,24,25,26,27,28,29,30,31,32,-1,-1,-1,-1,-1,\n+         -1,33,34,35,36,37,38,39,40,41,42,43,-1,44,45,46,\n+         47,48,49,50,51,52,53,54,55,56,57,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n+         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 };\n+\n+    // The above initializer was calculated using:\n+    //    memset(rgi8RBase58, RBASE58_BAD, 256);\n+    //    rgi8RBase58[' ']  = RBASE58_SPACE;\n+    //    rgi8RBase58['\\t'] = RBASE58_SPACE;\n+    //    rgi8RBase58['\\n'] = RBASE58_SPACE;\n+    //    rgi8RBase58['\\v'] = RBASE58_SPACE;\n+    //    rgi8RBase58['\\f'] = RBASE58_SPACE;\n+    //    rgi8RBase58['\\r'] = RBASE58_SPACE;\n+    //\n+    //    for (int i = 0; i < 58; i++)\n+    //        rgi8RBase58[(unsigned char)pszBase58[i]] = i;\n+\n+    // Skip whitespace\n+    while (rgi8RBase58[*p] == RBASE58_SPACE)\n+        p++;\n+\n+    // Count leading zeros\n+    int nLeadingZeros;\n+    for (nLeadingZeros = 0; *p == pszBase58[0]; p++)\n+        nLeadingZeros++;\n \n     // Convert big endian string to bignum\n-    for (const char* p = psz; *p; p++)\n+    int v;\n+    while ((v = rgi8RBase58[*p]) >= 0)\n     {\n-        const char* p1 = strchr(pszBase58, *p);\n-        if (p1 == NULL)\n-        {\n-            while (isspace(*p))\n-                p++;\n-            if (*p != '\\0')\n-                return false;\n-            break;\n-        }\n-        bnChar.setulong(p1 - pszBase58);\n-        if (!BN_mul(&bn, &bn, &bn58, pctx))\n-            throw bignum_error(\"DecodeBase58 : BN_mul failed\");\n-        bn += bnChar;\n+        bn *= 58;\n+        bn += v;\n+        p++;\n     }\n \n-    // Get bignum as little endian data\n-    std::vector<unsigned char> vchTmp = bn.getvch();\n+    // Skip whitespace after base58 string\n+    while (rgi8RBase58[*p] == RBASE58_SPACE)\n+        p++;\n \n-    // Trim off sign byte if present\n-    if (vchTmp.size() >= 2 && vchTmp.end()[-1] == 0 && vchTmp.end()[-2] >= 0x80)\n-        vchTmp.erase(vchTmp.end()-1);\n+    // Fail if there is junk at the end\n+    if (*p != '\\0')\n+        return false;\n \n-    // Restore leading zeros\n-    int nLeadingZeros = 0;\n-    for (const char* p = psz; *p == pszBase58[0]; p++)\n-        nLeadingZeros++;\n-    vchRet.assign(nLeadingZeros + vchTmp.size(), 0);\n+    // Fill in leading zeros and make space for bn\n+    vchRet.assign(nLeadingZeros + BN_num_bytes(&bn), 0);\n+\n+    // Fill big endian bn into the right place\n+    BN_bn2bin(&bn, &vchRet[nLeadingZeros]);\n \n-    // Convert little endian data to big endian\n-    reverse_copy(vchTmp.begin(), vchTmp.end(), vchRet.end() - vchTmp.size());\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "eb7000f6e5be6cbc9b238bdd781ecb25496152ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjcwMDBmNmU1YmU2Y2JjOWIyMzhiZGQ3ODFlY2IyNTQ5NjE1MmNh",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-17T17:44:04Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-11-13T19:33:33Z"
      },
      "message": "optimize De-/En-codeBase58()\n\nConvert chunks of digits at a time.\nBigger, but still readable code,\nAdditional speedup ~4.5",
      "tree": {
        "sha": "a8f55b6e1ca0c0a48ecaacd4e179fe8a40299d1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8f55b6e1ca0c0a48ecaacd4e179fe8a40299d1c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb7000f6e5be6cbc9b238bdd781ecb25496152ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb7000f6e5be6cbc9b238bdd781ecb25496152ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb7000f6e5be6cbc9b238bdd781ecb25496152ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb7000f6e5be6cbc9b238bdd781ecb25496152ca/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7cb83a08c669ff6fcde772aabade4148f09a02c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cb83a08c669ff6fcde772aabade4148f09a02c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7cb83a08c669ff6fcde772aabade4148f09a02c7"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 46,
      "deletions": 5
    },
    "files": [
      {
        "sha": "663ac07e26448219a86ff89d5994d9db5c62d284",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 46,
        "deletions": 5,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb7000f6e5be6cbc9b238bdd781ecb25496152ca/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb7000f6e5be6cbc9b238bdd781ecb25496152ca/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=eb7000f6e5be6cbc9b238bdd781ecb25496152ca",
        "patch": "@@ -37,6 +37,14 @@\n \n static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n \n+// We convert in chunks of BASE58_CHUNK_DIGITS base-58 digits.\n+// BASE58_CHUNK_DIGITS is the maximum number of base-58 digits fitting into a BN_ULONG.\n+// BASE58_CHUNK_MOD is pow(58, BASE58_CHUNK_DIGITS)\n+enum {\n+    BASE58_CHUNK_DIGITS = (sizeof(BN_ULONG) == 8 ? 10 : 5),\n+    BASE58_CHUNK_MOD    = (sizeof(BN_ULONG) == 8 ? 0x5fa8624c7fba400ULL : 0x271f35a0ULL), // 58^10 : 58^5\n+};\n+\n // Encode a byte sequence as a base58-encoded string\n inline std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n@@ -57,12 +65,24 @@ inline std::string EncodeBase58(const unsigned char* pbegin, const unsigned char\n     CBigNum bn;\n     BN_bin2bn(p, pend - p, &bn);\n \n-    while (!!bn)\n+    BN_ULONG rem;\n+    while (1)\n     {\n-        BN_ULONG rem = BN_div_word(&bn, 58);\n+        rem = BN_div_word(&bn, BASE58_CHUNK_MOD);\n         if (rem == (BN_ULONG) -1)\n             throw bignum_error(\"EncodeBase58 : BN_div_word failed\");\n-        str += pszBase58[rem];\n+        if (!bn)\n+            break;\t\t// Not a full chunk\n+        for (int i = 0; i < BASE58_CHUNK_DIGITS; i++)\n+        {\n+            str += pszBase58[rem % 58];\n+            rem /= 58;\n+        }\n+    }\n+    while (rem != 0)\n+    {\n+        str += pszBase58[rem % 58];\n+        rem /= 58;\n     }\n \n     // Convert little endian std::string after leading zeros to big endian\n@@ -130,13 +150,34 @@ inline bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet)\n         nLeadingZeros++;\n \n     // Convert big endian string to bignum\n+    // We accumulate digits in acc and count them\n+    BN_ULONG acc = 0;\n+    int nDigits = 0;\n     int v;\n     while ((v = rgi8RBase58[*p]) >= 0)\n     {\n-        bn *= 58;\n-        bn += v;\n+        acc *= 58;\n+        acc += v;\n+        nDigits++;\n+        if (nDigits == BASE58_CHUNK_DIGITS)\n+        {\n+            // push accumulated digits into bn\n+            bn *= BASE58_CHUNK_MOD;\n+            bn += acc;\n+            acc = 0;\n+            nDigits = 0;\n+        }\n         p++;\n     }\n+    // push remaining digits\n+    if (nDigits > 0)\n+    {\n+        BN_ULONG mul = 58;\n+        while (--nDigits > 0)\n+            mul *= 58;\n+        bn *= mul;\n+        bn += acc;\n+    }\n \n     // Skip whitespace after base58 string\n     while (rgi8RBase58[*p] == RBASE58_SPACE)"
      }
    ]
  }
]