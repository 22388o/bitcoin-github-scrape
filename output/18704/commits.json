[
  {
    "sha": "fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWMyZmM0ZGQ4YTI4Yjk5ZTE3YzU3ZTRhYjY1ODBhMzIzMWYxZDBh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-19T12:47:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-19T12:40:20Z"
      },
      "message": "test: Increase debugging to hunt down mempool_reorg intermittent failure",
      "tree": {
        "sha": "7b462f43dcc89499e2725e4555ea1df358d8277f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b462f43dcc89499e2725e4555ea1df358d8277f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhETQwAip7cWHnzqmcSdQxQzfit/ibuoLKupvUyJ6cBBg7v1Xd8kGGqNRLxAq3d\nwRB6cNF8iWXnV8YnOp1uGahzc/o6o+u4zShzHfKT4lwBnvzEQrBQNbrm5RcaF5J6\neCcDKRaX8BUf1yH9Njy2mEh3bTssEZmLHkNXY9I77GQjmmAGTkAAOYKyqOe23DQx\nRiQKs3k1KVVP/pRpouHVcSn9MRNUSxvRg18lVLzqZKEESk+zAjz0YjeaMTbbQBmu\nFQk72WjX3vz4t3NMhSTKvGnGhb71BfkX6enT9mdx6qtIEAerJu3r84jVuUE51RpU\nSckWazL/6ShsF12LJQdjmtT0eDL+NxpDJtsOqiTA2+HVC61qoZWPPln6qQXzGROV\n4ueuJOhydeFgyTMQe7gQvDYY/QqVpiF16yQZQHsFDfw2Z4qzRf8NJFW84/+ZQRel\nLrZKMUHaHTuzLOHZtcIrHhCytboQeh0lhGpCjtYvOZ7rdByEmNrdeDBN1dw+HfcE\nXshx5nw3\n=TxhM\n-----END PGP SIGNATURE-----",
        "payload": "tree 7b462f43dcc89499e2725e4555ea1df358d8277f\nparent b470c758470fd97ccb42d0348a32942afa2a3ec8\nauthor MarcoFalke <falke.marco@gmail.com> 1587300476 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587300020 -0400\n\ntest: Increase debugging to hunt down mempool_reorg intermittent failure\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b470c758470fd97ccb42d0348a32942afa2a3ec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b470c758470fd97ccb42d0348a32942afa2a3ec8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b470c758470fd97ccb42d0348a32942afa2a3ec8"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "2d23343fd5744b7e0cd60349219664a460a1bdb9",
        "filename": "test/functional/mempool_reorg.py",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a/test/functional/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a/test/functional/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_reorg.py?ref=fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a",
        "patch": "@@ -20,8 +20,6 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n-    alert_filename = None  # Set by setup_network\n-\n     def run_test(self):\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n@@ -76,9 +74,8 @@ def run_test(self):\n         spend_101_id = self.nodes[0].sendrawtransaction(spend_101_raw)\n         spend_102_1_id = self.nodes[0].sendrawtransaction(spend_102_1_raw)\n \n-        self.sync_all(timeout=720)\n-\n         assert_equal(set(self.nodes[0].getrawmempool()), {spend_101_id, spend_102_1_id, timelock_tx_id})\n+        self.sync_all()\n \n         for node in self.nodes:\n             node.invalidateblock(last_block[0])\n@@ -91,10 +88,9 @@ def run_test(self):\n         for node in self.nodes:\n             node.invalidateblock(new_blocks[0])\n \n-        self.sync_all(timeout=720)\n-\n         # mempool should be empty.\n         assert_equal(set(self.nodes[0].getrawmempool()), set())\n+        self.sync_all()\n \n \n if __name__ == '__main__':"
      },
      {
        "sha": "64e1aa3bbcf5751389e469e4e0ef1726013c99de",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fac2fc4dd8a28b99e17c57e4ab6580a3231f1d0a",
        "patch": "@@ -410,7 +410,10 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         # Check that each peer has at least one connection\n         assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\n         time.sleep(wait)\n-    raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n+    raise AssertionError(\"Block sync timed out after {}s:{}\".format(\n+        timeout,\n+        \"\".join(\"\\n  {!r}\".format(b) for b in best_hash),\n+    ))\n \n \n def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n@@ -429,11 +432,16 @@ def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n         # Check that each peer has at least one connection\n         assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\n         time.sleep(wait)\n-    raise AssertionError(\"Mempool sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(m) for m in pool)))\n+    raise AssertionError(\"Mempool sync timed out after {}s:{}\".format(\n+        timeout,\n+        \"\".join(\"\\n  {!r}\".format(m) for m in pool),\n+    ))\n+\n \n # Transaction/Block functions\n #############################\n \n+\n def find_output(node, txid, amount, *, blockhash=None):\n     \"\"\"\n     Return index to output of txid with value amount"
      }
    ]
  }
]