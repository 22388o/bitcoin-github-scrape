[
  {
    "sha": "bbd79180d5473ff22b001ee65153248f7dd55734",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmQ3OTE4MGQ1NDczZmYyMmIwMDFlZTY1MTUzMjQ4ZjdkZDU1NzM0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-13T13:02:30Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-02-11T08:43:02Z"
      },
      "message": "util: Move AdditionOverflow(...) to new file src/util/overflow.h",
      "tree": {
        "sha": "4de7751c92a17aa335e017a7d708739e34bb2bec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4de7751c92a17aa335e017a7d708739e34bb2bec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbd79180d5473ff22b001ee65153248f7dd55734",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbd79180d5473ff22b001ee65153248f7dd55734",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbd79180d5473ff22b001ee65153248f7dd55734",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbd79180d5473ff22b001ee65153248f7dd55734/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b69eab9025678654acd0dda1861152c239f07699",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b69eab9025678654acd0dda1861152c239f07699",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b69eab9025678654acd0dda1861152c239f07699"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 30,
      "deletions": 11
    },
    "files": [
      {
        "sha": "933ba2456a1695937b4390552a8680de31eab972",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbd79180d5473ff22b001ee65153248f7dd55734/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbd79180d5473ff22b001ee65153248f7dd55734/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=bbd79180d5473ff22b001ee65153248f7dd55734",
        "patch": "@@ -240,6 +240,7 @@ BITCOIN_CORE_H = \\\n   util/memory.h \\\n   util/message.h \\\n   util/moneystr.h \\\n+  util/overflow.h \\\n   util/rbf.h \\\n   util/ref.h \\\n   util/settings.h \\"
      },
      {
        "sha": "cfad41659e1b8236c928eaef12c7a2c9a20ee2b5",
        "filename": "src/test/fuzz/addition_overflow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbd79180d5473ff22b001ee65153248f7dd55734/src/test/fuzz/addition_overflow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbd79180d5473ff22b001ee65153248f7dd55734/src/test/fuzz/addition_overflow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addition_overflow.cpp?ref=bbd79180d5473ff22b001ee65153248f7dd55734",
        "patch": "@@ -5,6 +5,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <util/overflow.h>\n \n #include <cstdint>\n #include <string>"
      },
      {
        "sha": "d55994e4a74cc7b4b284458dd6ce7874df81b710",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 11,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbd79180d5473ff22b001ee65153248f7dd55734/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbd79180d5473ff22b001ee65153248f7dd55734/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=bbd79180d5473ff22b001ee65153248f7dd55734",
        "patch": "@@ -26,6 +26,7 @@\n #include <test/util/setup_common.h>\n #include <txmempool.h>\n #include <uint256.h>\n+#include <util/overflow.h>\n #include <util/time.h>\n #include <util/vector.h>\n #include <version.h>\n@@ -228,17 +229,6 @@ template <typename T>\n     }\n }\n \n-template <class T>\n-[[nodiscard]] bool AdditionOverflow(const T i, const T j) noexcept\n-{\n-    static_assert(std::is_integral<T>::value, \"Integral required.\");\n-    if (std::numeric_limits<T>::is_signed) {\n-        return (i > 0 && j > std::numeric_limits<T>::max() - i) ||\n-               (i < 0 && j < std::numeric_limits<T>::min() - i);\n-    }\n-    return std::numeric_limits<T>::max() - i < j;\n-}\n-\n [[nodiscard]] inline bool ContainsSpentInput(const CTransaction& tx, const CCoinsViewCache& inputs) noexcept\n {\n     for (const CTxIn& tx_in : tx.vin) {"
      },
      {
        "sha": "072409e347b90488e9a26fa7f45a404095a452ba",
        "filename": "src/util/overflow.h",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbd79180d5473ff22b001ee65153248f7dd55734/src/util/overflow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbd79180d5473ff22b001ee65153248f7dd55734/src/util/overflow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/overflow.h?ref=bbd79180d5473ff22b001ee65153248f7dd55734",
        "patch": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_OVERFLOW_H\n+#define BITCOIN_UTIL_OVERFLOW_H\n+\n+#include <attributes.h>\n+\n+#include <cstdint>\n+#include <limits>\n+#include <type_traits>\n+\n+/** Return `true` if the addition of `i` and `j` of integral type `T` would overflow.\n+ */\n+template <class T>\n+[[nodiscard]] bool AdditionOverflow(const T i, const T j) noexcept\n+{\n+    static_assert(std::is_integral<T>::value, \"Integral required.\");\n+    if (std::numeric_limits<T>::is_signed) {\n+        return (i > 0 && j > std::numeric_limits<T>::max() - i) ||\n+               (i < 0 && j < std::numeric_limits<T>::min() - i);\n+    }\n+    return std::numeric_limits<T>::max() - i < j;\n+}\n+\n+#endif // BITCOIN_UTIL_OVERFLOW_H"
      }
    ]
  },
  {
    "sha": "c4258488c9694fa9134af7041144d10a1f7076bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDI1ODQ4OGM5Njk0ZmE5MTM0YWY3MDQxMTQ0ZDEwYTFmNzA3NmJi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-13T13:03:44Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-02-11T08:43:19Z"
      },
      "message": "mempool: Avoid signed integer overflow in CTxMemPool::PrioritiseTransaction(...)",
      "tree": {
        "sha": "08a405ca9ab5833274583af45d3304bc016bb14a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08a405ca9ab5833274583af45d3304bc016bb14a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4258488c9694fa9134af7041144d10a1f7076bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4258488c9694fa9134af7041144d10a1f7076bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4258488c9694fa9134af7041144d10a1f7076bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4258488c9694fa9134af7041144d10a1f7076bb/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbd79180d5473ff22b001ee65153248f7dd55734",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbd79180d5473ff22b001ee65153248f7dd55734",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbd79180d5473ff22b001ee65153248f7dd55734"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 20,
      "deletions": 5
    },
    "files": [
      {
        "sha": "907a4ee35a0f39c0ff1fc5bb588ac156143011e5",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4258488c9694fa9134af7041144d10a1f7076bb/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4258488c9694fa9134af7041144d10a1f7076bb/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=c4258488c9694fa9134af7041144d10a1f7076bb",
        "patch": "@@ -467,7 +467,9 @@ static RPCHelpMan prioritisetransaction()\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Priority is no longer supported, dummy argument to prioritisetransaction must be 0.\");\n     }\n \n-    EnsureMemPool(request.context).PrioritiseTransaction(hash, nAmount);\n+    if (!EnsureMemPool(request.context).PrioritiseTransaction(hash, nAmount)) {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"PrioritiseTransaction(...) failed. Invalid fee_delta argument?\");\n+    }\n     return true;\n },\n     };"
      },
      {
        "sha": "8f4789743ad3654ae233c505a92cbc6ef5d2c97f",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4258488c9694fa9134af7041144d10a1f7076bb/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4258488c9694fa9134af7041144d10a1f7076bb/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=c4258488c9694fa9134af7041144d10a1f7076bb",
        "patch": "@@ -14,6 +14,7 @@\n #include <policy/settings.h>\n #include <reverse_iterator.h>\n #include <util/moneystr.h>\n+#include <util/overflow.h>\n #include <util/system.h>\n #include <util/time.h>\n #include <validation.h>\n@@ -833,11 +834,17 @@ TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n \n TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n \n-void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta)\n+bool CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta)\n {\n+    if (nFeeDelta == std::numeric_limits<CAmount>::min()) {\n+        return false;\n+    }\n     {\n         LOCK(cs);\n         CAmount &delta = mapDeltas[hash];\n+        if (AdditionOverflow(delta, nFeeDelta)) {\n+            return false;\n+        }\n         delta += nFeeDelta;\n         txiter it = mapTx.find(hash);\n         if (it != mapTx.end()) {\n@@ -861,6 +868,7 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n         }\n     }\n     LogPrintf(\"PrioritiseTransaction: %s feerate += %s\\n\", hash.ToString(), FormatMoney(nFeeDelta));\n+    return true;\n }\n \n void CTxMemPool::ApplyDelta(const uint256& hash, CAmount &nFeeDelta) const"
      },
      {
        "sha": "22f8b77b1bde6db76d6c5ef0657272dabb3feda4",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4258488c9694fa9134af7041144d10a1f7076bb/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4258488c9694fa9134af7041144d10a1f7076bb/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=c4258488c9694fa9134af7041144d10a1f7076bb",
        "patch": "@@ -14,6 +14,7 @@\n #include <vector>\n \n #include <amount.h>\n+#include <attributes.h>\n #include <coins.h>\n #include <indirectmap.h>\n #include <optional.h>\n@@ -634,7 +635,7 @@ class CTxMemPool\n     bool HasNoInputsOf(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Affect CreateNewBlock prioritisation of transactions */\n-    void PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta);\n+    [[nodiscard]] bool PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta);\n     void ApplyDelta(const uint256& hash, CAmount &nFeeDelta) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     void ClearPrioritisation(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs);\n "
      },
      {
        "sha": "f0dcbeecea585928ecd2534eaacde1e3b7e6ce4d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4258488c9694fa9134af7041144d10a1f7076bb/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4258488c9694fa9134af7041144d10a1f7076bb/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=c4258488c9694fa9134af7041144d10a1f7076bb",
        "patch": "@@ -5027,7 +5027,9 @@ bool LoadMempool(CTxMemPool& pool)\n \n             CAmount amountdelta = nFeeDelta;\n             if (amountdelta) {\n-                pool.PrioritiseTransaction(tx->GetHash(), amountdelta);\n+                if (!pool.PrioritiseTransaction(tx->GetHash(), amountdelta)) {\n+                    LogPrintf(\"PrioritiseTransaction(...) failed. Invalid fee delta?\\n\");\n+                }\n             }\n             TxValidationState state;\n             if (nTime > nNow - nExpiryTimeout) {\n@@ -5058,7 +5060,9 @@ bool LoadMempool(CTxMemPool& pool)\n         file >> mapDeltas;\n \n         for (const auto& i : mapDeltas) {\n-            pool.PrioritiseTransaction(i.first, i.second);\n+            if (!pool.PrioritiseTransaction(i.first, i.second)) {\n+                LogPrintf(\"PrioritiseTransaction(...) failed. Invalid fee delta?\\n\");\n+            }\n         }\n \n         std::set<uint256> unbroadcast_txids;"
      }
    ]
  },
  {
    "sha": "7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGY4ZGJmOWJhMzAyYmYwYTNjZWYwZDBkYjUyODAzOTBkOTVhMWM4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-13T13:09:51Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-02-11T08:43:20Z"
      },
      "message": "util: Add note about the valid range of inputs for FormatMoney(...)",
      "tree": {
        "sha": "a3d82ebb0626377fe06c3e2b25b9a1b55cfcd47f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3d82ebb0626377fe06c3e2b25b9a1b55cfcd47f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4258488c9694fa9134af7041144d10a1f7076bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4258488c9694fa9134af7041144d10a1f7076bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4258488c9694fa9134af7041144d10a1f7076bb"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f579b0e009bf9cf6251bfde45d83b41b9f3bb7ce",
        "filename": "src/util/moneystr.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8/src/util/moneystr.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8/src/util/moneystr.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/moneystr.cpp?ref=7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8",
        "patch": "@@ -9,6 +9,9 @@\n #include <util/strencodings.h>\n #include <util/string.h>\n \n+// FormatMoney(CAmount n) is not defined for n == std::numeric_limits<CAmount>::min().\n+// The negation of std::numeric_limits<CAmount>::min() (-9223372036854775808) cannot be\n+// represented in the type CAmount (int64_t).\n std::string FormatMoney(const CAmount& n)\n {\n     // Note: not using straight sprintf here because we do NOT want"
      }
    ]
  },
  {
    "sha": "1db76e1d86c26ae680ee9611a8ea0d45ff86356c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGI3NmUxZDg2YzI2YWU2ODBlZTk2MTFhOGVhMGQ0NWZmODYzNTZj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-01-14T16:29:47Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-02-11T08:43:20Z"
      },
      "message": "tests: Test invalid fee delta check",
      "tree": {
        "sha": "a1469556c5f32f8d4ec088a0ffab316b055f3982",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1469556c5f32f8d4ec088a0ffab316b055f3982"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1db76e1d86c26ae680ee9611a8ea0d45ff86356c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1db76e1d86c26ae680ee9611a8ea0d45ff86356c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1db76e1d86c26ae680ee9611a8ea0d45ff86356c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1db76e1d86c26ae680ee9611a8ea0d45ff86356c/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7df8dbf9ba302bf0a3cef0d0db5280390d95a1c8"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b313e7cd4e87c863a5c259b88fc60b384252c153",
        "filename": "test/functional/mining_prioritisetransaction.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1db76e1d86c26ae680ee9611a8ea0d45ff86356c/test/functional/mining_prioritisetransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1db76e1d86c26ae680ee9611a8ea0d45ff86356c/test/functional/mining_prioritisetransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_prioritisetransaction.py?ref=1db76e1d86c26ae680ee9611a8ea0d45ff86356c",
        "patch": "@@ -44,6 +44,9 @@ def run_test(self):\n         # Test `prioritisetransaction` invalid `fee_delta`\n         assert_raises_rpc_error(-1, \"JSON value is not an integer as expected\", self.nodes[0].prioritisetransaction, txid=txid, fee_delta='foo')\n \n+        # Test invalid fee_delta check: -9223372036854775808 (std::numeric_limits<CAmount>::min()) is not a valid fee_delta.\n+        assert_raises_rpc_error(-8, \"Invalid fee_delta passed\", self.nodes[0].prioritisetransaction, txid=txid, fee_delta=-9223372036854775808)\n+\n         self.txouts = gen_return_txouts()\n         self.relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n "
      }
    ]
  },
  {
    "sha": "7244d852d21d4aab149ec68165007836ccf298c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjQ0ZDg1MmQyMWQ0YWFiMTQ5ZWM2ODE2NTAwNzgzNmNjZjI5OGM3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-01-14T16:30:53Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-02-11T08:43:20Z"
      },
      "message": "mempool: Avoid signed integer overflow in CTxMemPool::PrioritiseTransaction(...)",
      "tree": {
        "sha": "7b4672dfd51c502a073481fec95ff7852af70d4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b4672dfd51c502a073481fec95ff7852af70d4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7244d852d21d4aab149ec68165007836ccf298c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7244d852d21d4aab149ec68165007836ccf298c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7244d852d21d4aab149ec68165007836ccf298c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7244d852d21d4aab149ec68165007836ccf298c7/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1db76e1d86c26ae680ee9611a8ea0d45ff86356c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1db76e1d86c26ae680ee9611a8ea0d45ff86356c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1db76e1d86c26ae680ee9611a8ea0d45ff86356c"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 12,
      "deletions": 10
    },
    "files": [
      {
        "sha": "9c770a8fe3d6fd550cdaef6f9f68d8b39ec32db1",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7244d852d21d4aab149ec68165007836ccf298c7/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7244d852d21d4aab149ec68165007836ccf298c7/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=7244d852d21d4aab149ec68165007836ccf298c7",
        "patch": "@@ -24,5 +24,6 @@ static const CAmount COIN = 100000000;\n  * */\n static const CAmount MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n+inline bool FeeDeltaRange(const CAmount& fee_delta) { return -MAX_MONEY <= fee_delta && fee_delta <= MAX_MONEY; }\n \n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "e6c2f49ab0fa963d8d5919a1dec261412c29a667",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7244d852d21d4aab149ec68165007836ccf298c7/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7244d852d21d4aab149ec68165007836ccf298c7/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=7244d852d21d4aab149ec68165007836ccf298c7",
        "patch": "@@ -444,14 +444,14 @@ static RPCHelpMan prioritisetransaction()\n                 {\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id.\"},\n                     {\"dummy\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED_NAMED_ARG, \"API-Compatibility for previous API. Must be zero or null.\\n\"\n-            \"                  DEPRECATED. For forward compatibility use named arguments and omit this parameter.\"},\n-                    {\"fee_delta\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n-            \"                  Note, that this value is not a fee rate. It is a value to modify absolute fee of the TX.\\n\"\n-            \"                  The fee is not actually paid, only the algorithm for selecting transactions into a block\\n\"\n-            \"                  considers the transaction as it would have paid a higher (or lower) fee.\"},\n+                              \"DEPRECATED. For forward compatibility use named arguments and omit this parameter.\"},\n+                    {\"fee_delta\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The fee value (in satoshis) to add (or subtract, if negative). Must be in the range +-\" + ToString(MAX_MONEY) + \" sat.\\n\"\n+                              \"Note, that this value is not a fee rate. It is a value to modify absolute fee of the TX.\\n\"\n+                              \"The fee is not actually paid, only the algorithm for selecting transactions into a block\\n\"\n+                              \"considers the transaction as it would have paid a higher (or lower) fee.\"},\n                 },\n                 RPCResult{\n-                    RPCResult::Type::BOOL, \"\", \"Returns true\"},\n+                    RPCResult::Type::BOOL, \"\", \"Returns true or throws on error\"},\n                 RPCExamples{\n                     HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 0.0 10000\")\n             + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 0.0, 10000\")\n@@ -460,15 +460,16 @@ static RPCHelpMan prioritisetransaction()\n {\n     LOCK(cs_main);\n \n-    uint256 hash(ParseHashV(request.params[0], \"txid\"));\n-    CAmount nAmount = request.params[2].get_int64();\n+    const uint256 hash{ParseHashV(request.params[0], \"txid\")};\n+    const CAmount nAmount = request.params[2].get_int64();\n \n     if (!(request.params[1].isNull() || request.params[1].get_real() == 0)) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Priority is no longer supported, dummy argument to prioritisetransaction must be 0.\");\n     }\n \n-    if (!EnsureMemPool(request.context).PrioritiseTransaction(hash, nAmount)) {\n-        throw JSONRPCError(RPC_MISC_ERROR, \"PrioritiseTransaction(...) failed. Invalid fee_delta argument?\");\n+    CTxMemPool& mempool = EnsureMemPool(request.context);\n+    if (!mempool.PrioritiseTransaction(hash, nAmount)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid fee_delta passed\");\n     }\n     return true;\n },"
      }
    ]
  }
]