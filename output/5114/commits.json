[
  {
    "sha": "c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTQzODFjNTdiNGM3YWNjYzdiNWZlY2JiNTljOTMwY2IwYWU4NTA0",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-08T21:34:53Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-16T18:28:07Z"
      },
      "message": "Policy: Refactor: CTxOut::IsDust(CFeeRate) -> CPolicy::ValidateOutput(CTxOut)\n\nDecouples CTxOut from CFeeRate\nSimplifies IsDust() interface encapsulating the access to global minRelayTxFee",
      "tree": {
        "sha": "cb940179a91e6f953714fc903a7139036f13a92b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb940179a91e6f953714fc903a7139036f13a92b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed789ceade71f19f04340a4041d7d3ef43c44086",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed789ceade71f19f04340a4041d7d3ef43c44086",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed789ceade71f19f04340a4041d7d3ef43c44086"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 52,
      "deletions": 30
    },
    "files": [
      {
        "sha": "59c25df1ee3308057b5602712c7f55c92cfd0f27",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -68,6 +68,7 @@ bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n CFeeRate minRelayTxFee = CFeeRate(1000);\n+CPolicy globalPolicy;\n \n CTxMemPool mempool(::minRelayTxFee);\n "
      },
      {
        "sha": "fedde046f4b457a25486cf9fe3b62420231c55a7",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -40,6 +40,7 @@ class CBlockIndex;\n class CBlockTreeDB;\n class CBloomFilter;\n class CInv;\n+class CPolicy;\n class CScriptCheck;\n class CValidationInterface;\n class CValidationState;\n@@ -105,6 +106,7 @@ extern bool fCheckpointsEnabled;\n extern size_t nCoinCacheUsage;\n extern CFeeRate minRelayTxFee;\n extern bool fAlerts;\n+extern CPolicy globalPolicy;\n \n /** Best header we've seen so far (used for getheaders queries' starting points). */\n extern CBlockIndex *pindexBestHeader;"
      },
      {
        "sha": "241818a4ecef9299dbd24eace0cb4d9161d3187e",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -34,6 +34,17 @@\n      *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n      */\n \n+CAmount CPolicy::GetMinAmount(const CTxOut& txout) const\n+{\n+    size_t nSize = txout.GetSerializeSize(SER_DISK,0) + 148u;\n+    return 3 * minRelayTxFee.GetFee(nSize);\n+}\n+\n+bool CPolicy::ApproveOutputAmount(const CTxOut& txout) const\n+{\n+    return txout.nValue >= GetMinAmount(txout);\n+}\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n {\n     std::vector<std::vector<unsigned char> > vSolutions;\n@@ -103,7 +114,7 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason)\n         else if ((whichType == TX_MULTISIG) && (!fIsBareMultisigStd)) {\n             reason = \"bare-multisig\";\n             return false;\n-        } else if (txout.IsDust(::minRelayTxFee)) {\n+        } else if (!globalPolicy.ApproveOutputAmount(txout)) {\n             reason = \"dust\";\n             return false;\n         }"
      },
      {
        "sha": "2e01ab3d46e98d8e4a936c2e77b9d828c3cfbd5a",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -42,6 +42,25 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n+/**\n+ * \\class CPolicy\n+ * Generic interface class for policy.\n+ */\n+class CPolicy\n+{\n+public:\n+    /**\n+     * @param txout the CTxOut being considered\n+     * @return the minimum acceptable nValue for this CTxOut.\n+     */\n+    CAmount GetMinAmount(const CTxOut& txout) const;\n+    /**\n+     * @param txout the CTxOut being considered\n+     * @return True if the CTxOut has an acceptable nValue.\n+     */\n+    bool ApproveOutputAmount(const CTxOut& txout) const;\n+};\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**\n      * Check for standard transaction types"
      },
      {
        "sha": "54c65773f24e5eef88896b0276b029a083f3492a",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -140,25 +140,6 @@ class CTxOut\n \n     uint256 GetHash() const;\n \n-    CAmount GetDustThreshold(const CFeeRate &minRelayTxFee) const\n-    {\n-        // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n-        // which has units satoshis-per-kilobyte.\n-        // If you'd pay more than 1/3 in fees\n-        // to spend something, then we consider it dust.\n-        // A typical txout is 34 bytes big, and will\n-        // need a CTxIn of at least 148 bytes to spend:\n-        // so dust is a txout less than 546 satoshis \n-        // with default minRelayTxFee.\n-        size_t nSize = GetSerializeSize(SER_DISK,0)+148u;\n-        return 3*minRelayTxFee.GetFee(nSize);\n-    }\n-\n-    bool IsDust(const CFeeRate &minRelayTxFee) const\n-    {\n-        return (nValue < GetDustThreshold(minRelayTxFee));\n-    }\n-\n     friend bool operator==(const CTxOut& a, const CTxOut& b)\n     {\n         return (a.nValue       == b.nValue &&"
      },
      {
        "sha": "95f79f57e96e9ee7b2d9d3c90a71588b90bd6ae6",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -15,6 +15,7 @@\n #include \"coincontrol.h\"\n #include \"init.h\"\n #include \"main.h\"\n+#include \"policy/policy.h\"\n #include \"wallet/wallet.h\"\n \n #include <boost/assign/list_of.hpp> // for 'map_list_of()'\n@@ -454,6 +455,7 @@ void CoinControlDialog::updateLabelLocked()\n \n void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n {\n+    const CPolicy& policy = globalPolicy;\n     if (!model)\n         return;\n \n@@ -469,7 +471,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             CTxOut txout(amount, (CScript)vector<unsigned char>(24, 0));\n             txDummy.vout.push_back(txout);\n-            if (txout.IsDust(::minRelayTxFee))\n+            if (!policy.ApproveOutputAmount(txout))\n                fDust = true;\n         }\n     }\n@@ -569,10 +571,10 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n             if (nChange > 0 && nChange < CENT)\n             {\n                 CTxOut txout(nChange, (CScript)vector<unsigned char>(24, 0));\n-                if (txout.IsDust(::minRelayTxFee))\n+                if (!policy.ApproveOutputAmount(txout))\n                 {\n                     if (CoinControlDialog::fSubtractFeeFromAmount) // dust-change will be raised until no dust\n-                        nChange = txout.GetDustThreshold(::minRelayTxFee);\n+                        nChange = policy.GetMinAmount(txout);\n                     else\n                     {\n                         nPayFee += nChange;"
      },
      {
        "sha": "5992746255c4a6cddfc08306bcc2e02a13d66768",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -12,6 +12,7 @@\n #include \"primitives/transaction.h\"\n #include \"init.h\"\n #include \"main.h\"\n+#include \"policy/policy.h\"\n #include \"protocol.h\"\n #include \"script/script.h\"\n #include \"script/standard.h\"\n@@ -227,10 +228,11 @@ QString formatBitcoinURI(const SendCoinsRecipient &info)\n \n bool isDust(const QString& address, const CAmount& amount)\n {\n+    const CPolicy& policy = globalPolicy;\n     CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n     CScript script = GetScriptForDestination(dest);\n     CTxOut txOut(amount, script);\n-    return txOut.IsDust(::minRelayTxFee);\n+    return !policy.ApproveOutputAmount(txOut);\n }\n \n QString HtmlEscape(const QString& str, bool fMultiLine)"
      },
      {
        "sha": "d4ee59145dac315a32c7fd0d071efbd68a4d9fa7",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -11,6 +11,7 @@\n #include \"base58.h\"\n #include \"chainparams.h\"\n #include \"main.h\"\n+#include \"policy/policy.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"wallet/wallet.h\"\n@@ -527,6 +528,7 @@ bool PaymentServer::readPaymentRequestFromFile(const QString& filename, PaymentR\n \n bool PaymentServer::processPaymentRequest(const PaymentRequestPlus& request, SendCoinsRecipient& recipient)\n {\n+    const CPolicy& policy = globalPolicy;\n     if (!optionsModel)\n         return false;\n \n@@ -589,7 +591,7 @@ bool PaymentServer::processPaymentRequest(const PaymentRequestPlus& request, Sen\n \n         // Extract and check amounts\n         CTxOut txOut(sendingTo.second, sendingTo.first);\n-        if (txOut.IsDust(::minRelayTxFee)) {\n+        if (!policy.ApproveOutputAmount(txOut)) {\n             Q_EMIT message(tr(\"Payment request error\"), tr(\"Requested payment amount of %1 is too small (considered dust).\")\n                 .arg(BitcoinUnits::formatWithUnit(optionsModel->getDisplayUnit(), sendingTo.second)),\n                 CClientUIInterface::MSG_ERROR);"
      },
      {
        "sha": "ad7e2e2f85adae749cd777d6874bea1be858aa91",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -12,6 +12,7 @@\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n@@ -1783,6 +1784,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount &nFeeRet, int& nC\n bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet,\n                                 int& nChangePosRet, std::string& strFailReason, const CCoinControl* coinControl, bool sign)\n {\n+    const CPolicy& policy = globalPolicy;\n     CAmount nValue = 0;\n     unsigned int nSubtractFeeFromAmount = 0;\n     BOOST_FOREACH (const CRecipient& recipient, vecSend)\n@@ -1861,7 +1863,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                         }\n                     }\n \n-                    if (txout.IsDust(::minRelayTxFee))\n+                    if (!policy.ApproveOutputAmount(txout))\n                     {\n                         if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                         {\n@@ -1937,16 +1939,16 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                     // We do not move dust-change to fees, because the sender would end up paying more than requested.\n                     // This would be against the purpose of the all-inclusive feature.\n                     // So instead we raise the change and deduct from the recipient.\n-                    if (nSubtractFeeFromAmount > 0 && newTxOut.IsDust(::minRelayTxFee))\n+                    if (nSubtractFeeFromAmount > 0 && !policy.ApproveOutputAmount(newTxOut))\n                     {\n-                        CAmount nDust = newTxOut.GetDustThreshold(::minRelayTxFee) - newTxOut.nValue;\n+                        CAmount nDust = policy.GetMinAmount(newTxOut) - newTxOut.nValue;\n                         newTxOut.nValue += nDust; // raise change until no more dust\n                         for (unsigned int i = 0; i < vecSend.size(); i++) // subtract from first recipient\n                         {\n                             if (vecSend[i].fSubtractFeeFromAmount)\n                             {\n                                 txNew.vout[i].nValue -= nDust;\n-                                if (txNew.vout[i].IsDust(::minRelayTxFee))\n+                                if (!policy.ApproveOutputAmount(txNew.vout[i]))\n                                 {\n                                     strFailReason = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                                     return false;\n@@ -1958,7 +1960,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n \n                     // Never create dust outputs; if we would, just\n                     // add the dust to the fee.\n-                    if (newTxOut.IsDust(::minRelayTxFee))\n+                    if (!policy.ApproveOutputAmount(newTxOut))\n                     {\n                         nFeeRet += nChange;\n                         reservekey.ReturnKey();"
      }
    ]
  },
  {
    "sha": "e2851a2c8c4369496c82160bf9b4971cc3048b98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjg1MWEyYzhjNDM2OTQ5NmM4MjE2MGJmOWI0OTcxY2MzMDQ4Yjk4",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-12T08:58:10Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-16T18:28:08Z"
      },
      "message": "MOVEONLY: Consensus: Policy: Move CFeeRate from amount.o to policy/fees.o",
      "tree": {
        "sha": "083309c918d5b29865756f18b8304a47620081eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/083309c918d5b29865756f18b8304a47620081eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2851a2c8c4369496c82160bf9b4971cc3048b98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2851a2c8c4369496c82160bf9b4971cc3048b98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2851a2c8c4369496c82160bf9b4971cc3048b98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2851a2c8c4369496c82160bf9b4971cc3048b98/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c14381c57b4c7accc7b5fecbb59c930cb0ae8504"
      }
    ],
    "stats": {
      "total": 134,
      "additions": 70,
      "deletions": 64
    },
    "files": [
      {
        "sha": "9e9262f6c83c25a83eb38ca141121825fdbd639a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -234,7 +234,6 @@ univalue_libbitcoin_univalue_a_SOURCES = \\\n # common: shared between bitcoind, and bitcoin-qt and non-server tools\n libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_common_a_SOURCES = \\\n-  amount.cpp \\\n   arith_uint256.cpp \\\n   base58.cpp \\\n   chainparams.cpp \\"
      },
      {
        "sha": "0a394c96fc03e4ccf8cc9b285be3ca6ed9e08ba4",
        "filename": "src/amount.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/amount.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c14381c57b4c7accc7b5fecbb59c930cb0ae8504/src/amount.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.cpp?ref=c14381c57b4c7accc7b5fecbb59c930cb0ae8504",
        "patch": "@@ -1,31 +0,0 @@\n-// Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include \"amount.h\"\n-\n-#include \"tinyformat.h\"\n-\n-CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nSize)\n-{\n-    if (nSize > 0)\n-        nSatoshisPerK = nFeePaid*1000/nSize;\n-    else\n-        nSatoshisPerK = 0;\n-}\n-\n-CAmount CFeeRate::GetFee(size_t nSize) const\n-{\n-    CAmount nFee = nSatoshisPerK*nSize / 1000;\n-\n-    if (nFee == 0 && nSatoshisPerK > 0)\n-        nFee = nSatoshisPerK;\n-\n-    return nFee;\n-}\n-\n-std::string CFeeRate::ToString() const\n-{\n-    return strprintf(\"%d.%08d BTC/kB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN);\n-}"
      },
      {
        "sha": "c4cf5627ba1dcf5009661fce5fe894c66010bb15",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -28,35 +28,4 @@ static const CAmount CENT = 1000000;\n static const CAmount MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n-/** Type-safe wrapper class to for fee rates\n- * (how much to pay based on transaction size)\n- */\n-class CFeeRate\n-{\n-private:\n-    CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n-public:\n-    CFeeRate() : nSatoshisPerK(0) { }\n-    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n-    CFeeRate(const CAmount& nFeePaid, size_t nSize);\n-    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n-\n-    CAmount GetFee(size_t size) const; // unit returned is satoshis\n-    CAmount GetFeePerK() const { return GetFee(1000); } // satoshis-per-1000-bytes\n-\n-    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n-    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n-    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n-    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n-    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n-    std::string ToString() const;\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        READWRITE(nSatoshisPerK);\n-    }\n-};\n-\n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "7930d4617f172c4df49b7782bfca257bbd99b796",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -18,6 +18,7 @@\n #include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\"\n+#include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"rpcserver.h\"\n #include \"script/standard.h\""
      },
      {
        "sha": "8409a78e632b9293c6a3888c5f4ff20ef759962b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -16,6 +16,7 @@\n #include \"init.h\"\n #include \"merkleblock.h\"\n #include \"net.h\"\n+#include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"pow.h\"\n #include \"txdb.h\""
      },
      {
        "sha": "a60d61f7dff53b400572840ff15d14a8fdac137c",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -12,6 +12,7 @@\n #include \"hash.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"pow.h\"\n #include \"primitives/transaction.h\""
      },
      {
        "sha": "ac16be2bfde854c3c393ad871694b98c643ad545",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -8,9 +8,33 @@\n #include \"amount.h\"\n #include \"primitives/transaction.h\"\n #include \"streams.h\"\n+#include \"tinyformat.h\"\n #include \"txmempool.h\"\n #include \"util.h\"\n \n+CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nSize)\n+{\n+    if (nSize > 0)\n+        nSatoshisPerK = nFeePaid*1000/nSize;\n+    else\n+        nSatoshisPerK = 0;\n+}\n+\n+CAmount CFeeRate::GetFee(size_t nSize) const\n+{\n+    CAmount nFee = nSatoshisPerK*nSize / 1000;\n+\n+    if (nFee == 0 && nSatoshisPerK > 0)\n+        nFee = nSatoshisPerK;\n+\n+    return nFee;\n+}\n+\n+std::string CFeeRate::ToString() const\n+{\n+    return strprintf(\"%d.%08d BTC/kB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN);\n+}\n+\n void TxConfirmStats::Initialize(std::vector<double>& defaultBuckets,\n                                 unsigned int maxConfirms, double _decay, std::string _dataTypeString)\n {"
      },
      {
        "sha": "cfc408ea63481b3d89f469a32edc671aedd40968",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 32,
        "deletions": 1,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -13,9 +13,40 @@\n #include <vector>\n \n class CAutoFile;\n-class CFeeRate;\n class CTxMemPoolEntry;\n \n+/**\n+ * Type-safe wrapper class to for fee rates\n+ * (how much to pay based on transaction size).\n+ */\n+class CFeeRate\n+{\n+private:\n+    CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n+public:\n+    CFeeRate() : nSatoshisPerK(0) { }\n+    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n+    CFeeRate(const CAmount& nFeePaid, size_t nSize);\n+    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n+\n+    CAmount GetFee(size_t size) const; // unit returned is satoshis\n+    CAmount GetFeePerK() const { return GetFee(1000); } // satoshis-per-1000-bytes\n+\n+    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n+    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n+    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n+    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n+    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n+    std::string ToString() const;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        READWRITE(nSatoshisPerK);\n+    }\n+};\n+\n /** \\class CBlockPolicyEstimator\n  * The BlockPolicyEstimator is used for estimating the fee or priority needed\n  * for a transaction to be included in a block within a certain number of"
      },
      {
        "sha": "79431526249011969ac24c6852269d52ee3a35e6",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -8,6 +8,7 @@\n #include \"policy/policy.h\"\n \n #include \"main.h\"\n+#include \"policy/fees.h\"\n #include \"tinyformat.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\""
      },
      {
        "sha": "9c766140709402338377b50afa55a048cc764c45",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -15,6 +15,7 @@\n #include \"coincontrol.h\"\n #include \"init.h\"\n #include \"main.h\"\n+#include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"wallet/wallet.h\"\n "
      },
      {
        "sha": "8ebda034ca527b086c5277cc987b9e78e4a55a49",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -18,6 +18,7 @@\n #include \"base58.h\"\n #include \"coincontrol.h\"\n #include \"main.h\"\n+#include \"policy/fees.h\"\n #include \"ui_interface.h\"\n #include \"wallet/wallet.h\"\n "
      },
      {
        "sha": "66847299506b0a6aca9ac4c2c891794ac631b379",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -9,6 +9,7 @@\n #include \"consensus/validation.h\"\n #include \"core_io.h\"\n #include \"init.h\"\n+#include \"policy/fees.h\"\n #include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\""
      },
      {
        "sha": "d038641933a45f1da8b89de8ef0d678dd93d331a",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -9,6 +9,7 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"policy/fees.h\"\n #include \"rpcserver.h\"\n #include \"timedata.h\"\n #include \"util.h\""
      },
      {
        "sha": "76b6cfb1d0d41082b57cf8bf12d5677fc9334da5",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -8,6 +8,7 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"policy/fees.h\"\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"timedata.h\""
      },
      {
        "sha": "2df468c9c791967b814e5c6a67a1e4270755af85",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"main.h\"\n+#include \"policy/fees.h\"\n #include \"txmempool.h\"\n #include \"util.h\"\n "
      },
      {
        "sha": "dbd8d6a8b8f45b147c93195a50b9c339fbcbf7b8",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -14,6 +14,7 @@\n #include \"sync.h\"\n \n class CAutoFile;\n+class CFeeRate;\n \n inline double AllowFreeThreshold()\n {"
      },
      {
        "sha": "3ec7458c8bb1b5a2b988e3b81fbf17fb8e90fd51",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -10,6 +10,7 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"policy/fees.h\"\n #include \"rpcserver.h\"\n #include \"timedata.h\"\n #include \"util.h\""
      },
      {
        "sha": "4803af0a4c37971452f40b141a7793c5543a73e2",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2851a2c8c4369496c82160bf9b4971cc3048b98/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=e2851a2c8c4369496c82160bf9b4971cc3048b98",
        "patch": "@@ -30,6 +30,8 @@\n \n #include <boost/shared_ptr.hpp>\n \n+class CFeeRate;\n+\n /**\n  * Settings\n  */"
      }
    ]
  }
]