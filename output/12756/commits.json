[
  {
    "sha": "4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzU3YzA0Y2I5OGRmMmFiM2E1NGM3ZTMzZmY5YWYzYjFmN2RjNzhi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-22T14:28:52Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-22T14:28:56Z"
      },
      "message": "[config] Remove blockmaxsize option\n\nThe blockmaxsize option was marked as deprecated in V0.15.1, and code\nwas added to convert provided blockmaxsize into blockmaxweight. However,\nthis code was incorrectly implemented, and blockmaxsize was silently\nignored.\n\nNo users have complained about blockmaxsize being ignored, so just\nremove it in V0.17.",
      "tree": {
        "sha": "6eae7895389bfc29105e3188072e8db1129986d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6eae7895389bfc29105e3188072e8db1129986d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6926b065d654a448937f9f1e2999ac48d50a984",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6926b065d654a448937f9f1e2999ac48d50a984",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6926b065d654a448937f9f1e2999ac48d50a984"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 18,
      "deletions": 23
    },
    "files": [
      {
        "sha": "ee8eafc96fa3e4dd407d736033007ab258f98b4d",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
        "patch": "@@ -98,6 +98,14 @@ Low-level RPC changes\n \n - The log timestamp format is now ISO 8601 (e.g. \"2018-02-28T12:34:56Z\").\n \n+Miner block size removed\n+------------------------\n+\n+The `-blockmaxsize` option for miners to limit their blocks' sizes was\n+deprecated in V0.15.1, and has now been removed. Miners should use the\n+`-blockmaxweight` option if they want to limit the weight of their blocks'\n+weights.\n+\n Credits\n =======\n "
      },
      {
        "sha": "aaccc53fbd2b7f63cfa528e81ff11809a8e564ee",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
        "patch": "@@ -491,8 +491,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-whitelistrelay\", strprintf(_(\"Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)\"), DEFAULT_WHITELISTRELAY));\n \n     strUsage += HelpMessageGroup(_(\"Block creation options:\"));\n-    if (showDebug)\n-        strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", \"Set maximum BIP141 block weight to this * 4. Deprecated, use blockmaxweight\");\n     strUsage += HelpMessageOpt(\"-blockmaxweight=<n>\", strprintf(_(\"Set maximum BIP141 block weight (default: %d)\"), DEFAULT_BLOCK_MAX_WEIGHT));\n     strUsage += HelpMessageOpt(\"-blockmintxfee=<amt>\", strprintf(_(\"Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)\"), CURRENCY_UNIT, FormatMoney(DEFAULT_BLOCK_MIN_TX_FEE)));\n     if (showDebug)\n@@ -798,15 +796,6 @@ void InitParameterInteraction()\n         if (gArgs.SoftSetBoolArg(\"-whitelistrelay\", true))\n             LogPrintf(\"%s: parameter interaction: -whitelistforcerelay=1 -> setting -whitelistrelay=1\\n\", __func__);\n     }\n-\n-    if (gArgs.IsArgSet(\"-blockmaxsize\")) {\n-        unsigned int max_size = gArgs.GetArg(\"-blockmaxsize\", 0);\n-        if (gArgs.SoftSetArg(\"blockmaxweight\", strprintf(\"%d\", max_size * WITNESS_SCALE_FACTOR))) {\n-            LogPrintf(\"%s: parameter interaction: -blockmaxsize=%d -> setting -blockmaxweight=%d (-blockmaxsize is deprecated!)\\n\", __func__, max_size, max_size * WITNESS_SCALE_FACTOR);\n-        } else {\n-            LogPrintf(\"%s: Ignoring blockmaxsize setting which is overridden by blockmaxweight\", __func__);\n-        }\n-    }\n }\n \n static std::string ResolveErrMsg(const char * const optname, const std::string& strBind)"
      },
      {
        "sha": "0660df928c28b35bf78593cd5f6a467495e122ed",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
        "patch": "@@ -68,9 +68,7 @@ BlockAssembler::BlockAssembler(const CChainParams& params, const Options& option\n static BlockAssembler::Options DefaultOptions(const CChainParams& params)\n {\n     // Block resource limits\n-    // If neither -blockmaxsize or -blockmaxweight is given, limit to DEFAULT_BLOCK_MAX_*\n-    // If only one is given, only restrict the specified resource.\n-    // If both are given, restrict both.\n+    // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n     BlockAssembler::Options options;\n     options.nBlockMaxWeight = gArgs.GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n     if (gArgs.IsArgSet(\"-blockmintxfee\")) {"
      },
      {
        "sha": "8e97df23618e2b3cfc3ea5d5e40a29f5e8872a3f",
        "filename": "test/functional/feature_fee_estimation.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/test/functional/feature_fee_estimation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/test/functional/feature_fee_estimation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimation.py?ref=4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
        "patch": "@@ -133,8 +133,8 @@ def setup_network(self):\n         which we will use to generate our transactions.\n         \"\"\"\n         self.add_nodes(3, extra_args=[[\"-maxorphantx=1000\", \"-whitelist=127.0.0.1\"],\n-                                      [\"-blockmaxsize=17000\", \"-maxorphantx=1000\"],\n-                                      [\"-blockmaxsize=8000\", \"-maxorphantx=1000\"]])\n+                                      [\"-maxorphantx=1000\"],\n+                                      [\"-maxorphantx=1000\"]])\n         # Use node0 to mine blocks for input splitting\n         # Node1 mines small blocks but that are bigger than the expected transaction rate.\n         # NOTE: the CreateNewBlock code starts counting block size at 1,000 bytes,"
      },
      {
        "sha": "ce6ec76c613ec05b458aa025c160d1e6761e65a8",
        "filename": "test/functional/feature_maxuploadtarget.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/test/functional/feature_maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/test/functional/feature_maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_maxuploadtarget.py?ref=4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
        "patch": "@@ -34,7 +34,7 @@ class MaxUploadTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [[\"-maxuploadtarget=800\", \"-blockmaxsize=999000\"]]\n+        self.extra_args = [[\"-maxuploadtarget=800\"]]\n \n         # Cache for utxos, as the listunspent may take a long time later in the test\n         self.utxo_cache = []\n@@ -144,7 +144,7 @@ def run_test(self):\n         #stop and start node 0 with 1MB maxuploadtarget, whitelist 127.0.0.1\n         self.log.info(\"Restarting nodes with -whitelist=127.0.0.1\")\n         self.stop_node(0)\n-        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-maxuploadtarget=1\", \"-blockmaxsize=999000\"])\n+        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-maxuploadtarget=1\"])\n \n         # Reconnect to self.nodes[0]\n         self.nodes[0].add_p2p_connection(TestP2PConn())"
      },
      {
        "sha": "227ae6cb366ce260393aad86b90431c5738922de",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=4757c04cb98df2ab3a54c7e33ff9af3b1f7dc78b",
        "patch": "@@ -31,14 +31,14 @@ def set_test_params(self):\n \n         # Create nodes 0 and 1 to mine.\n         # Create node 2 to test pruning.\n-        self.full_node_default_args = [\"-maxreceivebuffer=20000\",\"-blockmaxsize=999000\", \"-checkblocks=5\", \"-limitdescendantcount=100\", \"-limitdescendantsize=5000\", \"-limitancestorcount=100\", \"-limitancestorsize=5000\" ]\n+        self.full_node_default_args = [\"-maxreceivebuffer=20000\", \"-checkblocks=5\", \"-limitdescendantcount=100\", \"-limitdescendantsize=5000\", \"-limitancestorcount=100\", \"-limitancestorsize=5000\" ]\n         # Create nodes 3 and 4 to test manual pruning (they will be re-started with manual pruning later)\n         # Create nodes 5 to test wallet in prune mode, but do not connect\n         self.extra_args = [self.full_node_default_args,\n                            self.full_node_default_args,\n                            [\"-maxreceivebuffer=20000\", \"-prune=550\"],\n-                           [\"-maxreceivebuffer=20000\", \"-blockmaxsize=999000\"],\n-                           [\"-maxreceivebuffer=20000\", \"-blockmaxsize=999000\"],\n+                           [\"-maxreceivebuffer=20000\"],\n+                           [\"-maxreceivebuffer=20000\"],\n                            [\"-prune=550\"]]\n \n     def setup_network(self):\n@@ -124,7 +124,7 @@ def reorg_test(self):\n         # Reboot node 1 to clear its mempool (hopefully make the invalidate faster)\n         # Lower the block max size so we don't keep mining all our big mempool transactions (from disconnected blocks)\n         self.stop_node(1)\n-        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxsize=5000\", \"-checkblocks=5\", \"-disablesafemode\"])\n+        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-checkblocks=5\", \"-disablesafemode\"])\n \n         height = self.nodes[1].getblockcount()\n         self.log.info(\"Current block height: %d\" % height)\n@@ -147,7 +147,7 @@ def reorg_test(self):\n \n         # Reboot node1 to clear those giant tx's from mempool\n         self.stop_node(1)\n-        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-blockmaxsize=5000\", \"-checkblocks=5\", \"-disablesafemode\"])\n+        self.start_node(1, extra_args=[\"-maxreceivebuffer=20000\",\"-checkblocks=5\", \"-disablesafemode\"])\n \n         self.log.info(\"Generating new longer chain of 300 more blocks\")\n         self.nodes[1].generate(300)"
      }
    ]
  }
]