[
  {
    "sha": "5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmFjMWYzM2ZiNWFmYWQ0Y2JjYjUxYjdjODVhYjJjZDc1OTg0NmUx",
    "commit": {
      "author": {
        "name": "Yuri Zhykin",
        "email": "yuri.zhykin@gmail.com",
        "date": "2016-05-27T02:32:58Z"
      },
      "committer": {
        "name": "Yuri Zhykin",
        "email": "yuri.zhykin@gmail.com",
        "date": "2016-05-27T02:32:58Z"
      },
      "message": "bench: Added base58 encoding/decoding benchmarks",
      "tree": {
        "sha": "a4b41b248877ac587ec03427ddf1c79b19af216b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4b41b248877ac587ec03427ddf1c79b19af216b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "425278d17bd0edf8a3a7cc81e55016f7fd8e7726",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/425278d17bd0edf8a3a7cc81e55016f7fd8e7726",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/425278d17bd0edf8a3a7cc81e55016f7fd8e7726"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 58,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4067ceb3993e879849f2e2645690bc222c36e7ff",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1",
        "patch": "@@ -9,7 +9,8 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/bench.h \\\n   bench/Examples.cpp \\\n   bench/rollingbloom.cpp \\\n-  bench/crypto_hash.cpp\n+  bench/crypto_hash.cpp \\\n+  bench/base58.cpp\n \n bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      },
      {
        "sha": "1279c3e7df5ddc26cd4aea7dbc38dc9d1b568050",
        "filename": "src/bench/base58.cpp",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1/src/bench/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1/src/bench/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/base58.cpp?ref=5fac1f33fb5afad4cbcb51b7c85ab2cd759846e1",
        "patch": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2016 the Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bench.h\"\n+\n+#include \"main.h\"\n+#include \"base58.h\"\n+\n+#include <vector>\n+#include <string>\n+\n+\n+static void Base58Encode(benchmark::State& state)\n+{\n+    unsigned char buff[32] = {\n+        17, 79, 8, 99, 150, 189, 208, 162, 22, 23, 203, 163, 36, 58, 147,\n+        227, 139, 2, 215, 100, 91, 38, 11, 141, 253, 40, 117, 21, 16, 90,\n+        200, 24\n+    };\n+    unsigned char* b = buff;\n+    while (state.KeepRunning()) {\n+        EncodeBase58(b, b + 32);\n+    }\n+}\n+\n+\n+static void Base58CheckEncode(benchmark::State& state)\n+{\n+    unsigned char buff[32] = {\n+        17, 79, 8, 99, 150, 189, 208, 162, 22, 23, 203, 163, 36, 58, 147,\n+        227, 139, 2, 215, 100, 91, 38, 11, 141, 253, 40, 117, 21, 16, 90,\n+        200, 24\n+    };\n+    unsigned char* b = buff;\n+    std::vector<unsigned char> vch;\n+    vch.assign(b, b + 32);\n+    while (state.KeepRunning()) {\n+        EncodeBase58Check(vch);\n+    }\n+}\n+\n+\n+static void Base58Decode(benchmark::State& state)\n+{\n+    const char* addr = \"17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem\";\n+    std::vector<unsigned char> vch;\n+    while (state.KeepRunning()) {\n+        DecodeBase58(addr, vch);\n+    }\n+}\n+\n+\n+BENCHMARK(Base58Encode);\n+BENCHMARK(Base58CheckEncode);\n+BENCHMARK(Base58Decode);"
      }
    ]
  }
]