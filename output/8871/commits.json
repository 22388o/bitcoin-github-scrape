[
  {
    "sha": "2da86f906679fdc116f567b0d56c6228159a9bfd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZGE4NmY5MDY2NzlmZGMxMTZmNTY3YjBkNTZjNjIyODE1OWE5YmZk",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-10-03T17:00:14Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-10-03T17:14:31Z"
      },
      "message": "Make GetFetchFlags always request witness objects from witness peers\n\nThis fixes a bug where we might (in exceedingly rare circumstances)\naccidentally ban a node for sending us the first (potentially few)\nsegwit blocks in non-segwit mode.",
      "tree": {
        "sha": "aa71c01bebc57655fa82f642ff2ea9035ae2951d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa71c01bebc57655fa82f642ff2ea9035ae2951d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2da86f906679fdc116f567b0d56c6228159a9bfd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2da86f906679fdc116f567b0d56c6228159a9bfd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2da86f906679fdc116f567b0d56c6228159a9bfd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2da86f906679fdc116f567b0d56c6228159a9bfd/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7e5cbb209d4aeb8c2e4c58c92bf214759998056",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7e5cbb209d4aeb8c2e4c58c92bf214759998056",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7e5cbb209d4aeb8c2e4c58c92bf214759998056"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "933004b2911edb26cd95e3fdfe64a059503814b8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2da86f906679fdc116f567b0d56c6228159a9bfd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2da86f906679fdc116f567b0d56c6228159a9bfd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2da86f906679fdc116f567b0d56c6228159a9bfd",
        "patch": "@@ -4922,7 +4922,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n \n uint32_t GetFetchFlags(CNode* pfrom, CBlockIndex* pprev, const Consensus::Params& chainparams) {\n     uint32_t nFetchFlags = 0;\n-    if (IsWitnessEnabled(pprev, chainparams) && State(pfrom->GetId())->fHaveWitness) {\n+    if ((pfrom->GetLocalServices() & NODE_WITNESS) && State(pfrom->GetId())->fHaveWitness) {\n         nFetchFlags |= MSG_WITNESS_FLAG;\n     }\n     return nFetchFlags;"
      }
    ]
  },
  {
    "sha": "84a32a8acfe184041dedfc547d68a9a451406bec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGEzMmE4YWNmZTE4NDA0MWRlZGZjNTQ3ZDY4YTlhNDUxNDA2YmVj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-10-03T17:33:07Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-10-03T17:47:29Z"
      },
      "message": "Fix overly-prescriptive p2p-segwit test for new fetch logic",
      "tree": {
        "sha": "d16065714b400ac6155bbb88de05ab7ac3e6dd35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d16065714b400ac6155bbb88de05ab7ac3e6dd35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84a32a8acfe184041dedfc547d68a9a451406bec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84a32a8acfe184041dedfc547d68a9a451406bec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84a32a8acfe184041dedfc547d68a9a451406bec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84a32a8acfe184041dedfc547d68a9a451406bec/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2da86f906679fdc116f567b0d56c6228159a9bfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2da86f906679fdc116f567b0d56c6228159a9bfd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2da86f906679fdc116f567b0d56c6228159a9bfd"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 1,
      "deletions": 9
    },
    "files": [
      {
        "sha": "c2ea20bb845c870552ac50d4c3c34b4870a3d4e3",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a32a8acfe184041dedfc547d68a9a451406bec/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a32a8acfe184041dedfc547d68a9a451406bec/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=84a32a8acfe184041dedfc547d68a9a451406bec",
        "patch": "@@ -912,14 +912,6 @@ def test_witness_tx_relay_before_segwit_activation(self):\n         # But eliminating the witness should fix it\n         self.test_node.test_transaction_acceptance(tx, with_witness=False, accepted=True)\n \n-        # Verify that inv's to test_node come with getdata's for non-witness tx's\n-        # Just tweak the transaction, announce it, and verify we get a getdata\n-        # for a normal tx\n-        tx.vout[0].scriptPubKey = CScript([OP_TRUE, OP_TRUE])\n-        tx.rehash()\n-        self.test_node.announce_tx_and_wait_for_getdata(tx)\n-        assert(self.test_node.last_getdata.inv[0].type == 1)\n-\n         # Cleanup: mine the first transaction and update utxo\n         self.nodes[0].generate(1)\n         assert_equal(len(self.nodes[0].getrawmempool()),  0)\n@@ -1025,7 +1017,7 @@ def test_tx_relay_after_segwit_activation(self):\n     def test_block_relay(self, segwit_activated):\n         print(\"\\tTesting block relay\")\n \n-        blocktype = 2|MSG_WITNESS_FLAG if segwit_activated else 2\n+        blocktype = 2|MSG_WITNESS_FLAG\n \n         # test_node has set NODE_WITNESS, so all getdata requests should be for\n         # witness blocks."
      }
    ]
  }
]