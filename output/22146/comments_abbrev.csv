practicalswift,2021-06-05 20:15:27,"Concept ACK\n\nFeels great to see OSS-Fuzz find potential robustness issues in new code long long before any end-users risk hitting them.",https://github.com/bitcoin/bitcoin/pull/22146#issuecomment-855290226,855290226,
theStack,2021-06-09 12:27:29,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22146#issuecomment-857651537,857651537,
practicalswift,2021-06-13 19:53:08,cr ACK fa9ebedec3f982bb5bb459ea33d74c94d9b5cec4: patch looks correct,https://github.com/bitcoin/bitcoin/pull/22146#issuecomment-860261826,860261826,
jamesob,2021-06-28 13:55:49,"crACK https://github.com/bitcoin/bitcoin/pull/22146/commits/fa9ebedec3f982bb5bb459ea33d74c94d9b5cec4\n\nLooks good; thanks for finding and fixing @MarcoFalke.",https://github.com/bitcoin/bitcoin/pull/22146#issuecomment-869706552,869706552,
fanquake,2021-06-28 03:33:17,nit: `#include <limits>`,https://github.com/bitcoin/bitcoin/pull/22146#discussion_r659456581,659456581,src/validation.cpp
MarcoFalke,2021-06-28 06:55:41,"The file is already using `std::numeric_limits`, so it seem cleanup that can be done independent of this change. In fact there a quite a few other files which are missing the include, so I am leaving this for another pull:\n\n```\n-src/bench/nanobench.h\n-src/bitcoin-util.cpp\n-src/blockencodings.cpp\n-src/blockencodings.h\n-src/bloom.cpp\n-src/chain.cpp\n-src/chainparams.cpp\n-src/fs.cp",https://github.com/bitcoin/bitcoin/pull/22146#discussion_r659524644,659524644,src/validation.cpp
