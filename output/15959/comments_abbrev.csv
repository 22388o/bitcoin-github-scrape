luke-jr,2019-05-06 14:23:51,Wouldn't it be better to just add `-fno-inline-small-functions` when a broken compiler version is detected? (Isn't this bug liable to affect other random bits of code?),https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-489639630,489639630,
laanwj,2019-05-06 14:31:39,"> Wouldn't it be better to just add -fno-inline-small-functions when a broken compiler version is detected? (Isn't this bug liable to affect other random bits of code?)\n\nThe one doesn't rule out the other, though I would personally feel more comfortable with that solution. It's unclear to me what else this bug might potentially affect.",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-489642485,489642485,
practicalswift,2019-05-06 14:54:17,"Concept ACK on working around the GCC issue but I agree with @luke-jr and @laanwj that introducing `-fno-inline-small-functions` would be good.\n\nI think we should add `-fno-inline-small-functions` when building with GCC and keep the code unchanged: that way we will notice if `-fno-inline-small-functions` is removed prematurely in the future (that is: before these GCC versions have died out).",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-489650838,489650838,
MarcoFalke,2019-05-06 14:58:47,"Ok, marking up for grabs for someone to change the build system.",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-489652531,489652531,
gmaxwell,2019-05-07 18:54:09,"I would expect -fno-inline-small-functions to be devastating for performance and I also believe would not completely work around the bug. I believe -fstack-reuse=none would be a more correct, and less impacting, workaround. ",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490211945,490211945,
luke-jr,2019-05-07 20:42:07,I wonder if there's a reliable compile test we could have configure run to detect the actual bug?,https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490247454,490247454,
MarcoFalke,2019-05-07 20:44:32,"The test case from the gcc bug wouldn't work? And if disabling fstack-reuse isn't too expensive, we might just do it unconditionally?",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490248238,490248238,
sipa,2019-05-07 21:14:14,"I would also expect that -fstack-reuse=none has less impact than -fno-inline-small-functions, but benchmarks would be nice.\n\nI'll PR the reproduction bug as a unit test.",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490257768,490257768,
gmaxwell,2019-05-07 21:30:25,"stack-reuse=none also has the advantage of turning some lifetime management bugs into less-bugs (which is AFAICT why the option exists). I would expect it to increase stack usage, which right now we're not currently particularly careful with.",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490262604,490262604,
gmaxwell,2019-05-07 21:32:57,"@luke-jr on reliability, I think we'd be better off detecting versions than trying to use the test case. Unfortunately, it's unclear what versions this will be fixed in:  (so far) it appears that this is actually hard for GCC to fix without severely gimping optimization.\n\nFWIW, the test case does not fail on PPC but I am moderately confident that bug exists there (it might be just that the lar",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490263359,490263359,
laanwj,2019-05-08 09:51:11,"Yes, `-fstack-reuse=none` would be better. Could do it unconditionally for gcc, at least for now. Then when there are versions that patch it, add exceptions.",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490423900,490423900,
MarcoFalke,2019-05-08 18:22:54,"Thanks everyone for the input, closing in favour of \n\n* build with -fstack-reuse=none #15983 ",https://github.com/bitcoin/bitcoin/pull/15959#issuecomment-490596675,490596675,
