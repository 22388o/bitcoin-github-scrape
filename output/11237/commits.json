[
  {
    "sha": "3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjY5YTA4YzUzYzJlZjczOGYzMmMyNzBmZGFjZjFlNGVkNWE0Yzk3",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-09-05T22:49:36Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-09-05T22:49:36Z"
      },
      "message": "Fix division by zero in time remaining",
      "tree": {
        "sha": "cb47f43fda71918e9d2d7f1621fc33e63cb68d78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb47f43fda71918e9d2d7f1621fc33e63cb68d78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50fae68d416b4b8ec4ca192923dfd5ae9ea42773",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50fae68d416b4b8ec4ca192923dfd5ae9ea42773",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50fae68d416b4b8ec4ca192923dfd5ae9ea42773"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4f357e297d79e6cd89a0ed27abe43553beeb6b21",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
        "patch": "@@ -99,15 +99,18 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n                 progressDelta = progressStart-sample.second;\n                 timeDelta = blockProcessTime[0].first - sample.first;\n                 progressPerHour = progressDelta/(double)timeDelta*1000*3600;\n-                remainingMSecs = remainingProgress / progressDelta * timeDelta;\n+                remainingMSecs = (progressDelta > 0) ? remainingProgress / progressDelta * timeDelta : -1;\n                 break;\n             }\n         }\n         // show progress increase per hour\n         ui->progressIncreasePerH->setText(QString::number(progressPerHour*100, 'f', 2)+\"%\");\n \n-        // show expected remaining time\n-        ui->expectedTimeLeft->setText(GUIUtil::formatNiceTimeOffset(remainingMSecs/1000.0));\n+        if(remainingMSecs >= 0) {\t\n+            ui->expectedTimeLeft->setText(GUIUtil::formatNiceTimeOffset(remainingMSecs / 1000.0));\n+        } else {\n+            ui->expectedTimeLeft->setText(QObject::tr(\"unknown\"));\n+        }\n \n         static const int MAX_SAMPLES = 5000;\n         if (blockProcessTime.count() > MAX_SAMPLES)\n@@ -169,4 +172,4 @@ void ModalOverlay::closeClicked()\n {\n     showHide(true);\n     userClosed = true;\n-}\n+}\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "c8d38abd65d920ec28c68020bf910cfa79216bd5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGQzOGFiZDY1ZDkyMGVjMjhjNjgwMjBiZjkxMGNmYTc5MjE2YmQ1",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-09-05T22:50:05Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-09-05T22:50:05Z"
      },
      "message": "Refactor tipUpdate as per style guide",
      "tree": {
        "sha": "038bea2ec81626f8cdd8d0b1b35194f7578552c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/038bea2ec81626f8cdd8d0b1b35194f7578552c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8d38abd65d920ec28c68020bf910cfa79216bd5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8d38abd65d920ec28c68020bf910cfa79216bd5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8d38abd65d920ec28c68020bf910cfa79216bd5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8d38abd65d920ec28c68020bf910cfa79216bd5/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 10,
      "deletions": 11
    },
    "files": [
      {
        "sha": "e32a0bdda8ebf5cb2c7452c0752b5b0acef78662",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8d38abd65d920ec28c68020bf910cfa79216bd5/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8d38abd65d920ec28c68020bf910cfa79216bd5/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=c8d38abd65d920ec28c68020bf910cfa79216bd5",
        "patch": "@@ -82,39 +82,38 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n     blockProcessTime.push_front(qMakePair(currentDate.toMSecsSinceEpoch(), nVerificationProgress));\n \n     // show progress speed if we have more then one sample\n-    if (blockProcessTime.size() >= 2)\n-    {\n-        double progressStart = blockProcessTime[0].second;\n+    if (blockProcessTime.size() >= 2) {\n         double progressDelta = 0;\n         double progressPerHour = 0;\n         qint64 timeDelta = 0;\n         qint64 remainingMSecs = 0;\n         double remainingProgress = 1.0 - nVerificationProgress;\n-        for (int i = 1; i < blockProcessTime.size(); i++)\n-        {\n+        for (int i = 1; i < blockProcessTime.size(); i++) {\n             QPair<qint64, double> sample = blockProcessTime[i];\n \n             // take first sample after 500 seconds or last available one\n             if (sample.first < (currentDate.toMSecsSinceEpoch() - 500 * 1000) || i == blockProcessTime.size() - 1) {\n-                progressDelta = progressStart-sample.second;\n+                progressDelta = blockProcessTime[0].second - sample.second;\n                 timeDelta = blockProcessTime[0].first - sample.first;\n-                progressPerHour = progressDelta/(double)timeDelta*1000*3600;\n+                progressPerHour = progressDelta / (double) timeDelta * 1000 * 3600;\n                 remainingMSecs = (progressDelta > 0) ? remainingProgress / progressDelta * timeDelta : -1;\n                 break;\n             }\n         }\n         // show progress increase per hour\n-        ui->progressIncreasePerH->setText(QString::number(progressPerHour*100, 'f', 2)+\"%\");\n+        ui->progressIncreasePerH->setText(QString::number(progressPerHour * 100, 'f', 2)+\"%\");\n \n+        // show expected remaining time\n         if(remainingMSecs >= 0) {\t\n             ui->expectedTimeLeft->setText(GUIUtil::formatNiceTimeOffset(remainingMSecs / 1000.0));\n         } else {\n             ui->expectedTimeLeft->setText(QObject::tr(\"unknown\"));\n         }\n \n         static const int MAX_SAMPLES = 5000;\n-        if (blockProcessTime.count() > MAX_SAMPLES)\n-            blockProcessTime.remove(MAX_SAMPLES, blockProcessTime.count()-MAX_SAMPLES);\n+        if (blockProcessTime.count() > MAX_SAMPLES) {\n+            blockProcessTime.remove(MAX_SAMPLES, blockProcessTime.count() - MAX_SAMPLES);\n+        }\n     }\n \n     // show the last block date\n@@ -172,4 +171,4 @@ void ModalOverlay::closeClicked()\n {\n     showHide(true);\n     userClosed = true;\n-}\n\\ No newline at end of file\n+}"
      }
    ]
  }
]