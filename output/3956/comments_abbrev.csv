laanwj,2014-03-26T09:19:47Z,"Not all tests may want to have the same setup steps or arguments. Defining a rigid base class limits flexibility.\n\nFor example tests may want a different number of nodes, different command line arguments, or nodes with special configuration, etc. \n\nIf you take this into account in a base class you may end up with some huge overdesigned system (which people have to learn before they can contrib",https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38662934,38662934,
alonmuroch,2014-03-26T09:27:03Z,"For very different test setups, a common base class may not work. The thing is, Gavin just made some changes to the RPC testing(#3863), for now we have only one test that implements the skeleton test, what if we had a 100 that were based on the skeleton .. we would have had to go and fix manually all of them.\n",https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38663485,38663485,
laanwj,2014-03-26T09:30:00Z,"Well in the least you then need to have methods on the skeleton object (that can be overridden) that provide all the configurable steps such as command line arguments, node setup, ...\n\nIf subclasses end up overriding everything in the skeleton it will be exactly the same and you still need to manually fix everything.\n",https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38663711,38663711,
alonmuroch,2014-03-27T08:56:52Z,"I can start creating methods that the parent class can override (init_nodes, stop_nodes,parse_options,etc. ).... but i think the current setup is pretty wide ... you have 200 blocks with 4 nodes ... i think can cover a lot of tests, don't you ?\n",https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38780282,38780282,
laanwj,2014-03-27T08:58:25Z,I do not want to make that judgement for others.\n,https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38780372,38780372,
laanwj,2014-06-03T13:14:20Z,"So, I think that the base idea here is good, but it needs finer customizability in the base class. Adding init_nodes, stop_nodes, parse_options etc, as you said, makes sense.\n",https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-44962376,44962376,
BitcoinPullTester,2014-06-23T14:48:41Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p3956_48b991a930d516a74cf525aaa02159ce0d857aac/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-46854881,46854881,
laanwj,2014-07-08T13:17:23Z,Closing this because of inactivity.\n,https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-48334095,48334095,
laanwj,2014-03-26T09:31:53Z,"This is a generic utility function, no need to make it part of a class (ie, no use of self or global state).\n",https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969010,10969010,qa/rpc-tests/listtransactions.py
laanwj,2014-03-26T09:32:06Z,"Why add this method, and not just call MyTest().main() in step 4?\n",https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969016,10969016,qa/rpc-tests/TEST_EXAMPLE.py
alonmuroch,2014-03-27T08:52:37Z,Fixed it.\n,https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014121,11014121,qa/rpc-tests/TEST_EXAMPLE.py
alonmuroch,2014-03-27T08:54:48Z,Fixed\n,https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014185,11014185,qa/rpc-tests/listtransactions.py
