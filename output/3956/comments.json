[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38662934",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38662934",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 38662934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYyOTM0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T09:19:47Z",
    "updated_at": "2014-03-26T09:26:42Z",
    "author_association": "MEMBER",
    "body": "Not all tests may want to have the same setup steps or arguments. Defining a rigid base class limits flexibility.\n\nFor example tests may want a different number of nodes, different command line arguments, or nodes with special configuration, etc. \n\nIf you take this into account in a base class you may end up with some huge overdesigned system (which people have to learn before they can contribute tests).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38662934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663485",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38663485",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 38663485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYzNDg1",
    "user": {
      "login": "alonmuroch",
      "id": 3773981,
      "node_id": "MDQ6VXNlcjM3NzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3773981?u=5cf570eaee946d5a8920520d8dd5499869faf33a&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alonmuroch",
      "html_url": "https://github.com/alonmuroch",
      "followers_url": "https://api.github.com/users/alonmuroch/followers",
      "following_url": "https://api.github.com/users/alonmuroch/following{/other_user}",
      "gists_url": "https://api.github.com/users/alonmuroch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alonmuroch/subscriptions",
      "organizations_url": "https://api.github.com/users/alonmuroch/orgs",
      "repos_url": "https://api.github.com/users/alonmuroch/repos",
      "events_url": "https://api.github.com/users/alonmuroch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alonmuroch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T09:27:03Z",
    "updated_at": "2014-03-26T09:27:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "For very different test setups, a common base class may not work. The thing is, Gavin just made some changes to the RPC testing(#3863), for now we have only one test that implements the skeleton test, what if we had a 100 that were based on the skeleton .. we would have had to go and fix manually all of them.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663711",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38663711",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 38663711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYzNzEx",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T09:30:00Z",
    "updated_at": "2014-03-26T09:30:00Z",
    "author_association": "MEMBER",
    "body": "Well in the least you then need to have methods on the skeleton object (that can be overridden) that provide all the configurable steps such as command line arguments, node setup, ...\n\nIf subclasses end up overriding everything in the skeleton it will be exactly the same and you still need to manually fix everything.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38663711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780282",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38780282",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 38780282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzgwMjgy",
    "user": {
      "login": "alonmuroch",
      "id": 3773981,
      "node_id": "MDQ6VXNlcjM3NzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3773981?u=5cf570eaee946d5a8920520d8dd5499869faf33a&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alonmuroch",
      "html_url": "https://github.com/alonmuroch",
      "followers_url": "https://api.github.com/users/alonmuroch/followers",
      "following_url": "https://api.github.com/users/alonmuroch/following{/other_user}",
      "gists_url": "https://api.github.com/users/alonmuroch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alonmuroch/subscriptions",
      "organizations_url": "https://api.github.com/users/alonmuroch/orgs",
      "repos_url": "https://api.github.com/users/alonmuroch/repos",
      "events_url": "https://api.github.com/users/alonmuroch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alonmuroch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-27T08:56:52Z",
    "updated_at": "2014-03-27T08:56:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can start creating methods that the parent class can override (init_nodes, stop_nodes,parse_options,etc. ).... but i think the current setup is pretty wide ... you have 200 blocks with 4 nodes ... i think can cover a lot of tests, don't you ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780372",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-38780372",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 38780372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzgwMzcy",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-27T08:58:25Z",
    "updated_at": "2014-03-27T08:58:25Z",
    "author_association": "MEMBER",
    "body": "I do not want to make that judgement for others.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/38780372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44962376",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-44962376",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 44962376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTYyMzc2",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-03T13:14:20Z",
    "updated_at": "2014-06-03T13:14:20Z",
    "author_association": "MEMBER",
    "body": "So, I think that the base idea here is good, but it needs finer customizability in the base class. Adding init_nodes, stop_nodes, parse_options etc, as you said, makes sense.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44962376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46854881",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-46854881",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 46854881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODU0ODgx",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-23T14:48:41Z",
    "updated_at": "2014-06-23T14:48:41Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p3956_48b991a930d516a74cf525aaa02159ce0d857aac/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46854881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/48334095",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#issuecomment-48334095",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3956",
    "id": 48334095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM0MDk1",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T13:17:23Z",
    "updated_at": "2014-07-08T13:17:23Z",
    "author_association": "MEMBER",
    "body": "Closing this because of inactivity.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/48334095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969010",
    "pull_request_review_id": null,
    "id": 10969010,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTY5MDEw",
    "diff_hunk": "@@ -6,151 +6,93 @@\n # Exercise the listtransactions API\n \n # Add python-bitcoinrpc to module search path:\n-import os\n-import sys\n-sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n-\n-import json\n-import shutil\n-import subprocess\n-import tempfile\n-import traceback\n-\n-from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n from util import *\n+from skeleton import Skeleton as baseclass\n \n-\n-def check_array_result(object_array, to_match, expected):\n-    \"\"\"\n-    Pass in array of JSON objects, a dictionary with key/value pairs\n-    to match against, and another dictionary with expected key/value\n-    pairs.\n-    \"\"\"\n-    num_matched = 0\n-    for item in object_array:\n-        all_match = True\n-        for key,value in to_match.items():\n-            if item[key] != value:\n-                all_match = False\n-        if not all_match:\n-            continue\n-        for key,value in expected.items():\n-            if item[key] != value:\n-                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n-            num_matched = num_matched+1\n-    if num_matched == 0:\n-        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n-\n-def run_test(nodes):\n-    # Simple send, 0 to 1:\n-    txid = nodes[0].sendtoaddress(nodes[1].getnewaddress(), 0.1)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":0})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":0})\n-    # mine a block, confirmations should change:\n-    nodes[0].setgenerate(True, 1)\n-    sync_blocks(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":1})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":1})\n-\n-    # send-to-self:\n-    txid = nodes[0].sendtoaddress(nodes[0].getnewaddress(), 0.2)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"send\"},\n-                       {\"amount\":Decimal(\"-0.2\")})\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"receive\"},\n-                       {\"amount\":Decimal(\"0.2\")})\n-\n-    # sendmany from node1: twice to self, twice to node2:\n-    send_to = { nodes[0].getnewaddress() : 0.11, nodes[1].getnewaddress() : 0.22,\n-                nodes[0].getaccountaddress(\"from1\") : 0.33, nodes[1].getaccountaddress(\"toself\") : 0.44 }\n-    txid = nodes[1].sendmany(\"\", send_to)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.33\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.33\")},\n-                       {\"txid\":txid, \"account\" : \"from1\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.44\")},\n-                       {\"txid\":txid, \"account\" : \"\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.44\")},\n-                       {\"txid\":txid, \"account\" : \"toself\"} )\n+class ListtransactionsTest(baseclass):\n     \n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n-    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n-                      help=\"Root directory for datadirs\")\n-    (options, args) = parser.parse_args()\n-\n-    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n-\n-    check_json_precision()\n-\n-    success = False\n-    nodes = []\n-    try:\n-        print(\"Initializing test directory \"+options.tmpdir)\n-        if not os.path.isdir(options.tmpdir):\n-            os.makedirs(options.tmpdir)\n-        initialize_chain(options.tmpdir)\n-\n-        nodes = start_nodes(2, options.tmpdir)\n-        connect_nodes(nodes[1], 0)\n+    def run(self):\n+        super(ListtransactionsTest, self).main()\n+    \n+    def check_array_result(self,object_array, to_match, expected):",
    "path": "qa/rpc-tests/listtransactions.py",
    "position": null,
    "original_position": 130,
    "commit_id": "48b991a930d516a74cf525aaa02159ce0d857aac",
    "original_commit_id": "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a generic utility function, no need to make it part of a class (ie, no use of self or global state).\n",
    "created_at": "2014-03-26T09:31:53Z",
    "updated_at": "2014-03-27T08:52:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969010",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969010"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969010"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969016",
    "pull_request_review_id": null,
    "id": 10969016,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTY5MDE2",
    "diff_hunk": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the listtransactions API\n+\n+# Add python-bitcoinrpc to module search path:\n+from util import *\n+from skeleton import Skeleton as baseclass\n+\n+# 1) Change class name to your test\n+class MyTest(baseclass):\n+    \n+    # 2) Change 'MyTest' to class name\n+    def run(self):\n+        super(MyTest, self).main()",
    "path": "qa/rpc-tests/TEST_EXAMPLE.py",
    "position": null,
    "original_position": 17,
    "commit_id": "48b991a930d516a74cf525aaa02159ce0d857aac",
    "original_commit_id": "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why add this method, and not just call MyTest().main() in step 4?\n",
    "created_at": "2014-03-26T09:32:06Z",
    "updated_at": "2014-03-27T08:52:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969016",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969016"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r10969016"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/10969016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014121",
    "pull_request_review_id": null,
    "id": 11014121,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDE0MTIx",
    "diff_hunk": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the listtransactions API\n+\n+# Add python-bitcoinrpc to module search path:\n+from util import *\n+from skeleton import Skeleton as baseclass\n+\n+# 1) Change class name to your test\n+class MyTest(baseclass):\n+    \n+    # 2) Change 'MyTest' to class name\n+    def run(self):\n+        super(MyTest, self).main()",
    "path": "qa/rpc-tests/TEST_EXAMPLE.py",
    "position": null,
    "original_position": 17,
    "commit_id": "48b991a930d516a74cf525aaa02159ce0d857aac",
    "original_commit_id": "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
    "user": {
      "login": "alonmuroch",
      "id": 3773981,
      "node_id": "MDQ6VXNlcjM3NzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3773981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alonmuroch",
      "html_url": "https://github.com/alonmuroch",
      "followers_url": "https://api.github.com/users/alonmuroch/followers",
      "following_url": "https://api.github.com/users/alonmuroch/following{/other_user}",
      "gists_url": "https://api.github.com/users/alonmuroch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alonmuroch/subscriptions",
      "organizations_url": "https://api.github.com/users/alonmuroch/orgs",
      "repos_url": "https://api.github.com/users/alonmuroch/repos",
      "events_url": "https://api.github.com/users/alonmuroch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alonmuroch/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed it.\n",
    "created_at": "2014-03-27T08:52:37Z",
    "updated_at": "2014-03-27T08:52:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014121",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014121"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014121"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014185",
    "pull_request_review_id": null,
    "id": 11014185,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDE0MTg1",
    "diff_hunk": "@@ -6,151 +6,93 @@\n # Exercise the listtransactions API\n \n # Add python-bitcoinrpc to module search path:\n-import os\n-import sys\n-sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n-\n-import json\n-import shutil\n-import subprocess\n-import tempfile\n-import traceback\n-\n-from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n from util import *\n+from skeleton import Skeleton as baseclass\n \n-\n-def check_array_result(object_array, to_match, expected):\n-    \"\"\"\n-    Pass in array of JSON objects, a dictionary with key/value pairs\n-    to match against, and another dictionary with expected key/value\n-    pairs.\n-    \"\"\"\n-    num_matched = 0\n-    for item in object_array:\n-        all_match = True\n-        for key,value in to_match.items():\n-            if item[key] != value:\n-                all_match = False\n-        if not all_match:\n-            continue\n-        for key,value in expected.items():\n-            if item[key] != value:\n-                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n-            num_matched = num_matched+1\n-    if num_matched == 0:\n-        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n-\n-def run_test(nodes):\n-    # Simple send, 0 to 1:\n-    txid = nodes[0].sendtoaddress(nodes[1].getnewaddress(), 0.1)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":0})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":0})\n-    # mine a block, confirmations should change:\n-    nodes[0].setgenerate(True, 1)\n-    sync_blocks(nodes)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"send\",\"account\":\"\",\"amount\":Decimal(\"-0.1\"),\"confirmations\":1})\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"txid\":txid},\n-                       {\"category\":\"receive\",\"account\":\"\",\"amount\":Decimal(\"0.1\"),\"confirmations\":1})\n-\n-    # send-to-self:\n-    txid = nodes[0].sendtoaddress(nodes[0].getnewaddress(), 0.2)\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"send\"},\n-                       {\"amount\":Decimal(\"-0.2\")})\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"txid\":txid, \"category\":\"receive\"},\n-                       {\"amount\":Decimal(\"0.2\")})\n-\n-    # sendmany from node1: twice to self, twice to node2:\n-    send_to = { nodes[0].getnewaddress() : 0.11, nodes[1].getnewaddress() : 0.22,\n-                nodes[0].getaccountaddress(\"from1\") : 0.33, nodes[1].getaccountaddress(\"toself\") : 0.44 }\n-    txid = nodes[1].sendmany(\"\", send_to)\n-    sync_mempools(nodes)\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.11\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.22\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.33\")},\n-                       {\"txid\":txid} )\n-    check_array_result(nodes[0].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.33\")},\n-                       {\"txid\":txid, \"account\" : \"from1\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"send\",\"amount\":Decimal(\"-0.44\")},\n-                       {\"txid\":txid, \"account\" : \"\"} )\n-    check_array_result(nodes[1].listtransactions(),\n-                       {\"category\":\"receive\",\"amount\":Decimal(\"0.44\")},\n-                       {\"txid\":txid, \"account\" : \"toself\"} )\n+class ListtransactionsTest(baseclass):\n     \n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n-    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n-                      help=\"Root directory for datadirs\")\n-    (options, args) = parser.parse_args()\n-\n-    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n-\n-    check_json_precision()\n-\n-    success = False\n-    nodes = []\n-    try:\n-        print(\"Initializing test directory \"+options.tmpdir)\n-        if not os.path.isdir(options.tmpdir):\n-            os.makedirs(options.tmpdir)\n-        initialize_chain(options.tmpdir)\n-\n-        nodes = start_nodes(2, options.tmpdir)\n-        connect_nodes(nodes[1], 0)\n+    def run(self):\n+        super(ListtransactionsTest, self).main()\n+    \n+    def check_array_result(self,object_array, to_match, expected):",
    "path": "qa/rpc-tests/listtransactions.py",
    "position": null,
    "original_position": 130,
    "commit_id": "48b991a930d516a74cf525aaa02159ce0d857aac",
    "original_commit_id": "5b63af7632ea700c8b5e35140f93b70dd33bab0c",
    "user": {
      "login": "alonmuroch",
      "id": 3773981,
      "node_id": "MDQ6VXNlcjM3NzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3773981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alonmuroch",
      "html_url": "https://github.com/alonmuroch",
      "followers_url": "https://api.github.com/users/alonmuroch/followers",
      "following_url": "https://api.github.com/users/alonmuroch/following{/other_user}",
      "gists_url": "https://api.github.com/users/alonmuroch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alonmuroch/subscriptions",
      "organizations_url": "https://api.github.com/users/alonmuroch/orgs",
      "repos_url": "https://api.github.com/users/alonmuroch/repos",
      "events_url": "https://api.github.com/users/alonmuroch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alonmuroch/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed\n",
    "created_at": "2014-03-27T08:54:48Z",
    "updated_at": "2014-03-27T08:54:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014185",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014185"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3956#discussion_r11014185"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3956"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11014185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  }
]