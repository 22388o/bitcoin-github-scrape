DrahtBot,2019-01-30T12:14:22Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-458922812,458922812,
MarcoFalke,2019-01-30T13:41:10Z,Generally we don't work around bugs in a compiler if they are only warning related and fixed in recent versions.,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-458947214,458947214,
hebasto,2019-01-30T13:44:57Z,"@MarcoFalke \n> Generally we don't work around bugs in a compiler if they are only warning related and fixed in recent versions.\n\nWhich recent version of gcc do you mean?\n\n",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-458948433,458948433,
MarcoFalke,2019-01-30T14:41:33Z,"According to the bug report, it was fixed in gcc6. I am using clang7.",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-458967976,458967976,
ryanofsky,2019-01-30T15:29:11Z,"I would prefer not to make these changes since I think they make the code less readable, are only applicable to older buggy versions of gcc, and just avoid warnings not errors.\n\nBut I will add my utACK 595b62fcf93aedc852dc93a7b5f112f11e50a5ef since the changes do look safe, and other people might want them.\n\nI wonder what would happen if you tried to replace:\n\n```c++\nOptional<int> he",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-458986291,458986291,
hebasto,2019-01-30T17:09:30Z,"@MarcoFalke \n> According to the bug report, it was fixed in gcc6. I am using clang7.\n\nI am using gcc 7.3.0 (both Linux Mint 19.1 and Ubuntu Bionic). Warnings are still present.\n\n@ryanofsky \n> `Optional<int> height = nullopt;`\n\nI've tried this approach while working on this PR. `nullopt` did not help. Perhaps this is due to the lazy initialization inside `boost::optional`.\n\n",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459026513,459026513,
MarcoFalke,2019-01-30T17:13:00Z,"gcc8 will also spit out a false positive warning, since it can not infer that either none or both of `altheight` and `height` are initialized. Not sure if this should be fixed or how.",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459027769,459027769,
Empact,2019-01-30T18:51:18Z,"I think ""The default constructor of optional creates an uninitialized optional object."" may be misleading as default-constructed values are valid, [e.g.](https://www.boost.org/doc/libs/1_69_0/libs/optional/doc/html/boost_optional/tutorial/gotchas/false_positive_with__wmaybe_uninitialized.html). `boost::optional` has an [`is_initialized`](https://github.com/boostorg/optional/blob/master/include/boo",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459063170,459063170,
hebasto,2019-01-30T18:57:11Z,@Empact TIL. Thank you.,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459065215,459065215,
hebasto,2019-01-30T19:12:19Z,@Empact your comment has been addressed.,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459070602,459070602,
laanwj,2019-01-30T19:31:13Z,"I'm using gcc 7.3.0 on my main development system so I see these scary warnings *all the time*, so I'd prefer for this to be merged or the relevant warning disabled (for that gcc).\n\nEdit: tested that this makes the warnings disappear here.",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459077602,459077602,
gmaxwell,2019-01-30T19:55:33Z,"Found this PR after seeing the scary warnings... maybe-uninitialized is a pretty potent warning, I wouldn't want to disable it unless it was only on old compilers.",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459085890,459085890,
MarcoFalke,2019-01-30T20:03:16Z,"Hmm, one of the warnings disappears when going from gcc7 to gcc8?",https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459088450,459088450,
practicalswift,2019-01-30T20:28:49Z,utACK c14d5800032158f43b5d790f89f3d7a1fc18e1e7 modulo @laanwj's nit regarding `optional.h`,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459096745,459096745,
hebasto,2019-01-30T20:46:45Z,@laanwj's nit has been addressed.,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459102456,459102456,
practicalswift,2019-01-30T20:54:09Z,utACK 2d483142a7051389afe74c57a216843e6306f1a8,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459104862,459104862,
laanwj,2019-01-30T21:43:49Z,utACK 2d483142a7051389afe74c57a216843e6306f1a8,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459121295,459121295,
Empact,2019-01-30T22:07:10Z,utACK https://github.com/bitcoin/bitcoin/pull/15292/commits/2d483142a7051389afe74c57a216843e6306f1a8,https://github.com/bitcoin/bitcoin/pull/15292#issuecomment-459129032,459129032,
laanwj,2019-01-30T19:33:05Z,"I'd mildly prefer to redirect this through our `optional.h`, define our own `make_optional` like the `Option<T>` itself instead of boost appearing here direclty.",https://github.com/bitcoin/bitcoin/pull/15292#discussion_r252405892,252405892,src/wallet/rpcwallet.cpp
