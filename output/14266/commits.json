[
  {
    "sha": "d2eee87928781ab3082d4279aa6f19641a45e801",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmVlZTg3OTI4NzgxYWIzMDgyZDQyNzlhYTZmMTk2NDFhNDVlODAx",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-19T06:02:12Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-19T06:02:12Z"
      },
      "message": "Lift prevector default vals to the member declaration",
      "tree": {
        "sha": "254722d3929197381cc968555b8405823f920f59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/254722d3929197381cc968555b8405823f920f59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2eee87928781ab3082d4279aa6f19641a45e801",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJboeZlAAoJEG7l83hfeLNFxEMIAKxhoW2r8ox19zyQcJQDz8Ln\noVdmsCjye3jxTQG49DbWfMhWcH+2y0yj0AlLeDhyOus8QyPL0aWBsdBQ2Abm547h\nGhoobfGm5a+8263PIxjBbgGSq97pBXDcNBlaGH1/l2lWX9bhqiU3O6ULnbEzZN0W\nJilDFohEoyJLoXYovrMkpcR5pTCtZDzTlNQhyYxs3XcGn9kRC8vI3I2gZJtzhWbN\n4oxWLtbI+fbSst841UodtcBWCYbXCnd7HCVrig64MniHpWJCDfT0yMOoAx/hC7Nd\noE+ONklV9OnP0czX4OJKyB4Nvd65lf5YvfiBAtEvbpeqkL1JZTewgAWHjDBHRNQ=\n=oN38\n-----END PGP SIGNATURE-----",
        "payload": "tree 254722d3929197381cc968555b8405823f920f59\nparent d26278988fbfc71dc558f7b2c60a184e8091450b\nauthor Ben Woosley <ben.woosley@gmail.com> 1537336932 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1537336932 -0400\n\nLift prevector default vals to the member declaration\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2eee87928781ab3082d4279aa6f19641a45e801",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2eee87928781ab3082d4279aa6f19641a45e801",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2eee87928781ab3082d4279aa6f19641a45e801/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d26278988fbfc71dc558f7b2c60a184e8091450b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d26278988fbfc71dc558f7b2c60a184e8091450b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d26278988fbfc71dc558f7b2c60a184e8091450b"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "24831848b5f04da08c9394b5844fcd6dacbe126c",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2eee87928781ab3082d4279aa6f19641a45e801/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2eee87928781ab3082d4279aa6f19641a45e801/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=d2eee87928781ab3082d4279aa6f19641a45e801",
        "patch": "@@ -148,14 +148,14 @@ class prevector {\n     };\n \n private:\n-    size_type _size;\n+    size_type _size = 0;\n     union direct_or_indirect {\n         char direct[sizeof(T) * N];\n         struct {\n             size_type capacity;\n             char* indirect;\n         };\n-    } _union;\n+    } _union = {};\n \n     T* direct_ptr(difference_type pos) { return reinterpret_cast<T*>(_union.direct) + pos; }\n     const T* direct_ptr(difference_type pos) const { return reinterpret_cast<const T*>(_union.direct) + pos; }\n@@ -246,34 +246,34 @@ class prevector {\n         fill(item_ptr(0), first, last);\n     }\n \n-    prevector() : _size(0), _union{{}} {}\n+    prevector() {}\n \n-    explicit prevector(size_type n) : prevector() {\n+    explicit prevector(size_type n) {\n         resize(n);\n     }\n \n-    explicit prevector(size_type n, const T& val) : prevector() {\n+    explicit prevector(size_type n, const T& val) {\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), n, val);\n     }\n \n     template<typename InputIterator>\n-    prevector(InputIterator first, InputIterator last) : prevector() {\n+    prevector(InputIterator first, InputIterator last) {\n         size_type n = last - first;\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), first, last);\n     }\n \n-    prevector(const prevector<N, T, Size, Diff>& other) : prevector() {\n+    prevector(const prevector<N, T, Size, Diff>& other) {\n         size_type n = other.size();\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), other.begin(),  other.end());\n     }\n \n-    prevector(prevector<N, T, Size, Diff>&& other) : prevector() {\n+    prevector(prevector<N, T, Size, Diff>&& other) {\n         swap(other);\n     }\n "
      }
    ]
  }
]