[
  {
    "sha": "aa410c2b17c0320123fde3d3bf205a64d86b8696",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTQxMGMyYjE3YzAzMjAxMjNmZGUzZDNiZjIwNWE2NGQ4NmI4Njk2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-04-08T14:40:57Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-04-08T15:12:54Z"
      },
      "message": "rpc: Validate maxfeerate with AmountFromValue",
      "tree": {
        "sha": "4b6acbba6367568c17817b572f4015cb553d6d7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b6acbba6367568c17817b572f4015cb553d6d7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa410c2b17c0320123fde3d3bf205a64d86b8696",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa410c2b17c0320123fde3d3bf205a64d86b8696",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa410c2b17c0320123fde3d3bf205a64d86b8696",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa410c2b17c0320123fde3d3bf205a64d86b8696/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "327d2746fb9240ff0751a7c8f501c9745ba55bba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/327d2746fb9240ff0751a7c8f501c9745ba55bba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/327d2746fb9240ff0751a7c8f501c9745ba55bba"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "950b1e1ac87bd50fd3dd59deae4ac71710ba950d",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa410c2b17c0320123fde3d3bf205a64d86b8696/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa410c2b17c0320123fde3d3bf205a64d86b8696/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=aa410c2b17c0320123fde3d3bf205a64d86b8696",
        "patch": "@@ -1090,15 +1090,13 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n     // TODO: temporary migration code for old clients. Remove in v0.20\n     if (request.params[1].isBool()) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second argument must be numeric (maxfeerate) and no longer supports a boolean. To allow a transaction with high fees, set maxfeerate to 0.\");\n-    } else if (request.params[1].isNum()) {\n+    } else if (!request.params[1].isNull()) {\n         size_t weight = GetTransactionWeight(*tx);\n         CFeeRate fr(AmountFromValue(request.params[1]));\n         // the +3/4 part rounds the value up, and is the same formula used when\n         // calculating the fee for a transaction\n         // (see GetVirtualTransactionSize)\n         max_raw_tx_fee = fr.GetFee((weight+3)/4);\n-    } else if (!request.params[1].isNull()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"second argument (maxfeerate) must be numeric\");\n     }\n \n     uint256 txid;\n@@ -1172,15 +1170,13 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n     // TODO: temporary migration code for old clients. Remove in v0.20\n     if (request.params[1].isBool()) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second argument must be numeric (maxfeerate) and no longer supports a boolean. To allow a transaction with high fees, set maxfeerate to 0.\");\n-    } else if (request.params[1].isNum()) {\n+    } else if (!request.params[1].isNull()) {\n         size_t weight = GetTransactionWeight(*tx);\n         CFeeRate fr(AmountFromValue(request.params[1]));\n         // the +3/4 part rounds the value up, and is the same formula used when\n         // calculating the fee for a transaction\n         // (see GetVirtualTransactionSize)\n         max_raw_tx_fee = fr.GetFee((weight+3)/4);\n-    } else if (!request.params[1].isNull()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"second argument (maxfeerate) must be numeric\");\n     }\n \n     UniValue result(UniValue::VARR);"
      },
      {
        "sha": "6e71817dc3717b1fe510357293594aadf940dd63",
        "filename": "test/functional/rpc_rawtransaction.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa410c2b17c0320123fde3d3bf205a64d86b8696/test/functional/rpc_rawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa410c2b17c0320123fde3d3bf205a64d86b8696/test/functional/rpc_rawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_rawtransaction.py?ref=aa410c2b17c0320123fde3d3bf205a64d86b8696",
        "patch": "@@ -446,9 +446,9 @@ def run_test(self):\n         # and sendrawtransaction should throw\n         assert_raises_rpc_error(-26, \"absurdly-high-fee\", self.nodes[2].sendrawtransaction, rawTxSigned['hex'], 0.00001000)\n         # And below calls should both succeed\n-        testres = self.nodes[2].testmempoolaccept(rawtxs=[rawTxSigned['hex']], maxfeerate=0.00007000)[0]\n+        testres = self.nodes[2].testmempoolaccept(rawtxs=[rawTxSigned['hex']], maxfeerate='0.00007000')[0]\n         assert_equal(testres['allowed'], True)\n-        self.nodes[2].sendrawtransaction(hexstring=rawTxSigned['hex'], maxfeerate=0.00007000)\n+        self.nodes[2].sendrawtransaction(hexstring=rawTxSigned['hex'], maxfeerate='0.00007000')\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]