petertodd,2013-10-31T14:06:06Z,Can you explain what actions you expect implementations to take in response to a block rejection message?\n,https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27488114,27488114,
gavinandresen,2013-10-31T21:22:28Z,"@petertodd: once an implementation is mature, I expect it would do nothing in response to a block rejection message, because false-positives (attackers being annoying) will be more common than true positives.\n\nWhile an implementation is being developed, I expect the developers will investigate every rejection message.\n\nI thought I was pretty clear in the gist that is the purpose of this messag",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27530058,27530058,
mikehearn,2013-11-01T14:25:46Z,Looks good to me. Thanks for doing this.\n,https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27568931,27568931,
jgarzik,2013-11-01T14:28:06Z,Looks easy to fill up the disk with a stream of remote 'reject' messages.\n,https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27569097,27569097,
mikehearn,2013-11-01T14:40:55Z,"If you're thinking of logs, they're rotated anyway, I thought (or could be). Anyway making log rotation work nicely is an unrelated change.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27570084,27570084,
jgarzik,2013-11-01T15:03:15Z,"That's a dodge.  There's no rate limiting, you're still streaming from remote -> local disk.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27571797,27571797,
petertodd,2013-11-01T15:07:07Z,"@gavinandresen Right, so you're basically saying block rejection messages could be useful for an alt-implementation that's being used for mining. We know that the state of computer science isn't close to the point where we can do that safely; I personally a half-dozen forking bugs across a few alt-implementations the other week after an hour or two of work spent auditing them. We don't want to enc",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27572075,27572075,
petertodd,2013-11-01T15:09:49Z,"@jgarzik Looks to me like you could dump a 32MiB rejection message into your remotes logs, and what's worse is that I don't see anything stopping you from making fake logs by putting newlines in that rejection message. Ugh.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27572266,27572266,
mikehearn,2013-11-01T15:11:49Z,"@jgarzik It's not a dodge. You can fill up the logs just by connecting repeatedly as well, or sending messages that cause a Misbehaving(0) to be hit, or lots of other things. That's just not something that's currently in our threat model. If you want to strengthen the bitcoind threat model to include ""attacker filling up logs"" then go ahead and do that on a new set of changes. It's just irrelevant",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27572417,27572417,
petertodd,2013-11-01T15:21:01Z,"@mikehearn @gavinandresen Should be forbidding anything non-ascii-standard, newline and carriage return, and limit messages to, say, 256 characters. (we did something similar with alert messages right?)\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27573153,27573153,
gavinandresen,2013-11-01T18:34:38Z,"@jgarzik @petertodd : Reject messages are only logged if you are running -debug=net  (or -debug which means ""everything""). I am assuming that you will only run -debug=net when you are, you know, debugging, and probably controlling who you are connecting to.\n\nI'll add a ""print out only the first 111 bytes"", that should be sufficient belt-and-suspenders.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27589382,27589382,
petertodd,2013-11-01T18:47:36Z,"@gavinandresen I run all my nodes with -debug=net all the time so that if something odd happens with the network  (e.g. the chain fork) I can debug it; I've got stacks of disk space and io bandwidth. Filtering out garbage, especially newlines, is an absolute must.\n\nAlso, still NACK on block messages.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27590628,27590628,
gavinandresen,2013-11-01T18:53:44Z,"@petertodd:  duly noted.\n\nEverybody else:  any objections?  If pull tester is happy, I'm going to pull.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27591220,27591220,
gmaxwell,2013-11-01T19:12:40Z,We probably shouldn't allow control characters in printfs from the network. I don't believe we do anywhere else (and I'd looked some back when the OSX unicode crasher happened). Beyond log entry emulation free access lets you trash peoples' terminals.\n\nRunning the text through a URL encode would probably be a trivial way to avoid trouble.\n,https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27592756,27592756,
gavinandresen,2013-11-01T19:35:41Z,"@gmaxwell : good point RE: -printtoconsole.\n\nTwo commits now-- the first refactors the code we have in alert for sanitizing a string into a util.h SanitizeString method. Please don't suggest super-optimizing it with a lookup table, this is not performance-critical code.\n\nThe second limits the text printed to debug.log if -debug or -debug=net to 111 safe characters.\n\n@petertodd : I'd get less",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27594574,27594574,
petertodd,2013-11-01T19:38:28Z,"@gavinandresen I hadn't read the code until today.\n\nAlso, limit the string to 111 characters first, then sanitize it.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27594805,27594805,
gavinandresen,2013-11-01T20:16:27Z,"@jgarzik @sipa : I think I've addressed all your concerns, I'd really like to move on to bigger and better things (almost have a relay-first-doublespend pull ready), can I get ""good enough to pull"" ACKs ?\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27597490,27597490,
gavinandresen,2013-11-04T04:21:45Z,"Rebased to fix conflicts with mempool refactor.\n\nFixed the alert unit tests so bumping protocol version doesn't make them break any more, and bumped the protocol version to 70002.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27664061,27664061,
laanwj,2013-11-04T10:06:22Z,"ACK\n\nImplementation nit: in all call sites the reject reason message is kind of\nduplicated in the logged error message, the the point of both simply being\nreworded versions of each other. It may make sense to reuse the same\nmessage except where two different messages are really needed (ie for\nprivacy/security concerns).\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27674594,27674594,
mikehearn,2013-11-04T10:18:17Z,Looks good to me\n,https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27675171,27675171,
Diapolo,2013-11-04T11:39:26Z,"@laanwj I thought the same, many strings seem just to be small modifications and tend to be dups even in some cases.\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-27679329,27679329,
gavinandresen,2013-11-11T00:36:33Z,"Rebased.\n\nRE: duplicating strings for debug.log and the reject message:  I decided a fix would be worth than the disease.\n\nCan't resist:  ""A foolish consistency is the hobgoblin of little minds, adored by little statesmen and philosophers and divines."" -- Ralph Waldo Emerson\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-28165720,28165720,
BitcoinPullTester,2013-11-11T00:54:40Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/69aada346f74c978b5d8be59a5d7c79be966ef8c for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-28166122,28166122,
laanwj,2013-11-11T06:58:07Z,"@gavinandresen right, if it were translated messages it'd be different\n",https://github.com/bitcoin/bitcoin/pull/3185#issuecomment-28178040,28178040,
sipa,2013-11-01T19:47:20Z,"I dislike having codes in the protocol that correspond to implementation-specific details (nonstandard, dust, insufficient fee, and checkpoint). I'd prefer just encoding the class of problem (p2p protocol violatiom, network rule violation, local client policy) in the code, and use the message to further describe as necessary. Otherwise we'll end up with many extensions over time, and obsolete code",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7379615,7379615,src/main.h
sipa,2013-11-01T19:47:57Z,"Why just the inv.hash, and not the whole actual inv?\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7379631,7379631,src/main.cpp
sipa,2013-11-01T19:49:33Z,Adding a new P2P message certainly warrants a PROTOCOL_VERSION bump and a corresponding BIP.\n,https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7379673,7379673,src/main.cpp
gavinandresen,2013-11-01T19:54:29Z,"Happy to write a BIP after we're sure we're happy with how it is working.\n\nPROTOCOL_VERSION bump: disagree:\n\n""Sending ""reject"" messages to old nodes does no harm-- unknown commands are ignored for extensibility (in the reference implementation, at least-- other implementations should do the same). So there is no need to bump the protocol version.""\n\n... but don't really care and will sway to ",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7379822,7379822,src/main.cpp
sipa,2013-11-01T19:54:58Z,"It seems REJECT_OBSOLETE can both be used for an obsolete P2P protocol number, and an obsolete block version.\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7379835,7379835,src/main.h
gavinandresen,2013-11-01T19:59:15Z,"Because the only thing serializing a CInv would add would be the MSG_TX byte, and strCommand already encodes that information.\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7379953,7379953,src/main.cpp
gavinandresen,2013-11-01T20:01:43Z,"Yes, REJECT_OBSOLETE can be used for both.  You get ""reject"" ""block"" OBSOLETE or ""reject"" ""version"" OBSOLETE.\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7380006,7380006,src/main.h
gavinandresen,2013-11-01T20:05:10Z,RE: encoding class and letting the string encode the detail:\n\nMeh.  Either we'll get obsolete codes or we'll have peers trying to parse strings to figure out if their transactions are rejected because they don't have enough fees or because they have a dusty output.\n\nI vote for obsolete codes as the lesser of the two evils.\n,https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7380078,7380078,src/main.h
sipa,2013-11-01T20:05:58Z,I would certainly not confuse a protocol problem with a consensus rule violation.\n,https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7380099,7380099,src/main.h
sipa,2013-11-01T20:08:46Z,"But it can come as a response to both a transaction or a block, and we identify relayed objects by their CInv.\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7380150,7380150,src/main.cpp
sipa,2013-11-01T20:09:26Z,"Increasing the protocol version is easy and cheap, and it allows discovery of nodes with certain features.\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7380162,7380162,src/main.cpp
sipa,2013-11-01T20:15:07Z,"Sorry, I completely missed the strCommand. Ignore my comment.\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7380280,7380280,src/main.cpp
petertodd,2013-11-01T20:15:25Z,@mikehearn Do you see bitcoinj actually trying to find nodes that support rejection messages and connect to them preferentially?\n,https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7380292,7380292,src/main.cpp
mikehearn,2013-11-02T16:18:28Z,"Seeking them out, not right now. Preferring them for tx broadcast vs monitoring, yes. But I vote for a bump anyway - if you know you can expect a reject message in case of a problem, then you can use that to improve the user experience by eliminating arbitrary timeouts and giving the user instant feedback if there was a problem. So we can plumb it through to the UI layers.\n",https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7387943,7387943,src/main.cpp
petertodd,2013-11-03T00:35:08Z,@mikehearn Sounds pretty reasonable to me.\n\nI vote for a bump too - use 70002 and I'll update the NODE_BLOOM patch to 70003.\n,https://github.com/bitcoin/bitcoin/pull/3185#discussion_r7389268,7389268,src/main.cpp
