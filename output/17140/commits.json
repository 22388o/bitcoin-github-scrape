[
  {
    "sha": "f59bbb61af5055844c16939a4f8e58c4f73843c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTliYmI2MWFmNTA1NTg0NGMxNjkzOWE0ZjhlNThjNGY3Mzg0M2Mx",
    "commit": {
      "author": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2019-10-14T20:03:51Z"
      },
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2019-10-14T20:04:19Z"
      },
      "message": "test: Fix bug in blockfilter_index_tests.\n\nThe test case tests a chain reorganization, however the two\nchains were generated in the same manner and thus produced\nthe same blocks.",
      "tree": {
        "sha": "128752863755fbabf4c46c0f57f3bfc55baebc76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/128752863755fbabf4c46c0f57f3bfc55baebc76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f59bbb61af5055844c16939a4f8e58c4f73843c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f59bbb61af5055844c16939a4f8e58c4f73843c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f59bbb61af5055844c16939a4f8e58c4f73843c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f59bbb61af5055844c16939a4f8e58c4f73843c1/comments",
    "author": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b33c03b0cb82e57eb862542c9d331b7ceb8f3a62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b33c03b0cb82e57eb862542c9d331b7ceb8f3a62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b33c03b0cb82e57eb862542c9d331b7ceb8f3a62"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 14,
      "deletions": 6
    },
    "files": [
      {
        "sha": "ba293b7836dfdbda5b7490e9ef888a014c94031d",
        "filename": "src/test/blockfilter_index_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f59bbb61af5055844c16939a4f8e58c4f73843c1/src/test/blockfilter_index_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f59bbb61af5055844c16939a4f8e58c4f73843c1/src/test/blockfilter_index_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_index_tests.cpp?ref=f59bbb61af5055844c16939a4f8e58c4f73843c1",
        "patch": "@@ -167,17 +167,23 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, TestChain100Setup)\n         LOCK(cs_main);\n         tip = ::ChainActive().Tip();\n     }\n-    CScript coinbase_script_pub_key = GetScriptForDestination(PKHash(coinbaseKey.GetPubKey()));\n+    CKey coinbase_key_A, coinbase_key_B;\n+    coinbase_key_A.MakeNewKey(true);\n+    coinbase_key_B.MakeNewKey(true);\n+    CScript coinbase_script_pub_key_A = GetScriptForDestination(PKHash(coinbase_key_A.GetPubKey()));\n+    CScript coinbase_script_pub_key_B = GetScriptForDestination(PKHash(coinbase_key_B.GetPubKey()));\n     std::vector<std::shared_ptr<CBlock>> chainA, chainB;\n-    BOOST_REQUIRE(BuildChain(tip, coinbase_script_pub_key, 10, chainA));\n-    BOOST_REQUIRE(BuildChain(tip, coinbase_script_pub_key, 10, chainB));\n+    BOOST_REQUIRE(BuildChain(tip, coinbase_script_pub_key_A, 10, chainA));\n+    BOOST_REQUIRE(BuildChain(tip, coinbase_script_pub_key_B, 10, chainB));\n \n     // Check that new blocks on chain A get indexed.\n     uint256 chainA_last_header = last_header;\n     for (size_t i = 0; i < 2; i++) {\n         const auto& block = chainA[i];\n         BOOST_REQUIRE(ProcessNewBlock(Params(), block, true, nullptr));\n-\n+    }\n+    for (size_t i = 0; i < 2; i++) {\n+        const auto& block = chainA[i];\n         const CBlockIndex* block_index;\n         {\n             LOCK(cs_main);\n@@ -193,7 +199,9 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, TestChain100Setup)\n     for (size_t i = 0; i < 3; i++) {\n         const auto& block = chainB[i];\n         BOOST_REQUIRE(ProcessNewBlock(Params(), block, true, nullptr));\n-\n+    }\n+    for (size_t i = 0; i < 3; i++) {\n+        const auto& block = chainB[i];\n         const CBlockIndex* block_index;\n         {\n             LOCK(cs_main);\n@@ -221,7 +229,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, TestChain100Setup)\n     // Reorg back to chain A.\n      for (size_t i = 2; i < 4; i++) {\n          const auto& block = chainA[i];\n-        BOOST_REQUIRE(ProcessNewBlock(Params(), block, true, nullptr));\n+         BOOST_REQUIRE(ProcessNewBlock(Params(), block, true, nullptr));\n      }\n \n      // Check that chain A and B blocks can be retrieved."
      }
    ]
  }
]