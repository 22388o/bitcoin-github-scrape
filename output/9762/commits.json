[
  {
    "sha": "0e04778ec25771398f141fa5b002fdc8a81861a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTA0Nzc4ZWMyNTc3MTM5OGYxNDFmYTViMDAyZmRjOGE4MTg2MWE0",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2017-02-14T23:35:20Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2017-02-14T23:35:20Z"
      },
      "message": "Add txdetails parameter to getblock.\n\nAlso add braces to if statements while we're here.",
      "tree": {
        "sha": "2d43d292f462d2221626c6755d5cff0da1c6892c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d43d292f462d2221626c6755d5cff0da1c6892c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e04778ec25771398f141fa5b002fdc8a81861a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e04778ec25771398f141fa5b002fdc8a81861a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e04778ec25771398f141fa5b002fdc8a81861a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e04778ec25771398f141fa5b002fdc8a81861a4/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a441db01b527431a3d7ba169f1afd9c3bc04748f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a441db01b527431a3d7ba169f1afd9c3bc04748f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a441db01b527431a3d7ba169f1afd9c3bc04748f"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 17,
      "deletions": 6
    },
    "files": [
      {
        "sha": "d51ad70752570af1a4a4a17f0c6dae4c073ec22d",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 6,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e04778ec25771398f141fa5b002fdc8a81861a4/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e04778ec25771398f141fa5b002fdc8a81861a4/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=0e04778ec25771398f141fa5b002fdc8a81861a4",
        "patch": "@@ -689,14 +689,15 @@ UniValue getblockheader(const JSONRPCRequest& request)\n \n UniValue getblock(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw runtime_error(\n             \"getblock \\\"blockhash\\\" ( verbose )\\n\"\n             \"\\nIf verbose is false, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n             \"If verbose is true, returns an Object with information about block <hash>.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"          (string, required) The block hash\\n\"\n             \"2. verbose                (boolean, optional, default=true) true for a json object, false for the hex encoded data\\n\"\n+            \"3. txdetails              (boolean, optional, default=false) true for transaction details, false for transaction ids\\n\"\n             \"\\nResult (for verbose = true):\\n\"\n             \"{\\n\"\n             \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n@@ -734,20 +735,29 @@ UniValue getblock(const JSONRPCRequest& request)\n     uint256 hash(uint256S(strHash));\n \n     bool fVerbose = true;\n-    if (request.params.size() > 1)\n+    if (request.params.size() > 1) {\n         fVerbose = request.params[1].get_bool();\n+    }\n \n-    if (mapBlockIndex.count(hash) == 0)\n+    bool fTxDetails = false;\n+    if (request.params.size() > 2) {\n+        fTxDetails = request.params[2].get_bool();\n+    }\n+\n+    if (mapBlockIndex.count(hash) == 0) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+    }\n \n     CBlock block;\n     CBlockIndex* pblockindex = mapBlockIndex[hash];\n \n-    if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n+    if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0) {\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Block not available (pruned data)\");\n+    }\n \n-    if(!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n+    if(!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus())) {\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n+    }\n \n     if (!fVerbose)\n     {\n@@ -757,7 +767,7 @@ UniValue getblock(const JSONRPCRequest& request)\n         return strHex;\n     }\n \n-    return blockToJSON(block, pblockindex);\n+    return blockToJSON(block, pblockindex, fTxDetails);\n }\n \n struct CCoinsStats"
      },
      {
        "sha": "28de7e9fc2be806e2b9c15f059f47d8c4930951c",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e04778ec25771398f141fa5b002fdc8a81861a4/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e04778ec25771398f141fa5b002fdc8a81861a4/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=0e04778ec25771398f141fa5b002fdc8a81861a4",
        "patch": "@@ -80,6 +80,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listunspent\", 1, \"maxconf\" },\n     { \"listunspent\", 2, \"addresses\" },\n     { \"getblock\", 1, \"verbose\" },\n+    { \"getblock\", 2, \"txdetails\" },\n     { \"getblockheader\", 1, \"verbose\" },\n     { \"gettransaction\", 1, \"include_watchonly\" },\n     { \"getrawtransaction\", 1, \"verbose\" },"
      }
    ]
  }
]