DrahtBot,2020-04-13 16:39:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18788 (wallet: tests: Update more tests to work with descriptor wallets by achow101)\n\nIf you consider this pull request",https://github.com/bitcoin/bitcoin/pull/18617#issuecomment-612979544,612979544,
brakmic,2020-04-14 12:28:57,"@MarcoFalke \n\nThis one fails on travis, but succeeds on my macOS. Is there anything I could do to make it pass? \n\n```shell\nmempool_reorg.py                                 | âœ– Failed  | 773 s\n```\n\n**Error Log**\n\n```shell\nraise AssertionError(""Mempool sync timed out:{}"".format("""".join(""\n  {!r}"".format(m) for m in pool)))\nAssertionError: Mempool sync timed out:\n```",https://github.com/bitcoin/bitcoin/pull/18617#issuecomment-613413830,613413830,
MarcoFalke,2020-05-01 14:14:56,Could you please bump the factor to 2.0 for the valgrind run and mark this pull as fixing #18834 ?,https://github.com/bitcoin/bitcoin/pull/18617#issuecomment-622405107,622405107,
brakmic,2020-05-01 14:16:29,"> Could you please bump the factor to 2.0 for the valgrind run and mark this pull as fixing #18834 ?\n\nYes, sure, will do it.  ",https://github.com/bitcoin/bitcoin/pull/18617#issuecomment-622405721,622405721,
MarcoFalke,2020-05-03 00:07:49,Thanks! ACK 2742c3428633b6ceaab6714635dc3adb74bf121b,https://github.com/bitcoin/bitcoin/pull/18617#issuecomment-623032122,623032122,
MarcoFalke,2020-04-13 13:57:21,Given that they are all based on `wait_until` wouldn't it make more sense to treat `wait_until` as the basic mechanism for timed waits and only multiply it in there?,https://github.com/bitcoin/bitcoin/pull/18617#discussion_r407491049,407491049,test/functional/test_framework/mininode.py
brakmic,2020-04-13 13:59:18,"Meanwhile, I have changed a few other things, because I faced various p2p errors (the P2PInterface didn't have their factor variable, so I had to redo a few things). And yes, wait_until will be changed too.",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r407492055,407492055,test/functional/test_framework/mininode.py
MarcoFalke,2020-05-01 14:07:19,"```suggestion\n        self.wait_until(test_function, timeout=timeout)\n```\n\nCould this be a member function, so that the lock and factor members don't have to be passed each time?",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418556104,418556104,test/functional/test_framework/mininode.py
MarcoFalke,2020-05-01 14:11:07,"```suggestion\n    timeout = timeout * factor\n```\n\ncan remove the else branch?",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418557674,418557674,test/functional/test_framework/util.py
MarcoFalke,2020-05-01 14:11:31,"```suggestion\n        time_end = time.time() + timeout * self.factor\n```\n\nwhy is this needed?",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418557864,418557864,test/functional/test_framework/test_node.py
MarcoFalke,2020-05-01 14:12:35,"why is this needed, when authproxy does the casting already?",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418558329,418558329,test/functional/test_framework/test_node.py
MarcoFalke,2020-05-01 14:13:38,"```suggestion\n        p2p_conn.peer_connect(**kwargs, net=self.chain, factor=self.factor)()\n```",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418558867,418558867,test/functional/test_framework/test_node.py
brakmic,2020-05-01 14:45:06,"I had problems in test_node.py's *wait_for_rpc_connection*. More precisely, the polling for-loop that refused to iterate over float values. Hence the conversion to int. But if there is a way to make it work without conversion, I'll gladly try it out. Right now, I am going through your list of nits and adapting the code.",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418572969,418572969,test/functional/test_framework/test_node.py
MarcoFalke,2020-05-01 14:50:24,"`time.time()` is a float, so I don't see how this can cause issues",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418575348,418575348,test/functional/test_framework/test_node.py
brakmic,2020-05-01 14:53:30,"In some previous variant of my code I encountered such a problem. Maybe just because I was still writing it. Right now, it seems that all those conversions aren't needed anymore. I'm just executing some tests and they're all passing.",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418576675,418576675,test/functional/test_framework/test_node.py
brakmic,2020-05-01 14:57:46,I don't understand this change?,https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418578554,418578554,test/functional/test_framework/test_node.py
brakmic,2020-05-01 15:00:47,"Ah, yes, now I see it. It's being forwarded to derived class P2PInterface!",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r418579856,418579856,test/functional/test_framework/test_node.py
MarcoFalke,2020-05-02 22:51:15,"Why increase the factor for everything? valgrind should be sufficient:\n\n```diff\ndiff --git a/ci/test/00_setup_env_native_valgrind.sh b/ci/test/00_setup_env_native_valgrind.sh\nindex d5b38a1d88..c850c13bbe 100644\n--- a/ci/test/00_setup_env_native_valgrind.sh\n+++ b/ci/test/00_setup_env_native_valgrind.sh\n@@ -13,7 +13,7 @@ export NO_DEPENDS=1\n if [[ ""${TRAVIS}"" == ""true"" && ""${TRAVIS_R",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419017851,419017851,test/functional/test_framework/util.py
MarcoFalke,2020-05-02 22:51:43,"```suggestion\n        timeout = 60\n```",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419017914,419017914,test/functional/test_framework/util.py
MarcoFalke,2020-05-02 22:55:17,"```suggestion\n        wait_until(self.is_node_stopped, timeout=timeout, factor=self.factor)\n```\n\nNone is the default value already",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419018197,419018197,test/functional/test_framework/test_node.py
brakmic,2020-05-02 23:07:20,True. Have adapted the scripts.,https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419019205,419019205,test/functional/test_framework/util.py
MarcoFalke,2020-05-02 23:34:08,"```suggestion\n        self.rpc_timeout = self.rpc_timeout * self.options.factor # optionally, increase timeout by a factor\n```\n\nIs this still needed?",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419021532,419021532,test/functional/test_framework/test_framework.py
MarcoFalke,2020-05-02 23:34:29,why change the whitespace to 3 spaces? Seems unrelated,https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419021568,419021568,test/functional/test_framework/util.py
brakmic,2020-05-02 23:37:28,"I think it is. When I execute a test like this it throws the one error we talked about previously (*the range poll function*). \n\n```shell\n./test/functional/p2p_tx_download.py                                                     (4s 89ms)  \n2020-05-02T23:36:00.054000Z TestFramework (INFO): Initializing test directory /var/folders/7q/4ffytzk562dd2ky4bfg9_w7h0000gn/T/bitcoin_func_test_54bxj\n",https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419021810,419021810,test/functional/test_framework/test_framework.py
brakmic,2020-05-02 23:40:39,Unintentional. Corrected. :),https://github.com/bitcoin/bitcoin/pull/18617#discussion_r419022043,419022043,test/functional/test_framework/util.py
