gmaxwell,2014-04-06T07:29:52Z,"If people don't think that checking all keys and handling the error in this way is stupid, I'll go ahead and check with a huge wallet to verify that the slowdown isn't excessive. At least with a 100 key keypool it's not noticeable.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-39661226,39661226,
Telepatheic,2014-04-06T10:39:17Z,This seems very sensible to me. What is the biggest size of wallet that is known to have been used?\n,https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-39664237,39664237,
sipa,2014-04-06T14:07:23Z,"Checking just one key was always the original intention, as far as I remember.\n\nThis will require an EC multiplication per key (and GetPubKey may be doing more than one...).\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-39669244,39669244,
laanwj,2014-04-07T06:53:03Z,"Sorry for the dumb question, but what does checking all the keys in this case get us? If it makes wallets with lots of keys even slower, we'd need to have a good reason to do this.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-39700641,39700641,
gmaxwell,2014-04-07T07:11:28Z,"@sipa Bluematt seemed to think otherwise wrt intention. :)\n\n@laanwj it would catch any case where the public keys and the secret keys in the wallet didn't agree with each other, either due to corruption or due to malicious modification (e.g. so that newly issued keys were really someone elses private keys). How much thats worth I dunno.  I don't have that much of an opinion: The existing code is",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-39701566,39701566,
laanwj,2014-04-16T07:15:17Z,"Right. Checking all the keys is a good wallet integrity check. But it doesn't seem necessary to me to check all the keys every time that the wallet is unlocked. One idea would be to do it the first time, or to even add an argument to `walletpassphrase` for a 'deep' validation.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-40569770,40569770,
gmaxwell,2014-04-16T07:23:43Z,"First time makes sense, I don't like adding more api surface. I'll go and check it on a huge wallet and verify that it's not too disruptive and if not I'll make it check all just once.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-40570301,40570301,
TheBlueMatt,2014-04-27T00:13:06Z,"@sipa I dont remember the intention, but the code appears to intend to check it all and just not bother doing it (I mean why is there even a loop?)...\nIn any case, I agree with @gmaxwell, if its not too disruptive, I'd prefer checking it all.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-41484735,41484735,
BitcoinPullTester,2014-06-23T11:42:47Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4011_f36754839b5462b330b92fa488c467cc4b38a028/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-46833522,46833522,
laanwj,2014-06-24T15:55:39Z,@gmaxwell Did you ever get around to testing this with a large encrypted wallet?\n,https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-46990368,46990368,
Diapolo,2014-08-06T09:34:35Z,@gmaxwell Any news/benchmarks for this? I remember it was also caught as a problem in a recent audit via a static analyzer tool.\n,https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51312752,51312752,
laanwj,2014-08-08T09:27:24Z,"I'm still of the opinion that it is not acceptable to do the decoding and checking all keys in the wallet _every time_ that `walletpassphrase` is called, which would be the effect of this. This command is very frequently used, sometimes for every transaction.\n\nSo let's just go with doing this only the first time.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51580781,51580781,
Diapolo,2014-08-08T09:31:32Z,Is there an easy way to make PVS-Studio happy without the burden of checking every time? Or make this a santiy check on startup?\n,https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51581139,51581139,
laanwj,2014-08-08T09:36:27Z,"Sure, add a boolean flag to `CCryptoKeyStore::Unlock` whether to do a full check. Do the early return only if that is not set.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51581573,51581573,
Diapolo,2014-08-08T09:37:37Z,"@gmaxwell If you agree, can you update this?\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51581662,51581662,
TheBlueMatt,2014-08-09T09:03:20Z,"Meh, just static boolean fAlreadyChecked = false; set to true after the first run. Early return if its true.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51681533,51681533,
gmaxwell,2014-08-09T09:07:07Z,"That might be a good compromise. The tension I see is that the performance is important, but if you can't actually spend what you think you can thats very bad and ought to be detected (e.g. as a result of corruption). If the once-per-run test matt proposes is too slow, A compromise would be checking the keypool (or at least the near term keypool) only might also be reasonable.\n",https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51681617,51681617,
laanwj,2014-08-09T09:09:36Z,A once-per-run check is fine.\n,https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-51681669,51681669,
gmaxwell,2014-08-14T12:52:30Z,Subsumed by Bluematt's\n,https://github.com/bitcoin/bitcoin/pull/4011#issuecomment-52178937,52178937,
