paveljanik,2017-02-20T08:53:57Z,"Wshadow statistics: \n   1 coinsbyscript.cpp:180:2200: warning: declaration shadows a local variable [-Wshadow]\n",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-281021069,281021069,
droark,2017-02-20T21:33:08Z,@paveljanik - Thanks! Fixed that up. Looks like that's the only shadow warning.,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-281186046,281186046,
laanwj,2017-02-22T07:58:39Z,Thanks for reviving this. IMO this is important.,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-281596044,281596044,
sidhujag,2017-03-14T18:27:38Z,"Concept ACK, are there any statistics on how much extra burden this places on an ordinary node with the index off?",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-286516298,286516298,
instagibbs,2017-03-16T02:23:27Z,needs rebase ,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-286939051,286939051,
droark,2017-03-17T22:13:06Z,"@instagibbs - Rebased. Thanks for the heads up. (Side note: Is there any way to have GH tell you when a conflict occurs? That would be really handy.)\n\n@sidhujag - Good question. I don't know offhand. I'm happy to do some benchmarking. I may need some help with that. If anybody would like to make some suggestions, I'm all ears.\n\nAll - Will get more movement on this. Life intervened for awhi",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-287484338,287484338,
sidhujag,2017-03-18T02:24:27Z,Thanks droark great feature btw.. this makes walletless spending very easy,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-287510058,287510058,
droark,2017-03-18T21:53:16Z,"Am placing a to-do list here to remind myself of what I need to do, and solicit feedback on anything people might think is missing.\n\n- [x] Remove all Boost code from the PR.\n- [x] Address feedback from #8660 (primarily @ryanofsky). (Mostly done but I want to double check a couple of things before proceeding.)\n- [ ] Add some C++ tests for CCoinsView classes.\n- [x] Probably switch names of",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-287577584,287577584,
btcdrak,2017-03-22T00:49:26Z,"needs rebase.\n",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-288264890,288264890,
droark,2017-03-22T01:40:43Z,@btcdrak - Thanks. Rebased.,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-288272821,288272821,
weex,2017-03-23T03:03:48Z,"Running this on a .bitcoin/ folder that was last used with 0.13 and was run pruned to 2000. It seems 1GB of ram is too low for this enabled as I got an out of memory error. Now on restarting I get the following after/during the ""Rescanning..."" step:\n\n    ~/.bitcoin# bitcoind: coinsbyscript.cpp:53: CCoinsByScript& CCoinsViewByScript::GetCoinsByScript(const CScript&, bool): Assertion `it != cach",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-288604087,288604087,
droark,2017-04-22T01:19:39Z,@luke-jr - Thanks for the detailed feedback. I'll look over it this weekend.,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-296337337,296337337,
dexX7,2017-05-25T21:01:54Z,Thanks for preparing this @droark. Is this PR still alive?,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-304123460,304123460,
droark,2017-05-30T08:06:59Z,"@dexX7 - Thanks for checking in. Some family-related issues came up recently that I had to deal with for awhile. I'm almost done rebasing the PR and will catch up with the remaining feedback ASAP, along with some test harness changes that probably need to be folded in. The path forward looks pretty clear to me, IMO. I just need to wrap up the work.",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-304805475,304805475,
jtimon,2017-07-07T03:34:50Z,"I still need to read more, but...\n\nRegarding searching by address , by scriptPubKey, or by COutPoint (tx_id, output_pos), I'm not sure whether I want them all or a subset of them.\nThe later doesn't require any further index. \nSearching by scriptPubKey only requires an additional scriptPubKey -> COutPoint index but not much logic.\nSearching by address on the other hand...there's many type",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-313578569,313578569,
jtimon,2017-07-07T16:48:38Z,"Sorry, no, using GetTransaction doesn't leverage the utxo index we maintain...One would need to search in the utxo (with CCoinsViewCache::AccessCoin) first and then try with GetTransaction only if we want to also serve stxo, which should perhaps be left out of scope for this PR as a later improvement.",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-313734541,313734541,
jtimon,2017-07-14T08:28:27Z,"Sorry for the long post, not for being long but for being incorrect.\n\nThere's not need for a gettxobyoutpoint or similar because it already exists and is named gettxout!\nThat means everything I said about ""optimize later, it shouldn't be hard"" turns into ""it's already done"".\n\nOnly the slower parts were missing, which I plan to serve in #10822 which is just a draft that needs lots of test",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-315302930,315302930,
braydonf,2018-04-17T01:28:35Z,"What's the status of this PR, needs more review and testing? General concept ok?\n\nI think it would be useful to have an index on the UTXO set for the purposes of supporting external and hardware wallets.",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-381800404,381800404,
jnewbery,2018-04-23T22:01:10Z,"Closing as 'up for grabs'. PR author hasn't checked in for about a year.\n\n@droark - if you still want this, feel free to re-open and rebase!",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-383737088,383737088,
MarcoFalke,2019-03-05T19:33:57Z,"Picked up in "" Add address-based index (attempt 4?) #14053 """,https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-469826926,469826926,
laanwj,2020-08-20T14:37:39Z,"> Picked up in "" Add address-based index (attempt 4?) #14053 ""\n\nI think those are different, right? this an indeex over the UTXO set, while that is an index over all addresses in the block chain? Or do I get this wrong.",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-677705399,677705399,
MarcoFalke,2020-08-20T15:29:36Z,"Indeed looks like it. I wonder why it is called take 4 then.\n\nThough, scanning the utxo set can already be done with `scantxoutset`, no?",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-677735944,677735944,
laanwj,2020-08-20T16:12:44Z,"> Though, scanning the utxo set can already be done with scantxoutset, no?\n\nAbsolutely, that does the same thing. Though it can be pretty slow, which can be awkward if it's part of some user flow, so UTXO indexing is not completely out of the picture probably.",https://github.com/bitcoin/bitcoin/pull/9806#issuecomment-677760011,677760011,
luke-jr,2017-04-17T11:19:23Z,"Standard copyright line says ""The Bitcoin Core developers"".\n\nMight as well start this one off with the end year 2017.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111731657,111731657,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:19:34Z,Don't do this.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111731665,111731665,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:23:15Z,"I don't think we really need a dedicated flag in the db for this. Either it exists and has a ""bestblock"" defined, or it doesn't...",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111731936,111731936,src/init.cpp
luke-jr,2017-04-17T11:25:49Z,"IMO it would be better to not have overlapping chars between databases, such that they *could* be combined cleanly if desired. Therefore, I suggest using `'D'` for `DB_BEST_BLOCK` (and eliminating `DB_FLAG` here entirely).",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111732096,111732096,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:31:07Z,"This isn't the purpose of `CScriptID`, which is specific to P2SH addresses. Suggest having a static `ScriptIndexHash` function that returns a (possibly typedef'd) `uint160`.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111732447,111732447,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:33:54Z,The name sucks. :/,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111732620,111732620,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:36:23Z,Rather throw an exception here.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111732765,111732765,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:36:40Z,"Name also sucks, and overlaps with a fairly different usage-case.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111732789,111732789,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:40:43Z,"I don't see why this is necessary: we clear the entire cache when complete.\n\nEliminating this `erase` allows simplifying the entire loop to a normal C++11 `for`-each.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733071,111733071,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:43:41Z,This is lacking comments explaining why.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733267,111733267,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:44:19Z,Fails to delete `DB_BEST_BLOCK`,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733295,111733295,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:45:57Z,"Use `size_t` and `++j`. It may also be better to do this backward:\n\n```\nfor (size_t j = coins.vout.size(); j--; ) {\n```\n(note `j--` in this case because we want to look at the pre-decrement value)",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733380,111733380,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:49:41Z,"Since we're doing partial writes, we should ensure `DB_BEST_BLOCK` is cleared before we begin.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733632,111733632,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:50:40Z,Needless `erase`,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733676,111733676,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:50:44Z,Needless `erase`,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733681,111733681,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:51:45Z,`DB_BEST_BLOCK` is never written here.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733731,111733731,src/coinsbyscript.cpp
luke-jr,2017-04-17T11:52:25Z,(see copyright line comments earlier),https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733762,111733762,src/coinsbyscript.h
luke-jr,2017-04-17T11:53:14Z,Perhaps this ought to be named `empty` like C++ STL?,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733806,111733806,src/coinsbyscript.h
luke-jr,2017-04-17T11:53:44Z,Why not just subclass `std::set<COutPoint>`?,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733829,111733829,src/coinsbyscript.h
luke-jr,2017-04-17T11:54:20Z,Why `mutable`?,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733866,111733866,src/coinsbyscript.h
luke-jr,2017-04-17T11:55:03Z,(see copyright line comments),https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733900,111733900,src/coinstats.cpp
luke-jr,2017-04-17T11:55:10Z,Don't.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733906,111733906,src/coinstats.cpp
luke-jr,2017-04-17T11:56:11Z,(didn't review),https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111733978,111733978,src/coinstats.cpp
luke-jr,2017-04-17T11:58:25Z,"Should probably be renamed to `-utxoscriptindex`.\n\n`-txoutindex` suggests it indexes all txouts (by what?).",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734099,111734099,src/init.cpp
luke-jr,2017-04-17T11:59:53Z,"Not really clear why we have anything to delete here, but don't we need to delete `pcoinsByScript` also?",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734183,111734183,src/init.cpp
luke-jr,2017-04-17T12:03:01Z,"We also need to build the index if it's outdated. For example, if the user ran an older version to sync. (This is fixed automatically if you replace the flag with a check that the index's best block matches that of the chainstate.)",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734335,111734335,src/init.cpp
luke-jr,2017-04-17T12:03:37Z,(did not review),https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734373,111734373,src/rest.cpp
luke-jr,2017-04-17T12:04:35Z,"Call it `""uniquescripts""`?",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734442,111734442,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:05:24Z,"Duplicates `""txouts""`. Remove and simply add an integrity check.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734484,111734484,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:06:52Z,"The address abstraction ends before/when coins hit the UTXO set. UTXOs do not have and are not associated to addresses.\n\nRename this to `""scripts""`, and don't support specifying as addresses.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734589,111734589,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:07:25Z,Add braces,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734627,111734627,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:08:19Z,"Max [guaranteed] value of `int` is `32767`, so this could overflow.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734677,111734677,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:10:25Z,"Need to document that mempool.GetCoinsByScript must only add, not replace.",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734783,111734783,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:11:32Z,Why sort? Let the caller sort if they need it sorted somehow.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734825,111734825,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:11:58Z,`size_t`,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734846,111734846,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:12:18Z,Use C++11 `for`-each.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734864,111734864,src/rpc/rawtransaction.cpp
luke-jr,2017-04-17T12:14:25Z,Consider the case of a current UTXO that has been spent in the mempool. Under what conditions is the mempool ignored and that UTXO returned? Would you ever want to see it while also searching the mempool?,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111734981,111734981,src/rpc/blockchain.cpp
luke-jr,2017-04-17T12:15:52Z,Inconsistent behaviour for UTXOs created in mined transactions vs in the mempool. We should probably consider mempool spends the same for both mempool-created UTXOs and confirmed-tx-created UTXOs.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735088,111735088,src/rpc/rawtransaction.cpp
luke-jr,2017-04-17T12:17:24Z,"Rather call this `""generated""`",https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735183,111735183,src/rpc/rawtransaction.cpp
luke-jr,2017-04-17T12:17:40Z,`false` is the default. No need to change all this.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735197,111735197,src/test/blockencodings_tests.cpp
luke-jr,2017-04-17T12:17:52Z,Braces,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735207,111735207,src/txdb.cpp
luke-jr,2017-04-17T12:19:22Z,Throw an exception if CTxMemPool was created without it?,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735286,111735286,src/txmempool.cpp
luke-jr,2017-04-17T12:19:42Z,Braces...,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735300,111735300,src/txmempool.cpp
luke-jr,2017-04-17T12:22:23Z,This should be moved to `coinsbyscript.cpp` and renamed.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735440,111735440,src/validation.cpp
luke-jr,2017-04-17T12:22:58Z,This should be moved to `coinsbyscript.cpp` and renamed.,https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735490,111735490,src/validation.cpp
luke-jr,2017-04-17T12:25:18Z,(didn't review tests),https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735761,111735761,test/functional/rest.py
luke-jr,2017-04-17T12:25:29Z,(didn't review tests),https://github.com/bitcoin/bitcoin/pull/9806#discussion_r111735810,111735810,test/functional/utxoindex.py
