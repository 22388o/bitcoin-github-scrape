gmaxwell,2016-10-14T09:51:28Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/8914#issuecomment-253757202,253757202,
JeremyRubin,2016-10-14T18:26:52Z,"Seems to address what I was concerned about and is cleaner than the global state, looks good!\n\nConcept ACK.\n",https://github.com/bitcoin/bitcoin/pull/8914#issuecomment-253883288,253883288,
jonasschnelli,2016-10-17T06:39:27Z,"Concept ACK, agree with using `FastRandomContext insecure_rand`.\n",https://github.com/bitcoin/bitcoin/pull/8914#issuecomment-254124266,254124266,
laanwj,2016-10-17T10:44:27Z,Ok:\n- renamed all instances to `insecure_rand`\n- FastRandomContext constructor is now explicit\n- And squashed\n,https://github.com/bitcoin/bitcoin/pull/8914#issuecomment-254174051,254174051,
MarcoFalke,2016-10-13T16:57:37Z,"I'd prefer to keep the name at `FastRandomContext insecure_rand`, especially in the wallet code.\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83262375,83262375,src/wallet/wallet.cpp
gmaxwell,2016-10-13T17:04:55Z,"Agreed. Read the patch from the bottom up and went ""huh? the whole reason we had this function was to use it in the subset sum solver!"" doh. :)\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83263769,83263769,src/wallet/wallet.cpp
laanwj,2016-10-13T17:08:52Z,"Yes, makes sense. It didn't become any less insecure, but at least there's no magic global state anymore.\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83264518,83264518,src/wallet/wallet.cpp
JeremyRubin,2016-10-14T18:11:42Z,"It may be nice to throw in a:\n\n```\nFastRandomContext() = delete;\n```\n\njust for clarify where the syntax\n\n```\nFastRandomContext rand;\n```\n\nis used.\n\nAlternatively, because we know fDeterministic everywhere it is used, could also be made a template parameter to this class (which has the added benefit of a callee being able to specify what kind of insecure_rand they are getting...).\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83473831,83473831,src/random.h
JeremyRubin,2016-10-14T18:25:55Z,"nit: technically, you can get away with\n\n```\ncounter.fetch_add(1, std::memory_order_relaxed)\n```\n\nif it is any concern.\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83476400,83476400,src/netbase.cpp
laanwj,2016-10-15T07:23:06Z,"```\njust for clarify where the syntax\n\nFastRandomContext rand;\n```\n\nIf you want to find those, isn't removing the default argument =`false` enough (and maybe making the constructor explicit)?\nI think the default (non-deterministic) makes sense though - only the tests have to override the parameter.\n\n> could also be made a template parameter to this class\n\nThe problem is that the tests s",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83527373,83527373,src/random.h
laanwj,2016-10-15T07:24:58Z,"Thanks. Though this is only called one time per new connection, so I don't think performance would be enough reason to make this more verbose. This could even just use a simple counter protected by a lock, but c++11 makes it so easy to use atomics :)\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83527390,83527390,src/netbase.cpp
JeremyRubin,2016-10-17T02:53:39Z,"I think explicit constructors would be good. I think the current behavior (this is a change from prior specs) under c++11 is that the constructor is considered a converting constructor, meaning ""FastRandomContext rand = 0"" is valid I think? \n\nPerhaps a more idiomatic version of this would be to make FastRandomContext always deterministic, and then add a ""non_deterministic_reseed"" method to it. T",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83571469,83571469,src/random.h
paveljanik,2016-10-17T10:47:19Z,rand -> insecure_rand for consistency?\n,https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83618868,83618868,src/net.cpp
laanwj,2016-10-17T11:01:29Z,"gah did I forget one, good catch\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83620658,83620658,src/net.cpp
laanwj,2016-10-17T11:09:32Z,@paveljanik there was another one in fees.h. Should have them all now (checked through grep)\n,https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83621664,83621664,src/net.cpp
sipa,2016-10-17T12:28:48Z,"Good choice. Chosen by a fair dice roll, I assume?\n",https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83632171,83632171,src/test/scheduler_tests.cpp
laanwj,2016-10-17T13:56:17Z,Hah. It's the result of a certain long-running computation to answer a question that I can't quite remember anymore but seemed ultimately important.\n,https://github.com/bitcoin/bitcoin/pull/8914#discussion_r83647884,83647884,src/test/scheduler_tests.cpp
