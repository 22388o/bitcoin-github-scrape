[
  {
    "sha": "36cba8f1182e8284ec0017e57c5ffb519cd9798f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmNiYThmMTE4MmU4Mjg0ZWMwMDE3ZTU3YzVmZmI1MTljZDk3OThm",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-03-26T15:20:59Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-05-14T18:58:44Z"
      },
      "message": "Alert if it is very likely we are getting a bad chain\n\nCreate a monitoring task that counts how many blocks have been found in the last four hours.\n\nIf very few or too many have been found, an alert is triggered.\n\n\"Very few\" and \"too many\" are set based on a false positive rate of once every fifty years of constant running with constant hashing power, which works out to getting 5 or fewer or 48 or more blocks in four hours (instead of the average of 24).\n\nOnly one alert per day is triggered, so if you get disconnected from the network (or are being Sybil'ed) -alertnotify will be triggered after 3.5 hours but you won't get another -alertnotify for 24 hours.\n\nTested with a new unit test and by running on the main network with -debug=partitioncheck\n\nRun test/test_bitcoin --log_level=message to see the alert messages:\n    WARNING: check your network connection, 3 blocks received in the last 4 hours (24 expected)\n    WARNING: abnormally high number of blocks generated, 60 blocks received in the last 4 hours (24 expected)\n\nThe -debug=partitioncheck debug.log messages look like:\n    ThreadPartitionCheck : Found 22 blocks in the last 4 hours\n    ThreadPartitionCheck : likelihood: 0.0777702",
      "tree": {
        "sha": "96f6581ba15b309d7dccc48ca6a89927fc12db08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96f6581ba15b309d7dccc48ca6a89927fc12db08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36cba8f1182e8284ec0017e57c5ffb519cd9798f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlVU8GQACgkQdYgkL74406hlfACffufw1j0uqSQLyn3gaqsCvS5h\niToAn0GVIvmYR+cpma1wxa5D87dxpRQG\n=UCjT\n-----END PGP SIGNATURE-----",
        "payload": "tree 96f6581ba15b309d7dccc48ca6a89927fc12db08\nparent b4c219b622235e66fecd5dee1883908d5336a6c0\nauthor Gavin Andresen <gavinandresen@gmail.com> 1427383259 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1431629924 -0400\n\nAlert if it is very likely we are getting a bad chain\n\nCreate a monitoring task that counts how many blocks have been found in the last four hours.\n\nIf very few or too many have been found, an alert is triggered.\n\n\"Very few\" and \"too many\" are set based on a false positive rate of once every fifty years of constant running with constant hashing power, which works out to getting 5 or fewer or 48 or more blocks in four hours (instead of the average of 24).\n\nOnly one alert per day is triggered, so if you get disconnected from the network (or are being Sybil'ed) -alertnotify will be triggered after 3.5 hours but you won't get another -alertnotify for 24 hours.\n\nTested with a new unit test and by running on the main network with -debug=partitioncheck\n\nRun test/test_bitcoin --log_level=message to see the alert messages:\n    WARNING: check your network connection, 3 blocks received in the last 4 hours (24 expected)\n    WARNING: abnormally high number of blocks generated, 60 blocks received in the last 4 hours (24 expected)\n\nThe -debug=partitioncheck debug.log messages look like:\n    ThreadPartitionCheck : Found 22 blocks in the last 4 hours\n    ThreadPartitionCheck : likelihood: 0.0777702\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36cba8f1182e8284ec0017e57c5ffb519cd9798f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36cba8f1182e8284ec0017e57c5ffb519cd9798f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36cba8f1182e8284ec0017e57c5ffb519cd9798f/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4c219b622235e66fecd5dee1883908d5336a6c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4c219b622235e66fecd5dee1883908d5336a6c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4c219b622235e66fecd5dee1883908d5336a6c0"
      }
    ],
    "stats": {
      "total": 133,
      "additions": 133,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3f189dd68bee4fe49889fd1ac118a00ed5f153f9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=36cba8f1182e8284ec0017e57c5ffb519cd9798f",
        "patch": "@@ -39,7 +39,9 @@\n \n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/algorithm/string/replace.hpp>\n+#include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n+#include <boost/function.hpp>\n #include <boost/interprocess/sync/file_lock.hpp>\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n@@ -1380,6 +1382,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     StartNode(threadGroup, scheduler);\n \n+    // Monitor the chain, and alert if we get blocks much quicker or slower than expected\n+    int64_t nPowTargetSpacing = Params().GetConsensus().nPowTargetSpacing;\n+    CScheduler::Function f = boost::bind(&PartitionCheck, &IsInitialBlockDownload,\n+                                         boost::ref(cs_main), boost::cref(chainActive), nPowTargetSpacing);\n+    scheduler.scheduleEvery(f, nPowTargetSpacing);\n+\n #ifdef ENABLE_WALLET\n     // Generate coins in the background\n     if (pwalletMain)"
      },
      {
        "sha": "5ebb48477f2f1604071b500f36aea6c7ba0d06e8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=36cba8f1182e8284ec0017e57c5ffb519cd9798f",
        "patch": "@@ -28,6 +28,7 @@\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n+#include <boost/math/distributions/poisson.hpp>\n #include <boost/thread.hpp>\n \n using namespace std;\n@@ -1688,6 +1689,64 @@ void ThreadScriptCheck() {\n     scriptcheckqueue.Thread();\n }\n \n+//\n+// Called periodically asynchronously; alerts if it smells like\n+// we're being fed a bad chain (blocks being generated much\n+// too slowly or too quickly).\n+//\n+void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const CChain& chain, int64_t nPowTargetSpacing)\n+{\n+    if (initialDownloadCheck()) return;\n+\n+    static int64_t lastAlertTime = 0;\n+    int64_t now = GetAdjustedTime();\n+    if (lastAlertTime > now-60*60*24) return; // Alert at most once per day\n+\n+    const int SPAN_HOURS=4;\n+    const int SPAN_SECONDS=SPAN_HOURS*60*60;\n+    int BLOCKS_EXPECTED = SPAN_SECONDS / nPowTargetSpacing;\n+\n+    boost::math::poisson_distribution<double> poisson(BLOCKS_EXPECTED);\n+\n+    std::string strWarning;\n+    int64_t startTime = GetAdjustedTime()-SPAN_SECONDS;\n+\n+    LOCK(cs);\n+    int h = chain.Height();\n+    while (h > 0 && chain[h]->GetBlockTime() >= startTime)\n+        --h;\n+    int nBlocks = chain.Height()-h;\n+\n+    // How likely is it to find that many by chance?\n+    double p = boost::math::pdf(poisson, nBlocks);\n+\n+    LogPrint(\"partitioncheck\", \"%s : Found %d blocks in the last %d hours\\n\", __func__, nBlocks, SPAN_HOURS);\n+    LogPrint(\"partitioncheck\", \"%s : likelihood: %g\\n\", __func__, p);\n+\n+    // Aim for one false-positive about every fifty years of normal running:\n+    const int FIFTY_YEARS = 50*365*24*60*60;\n+    double alertThreshold = 1.0 / (FIFTY_YEARS / SPAN_SECONDS);\n+\n+    if (p <= alertThreshold && nBlocks < BLOCKS_EXPECTED)\n+    {\n+        // Many fewer blocks than expected: alert!\n+        strWarning = strprintf(_(\"WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)\"),\n+                               nBlocks, SPAN_HOURS, BLOCKS_EXPECTED);\n+    }\n+    else if (p <= alertThreshold && nBlocks > BLOCKS_EXPECTED)\n+    {\n+        // Many more blocks than expected: alert!\n+        strWarning = strprintf(_(\"WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)\"),\n+                               nBlocks, SPAN_HOURS, BLOCKS_EXPECTED);\n+    }\n+    if (!strWarning.empty())\n+    {\n+        strMiscWarning = strWarning;\n+        CAlert::Notify(strWarning, true);\n+        lastAlertTime = now;\n+    }\n+}\n+\n static int64_t nTimeVerify = 0;\n static int64_t nTimeConnect = 0;\n static int64_t nTimeIndex = 0;"
      },
      {
        "sha": "873f21330bcf913d237da8bffac67938845a39b9",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=36cba8f1182e8284ec0017e57c5ffb519cd9798f",
        "patch": "@@ -192,6 +192,8 @@ bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck();\n+/** Try to detect Partition (network isolation) attacks against us */\n+void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const CChain& chain, int64_t nPowTargetSpacing);\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */"
      },
      {
        "sha": "cd5b416bd0cc22219cd8b0ecb8cc2313be871e79",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36cba8f1182e8284ec0017e57c5ffb519cd9798f/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=36cba8f1182e8284ec0017e57c5ffb519cd9798f",
        "patch": "@@ -7,10 +7,13 @@\n //\n \n #include \"alert.h\"\n+#include \"chain.h\"\n+#include \"chainparams.h\"\n #include \"clientversion.h\"\n #include \"data/alertTests.raw.h\"\n \n #include \"chainparams.h\"\n+#include \"main.h\"\n #include \"serialize.h\"\n #include \"streams.h\"\n #include \"util.h\"\n@@ -193,4 +196,65 @@ BOOST_AUTO_TEST_CASE(AlertNotify)\n     SetMockTime(0);\n }\n \n+static bool falseFunc() { return false; }\n+\n+BOOST_AUTO_TEST_CASE(PartitionAlert)\n+{\n+    // Test PartitionCheck\n+    CCriticalSection csDummy;\n+    CChain chainDummy;\n+    CBlockIndex indexDummy[100];\n+    CChainParams& params = Params(CBaseChainParams::MAIN);\n+    int64_t nPowTargetSpacing = params.GetConsensus().nPowTargetSpacing;\n+\n+    // Generate fake blockchain timestamps relative to\n+    // an arbitrary time:\n+    int64_t now = 1427379054;\n+    SetMockTime(now);\n+    for (int i = 0; i < 100; i++)\n+    {\n+        indexDummy[i].phashBlock = NULL;\n+        if (i == 0) indexDummy[i].pprev = NULL;\n+        else indexDummy[i].pprev = &indexDummy[i-1];\n+        indexDummy[i].nHeight = i;\n+        indexDummy[i].nTime = now - (100-i)*nPowTargetSpacing;\n+        // Other members don't matter, the partition check code doesn't\n+        // use them\n+    }\n+    chainDummy.SetTip(&indexDummy[99]);\n+\n+    // Test 1: chain with blocks every nPowTargetSpacing seconds,\n+    // as normal, no worries:\n+    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    BOOST_CHECK(strMiscWarning.empty());\n+\n+    // Test 2: go 3.5 hours without a block, expect a warning:\n+    now += 3*60*60+30*60;\n+    SetMockTime(now);\n+    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    BOOST_CHECK(!strMiscWarning.empty());\n+    BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n+    strMiscWarning = \"\";\n+\n+    // Test 3: test the \"partition alerts only go off once per day\"\n+    // code:\n+    now += 60*10;\n+    SetMockTime(now);\n+    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    BOOST_CHECK(strMiscWarning.empty());\n+\n+    // Test 4: get 2.5 times as many blocks as expected:\n+    now += 60*60*24; // Pretend it is a day later\n+    SetMockTime(now);\n+    int64_t quickSpacing = nPowTargetSpacing*2/5;\n+    for (int i = 0; i < 100; i++) // Tweak chain timestamps:\n+        indexDummy[i].nTime = now - (100-i)*quickSpacing;\n+    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    BOOST_CHECK(!strMiscWarning.empty());\n+    BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n+    strMiscWarning = \"\";\n+\n+    SetMockTime(0);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]