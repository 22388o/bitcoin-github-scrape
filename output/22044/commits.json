[
  {
    "sha": "cdee1873da5a00387e3a752e1c9ddd17dbfa362a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGVlMTg3M2RhNWEwMDM4N2UzYTc1MmUxYzlkZGQxN2RiZmEzNjJh",
    "commit": {
      "author": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-05-20T13:04:50Z"
      },
      "committer": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-09-06T18:51:59Z"
      },
      "message": "High fee check for fee options\n\nCheck if -blockmintxfee, -incrementalrelayfee, -dustrelayfee and\n-minrelaytxfee values are set higher than 1BTC/KvB, in which case\nreject such high values.\n\nThis protects against potential overflow when fees are multiplied by the\npackage size, as fees are parsed as int64_t.",
      "tree": {
        "sha": "e8ac37872077acaa24e873791259f9b698895271",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8ac37872077acaa24e873791259f9b698895271"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdee1873da5a00387e3a752e1c9ddd17dbfa362a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdee1873da5a00387e3a752e1c9ddd17dbfa362a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdee1873da5a00387e3a752e1c9ddd17dbfa362a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdee1873da5a00387e3a752e1c9ddd17dbfa362a/comments",
    "author": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6718fbe90a0d9384c4d954b65f1fd4e69838d10c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6718fbe90a0d9384c4d954b65f1fd4e69838d10c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6718fbe90a0d9384c4d954b65f1fd4e69838d10c"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 16,
      "deletions": 2
    },
    "files": [
      {
        "sha": "aeefc5f5898da6b5013b660e9cb612a660a9e1d6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdee1873da5a00387e3a752e1c9ddd17dbfa362a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdee1873da5a00387e3a752e1c9ddd17dbfa362a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=cdee1873da5a00387e3a752e1c9ddd17dbfa362a",
        "patch": "@@ -922,6 +922,9 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     // and the amount the mempool min fee increases above the feerate of txs evicted due to mempool limiting.\n     if (args.IsArgSet(\"-incrementalrelayfee\")) {\n         if (std::optional<CAmount> inc_relay_fee = ParseMoney(args.GetArg(\"-incrementalrelayfee\", \"\"))) {\n+            // High fee check\n+            if (inc_relay_fee > MAX_FEE_PER_KVB)\n+                return InitError(AmountHighWarn(\"-incrementalrelayfee\"));\n             ::incrementalRelayFee = CFeeRate{inc_relay_fee.value()};\n         } else {\n             return InitError(AmountErrMsg(\"incrementalrelayfee\", args.GetArg(\"-incrementalrelayfee\", \"\")));\n@@ -958,7 +961,9 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n \n     if (args.IsArgSet(\"-minrelaytxfee\")) {\n         if (std::optional<CAmount> min_relay_fee = ParseMoney(args.GetArg(\"-minrelaytxfee\", \"\"))) {\n-            // High fee check is done afterward in CWallet::Create()\n+            // High fee check\n+            if (min_relay_fee > MAX_FEE_PER_KVB)\n+                return InitError(AmountHighWarn(\"-minrelaytxfee\"));\n             ::minRelayTxFee = CFeeRate{min_relay_fee.value()};\n         } else {\n             return InitError(AmountErrMsg(\"minrelaytxfee\", args.GetArg(\"-minrelaytxfee\", \"\")));\n@@ -972,7 +977,11 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     // Sanity check argument for min fee for including tx in block\n     // TODO: Harmonize which arguments need sanity checking and where that happens\n     if (args.IsArgSet(\"-blockmintxfee\")) {\n-        if (!ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"))) {\n+        if (std::optional<CAmount> block_min_tx_fee = ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"))) {\n+            // High fee check\n+            if (block_min_tx_fee > MAX_FEE_PER_KVB)\n+                return InitError(AmountHighWarn(\"-blockmintxfee\"));\n+        }else{\n             return InitError(AmountErrMsg(\"blockmintxfee\", args.GetArg(\"-blockmintxfee\", \"\")));\n         }\n     }\n@@ -981,6 +990,9 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     // implementations may inadvertently create non-standard transactions\n     if (args.IsArgSet(\"-dustrelayfee\")) {\n         if (std::optional<CAmount> parsed = ParseMoney(args.GetArg(\"-dustrelayfee\", \"\"))) {\n+            // High fee check\n+            if (parsed > MAX_FEE_PER_KVB)\n+                return InitError(AmountHighWarn(\"-dustrelayfee\"));\n             dustRelayFee = CFeeRate{parsed.value()};\n         } else {\n             return InitError(AmountErrMsg(\"dustrelayfee\", args.GetArg(\"-dustrelayfee\", \"\")));"
      },
      {
        "sha": "23be57dc27f43e623cf1fc45be2bbfefa67fa5df",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdee1873da5a00387e3a752e1c9ddd17dbfa362a/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdee1873da5a00387e3a752e1c9ddd17dbfa362a/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=cdee1873da5a00387e3a752e1c9ddd17dbfa362a",
        "patch": "@@ -20,6 +20,8 @@ class CTxOut;\n static const unsigned int DEFAULT_BLOCK_MAX_WEIGHT = MAX_BLOCK_WEIGHT - 4000;\n /** Default for -blockmintxfee, which sets the minimum feerate for a transaction in blocks created by mining code **/\n static const unsigned int DEFAULT_BLOCK_MIN_TX_FEE = 1000;\n+/** The maximum fee rate value **/\n+static const unsigned int MAX_FEE_PER_KVB = COIN;\n /** The maximum weight for transactions we're willing to relay/mine */\n static const unsigned int MAX_STANDARD_TX_WEIGHT = 400000;\n /** The minimum non-witness size for transactions we're willing to relay/mine (1 segwit input + 1 P2WPKH output = 82 bytes) */"
      }
    ]
  }
]