[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242313821",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-242313821",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 242313821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjMxMzgyMQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T08:20:27Z",
    "updated_at": "2016-08-25T08:20:27Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, thanks for doing this!\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242313821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242326076",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-242326076",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 242326076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjMyNjA3Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T09:14:24Z",
    "updated_at": "2016-08-25T09:19:18Z",
    "author_association": "MEMBER",
    "body": "@daira This is probably interesting to you as well.\n\nThe reason for this alternative is that @laanwj pointed out that #8451 is a step in the wrong direction if we want a more encapsulated CTransaction (which perhaps no longer uses the same representation, but uses a single-malloced block of data for example).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242326076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242927693",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-242927693",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 242927693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjkyNzY5Mw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-27T16:45:56Z",
    "updated_at": "2016-08-27T16:45:56Z",
    "author_association": "MEMBER",
    "body": "@luke-jr: No, but it's what the old code did as well (it automatically converted the CMutableTransactions to CTransaction, and then invoked its operator== which only compares the hashes).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242927693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243011281",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-243011281",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 243011281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzAxMTI4MQ==",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?u=034ef1433a0704d9c91b57b993009b0383d6b7c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T00:59:51Z",
    "updated_at": "2016-08-29T07:38:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This PR implements the latter - which I believe to be well-defined but very ugly. Suggestions or rants welcome.\n\nMy understanding was that even this hack is [illegal and UB](https://stackoverflow.com/questions/12908398/can-placement-new-and-vectordata-be-used-to-replace-elements-in-a-vector).\nAnother [good explanation of the edge cases and reasons against this](https://stackoverflow.com/questions/4136156/const-member-and-assigment-operator-how-to-avoid-the-ub).\nThe triviality of causing UB,  even with extreme caution is probably not acceptable,  especially for miners who could potentially lose out on their reward.\n\nAs for an alternative solution,  I don't see one beyond the mass-copy at this point, but I'm having a look around.\n\nThe underlying conflict is assignment and `const`... you usually can't have both without doing something illegal... (in C++)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243011281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243052533",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-243052533",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 243052533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzA1MjUzMw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T07:32:35Z",
    "updated_at": "2016-08-29T07:32:35Z",
    "author_association": "MEMBER",
    "body": "@dcousens Thanks. I will switch to a less efficient mechanism.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/243052533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247262653",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-247262653",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 247262653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzI2MjY1Mw==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T08:00:45Z",
    "updated_at": "2016-09-15T08:00:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "S&M request: please rebase pain ;-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247262653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247966715",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-247966715",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 247966715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzk2NjcxNQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T11:15:59Z",
    "updated_at": "2016-09-19T11:15:59Z",
    "author_association": "MEMBER",
    "body": "Rebased.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/247966715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249253589",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249253589",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 249253589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI1MzU4OQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T17:29:38Z",
    "updated_at": "2016-09-23T17:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it be possible to simply change the representation of a block so the first transaction is handled separately? Perhaps even building up the hashtree so updating the root doesn't require recomputing everything?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249253589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249254325",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249254325",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 249254325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI1NDMyNQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T17:32:37Z",
    "updated_at": "2016-09-23T17:32:37Z",
    "author_association": "MEMBER",
    "body": "As a follow-up I just plan to turn CBlock::vtx into a vector of\nshared_ptr's. That way we can more easily construct blocks from the\nmempool, more easily readd disconnected transactions back to the mempool,\nand don't need all this hackery to update the coinbase.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249254325/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249282002",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249282002",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 249282002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI4MjAwMg==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T19:29:32Z",
    "updated_at": "2016-09-23T19:29:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249282002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249362805",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-249362805",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 249362805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM2MjgwNQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-24T12:39:51Z",
    "updated_at": "2016-09-24T12:39:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs rebase.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249362805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251004497",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-251004497",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 251004497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTAwNDQ5Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-02T23:46:02Z",
    "updated_at": "2016-10-02T23:46:02Z",
    "author_association": "MEMBER",
    "body": "Rebased.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251004497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255448553",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-255448553",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 255448553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTQ0ODU1Mw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T19:40:06Z",
    "updated_at": "2016-10-21T19:40:06Z",
    "author_association": "MEMBER",
    "body": "Rebased.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/255448553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257122605",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-257122605",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 257122605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzEyMjYwNQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-29T23:43:09Z",
    "updated_at": "2016-10-29T23:43:09Z",
    "author_association": "MEMBER",
    "body": "I'd like to first get #9039 reviewed, as that would remove the need for the Construct method in streams (and thus allowing to construct an object directly by passing a stream into its constructor).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257122605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257122633",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-257122633",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 257122633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzEyMjYzMw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-29T23:44:09Z",
    "updated_at": "2016-10-29T23:44:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, let's do #9039 first.\n\nOn October 29, 2016 7:43:16 PM EDT, Pieter Wuille notifications@github.com wrote:\n\n> I'd like to first get #9039 reviewed, as that would remove the need for\n> the Construct method in streams (and thus allowing to construct an\n> object directly by passing a stream into its constructor).\n> \n> ## \n> \n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-257122605\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/257122633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260160521",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-260160521",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 260160521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDE2MDUyMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-13T01:33:30Z",
    "updated_at": "2016-11-13T01:38:35Z",
    "author_association": "MEMBER",
    "body": "Rebased on top of #9125, using a more efficent approach that turns more CTransactions into shared_ptrs (see updated PR description).\n\nThis invalidates any earlier review, sorry.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260160521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261426628",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-261426628",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 261426628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTQyNjYyOA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-18T01:50:44Z",
    "updated_at": "2016-11-18T01:51:41Z",
    "author_association": "MEMBER",
    "body": "utACK c1955323ad9135d8e845a885063eb608c250beb3 \nleft-UnserializeTransaction-separation-from-SerializeTransaction-for-another-day utACK  63296e690a0805bc6501d69d100add8c0abdeb3c\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261426628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262334910",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-262334910",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 262334910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjMzNDkxMA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T19:08:50Z",
    "updated_at": "2016-11-22T19:08:50Z",
    "author_association": "MEMBER",
    "body": "Rebased.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262334910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263017714",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-263017714",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 263017714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzAxNzcxNA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-25T20:10:00Z",
    "updated_at": "2016-11-25T20:10:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "tested ACK! (you might want to rebase, it applies with a bit of fuzz)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263017714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264028075",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-264028075",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 264028075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDAyODA3NQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-30T23:19:05Z",
    "updated_at": "2016-11-30T23:20:20Z",
    "author_association": "MEMBER",
    "body": "Rebased, and addressed @ryanofsky's comments.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264028075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264735208",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-264735208",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 264735208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDczNTIwOA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-04T22:05:09Z",
    "updated_at": "2016-12-04T22:05:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there anything else this is waiting on?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264735208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264781624",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#issuecomment-264781624",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8580",
    "id": 264781624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc4MTYyNA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T07:03:48Z",
    "updated_at": "2016-12-05T07:03:48Z",
    "author_association": "MEMBER",
    "body": "utACK 81e3228",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264781624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76509386",
    "pull_request_review_id": null,
    "id": 76509386,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2NTA5Mzg2",
    "diff_hunk": "@@ -455,10 +457,20 @@ struct CMutableTransaction\n         SerializeTransaction(*this, s, ser_action, nType, nVersion);\n     }\n \n+    template <typename Stream>\n+    CMutableTransaction(Stream& s, int nType, int nVersion) {\n+        ::Unserialize(s, *this, nType, nVersion);\n+    }\n+\n     /** Compute the hash of this CMutableTransaction. This is computed on the\n      * fly, as opposed to GetHash() in CTransaction, which uses a cached result.\n      */\n     uint256 GetHash() const;\n+\n+    friend bool operator==(const CMutableTransaction& a, const CMutableTransaction& b)\n+    {\n+        return a.GetHash() == b.GetHash();",
    "path": "src/primitives/transaction.h",
    "position": null,
    "original_position": 70,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "870833d120e9b17e88e6b0cbcdaf734c643b4148",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This ignores witness data. Is that intentional?\n",
    "created_at": "2016-08-27T03:35:24Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r76509386",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76509386"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r76509386"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/76509386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 472,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85583860",
    "pull_request_review_id": 6293878,
    "id": 85583860,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTgzODYw",
    "diff_hunk": "@@ -376,22 +372,29 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n-\n-    CTransaction& operator=(const CTransaction& tx);\n+    CTransaction(CMutableTransaction &&tx);\n \n     ADD_SERIALIZE_METHODS;\n \n+    template <typename Stream>\n+    CTransaction(Stream& s, int nType, int nVersion) : CTransaction(CMutableTransaction(s, nType, nVersion)) {}\n+\n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        assert(!ser_action.ForRead()); /* Cannot deserialize CTransaction directly, as it has const fields */",
    "path": "src/primitives/transaction.h",
    "position": null,
    "original_position": 38,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "make CSerActionSerialize::ForRead() and CSerActionUnserialize::ForRead() constexpr, then you can static_assert at build-time instead.\n",
    "created_at": "2016-10-28T18:21:16Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85583860",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85583860"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85583860"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85583860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 396,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85593812",
    "pull_request_review_id": 6303406,
    "id": 85593812,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTkzODEy",
    "diff_hunk": "@@ -173,16 +182,32 @@ class CBlockHeaderAndShortTxIDs {\n                     static_assert(SHORTTXIDS_LENGTH == 6, \"shorttxids serialization assumes 6-byte shorttxids\");\n                 }\n             }\n+\n+            uint64_t nptx;",
    "path": "src/blockencodings.h",
    "position": null,
    "original_position": 91,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: lol, can we get a real variable name here?\n",
    "created_at": "2016-10-28T19:17:05Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85593812",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85593812"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85593812"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85593812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 186,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595237",
    "pull_request_review_id": 6304822,
    "id": 85595237,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTk1MjM3",
    "diff_hunk": "@@ -29,9 +27,15 @@ QList<SendCoinsRecipient> WalletModelTransaction::getRecipients()\n \n CWalletTx *WalletModelTransaction::getTransaction()\n {\n-    return walletTransaction;\n+    return walletTransaction.get();\n }\n \n+void WalletModelTransaction::setTransaction(CWalletTx* tx)",
    "path": "src/qt/walletmodeltransaction.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: could accept a unique_ptr&& so the API documents the ownership semantics\n",
    "created_at": "2016-10-28T19:26:33Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595237",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595237"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595237"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 33,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595901",
    "pull_request_review_id": 6303406,
    "id": 85595901,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTk1OTAx",
    "diff_hunk": "@@ -10,6 +10,8 @@\n #include \"serialize.h\"\n #include \"uint256.h\"\n \n+#define MAX_BLOCK_TRANSACTIONS 16665",
    "path": "src/primitives/block.h",
    "position": null,
    "original_position": 4,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you make this a define based on the other block size limits and min transaction size isntead of making it unexplained magic?\n",
    "created_at": "2016-10-28T19:30:29Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595901",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595901"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85595901"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85595901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85598579",
    "pull_request_review_id": 6303406,
    "id": 85598579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTk4NTc5",
    "diff_hunk": "@@ -3511,10 +3511,19 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n             out.scriptPubKey[5] = 0xed;\n             memcpy(&out.scriptPubKey[6], witnessroot.begin(), 32);\n             commitment = std::vector<unsigned char>(out.scriptPubKey.begin(), out.scriptPubKey.end());\n-            const_cast<std::vector<CTxOut>*>(&block.vtx[0].vout)->push_back(out);\n-            block.vtx[0].UpdateHash();\n+            mcoinbase.vout.emplace_back(std::move(out));\n         }\n     }\n+\n+    // We need a full copy of vtx to modify the coinbase.\n+    std::vector<CTransaction> vtx;\n+    vtx.reserve(block.vtx.size());\n+    vtx.emplace_back(std::move(mcoinbase));\n+    for (size_t i = 1; i < block.vtx.size(); i++) {\n+        vtx.emplace_back(block.vtx[i]);",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can't you std::move here? That object is not used anywhere hereafter, except to be destructed.\n",
    "created_at": "2016-10-28T19:48:38Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85598579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85598579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85598579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85598579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3523,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599223",
    "pull_request_review_id": 6303406,
    "id": 85599223,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTk5MjIz",
    "diff_hunk": "@@ -5530,8 +5539,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         deque<COutPoint> vWorkQueue;\n         vector<uint256> vEraseQueue;\n-        CTransaction tx;\n-        vRecv >> tx;\n+        CTransaction tx = vRecv.Construct<CTransaction>();",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 55,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems like you're making a needless copy here? Why not just\nCTransaction tx(vRecv, vRecv.nType, vRecv.nVersion) (or, better yet, make a new constructor which knows how to pull out nType and nVersion).\n",
    "created_at": "2016-10-28T19:52:56Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599223",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599223"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599223"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5542,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599247",
    "pull_request_review_id": 6303406,
    "id": 85599247,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NTk5MjQ3",
    "diff_hunk": "@@ -603,6 +602,14 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce)) + COINBASE_FLAGS;\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n-    pblock->vtx[0] = txCoinbase;\n+    // We need a full copy of vtx to modify the coinbase.\n+    std::vector<CTransaction> vtx;\n+    vtx.reserve(pblock->vtx.size());\n+    vtx.emplace_back(std::move(txCoinbase));\n+    for (size_t i = 1; i < pblock->vtx.size(); i++) {\n+        vtx.emplace_back(pblock->vtx[i]);",
    "path": "src/miner.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you can move here, too.\n",
    "created_at": "2016-10-28T19:53:08Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599247",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599247"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85599247"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85599247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 610,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85606084",
    "pull_request_review_id": 6303406,
    "id": 85606084,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjA2MDg0",
    "diff_hunk": "@@ -75,8 +81,7 @@ static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptP\n {\n     try {\n         TxInputStream stream(SER_NETWORK, PROTOCOL_VERSION, txTo, txToLen);\n-        CTransaction tx;\n-        stream >> tx;\n+        CTransaction tx = stream.Construct<CTransaction>();",
    "path": "src/script/bitcoinconsensus.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same here: needless copy sucks.\n",
    "created_at": "2016-10-28T20:38:37Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85606084",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85606084"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85606084"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85606084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608383",
    "pull_request_review_id": 6304822,
    "id": 85608383,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjA4Mzgz",
    "diff_hunk": "@@ -2422,7 +2420,9 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.reset(new CWalletTx(this, CTransaction(std::move(txNew))));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 62,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "moved here, used below\n",
    "created_at": "2016-10-28T20:53:00Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608383",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608383"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608383"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2423,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608862",
    "pull_request_review_id": 6303406,
    "id": 85608862,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjA4ODYy",
    "diff_hunk": "@@ -958,6 +958,25 @@ class CSizeComputer\n     size_t size() const {\n         return nSize;\n     }\n+\n+    /** Unimplemented, but needed inside unused SerializeOp deserialization branches */",
    "path": "src/serialize.h",
    "position": null,
    "original_position": 5,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I really dont like adding methods here that we just assert(false) on...would prefer to just call the constructor directly instead.\n",
    "created_at": "2016-10-28T20:55:48Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608862",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608862"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85608862"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85608862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 962,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85609261",
    "pull_request_review_id": 6303406,
    "id": 85609261,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjA5MjYx",
    "diff_hunk": "@@ -410,21 +413,23 @@ UniValue sendtoaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount for send\");\n \n     // Wallet comments\n-    CWalletTx wtx;\n-    if (request.params.size() > 2 && !request.params[2].isNull() && !request.params[2].get_str().empty())\n-        wtx.mapValue[\"comment\"] = request.params[2].get_str();\n-    if (request.params.size() > 3 && !request.params[3].isNull() && !request.params[3].get_str().empty())\n-        wtx.mapValue[\"to\"]      = request.params[3].get_str();\n+    std::unique_ptr<CWalletTx> wtx;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Tiny nit: can you move this down to right above SendMoney, so its clear that its not init'd until then 9and in the next two functions as well)\n",
    "created_at": "2016-10-28T20:58:50Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85609261",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85609261"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85609261"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85609261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 416,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85610849",
    "pull_request_review_id": 6303406,
    "id": 85610849,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjEwODQ5",
    "diff_hunk": "@@ -319,15 +349,10 @@ class CWalletTx : public CMerkleTx\n             Init(NULL);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 45,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Might as well make the line above this an assert as well (and remove this line)\n",
    "created_at": "2016-10-28T21:09:47Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85610849",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85610849"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85610849"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85610849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 349,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650371",
    "pull_request_review_id": 6355861,
    "id": 85650371,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjUwMzcx",
    "diff_hunk": "@@ -3511,10 +3511,19 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n             out.scriptPubKey[5] = 0xed;\n             memcpy(&out.scriptPubKey[6], witnessroot.begin(), 32);\n             commitment = std::vector<unsigned char>(out.scriptPubKey.begin(), out.scriptPubKey.end());\n-            const_cast<std::vector<CTxOut>*>(&block.vtx[0].vout)->push_back(out);\n-            block.vtx[0].UpdateHash();\n+            mcoinbase.vout.emplace_back(std::move(out));\n         }\n     }\n+\n+    // We need a full copy of vtx to modify the coinbase.\n+    std::vector<CTransaction> vtx;\n+    vtx.reserve(block.vtx.size());\n+    vtx.emplace_back(std::move(mcoinbase));\n+    for (size_t i = 1; i < block.vtx.size(); i++) {\n+        vtx.emplace_back(block.vtx[i]);",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If CTransaction is entirely immutable, a move constructor would just be identical to a copy constructor, so no need. We could leave a move constructor that only moves the (mutable) witness field, but that would get more complicated with #8589 (which moves the witness data inside CTxIn). I think a better (but follow-up) change would be changing CBlock::vtx to a `std::vector<std::shared_ptr<CTransaction>>`.\n",
    "created_at": "2016-10-29T23:47:02Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650371",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650371"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650371"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3523,
    "side": "RIGHT",
    "in_reply_to_id": 85598579
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650377",
    "pull_request_review_id": 6355864,
    "id": 85650377,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjUwMzc3",
    "diff_hunk": "@@ -5530,8 +5539,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         deque<COutPoint> vWorkQueue;\n         vector<uint256> vEraseQueue;\n-        CTransaction tx;\n-        vRecv >> tx;\n+        CTransaction tx = vRecv.Construct<CTransaction>();",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 55,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See #9039.\n",
    "created_at": "2016-10-29T23:47:43Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650377",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650377"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650377"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5542,
    "side": "RIGHT",
    "in_reply_to_id": 85599223
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650386",
    "pull_request_review_id": 6355870,
    "id": 85650386,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjUwMzg2",
    "diff_hunk": "@@ -376,22 +372,29 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n-\n-    CTransaction& operator=(const CTransaction& tx);\n+    CTransaction(CMutableTransaction &&tx);\n \n     ADD_SERIALIZE_METHODS;\n \n+    template <typename Stream>\n+    CTransaction(Stream& s, int nType, int nVersion) : CTransaction(CMutableTransaction(s, nType, nVersion)) {}\n+\n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        assert(!ser_action.ForRead()); /* Cannot deserialize CTransaction directly, as it has const fields */",
    "path": "src/primitives/transaction.h",
    "position": null,
    "original_position": 38,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "1c02fde3a63a4b8d17686c0a852979a9c3abec02",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See #9039 (though I think after that, we won't actually need this unimplemented branch anymore).\n",
    "created_at": "2016-10-29T23:49:26Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650386",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650386"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r85650386"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85650386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 396,
    "side": "RIGHT",
    "in_reply_to_id": 85583860
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88551255",
    "pull_request_review_id": 9122837,
    "id": 88551255,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTUxMjU1",
    "diff_hunk": "@@ -642,10 +642,12 @@ static int CommandLineRawTx(int argc, char* argv[])\n                 throw runtime_error(\"invalid transaction encoding\");\n \n             startArg = 2;\n-        } else\n+        } else {\n+            txDecodeTmp = MakeTransactionRef();",
    "path": "src/bitcoin-tx.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "f630f2ee0de07c1d7b605acb7822478939b6aae6",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "unneeded?\n",
    "created_at": "2016-11-17T21:33:51Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88551255",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88551255"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88551255"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88551255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 646,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581370",
    "pull_request_review_id": 9152005,
    "id": 88581370,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTgxMzcw",
    "diff_hunk": "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 32,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "c1955323ad9135d8e845a885063eb608c250beb3",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Where is this operator used? CTransactionRef tx is public.\nMaybe a getter and making it protected would be better?\n",
    "created_at": "2016-11-18T00:58:05Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581370",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581370"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581370"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 188,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581548",
    "pull_request_review_id": 9152176,
    "id": 88581548,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTgxNTQ4",
    "diff_hunk": "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 32,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "c1955323ad9135d8e845a885063eb608c250beb3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is an implicit conversion operator. It allows you to pass a CWalletTx in any place where a 'const CTransaction&' is expected. I can avoid it by changing a number of extra lines.\n",
    "created_at": "2016-11-18T00:59:58Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581548",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581548"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88581548"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88581548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 188,
    "side": "RIGHT",
    "in_reply_to_id": 88581370
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88582257",
    "pull_request_review_id": 9152833,
    "id": 88582257,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTgyMjU3",
    "diff_hunk": "@@ -642,10 +642,12 @@ static int CommandLineRawTx(int argc, char* argv[])\n                 throw runtime_error(\"invalid transaction encoding\");\n \n             startArg = 2;\n-        } else\n+        } else {\n+            txDecodeTmp = MakeTransactionRef();",
    "path": "src/bitcoin-tx.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "f630f2ee0de07c1d7b605acb7822478939b6aae6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nope, without it, `bitocin-tx -create` segfaults.\n",
    "created_at": "2016-11-18T01:05:46Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88582257",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88582257"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88582257"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88582257/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 646,
    "side": "RIGHT",
    "in_reply_to_id": 88551255
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88584661",
    "pull_request_review_id": 9155041,
    "id": 88584661,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTg0NjYx",
    "diff_hunk": "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 32,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "c1955323ad9135d8e845a885063eb608c250beb3",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oh, I see, it's just to avoid extra disruption. I would prefer it gone, yes. But it doesn't need to be in this PR. Thoughts on the getter instead of a tx being public? Changing that shouldn't extra disruption. I guess this can be done later too, but it's \"free\" now disruption-wise.\n",
    "created_at": "2016-11-18T01:27:42Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88584661",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88584661"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88584661"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88584661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 188,
    "side": "RIGHT",
    "in_reply_to_id": 88581370
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88585691",
    "pull_request_review_id": 9156005,
    "id": 88585691,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NTg1Njkx",
    "diff_hunk": "@@ -374,25 +382,27 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n     CTransaction(CMutableTransaction &&tx);\n \n-    CTransaction& operator=(const CTransaction& tx);\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        SerializeTransaction(*this, s, ser_action);\n-        if (ser_action.ForRead()) {\n-            UpdateHash();\n-        }\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        SerializeTransaction(*this, s);\n     }\n \n+    /* No Unserialize method. Use the deserializing constructor below instead. */",
    "path": "src/primitives/transaction.h",
    "position": null,
    "original_position": 167,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "63296e690a0805bc6501d69d100add8c0abdeb3c",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps this could be turned into doxygen documentation for the deserializer constructor. ie \"This constructor is provided instead of a deserialize method since the latter requires violating the const nature of most fields in CTransaction\" or something of the sort. \n",
    "created_at": "2016-11-18T01:38:58Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88585691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88585691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88585691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88585691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 404,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88631885",
    "pull_request_review_id": 9199894,
    "id": 88631885,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NjMxODg1",
    "diff_hunk": "@@ -642,10 +642,12 @@ static int CommandLineRawTx(int argc, char* argv[])\n                 throw runtime_error(\"invalid transaction encoding\");\n \n             startArg = 2;\n-        } else\n+        } else {\n+            txDecodeTmp = MakeTransactionRef();",
    "path": "src/bitcoin-tx.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "f630f2ee0de07c1d7b605acb7822478939b6aae6",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Whoops, I see. Initializing txDecodeTmp above (line 628) with a nullptr might make it more obvious to a casual reader that this points to nowhere initially (though you'd think the \"Ref\" part would've given it away...). No big deal though.\n",
    "created_at": "2016-11-18T10:22:03Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88631885",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88631885"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r88631885"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88631885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 646,
    "side": "RIGHT",
    "in_reply_to_id": 88551255
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89933330",
    "pull_request_review_id": 10461172,
    "id": 89933330,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTMzMzMw",
    "diff_hunk": "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
    "path": "src/primitives/transaction.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm...this behavior is very strange. We are leaving hash null, and while this isnt a behavior change, I cant imagine it is good...",
    "created_at": "2016-11-29T03:01:35Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89933330",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89933330"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89933330"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89933330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89934348",
    "pull_request_review_id": 10461172,
    "id": 89934348,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTM0MzQ4",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {",
    "path": "src/primitives/transaction.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I believe the usual term is \"Deserialize\"",
    "created_at": "2016-11-29T03:13:55Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89934348",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89934348"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89934348"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89934348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 290,
    "original_line": 290,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937091",
    "pull_request_review_id": 10464888,
    "id": 89937091,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTM3MDkx",
    "diff_hunk": "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
    "path": "src/primitives/transaction.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It basically defines the hash of the empty transaction (which by consensus is always invalid) as 0, rather than technically SHA256^2(0x00000000000000000000).",
    "created_at": "2016-11-29T03:57:08Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937091",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937091"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937091"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 89933330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937126",
    "pull_request_review_id": 10464917,
    "id": 89937126,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTM3MTI2",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {",
    "path": "src/primitives/transaction.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree, but whomever wrote serialize.h originally did not. The implicitly-defined method that classes get for deserialization is called `Unserialize`.",
    "created_at": "2016-11-29T03:57:49Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937126",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937126"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89937126"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89937126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 290,
    "original_line": 290,
    "side": "RIGHT",
    "in_reply_to_id": 89934348
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89944332",
    "pull_request_review_id": 10471696,
    "id": 89944332,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTQ0MzMy",
    "diff_hunk": "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
    "path": "src/primitives/transaction.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems strange that you could construct the same transaction via CMutableTransaction or via CTransaction, and have them have a different hash, and be operator!=. Maybe not something to fix for this PR, though.",
    "created_at": "2016-11-29T05:43:44Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89944332",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89944332"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r89944332"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89944332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 89933330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330945",
    "pull_request_review_id": 10851901,
    "id": 90330945,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzMwOTQ1",
    "diff_hunk": "@@ -90,7 +90,7 @@ CScript ParseScript(const std::string& s)\n     return result;\n }\n \n-bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx, bool fTryNoWitness)\n+bool DecodeHexTx(CTransactionRef& tx, const std::string& strHexTx, bool fTryNoWitness)",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "0482f43c171f035ebb72567d1325ff8f10820488",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe `DecodeHexTx` should be changed to return `CMutableTransaction` instead of `CTransaction`. It seems awkward to require use of shared_ptr for a low-level decoding function, and `CMutableTransaction` would also let you get rid of the segfault workaround in bitcoin-tx.cpp.",
    "created_at": "2016-11-30T21:22:18Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90330945",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330945"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90330945"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 93,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90333411",
    "pull_request_review_id": 10851901,
    "id": 90333411,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzMzNDEx",
    "diff_hunk": "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 32,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "c1955323ad9135d8e845a885063eb608c250beb3",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add a todo comment to remove this operator in the future.",
    "created_at": "2016-11-30T21:34:56Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90333411",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90333411"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90333411"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90333411/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 188,
    "side": "RIGHT",
    "in_reply_to_id": 88581548
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90339716",
    "pull_request_review_id": 10851901,
    "id": 90339716,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzM5NzE2",
    "diff_hunk": "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }\n \n     void Init()\n     {\n         hashBlock = uint256();\n         nIndex = -1;\n     }\n \n+    template<typename... Args>\n+    void SetTx(Args&&... args)",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 41,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "6f7b5fa60de6715e195ed0fa1ff124cb5894b602",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This `std::forward` stuff is interesting because it means that the `SetTx` method and the `CMerkleTx` and `CWalletTx` constructors can all be called with arguments for any of the 3 non-template overloads of `MakeTransactionRef`, or with arguments for any of the 4 overloaded `CTransaction` constructors. But I wonder if you would consider defining `SetTx` more simply as:\r\n\r\n```\r\nvoid SetTx(CTransactionRef ref)\r\n{\r\n    tx = std::move(ref);\r\n}\r\n```\r\n\r\nand similarly replacing the template constructors with regular constructors accepting `CTransactionRef`s.\r\n\r\nThe advantage of doing this for someone reading the code is that you won't have to look 3 levels deep to see what arguments a `SetTx` call or constructor will accept, and of course won't have to know anything about std::forward either.",
    "created_at": "2016-11-30T22:07:05Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90339716",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90339716"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90339716"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90339716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351391",
    "pull_request_review_id": 10871765,
    "id": 90351391,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzUxMzkx",
    "diff_hunk": "@@ -177,28 +178,33 @@ class CMerkleTx : public CTransaction\n      */\n     int nIndex;\n \n-    CMerkleTx()\n+    template<typename... Args>\n+    CMerkleTx(Args&&... args)\n     {\n+        SetTx(std::forward<Args>(args)...);\n         Init();\n     }\n \n-    CMerkleTx(const CTransaction& txIn) : CTransaction(txIn)\n-    {\n-        Init();\n-    }\n+    operator const CTransaction&() const { return *tx; }\n \n     void Init()\n     {\n         hashBlock = uint256();\n         nIndex = -1;\n     }\n \n+    template<typename... Args>\n+    void SetTx(Args&&... args)",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 41,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "6f7b5fa60de6715e195ed0fa1ff124cb5894b602",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've changed CMerkleTx and CWalletTx to just take a `CTransactionRef` argument now as you suggested, effectively moving the `MakeTransactionRef` call to the constructor callers. By doing so, I discovered a few places where an `std::move` could be introduced to avoid a copy, so that makes the change worth it already.",
    "created_at": "2016-11-30T23:17:34Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351391",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351391"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351391"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 90339716
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351466",
    "pull_request_review_id": 10871825,
    "id": 90351466,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzUxNDY2",
    "diff_hunk": "@@ -90,7 +90,7 @@ CScript ParseScript(const std::string& s)\n     return result;\n }\n \n-bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx, bool fTryNoWitness)\n+bool DecodeHexTx(CTransactionRef& tx, const std::string& strHexTx, bool fTryNoWitness)",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "0482f43c171f035ebb72567d1325ff8f10820488",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree, changed.",
    "created_at": "2016-11-30T23:18:01Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351466",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351466"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351466"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 90330945
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351504",
    "pull_request_review_id": 10871859,
    "id": 90351504,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzUxNTA0",
    "diff_hunk": "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
    "path": "src/primitives/transaction.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree, let's fix this, but not in this PR.",
    "created_at": "2016-11-30T23:18:16Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351504",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351504"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90351504"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90351504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 89933330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90480532",
    "pull_request_review_id": 10999194,
    "id": 90480532,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDgwNTMy",
    "diff_hunk": "@@ -520,13 +520,13 @@ UniValue decoderawtransaction(const JSONRPCRequest& request)\n     LOCK(cs_main);\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VSTR));\n \n-    CTransaction tx;\n+    CMutableTransaction tx;",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe rename these `tx` variables to `mtx`. It would make the diff a little bigger, but also make the code review easier in confirming that all uses of these variables are still valid (especially with the new std::move calls which trash them).",
    "created_at": "2016-12-01T16:16:22Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90480532",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90480532"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90480532"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90480532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 523,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90482811",
    "pull_request_review_id": 10999194,
    "id": 90482811,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDgyODEx",
    "diff_hunk": "@@ -901,7 +901,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n         // push to local node and sync with wallets\n         CValidationState state;\n         bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, tx, fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {\n+        if (!AcceptToMemoryPool(mempool, state, CTransaction(std::move(tx)), fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe revert the change in this line and instead insert a `CTransaction tx(std::move(mtx));` declaration at line 889 after the decode. This would make it easier to understand the variable lifetimes in this function and also avoid calculating the tx hash twice.",
    "created_at": "2016-12-01T16:26:51Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90482811",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90482811"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90482811"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90482811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 904,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486310",
    "pull_request_review_id": 10999194,
    "id": 90486310,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDg2MzEw",
    "diff_hunk": "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(txNew));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 264,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "343dfda84af91942cb55bf22b34917d69c51af3a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you change `txNew` to `std::move(txNew)` here and `GetTransactionWeight(txNew)` to `GetTransactionWeight(*wtxNew->tx)` immediately below, you could avoid two transaction copies and hash computation.",
    "created_at": "2016-12-01T16:41:38Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486310",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486310"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486310"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2497,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486807",
    "pull_request_review_id": 10999194,
    "id": 90486807,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDg2ODA3",
    "diff_hunk": "@@ -267,17 +282,8 @@ class CWalletTx : public CMerkleTx\n         Init(NULL);\n     }\n \n-    CWalletTx(const CWallet* pwalletIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CMerkleTx& txIn) : CMerkleTx(txIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CTransaction& txIn) : CMerkleTx(txIn)\n+    template<typename... Args>",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 81,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "343dfda84af91942cb55bf22b34917d69c51af3a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Template line not needed.",
    "created_at": "2016-12-01T16:43:54Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486807",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486807"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90486807"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90486807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 285,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90488689",
    "pull_request_review_id": 10999194,
    "id": 90488689,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDg4Njg5",
    "diff_hunk": "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
    "path": "src/primitives/transaction.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add an explicit hash() initializer or comment to make the behavior more obvious & document it.",
    "created_at": "2016-12-01T16:52:23Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90488689",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90488689"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90488689"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90488689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 89933330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90492669",
    "pull_request_review_id": 10999194,
    "id": 90492669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDkyNjY5",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n+    if (fAllowWitness) {\n+        /* Check whether witnesses need to be serialized. */\n+        if (!tx.wit.IsNull()) {\n+            flags |= 1;\n         }\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        if (flags & 1) {\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n+    }\n+    if (flags) {\n+        /* Use extended format in case witnesses are to be serialized. */\n+        std::vector<CTxIn> vinDummy;\n+        s << vinDummy;\n+        s << flags;\n+    }\n+    s << tx.vin;\n+    s << tx.vout;\n+    if (flags & 1) {\n+        for (size_t i = 0; i < tx.vin.size(); i++) {",
    "path": "src/primitives/transaction.h",
    "position": 109,
    "original_position": 109,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "450ca59e1205c1f17e5c51ce36753baf4683c94d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "~~Isn't a `WriteCompactSize(s, tx.wit.vtxinwit.size());` call needed here? The previous code was calling `READWRITE(tx.wit)` which serialized the whole vector, and the Unserialize function here also seems to deserialize the entire vector instead of the individual elements.~~\r\n\r\nEdit: Never mind, I confused serializing the witness vector with serializing the `CTxWitness` class which wraps the vector and assumes a predetermined vector size.",
    "created_at": "2016-12-01T17:12:20Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90492669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90492669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90492669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90492669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 347,
    "original_line": 347,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495774",
    "pull_request_review_id": 10999194,
    "id": 90495774,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDk1Nzc0",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
    "path": "src/primitives/transaction.h",
    "position": 44,
    "original_position": 44,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "450ca59e1205c1f17e5c51ce36753baf4683c94d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I realize you didn't change this code, but should Unserialize throw an exception if vin size is 0 and fAllowWitness is false? In this case the comment below \"We read a non-empty vin. Assume a normal vout follows,\" would not be accurate and the flags field would seemingly be misinterpreted as the vout vector length.",
    "created_at": "2016-12-01T17:28:09Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90495774",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495774"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90495774"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 300,
    "original_line": 300,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90528995",
    "pull_request_review_id": 11048550,
    "id": 90528995,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTI4OTk1",
    "diff_hunk": "@@ -62,35 +62,19 @@ uint256 CMutableTransaction::GetHash() const\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n-void CTransaction::UpdateHash() const\n+uint256 CTransaction::ComputeHash() const\n {\n-    *const_cast<uint256*>(&hash) = SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n+    return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }\n \n uint256 CTransaction::GetWitnessHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n \n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n-\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), wit(tx.wit), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), wit(std::move(tx.wit)), nLockTime(tx.nLockTime) {\n-    UpdateHash();\n-}\n-\n-CTransaction& CTransaction::operator=(const CTransaction &tx) {\n-    *const_cast<int*>(&nVersion) = tx.nVersion;\n-    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n-    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n-    *const_cast<CTxWitness*>(&wit) = tx.wit;\n-    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n-    *const_cast<uint256*>(&hash) = tx.hash;\n-    return *this;\n-}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) {}",
    "path": "src/primitives/transaction.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "db4783e1774fd64c09e826b7bf4e851fa0195f8e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, and added a TODO to remove the constructor entirely.",
    "created_at": "2016-12-01T20:19:04Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90528995",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90528995"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90528995"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90528995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 89933330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90529030",
    "pull_request_review_id": 11048550,
    "id": 90529030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTI5MDMw",
    "diff_hunk": "@@ -374,25 +382,27 @@ class CTransaction\n     CTxWitness wit; // Not const: can change without invalidating the txid cache\n     const uint32_t nLockTime;\n \n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+\n+    uint256 ComputeHash() const;\n+\n+public:\n     /** Construct a CTransaction that qualifies as IsNull() */\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n     CTransaction(const CMutableTransaction &tx);\n     CTransaction(CMutableTransaction &&tx);\n \n-    CTransaction& operator=(const CTransaction& tx);\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        SerializeTransaction(*this, s, ser_action);\n-        if (ser_action.ForRead()) {\n-            UpdateHash();\n-        }\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n+        SerializeTransaction(*this, s);\n     }\n \n+    /* No Unserialize method. Use the deserializing constructor below instead. */",
    "path": "src/primitives/transaction.h",
    "position": null,
    "original_position": 167,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "63296e690a0805bc6501d69d100add8c0abdeb3c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2016-12-01T20:19:14Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90529030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90529030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90529030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90529030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 404,
    "side": "RIGHT",
    "in_reply_to_id": 88585691
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530434",
    "pull_request_review_id": 11048550,
    "id": 90530434,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTMwNDM0",
    "diff_hunk": "@@ -901,7 +901,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n         // push to local node and sync with wallets\n         CValidationState state;\n         bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, tx, fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {\n+        if (!AcceptToMemoryPool(mempool, state, CTransaction(std::move(tx)), fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2016-12-01T20:27:25Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530434",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530434"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530434"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 904,
    "side": "RIGHT",
    "in_reply_to_id": 90482811
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530449",
    "pull_request_review_id": 11048550,
    "id": 90530449,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTMwNDQ5",
    "diff_hunk": "@@ -520,13 +520,13 @@ UniValue decoderawtransaction(const JSONRPCRequest& request)\n     LOCK(cs_main);\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VSTR));\n \n-    CTransaction tx;\n+    CMutableTransaction tx;",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "8ac50ee4e7a9ba4e7aee4537f6c962ad4a82ed55",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2016-12-01T20:27:30Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530449",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530449"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90530449"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90530449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 523,
    "side": "RIGHT",
    "in_reply_to_id": 90480532
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531052",
    "pull_request_review_id": 11048550,
    "id": 90531052,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTMxMDUy",
    "diff_hunk": "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(txNew));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 264,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "343dfda84af91942cb55bf22b34917d69c51af3a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2016-12-01T20:30:59Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531052",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531052"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531052"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2497,
    "side": "RIGHT",
    "in_reply_to_id": 90486310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531185",
    "pull_request_review_id": 11048550,
    "id": 90531185,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTMxMTg1",
    "diff_hunk": "@@ -267,17 +282,8 @@ class CWalletTx : public CMerkleTx\n         Init(NULL);\n     }\n \n-    CWalletTx(const CWallet* pwalletIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CMerkleTx& txIn) : CMerkleTx(txIn)\n-    {\n-        Init(pwalletIn);\n-    }\n-\n-    CWalletTx(const CWallet* pwalletIn, const CTransaction& txIn) : CMerkleTx(txIn)\n+    template<typename... Args>",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 81,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "343dfda84af91942cb55bf22b34917d69c51af3a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2016-12-01T20:31:44Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531185",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531185"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531185"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 285,
    "side": "RIGHT",
    "in_reply_to_id": 90486807
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531458",
    "pull_request_review_id": 11048550,
    "id": 90531458,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTMxNDU4",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
    "path": "src/primitives/transaction.h",
    "position": 44,
    "original_position": 44,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "450ca59e1205c1f17e5c51ce36753baf4683c94d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No. When fAllowWitness is false, this code explicitly supports transactions with vin.size()=0. Even those are not valid due to consensus rules, it is necessary to correctly implement the ambiguitity detection in the `decoderawtransaction` and `fundrawtransaction` RPCs (which accept incomplete transactions as inputs).",
    "created_at": "2016-12-01T20:33:21Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531458",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531458"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531458"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 300,
    "original_line": 300,
    "side": "RIGHT",
    "in_reply_to_id": 90495774
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531503",
    "pull_request_review_id": 11048550,
    "id": 90531503,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTMxNTAz",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n+    if (fAllowWitness) {\n+        /* Check whether witnesses need to be serialized. */\n+        if (!tx.wit.IsNull()) {\n+            flags |= 1;\n         }\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        if (flags & 1) {\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n+    }\n+    if (flags) {\n+        /* Use extended format in case witnesses are to be serialized. */\n+        std::vector<CTxIn> vinDummy;\n+        s << vinDummy;\n+        s << flags;\n+    }\n+    s << tx.vin;\n+    s << tx.vout;\n+    if (flags & 1) {\n+        for (size_t i = 0; i < tx.vin.size(); i++) {",
    "path": "src/primitives/transaction.h",
    "position": 109,
    "original_position": 109,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "450ca59e1205c1f17e5c51ce36753baf4683c94d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed. The code is a bit ugly in that the serializer does the witness serialization inline, while the deserializer uses `CTxWitness`. In #8589 `CTxWitness` is removed entirely.",
    "created_at": "2016-12-01T20:33:35Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531503",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531503"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90531503"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90531503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 347,
    "original_line": 347,
    "side": "RIGHT",
    "in_reply_to_id": 90492669
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90542705",
    "pull_request_review_id": 11062535,
    "id": 90542705,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTQyNzA1",
    "diff_hunk": "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(std::move(txNew)));\n \n                 // Limit size\n                 if (GetTransactionWeight(txNew) >= MAX_STANDARD_TX_WEIGHT)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 267,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "f006fcc1da680540def6c7d7d1f9b3d8aca8a1f8",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Need to change this to `GetTransactionWeight(*wtxNew.tx)` since `txNew` is moved from.",
    "created_at": "2016-12-01T21:37:10Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90542705",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90542705"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90542705"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90542705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2500,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90543745",
    "pull_request_review_id": 11062535,
    "id": 90543745,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTQzNzQ1",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
    "path": "src/primitives/transaction.h",
    "position": 44,
    "original_position": 44,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "450ca59e1205c1f17e5c51ce36753baf4683c94d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see, and thanks for clarifying even though this code isn't really changed by your PR. Two other comments I would make (maybe for a separate PR) are:\r\n\r\n- The \"We read a non-empty vin\" part of the comment below is misleading and should probably be dropped or reworded.\r\n- The `if (flags != 0)` condition is confusing and should never be false.\r\n\r\nMaybe the following would be an improvement:\r\n\r\n```\r\n    s >> tx.vin;\r\n    if (tx.vin.size() == 0 && fAllowWitness) {\r\n        /* We read a dummy or an empty vin. */\r\n        s >> flags;\r\n        if (flags == 0)\r\n            throw std::ios_base::failure(\"Invalid transaction flags\");\r\n        s >> tx.vin;\r\n    }\r\n    s >> tx.vout;\r\n```",
    "created_at": "2016-12-01T21:42:58Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90543745",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90543745"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90543745"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90543745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 300,
    "original_line": 300,
    "side": "RIGHT",
    "in_reply_to_id": 90495774
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90555939",
    "pull_request_review_id": 11075770,
    "id": 90555939,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTU1OTM5",
    "diff_hunk": "@@ -2494,7 +2494,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 }\n \n                 // Embed the constructed transaction data in wtxNew.\n-                *static_cast<CTransaction*>(&wtxNew) = CTransaction(txNew);\n+                wtxNew.SetTx(MakeTransactionRef(std::move(txNew)));\n \n                 // Limit size\n                 if (GetTransactionWeight(txNew) >= MAX_STANDARD_TX_WEIGHT)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 267,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "f006fcc1da680540def6c7d7d1f9b3d8aca8a1f8",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2016-12-01T22:56:24Z",
    "updated_at": "2016-12-03T02:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90555939",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90555939"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90555939"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90555939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2500,
    "side": "RIGHT",
    "in_reply_to_id": 90542705
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90789545",
    "pull_request_review_id": 11305215,
    "id": 90789545,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNzg5NTQ1",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {",
    "path": "src/primitives/transaction.h",
    "position": 44,
    "original_position": 44,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "450ca59e1205c1f17e5c51ce36753baf4683c94d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well there is a (perhaps misguided) attempt to parse the 10-byte `[nVersion] 0x00 0x00 [nLockTime]` as an empty transaction, rather than as an (incorrectly encoded) witness transaction.",
    "created_at": "2016-12-04T23:25:28Z",
    "updated_at": "2016-12-04T23:25:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90789545",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90789545"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r90789545"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90789545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 300,
    "original_line": 300,
    "side": "RIGHT",
    "in_reply_to_id": 90495774
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91072582",
    "pull_request_review_id": 11582301,
    "id": 91072582,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxMDcyNTgy",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());",
    "path": "src/primitives/transaction.h",
    "position": 88,
    "original_position": 88,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This assert is the cause of SIGSEGV when paying in the UI.\r\n```\r\nAssertion failed: (tx.wit.vtxinwit.size() <= tx.vin.size()), function SerializeTransaction, file ./primitives/transaction.h, line 331.\r\n```",
    "created_at": "2016-12-06T13:02:36Z",
    "updated_at": "2016-12-06T13:02:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91072582",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91072582"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91072582"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91072582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 331,
    "original_line": 331,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91078551",
    "pull_request_review_id": 11588357,
    "id": 91078551,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxMDc4NTUx",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());",
    "path": "src/primitives/transaction.h",
    "position": 88,
    "original_position": 88,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I remember a PR of @sipa where he made witness scripts part of the TxIn class. I wished it was merged so such error would not possibly happen. :(",
    "created_at": "2016-12-06T13:40:47Z",
    "updated_at": "2016-12-06T13:40:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91078551",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91078551"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91078551"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91078551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 331,
    "original_line": 331,
    "side": "RIGHT",
    "in_reply_to_id": 91072582
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91082667",
    "pull_request_review_id": 11592359,
    "id": 91082667,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxMDgyNjY3",
    "diff_hunk": "@@ -286,73 +286,81 @@ struct CMutableTransaction;\n  *   - CTxWitness wit;\n  * - uint32_t nLockTime\n  */\n-template<typename Stream, typename Operation, typename TxType>\n-inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action) {\n+template<typename Stream, typename TxType>\n+inline void UnserializeTransaction(TxType& tx, Stream& s) {\n     const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n \n-    READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n+    s >> tx.nVersion;\n     unsigned char flags = 0;\n-    if (ser_action.ForRead()) {\n-        const_cast<std::vector<CTxIn>*>(&tx.vin)->clear();\n-        const_cast<std::vector<CTxOut>*>(&tx.vout)->clear();\n-        const_cast<CTxWitness*>(&tx.wit)->SetNull();\n-        /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n-        READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && fAllowWitness) {\n-            /* We read a dummy or an empty vin. */\n-            READWRITE(flags);\n-            if (flags != 0) {\n-                READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-                READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-            }\n-        } else {\n-            /* We read a non-empty vin. Assume a normal vout follows. */\n-            READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n-        }\n-        if ((flags & 1) && fAllowWitness) {\n-            /* The witness flag is present, and we support witnesses. */\n-            flags ^= 1;\n-            const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n-            READWRITE(tx.wit);\n-        }\n-        if (flags) {\n-            /* Unknown flag in the serialization */\n-            throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    tx.vin.clear();\n+    tx.vout.clear();\n+    tx.wit.SetNull();\n+    /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n+    s >> tx.vin;\n+    if (tx.vin.size() == 0 && fAllowWitness) {\n+        /* We read a dummy or an empty vin. */\n+        s >> flags;\n+        if (flags != 0) {\n+            s >> tx.vin;\n+            s >> tx.vout;\n         }\n     } else {\n-        // Consistency check\n-        assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (fAllowWitness) {\n-            /* Check whether witnesses need to be serialized. */\n-            if (!tx.wit.IsNull()) {\n-                flags |= 1;\n-            }\n-        }\n-        if (flags) {\n-            /* Use extended format in case witnesses are to be serialized. */\n-            std::vector<CTxIn> vinDummy;\n-            READWRITE(vinDummy);\n-            READWRITE(flags);\n+        /* We read a non-empty vin. Assume a normal vout follows. */\n+        s >> tx.vout;\n+    }\n+    if ((flags & 1) && fAllowWitness) {\n+        /* The witness flag is present, and we support witnesses. */\n+        flags ^= 1;\n+        tx.wit.vtxinwit.resize(tx.vin.size());\n+        s >> tx.wit;\n+    }\n+    if (flags) {\n+        /* Unknown flag in the serialization */\n+        throw std::ios_base::failure(\"Unknown transaction optional data\");\n+    }\n+    s >> tx.nLockTime;\n+}\n+\n+template<typename Stream, typename TxType>\n+inline void SerializeTransaction(const TxType& tx, Stream& s) {\n+    const bool fAllowWitness = !(s.GetVersion() & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n+    s << tx.nVersion;\n+    unsigned char flags = 0;\n+    // Consistency check\n+    assert(tx.wit.vtxinwit.size() <= tx.vin.size());",
    "path": "src/primitives/transaction.h",
    "position": 88,
    "original_position": 88,
    "commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "original_commit_id": "81e3228fcb33e8ed32d8b9fbe917444ba080073a",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See #9296 ",
    "created_at": "2016-12-06T14:03:17Z",
    "updated_at": "2016-12-06T14:03:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91082667",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91082667"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8580#discussion_r91082667"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8580"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91082667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 331,
    "original_line": 331,
    "side": "RIGHT",
    "in_reply_to_id": 91072582
  }
]