[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555759090",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#issuecomment-555759090",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17527",
    "id": 555759090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTc1OTA5MA==",
    "user": {
      "login": "mb300sd",
      "id": 1869901,
      "node_id": "MDQ6VXNlcjE4Njk5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1869901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mb300sd",
      "html_url": "https://github.com/mb300sd",
      "followers_url": "https://api.github.com/users/mb300sd/followers",
      "following_url": "https://api.github.com/users/mb300sd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mb300sd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mb300sd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mb300sd/subscriptions",
      "organizations_url": "https://api.github.com/users/mb300sd/orgs",
      "repos_url": "https://api.github.com/users/mb300sd/repos",
      "events_url": "https://api.github.com/users/mb300sd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mb300sd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-19T23:12:13Z",
    "updated_at": "2019-11-19T23:12:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested. Changes fixed the issue for me.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555759090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555761677",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#issuecomment-555761677",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17527",
    "id": 555761677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTc2MTY3Nw==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-19T23:21:15Z",
    "updated_at": "2019-11-19T23:21:15Z",
    "author_association": "MEMBER",
    "body": "[Intel\u00ae Processor Identification and the CPUID Instruction - Application Note 485](https://github.com/bitcoin/bitcoin/files/3866527/241618-038.pdf)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555761677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555895238",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#issuecomment-555895238",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17527",
    "id": 555895238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTg5NTIzOA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-20T08:27:26Z",
    "updated_at": "2019-11-20T08:27:26Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Thanks @mb300sd for catching this before a release.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555895238/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557586413",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#issuecomment-557586413",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17527",
    "id": 557586413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzU4NjQxMw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-22T15:53:21Z",
    "updated_at": "2019-11-22T15:53:21Z",
    "author_association": "MEMBER",
    "body": "ACK f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557586413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557606631",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#issuecomment-557606631",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17527",
    "id": 557606631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzYwNjYzMQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-22T16:47:22Z",
    "updated_at": "2019-11-22T16:47:22Z",
    "author_association": "MEMBER",
    "body": "ACK f93fc61c65d605eae2d3e2c98bdd30ae587fcdab code review, tested rebased on current master bb862d7 with Debian 4.19 x86_64",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557606631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348233794",
    "pull_request_review_id": 319436961,
    "id": 348233794,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODIzMzc5NA==",
    "diff_hunk": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {",
    "path": "src/randomenv.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "original_commit_id": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am not an expert on CPUID, but how about an emergency break after some number of subleaves - or was it a deliberate decision to construct the inner loop in a way that it can possibly run infinitely when certain assumptions are wrong, or might be in the future? ",
    "created_at": "2019-11-20T00:08:52Z",
    "updated_at": "2019-11-20T18:54:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348233794",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348233794"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348233794"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348233794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348236835",
    "pull_request_review_id": 319440769,
    "id": 348236835,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODIzNjgzNQ==",
    "diff_hunk": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {",
    "path": "src/randomenv.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "original_commit_id": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I guess the question is whether we want to have any chance of catching weird systems that return non-compliant CPUID values. If we add an upper bound, we'll probably never ever see a bug report like this one.\r\n\r\n",
    "created_at": "2019-11-20T00:21:15Z",
    "updated_at": "2019-11-20T18:54:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348236835",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348236835"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348236835"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348236835/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT",
    "in_reply_to_id": 348233794
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348246049",
    "pull_request_review_id": 319452672,
    "id": 348246049,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODI0NjA0OQ==",
    "diff_hunk": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {",
    "path": "src/randomenv.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "original_commit_id": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "True, I am not sure if catching those justifies the inconvenience for affected users who might not be able to run bitcoin on their system without waiting for a patch (considering that CPUID is just one of many static entropy sources).",
    "created_at": "2019-11-20T00:59:20Z",
    "updated_at": "2019-11-20T18:54:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348246049",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348246049"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348246049"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348246049/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT",
    "in_reply_to_id": 348233794
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348341867",
    "pull_request_review_id": 319660070,
    "id": 348341867,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODM0MTg2Nw==",
    "diff_hunk": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {",
    "path": "src/randomenv.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "original_commit_id": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this depends on the chance that there actually CPUs out there, suitable for running nodes, that are not compliant with this. \r\n\r\nI feel slightly uneasy with potentially infinite loops over hardware registers like this, OTOH I understand @sipa's point.\r\n\r\n> I guess the question is whether we want to have any chance of catching weird systems that return non-compliant CPUID values.\r\n\r\nIt could log a message when it hits the upper bound. And if you make it a high enough value you'd still get reports, just that bitcoind startup is slow instead of doesn't start at all.\r\n(which is probably preferable :smile:)\r\n",
    "created_at": "2019-11-20T08:22:05Z",
    "updated_at": "2019-11-20T18:54:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348341867",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348341867"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348341867"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348341867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT",
    "in_reply_to_id": 348233794
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348342588",
    "pull_request_review_id": 319660919,
    "id": 348342588,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODM0MjU4OA==",
    "diff_hunk": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {",
    "path": "src/randomenv.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "original_commit_id": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's only a uint32_t. How long does a full wrap-around take?",
    "created_at": "2019-11-20T08:23:56Z",
    "updated_at": "2019-11-20T18:54:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348342588",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348342588"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348342588"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348342588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT",
    "in_reply_to_id": 348233794
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348686646",
    "pull_request_review_id": 320197718,
    "id": 348686646,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0ODY4NjY0Ng==",
    "diff_hunk": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {",
    "path": "src/randomenv.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "original_commit_id": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@laanwj A full 32-bit wrap-around would mean SHA512 hashing 96 GiB of data. Too long, I'm sure.\r\n\r\nI've added a commit to limit the number of iterations.",
    "created_at": "2019-11-20T18:56:01Z",
    "updated_at": "2019-11-20T18:56:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348686646",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348686646"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r348686646"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/348686646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT",
    "in_reply_to_id": 348233794
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/349892034",
    "pull_request_review_id": 321930972,
    "id": 349892034,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0OTg5MjAzNA==",
    "diff_hunk": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {\n             AddCPUID(hasher, leaf, subleaf, ax, bx, cx, dx);\n-            // Iterate over subleaves for leaf 4, 11, 13\n-            if (leaf != 4 && leaf != 11 && leaf != 13) break;\n-            if ((leaf == 4 || leaf == 13) && ax == 0) break;\n-            if (leaf == 11 && (cx & 0xFF00) == 0) break;\n+            // Iterate subleafs for leaf values 4, 7, 11, 13\n+            if (leaf == 4) {\n+                if ((ax & 0x1f) == 0) break;\n+            } else if (leaf == 7) {\n+                if (subleaf == 0) maxsub = ax;\n+                if (subleaf == maxsub) break;\n+            } else if (leaf == 11) {\n+                if ((cx & 0xff00) == 0) break;",
    "path": "src/randomenv.cpp",
    "position": 21,
    "original_position": 18,
    "commit_id": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "original_commit_id": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Got slightly confused here because the intel pdf linked above recommends `eax=0` and `ebx=0` as break condition for leaf 11 (p.40), but checking `cx & 0xff00` should be equivalent according to [this](http://www.ftp.neutrino.es/x86InstructionSet/CPUID.html).",
    "created_at": "2019-11-23T21:55:56Z",
    "updated_at": "2019-11-23T22:04:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r349892034",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/349892034"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17527#discussion_r349892034"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17527"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/349892034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 211,
    "side": "RIGHT"
  }
]