[
  {
    "sha": "544e12a4e81633d222574eec253a1ff292d3c4a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDRlMTJhNGU4MTYzM2QyMjI1NzRlZWMyNTNhMWZmMjkyZDNjNGE1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-08-25T17:10:32Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-08-25T17:23:40Z"
      },
      "message": "walletdb: Add KeyFilterFn to ReadKeyValue\n\nAdd a KeyFilterFn callback to ReadKeyValue which allows the caller to\nspecify which types to actually deserialize. A KeyFilterFn takes the\ntype as the parameter and returns a bool indicating whether\ndeserialization should continue.",
      "tree": {
        "sha": "d19b99594f9609df1370bdd95941f8d2a1d2a54d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d19b99594f9609df1370bdd95941f8d2a1d2a54d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/544e12a4e81633d222574eec253a1ff292d3c4a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/544e12a4e81633d222574eec253a1ff292d3c4a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/544e12a4e81633d222574eec253a1ff292d3c4a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/544e12a4e81633d222574eec253a1ff292d3c4a5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8462a6d2794be728cf8550f45d19a354aae59cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8462a6d2794be728cf8550f45d19a354aae59cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8462a6d2794be728cf8550f45d19a354aae59cf"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4635c19b3d7decb1f047bcd146abf94dd8990ec6",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544e12a4e81633d222574eec253a1ff292d3c4a5/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544e12a4e81633d222574eec253a1ff292d3c4a5/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=544e12a4e81633d222574eec253a1ff292d3c4a5",
        "patch": "@@ -263,13 +263,17 @@ class CWalletScanState {\n \n static bool\n ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n-             CWalletScanState &wss, std::string& strType, std::string& strErr) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+             CWalletScanState &wss, std::string& strType, std::string& strErr, const KeyFilterFn& filter_fn = nullptr) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     try {\n         // Unserialize\n         // Taking advantage of the fact that pair serialization\n         // is just the two items serialized one after the other\n         ssKey >> strType;\n+        // If we have a filter, check if this matches the filter\n+        if (filter_fn && !filter_fn(strType)) {\n+            return true;\n+        }\n         if (strType == DBKeys::NAME) {\n             std::string strAddress;\n             ssKey >> strAddress;\n@@ -668,11 +672,11 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n     return true;\n }\n \n-bool ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue, std::string& strType, std::string& strErr)\n+bool ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue, std::string& strType, std::string& strErr, const KeyFilterFn& filter_fn)\n {\n     CWalletScanState dummy_wss;\n     LOCK(pwallet->cs_wallet);\n-    return ReadKeyValue(pwallet, ssKey, ssValue, dummy_wss, strType, strErr);\n+    return ReadKeyValue(pwallet, ssKey, ssValue, dummy_wss, strType, strErr, filter_fn);\n }\n \n bool WalletBatch::IsKeyType(const std::string& strType)"
      },
      {
        "sha": "eaeb2bb8638e368a0488363f54c081f47b197353",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/544e12a4e81633d222574eec253a1ff292d3c4a5/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/544e12a4e81633d222574eec253a1ff292d3c4a5/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=544e12a4e81633d222574eec253a1ff292d3c4a5",
        "patch": "@@ -280,8 +280,11 @@ class WalletBatch\n //! Compacts BDB state so that wallet.dat is self-contained (if there are changes)\n void MaybeCompactWalletDB();\n \n+//! Callback for filtering key types to deserialize in ReadKeyValue\n+using KeyFilterFn = std::function<bool(const std::string&)>;\n+\n //! Unserialize a given Key-Value pair and load it into the wallet\n-bool ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue, std::string& strType, std::string& strErr);\n+bool ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue, std::string& strType, std::string& strErr, const KeyFilterFn& filter_fn = nullptr);\n \n /** Return whether a wallet database is currently loaded. */\n bool IsWalletLoaded(const fs::path& wallet_path);"
      }
    ]
  },
  {
    "sha": "0bbe26a1af2aab2287b18048f80b3f70e63e0044",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmJlMjZhMWFmMmFhYjIyODdiMTgwNDhmODBiM2Y3MGU2M2UwMDQ0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-08-25T17:15:50Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-08-25T17:23:40Z"
      },
      "message": "wallet: filter for keys only before record deser in salvage\n\nWhen salvaging a wallet, avoid deserializing any records that we don't\ncare about, i.e. filter for keys only before the deserialization.",
      "tree": {
        "sha": "0b2a2b9567679d3eb96c4f877544b05570c0b6e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b2a2b9567679d3eb96c4f877544b05570c0b6e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bbe26a1af2aab2287b18048f80b3f70e63e0044",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bbe26a1af2aab2287b18048f80b3f70e63e0044",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bbe26a1af2aab2287b18048f80b3f70e63e0044",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bbe26a1af2aab2287b18048f80b3f70e63e0044/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "544e12a4e81633d222574eec253a1ff292d3c4a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/544e12a4e81633d222574eec253a1ff292d3c4a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/544e12a4e81633d222574eec253a1ff292d3c4a5"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "934e3d5c865141007b030fe59016936a8b4a5fe3",
        "filename": "src/wallet/salvage.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bbe26a1af2aab2287b18048f80b3f70e63e0044/src/wallet/salvage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bbe26a1af2aab2287b18048f80b3f70e63e0044/src/wallet/salvage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/salvage.cpp?ref=0bbe26a1af2aab2287b18048f80b3f70e63e0044",
        "patch": "@@ -16,6 +16,11 @@ static const char *HEADER_END = \"HEADER=END\";\n static const char *DATA_END = \"DATA=END\";\n typedef std::pair<std::vector<unsigned char>, std::vector<unsigned char> > KeyValPair;\n \n+static bool KeyFilter(const std::string& type)\n+{\n+    return WalletBatch::IsKeyType(type) || type == DBKeys::HDCHAIN;\n+}\n+\n bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::vector<bilingual_str>& warnings)\n {\n     std::string filename;\n@@ -129,9 +134,9 @@ bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::v\n         {\n             // Required in LoadKeyMetadata():\n             LOCK(dummyWallet.cs_wallet);\n-            fReadOK = ReadKeyValue(&dummyWallet, ssKey, ssValue, strType, strErr);\n+            fReadOK = ReadKeyValue(&dummyWallet, ssKey, ssValue, strType, strErr, KeyFilter);\n         }\n-        if (!WalletBatch::IsKeyType(strType) && strType != DBKeys::HDCHAIN) {\n+        if (!KeyFilter(strType)) {\n             continue;\n         }\n         if (!fReadOK)"
      }
    ]
  }
]