MarcoFalke,2020-07-13 05:40:12,"review ACK, but I am not sure if we need to push this into the upcoming release. Is there any reason this can't wait 3.5 months? While xenial has a c++17 compiler, but lacks a c++17 compatible stdlib, xenial will die anyway. No strong opinion, though.\n\nMight need to update the travis yaml python linter version?",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-657369914,657369914,
DrahtBot,2020-07-13 05:51:03,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19179 (ci: Run ci configs on cirrus by MarcoFalke)\n\nIf you consider this pull request important, please also help to re",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-657373167,657373167,
ajtowns,2020-07-13 06:12:39,"No objection to letting it wait; mostly just thought it made more sense to do a PR directly than open a ""python 3.5 is nearing eol"" issue.",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-657380223,657380223,
practicalswift,2020-07-13 09:23:12,Concept ACK: alive is better than end-of-life,https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-657437480,657437480,
MarcoFalke,2020-07-13 09:40:03,"Assigned 0.22.0 milestone with proposed merge date of Nov 1st.\n\nIf python 3.6 is needed to simplify mypy, then it can be merged sooner https://github.com/bitcoin/bitcoin/issues/19389#issuecomment-650475138",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-657447754,657447754,
jnewbery,2020-07-13 10:31:24,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-657477898,657477898,
laanwj,2020-07-15 13:49:03,"I like Python 3.6's improvements a lot,1 concept ACK if/when the Linux distributions we support building on have it.\n",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-658779080,658779080,
troygiorshev,2020-07-16 18:22:17,"Concept ACK\n\n> If python 3.6 is needed to simplify mypy, then it can be merged sooner #19389 (comment)\n\nFrom what I can tell right now, I don't think this will be the case.  I think we'll be ok with 3.5.",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-659588186,659588186,
fjahr,2020-07-17 09:05:31,"tested ACK 2b53176fd0a2d594ee7833397d3b32c59d1bbae0\n\nAgree this can wait a bit and be done with c++17.",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-659979262,659979262,
fanquake,2020-07-28 06:46:04,"Concept ACK. No mention of [3.6+ related typing improvements](https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-typing) in the op, which is probably what I'm most interested in. I wouldn't be overly concerned about CentOS 7 or Xenial support here.",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-664811335,664811335,
theStack,2020-09-06 00:42:06,"Strong concept ACK (no need to rush though, as others already stated doing this along with the C++17 bump seems reasonable).",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-687681379,687681379,
kristapsk,2020-09-07 18:27:00,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-688465998,688465998,
MarcoFalke,2020-10-01 07:17:43,@ajtowns Are you still working on this? Would be good to rebase and address the feedback,https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-701940273,701940273,
Sjors,2020-10-01 18:18:51,tACK ef0b760 on macOS 10.15.7,https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-702313352,702313352,
kristapsk,2020-10-01 19:07:25,"> - Use `f'{x}'` for string formatting in preference to `'{}'.format(x)` or `'%s' % x`.\n\nThis PR changes this in `test/functional/feature_block.py`, but there are other places where `.format` is still used, shouldn't it be changed everywhere then?\n\nAlso, maybe some linter script could be added that checks `.py` files for this?\n\nBut probably that's out of scope of this PR and can be don",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-702339321,702339321,
ajtowns,2020-10-01 19:41:17,"> > * Use `f'{x}'` for string formatting in preference to `'{}'.format(x)` or `'%s' % x`. \n\n> This PR changes this in `test/functional/feature_block.py`, but there are other places where `.format` is still used, shouldn't it be changed everywhere then?\n\nIt's changed there so that CI tests that it works (eg, failing if an older version of python is being used) and as an example for what the",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-702356260,702356260,
practicalswift,2020-10-16 13:51:21,ACK modulo fix for CI failure :),https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-710060284,710060284,
MarcoFalke,2020-10-19 09:21:15,"ACK 9bc4cdf0beb95072ab33b418349df8f7217b329d\n\nfor 0.22",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-711900230,711900230,
MarcoFalke,2020-11-09 08:20:15,"re-ACK 97c738ff1b\n\nfor 22.0\nonly change is rebase",https://github.com/bitcoin/bitcoin/pull/19504#issuecomment-723848114,723848114,
Sjors,2020-07-14 15:42:26,"This is only used by PyEnv, which can install the more modern `3.6.11` just as well.",https://github.com/bitcoin/bitcoin/pull/19504#discussion_r454453565,454453565,.python-version
MarcoFalke,2020-07-16 04:47:54,the travis yaml will need to be updated as well (name of the config),https://github.com/bitcoin/bitcoin/pull/19504#discussion_r455507731,455507731,ci/test/00_setup_env_native_nowallet.sh
ajtowns,2020-10-01 17:55:24,updated travis yaml,https://github.com/bitcoin/bitcoin/pull/19504#discussion_r498420699,498420699,ci/test/00_setup_env_native_nowallet.sh
ajtowns,2020-10-01 17:55:56,updated to 3.6.12 released in August,https://github.com/bitcoin/bitcoin/pull/19504#discussion_r498420999,498420999,.python-version
Sjors,2020-10-01 18:09:40,"Python 3.6.12 is not yet availabe via Homebrew's PyEnv, but that should be fixed by the time this lands. I just manually switched to 3.6.11 for testing. https://github.com/pyenv/pyenv/pull/1680#issuecomment-701478171",https://github.com/bitcoin/bitcoin/pull/19504#discussion_r498428253,498428253,.python-version
fanquake,2020-10-02 05:51:51,"\n```suggestion\nexport BITCOIN_CONFIG=""--enable-glibc-back-compat --enable-reduce-exports CC=clang-3.9 CXX=clang++-3.9 --with-boost-process""\n```",https://github.com/bitcoin/bitcoin/pull/19504#discussion_r498627660,498627660,ci/test/00_setup_env_native_nowallet.sh
MarcoFalke,2020-10-16 09:54:47,"@ajtowns Mind fixing the typo, so that ci passes here?",https://github.com/bitcoin/bitcoin/pull/19504#discussion_r506239735,506239735,ci/test/00_setup_env_native_nowallet.sh
ajtowns,2020-10-17 14:38:12,Thought I'd done that already... Done now anyway,https://github.com/bitcoin/bitcoin/pull/19504#discussion_r506949562,506949562,ci/test/00_setup_env_native_nowallet.sh
MarcoFalke,2020-11-04 19:54:21,"in commit ea39d8bc9e1b7c23486abc5b28a20d4660fe93dd:\n\nSorry this needs a rebase. I tried to avoid that, but it seems `git merge` isn't as smart as `patch` when it comes to line-offsets.\n\n```\n$ git show ea39d8bc9e1b7c23486abc5b28a20d4660fe93dd | patch -p1 --dry-run \nchecking file .python-version\nchecking file .travis.yml\nHunk #2 succeeded at 90 with fuzz 1 (offset -20 lines).\ncheck",https://github.com/bitcoin/bitcoin/pull/19504#discussion_r517594459,517594459,.travis.yml
ajtowns,2020-11-18 09:21:36,Done,https://github.com/bitcoin/bitcoin/pull/19504#discussion_r525931132,525931132,.travis.yml
