[
  {
    "sha": "33b377a01637d4e5cf436f45bd59dc0f1b755624",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2IzNzdhMDE2MzdkNGU1Y2Y0MzZmNDViZDU5ZGMwZjFiNzU1NjI0",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-01-14T16:52:15Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-01-18T15:08:28Z"
      },
      "message": "Port macdeployqtplus to OSX 10.8\n\nUse 'osascript' to run AppleScript, instead of using (broken-in-10.8)\npython appscript package.\n\nAnd added support for code-signing the .app bundle, to make OSX's\nGateKeeper happy.",
      "tree": {
        "sha": "325436fba1fb593d39d094a9b9b2491aac820fb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/325436fba1fb593d39d094a9b9b2491aac820fb3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33b377a01637d4e5cf436f45bd59dc0f1b755624",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33b377a01637d4e5cf436f45bd59dc0f1b755624",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33b377a01637d4e5cf436f45bd59dc0f1b755624",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33b377a01637d4e5cf436f45bd59dc0f1b755624/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c7847349d5d4b1f3e8480c5137c2e8f3e2a5f5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c7847349d5d4b1f3e8480c5137c2e8f3e2a5f5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c7847349d5d4b1f3e8480c5137c2e8f3e2a5f5c"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 77,
      "deletions": 24
    },
    "files": [
      {
        "sha": "11140d3b8504d7c59f72e826ad339022c2691688",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 75,
        "deletions": 23,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33b377a01637d4e5cf436f45bd59dc0f1b755624/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33b377a01637d4e5cf436f45bd59dc0f1b755624/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=33b377a01637d4e5cf436f45bd59dc0f1b755624",
        "patch": "@@ -18,6 +18,7 @@\n #\n \n import subprocess, sys, re, os, shutil, stat, os.path\n+from string import Template\n from time import sleep\n from argparse import ArgumentParser\n \n@@ -429,12 +430,17 @@ ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n Note, that the \"dist\" folder will be deleted before deploying on each run.\n \n-Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\"\"\")\n+Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n+\n+Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n+to the codesign tool.\n+E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n \n ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n+ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n@@ -635,6 +641,15 @@ for p in config.add_resources:\n \n # ------------------------------------------------\n \n+if config.sign and 'CODESIGNARGS' not in os.environ:\n+    print \"You must set the CODESIGNARGS environment variable. Skipping signing.\"\n+elif config.sign:\n+    if verbose >= 1:\n+        print \"Code-signing app bundle %s\"%(target,)\n+    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n+\n+# ------------------------------------------------\n+\n if config.dmg is not None:\n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n@@ -713,31 +728,68 @@ if config.dmg is not None:\n         if fancy.get(\"applications_symlink\", False):\n             os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n         \n-        finder = appscript.app(\"Finder\")\n-        disk = finder.disks[disk_name]\n-        disk.open()\n-        window = disk.container_window\n-        window.current_view.set(appscript.k.icon_view)\n-        window.toolbar_visible.set(False)\n-        window.statusbar_visible.set(False)\n-        if fancy.has_key(\"window_bounds\"):\n-            window.bounds.set(fancy[\"window_bounds\"])\n-        view_options = window.icon_view_options\n-        view_options.arrangement.set(appscript.k.not_arranged)\n-        if fancy.has_key(\"icon_size\"):\n-            view_options.icon_size.set(fancy[\"icon_size\"])\n-        if bg_path is not None:\n-            view_options.background_picture.set(disk.files[os.path.basename(bg_path)])\n+        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n+        # So we now build up an AppleScript string and use the osascript command\n+        # to make the .dmg file pretty:\n+        appscript = Template( \"\"\"\n+        on run argv\n+           tell application \"Finder\"\n+             tell disk \"$disk\"\n+                   open\n+                   set current view of container window to icon view\n+                   set toolbar visible of container window to false\n+                   set statusbar visible of container window to false\n+                   set the bounds of container window to {$window_bounds}\n+                   set theViewOptions to the icon view options of container window\n+                   set arrangement of theViewOptions to not arranged\n+                   set icon size of theViewOptions to $icon_size\n+                   $background_commands\n+                   $items_positions\n+                   close -- close/reopen works around a bug...\n+                   open\n+                   update without registering applications\n+                   delay 5\n+                   eject\n+             end tell\n+           end tell\n+        end run\n+        \"\"\")\n+\n+        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n+        items_positions = []\n         if fancy.has_key(\"items_position\"):\n             for name, position in fancy[\"items_position\"].iteritems():\n-                window.items[name].position.set(position)\n-        disk.close()\n+                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n+                items_positions.append(itemscript.substitute(params))\n+\n+        params = {\n+            \"disk\" : \"Bitcoin-Qt\",\n+            \"window_bounds\" : \"300,300,800,620\",\n+            \"icon_size\" : \"96\",\n+            \"background_commands\" : \"\",\n+            \"items_positions\" : \"\\n                   \".join(items_positions)\n+            }\n+        if fancy.has_key(\"window_bounds\"):\n+            params[\"window.bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n+        if fancy.has_key(\"icon_size\"):\n+            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n         if bg_path is not None:\n-            subprocess.call([\"SetFile\", \"-a\", \"V\", bg_path])\n-#        disk.update(registering_applications=False)\n-        sleep(2)\n-        disk.eject()\n-        \n+            # Set background file, then call SetFile to make it invisible.\n+            # (note: making it invisible first makes set background picture fail)\n+            bgscript = Template(\"\"\"set background picture of theViewOptions to file \"$bgpic\"\n+                   do shell script \"SetFile -a V /Volumes/$disk/$bgpic\" \"\"\")\n+            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n+\n+        s = appscript.substitute(params)\n+        if verbose >= 2:\n+            print(\"Running AppleScript:\")\n+            print(s)\n+\n+        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n+        p.communicate(input=s)\n+        if p.returncode:\n+            print(\"Error running osascript.\")\n+\n         if verbose >= 2:\n             print \"+ Finalizing .dmg disk image +\"\n         "
      },
      {
        "sha": "94ba11b5cb1bf29e1640e106d8102a97518f9314",
        "filename": "doc/release-process.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33b377a01637d4e5cf436f45bd59dc0f1b755624/doc/release-process.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33b377a01637d4e5cf436f45bd59dc0f1b755624/doc/release-process.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.txt?ref=33b377a01637d4e5cf436f45bd59dc0f1b755624",
        "patch": "@@ -83,7 +83,8 @@\n   make\n   export QTDIR=/opt/local/share/qt4  # needed to find translations/qt_*.qm files\n   T=$(contrib/qt_translations.py $QTDIR/translations src/qt/locale)\n-  python2.7 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist\n+  export CODESIGNARGS='--sign \"Developer ID Application: BITCOIN FOUNDATION, INC., THE\"'\n+  python2.7 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -sign -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist\n \n  Build output expected:\n   Bitcoin-Qt.dmg"
      }
    ]
  },
  {
    "sha": "db8ca3fc2eff4351064c72bd312017d7bab87ea9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjhjYTNmYzJlZmY0MzUxMDY0YzcyYmQzMTIwMTdkN2JhYjg3ZWE5",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-01-16T19:36:31Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-01-18T15:08:28Z"
      },
      "message": "Code-signing certificates (no private keys) from Apple and Comodo",
      "tree": {
        "sha": "621a54921613d065d6ac4f5ad71ecf2ffc97805a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/621a54921613d065d6ac4f5ad71ecf2ffc97805a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db8ca3fc2eff4351064c72bd312017d7bab87ea9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db8ca3fc2eff4351064c72bd312017d7bab87ea9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db8ca3fc2eff4351064c72bd312017d7bab87ea9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db8ca3fc2eff4351064c72bd312017d7bab87ea9/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33b377a01637d4e5cf436f45bd59dc0f1b755624",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33b377a01637d4e5cf436f45bd59dc0f1b755624",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33b377a01637d4e5cf436f45bd59dc0f1b755624"
      }
    ],
    "stats": {
      "total": 133,
      "additions": 125,
      "deletions": 8
    },
    "files": [
      {
        "sha": "708e32065974575bbfb9703578b81338f019247c",
        "filename": "doc/release-process.txt",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db8ca3fc2eff4351064c72bd312017d7bab87ea9/doc/release-process.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db8ca3fc2eff4351064c72bd312017d7bab87ea9/doc/release-process.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.txt?ref=db8ca3fc2eff4351064c72bd312017d7bab87ea9",
        "patch": "@@ -72,23 +72,20 @@\n    rm -rf bitcoin-${VERSION}-win32\n \n * perform Mac build\n-  See this blog post for how Gavin set up his build environment to build the OSX\n-  release; note that a patched version of macdeployqt is not needed anymore, as\n-  the required functionality and fixes are implemented directly in macdeployqtplus:\n-    http://gavintech.blogspot.com/2011/11/deploying-bitcoin-qt-on-osx.html\n-  Gavin also had trouble with the macports py27-appscript package; he\n-  ended up installing a version that worked with: /usr/bin/easy_install-2.7 appscript\n+  OSX binaries are created by Gavin Andresen on a 32-bit, OSX 10.6 machine.\n \n   qmake RELEASE=1 USE_UPNP=1 USE_QRCODE=1 bitcoin-qt.pro\n   make\n   export QTDIR=/opt/local/share/qt4  # needed to find translations/qt_*.qm files\n   T=$(contrib/qt_translations.py $QTDIR/translations src/qt/locale)\n-  export CODESIGNARGS='--sign \"Developer ID Application: BITCOIN FOUNDATION, INC., THE\"'\n-  python2.7 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -sign -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist\n+  python2.7 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist\n \n  Build output expected:\n   Bitcoin-Qt.dmg\n \n+* Code-sign Windows -setup.exe (in a Windows virtual machine) and\n+  OSX Bitcoin-Qt.app (Note: only Gavin has the code-signing keys currently)\n+\n * upload builds to SourceForge\n \n * create SHA256SUMS for builds, and PGP-sign it"
      },
      {
        "sha": "beb0d7073c0d27596dce49fe58aa2b05307bea7f",
        "filename": "share/certs/BitcoinFoundation_Apple_Cert.pem",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db8ca3fc2eff4351064c72bd312017d7bab87ea9/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db8ca3fc2eff4351064c72bd312017d7bab87ea9/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Apple_Cert.pem?ref=db8ca3fc2eff4351064c72bd312017d7bab87ea9",
        "patch": "@@ -0,0 +1,37 @@\n+Bag Attributes\n+    friendlyName: Developer ID Application: BITCOIN FOUNDATION, INC., THE\n+    localKeyID: 6B 9C 6C A8 A5 73 70 70 E2 57 A3 49 D8 62 FB 97 C7 A5 5D 5E \n+subject=/UID=PBV4GLS9J4/CN=Developer ID Application: BITCOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=BITCOIN FOUNDATION, INC., THE/C=US\n+issuer=/CN=Developer ID Certification Authority/OU=Apple Certification Authority/O=Apple Inc./C=US\n+-----BEGIN CERTIFICATE-----\n+MIIFhzCCBG+gAwIBAgIIJ0r1rumyfZAwDQYJKoZIhvcNAQELBQAweTEtMCsGA1UE\n+AwwkRGV2ZWxvcGVyIElEIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSYwJAYDVQQL\n+DB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUg\n+SW5jLjELMAkGA1UEBhMCVVMwHhcNMTMwMTEwMjIzOTAxWhcNMTgwMTExMjIzOTAx\n+WjCBqDEaMBgGCgmSJomT8ixkAQEMClBCVjRHTFM5SjQxQDA+BgNVBAMMN0RldmVs\n+b3BlciBJRCBBcHBsaWNhdGlvbjogQklUQ09JTiBGT1VOREFUSU9OLCBJTkMuLCBU\n+SEUxEzARBgNVBAsMClBCVjRHTFM5SjQxJjAkBgNVBAoMHUJJVENPSU4gRk9VTkRB\n+VElPTiwgSU5DLiwgVEhFMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQAD\n+ggEPADCCAQoCggEBALTd5zURuZVoJviusr119aktXksenb9IN9vq6kBbq38vxEk7\n+9wkKMES2XfBRh0HxcEizGzhMNy5OCXuTLMaNMihYdfwYSoBoR2foEU+6kjPUnyJ4\n+dQBFLJZJr5/QeQmALmYHEgZ6lwXFD2lU8t92340zeJ4y5LZw5pcEHtH9IummYDut\n+OGCkCGXDcjL+5nHhNScJiXHhswM+62o6XXsQiP6EWbM1CsgrGTNLtaa0U/UvVDwE\n+79YKklSC5Bog2LD0jBcTuveI66mFzqu++L9X9u+ZArtebwCl7BPNQ+uboYy5uV2d\n+zf8lpNNZLfXCFjoLe9bLICKfZ7ub9V5aC8+GhckCAwEAAaOCAeEwggHdMD4GCCsG\n+AQUFBwEBBDIwMDAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuYXBwbGUuY29tL29j\n+c3AtZGV2aWQwMTAdBgNVHQ4EFgQUa5xsqKVzcHDiV6NJ2GL7l8elXV4wDAYDVR0T\n+AQH/BAIwADAfBgNVHSMEGDAWgBRXF+2iz9x8mKEQ4Py+hy0s8uMXVDCCAQ4GA1Ud\n+IASCAQUwggEBMIH+BgkqhkiG92NkBQEwgfAwKAYIKwYBBQUHAgEWHGh0dHA6Ly93\n+d3cuYXBwbGUuY29tL2FwcGxlY2EwgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug\n+b24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh\n+bmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv\n+bmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj\n+YXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wDgYDVR0PAQH/BAQDAgeAMBYGA1Ud\n+JQEB/wQMMAoGCCsGAQUFBwMDMBMGCiqGSIb3Y2QGAQ0BAf8EAgUAMA0GCSqGSIb3\n+DQEBCwUAA4IBAQAfJ0BjID/1dS2aEeVyhAzPzCBjG8vm0gDf+/qfwRn3+yWeL9vS\n+nMdbilwM48IyQWTagjGGcojbsAd/vE4N7NhQyHInoCllNoeor1I5xx+blTaGRBK+\n+dDhJbbdlGCjsLnH/BczGZi5fyEJds9lUIrp1hJidRcUKO76qb/9gc6qNZpl1vH5k\n+lDUuJYt7YhAs+L6rTXDyqcK9maeQr0gaOPsRRAQLLwiQCorPeMTUNsbVMdMwZYJs\n+R+PxiAnk+nyi7rfiFvPoASAYUuI6OzYL/Fa6QU4/gYyPgic944QYVkaQBnc0vEP1\n+nXq6LGKwgVGcqJnkr/E2kui5gJoV5C3qll3e\n+-----END CERTIFICATE-----"
      },
      {
        "sha": "dc752d455c911113eac90c4a601925ce6dd59f5f",
        "filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db8ca3fc2eff4351064c72bd312017d7bab87ea9/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db8ca3fc2eff4351064c72bd312017d7bab87ea9/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Comodo_Cert.pem?ref=db8ca3fc2eff4351064c72bd312017d7bab87ea9",
        "patch": "@@ -0,0 +1,37 @@\n+Bag Attributes\n+    friendlyName: The Bitcoin Foundation, Inc.'s COMODO CA Limited ID\n+    localKeyID: 8C 94 64 E3 B5 B0 41 89 5B 89 B0 57 CC 74 B9 44 E5 B2 92 66 \n+subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Bitcoin Foundation, Inc./CN=The Bitcoin Foundation, Inc.\n+issuer=/C=GB/ST=Greater Manchester/L=Salford/O=COMODO CA Limited/CN=COMODO Code Signing CA 2\n+-----BEGIN CERTIFICATE-----\n+MIIFeDCCBGCgAwIBAgIRAJVYMd+waOER7lUqtiz3M2IwDQYJKoZIhvcNAQEFBQAw\n+ezELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxITAfBgNV\n+BAMTGENPTU9ETyBDb2RlIFNpZ25pbmcgQ0EgMjAeFw0xMzAxMTYwMDAwMDBaFw0x\n+NDAxMTYyMzU5NTlaMIG8MQswCQYDVQQGEwJVUzETMBEGA1UEEQwKOTgxMDQtMTQ0\n+NDELMAkGA1UECAwCV0ExEDAOBgNVBAcMB1NlYXR0bGUxEjAQBgNVBAkMCVN1aXRl\n+IDMwMDEXMBUGA1UECQwONzEgQ29sdW1iaWEgU3QxJTAjBgNVBAoMHFRoZSBCaXRj\n+b2luIEZvdW5kYXRpb24sIEluYy4xJTAjBgNVBAMMHFRoZSBCaXRjb2luIEZvdW5k\n+YXRpb24sIEluYy4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQChUwLD\n+u/hu5aFZ/n11B27awONaaDrmHm0pamiWHb01yL4JmTBtaLCrSftF8RhCscQ8jpI0\n+UG1Cchmay0e3zH5o5XRs0H9C3x+SM5ozms0TWDmAYiB8aQEghsGovDk0D2nyTQeK\n+Q0xqyCh0m8ZPOnMnYrakHEmF6WvhLdJvI6Od4KIwbKxgN17cPFIfLVsZ7GrzmmbU\n+Gdi4wSQCHy5rxzvBxho8Qq/SfBl93uOMUrqOHjOUAPhNuTJG3t/MdhU8Zp24s29M\n+abHtYkT9W86hMjIiI8RTAR+WHKVglx9SB0cjDabXN8SZ3gME0+H++LyzlySHT8sI\n+ykepojZ7UBRgp9w3AgMBAAGjggGzMIIBrzAfBgNVHSMEGDAWgBQexbEsfYfaAmh8\n+JbwMB4Q/ts/e8TAdBgNVHQ4EFgQUfPf+ZyDWl/4LH0Y5BuJTelkRd/EwDgYDVR0P\n+AQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYJ\n+YIZIAYb4QgEBBAQDAgQQMEYGA1UdIAQ/MD0wOwYMKwYBBAGyMQECAQMCMCswKQYI\n+KwYBBQUHAgEWHWh0dHBzOi8vc2VjdXJlLmNvbW9kby5uZXQvQ1BTMEEGA1UdHwQ6\n+MDgwNqA0oDKGMGh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL0NPTU9ET0NvZGVTaWdu\n+aW5nQ0EyLmNybDByBggrBgEFBQcBAQRmMGQwPAYIKwYBBQUHMAKGMGh0dHA6Ly9j\n+cnQuY29tb2RvY2EuY29tL0NPTU9ET0NvZGVTaWduaW5nQ0EyLmNydDAkBggrBgEF\n+BQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29tMCgGA1UdEQQhMB+BHWxpbmRz\n+YXlAYml0Y29pbmZvdW5kYXRpb24ub3JnMA0GCSqGSIb3DQEBBQUAA4IBAQAqibjo\n+D4HG5XSIIMCmYE5RgQBSEAJfI+EZERk1G9F83ZUWr0yNRZCw4O+RaM7xQhvJhEoD\n+G2kpk/q2bNOc71/VyZ6SrE1JRVUON41/Flhz4M6cP0BclTicXvh+efVwqZhIz+ws\n+UxF2hvC/1Xx6rqI7NYAlOYXk2MSUq3HREo+gWUPKM8em4MZZV/7XCH4QbsfxOl1J\n+xS6EOQmV8hfUN4KRXI5WfGUmedBxq7dM0RSJOSQl8fq2f+JjRLfjQwQucy7LDY+y\n+pRTsL2TdQV/DuDuI3s0NHRGznQNddoX5jqpXhSQFAAdgrhN1gGkWaaTPzr9IF2TG\n+qgr6PEp9tIYC+MbM\n+-----END CERTIFICATE-----"
      },
      {
        "sha": "da299d168f0d0dc6639dbbc8d99a599e9c8d8abd",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db8ca3fc2eff4351064c72bd312017d7bab87ea9/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db8ca3fc2eff4351064c72bd312017d7bab87ea9/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=db8ca3fc2eff4351064c72bd312017d7bab87ea9",
        "patch": "@@ -0,0 +1,46 @@\n+Code-signing private key notes\n+==\n+\n+The private keys for these certificates were generated on Gavin's main work machine,\n+following the certificate authoritys' recommendations for generating certificate\n+signing requests.\n+\n+For OSX, the private key was generated by Keychain.app on Gavin's main work machine.\n+The key and certificate is in a separate, passphrase-protected keychain file that is\n+unlocked to sign the Bitcoin-Qt.app bundle.\n+\n+For Windows, the private key was generated by Firefox running on Gavin's main work machine.\n+The key and certificate were exported into a separate, passphrase-protected PKCS#12 file, and\n+then deleted from Firefox's keystore. The exported file is used to sign the Windows setup.exe.\n+\n+Threat analysis\n+--\n+\n+Gavin is a single point of failure. He could be coerced to divulge the secret signing keys,\n+allowing somebody to distribute a Bitcoin-Qt.app or bitcoin-qt-setup.exe with a valid\n+signature but containing a malicious binary.\n+\n+Or the machine Gavin uses to sign the binaries could be compromised, either remotely or\n+by breaking in to his office, allowing the attacker to get the private key files and then\n+install a keylogger to get the passphrase that protects them.\n+\n+Threat Mitigation\n+--\n+\n+\"Air gapping\" the machine used to do the signing will not work, because the signing\n+process needs to access a timestamp server over the network. And it would not\n+prevent the \"rubber hose cryptography\" threat (coercing Gavin to sign a bad binary\n+or divulge the private keys).\n+\n+Windows binaries are reproducibly 'gitian-built', and the setup.exe file created\n+by the NSIS installer system is a 7zip archive, so you could check to make sure\n+that the bitcoin-qt.exe file inside the installer had not been tampered with.\n+However, an attacker could modify the installer's code, so when the setup.exe\n+was run it compromised users' systems. A volunteer to write an auditing tool\n+that checks the setup.exe for tampering, and checks the files in it against\n+the list of gitian signatures, is needed.\n+\n+The long-term solution is something like the 'gitian downloader' system, which\n+uses signatures from multiple developers to determine whether or not a binary\n+should be trusted. However, that just pushes the problem to \"how will\n+non-technical users securely get the gitian downloader code to start?\""
      }
    ]
  }
]