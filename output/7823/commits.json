[
  {
    "sha": "3bdf9710f092c52929fffdd8da2c2b40a8261376",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmRmOTcxMGYwOTJjNTI5MjlmZmZkZDhkYTJjMmI0MGE4MjYxMzc2",
    "commit": {
      "author": {
        "name": "Joao Fonseca",
        "email": "jpdf.fonseca@gmail.com",
        "date": "2016-03-16T10:45:45Z"
      },
      "committer": {
        "name": "Joao Fonseca",
        "email": "jpdf.fonseca@gmail.com",
        "date": "2016-05-31T09:33:42Z"
      },
      "message": "Add index to wallet UTXO",
      "tree": {
        "sha": "c9ffd6134c82ed1031ff91322c2005119b407894",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9ffd6134c82ed1031ff91322c2005119b407894"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bdf9710f092c52929fffdd8da2c2b40a8261376",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bdf9710f092c52929fffdd8da2c2b40a8261376",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3bdf9710f092c52929fffdd8da2c2b40a8261376",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bdf9710f092c52929fffdd8da2c2b40a8261376/comments",
    "author": {
      "login": "joaopaulofonseca",
      "id": 16206754,
      "node_id": "MDQ6VXNlcjE2MjA2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16206754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaopaulofonseca",
      "html_url": "https://github.com/joaopaulofonseca",
      "followers_url": "https://api.github.com/users/joaopaulofonseca/followers",
      "following_url": "https://api.github.com/users/joaopaulofonseca/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaopaulofonseca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaopaulofonseca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaopaulofonseca/subscriptions",
      "organizations_url": "https://api.github.com/users/joaopaulofonseca/orgs",
      "repos_url": "https://api.github.com/users/joaopaulofonseca/repos",
      "events_url": "https://api.github.com/users/joaopaulofonseca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaopaulofonseca/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "joaopaulofonseca",
      "id": 16206754,
      "node_id": "MDQ6VXNlcjE2MjA2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16206754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaopaulofonseca",
      "html_url": "https://github.com/joaopaulofonseca",
      "followers_url": "https://api.github.com/users/joaopaulofonseca/followers",
      "following_url": "https://api.github.com/users/joaopaulofonseca/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaopaulofonseca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaopaulofonseca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaopaulofonseca/subscriptions",
      "organizations_url": "https://api.github.com/users/joaopaulofonseca/orgs",
      "repos_url": "https://api.github.com/users/joaopaulofonseca/repos",
      "events_url": "https://api.github.com/users/joaopaulofonseca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaopaulofonseca/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77b637f20e8cb91cf007bf416b603ca362385cdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77b637f20e8cb91cf007bf416b603ca362385cdb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77b637f20e8cb91cf007bf416b603ca362385cdb"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 66,
      "deletions": 1
    },
    "files": [
      {
        "sha": "123eee2e216b7e0a1cc0f7957581b18d7e1ea2ef",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 1,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bdf9710f092c52929fffdd8da2c2b40a8261376/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bdf9710f092c52929fffdd8da2c2b40a8261376/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3bdf9710f092c52929fffdd8da2c2b40a8261376",
        "patch": "@@ -126,6 +126,10 @@ bool CWallet::AddKeyPubKey(const CKey& secret, const CPubKey &pubkey)\n     if (HaveWatchOnly(script))\n         RemoveWatchOnly(script);\n \n+    // Update current UTXOs to check if some of them were already being tracked\n+    // but marked as unspendable.\n+    UpdateUnspents();\n+\n     if (!fFileBacked)\n         return true;\n     if (!IsCrypted()) {\n@@ -483,9 +487,12 @@ bool CWallet::IsSpent(const uint256& hash, unsigned int n) const\n \n void CWallet::AddToSpends(const COutPoint& outpoint, const uint256& wtxid)\n {\n+    // since this output is being marked as a spent output, we remove it from the UTXO index\n+    RemoveFromUnspents(outpoint);\n+\n     mapTxSpends.insert(make_pair(outpoint, wtxid));\n \n-    pair<TxSpends::iterator, TxSpends::iterator> range;\n+    std::pair<TxSpends::iterator, TxSpends::iterator> range;\n     range = mapTxSpends.equal_range(outpoint);\n     SyncMetaData(range);\n }\n@@ -502,6 +509,47 @@ void CWallet::AddToSpends(const uint256& wtxid)\n         AddToSpends(txin.prevout, wtxid);\n }\n \n+void CWallet::AddToUnspents(const CWalletTx* wtx, bool filterIsMine)\n+{\n+    uint256 hash = wtx->GetHash();\n+\n+    for (unsigned int i = 0; i < wtx->vout.size(); ++i) {\n+        const COutPoint outpoint(hash, i);\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(outpoint);\n+\n+        // if this output wasn't already marked as spent, we add it as a new UTXO\n+        if (range.first == range.second) {\n+            isminetype ismine = IsMine(wtx->vout[i]);\n+            if (!filterIsMine || ismine) {\n+                mapTxUnspents[outpoint] = std::make_pair(wtx, ismine);\n+            }\n+        }\n+    }\n+}\n+\n+void CWallet::RemoveFromUnspents(const COutPoint &outpoint)\n+{\n+    mapTxUnspents.erase(outpoint);\n+}\n+\n+void CWallet::UpdateUnspents()\n+{\n+    for (TxUnspents::iterator uit = mapTxUnspents.begin(); uit != mapTxUnspents.end();) {\n+        const COutPoint &outpoint = uit->first;\n+        const CWalletTx* wtx = (uit->second).first;\n+\n+        isminetype isMine = IsMine(wtx->vout[outpoint.n]);\n+\n+        if (isMine) {\n+            uit->second.second = isMine;\n+            uit++;\n+        } else {\n+            mapTxUnspents.erase(uit++);\n+        }\n+    }\n+}\n+\n bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n {\n     if (IsCrypted())\n@@ -627,6 +675,8 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n         wtx.BindWallet(this);\n         wtxOrdered.insert(make_pair(wtx.nOrderPos, TxPair(&wtx, (CAccountingEntry*)0)));\n         AddToSpends(hash);\n+        // Add transaction outputs to the UTXO index\n+        AddToUnspents(&wtx);\n         BOOST_FOREACH(const CTxIn& txin, wtx.vin) {\n             if (mapWallet.count(txin.prevout.hash)) {\n                 CWalletTx& prevtx = mapWallet[txin.prevout.hash];\n@@ -695,6 +745,8 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n                              wtxIn.hashBlock.ToString());\n             }\n             AddToSpends(hash);\n+            // Add transaction outputs to the UTXO index\n+            AddToUnspents(&wtx, true);\n         }\n \n         bool fUpdated = false;\n@@ -3199,6 +3251,10 @@ bool CWallet::InitLoadWallet()\n             }\n         }\n     }\n+\n+    // After the initializing is done, we update already tracked unspents\n+    walletInstance->UpdateUnspents();\n+\n     walletInstance->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", DEFAULT_WALLETBROADCAST));\n \n     pwalletMain = walletInstance;"
      },
      {
        "sha": "1df51aca3cc17c76572abc3618ad1b3b7c669013",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bdf9710f092c52929fffdd8da2c2b40a8261376/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bdf9710f092c52929fffdd8da2c2b40a8261376/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3bdf9710f092c52929fffdd8da2c2b40a8261376",
        "patch": "@@ -596,6 +596,15 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     MasterKeyMap mapMasterKeys;\n     unsigned int nMasterKeyMaxID;\n \n+    /**\n+     * Used to keep track of UTXOs\n+     */\n+    typedef std::map<COutPoint, std::pair<const CWalletTx*, isminetype> > TxUnspents;\n+    TxUnspents mapTxUnspents;\n+    void AddToUnspents(const CWalletTx *wtx, bool filterIsMine=false);\n+    void RemoveFromUnspents(const COutPoint &outpoint);\n+    void UpdateUnspents();\n+\n     CWallet()\n     {\n         SetNull();"
      }
    ]
  },
  {
    "sha": "55abe3a5c8fed33b2c02737710cbcdfd8891e5ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NWFiZTNhNWM4ZmVkMzNiMmMwMjczNzcxMGNiY2RmZDg4OTFlNWFk",
    "commit": {
      "author": {
        "name": "Joao Fonseca",
        "email": "jpdf.fonseca@gmail.com",
        "date": "2016-03-28T14:22:00Z"
      },
      "committer": {
        "name": "Joao Fonseca",
        "email": "jpdf.fonseca@gmail.com",
        "date": "2016-05-31T09:33:43Z"
      },
      "message": "Improve CWallet::AvailableCoins with UTXO index",
      "tree": {
        "sha": "0103faf51f7c2064d11b3b69661e14658007f4bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0103faf51f7c2064d11b3b69661e14658007f4bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55abe3a5c8fed33b2c02737710cbcdfd8891e5ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55abe3a5c8fed33b2c02737710cbcdfd8891e5ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55abe3a5c8fed33b2c02737710cbcdfd8891e5ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55abe3a5c8fed33b2c02737710cbcdfd8891e5ad/comments",
    "author": {
      "login": "joaopaulofonseca",
      "id": 16206754,
      "node_id": "MDQ6VXNlcjE2MjA2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16206754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaopaulofonseca",
      "html_url": "https://github.com/joaopaulofonseca",
      "followers_url": "https://api.github.com/users/joaopaulofonseca/followers",
      "following_url": "https://api.github.com/users/joaopaulofonseca/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaopaulofonseca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaopaulofonseca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaopaulofonseca/subscriptions",
      "organizations_url": "https://api.github.com/users/joaopaulofonseca/orgs",
      "repos_url": "https://api.github.com/users/joaopaulofonseca/repos",
      "events_url": "https://api.github.com/users/joaopaulofonseca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaopaulofonseca/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "joaopaulofonseca",
      "id": 16206754,
      "node_id": "MDQ6VXNlcjE2MjA2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16206754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joaopaulofonseca",
      "html_url": "https://github.com/joaopaulofonseca",
      "followers_url": "https://api.github.com/users/joaopaulofonseca/followers",
      "following_url": "https://api.github.com/users/joaopaulofonseca/following{/other_user}",
      "gists_url": "https://api.github.com/users/joaopaulofonseca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joaopaulofonseca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joaopaulofonseca/subscriptions",
      "organizations_url": "https://api.github.com/users/joaopaulofonseca/orgs",
      "repos_url": "https://api.github.com/users/joaopaulofonseca/repos",
      "events_url": "https://api.github.com/users/joaopaulofonseca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joaopaulofonseca/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3bdf9710f092c52929fffdd8da2c2b40a8261376",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bdf9710f092c52929fffdd8da2c2b40a8261376",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3bdf9710f092c52929fffdd8da2c2b40a8261376"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 34,
      "deletions": 20
    },
    "files": [
      {
        "sha": "dc9b88c95952bd53b59e9a4fe5913b65b781b1b4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 20,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55abe3a5c8fed33b2c02737710cbcdfd8891e5ad/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55abe3a5c8fed33b2c02737710cbcdfd8891e5ad/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=55abe3a5c8fed33b2c02737710cbcdfd8891e5ad",
        "patch": "@@ -1713,39 +1713,53 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const\n \n     {\n         LOCK2(cs_main, cs_wallet);\n-        for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n-        {\n-            const uint256& wtxid = it->first;\n-            const CWalletTx* pcoin = &(*it).second;\n \n-            if (!CheckFinalTx(*pcoin))\n+        std::set<const CWalletTx*> rejectedCoins;\n+        for (TxUnspents::const_iterator uit = mapTxUnspents.begin(); uit != mapTxUnspents.end(); ++uit) {\n+            const COutPoint& outpoint = uit->first;\n+            const uint256& wtxid = outpoint.hash;\n+            const CWalletTx* pcoin = (uit->second).first;\n+\n+            if (!(pcoin->vout[outpoint.n].nValue > 0 || fIncludeZeroValue))\n                 continue;\n \n-            if (fOnlyConfirmed && !pcoin->IsTrusted())\n+            if (IsLockedCoin(wtxid, outpoint.n))\n                 continue;\n \n-            if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n+            if (rejectedCoins.find(pcoin) != rejectedCoins.end())\n                 continue;\n \n-            int nDepth = pcoin->GetDepthInMainChain();\n-            if (nDepth < 0)\n+            if (!CheckFinalTx(*pcoin)) {\n+                rejectedCoins.insert(pcoin);\n                 continue;\n+            }\n+\n+            if (fOnlyConfirmed && !pcoin->IsTrusted()) {\n+                rejectedCoins.insert(pcoin);\n+                continue;\n+            }\n+\n+            if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0) {\n+                rejectedCoins.insert(pcoin);\n+                continue;\n+            }\n+\n+            int nDepth = pcoin->GetDepthInMainChain();\n \n             // We should not consider coins which aren't at least in our mempool\n             // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-            if (nDepth == 0 && !pcoin->InMempool())\n+            if (nDepth < 0 || (nDepth == 0 && !pcoin->InMempool())) {\n+                rejectedCoins.insert(pcoin);\n                 continue;\n-\n-            for (unsigned int i = 0; i < pcoin->vout.size(); i++) {\n-                isminetype mine = IsMine(pcoin->vout[i]);\n-                if (!(IsSpent(wtxid, i)) && mine != ISMINE_NO &&\n-                    !IsLockedCoin((*it).first, i) && (pcoin->vout[i].nValue > 0 || fIncludeZeroValue) &&\n-                    (!coinControl || !coinControl->HasSelected() || coinControl->fAllowOtherInputs || coinControl->IsSelected(COutPoint((*it).first, i))))\n-                        vCoins.push_back(COutput(pcoin, i, nDepth,\n-                                                 ((mine & ISMINE_SPENDABLE) != ISMINE_NO) ||\n-                                                  (coinControl && coinControl->fAllowWatchOnly && (mine & ISMINE_WATCH_SOLVABLE) != ISMINE_NO),\n-                                                 (mine & (ISMINE_SPENDABLE | ISMINE_WATCH_SOLVABLE)) != ISMINE_NO));\n             }\n+\n+            if (coinControl && coinControl->HasSelected() && !coinControl->fAllowOtherInputs && !coinControl->IsSelected(outpoint))\n+                continue;\n+\n+            isminetype mine = (uit->second).second;\n+            vCoins.push_back(COutput(pcoin, outpoint.n, nDepth,\n+                                     ((mine & ISMINE_SPENDABLE) != ISMINE_NO) ||\n+                                     (coinControl && coinControl->fAllowWatchOnly && (mine & ISMINE_WATCH_SOLVABLE) != ISMINE_NO), (mine & (ISMINE_SPENDABLE | ISMINE_WATCH_SOLVABLE)) != ISMINE_NO));\n         }\n     }\n }"
      }
    ]
  }
]