[
  {
    "sha": "2773b97e25be4654653b13eef625647cd57d82a0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzczYjk3ZTI1YmU0NjU0NjUzYjEzZWVmNjI1NjQ3Y2Q1N2Q4MmEw",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2016-11-07T19:03:42Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2020-02-19T19:27:32Z"
      },
      "message": "9102: Really don't validate genesis block",
      "tree": {
        "sha": "7dcb6960bfb008baddf82a7b641bce44e20eb2e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7dcb6960bfb008baddf82a7b641bce44e20eb2e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2773b97e25be4654653b13eef625647cd57d82a0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl5NjCQACgkQiGbBjqHJ\nRKKfxA//bEToDy60QRJfOO6sXfNXBHlf03sWDkZNdsFjMSxZqlE/qle326pgcZ2u\nkPmDDxq9obEHWQxJXtEvhlcZlE0aYbuoyvVpvJQy06xseg0AAkWLkM9XQ9PpJPaR\nyyRvga+sxRW1FPXx6ZXh1w4cDQmwdcBUzBbWL08P+rZbEiprWtBM4YiAaw5NUlM6\ne3j/thaoK7QbECUpXYtXWneyKn9JURErOz5fT88zzIGdatW2tDo8M5Km0iGiP0I/\nyjel4yMrDX+dfeUr/UOLOCC8RoeuJZlGiZdITvrgQk5cnt7/YFTcOO3lrRB4hEdA\nZW2Xh5mG+XcoRjKYMD4vlBbGrjf0iOlyLl+yI9hIgXn6z8jmQBoI8K9k0PROrZlz\nNK7B2CeXiViee0zOv+TXHISUrQP7S81L7ewli7FjwitgrtYuNLaMtRpepcGzxbU/\nQh8clcNnZSKcb6JYcwLCC3XrEXCzWjDvAg9Mmud6CJPk8MwzQ8T22SqTQdw7Kjdm\nfyMAkWkC3dwn2bPoL1W9HdNJalcm9Bu+8JrPfPXS56zoK41sYeqx+P9vPqWuIhpE\nb71gW5g7IjOt7KIMEeKaBYxCKmzhJuaNTTHQoQEc+1Xr832hb0J1jFbhhUYqreXU\nSXcFCNiAXRn1DpyvTtqjmow7/0Cayz+8Y2dvun4QsBl6ygIZHlw=\n=l94q\n-----END PGP SIGNATURE-----",
        "payload": "tree 7dcb6960bfb008baddf82a7b641bce44e20eb2e7\nparent eddcbfb109e592fdf39ea2c38c4d7ba183de3e34\nauthor Gregory Sanders <gsanders87@gmail.com> 1478545422 -0500\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1582140452 +0100\n\n9102: Really don't validate genesis block\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2773b97e25be4654653b13eef625647cd57d82a0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2773b97e25be4654653b13eef625647cd57d82a0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2773b97e25be4654653b13eef625647cd57d82a0/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eddcbfb109e592fdf39ea2c38c4d7ba183de3e34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eddcbfb109e592fdf39ea2c38c4d7ba183de3e34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eddcbfb109e592fdf39ea2c38c4d7ba183de3e34"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 24,
      "deletions": 18
    },
    "files": [
      {
        "sha": "364a9f3ee5fd4690bdf2ba88cfab6902177283bc",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2773b97e25be4654653b13eef625647cd57d82a0/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2773b97e25be4654653b13eef625647cd57d82a0/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=2773b97e25be4654653b13eef625647cd57d82a0",
        "patch": "@@ -275,9 +275,11 @@ bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams,\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, consensusParams))\n-                    return error(\"%s: CheckProofOfWork failed: %s\", __func__, pindexNew->ToString());\n-\n+                const uint256 block_hash = pindexNew->GetBlockHash();\n+                if (!CheckProofOfWork(block_hash, pindexNew->nBits, consensusParams) &&\n+                    block_hash != consensusParams.hashGenesisBlock) {\n+                    return error(\"%s: CheckProofOfWork: %s, %s\", __func__, block_hash.ToString(), pindexNew->ToString());\n+                }\n                 pcursor->Next();\n             } else {\n                 return error(\"%s: failed to read value\", __func__);"
      },
      {
        "sha": "de3298091b1f7759315c1eb0412db30fa68360c0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2773b97e25be4654653b13eef625647cd57d82a0/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2773b97e25be4654653b13eef625647cd57d82a0/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=2773b97e25be4654653b13eef625647cd57d82a0",
        "patch": "@@ -1149,8 +1149,11 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     }\n \n     // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n+    const uint256 block_hash = block.GetHash();\n+    if (!CheckProofOfWork(block_hash, block.nBits, consensusParams) &&\n+        block_hash != consensusParams.hashGenesisBlock) {\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n+    }\n \n     return true;\n }\n@@ -1901,6 +1904,18 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n     assert(*pindex->phashBlock == block.GetHash());\n     int64_t nTimeStart = GetTimeMicros();\n \n+    // verify that the view's current state corresponds to the previous block\n+    const uint256 hashPrevBlock = pindex->pprev == nullptr ? uint256() : pindex->pprev->GetBlockHash();\n+    assert(hashPrevBlock == view.GetBestBlock());\n+\n+    // Special case for the genesis block, skipping connection of its transactions\n+    // (its coinbase is unspendable)\n+    if (block.GetHash() == chainparams.GetConsensus().hashGenesisBlock) {\n+        if (!fJustCheck)\n+            view.SetBestBlock(pindex->GetBlockHash());\n+        return true;\n+    }\n+\n     // Check it again in case a previous version let a bad block in\n     // NOTE: We don't currently (re-)invoke ContextualCheckBlock() or\n     // ContextualCheckBlockHeader() here. This means that if we add a new\n@@ -1924,18 +1939,6 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         return error(\"%s: Consensus::CheckBlock: %s\", __func__, FormatStateMessage(state));\n     }\n \n-    // verify that the view's current state corresponds to the previous block\n-    uint256 hashPrevBlock = pindex->pprev == nullptr ? uint256() : pindex->pprev->GetBlockHash();\n-    assert(hashPrevBlock == view.GetBestBlock());\n-\n-    // Special case for the genesis block, skipping connection of its transactions\n-    // (its coinbase is unspendable)\n-    if (block.GetHash() == chainparams.GetConsensus().hashGenesisBlock) {\n-        if (!fJustCheck)\n-            view.SetBestBlock(pindex->GetBlockHash());\n-        return true;\n-    }\n-\n     nBlocksTotal++;\n \n     bool fScriptChecks = true;\n@@ -3760,8 +3763,9 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n         if (pindex->nChainWork < nMinimumChainWork) return true;\n     }\n \n-    if (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n-        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n+    if ((!CheckBlock(block, state, chainparams.GetConsensus()) ||\n+        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev))\n+        && chainparams.GetConsensus().hashGenesisBlock != block.GetHash()) {\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             setDirtyBlockIndex.insert(pindex);"
      }
    ]
  },
  {
    "sha": "fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmI2Y2UzYmM0NzI4YmQ1M2Q5YWQ3YTUzYWIwY2JlZDAyNTljZGNk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2018-12-20T19:39:38Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2020-02-19T19:34:11Z"
      },
      "message": "Config: Allow any chain/section name",
      "tree": {
        "sha": "5b5d650fe71050aeb5c7fab79dbf28357aa95837",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b5d650fe71050aeb5c7fab79dbf28357aa95837"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl5NjbMACgkQiGbBjqHJ\nRKLG3xAAm7c4ms5I+HJeHjT4PK00FW4ipUR+J1VBUpdwa8w3FF1ihQekfFoG7Oyn\nWoMvBuQUCdjjvEwCXRXVf8DWpFIarW5De8jOxyT8e45nKYnBzAYs3fHYPl8gSFue\nAGpWbfZsy4TGSB55AP/D8CZb8ut9teTEAk/5xHQfFWMmTnDORQIAX9ZSbqSJZMKW\ncV3r2uCiGExtjr5XGZFfFeEjT/Z6YDrIh2uy/hY3sgYzfrlTU+JSj4SFBxGa4uN1\nnwoyrROQYn+T2CttzM+YqYGGBDG8cZFlFszPSRFzVK5Y6lIQQli06D9b1QeZl7Oj\nifeVlWFNTYtzCn9H5wrBRqjm19MltZyg52P7IDU0hzohp/EORWfOmMlo0wWOif0d\nb/4JOf0nTcQ+jD75OHlik/f+2ukrhGKKlaecV/jRksvCRLoeZFSBIvT550V/wk/h\nSeyVA+tml9KbYg7wpKWDVEgSgf7ysBFkYs/PuCj62F9AjinhXZzCD81XsrPWCAYR\nzsvDrv8cDG3yhzjXAVg+JJ5DldC/9rgckCl63dUz1mWrxTTAtgpQXx31NG0fZ8mL\nUAyRA/EyLRpaPk1o1g1LwQi/Mknv8uuQZQ6T0ftTf6kUeFn10zgScKcTCUAEKYOJ\nrWvkKnrQlO+OaxjFGZhZwskMuKIQuxpK4Wh87mZ0QAxKP3Kvov4=\n=2QwO\n-----END PGP SIGNATURE-----",
        "payload": "tree 5b5d650fe71050aeb5c7fab79dbf28357aa95837\nparent 2773b97e25be4654653b13eef625647cd57d82a0\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1545334778 +0100\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1582140851 +0100\n\nConfig: Allow any chain/section name\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2773b97e25be4654653b13eef625647cd57d82a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2773b97e25be4654653b13eef625647cd57d82a0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2773b97e25be4654653b13eef625647cd57d82a0"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 0,
      "deletions": 38
    },
    "files": [
      {
        "sha": "d3475de5fb65376e6e8067efaebd7ffc558c3faf",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
        "patch": "@@ -933,11 +933,6 @@ bool AppInitParameterInteraction()\n         return InitError(strprintf(_(\"Config setting for %s only applied on %s network when in [%s] section.\").translated, arg, network, network));\n     }\n \n-    // Warn if unrecognized section name are present in the config file.\n-    for (const auto& section : gArgs.GetUnrecognizedSections()) {\n-        InitWarning(strprintf(\"%s:%i \" + _(\"Section [%s] is not recognized.\").translated, section.m_file, section.m_line, section.m_name));\n-    }\n-\n     if (!fs::is_directory(GetBlocksDir())) {\n         return InitError(strprintf(_(\"Specified blocks directory \\\"%s\\\" does not exist.\").translated, gArgs.GetArg(\"-blocksdir\", \"\")));\n     }"
      },
      {
        "sha": "ba97e07ed2886e4e3d53c0ffc3fc6c0f1257cb03",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
        "patch": "@@ -251,21 +251,6 @@ const std::set<std::string> ArgsManager::GetUnsuitableSectionOnlyArgs() const\n     return unsuitables;\n }\n \n-const std::list<SectionInfo> ArgsManager::GetUnrecognizedSections() const\n-{\n-    // Section names to be recognized in the config file.\n-    static const std::set<std::string> available_sections{\n-        CBaseChainParams::REGTEST,\n-        CBaseChainParams::TESTNET,\n-        CBaseChainParams::MAIN\n-    };\n-\n-    LOCK(cs_args);\n-    std::list<SectionInfo> unrecognized = m_config_sections;\n-    unrecognized.remove_if([](const SectionInfo& appeared){ return available_sections.find(appeared.m_name) != available_sections.end(); });\n-    return unrecognized;\n-}\n-\n void ArgsManager::SelectConfigNetwork(const std::string& network)\n {\n     LOCK(cs_args);"
      },
      {
        "sha": "74602a254adb5ef41228bb2d8696101e00848f8c",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
        "patch": "@@ -209,11 +209,6 @@ class ArgsManager\n      */\n     const std::set<std::string> GetUnsuitableSectionOnlyArgs() const;\n \n-    /**\n-     * Log warnings for unrecognized section names in the config file.\n-     */\n-    const std::list<SectionInfo> GetUnrecognizedSections() const;\n-\n     /**\n      * Return a vector of strings of the given argument\n      *"
      },
      {
        "sha": "77c95975c8034f73e43e9a1801d5de55008ebb01",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
        "patch": "@@ -62,20 +62,7 @@ def test_config_file_parser(self):\n             conf.write('server=1\\nrpcuser=someuser\\n[main]\\nrpcpassword=some#pass')\n         self.nodes[0].assert_start_raises_init_error(expected_msg='Error: Error reading configuration file: parse error on line 4, using # in rpcpassword can be ambiguous and should be avoided')\n \n-        inc_conf_file2_path = os.path.join(self.nodes[0].datadir, 'include2.conf')\n-        with open(os.path.join(self.nodes[0].datadir, 'bitcoin.conf'), 'a', encoding='utf-8') as conf:\n-            conf.write('includeconf={}\\n'.format(inc_conf_file2_path))\n-\n         with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n-            conf.write('testnot.datadir=1\\n')\n-        with open(inc_conf_file2_path, 'w', encoding='utf-8') as conf:\n-            conf.write('[testnet]\\n')\n-        self.restart_node(0)\n-        self.nodes[0].stop_node(expected_stderr='Warning: ' + inc_conf_file_path + ':1 Section [testnot] is not recognized.' + os.linesep + 'Warning: ' + inc_conf_file2_path + ':1 Section [testnet] is not recognized.')\n-\n-        with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n-            conf.write('')  # clear\n-        with open(inc_conf_file2_path, 'w', encoding='utf-8') as conf:\n             conf.write('')  # clear\n \n     def test_log_buffer(self):"
      }
    ]
  },
  {
    "sha": "41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWJmNWQ1YzVmZmNhOTFiZGU0NzEzNzkwYWQ3Y2M2MzNmNmE0NGQ1",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2019-10-05T20:33:28Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2020-02-19T19:45:08Z"
      },
      "message": "Chainparams: Test: Make is_test_chain configurable for regtest",
      "tree": {
        "sha": "ab828c2696e526a0ece0141bd72b76db9b98f000",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab828c2696e526a0ece0141bd72b76db9b98f000"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl5NkEsACgkQiGbBjqHJ\nRKJYxA//e3QJcfAe6nlHDyapHbxB+1e7TJ7W1PLOM1QaeRnyZonFRpVowFlP+zBa\nZiFKAeRXeVvwCOZQw8U9yB4B1Xpotp4Xg4dSAAwFAfLIx7oLIwjU8/Mg9+Cv7fTK\nKEVONMjfkLUT6PJ4Bm+Mmq2acQVW7lk6PhezIePCV8j/tjKXwp8rJ73TCA7FV0Hr\ngUJlDZGWxYDqqWckqZpTfYQyYjj7cMr1iXn1uHdmsoEROjO7ZV5T+p9fqtGmVyPi\nnyh3Czlt3m5HEd+CX+J1V1xcPHYqgX8fQABmVdflcLZycD6p0ukO7MXyeBLR+c6k\n3/8nZbpBA1CBsRjCk3V2V2Ph0ROsdCe1DzR2n7DiESHEBCJOQY+BRRaCVEop/V+e\naYZhHWYpgwW6DmVQLiOkMliWBoXZ9oCckUCrBcNXWbrT+sX5wcADvSkqipARNR/Z\nIkTBgwD6nU9izzr80jb0XplaevtZ5aTXSPKJWi1I7GrOivRHv7B7gOafeWZhi0a1\nwPkCIWl3BmUyN4hG21J1hClIUyGcXJmRZjWJB3yM0Hjk3fHQWElKbZoT8UyWaRYg\niq101Fv2JaubrtMhQwDZovjEjuly6qvgc4ohadzBtjUQ6ClzairsDRuNYqGY5uP2\nyS1JSePe5vb/LpK71hInPtjIquvgr2/Z6XaBsx82OUtOafsPQfs=\n=UaX3\n-----END PGP SIGNATURE-----",
        "payload": "tree ab828c2696e526a0ece0141bd72b76db9b98f000\nparent fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1570307608 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1582141508 +0100\n\nChainparams: Test: Make is_test_chain configurable for regtest\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbb6ce3bc4728bd53d9ad7a53ab0cbed0259cdcd"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b18e3716dc20a2384cdc3ab42c1c99e7c94ddbd0",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
        "patch": "@@ -291,7 +291,7 @@ class CRegTestParams : public CChainParams {\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n-        UpdateActivationParametersFromArgs(args);\n+        UpdateFromArgs(args);\n \n         genesis = CreateGenesisBlock(1296688602, 2, 0x207fffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n@@ -303,7 +303,6 @@ class CRegTestParams : public CChainParams {\n \n         fDefaultConsistencyChecks = true;\n         fRequireStandard = true;\n-        m_is_test_chain = true;\n         m_is_mockable_chain = true;\n \n         checkpointData = {\n@@ -336,6 +335,7 @@ class CRegTestParams : public CChainParams {\n         consensus.vDeployments[d].nTimeout = nTimeout;\n     }\n     void UpdateActivationParametersFromArgs(const ArgsManager& args);\n+    void UpdateFromArgs(const ArgsManager& args);\n };\n \n void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n@@ -381,6 +381,13 @@ void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n     }\n }\n \n+void CRegTestParams::UpdateFromArgs(const ArgsManager& args)\n+{\n+    UpdateActivationParametersFromArgs(args);\n+\n+    m_is_test_chain = args.GetBoolArg(\"-is_test_chain\", true);\n+}\n+\n static std::unique_ptr<const CChainParams> globalChainParams;\n \n const CChainParams &Params() {"
      },
      {
        "sha": "da2d21d65da9079630b943f7f9e61225ee7dc0b1",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
        "patch": "@@ -23,6 +23,7 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-is_test_chain\", \"Whether it's allowed to set -acceptnonstdtxn=0 for this chain or not. Default: 1 (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n }\n \n static std::unique_ptr<CBaseChainParams> globalChainBaseParams;"
      },
      {
        "sha": "15d16ef20999c539d40284a38ea12bce0c1c300e",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
        "patch": "@@ -42,9 +42,9 @@ def test_config_file_parser(self):\n             self.nodes[0].assert_start_raises_init_error(expected_msg='Error: Config setting for -wallet only applied on %s network when in [%s] section.' % (self.chain, self.chain))\n \n         with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n-            conf.write('regtest=0\\n') # mainnet\n+            conf.write('is_test_chain=0\\n') # like mainnet\n             conf.write('acceptnonstdtxn=1\\n')\n-        self.nodes[0].assert_start_raises_init_error(expected_msg='Error: acceptnonstdtxn is not currently supported for main chain')\n+        self.nodes[0].assert_start_raises_init_error(expected_msg='Error: acceptnonstdtxn is not currently supported for %s chain' % self.chain)\n \n         with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n             conf.write('nono\\n')"
      }
    ]
  },
  {
    "sha": "0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjRjMWE3YjhjZTI5MDVhYzFmMDQwMjJmYzM0ZjIyY2YxOTkwNDZh",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2019-10-05T20:37:36Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2020-02-19T19:56:18Z"
      },
      "message": "Test: select chain using -chain=regtest instead of regtest=1",
      "tree": {
        "sha": "905b3aab61313691931351b585ebf9a4fe581d9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/905b3aab61313691931351b585ebf9a4fe581d9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl5NkucACgkQiGbBjqHJ\nRKKjAxAAjXu25n7Pi8CpVzn7YIM3KTsNVjWTtqXvUJaKRaA8Y9vSspMjqskgvlpf\nVUalDK5rs7Gbhu6TVqushDvjqVsO0RT42iYC0Y+ApYebivIo6pREz551CUBv8YDB\nIfbg8z3VXHycyMCbRCaJPQuNRu3qyctVNalY7u1VGdOcl+ul6QMxx2/hwbNkTH5Q\nR8CVZlJaHyY+SVK5ERcK+bcaBF4RKpCCgLb9RESDeB9LB42G1imzs8dMWAoL52fs\n4Q1jRAppK0YfIjay0koObd39WEqc0LCXofeohNwU9KBjoGODtqN1BaVFsdBLuKe0\nC7327/W++lwYmxpza6IavvBxqS965qBnqfk1UjfZ2t7U/zOamLICbFsE7/bS3s7S\nmepA9zaPH//maiNB7a09EWAHbaQW5Dt7uaQoc8V5RbxSiw3055NFmoA6s8bimxOB\nJBONNSciVFp47FIAtQjyJJRUnypmuQE4M7c5W/TV+uRDvlTylQdbdcGbnSgrftvT\nPOn8duUu3POIrW0uF04fJ8GXzbcXe1oM5/K7xSGFidbgd+m5sFL3b85t9gniiSgx\nsIPiQ/1tXBwp3UlkSzkGLHTcSG3Cs1ysuSz3AiNyU6RX366prXkf2HanFydCJI6B\nQtiVzndAA0Mt2UO8uoVcVqseI9UisgmIqRCgORnJQ8so7Ect8a8=\n=YXvu\n-----END PGP SIGNATURE-----",
        "payload": "tree 905b3aab61313691931351b585ebf9a4fe581d9d\nparent 41bf5d5c5ffca91bde4713790ad7cc633f6a44d5\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1570307856 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1582142178 +0100\n\nTest: select chain using -chain=regtest instead of regtest=1\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41bf5d5c5ffca91bde4713790ad7cc633f6a44d5"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 7,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b2c79f684ebae2d1b3fc60a846895c126bc50e32",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
        "patch": "@@ -80,7 +80,7 @@ def test_args_log(self):\n                     'Command-line arg: rpcpassword=****',\n                     'Command-line arg: rpcuser=****',\n                     'Command-line arg: torpassword=****',\n-                    'Config file arg: %s=\"1\"' % self.chain,\n+                    'Config file arg: chain=\"%s\"' % self.chain,\n                     'Config file arg: [%s] server=\"1\"' % self.chain,\n                 ],\n                 unexpected_msgs=["
      },
      {
        "sha": "be420384d7c624674d6b38fadfe5cef1cc900aeb",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
        "patch": "@@ -301,16 +301,14 @@ def initialize_datadir(dirname, n, chain):\n     datadir = get_datadir_path(dirname, n)\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n-    # Translate chain name to config name\n+\n+    # Translate datadir name to chain bip70 name\n     if chain == 'testnet3':\n-        chain_name_conf_arg = 'testnet'\n-        chain_name_conf_section = 'test'\n-    else:\n-        chain_name_conf_arg = chain\n-        chain_name_conf_section = chain\n+        chain = 'test'\n+\n     with open(os.path.join(datadir, \"bitcoin.conf\"), 'w', encoding='utf8') as f:\n-        f.write(\"{}=1\\n\".format(chain_name_conf_arg))\n-        f.write(\"[{}]\\n\".format(chain_name_conf_section))\n+        f.write(\"chain={}\\n\".format(chain))\n+        f.write(\"[{}]\\n\".format(chain))\n         f.write(\"port=\" + str(p2p_port(n)) + \"\\n\")\n         f.write(\"rpcport=\" + str(rpc_port(n)) + \"\\n\")\n         f.write(\"fallbackfee=0.0002\\n\")"
      }
    ]
  },
  {
    "sha": "d9181a03713f25a9abc7a2bbbefd3765a88e311f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTE4MWEwMzcxM2YyNWE5YWJjN2EyYmJiZWZkMzc2NWE4OGUzMTFm",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-10-21T17:15:26Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2020-02-19T19:56:23Z"
      },
      "message": "Testchains: Qt: Introduce custom chains with different:\n\n1) genesis block hash\n2) default datadir\n3) chain name (bip70)\n\nall directly or indirectly configured with the -chain option\n\n...whose constructor reads params from regular arguments (like regtests)...\n\nQt: Add a default purple and title for unkown chains",
      "tree": {
        "sha": "10e6cbbf764718816fdefa54d334565130536d66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10e6cbbf764718816fdefa54d334565130536d66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9181a03713f25a9abc7a2bbbefd3765a88e311f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl5NkucACgkQiGbBjqHJ\nRKJkXw/+IPI/jOMApTRAOqHAl+Uq7tZFHWZ2XS9MWT1WGxFnNx0t3cJP+h1+hpZR\nH4BOwOKX/9U3+tAMyxVlhsrygY26go9i8vO5nvEcwpw6TRwvTRffKWEh7t9+qxlz\nEjkQW2+0xaA4DJ5w7ude8yrREkXJ4nDChm7pdwmoTVFzIBu1Hn/VawSfl1ijTeop\nUc3s0Xj+i+VUCucsoSlJoORaC+QNylV7irp2FPODEuBLn25p5SXLeWftRhVNABPq\nEyYCdVy0ucH9sJA4NSU927hF423o1YlNlOOn5CY9S+bI0aA7E31/OPLnOXfhiQWD\nWSTMi5xIZYyAlwVM/uUW/2SD7bcSyxkB9D1eTvOl9EPOqn7rv9p9pG8cj1CY6VTH\nR50PHEq1PP+rNDqpDznN7450Rdm05z5w0i29vRsNcV9zXkXrLhR7qw6wtLicZee9\nFgQFIALRRVNOLmYQp6ULX7HRZcdFLZDv5D3bdsrmGLblXlp2o3lSKX4iIsB83qMY\nWEaCfehbnkLKvAu+Z74Ez8aYlP7NV0gf73560yBd6xVw3Nqoay686gx7p6pdWovH\niAmIr6NfQ8KXtBFK4sI2VfC2/xvA7eNqjKhnYwaycB0hoLs5eGs0M0NqATvejX4O\nmZiw6hLh5hiW3Z7ie+tB1f7jXEtkJlA6WAjBK+P2xyPcOxLTY1M=\n=O5cg\n-----END PGP SIGNATURE-----",
        "payload": "tree 10e6cbbf764718816fdefa54d334565130536d66\nparent 0f4c1a7b8ce2905ac1f04022fc34f22cf199046a\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1477070126 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1582142183 +0100\n\nTestchains: Qt: Introduce custom chains with different:\n\n1) genesis block hash\n2) default datadir\n3) chain name (bip70)\n\nall directly or indirectly configured with the -chain option\n\n...whose constructor reads params from regular arguments (like regtests)...\n\nQt: Add a default purple and title for unkown chains\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9181a03713f25a9abc7a2bbbefd3765a88e311f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9181a03713f25a9abc7a2bbbefd3765a88e311f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9181a03713f25a9abc7a2bbbefd3765a88e311f/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f4c1a7b8ce2905ac1f04022fc34f22cf199046a"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 38,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b008521065643a1e662cc4637312c7a22b362528",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 4,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=d9181a03713f25a9abc7a2bbbefd3765a88e311f",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <hash.h>\n #include <tinyformat.h>\n #include <util/system.h>\n #include <util/strencodings.h>\n@@ -17,13 +18,13 @@\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/split.hpp>\n \n-static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+static CBlock CreateGenesisBlock(const CScript& coinbase_sig, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n     CMutableTransaction txNew;\n     txNew.nVersion = 1;\n     txNew.vin.resize(1);\n     txNew.vout.resize(1);\n-    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+    txNew.vin[0].scriptSig = coinbase_sig;\n     txNew.vout[0].nValue = genesisReward;\n     txNew.vout[0].scriptPubKey = genesisOutputScript;\n \n@@ -52,8 +53,10 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n     const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const CScript coinbase_sig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+\n     const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n-    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+    return CreateGenesisBlock(coinbase_sig, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n /**\n@@ -388,6 +391,30 @@ void CRegTestParams::UpdateFromArgs(const ArgsManager& args)\n     m_is_test_chain = args.GetBoolArg(\"-is_test_chain\", true);\n }\n \n+/**\n+ * Custom params for creating many chains with different genesis blocks.\n+ */\n+class CCustomParams : public CRegTestParams {\n+public:\n+    CCustomParams(const std::string& chain, ArgsManager& args) : CRegTestParams(args)\n+    {\n+        strNetworkID = chain;\n+        UpdateFromArgs(args);\n+\n+        CHashWriter h(SER_DISK, 0);\n+        h << strNetworkID;\n+        const uint256 hash = h.GetHash();\n+        CScript coinbase_sig = CScript() << std::vector<uint8_t>(hash.begin(), hash.end());\n+        genesis = CreateGenesisBlock(coinbase_sig, CScript(OP_RETURN), 1296688602, 2, 0x207fffff, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        checkpointData = {\n+            {\n+                {0, uint256S(consensus.hashGenesisBlock.GetHex())},\n+            }\n+        };\n+    }\n+};\n+\n static std::unique_ptr<const CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n@@ -397,13 +424,15 @@ const CChainParams &Params() {\n \n std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)\n {\n+    // Reserved names for non-custom chains\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n         return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));\n-    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+\n+    return std::unique_ptr<CChainParams>(new CCustomParams(chain, gArgs));\n }\n \n void SelectParams(const std::string& network)"
      },
      {
        "sha": "0701d4bfc6282e7e130ccc3ca060a8a080953f72",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=d9181a03713f25a9abc7a2bbbefd3765a88e311f",
        "patch": "@@ -17,7 +17,7 @@ const std::string CBaseChainParams::REGTEST = \"regtest\";\n \n void SetupChainParamsBaseOptions()\n {\n-    gArgs.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Allowed values: main, test, regtest\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Reserved values: main, test, regtest. With any other value, a custom chain is used. All regtest-only options are available in custom chains too.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n                  \"This is intended for regression testing tools and app development. Equivalent to -chain=regtest.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n@@ -42,8 +42,8 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n     else if (chain == CBaseChainParams::REGTEST)\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+\n+    return MakeUnique<CBaseChainParams>(chain, 18553);\n }\n \n void SelectBaseParams(const std::string& chain)"
      },
      {
        "sha": "cb1e8e54131c1efdb52a33640749f74603df1b9b",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=d9181a03713f25a9abc7a2bbbefd3765a88e311f",
        "patch": "@@ -47,6 +47,7 @@ static const int TOOLTIP_WRAP_THRESHOLD = 80;\n #define QAPP_APP_NAME_DEFAULT \"Bitcoin-Qt\"\n #define QAPP_APP_NAME_TESTNET \"Bitcoin-Qt-testnet\"\n #define QAPP_APP_NAME_REGTEST \"Bitcoin-Qt-regtest\"\n+#define QAPP_APP_NAME_CUSTOM \"Bitcoin-Qt-custom-chain\"\n \n /* One gigabyte (GB) in bytes */\n static constexpr uint64_t GB_BYTES{1000000000};"
      },
      {
        "sha": "f597c0e089c73b0c3f5912c9babdbbdd8997f685",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9181a03713f25a9abc7a2bbbefd3765a88e311f/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=d9181a03713f25a9abc7a2bbbefd3765a88e311f",
        "patch": "@@ -91,5 +91,5 @@ const NetworkStyle* NetworkStyle::instantiate(const std::string& networkId)\n                     titleAddText.c_str());\n         }\n     }\n-    return nullptr;\n+    return new NetworkStyle(strprintf(\"%s-%s\", QAPP_APP_NAME_CUSTOM, networkId).c_str(), 250, 30, titleAddText.c_str());\n }"
      }
    ]
  },
  {
    "sha": "826ad96cf9d4a62996113161274947ecc0a2447d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjZhZDk2Y2Y5ZDRhNjI5OTYxMTMxNjEyNzQ5NDdlY2MwYTI0NDdk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2019-10-03T04:49:22Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2020-02-19T20:02:08Z"
      },
      "message": "Test: Custom chain genesis' are deterministic from the name",
      "tree": {
        "sha": "ff528b0fdf6cac2ccc8a89f63e54d16baba0be19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff528b0fdf6cac2ccc8a89f63e54d16baba0be19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/826ad96cf9d4a62996113161274947ecc0a2447d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl5NlEAACgkQiGbBjqHJ\nRKKlqhAAohMUXRwYt+q6T9//+I7oVlFDnv67VcAer+1SB0IXxXZ8f2zDU05LTGms\nZHZXbWS2MkiK63jdyAKwfkrXkgWhCy9Jdnt50hDjBeDyxi888ew8AMDjjbEcDl7P\nf2X+vM6Jy2NPu4FF3+3PCCNY0Xu6NJhrO5Q0ziEVxmRlS2qzsuva4ZCCOovQH6yg\nNyEL76N0OZJ2J5txxykNftt8GDxIDa0SlI0s0zPqfmBC268oz4ZcAyx0kTTdBw/J\nSOPwEdeNoP13CTklKWYiLg7E7c7U/G8yCfMlCWuP/o46dzaKtXRlcDGXmGEN42JY\nRXZZDoJM3We34jGiAREI9XhpVtNTPbp6QbEP+1gJOqOJiAr1PFY9UJ8+fuzMi7g3\nKoApUysOdqvAY80s5rt1Xf1+9pqDe1CkaqxiEgWR39uBNSfWPTW9KwvOiPB0wxP1\ny+wKYWoXtUDdvKGuXDMGzhRXfdkRTAbCQ9t9ejII6iBMnwoQC+X95W0EJn/6fXdW\nnjC6eJ36RRBSGP0HzBNMpJ/yjFOouMSAta3/7veZKfpDV+asUMHirIG6qVmeh+XV\nQqJgiLPjCIDZLiJ+ylLu/XPMnn8bAGwlcFqtNuqRTpax59V3xdjpOshWqW9+NUaL\nIfAz5BDnf9TM6ZRVFq+rhpW7yCSWejPk3YVPoF5ZdBZyuUA6cIM=\n=3GQ/\n-----END PGP SIGNATURE-----",
        "payload": "tree ff528b0fdf6cac2ccc8a89f63e54d16baba0be19\nparent d9181a03713f25a9abc7a2bbbefd3765a88e311f\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1570078162 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1582142528 +0100\n\nTest: Custom chain genesis' are deterministic from the name\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/826ad96cf9d4a62996113161274947ecc0a2447d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/826ad96cf9d4a62996113161274947ecc0a2447d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/826ad96cf9d4a62996113161274947ecc0a2447d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9181a03713f25a9abc7a2bbbefd3765a88e311f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9181a03713f25a9abc7a2bbbefd3765a88e311f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9181a03713f25a9abc7a2bbbefd3765a88e311f"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 37,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6be6fb9b027d6d976b00c9b6ec8f435792605ae5",
        "filename": "test/functional/feature_custom_chain.py",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/826ad96cf9d4a62996113161274947ecc0a2447d/test/functional/feature_custom_chain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/826ad96cf9d4a62996113161274947ecc0a2447d/test/functional/feature_custom_chain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_custom_chain.py?ref=826ad96cf9d4a62996113161274947ecc0a2447d",
        "patch": "@@ -0,0 +1,34 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test running bitcoind with multiple custom chains with different genesis blocks\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+EXPECTED_GENESIS_HASH = {\n+    'regtest': '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n+    'chain_1': '58ebd25d25b128530d4d462c65a7e679b7e053e6f25ffb8ac63bc68832fda201',\n+    'chain_2': 'e07d79a4f8f1525814e421eb71aa9527fe8a25091fe1b9c5c312939c887aadc7',\n+    'chain_3': 'de650213b96a541df3bd9ee530cc3da4e9424d3617f95e6b2a0d5452e23412b9',\n+    'chain_4': '075e818d62bbe049a715856344987294ea2b4ff636b857911966e7fc9fee637c',\n+    'chain_5': '54a435af6a093f145769b138c20d5f72b35395e7057a89d36a0b8e954031b04c',\n+}\n+\n+class CustomChainTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        assert_equal(EXPECTED_GENESIS_HASH[self.chain], self.nodes[0].getblockhash(0))\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].get_deterministic_priv_key().address)\n+        self.log.info(\"Success\")\n+\n+if __name__ == '__main__':\n+    for chain_name in EXPECTED_GENESIS_HASH.keys():\n+        CustomChainTest(chain=chain_name).main()"
      },
      {
        "sha": "097c045c3a820f84fe759e14a479fbf47ddb35ef",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/826ad96cf9d4a62996113161274947ecc0a2447d/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/826ad96cf9d4a62996113161274947ecc0a2447d/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=826ad96cf9d4a62996113161274947ecc0a2447d",
        "patch": "@@ -90,9 +90,9 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\n \n     This class also contains various public and private helper methods.\"\"\"\n \n-    def __init__(self):\n+    def __init__(self, chain='regtest'):\n         \"\"\"Sets test framework defaults. Do not override this method. Instead, override the set_test_params() method\"\"\"\n-        self.chain = 'regtest'\n+        self.chain = chain\n         self.setup_clean_chain = False\n         self.nodes = []\n         self.network_thread = None"
      },
      {
        "sha": "0dffbfd8ddc5bef9c033ee8988c4c7c54f0f69f6",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/826ad96cf9d4a62996113161274947ecc0a2447d/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/826ad96cf9d4a62996113161274947ecc0a2447d/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=826ad96cf9d4a62996113161274947ecc0a2447d",
        "patch": "@@ -213,6 +213,7 @@\n     'p2p_permissions.py',\n     'feature_blocksdir.py',\n     'feature_config_args.py',\n+    'feature_custom_chain.py',\n     'rpc_getaddressinfo_labels_purpose_deprecation.py',\n     'rpc_getaddressinfo_label_deprecation.py',\n     'rpc_help.py',"
      }
    ]
  }
]