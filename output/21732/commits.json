[
  {
    "sha": "a67b54855b294802d52f09fa60d3f63550cbada7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjdiNTQ4NTViMjk0ODAyZDUyZjA5ZmE2MGQzZjYzNTUwY2JhZGE3",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-18T22:56:12Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-19T10:11:38Z"
      },
      "message": "Move common global init code to init/common",
      "tree": {
        "sha": "d8a205566e506d7c18f77485a7ceaca3f942fd27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8a205566e506d7c18f77485a7ceaca3f942fd27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a67b54855b294802d52f09fa60d3f63550cbada7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a67b54855b294802d52f09fa60d3f63550cbada7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a67b54855b294802d52f09fa60d3f63550cbada7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a67b54855b294802d52f09fa60d3f63550cbada7/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13d27b452d4b60010c54d4f80757dea9805076be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13d27b452d4b60010c54d4f80757dea9805076be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13d27b452d4b60010c54d4f80757dea9805076be"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 51,
      "deletions": 11
    },
    "files": [
      {
        "sha": "d2f643c03a9e35ffeb68de6b58968e9ec6b3598c",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a67b54855b294802d52f09fa60d3f63550cbada7/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a67b54855b294802d52f09fa60d3f63550cbada7/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a67b54855b294802d52f09fa60d3f63550cbada7",
        "patch": "@@ -156,6 +156,7 @@ BITCOIN_CORE_H = \\\n   index/txindex.h \\\n   indirectmap.h \\\n   init.h \\\n+  init/common.h \\\n   interfaces/chain.h \\\n   interfaces/handler.h \\\n   interfaces/node.h \\\n@@ -520,6 +521,7 @@ libbitcoin_common_a_SOURCES = \\\n   core_read.cpp \\\n   core_write.cpp \\\n   external_signer.cpp \\\n+  init/common.cpp \\\n   key.cpp \\\n   key_io.cpp \\\n   merkleblock.cpp \\"
      },
      {
        "sha": "4298494916baaa608cdd4747ca326899153dc2b1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a67b54855b294802d52f09fa60d3f63550cbada7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a67b54855b294802d52f09fa60d3f63550cbada7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a67b54855b294802d52f09fa60d3f63550cbada7",
        "patch": "@@ -22,9 +22,9 @@\n #include <httpserver.h>\n #include <index/blockfilterindex.h>\n #include <index/txindex.h>\n+#include <init/common.h>\n #include <interfaces/chain.h>\n #include <interfaces/node.h>\n-#include <key.h>\n #include <mapport.h>\n #include <miner.h>\n #include <net.h>\n@@ -151,8 +151,6 @@ static fs::path GetPidFile(const ArgsManager& args)\n // shutdown thing.\n //\n \n-static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n-\n void Interrupt(NodeContext& node)\n {\n     InterruptHTTPServer();\n@@ -286,8 +284,7 @@ void Shutdown(NodeContext& node)\n     node.chain_clients.clear();\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n-    globalVerifyHandle.reset();\n-    ECC_Stop();\n+    init::UnsetGlobals();\n     node.mempool.reset();\n     node.fee_estimator.reset();\n     node.chainman = nullptr;\n@@ -1148,12 +1145,7 @@ bool AppInitSanityChecks()\n {\n     // ********************************************************* Step 4: sanity checks\n \n-    // Initialize elliptic curve code\n-    std::string sha256_algo = SHA256AutoDetect();\n-    LogPrintf(\"Using the '%s' SHA256 implementation\\n\", sha256_algo);\n-    RandomInit();\n-    ECC_Start();\n-    globalVerifyHandle.reset(new ECCVerifyHandle());\n+    init::SetGlobals();\n \n     // Sanity check\n     if (!InitSanityCheck())"
      },
      {
        "sha": "cb247080317355b9f68d4e37ffca90f25909431f",
        "filename": "src/init/common.cpp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a67b54855b294802d52f09fa60d3f63550cbada7/src/init/common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a67b54855b294802d52f09fa60d3f63550cbada7/src/init/common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.cpp?ref=a67b54855b294802d52f09fa60d3f63550cbada7",
        "patch": "@@ -0,0 +1,30 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/sha256.h>\n+#include <key.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <random.h>\n+\n+#include <memory>\n+\n+static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n+\n+namespace init {\n+void SetGlobals()\n+{\n+    std::string sha256_algo = SHA256AutoDetect();\n+    LogPrintf(\"Using the '%s' SHA256 implementation\\n\", sha256_algo);\n+    RandomInit();\n+    ECC_Start();\n+    globalVerifyHandle.reset(new ECCVerifyHandle());\n+}\n+\n+void UnsetGlobals()\n+{\n+    globalVerifyHandle.reset();\n+    ECC_Stop();\n+}\n+} // namespace init"
      },
      {
        "sha": "b201232bfc3976bf79197452e44d0a4a0bfe6ab5",
        "filename": "src/init/common.h",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a67b54855b294802d52f09fa60d3f63550cbada7/src/init/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a67b54855b294802d52f09fa60d3f63550cbada7/src/init/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.h?ref=a67b54855b294802d52f09fa60d3f63550cbada7",
        "patch": "@@ -0,0 +1,16 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+//! @file\n+//! @brief Common init functions shared by bitcoin-node, bitcoin-wallet, etc.\n+\n+#ifndef BITCOIN_INIT_COMMON_H\n+#define BITCOIN_INIT_COMMON_H\n+\n+namespace init {\n+void SetGlobals();\n+void UnsetGlobals();\n+} // namespace init\n+\n+#endif // BITCOIN_INIT_COMMON_H"
      }
    ]
  },
  {
    "sha": "387c4cf5887bfdaf1606e1b287d901e4c449514f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODdjNGNmNTg4N2JmZGFmMTYwNmUxYjI4N2Q5MDFlNGM0NDk1MTRm",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-18T22:58:43Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-19T10:11:38Z"
      },
      "message": "Move common sanity check code to init/common",
      "tree": {
        "sha": "1d3c9deafd400edec87f8db0bed3a8bf5dacfd1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d3c9deafd400edec87f8db0bed3a8bf5dacfd1e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/387c4cf5887bfdaf1606e1b287d901e4c449514f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/387c4cf5887bfdaf1606e1b287d901e4c449514f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/387c4cf5887bfdaf1606e1b287d901e4c449514f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/387c4cf5887bfdaf1606e1b287d901e4c449514f/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a67b54855b294802d52f09fa60d3f63550cbada7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a67b54855b294802d52f09fa60d3f63550cbada7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a67b54855b294802d52f09fa60d3f63550cbada7"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 31,
      "deletions": 26
    },
    "files": [
      {
        "sha": "05466248b1520af62ca5653ec04622339d7f644f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 26,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/387c4cf5887bfdaf1606e1b287d901e4c449514f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/387c4cf5887bfdaf1606e1b287d901e4c449514f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=387c4cf5887bfdaf1606e1b287d901e4c449514f",
        "patch": "@@ -672,30 +672,6 @@ static void StartupNotify(const ArgsManager& args)\n }\n #endif\n \n-/** Sanity checks\n- *  Ensure that Bitcoin is running in a usable environment with all\n- *  necessary library support.\n- */\n-static bool InitSanityCheck()\n-{\n-    if (!ECC_InitSanityCheck()) {\n-        return InitError(Untranslated(\"Elliptic curve cryptography sanity check failure. Aborting.\"));\n-    }\n-\n-    if (!glibcxx_sanity_test())\n-        return false;\n-\n-    if (!Random_SanityCheck()) {\n-        return InitError(Untranslated(\"OS cryptographic RNG sanity check failure. Aborting.\"));\n-    }\n-\n-    if (!ChronoSanityCheck()) {\n-        return InitError(Untranslated(\"Clock epoch mismatch. Aborting.\"));\n-    }\n-\n-    return true;\n-}\n-\n static bool AppInitServers(NodeContext& node)\n {\n     const ArgsManager& args = *Assert(node.args);\n@@ -1147,9 +1123,9 @@ bool AppInitSanityChecks()\n \n     init::SetGlobals();\n \n-    // Sanity check\n-    if (!InitSanityCheck())\n+    if (!init::SanityChecks()) {\n         return InitError(strprintf(_(\"Initialization sanity check failed. %s is shutting down.\"), PACKAGE_NAME));\n+    }\n \n     // Probe the data directory lock to give an early error message, if possible\n     // We cannot hold the data directory lock here, as the forking for daemon() hasn't yet happened,"
      },
      {
        "sha": "54c3fe3a2ea50ff63ccf81bb5af83689ee761ffc",
        "filename": "src/init/common.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/387c4cf5887bfdaf1606e1b287d901e4c449514f/src/init/common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/387c4cf5887bfdaf1606e1b287d901e4c449514f/src/init/common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.cpp?ref=387c4cf5887bfdaf1606e1b287d901e4c449514f",
        "patch": "@@ -2,11 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <compat/sanity.h>\n #include <crypto/sha256.h>\n #include <key.h>\n #include <logging.h>\n+#include <node/ui_interface.h>\n #include <pubkey.h>\n #include <random.h>\n+#include <util/time.h>\n+#include <util/translation.h>\n \n #include <memory>\n \n@@ -27,4 +31,24 @@ void UnsetGlobals()\n     globalVerifyHandle.reset();\n     ECC_Stop();\n }\n+\n+bool SanityChecks()\n+{\n+    if (!ECC_InitSanityCheck()) {\n+        return InitError(Untranslated(\"Elliptic curve cryptography sanity check failure. Aborting.\"));\n+    }\n+\n+    if (!glibcxx_sanity_test())\n+        return false;\n+\n+    if (!Random_SanityCheck()) {\n+        return InitError(Untranslated(\"OS cryptographic RNG sanity check failure. Aborting.\"));\n+    }\n+\n+    if (!ChronoSanityCheck()) {\n+        return InitError(Untranslated(\"Clock epoch mismatch. Aborting.\"));\n+    }\n+\n+    return true;\n+}\n } // namespace init"
      },
      {
        "sha": "64a36373703b7f9d0fa5ec0990b5116de056e74d",
        "filename": "src/init/common.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/387c4cf5887bfdaf1606e1b287d901e4c449514f/src/init/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/387c4cf5887bfdaf1606e1b287d901e4c449514f/src/init/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.h?ref=387c4cf5887bfdaf1606e1b287d901e4c449514f",
        "patch": "@@ -11,6 +11,11 @@\n namespace init {\n void SetGlobals();\n void UnsetGlobals();\n+/**\n+ *  Ensure a usable environment with all\n+ *  necessary library support.\n+ */\n+bool SanityChecks();\n } // namespace init\n \n #endif // BITCOIN_INIT_COMMON_H"
      }
    ]
  },
  {
    "sha": "90469c16906ab451bb1250df5e51563870a7ef3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDQ2OWMxNjkwNmFiNDUxYmIxMjUwZGY1ZTUxNTYzODcwYTdlZjNi",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-18T23:01:01Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-19T10:11:38Z"
      },
      "message": "Move common logging AddArg code to init/common",
      "tree": {
        "sha": "7535fca4609603f8b7c1c21f4c1ca44b31344fdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7535fca4609603f8b7c1c21f4c1ca44b31344fdf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90469c16906ab451bb1250df5e51563870a7ef3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90469c16906ab451bb1250df5e51563870a7ef3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/90469c16906ab451bb1250df5e51563870a7ef3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90469c16906ab451bb1250df5e51563870a7ef3b/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "387c4cf5887bfdaf1606e1b287d901e4c449514f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/387c4cf5887bfdaf1606e1b287d901e4c449514f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/387c4cf5887bfdaf1606e1b287d901e4c449514f"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 30,
      "deletions": 16
    },
    "files": [
      {
        "sha": "4e7d15401d80b4a6aea6f638d3a64e11f20f2ed7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 16,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90469c16906ab451bb1250df5e51563870a7ef3b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90469c16906ab451bb1250df5e51563870a7ef3b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=90469c16906ab451bb1250df5e51563870a7ef3b",
        "patch": "@@ -360,6 +360,8 @@ void SetupServerArgs(NodeContext& node)\n     SetupHelpOptions(argsman);\n     argsman.AddArg(\"-help-debug\", \"Print help message with debugging options and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST); // server-only for now\n \n+    init::AddLoggingArgs(argsman);\n+\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n     const auto signetBaseParams = CreateBaseChainParams(CBaseChainParams::SIGNET);\n@@ -391,7 +393,6 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-dbcache=<n>\", strprintf(\"Maximum database cache size <n> MiB (%d to %d, default: %d). In addition, unused mempool memory is shared for this cache (see -maxmempool).\", nMinDbCache, nMaxDbCache, nDefaultDbCache), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (-nodebuglogfile to disable; default: %s)\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-loadblock=<file>\", \"Imports blocks from external file on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -519,25 +520,10 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-addrmantest\", \"Allows to test address relay on localhost\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-capturemessages\", \"Capture all P2P messages to disk\", ArgsManager::ALLOW_BOOL | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-debug=<category>\", \"Output debugging information (default: -nodebug, supplying <category> is optional). \"\n-        \"If <category> is not supplied or if <category> = 1, output all debugging information. <category> can be: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories.\",\n-        ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-debugexclude=<category>\", strprintf(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\"), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-#ifdef HAVE_THREAD_LOCAL\n-    argsman.AddArg(\"-logthreadnames\", strprintf(\"Prepend debug output with name of the originating thread (only available on platforms supporting thread_local) (default: %u)\", DEFAULT_LOGTHREADNAMES), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-#else\n-    hidden_args.emplace_back(\"-logthreadnames\");\n-#endif\n-    argsman.AddArg(\"-logsourcelocations\", strprintf(\"Prepend debug output with name of the originating source location (source file, line number and function name) (default: %u)\", DEFAULT_LOGSOURCELOCATIONS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-mocktime=<n>\", \"Replace actual time with \" + UNIX_EPOCH_TIME + \" (default: 0)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-maxsigcachesize=<n>\", strprintf(\"Limit sum of signature cache and script execution cache sizes to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-maxtipage=<n>\", strprintf(\"Maximum tip age in seconds to consider node in initial block download (default: %u)\", DEFAULT_MAX_TIP_AGE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printpriority\", strprintf(\"Log transaction fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-uacomment=<cmt>\", \"Append comment to the user agent string\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n \n     SetupChainParamsBaseOptions(argsman);"
      },
      {
        "sha": "caabd5db82a66175e5aa6ae5a7ea00b1c79f5190",
        "filename": "src/init/common.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90469c16906ab451bb1250df5e51563870a7ef3b/src/init/common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90469c16906ab451bb1250df5e51563870a7ef3b/src/init/common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.cpp?ref=90469c16906ab451bb1250df5e51563870a7ef3b",
        "patch": "@@ -2,13 +2,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <compat/sanity.h>\n #include <crypto/sha256.h>\n #include <key.h>\n #include <logging.h>\n #include <node/ui_interface.h>\n #include <pubkey.h>\n #include <random.h>\n+#include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n \n@@ -51,4 +56,24 @@ bool SanityChecks()\n \n     return true;\n }\n+\n+void AddLoggingArgs(ArgsManager& argsman)\n+{\n+    argsman.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (-nodebuglogfile to disable; default: %s)\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-debug=<category>\", \"Output debugging information (default: -nodebug, supplying <category> is optional). \"\n+        \"If <category> is not supplied or if <category> = 1, output all debugging information. <category> can be: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories.\",\n+        ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-debugexclude=<category>\", strprintf(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\"), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+#ifdef HAVE_THREAD_LOCAL\n+    argsman.AddArg(\"-logthreadnames\", strprintf(\"Prepend debug output with name of the originating thread (only available on platforms supporting thread_local) (default: %u)\", DEFAULT_LOGTHREADNAMES), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+#else\n+    argsman.AddHiddenArgs({\"-logthreadnames\"});\n+#endif\n+    argsman.AddArg(\"-logsourcelocations\", strprintf(\"Prepend debug output with name of the originating source location (source file, line number and function name) (default: %u)\", DEFAULT_LOGSOURCELOCATIONS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+}\n } // namespace init"
      },
      {
        "sha": "fce6e679c2c3ab93aa2dd987f8ba57266746dd75",
        "filename": "src/init/common.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90469c16906ab451bb1250df5e51563870a7ef3b/src/init/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90469c16906ab451bb1250df5e51563870a7ef3b/src/init/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.h?ref=90469c16906ab451bb1250df5e51563870a7ef3b",
        "patch": "@@ -8,6 +8,8 @@\n #ifndef BITCOIN_INIT_COMMON_H\n #define BITCOIN_INIT_COMMON_H\n \n+class ArgsManager;\n+\n namespace init {\n void SetGlobals();\n void UnsetGlobals();\n@@ -16,6 +18,7 @@ void UnsetGlobals();\n  *  necessary library support.\n  */\n bool SanityChecks();\n+void AddLoggingArgs(ArgsManager& args);\n } // namespace init\n \n #endif // BITCOIN_INIT_COMMON_H"
      }
    ]
  },
  {
    "sha": "1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmI3ZmNmYTUyNTY5YTY1MmQzZWE1NWMyMTBiNzI1ZTYwYjdkODZm",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-18T23:03:26Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-19T10:11:38Z"
      },
      "message": "Move common logging GetArgs code to init/common",
      "tree": {
        "sha": "bffcce203df55bd0973e7222cdf673471327d78a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bffcce203df55bd0973e7222cdf673471327d78a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb7fcfa52569a652d3ea55c210b725e60b7d86f/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90469c16906ab451bb1250df5e51563870a7ef3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90469c16906ab451bb1250df5e51563870a7ef3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90469c16906ab451bb1250df5e51563870a7ef3b"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 43,
      "deletions": 31
    },
    "files": [
      {
        "sha": "5708588e50d6f5bb91ee58a72b98ff01574e3e8f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 31,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb7fcfa52569a652d3ea55c210b725e60b7d86f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb7fcfa52569a652d3ea55c210b725e60b7d86f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
        "patch": "@@ -755,17 +755,7 @@ void InitParameterInteraction(ArgsManager& args)\n  */\n void InitLogging(const ArgsManager& args)\n {\n-    LogInstance().m_print_to_file = !args.IsArgNegated(\"-debuglogfile\");\n-    LogInstance().m_file_path = AbsPathForConfigVal(args.GetArg(\"-debuglogfile\", DEFAULT_DEBUGLOGFILE));\n-    LogInstance().m_print_to_console = args.GetBoolArg(\"-printtoconsole\", !args.GetBoolArg(\"-daemon\", false));\n-    LogInstance().m_log_timestamps = args.GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n-    LogInstance().m_log_time_micros = args.GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n-#ifdef HAVE_THREAD_LOCAL\n-    LogInstance().m_log_threadnames = args.GetBoolArg(\"-logthreadnames\", DEFAULT_LOGTHREADNAMES);\n-#endif\n-    LogInstance().m_log_sourcelocations = args.GetBoolArg(\"-logsourcelocations\", DEFAULT_LOGSOURCELOCATIONS);\n-\n-    fLogIPs = args.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n+    init::SetLoggingOptions(args);\n \n     std::string version_string = FormatFullVersion();\n #ifdef DEBUG\n@@ -941,26 +931,7 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         InitWarning(strprintf(_(\"Reducing -maxconnections from %d to %d, because of system limitations.\"), nUserMaxConnections, nMaxConnections));\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n-    }\n-\n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n-        }\n-    }\n+    init::SetLoggingCategories(args);\n \n     fCheckBlockIndex = args.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = args.GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);"
      },
      {
        "sha": "d905fecdd8dc012ac05d0c76daea9d737b5674c1",
        "filename": "src/init/common.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb7fcfa52569a652d3ea55c210b725e60b7d86f/src/init/common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb7fcfa52569a652d3ea55c210b725e60b7d86f/src/init/common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.cpp?ref=1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
        "patch": "@@ -76,4 +76,43 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n }\n+\n+void SetLoggingOptions(const ArgsManager& args)\n+{\n+    LogInstance().m_print_to_file = !args.IsArgNegated(\"-debuglogfile\");\n+    LogInstance().m_file_path = AbsPathForConfigVal(args.GetArg(\"-debuglogfile\", DEFAULT_DEBUGLOGFILE));\n+    LogInstance().m_print_to_console = args.GetBoolArg(\"-printtoconsole\", !args.GetBoolArg(\"-daemon\", false));\n+    LogInstance().m_log_timestamps = args.GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n+    LogInstance().m_log_time_micros = args.GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n+#ifdef HAVE_THREAD_LOCAL\n+    LogInstance().m_log_threadnames = args.GetBoolArg(\"-logthreadnames\", DEFAULT_LOGTHREADNAMES);\n+#endif\n+    LogInstance().m_log_sourcelocations = args.GetBoolArg(\"-logsourcelocations\", DEFAULT_LOGSOURCELOCATIONS);\n+\n+    fLogIPs = args.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n+}\n+\n+void SetLoggingCategories(const ArgsManager& args)\n+{\n+    if (args.IsArgSet(\"-debug\")) {\n+        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n+        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n+\n+        if (std::none_of(categories.begin(), categories.end(),\n+            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n+            for (const auto& cat : categories) {\n+                if (!LogInstance().EnableCategory(cat)) {\n+                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n+                }\n+            }\n+        }\n+    }\n+\n+    // Now remove the logging categories which were explicitly excluded\n+    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n+        if (!LogInstance().DisableCategory(cat)) {\n+            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n+        }\n+    }\n+}\n } // namespace init"
      },
      {
        "sha": "58e33cfd1cef1910b98a403af10f4535f9a43820",
        "filename": "src/init/common.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb7fcfa52569a652d3ea55c210b725e60b7d86f/src/init/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb7fcfa52569a652d3ea55c210b725e60b7d86f/src/init/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.h?ref=1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
        "patch": "@@ -19,6 +19,8 @@ void UnsetGlobals();\n  */\n bool SanityChecks();\n void AddLoggingArgs(ArgsManager& args);\n+void SetLoggingOptions(const ArgsManager& args);\n+void SetLoggingCategories(const ArgsManager& args);\n } // namespace init\n \n #endif // BITCOIN_INIT_COMMON_H"
      }
    ]
  },
  {
    "sha": "5bed2ab42c4f1a820468f7005ce62e39001f6611",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YmVkMmFiNDJjNGYxYTgyMDQ2OGY3MDA1Y2U2MmUzOTAwMWY2NjEx",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-18T23:05:03Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-19T10:11:38Z"
      },
      "message": "Move common logging start code to init/common",
      "tree": {
        "sha": "23340ee04f41924e7dbd2fac82de58481419540d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23340ee04f41924e7dbd2fac82de58481419540d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bed2ab42c4f1a820468f7005ce62e39001f6611",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bed2ab42c4f1a820468f7005ce62e39001f6611",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5bed2ab42c4f1a820468f7005ce62e39001f6611",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bed2ab42c4f1a820468f7005ce62e39001f6611/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb7fcfa52569a652d3ea55c210b725e60b7d86f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb7fcfa52569a652d3ea55c210b725e60b7d86f"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 41,
      "deletions": 30
    },
    "files": [
      {
        "sha": "35c989d4e9aa924baee09a95268c2af0ba310388",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 30,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bed2ab42c4f1a820468f7005ce62e39001f6611/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bed2ab42c4f1a820468f7005ce62e39001f6611/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5bed2ab42c4f1a820468f7005ce62e39001f6611",
        "patch": "@@ -1122,38 +1122,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         // Detailed error printed inside CreatePidFile().\n         return false;\n     }\n-    if (LogInstance().m_print_to_file) {\n-        if (args.GetBoolArg(\"-shrinkdebugfile\", LogInstance().DefaultShrinkDebugFile())) {\n-            // Do this first since it both loads a bunch of debug.log into memory,\n-            // and because this needs to happen before any other debug.log printing\n-            LogInstance().ShrinkDebugFile();\n-        }\n-    }\n-    if (!LogInstance().StartLogging()) {\n-            return InitError(strprintf(Untranslated(\"Could not open debug log file %s\"),\n-                LogInstance().m_file_path.string()));\n-    }\n-\n-    if (!LogInstance().m_log_timestamps)\n-        LogPrintf(\"Startup time: %s\\n\", FormatISO8601DateTime(GetTime()));\n-    LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n-    LogPrintf(\"Using data directory %s\\n\", GetDataDir().string());\n-\n-    // Only log conf file usage message if conf file actually exists.\n-    fs::path config_file_path = GetConfigFile(args.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n-    if (fs::exists(config_file_path)) {\n-        LogPrintf(\"Config file: %s\\n\", config_file_path.string());\n-    } else if (args.IsArgSet(\"-conf\")) {\n-        // Warn if no conf file exists at path provided by user\n-        InitWarning(strprintf(_(\"The specified config file %s does not exist\"), config_file_path.string()));\n-    } else {\n-        // Not categorizing as \"Warning\" because it's the default behavior\n-        LogPrintf(\"Config file: %s (not found, skipping)\\n\", config_file_path.string());\n+    if (!init::StartLogging(args)) {\n+        // Detailed error printed inside StartLogging().\n+        return false;\n     }\n \n-    // Log the config arguments to debug.log\n-    args.LogArgs();\n-\n     LogPrintf(\"Using at most %i automatic connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n \n     // Warn about relative -datadir path."
      },
      {
        "sha": "35776080dcab38bb07bcc3efb345e0c7a07de72e",
        "filename": "src/init/common.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bed2ab42c4f1a820468f7005ce62e39001f6611/src/init/common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bed2ab42c4f1a820468f7005ce62e39001f6611/src/init/common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.cpp?ref=5bed2ab42c4f1a820468f7005ce62e39001f6611",
        "patch": "@@ -115,4 +115,41 @@ void SetLoggingCategories(const ArgsManager& args)\n         }\n     }\n }\n+\n+bool StartLogging(const ArgsManager& args)\n+{\n+    if (LogInstance().m_print_to_file) {\n+        if (args.GetBoolArg(\"-shrinkdebugfile\", LogInstance().DefaultShrinkDebugFile())) {\n+            // Do this first since it both loads a bunch of debug.log into memory,\n+            // and because this needs to happen before any other debug.log printing\n+            LogInstance().ShrinkDebugFile();\n+        }\n+    }\n+    if (!LogInstance().StartLogging()) {\n+            return InitError(strprintf(Untranslated(\"Could not open debug log file %s\"),\n+                LogInstance().m_file_path.string()));\n+    }\n+\n+    if (!LogInstance().m_log_timestamps)\n+        LogPrintf(\"Startup time: %s\\n\", FormatISO8601DateTime(GetTime()));\n+    LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n+    LogPrintf(\"Using data directory %s\\n\", GetDataDir().string());\n+\n+    // Only log conf file usage message if conf file actually exists.\n+    fs::path config_file_path = GetConfigFile(args.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+    if (fs::exists(config_file_path)) {\n+        LogPrintf(\"Config file: %s\\n\", config_file_path.string());\n+    } else if (args.IsArgSet(\"-conf\")) {\n+        // Warn if no conf file exists at path provided by user\n+        InitWarning(strprintf(_(\"The specified config file %s does not exist\"), config_file_path.string()));\n+    } else {\n+        // Not categorizing as \"Warning\" because it's the default behavior\n+        LogPrintf(\"Config file: %s (not found, skipping)\\n\", config_file_path.string());\n+    }\n+\n+    // Log the config arguments to debug.log\n+    args.LogArgs();\n+\n+    return true;\n+}\n } // namespace init"
      },
      {
        "sha": "91a7282d1058c1055b3092960d40a3ca2d10ce5c",
        "filename": "src/init/common.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bed2ab42c4f1a820468f7005ce62e39001f6611/src/init/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bed2ab42c4f1a820468f7005ce62e39001f6611/src/init/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.h?ref=5bed2ab42c4f1a820468f7005ce62e39001f6611",
        "patch": "@@ -21,6 +21,7 @@ bool SanityChecks();\n void AddLoggingArgs(ArgsManager& args);\n void SetLoggingOptions(const ArgsManager& args);\n void SetLoggingCategories(const ArgsManager& args);\n+bool StartLogging(const ArgsManager& args);\n } // namespace init\n \n #endif // BITCOIN_INIT_COMMON_H"
      }
    ]
  },
  {
    "sha": "615965cfd1ef1e0627d69970d99bdfedb9176833",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTU5NjVjZmQxZWYxZTA2MjdkNjk5NzBkOTliZGZlZGI5MTc2ODMz",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-18T23:07:13Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-04-19T10:11:38Z"
      },
      "message": "Move common package version code to init/common",
      "tree": {
        "sha": "49197eebf7afdb1d7a192e3b08bee414f493bc99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49197eebf7afdb1d7a192e3b08bee414f493bc99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/615965cfd1ef1e0627d69970d99bdfedb9176833",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/615965cfd1ef1e0627d69970d99bdfedb9176833",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/615965cfd1ef1e0627d69970d99bdfedb9176833",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/615965cfd1ef1e0627d69970d99bdfedb9176833/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5bed2ab42c4f1a820468f7005ce62e39001f6611",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bed2ab42c4f1a820468f7005ce62e39001f6611",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bed2ab42c4f1a820468f7005ce62e39001f6611"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4760d8c4ab08f6c077d1f0b4371e3d2fa9183ddc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/615965cfd1ef1e0627d69970d99bdfedb9176833/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/615965cfd1ef1e0627d69970d99bdfedb9176833/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=615965cfd1ef1e0627d69970d99bdfedb9176833",
        "patch": "@@ -756,14 +756,7 @@ void InitParameterInteraction(ArgsManager& args)\n void InitLogging(const ArgsManager& args)\n {\n     init::SetLoggingOptions(args);\n-\n-    std::string version_string = FormatFullVersion();\n-#ifdef DEBUG\n-    version_string += \" (debug build)\";\n-#else\n-    version_string += \" (release build)\";\n-#endif\n-    LogPrintf(PACKAGE_NAME \" version %s\\n\", version_string);\n+    init::LogPackageVersion();\n }\n \n namespace { // Variables internal to initialization process only"
      },
      {
        "sha": "79e0c9da782e09e83ea652e9f33d2a586ff9a8f1",
        "filename": "src/init/common.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/615965cfd1ef1e0627d69970d99bdfedb9176833/src/init/common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/615965cfd1ef1e0627d69970d99bdfedb9176833/src/init/common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.cpp?ref=615965cfd1ef1e0627d69970d99bdfedb9176833",
        "patch": "@@ -6,6 +6,7 @@\n #include <config/bitcoin-config.h>\n #endif\n \n+#include <clientversion.h>\n #include <compat/sanity.h>\n #include <crypto/sha256.h>\n #include <key.h>\n@@ -152,4 +153,15 @@ bool StartLogging(const ArgsManager& args)\n \n     return true;\n }\n+\n+void LogPackageVersion()\n+{\n+    std::string version_string = FormatFullVersion();\n+#ifdef DEBUG\n+    version_string += \" (debug build)\";\n+#else\n+    version_string += \" (release build)\";\n+#endif\n+    LogPrintf(PACKAGE_NAME \" version %s\\n\", version_string);\n+}\n } // namespace init"
      },
      {
        "sha": "fc4bc1b28009ee65fa95436fa13517a8551eb9a1",
        "filename": "src/init/common.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/615965cfd1ef1e0627d69970d99bdfedb9176833/src/init/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/615965cfd1ef1e0627d69970d99bdfedb9176833/src/init/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/common.h?ref=615965cfd1ef1e0627d69970d99bdfedb9176833",
        "patch": "@@ -22,6 +22,7 @@ void AddLoggingArgs(ArgsManager& args);\n void SetLoggingOptions(const ArgsManager& args);\n void SetLoggingCategories(const ArgsManager& args);\n bool StartLogging(const ArgsManager& args);\n+void LogPackageVersion();\n } // namespace init\n \n #endif // BITCOIN_INIT_COMMON_H"
      }
    ]
  }
]