[
  {
    "sha": "b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDBiZGQ2NTMyYmRiYTNkMTU3YzhhMmRkNDY2MWVlNTQwYTZmYmI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-03-14T06:22:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-03-14T06:22:59Z"
      },
      "message": "qt: Show also value for options overridden on command line\n\nCurrently only the name of the option is shown for GUI options\noverridden by command line (or configuration file). This commit\nadds the value of the options as well, which is useful for\ntroubleshooting.",
      "tree": {
        "sha": "de75cbe6c566b065f620b72cca5638fb5fe35d8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de75cbe6c566b065f620b72cca5638fb5fe35d8b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e13f57f561dcba493e569bf8fb6507383c62796",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e13f57f561dcba493e569bf8fb6507383c62796",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e13f57f561dcba493e569bf8fb6507383c62796"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 17,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b61fdd2301e97e6334083ef14377e6bcecbe86dd",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4",
        "patch": "@@ -30,6 +30,11 @@ OptionsModel::OptionsModel(QObject *parent) :\n     Init();\n }\n \n+void OptionsModel::addOverriddenOption(const std::string &option)\n+{\n+    strOverriddenByCommandLine += QString::fromStdString(option) + \"=\" + QString::fromStdString(mapArgs[option]) + \" \";\n+}\n+\n // Writes all missing QSettings with their default values\n void OptionsModel::Init()\n {\n@@ -76,52 +81,52 @@ void OptionsModel::Init()\n         settings.setValue(\"nTransactionFee\", 0);\n     nTransactionFee = settings.value(\"nTransactionFee\").toLongLong(); // if -paytxfee is set, this will be overridden later in init.cpp\n     if (mapArgs.count(\"-paytxfee\"))\n-        strOverriddenByCommandLine += \"-paytxfee \";\n+        addOverriddenOption(\"-paytxfee\");\n \n     if (!settings.contains(\"bSpendZeroConfChange\"))\n         settings.setValue(\"bSpendZeroConfChange\", true);\n     if (!SoftSetBoolArg(\"-spendzeroconfchange\", settings.value(\"bSpendZeroConfChange\").toBool()))\n-        strOverriddenByCommandLine += \"-spendzeroconfchange \";\n+        addOverriddenOption(\"-spendzeroconfchange\");\n #endif\n \n     if (!settings.contains(\"nDatabaseCache\"))\n         settings.setValue(\"nDatabaseCache\", (qint64)nDefaultDbCache);\n     if (!SoftSetArg(\"-dbcache\", settings.value(\"nDatabaseCache\").toString().toStdString()))\n-        strOverriddenByCommandLine += \"-dbcache \";\n+        addOverriddenOption(\"-dbcache\");\n \n     if (!settings.contains(\"nThreadsScriptVerif\"))\n         settings.setValue(\"nThreadsScriptVerif\", 0);\n     if (!SoftSetArg(\"-par\", settings.value(\"nThreadsScriptVerif\").toString().toStdString()))\n-        strOverriddenByCommandLine += \"-par \";\n+        addOverriddenOption(\"-par\");\n \n     // Network\n     if (!settings.contains(\"fUseUPnP\"))\n #ifdef USE_UPNP\n         settings.setValue(\"fUseUPnP\", true);\n #else\n         settings.setValue(\"fUseUPnP\", false);\n-#endif\t\n+#endif\n     if (!SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool()))\n-        strOverriddenByCommandLine += \"-upnp \";\n+        addOverriddenOption(\"-upnp\");\n \n     if (!settings.contains(\"fUseProxy\"))\n         settings.setValue(\"fUseProxy\", false);\n     if (!settings.contains(\"addrProxy\"))\n         settings.setValue(\"addrProxy\", \"127.0.0.1:9050\");\n     // Only try to set -proxy, if user has enabled fUseProxy\n     if (settings.value(\"fUseProxy\").toBool() && !SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString()))\n-        strOverriddenByCommandLine += \"-proxy \";\n+        addOverriddenOption(\"-proxy\");\n     if (!settings.contains(\"nSocksVersion\"))\n         settings.setValue(\"nSocksVersion\", 5);\n     // Only try to set -socks, if user has enabled fUseProxy\n     if (settings.value(\"fUseProxy\").toBool() && !SoftSetArg(\"-socks\", settings.value(\"nSocksVersion\").toString().toStdString()))\n-        strOverriddenByCommandLine += \"-socks \";\n+        addOverriddenOption(\"-socks\");\n \n     // Display\n     if (!settings.contains(\"language\"))\n         settings.setValue(\"language\", \"\");\n     if (!SoftSetArg(\"-lang\", settings.value(\"language\").toString().toStdString()))\n-        strOverriddenByCommandLine += \"-lang\";\n+        addOverriddenOption(\"-lang\");\n \n     language = settings.value(\"language\").toString();\n }"
      },
      {
        "sha": "ece5ef78a4d19de88bd79d260ba5d22b743d74d5",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=b40bdd6532bdba3d157c8a2dd4661ee540a6fbb4",
        "patch": "@@ -75,6 +75,9 @@ class OptionsModel : public QAbstractListModel\n     /* settings that were overriden by command-line */\n     QString strOverriddenByCommandLine;\n \n+    /// Add option to list of GUI options overridden through command line/config file\n+    void addOverriddenOption(const std::string &option);\n+\n signals:\n     void displayUnitChanged(int unit);\n     void transactionFeeChanged(qint64);"
      }
    ]
  }
]