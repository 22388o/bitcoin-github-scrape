[
  {
    "sha": "4d6cde38cefa61209d307ed8015bdd40f2695668",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDZjZGUzOGNlZmE2MTIwOWQzMDdlZDgwMTViZGQ0MGYyNjk1NjY4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-06T18:19:59Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-12T10:12:01Z"
      },
      "message": "test: refactor rpc_signrawtransaction witness script tests\n\nto see what is distinct in each test.",
      "tree": {
        "sha": "f829d1fcf293b382ef4a93aa216cb9fc67dfeb36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f829d1fcf293b382ef4a93aa216cb9fc67dfeb36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d6cde38cefa61209d307ed8015bdd40f2695668",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6S6XEACgkQT1chs9Dj\nkh1hog/9HgA3HlTJH0cqp23Fzr/u6yYumVFwamXZDmAE9/B/TdHPJx0+e643pvxV\n3U4UeYrU6viLSMYv4KjMeOWUKMp1tkx7SECsEnIcZn2iCNLsGASnDMx28/AjhMaX\n/mMQvr6uUv1tOFWeNG9xH/m0Jk5Wmg5IjODp0ujP8VZoerASqT4wJ09bCgRfHshf\nmuKlnk6YKrUtKJlLFwbCZYRd/lrxuJ54PNXSt26FHpeaLOiFJ3rUdW9AwdlYGItK\nC/DyneMNEMGsBlpMACitxO+Bf84RI3bOyuA+17+Ea6NKsqo8QQKQ/C7wsb1ypQye\n7mEjNjI8755y+X4cktGc6WWvPOOInH9HX5bRcm6U4akbYkwfXJec3q0NIVFsTAgV\nMD/ZE+bGyOLe9sIeNsPTnbwKly/OQsrB540s2dVzoMF+xgFasVSz2dfxm0NhWOqJ\nqezg5hq1coxehCI7SDBFxiS0QWzxSMNHLaJHYpue22a6rrPzO4F24tmHV5+5aP+N\nZv/TyuNCv3ItOfXb49UjvSkfa9uqfaRYEEh6QXdEGL/gHV6quvDq+l+UQvakLPie\nBf6av9KNjbHOJg2baGB9iOJ3UddVXSqpU2EDDlNZgbB+TA7tgPzxOdKQmNK2OxJ3\n7sFyl8cUV1T2hM/PQNIhvjpJ8uJ25RvXaGNph1i+uBtV/zo3Ki8=\n=fRfw\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIG0CehJHyhdI4JWhyI7Zfn1MSZm2sBMTLW91Nn7qlIqyCP/wEDSwNrr6y1S5\nA5S0Ml+KtxcI8CA+ViwvEMfjwHYsM5M+zFKz1o1yqSu7DGOZuH5Z3fyIsQjxBF6S\n6XPwCEamJ9f6vioCAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQcXtC/u5/3T4cLvlHGYpyOQjxBF6S6XPwCL+B\n87POSOW1AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHku\nY29t//AQshQREo56iJSvScOIscP/8wjwICri1s5Bv0EKwXcywFQoTzDKScsqUcSR\nsU2vuStY1MZyCPEEXpLpc/AIWfgtJaflb/4Ag9/jDS75DI4pKGh0dHBzOi8vZmlu\nbmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23wEMl69agkIZNoZ2DL+fPwEoII\n8SAKtcdMJAheIK7OD7EvtkaZnSjq9R57ZFUXaGEsToU6MAjxBF6S6XPwCFXwWYo5\n5Eb1AIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree f829d1fcf293b382ef4a93aa216cb9fc67dfeb36\nparent abc145c9a4aef8ec269b7e0a3e9403cff9970fe4\nauthor Jon Atack <jon@atack.com> 1586197199 +0200\ncommitter Jon Atack <jon@atack.com> 1586686321 +0200\n\ntest: refactor rpc_signrawtransaction witness script tests\n\nto see what is distinct in each test.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d6cde38cefa61209d307ed8015bdd40f2695668",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d6cde38cefa61209d307ed8015bdd40f2695668",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d6cde38cefa61209d307ed8015bdd40f2695668/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abc145c9a4aef8ec269b7e0a3e9403cff9970fe4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abc145c9a4aef8ec269b7e0a3e9403cff9970fe4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abc145c9a4aef8ec269b7e0a3e9403cff9970fe4"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 9,
      "deletions": 20
    },
    "files": [
      {
        "sha": "50554e19e5ca9c2801124fe6142c2e0d17676d4c",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 9,
        "deletions": 20,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d6cde38cefa61209d307ed8015bdd40f2695668/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d6cde38cefa61209d307ed8015bdd40f2695668/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=4d6cde38cefa61209d307ed8015bdd40f2695668",
        "patch": "@@ -169,29 +169,18 @@ def witness_script_test(self):\n         assert 'complete' in spending_tx_signed\n         assert_equal(spending_tx_signed['complete'], True)\n \n-        self.log.info('Try with a P2PKH script as the witnessScript')\n-        embedded_addr_info = self.nodes[1].getaddressinfo(self.nodes[1].getnewaddress('', 'legacy'))\n-        embedded_privkey = self.nodes[1].dumpprivkey(embedded_addr_info['address'])\n-        witness_script = embedded_addr_info['scriptPubKey']\n-        redeem_script = CScript([OP_0, sha256(check_script(witness_script))]).hex()\n-        addr = script_to_p2sh(redeem_script)\n-        script_pub_key = self.nodes[1].validateaddress(addr)['scriptPubKey']\n-        # Fund that address\n-        txid = self.nodes[0].sendtoaddress(addr, 10)\n-        vout = find_vout_for_address(self.nodes[0], txid, addr)\n-        self.nodes[0].generate(1)\n-        # Now create and sign a transaction spending that output on node[0], which doesn't know the scripts or keys\n-        spending_tx = self.nodes[0].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): Decimal(\"9.999\")})\n-        spending_tx_signed = self.nodes[0].signrawtransactionwithkey(spending_tx, [embedded_privkey], [{'txid': txid, 'vout': vout, 'scriptPubKey': script_pub_key, 'redeemScript': redeem_script, 'witnessScript': witness_script, 'amount': 10}])\n-        # Check the signing completed successfully\n-        assert 'complete' in spending_tx_signed\n-        assert_equal(spending_tx_signed['complete'], True)\n-        self.nodes[0].sendrawtransaction(spending_tx_signed['hex'])\n+        # Now test with P2PKH and P2PK scripts as the witnessScript\n+        for tx_type in ['P2PKH', 'P2PK']:  # these tests are order-independent\n+            self.verify_txn_with_witness_script(tx_type)\n \n-        self.log.info('Try with a P2PK script as the witnessScript')\n+    def verify_txn_with_witness_script(self, tx_type):\n+        self.log.info(\"Test with a {} script as the witnessScript\".format(tx_type))\n         embedded_addr_info = self.nodes[1].getaddressinfo(self.nodes[1].getnewaddress('', 'legacy'))\n         embedded_privkey = self.nodes[1].dumpprivkey(embedded_addr_info['address'])\n-        witness_script = CScript([hex_str_to_bytes(embedded_addr_info['pubkey']), OP_CHECKSIG]).hex()\n+        witness_script = {\n+            'P2PKH': embedded_addr_info['scriptPubKey'],\n+            'P2PK': CScript([hex_str_to_bytes(embedded_addr_info['pubkey']), OP_CHECKSIG]).hex()\n+        }.get(tx_type, \"Invalid tx_type\")\n         redeem_script = CScript([OP_0, sha256(check_script(witness_script))]).hex()\n         addr = script_to_p2sh(redeem_script)\n         script_pub_key = self.nodes[1].validateaddress(addr)['scriptPubKey']"
      }
    ]
  },
  {
    "sha": "9cdddae3b4efee071d71ba3b6629a53017332f6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2RkZGFlM2I0ZWZlZTA3MWQ3MWJhM2I2NjI5YTUzMDE3MzMyZjZm",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-06T18:25:49Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-12T10:12:03Z"
      },
      "message": "test: add rpc_signrawtransaction logging",
      "tree": {
        "sha": "80cb7e709db5e494f870f6a9dab9f69adca53c17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80cb7e709db5e494f870f6a9dab9f69adca53c17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9cdddae3b4efee071d71ba3b6629a53017332f6f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6S6XQACgkQT1chs9Dj\nkh2iDRAAmlFkKROYTPvML3oIWEVNlPLFeRWStSZWe566EvOJDwPwXYblFuw9S1wC\n5meA1tnwXyNfycWn8MsfDV46xu+8Fu469Vx5qQTv3p32gF/C15tNPtfzQJBdThpT\nACgjjXIvPhMON9gFvoTvU/f8Dz6h8P4XgAMbcVzLbT3jFIawRzDYDSqkmE7jJQ0k\nO8wX4mnKJ5gY7yWYuMop9YPhxJKpsRxgrbKyxY/kryZLWx/2aFiJtlL0XLl2nT3k\n1GyKDuUizj3iOMCoH02fLUOaZjeUD1wC/RUqxXKjOngsdQ9YFPGKhi0tS1S0NAmN\nKkZMnKkIU6N7R71qv6074r4M9U4ohmzXaq0VurLnWLiZSB/7bnumqwbHrso6YDq7\nQ+9eX+sgLY/GIVyP3gyoZJ5Ez93dfjOIZRpAh1B342omi84j8dMsZwLawgpwE0W5\n/PJxkbwvz7GHJO1zqqJ4dMVA5rCSnulTvvkIVasMvZTCZZecYv8pd0ir68aoOtJe\n+Kbskadc5bX10FcNfH5ogpU+VDGJcdz+STwYZ89jtq5ALH9qK9GTvnD5m8fA/xDQ\neb/feclVptgFPsG/GoEio/CUwrI2HO1fZNlrEi/H+e1gxNWNl/08QXUFXsyy04Zu\n4V4cb+VIk0OUqXvbkD/zh7ta6c25Me6/ds5HSfERbv2Jt40Q4IQ=\n=c0Ih\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILE+exMJXl02Qu7KkR6KUVWDMxnGQROvwElT52uql5IpCP/wECisZFAYhCji\nE/DYqSrlQaAI8SBojF/zLh9x3vtJQusEpFd527JN6hjoQLwv9io7+EuuwQjxBF6S\n6XXwCHw5fkkQfH+IAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BBt4KgXqRTMrZvjUtwZG+zTCPEEXpLpdfAI\nuZjIyr0KCq0Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4\neS5jb23/8BDojT1g4N+9pIe4eJ0hgAUUCPEEXpLpdvAIvFRJhBCN8T0Ag9/jDS75\nDI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfw\nEPXuGKQ5FmQnZi6Ux1gpsaII8SDB+FEH67IcOLR+XescSoxQ2z0KTCMmijOqDnTW\ni6LZ4QjxBF6S6XXwCKr1to9hSmrmAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 80cb7e709db5e494f870f6a9dab9f69adca53c17\nparent 4d6cde38cefa61209d307ed8015bdd40f2695668\nauthor Jon Atack <jon@atack.com> 1586197549 +0200\ncommitter Jon Atack <jon@atack.com> 1586686323 +0200\n\ntest: add rpc_signrawtransaction logging\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cdddae3b4efee071d71ba3b6629a53017332f6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9cdddae3b4efee071d71ba3b6629a53017332f6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cdddae3b4efee071d71ba3b6629a53017332f6f/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d6cde38cefa61209d307ed8015bdd40f2695668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d6cde38cefa61209d307ed8015bdd40f2695668",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d6cde38cefa61209d307ed8015bdd40f2695668"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3c7b398d2d3aa1c467068a5b6f2fe1651ec3187f",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cdddae3b4efee071d71ba3b6629a53017332f6f/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cdddae3b4efee071d71ba3b6629a53017332f6f/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=9cdddae3b4efee071d71ba3b6629a53017332f6f",
        "patch": "@@ -27,6 +27,7 @@ def successful_signing_test(self):\n \n         1) The transaction has a complete set of signatures\n         2) No script verification error occurred\"\"\"\n+        self.log.info(\"Test valid raw transaction with one input\")\n         privKeys = ['cUeKHd5orzT3mz8P9pxyREHfsWtVfgsfDjiZZBcjUBAaGk1BTj7N', 'cVKpPfVKSJxKqVpE9awvXNWuLHCa5j5tiE7K6zbUSptFpTEtiFrA']\n \n         inputs = [\n@@ -49,7 +50,7 @@ def successful_signing_test(self):\n         assert 'errors' not in rawTxSigned\n \n     def test_with_lock_outputs(self):\n-        \"\"\"Test correct error reporting when trying to sign a locked output\"\"\"\n+        self.log.info(\"Test correct error reporting when trying to sign a locked output\")\n         self.nodes[0].encryptwallet(\"password\")\n \n         rawTx = '020000000156b958f78e3f24e0b2f4e4db1255426b0902027cb37e3ddadb52e37c3557dddb0000000000ffffffff01c0a6b929010000001600149a2ee8c77140a053f36018ac8124a6ececc1668a00000000'\n@@ -65,6 +66,7 @@ def script_verification_error_test(self):\n         4) Two script verification errors occurred\n         5) Script verification errors have certain properties (\"txid\", \"vout\", \"scriptSig\", \"sequence\", \"error\")\n         6) The verification errors refer to the invalid (vin 1) and missing input (vin 2)\"\"\"\n+        self.log.info(\"Test script verification errors\")\n         privKeys = ['cUeKHd5orzT3mz8P9pxyREHfsWtVfgsfDjiZZBcjUBAaGk1BTj7N']\n \n         inputs = [\n@@ -147,7 +149,7 @@ def script_verification_error_test(self):\n         assert not rawTxSigned['errors'][0]['witness']\n \n     def witness_script_test(self):\n-        # Now test signing transaction to P2SH-P2WSH addresses without wallet\n+        self.log.info(\"Test signing transaction to P2SH-P2WSH addresses without wallet\")\n         # Create a new P2SH-P2WSH 1-of-1 multisig address:\n         embedded_address = self.nodes[1].getaddressinfo(self.nodes[1].getnewaddress())\n         embedded_privkey = self.nodes[1].dumpprivkey(embedded_address[\"address\"])"
      }
    ]
  }
]