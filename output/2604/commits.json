[
  {
    "sha": "30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGI0MmZiYmFlOGEzZTE4ZDA1ZGIwZTE1MGM4ZmM0ZmJiYjIxZTY2",
    "commit": {
      "author": {
        "name": "Nickolai Zeldovich",
        "email": "nickolai@csail.mit.edu",
        "date": "2013-05-01T20:38:08Z"
      },
      "committer": {
        "name": "Nickolai Zeldovich",
        "email": "nickolai@csail.mit.edu",
        "date": "2013-05-01T20:38:08Z"
      },
      "message": "EvalScript: avoid relying on undefined behavior for overflow check\n\nIn C/C++, signed integer overflow is undefined behavior, and some\ncompilers (such as gcc) will optimize away checks like the one that\nwas present in EvalScript; specifically:\n\n  int nBegin = ...;\n  int nEnd = nBegin + size;\n  if (nBegin < 0 || nEnd < nBegin)\n\nwill get compiled into:\n\n  if (nBegin < 0 || size < 0)\n\nThis patch changes the overflow check to avoid relying on the behavior\nof signed integer overflow, by checking for size > INT_MAX - nBegin\n(and computing nEnd after the check).",
      "tree": {
        "sha": "db9df74cb10a31b64060129c76033d1d9f062aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db9df74cb10a31b64060129c76033d1d9f062aac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66/comments",
    "author": {
      "login": "zeldovich",
      "id": 828308,
      "node_id": "MDQ6VXNlcjgyODMwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/828308?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeldovich",
      "html_url": "https://github.com/zeldovich",
      "followers_url": "https://api.github.com/users/zeldovich/followers",
      "following_url": "https://api.github.com/users/zeldovich/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeldovich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeldovich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeldovich/subscriptions",
      "organizations_url": "https://api.github.com/users/zeldovich/orgs",
      "repos_url": "https://api.github.com/users/zeldovich/repos",
      "events_url": "https://api.github.com/users/zeldovich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeldovich/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "zeldovich",
      "id": 828308,
      "node_id": "MDQ6VXNlcjgyODMwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/828308?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeldovich",
      "html_url": "https://github.com/zeldovich",
      "followers_url": "https://api.github.com/users/zeldovich/followers",
      "following_url": "https://api.github.com/users/zeldovich/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeldovich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeldovich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeldovich/subscriptions",
      "organizations_url": "https://api.github.com/users/zeldovich/orgs",
      "repos_url": "https://api.github.com/users/zeldovich/repos",
      "events_url": "https://api.github.com/users/zeldovich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeldovich/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eef2091fe9ee39ecd8e874c91d3ab0ff023c5356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eef2091fe9ee39ecd8e874c91d3ab0ff023c5356",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eef2091fe9ee39ecd8e874c91d3ab0ff023c5356"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "60e79001f75b326dad75d7f7f1a4d5afeb450bef",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=30b42fbbae8a3e18d05db0e150c8fc4fbbb21e66",
        "patch": "@@ -683,9 +683,10 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                         return false;\n                     valtype& vch = stacktop(-3);\n                     int nBegin = CastToBigNum(stacktop(-2)).getint();\n-                    int nEnd = nBegin + CastToBigNum(stacktop(-1)).getint();\n-                    if (nBegin < 0 || nEnd < nBegin)\n+                    int size = CastToBigNum(stacktop(-1)).getint();\n+                    if (nBegin < 0 || size < 0 || size > INT_MAX - nBegin)\n                         return false;\n+                    int nEnd = nBegin + size;\n                     if (nBegin > (int)vch.size())\n                         nBegin = vch.size();\n                     if (nEnd > (int)vch.size())"
      }
    ]
  }
]