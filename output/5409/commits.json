[
  {
    "sha": "65b03282c9cb42fa5de9f2dd70477e44e1e9d37d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NWIwMzI4MmM5Y2I0MmZhNWRlOWYyZGQ3MDQ3N2U0NGUxZTlkMzdk",
    "commit": {
      "author": {
        "name": "Ryan X. Charles",
        "email": "ryanxcharles@gmail.com",
        "date": "2014-12-02T18:02:44Z"
      },
      "committer": {
        "name": "Ryan X. Charles",
        "email": "ryanxcharles@gmail.com",
        "date": "2014-12-02T18:02:44Z"
      },
      "message": "newlines in strings are invalid JSON\n\nAlthough script_valid.json and script_invalid.json are loaded correctly by the\nJSON interpreter used by bitcoin core, these same files are often used by other\nlibraries and do not necessarily load correctly due to the fact that newlines\ncontained inside strings are not valid and must instead use the escape\ncharacter \\n. The files tx_valid.json and tx_invalid.json handle this\ncorrectly, so I've changed the formatting in script_valid.json and\nscript_invalid.json to mirror those files.",
      "tree": {
        "sha": "5ada68edfae9facebfa73d2959c15922ef2f4ab8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ada68edfae9facebfa73d2959c15922ef2f4ab8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJUff8DAAoJEB+plOKhG03ehSsP/jH27SM45wGpGZNVALhgZC3E\nqm8jFnDvINn1msywnK//R0q7LGRV2dO3U/s6MljpoYApvzL57hyLQPKXuMPgVgGX\nlzjSlxxxH1KAEONBTjvmyyqkr1Uy44vbFqmaE4mVjZo5ckDJx9l1rs6L+qHiXYun\nRqoFdNT+Jk+SJzTRb+Eq8Ky1W3+LcoHOddfxRC9CsQWZvJh9MvBU1Jz0w6L9d9Ja\ngMYeN9C7wGnkisB4VZZravutRiqX7topO4MQDIWDTIYFBBwaQ0SWo4sczIYuTpA0\n2zCgFOOvV1ukRP1S28QK0WwQAkWrUUWibjzGZXReKuPrhk24Ip1FZLYF7xYrcEfY\nGXTgjJhU8cNfCJfOl56tJwmvXL1y36d1Kb7aR61POxnd9SWM10u9Jk3T/3dsEGRC\nqLuZpRsAks16UMTzK2MTXi1m1TqiVqW97yGPga22W9Qq5lywwsIRhAI4dPs/LA+T\nhX1rxSyCMRLXtbRZTIAfqh8qFEMzKEgC4tgoTcx2YzPlEgfAzHuYD5/X16B8w17A\nYuu+aiD/O549XJC53jxyosx2reR7EmJRqD4hDMVX6s+vgEzM/M5WJmCnKlTWNY8c\nqQbCR9Oy/ecw/Wb+IxRVJrUx0/cHebm67h3RyiWet6/g3LoK1wSblrNpBEjAtzbM\npScP77RoNMqdotj5WvI5\n=qx96\n-----END PGP SIGNATURE-----",
        "payload": "tree 5ada68edfae9facebfa73d2959c15922ef2f4ab8\nparent 0286fe5b3be20d0c27c6a71fa1a222166bccfd65\nauthor Ryan X. Charles <ryanxcharles@gmail.com> 1417543364 -0800\ncommitter Ryan X. Charles <ryanxcharles@gmail.com> 1417543364 -0800\n\nnewlines in strings are invalid JSON\n\nAlthough script_valid.json and script_invalid.json are loaded correctly by the\nJSON interpreter used by bitcoin core, these same files are often used by other\nlibraries and do not necessarily load correctly due to the fact that newlines\ncontained inside strings are not valid and must instead use the escape\ncharacter \\n. The files tx_valid.json and tx_invalid.json handle this\ncorrectly, so I've changed the formatting in script_valid.json and\nscript_invalid.json to mirror those files.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d/comments",
    "author": {
      "login": "ryanxcharles",
      "id": 63740,
      "node_id": "MDQ6VXNlcjYzNzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/63740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanxcharles",
      "html_url": "https://github.com/ryanxcharles",
      "followers_url": "https://api.github.com/users/ryanxcharles/followers",
      "following_url": "https://api.github.com/users/ryanxcharles/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanxcharles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanxcharles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanxcharles/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanxcharles/orgs",
      "repos_url": "https://api.github.com/users/ryanxcharles/repos",
      "events_url": "https://api.github.com/users/ryanxcharles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanxcharles/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanxcharles",
      "id": 63740,
      "node_id": "MDQ6VXNlcjYzNzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/63740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanxcharles",
      "html_url": "https://github.com/ryanxcharles",
      "followers_url": "https://api.github.com/users/ryanxcharles/followers",
      "following_url": "https://api.github.com/users/ryanxcharles/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanxcharles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanxcharles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanxcharles/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanxcharles/orgs",
      "repos_url": "https://api.github.com/users/ryanxcharles/repos",
      "events_url": "https://api.github.com/users/ryanxcharles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanxcharles/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0286fe5b3be20d0c27c6a71fa1a222166bccfd65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0286fe5b3be20d0c27c6a71fa1a222166bccfd65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0286fe5b3be20d0c27c6a71fa1a222166bccfd65"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 23,
      "deletions": 31
    },
    "files": [
      {
        "sha": "86d39b5c2086d02d5c33150aae5640427bdf8e3b",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 9,
        "deletions": 13,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=65b03282c9cb42fa5de9f2dd70477e44e1e9d37d",
        "patch": "@@ -1,12 +1,10 @@\n [\n-[\"\n-Format is: [scriptPubKey, scriptSig, flags, ... comments]\n-It is evaluated as if there was a crediting coinbase transaction with two 0\n-pushes as scriptSig, and one output of 0 satoshi and given scriptPubKey,\n-followed by a spending transaction which spends this output as only input (and\n-correct prevout hash), using the given scriptSig. All nLockTimes are 0, all\n-nSequences are max.\n-\"],\n+[\"Format is: [scriptPubKey, scriptSig, flags, ... comments]\"],\n+[\"It is evaluated as if there was a crediting coinbase transaction with two 0\"],\n+[\"pushes as scriptSig, and one output of 0 satoshi and given scriptPubKey,\"],\n+[\"followed by a spending transaction which spends this output as only input (and\"],\n+[\"correct prevout hash), using the given scriptSig. All nLockTimes are 0, all\"],\n+[\"nSequences are max.\"],\n \n [\"\", \"DEPTH\", \"P2SH,STRICTENC\",   \"Test the test: we should have an empty stack after scriptSig evaluation\"],\n [\"  \", \"DEPTH\", \"P2SH,STRICTENC\", \"and multiple spaces should not change that.\"],\n@@ -496,11 +494,9 @@ nSequences are max.\n [\"0 0x02 0x0000 0\", \"CHECKMULTISIGVERIFY 1\", \"MINIMALDATA\"],\n \n \n-[\"\n-Order of CHECKMULTISIG evaluation tests, inverted by swapping the order of\n-pubkeys/signatures so they fail due to the STRICTENC rules on validly encoded\n-signatures and pubkeys.\n-\"],\n+[\"Order of CHECKMULTISIG evaluation tests, inverted by swapping the order of\"],\n+[\"pubkeys/signatures so they fail due to the STRICTENC rules on validly encoded\"],\n+[\"signatures and pubkeys.\"],\n [\n     \"0 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501\",\n     \"2 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 0 2 CHECKMULTISIG NOT\","
      },
      {
        "sha": "d3075de646aad47f0cc4c2f2f50001eb869f9de0",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 14,
        "deletions": 18,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65b03282c9cb42fa5de9f2dd70477e44e1e9d37d/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=65b03282c9cb42fa5de9f2dd70477e44e1e9d37d",
        "patch": "@@ -1,12 +1,10 @@\n [\n-[\"\n-Format is: [scriptPubKey, scriptSig, flags, ... comments]\n-It is evaluated as if there was a crediting coinbase transaction with two 0\n-pushes as scriptSig, and one output of 0 satoshi and given scriptPubKey,\n-followed by a spending transaction which spends this output as only input (and\n-correct prevout hash), using the given scriptSig. All nLockTimes are 0, all\n-nSequences are max.\n-\"],\n+[\"Format is: [scriptPubKey, scriptSig, flags, ... comments]\"],\n+[\"It is evaluated as if there was a crediting coinbase transaction with two 0\"],\n+[\"pushes as scriptSig, and one output of 0 satoshi and given scriptPubKey,\"],\n+[\"followed by a spending transaction which spends this output as only input (and\"],\n+[\"correct prevout hash), using the given scriptSig. All nLockTimes are 0, all\"],\n+[\"nSequences are max.\"],\n \n [\"\", \"DEPTH 0 EQUAL\", \"P2SH,STRICTENC\", \"Test the test: we should have an empty stack after scriptSig evaluation\"],\n [\"  \", \"DEPTH 0 EQUAL\", \"P2SH,STRICTENC\", \"and multiple spaces should not change that.\"],\n@@ -664,16 +662,14 @@ nSequences are max.\n [\"0 0 0x02 0x0000\", \"CHECKMULTISIGVERIFY 1\", \"\"],\n [\"0 0x02 0x0000 0\", \"CHECKMULTISIGVERIFY 1\", \"\"],\n \n-[\"\n-CHECKMULTISIG evaluation order tests. CHECKMULTISIG evaluates signatures and\n-pubkeys in a specific order, and will exit early if the number of signatures\n-left to check is greater than the number of keys left. As STRICTENC fails the\n-script when it reaches an invalidly encoded signature or pubkey, we can use it\n-to test the exact order in which signatures and pubkeys are evaluated by\n-distinguishing CHECKMULTISIG returning false on the stack and the script as a\n-whole failing.\n-See also the corresponding inverted versions of these tests in script_invalid.json\n-\"],\n+[\"CHECKMULTISIG evaluation order tests. CHECKMULTISIG evaluates signatures and\"],\n+[\"pubkeys in a specific order, and will exit early if the number of signatures\"],\n+[\"left to check is greater than the number of keys left. As STRICTENC fails the\"],\n+[\"script when it reaches an invalidly encoded signature or pubkey, we can use it\"],\n+[\"to test the exact order in which signatures and pubkeys are evaluated by\"],\n+[\"distinguishing CHECKMULTISIG returning false on the stack and the script as a\"],\n+[\"whole failing.\"],\n+[\"See also the corresponding inverted versions of these tests in script_invalid.json\"],\n [\n     \"0 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501\",\n     \"2 0 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 2 CHECKMULTISIG NOT\","
      }
    ]
  }
]