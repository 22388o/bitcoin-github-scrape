[
  {
    "sha": "5a9b508279b3a221d36149aa2e811a9702b28e60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTliNTA4Mjc5YjNhMjIxZDM2MTQ5YWEyZTgxMWE5NzAyYjI4ZTYw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-05-31T20:21:25Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-05-31T20:21:25Z"
      },
      "message": "[trivial] Add end of namespace comments",
      "tree": {
        "sha": "edffb2b9abcbd81f1457b793077a75fec6e389e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/edffb2b9abcbd81f1457b793077a75fec6e389e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a9b508279b3a221d36149aa2e811a9702b28e60",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a9b508279b3a221d36149aa2e811a9702b28e60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a9b508279b3a221d36149aa2e811a9702b28e60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a9b508279b3a221d36149aa2e811a9702b28e60/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c924011f535c46b3bc02bef8b7e2a8ad559d78d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c924011f535c46b3bc02bef8b7e2a8ad559d78d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c924011f535c46b3bc02bef8b7e2a8ad559d78d"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 37,
      "deletions": 22
    },
    "files": [
      {
        "sha": "7d3427a3b3a2b481fb2f5ef69f1510fc8dd73d21",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -45,7 +45,7 @@ class Class\n         return true;\n     }\n }\n-}\n+} // namespace foo\n ```\n \n Doxygen comments\n@@ -408,6 +408,21 @@ Source code organization\n \n   - *Rationale*: Avoids symbol conflicts\n \n+- Terminate namespaces with a comment (`// namespace mynamespace`). The comment\n+  should be placed on the same line as the brace closing the namespace, e.g.\n+\n+```c++\n+namespace mynamespace {\n+    ...\n+} // namespace mynamespace\n+\n+namespace {\n+    ...\n+} // namespace\n+```\n+\n+  - *Rationale*: Avoids confusion about the namespace context\n+\n GUI\n -----\n "
      },
      {
        "sha": "efa1beb1e4f7c908f23b8f34161494287c3555d6",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -225,7 +225,7 @@ class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n     bool operator()(const CNoDestination& no) const { return false; }\n };\n \n-} // anon namespace\n+} // namespace\n \n bool CBitcoinAddress::Set(const CKeyID& id)\n {"
      },
      {
        "sha": "30900d854a80bbcc779e3ebeef5448595eab1872",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -11,7 +11,7 @@\n \n namespace block_bench {\n #include \"bench/data/block413567.raw.h\"\n-}\n+} // namespace block_bench\n \n // These are the two major time-sinks which happen after we have fully received\n // a block off the wire, but before we can relay the block on to peers using"
      },
      {
        "sha": "b4d1c90992b767f2f3676936f0478f2ef44a1b98",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -56,7 +56,7 @@ bool sanity_test_fdelt()\n }\n #endif\n \n-} // anon namespace\n+} // namespace\n \n bool glibc_sanity_test()\n {"
      },
      {
        "sha": "569fb1bbe886c5f561e5273a5f2fa3f086a32333",
        "filename": "src/compat/glibcxx_sanity.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/compat/glibcxx_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/compat/glibcxx_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibcxx_sanity.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -38,7 +38,7 @@ bool sanity_test_list(unsigned int size)\n     return true;\n }\n \n-} // anon namespace\n+} // namespace\n \n // trigger: string::at(x) on an empty string to trigger __throw_out_of_range_fmt.\n // test: force std::string to throw an out_of_range exception. Verify that"
      },
      {
        "sha": "79ec428ff2ca559a90831e5531cc63af245ab5e7",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -209,4 +209,4 @@ const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper &w)\n     return w.obfuscate_key;\n }\n \n-};\n+} // namespace dbwrapper_private"
      },
      {
        "sha": "45f0ea824342a93b4087e8910d7327fd7f5a9bc9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -809,7 +809,7 @@ int nUserMaxConnections;\n int nFD;\n ServiceFlags nLocalServices = NODE_NETWORK;\n \n-}\n+} // namespace\n \n [[noreturn]] static void new_handler_terminate()\n {"
      },
      {
        "sha": "d884ce092b12cf446b6cb7070693f73c8b33918f",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -122,7 +122,7 @@ namespace {\n     MapRelay mapRelay;\n     /** Expiration-time ordered list of (expire time, relay map entry) pairs, protected by cs_main). */\n     std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration;\n-} // anon namespace\n+} // namespace\n \n //////////////////////////////////////////////////////////////////////////////\n //\n@@ -555,7 +555,7 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n     }\n }\n \n-} // anon namespace\n+} // namespace\n \n bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n     LOCK(cs_main);"
      },
      {
        "sha": "ebe63a1879965c5772b0ab6caca85e8f708feeac",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -39,7 +39,7 @@ const char *SENDCMPCT=\"sendcmpct\";\n const char *CMPCTBLOCK=\"cmpctblock\";\n const char *GETBLOCKTXN=\"getblocktxn\";\n const char *BLOCKTXN=\"blocktxn\";\n-};\n+} // namespace NetMsgType\n \n /** All known message types. Keep this in the same order as the list of\n  * messages above and in protocol.h."
      },
      {
        "sha": "a16457ea4ee39babac484348faf98764d0063974",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -11,7 +11,7 @@ namespace\n {\n /* Global secp256k1_context object used for verification. */\n secp256k1_context* secp256k1_context_verify = NULL;\n-}\n+} // namespace\n \n /** This function is taken from the libsecp256k1 distribution and implements\n  *  DER parsing for ECDSA signatures, while supporting an arbitrary subset of"
      },
      {
        "sha": "4b71a42cdff54f87d267dda9655cce335c3eb4f1",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -68,7 +68,7 @@ struct ECCryptoClosure\n };\n \n ECCryptoClosure instance_of_eccryptoclosure;\n-}\n+} // namespace\n \n /** Check that all specified flags are part of the libconsensus interface. */\n static bool verify_flags(unsigned int flags)"
      },
      {
        "sha": "171f28eef1c39d5ad79a75ba6dbfc9f9cfdb846c",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -31,7 +31,7 @@ inline bool set_error(ScriptError* ret, const ScriptError serror)\n     return false;\n }\n \n-} // anon namespace\n+} // namespace\n \n bool CastToBool(const valtype& vch)\n {\n@@ -1164,7 +1164,7 @@ uint256 GetOutputsHash(const CTransaction& txTo) {\n     return ss.GetHash();\n }\n \n-} // anon namespace\n+} // namespace\n \n PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo)\n {"
      },
      {
        "sha": "befc5f52338d7ca5855879458b62f0a185664d4e",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -66,7 +66,7 @@ class CSignatureCache\n  * signatureCache could be made local to VerifySignature.\n */\n static CSignatureCache signatureCache;\n-}\n+} // namespace\n \n // To be called once in AppInitMain/BasicTestingSetup to initialize the\n // signatureCache."
      },
      {
        "sha": "59af4e4905c5e46dc569d2f84febf9a23f03d41c",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -400,7 +400,7 @@ class DummySignatureChecker : public BaseSignatureChecker\n     }\n };\n const DummySignatureChecker dummyChecker;\n-}\n+} // namespace\n \n const BaseSignatureChecker& DummySignatureCreator::Checker() const\n {"
      },
      {
        "sha": "d08c8821d4a5acdaf89659b0714ec3f6ba1371dc",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -273,7 +273,7 @@ class CScriptVisitor : public boost::static_visitor<bool>\n         return true;\n     }\n };\n-}\n+} // namespace\n \n CScript GetScriptForDestination(const CTxDestination& dest)\n {"
      },
      {
        "sha": "850b983c45904977ee7a42fa32b62613a31d48dc",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -88,7 +88,7 @@ class CCoinsViewCacheTest : public CCoinsViewCache\n     size_t& usage() { return cachedCoinsUsage; }\n };\n \n-}\n+} // namespace\n \n BOOST_FIXTURE_TEST_SUITE(coins_tests, BasicTestingSetup)\n "
      },
      {
        "sha": "7601034791d7591943f5f5cc68a940772dde53fc",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -468,7 +468,7 @@ std::string JSONPrettyPrint(const UniValue& univalue)\n     }\n     return ret;\n }\n-}\n+} // namespace\n \n BOOST_AUTO_TEST_CASE(script_build)\n {"
      },
      {
        "sha": "ac5bfd00751be4893d0544e237616ca288f7fbff",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -776,7 +776,7 @@ class DepthAndScoreComparator\n         return counta < countb;\n     }\n };\n-}\n+} // namespace\n \n std::vector<CTxMemPool::indexed_transaction_set::const_iterator> CTxMemPool::GetSortedDepthAndScore() const\n {"
      },
      {
        "sha": "3198a7529779f20e2d13bdd47816a3dbd4b1630f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -1491,7 +1491,7 @@ bool AbortNode(CValidationState& state, const std::string& strMessage, const std\n     return state.Error(strMessage);\n }\n \n-} // anon namespace\n+} // namespace\n \n /**\n  * Apply the undo operation of a CTxInUndo to the given chain state."
      },
      {
        "sha": "6e74a1657cceedea0ae468423f6aab0681fa8aee",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9b508279b3a221d36149aa2e811a9702b28e60/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9b508279b3a221d36149aa2e811a9702b28e60/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=5a9b508279b3a221d36149aa2e811a9702b28e60",
        "patch": "@@ -160,7 +160,7 @@ class VersionBitsConditionChecker : public AbstractThresholdConditionChecker {\n     uint32_t Mask(const Consensus::Params& params) const { return ((uint32_t)1) << params.vDeployments[id].bit; }\n };\n \n-}\n+} // namespace\n \n ThresholdState VersionBitsState(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos, VersionBitsCache& cache)\n {"
      }
    ]
  }
]