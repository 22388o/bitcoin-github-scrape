[
  {
    "sha": "14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNGQ0NTQ5ODU2YzhkM2JhNGM3MTU2YmMxZGYxZTYwODU4Y2E4NWRk",
    "commit": {
      "author": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2017-03-16T07:24:06Z"
      },
      "committer": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2017-03-16T07:24:06Z"
      },
      "message": "[QT] Remove SendToSelf, and break down its payouts",
      "tree": {
        "sha": "925661fcb176454fe81f362103f9ea58daaeb7b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/925661fcb176454fe81f362103f9ea58daaeb7b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/comments",
    "author": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce01e6226ce52b88c644b0cb89852278edbdf33b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce01e6226ce52b88c644b0cb89852278edbdf33b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce01e6226ce52b88c644b0cb89852278edbdf33b"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 53,
      "deletions": 13
    },
    "files": [
      {
        "sha": "9c2110528b72a133f1cbfb9b9928692eca510086",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
        "patch": "@@ -422,6 +422,8 @@ bool AddressTableModel::removeRows(int row, int count, const QModelIndex &parent\n  */\n QString AddressTableModel::labelForAddress(const QString &address) const\n {\n+    if (address.isEmpty())\n+        return QString();\n     {\n         LOCK(wallet->cs_wallet);\n         CBitcoinAddress address_parsed(address.toStdString());"
      },
      {
        "sha": "6ad192db8b19fc47b023ea432d2e062213a938d8",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 5,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
        "patch": "@@ -101,12 +101,56 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n \n         if (fAllFromMe && fAllToMe)\n         {\n-            // Payment to self\n-            CAmount nChange = wtx.GetChange();\n+            TransactionRecord sub;\n \n-            parts.append(TransactionRecord(hash, nTime, TransactionRecord::SendToSelf, \"\",\n-                            -(nDebit - nChange), nCredit - nChange));\n-            parts.last().involvesWatchAddress = involvesWatchAddress;   // maybe pass to TransactionRecord as constructor argument\n+            // Add one entry for all the outputs\n+            for (unsigned int nOut = 0; nOut < wtx.tx->vout.size(); nOut++)\n+            {\n+                const CTxOut& txout = wtx.tx->vout[nOut];\n+                sub = TransactionRecord(hash, nTime);\n+                sub.idx = nOut;\n+                sub.involvesWatchAddress = involvesWatchAddress;\n+                CTxDestination address;\n+                if (ExtractDestination(txout.scriptPubKey, address))\n+                {\n+                    sub.type = TransactionRecord::SendToAddress;\n+                    sub.address = CBitcoinAddress(address).ToString();\n+                }\n+                else\n+                {\n+                    sub.type = TransactionRecord::SendToOther;\n+                }\n+                sub.credit = txout.nValue;\n+                parts.append(sub);\n+            }\n+\n+            // Add one entry for all the debit\n+            sub = TransactionRecord(hash, nTime);\n+            sub.involvesWatchAddress = involvesWatchAddress;\n+            sub.debit = -nDebit;\n+            sub.type = TransactionRecord::SendToOther;\n+            if (wtx.tx->vin.size() == 1)\n+            {\n+                const auto& txin = wtx.tx->vin[0];\n+                {\n+                    LOCK(wallet->cs_wallet);\n+                    auto mi = wallet->mapWallet.find(txin.prevout.hash);\n+                    if (mi != wallet->mapWallet.end())\n+                    {\n+                        const auto& prev = (*mi).second;\n+                        if (txin.prevout.n < prev.tx->vout.size())\n+                        {\n+                            CTxDestination address;\n+                            if (ExtractDestination(prev.tx->vout[txin.prevout.n].scriptPubKey, address))\n+                            {\n+                                sub.type = TransactionRecord::SendToAddress;\n+                                sub.address = CBitcoinAddress(address).ToString();\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+            parts.append(sub);\n         }\n         else if (fAllFromMe)\n         {"
      },
      {
        "sha": "d99abf464bba2b2cb3e68c0471c0f841bd55f9e8",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
        "patch": "@@ -76,8 +76,7 @@ class TransactionRecord\n         SendToAddress,\n         SendToOther,\n         RecvWithAddress,\n-        RecvFromOther,\n-        SendToSelf\n+        RecvFromOther\n     };\n \n     /** Number of confirmation recommended for accepting a transaction */"
      },
      {
        "sha": "9962bf5b75033a409bbd61a0d2c19bc8159ebff5",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
        "patch": "@@ -360,6 +360,7 @@ QString TransactionTableModel::lookupAddress(const std::string &address, bool to\n     }\n     if(label.isEmpty() || tooltip)\n     {\n+        label = address.empty() ? QString(\"n/a\") : QString::fromStdString(address);\n         description += QString(\" (\") + QString::fromStdString(address) + QString(\")\");\n     }\n     return description;\n@@ -376,8 +377,6 @@ QString TransactionTableModel::formatTxType(const TransactionRecord *wtx) const\n     case TransactionRecord::SendToAddress:\n     case TransactionRecord::SendToOther:\n         return tr(\"Sent to\");\n-    case TransactionRecord::SendToSelf:\n-        return tr(\"Payment to yourself\");\n     case TransactionRecord::Generated:\n         return tr(\"Mined\");\n     default:\n@@ -420,7 +419,6 @@ QString TransactionTableModel::formatTxToAddress(const TransactionRecord *wtx, b\n         return lookupAddress(wtx->address, tooltip) + watchAddress;\n     case TransactionRecord::SendToOther:\n         return QString::fromStdString(wtx->address) + watchAddress;\n-    case TransactionRecord::SendToSelf:\n     default:\n         return tr(\"(n/a)\") + watchAddress;\n     }\n@@ -439,8 +437,6 @@ QVariant TransactionTableModel::addressColor(const TransactionRecord *wtx) const\n         if(label.isEmpty())\n             return COLOR_BAREADDRESS;\n         } break;\n-    case TransactionRecord::SendToSelf:\n-        return COLOR_BAREADDRESS;\n     default:\n         break;\n     }"
      },
      {
        "sha": "d6452995bfc534899d152f9f11aa826456fef0de",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14d4549856c8d3ba4c7156bc1df1e60858ca85dd/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=14d4549856c8d3ba4c7156bc1df1e60858ca85dd",
        "patch": "@@ -87,7 +87,6 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n                                         TransactionFilterProxy::TYPE(TransactionRecord::RecvFromOther));\n     typeWidget->addItem(tr(\"Sent to\"), TransactionFilterProxy::TYPE(TransactionRecord::SendToAddress) |\n                                   TransactionFilterProxy::TYPE(TransactionRecord::SendToOther));\n-    typeWidget->addItem(tr(\"To yourself\"), TransactionFilterProxy::TYPE(TransactionRecord::SendToSelf));\n     typeWidget->addItem(tr(\"Mined\"), TransactionFilterProxy::TYPE(TransactionRecord::Generated));\n     typeWidget->addItem(tr(\"Other\"), TransactionFilterProxy::TYPE(TransactionRecord::Other));\n "
      }
    ]
  }
]