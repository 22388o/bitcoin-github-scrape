[
  {
    "sha": "d6932139c2688df5ce554a6b96d12356754b399e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjkzMjEzOWMyNjg4ZGY1Y2U1NTRhNmI5NmQxMjM1Njc1NGIzOTll",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2020-12-16T01:43:12Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2020-12-22T02:01:49Z"
      },
      "message": "rpc: deprecate `addresses` and `reqSigs` from rpc outputs\n\n1) add a new sane \"address\" field (for outputs that have an\n   identifiable address, which doesn't include bare multisig)\n2) with -deprecatedrpc: leave \"reqSigs\" and \"addresses\" intact\n   (with all weird/wrong behavior they have now)\n3) without -deprecatedrpc: drop \"reqSigs\" and \"addresses\" entirely,\n   always.\n\nNote: we add a circular dependency to EXPECTED_CIRCULAR_DEPENDENCIES\nwhich allows us to use IsDeprecatedRPCEnabled in core_write.cpp\n\nNote: Some light refactoring done to allow us to very easily\ndelete a few chunks of code (marked with TODOs) when we remove\nthis deprecated behavior.",
      "tree": {
        "sha": "25c2438a8e283a43f3266e6f70eb6947e20be58e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25c2438a8e283a43f3266e6f70eb6947e20be58e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6932139c2688df5ce554a6b96d12356754b399e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAl/hU5QACgkQc3/VzfHR\nRrm8tQ//QUG3Dmj9bPcHCXYrV1QNO1+n9chg8+W0kUMmxQGq/KVPhIQHoC8T8AH1\n5Q/SCST167MxMdoOBirBEBVrIwVIZuomYmroRzPDu8TAwuRZCBKXViJWJ1EDwzvH\ng1ROiR+e1t4vB8+kszxfKd9Bi45XHHHYV3EOBPVsXMnjgkSG16tau47haF8fWjCf\ncg3LWsr9PL6mnK0qEt4t+S3CmvRWc09ntuv/r/MijqYA1CHjml9meuxM6wk4LTKw\n3PQQwCLakoi9PwfDyd2Tefc+VvA7Pj8AZn9ajgjZtxERGRoUJdJ84v5mjwx6H2D5\nnC/sPctD94hYguPbE9gxb2lqjIRbqJda8H7vkkUC00OIbCIP+i39LAXQmx4lmiue\n70dg7bXmTagqboCZC3c20f4WiVzShbypfUVu5dHdelDXcW1nhT67pw0FXaw54HoA\nFY6u6kvsZBSixpEj15qQv/eyMqYzu+3KKOeP49Wb+1v5YWXWUgIhxFlJXuNZhH6F\nIO995yqiXMWbXwBvFnb+NUKITH1XRV3gWCCNXzH0RSpfUYpQm2LB+kxjG0JmJF+2\ncuThkh+0SMH12DA1H+Rmm7F9r5q23IE21BQhFVWKbDcnRgqBR7pozK6pEKh8ETym\nSgj6asXdB+mYX0IMhPNzPDUOc0PIIzrmtrFIpfH6cPuMI+UIdWQ=\n=X1BK\n-----END PGP SIGNATURE-----",
        "payload": "tree 25c2438a8e283a43f3266e6f70eb6947e20be58e\nparent dff0f6f753eafd932d7d65fbfa33585f620e8e54\nauthor Michael Dietz <michael.dietz@waya.ai> 1608082992 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1608602509 -0600\n\nrpc: deprecate `addresses` and `reqSigs` from rpc outputs\n\n1) add a new sane \"address\" field (for outputs that have an\n   identifiable address, which doesn't include bare multisig)\n2) with -deprecatedrpc: leave \"reqSigs\" and \"addresses\" intact\n   (with all weird/wrong behavior they have now)\n3) without -deprecatedrpc: drop \"reqSigs\" and \"addresses\" entirely,\n   always.\n\nNote: we add a circular dependency to EXPECTED_CIRCULAR_DEPENDENCIES\nwhich allows us to use IsDeprecatedRPCEnabled in core_write.cpp\n\nNote: Some light refactoring done to allow us to very easily\ndelete a few chunks of code (marked with TODOs) when we remove\nthis deprecated behavior.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6932139c2688df5ce554a6b96d12356754b399e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6932139c2688df5ce554a6b96d12356754b399e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6932139c2688df5ce554a6b96d12356754b399e/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dff0f6f753eafd932d7d65fbfa33585f620e8e54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dff0f6f753eafd932d7d65fbfa33585f620e8e54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dff0f6f753eafd932d7d65fbfa33585f620e8e54"
      }
    ],
    "stats": {
      "total": 390,
      "additions": 187,
      "deletions": 203
    },
    "files": [
      {
        "sha": "2fa95efdd0728aa437fbb33fb62fd9202dc5d078",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -83,11 +83,8 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n          \"scriptPubKey\" : {\n             \"asm\" : \"OP_DUP OP_HASH160 1c7cebb529b86a04c683dfa87be49de35bcf589e OP_EQUALVERIFY OP_CHECKSIG\",\n             \"hex\" : \"76a9141c7cebb529b86a04c683dfa87be49de35bcf589e88ac\",\n-            \"reqSigs\" : 1,\n             \"type\" : \"pubkeyhash\",\n-            \"addresses\" : [\n-               \"mi7as51dvLJsizWnTMurtRmrP8hG2m1XvD\"\n-            ]\n+            \"address\" : \"mi7as51dvLJsizWnTMurtRmrP8hG2m1XvD\"\n          }\n       }\n    ]"
      },
      {
        "sha": "b77f0ac3b57df87c0d258730a24ca5bd1e8c152f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -502,12 +502,14 @@ libbitcoin_common_a_SOURCES = \\\n   protocol.cpp \\\n   psbt.cpp \\\n   rpc/rawtransaction_util.cpp \\\n+  rpc/server.cpp \\\n   rpc/util.cpp \\\n   scheduler.cpp \\\n   script/descriptor.cpp \\\n   script/sign.cpp \\\n   script/signingprovider.cpp \\\n   script/standard.cpp \\\n+  shutdown.cpp \\\n   versionbitsinfo.cpp \\\n   warnings.cpp \\\n   $(BITCOIN_CORE_H)"
      },
      {
        "sha": "2ac8407719af771032d645df0b38f51171b1789c",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 20,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -7,6 +7,7 @@\n #include <consensus/consensus.h>\n #include <consensus/validation.h>\n #include <key_io.h>\n+#include <rpc/server.h>\n #include <script/script.h>\n #include <script/standard.h>\n #include <serialize.h>\n@@ -141,40 +142,41 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_address)\n     out.pushKV(\"asm\", ScriptToAsmStr(script));\n     out.pushKV(\"hex\", HexStr(script));\n \n-    std::vector<std::vector<unsigned char>> solns;\n-    TxoutType type = Solver(script, solns);\n-    out.pushKV(\"type\", GetTxnOutputType(type));\n-\n+    TxoutType type;\n     CTxDestination address;\n-    if (include_address && ExtractDestination(script, address) && type != TxoutType::PUBKEY) {\n+\n+    if (ExtractDestination(script, type, address) && include_address && type != TxoutType::PUBKEY) {\n         out.pushKV(\"address\", EncodeDestination(address));\n     }\n+    out.pushKV(\"type\", GetTxnOutputType(type));\n }\n \n-void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n-                        UniValue& out, bool fIncludeHex)\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex)\n {\n     TxoutType type;\n-    std::vector<CTxDestination> addresses;\n-    int nRequired;\n+    CTxDestination address;\n \n     out.pushKV(\"asm\", ScriptToAsmStr(scriptPubKey));\n     if (fIncludeHex)\n         out.pushKV(\"hex\", HexStr(scriptPubKey));\n \n-    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired) || type == TxoutType::PUBKEY) {\n-        out.pushKV(\"type\", GetTxnOutputType(type));\n-        return;\n+    // TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) this entire if statement should be removed\n+    if (IsDeprecatedRPCEnabled(\"reqSigs\")) { // cruft...\n+        std::vector<CTxDestination> addresses;\n+        int nRequired;\n+        if (ExtractDestinations(scriptPubKey, type, addresses, nRequired) && type != TxoutType::PUBKEY) {\n+            out.pushKV(\"reqSigs\", nRequired);\n+            UniValue a(UniValue::VARR);\n+            for (const CTxDestination& addr : addresses) {\n+                a.push_back(EncodeDestination(addr));\n+            }\n+            out.pushKV(\"addresses\", a);\n+        }\n     }\n-\n-    out.pushKV(\"reqSigs\", nRequired);\n-    out.pushKV(\"type\", GetTxnOutputType(type));\n-\n-    UniValue a(UniValue::VARR);\n-    for (const CTxDestination& addr : addresses) {\n-        a.push_back(EncodeDestination(addr));\n+    if (ExtractDestination(scriptPubKey, type, address) && type != TxoutType::PUBKEY) {\n+        out.pushKV(\"address\", EncodeDestination(address));\n     }\n-    out.pushKV(\"addresses\", a);\n+    out.pushKV(\"type\", GetTxnOutputType(type));\n }\n \n void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex, int serialize_flags)"
      },
      {
        "sha": "a1bd06129d3944568bff80633e7d7f211f72fae3",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -1114,8 +1114,8 @@ static RPCHelpMan gettxout()\n                             {\n                                 {RPCResult::Type::STR_HEX, \"asm\", \"\"},\n                                 {RPCResult::Type::STR_HEX, \"hex\", \"\"},\n-                                {RPCResult::Type::NUM, \"reqSigs\", \"Number of required signatures\"},\n-                                {RPCResult::Type::STR_HEX, \"type\", \"The type, eg pubkeyhash\"},\n+                                {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n+                                {RPCResult::Type::STR, \"type\", \"The type, eg pubkeyhash\"},\n                                 {RPCResult::Type::ARR, \"addresses\", \"array of bitcoin addresses\",\n                                     {{RPCResult::Type::STR, \"address\", \"bitcoin address\"}}},\n                             }},"
      },
      {
        "sha": "bf21c592b24cbefde88598826e75c76b498a0901",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -132,7 +132,7 @@ static RPCHelpMan getrawtransaction()\n                                      {\n                                          {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                          {RPCResult::Type::STR, \"hex\", \"the hex\"},\n-                                         {RPCResult::Type::NUM, \"reqSigs\", \"The required sigs\"},\n+                                         {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n                                          {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n                                          {RPCResult::Type::ARR, \"addresses\", \"\",\n                                          {\n@@ -490,7 +490,7 @@ static RPCHelpMan decoderawtransaction()\n                                 {\n                                     {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                     {RPCResult::Type::STR_HEX, \"hex\", \"the hex\"},\n-                                    {RPCResult::Type::NUM, \"reqSigs\", \"The required sigs\"},\n+                                    {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n                                     {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n                                     {RPCResult::Type::ARR, \"addresses\", \"\",\n                                     {\n@@ -548,7 +548,7 @@ static RPCHelpMan decodescript()\n                     {\n                         {RPCResult::Type::STR, \"asm\", \"Script public key\"},\n                         {RPCResult::Type::STR, \"type\", \"The output type (e.g. \"+GetAllOutputTypes()+\")\"},\n-                        {RPCResult::Type::NUM, \"reqSigs\", \"The required signatures\"},\n+                        {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n                         {RPCResult::Type::ARR, \"addresses\", \"\",\n                         {\n                             {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n@@ -559,7 +559,6 @@ static RPCHelpMan decodescript()\n                             {RPCResult::Type::STR, \"asm\", \"String representation of the script public key\"},\n                             {RPCResult::Type::STR_HEX, \"hex\", \"Hex string of the script public key\"},\n                             {RPCResult::Type::STR, \"type\", \"The type of the script public key (e.g. witness_v0_keyhash or witness_v0_scripthash)\"},\n-                            {RPCResult::Type::NUM, \"reqSigs\", \"The required signatures (always 1)\"},\n                             {RPCResult::Type::ARR, \"addresses\", \"(always length 1)\",\n                             {\n                                 {RPCResult::Type::STR, \"address\", \"segwit address\"},"
      },
      {
        "sha": "8bbd7aa94ab8da7eb6704242ecd34e9825edd6a7",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -177,10 +177,10 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n     return TxoutType::NONSTANDARD;\n }\n \n-bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n+bool ExtractDestination(const CScript& scriptPubKey, TxoutType& whichType, CTxDestination& addressRet)\n {\n     std::vector<valtype> vSolutions;\n-    TxoutType whichType = Solver(scriptPubKey, vSolutions);\n+    whichType = Solver(scriptPubKey, vSolutions);\n \n     if (whichType == TxoutType::PUBKEY) {\n         CPubKey pubKey(vSolutions[0]);\n@@ -221,6 +221,12 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     return false;\n }\n \n+bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet) {\n+    TxoutType type;\n+    return ExtractDestination(scriptPubKey, type, addressRet);\n+}\n+\n+// TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) \"ExtractDestinations\" should be removed\n bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet)\n {\n     addressRet.clear();"
      },
      {
        "sha": "a4b59086f6bc3d3db1fa68993c2ed38e1c1a8c77",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -237,6 +237,7 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n  * scripts, instead use ExtractDestinations. Currently only works for P2PK,\n  * P2PKH, P2SH, P2WPKH, and P2WSH scripts.\n  */\n+bool ExtractDestination(const CScript& scriptPubKey, TxoutType& typeRet, CTxDestination& addressRet);\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n \n /**\n@@ -249,6 +250,8 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n  * Note: this function confuses destinations (a subset of CScripts that are\n  * encodable as an address) with key identifiers (of keys involved in a\n  * CScript), and its use should be phased out.\n+ *\n+ * TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) \"ExtractDestinations\" should be removed\n  */\n bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);\n "
      },
      {
        "sha": "cef283959d8d1e2269f9c6cb25c728c24ee83b52",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -3672,9 +3672,8 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n             // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n             if (subobj.exists(\"pubkey\")) obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n             obj.pushKV(\"embedded\", std::move(subobj));\n-        } else if (which_type == TxoutType::MULTISIG) {\n-            // Also report some information on multisig scripts (which do not have a corresponding address).\n-            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+        } else if (IsDeprecatedRPCEnabled(\"reqSigs\") && which_type == TxoutType::MULTISIG) {\n+            // TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) this entire else if statement should be removed\n             obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n             UniValue pubkeys(UniValue::VARR);\n             for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n@@ -3789,11 +3788,11 @@ RPCHelpMan getaddressinfo()\n                                                                      \"types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash,\\n\"\n                             \"witness_v0_scripthash, witness_unknown.\"},\n                         {RPCResult::Type::STR_HEX, \"hex\", /* optional */ true, \"The redeemscript for the p2sh address.\"},\n-                        {RPCResult::Type::ARR, \"pubkeys\", /* optional */ true, \"Array of pubkeys associated with the known redeemscript (only if script is multisig).\",\n+                        {RPCResult::Type::ARR, \"pubkeys\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Array of pubkeys associated with the known redeemscript (only if script is multisig).\",\n                         {\n                             {RPCResult::Type::STR, \"pubkey\", \"\"},\n                         }},\n-                        {RPCResult::Type::NUM, \"sigsrequired\", /* optional */ true, \"The number of signatures required to spend multisig output (only if script is multisig).\"},\n+                        {RPCResult::Type::NUM, \"sigsrequired\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) The number of signatures required to spend multisig output (only if script is multisig).\"},\n                         {RPCResult::Type::STR_HEX, \"pubkey\", /* optional */ true, \"The hex value of the raw public key for single-key addresses (possibly embedded in P2SH or P2WSH).\"},\n                         {RPCResult::Type::OBJ, \"embedded\", /* optional */ true, \"Information about the address embedded in P2SH or P2WSH, if relevant and known.\",\n                         {"
      },
      {
        "sha": "091202e39de73c439698e34e3c420b22c064f224",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -33,12 +33,7 @@ def make_utxo(node, amount, confirmed=True, scriptPubKey=DUMMY_P2WPKH_SCRIPT):\n     txid = node.sendtoaddress(new_addr, satoshi_round((amount+fee)/COIN))\n     tx1 = node.getrawtransaction(txid, 1)\n     txid = int(txid, 16)\n-    i = None\n-\n-    for i, txout in enumerate(tx1['vout']):\n-        if txout['scriptPubKey']['addresses'] == [new_addr]:\n-            break\n-    assert i is not None\n+    i, _ = next(filter(lambda vout: new_addr == vout[1]['scriptPubKey']['address'], enumerate(tx1['vout'])))\n \n     tx2 = CTransaction()\n     tx2.vin = [CTxIn(COutPoint(txid, i))]"
      },
      {
        "sha": "ad8767556b98c298ff9e2e2e78143967aa13ab3f",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -523,7 +523,7 @@ def run_test(self):\n         v1_addr = program_to_witness(1, [3, 5])\n         v1_tx = self.nodes[0].createrawtransaction([getutxo(spendable_txid[0])], {v1_addr: 1})\n         v1_decoded = self.nodes[1].decoderawtransaction(v1_tx)\n-        assert_equal(v1_decoded['vout'][0]['scriptPubKey']['addresses'][0], v1_addr)\n+        assert_equal(v1_decoded['vout'][0]['scriptPubKey']['address'], v1_addr)\n         assert_equal(v1_decoded['vout'][0]['scriptPubKey']['hex'], \"51020305\")\n \n         # Check that spendable outputs are really spendable"
      },
      {
        "sha": "920e6f2952ba832a66fd46d387932a0e25d07128",
        "filename": "test/functional/mempool_package_onemore.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/mempool_package_onemore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/mempool_package_onemore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_package_onemore.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -80,7 +80,7 @@ def run_test(self):\n         self.chain_transaction(self.nodes[0], [second_chain], [0], second_chain_value, fee, 1)\n \n         # Make sure we can RBF the chain which used our carve-out rule\n-        second_tx_outputs = {self.nodes[0].getrawtransaction(replacable_txid, True)[\"vout\"][0]['scriptPubKey']['addresses'][0]: replacable_orig_value - (Decimal(1) / Decimal(100))}\n+        second_tx_outputs = {self.nodes[0].getrawtransaction(replacable_txid, True)[\"vout\"][0]['scriptPubKey']['address']: replacable_orig_value - (Decimal(1) / Decimal(100))}\n         second_tx = self.nodes[0].createrawtransaction([{'txid': chain[0][0], 'vout': 1}], second_tx_outputs)\n         signed_second_tx = self.nodes[0].signrawtransactionwithwallet(second_tx)\n         self.nodes[0].sendrawtransaction(signed_second_tx['hex'])"
      },
      {
        "sha": "b49aa80721fc22d22cb87c31aae050cfef749e63",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -125,7 +125,7 @@ def test_msg_mempool(self):\n         filter_peer = P2PBloomFilter()\n \n         self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['address']\n         txid = self.nodes[0].sendtoaddress(filter_address, 90)\n \n         self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n@@ -137,7 +137,7 @@ def test_msg_mempool(self):\n     def test_frelay_false(self, filter_peer):\n         self.log.info(\"Check that a node with fRelay set to false does not receive invs until the filter is set\")\n         filter_peer.tx_received = False\n-        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['address']\n         self.nodes[0].sendtoaddress(filter_address, 90)\n         # Sync to make sure the reason filter_peer doesn't receive the tx is not p2p delays\n         filter_peer.sync_with_ping()\n@@ -151,7 +151,7 @@ def test_filter(self, filter_peer):\n         filter_peer.send_and_ping(filter_peer.watch_filter_init)\n         # If fRelay is not already True, sending filterload sets it to True\n         assert self.nodes[0].getpeerinfo()[0]['relaytxes']\n-        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['addresses'][0]\n+        filter_address = self.nodes[0].decodescript(filter_peer.watch_script_pubkey)['address']\n \n         self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n         block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]"
      },
      {
        "sha": "49c88fc24456512c72d12b6ecdad95945e87a6ad",
        "filename": "test/functional/rpc_createmultisig.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_createmultisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_createmultisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_createmultisig.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -165,7 +165,7 @@ def do_multisig(self):\n         txid = node0.sendtoaddress(madd, 40)\n \n         tx = node0.getrawtransaction(txid, True)\n-        vout = [v[\"n\"] for v in tx[\"vout\"] if madd in v[\"scriptPubKey\"].get(\"addresses\", [])]\n+        vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n         assert len(vout) == 1\n         vout = vout[0]\n         scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]"
      },
      {
        "sha": "cb41a6a0ff5790e76c4e9c3de0b6b3133428c971",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -246,7 +246,7 @@ def test_valid_change_address(self):\n         rawtxfund = self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': change, 'changePosition': 0})\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n         out = dec_tx['vout'][0]\n-        assert_equal(change, out['scriptPubKey']['addresses'][0])\n+        assert_equal(change, out['scriptPubKey']['address'])\n \n     def test_change_type(self):\n         self.log.info(\"Test fundrawtxn with a provided change type\")\n@@ -286,7 +286,7 @@ def test_coin_selection(self):\n         matchingOuts = 0\n         for i, out in enumerate(dec_tx['vout']):\n             totalOut += out['value']\n-            if out['scriptPubKey']['addresses'][0] in outputs:\n+            if out['scriptPubKey']['address'] in outputs:\n                 matchingOuts+=1\n             else:\n                 assert_equal(i, rawtxfund['changepos'])\n@@ -317,7 +317,7 @@ def test_two_vin(self):\n         matchingOuts = 0\n         for out in dec_tx['vout']:\n             totalOut += out['value']\n-            if out['scriptPubKey']['addresses'][0] in outputs:\n+            if out['scriptPubKey']['address'] in outputs:\n                 matchingOuts+=1\n \n         assert_equal(matchingOuts, 1)\n@@ -351,7 +351,7 @@ def test_two_vin_two_vout(self):\n         matchingOuts = 0\n         for out in dec_tx['vout']:\n             totalOut += out['value']\n-            if out['scriptPubKey']['addresses'][0] in outputs:\n+            if out['scriptPubKey']['address'] in outputs:\n                 matchingOuts+=1\n \n         assert_equal(matchingOuts, 2)\n@@ -800,7 +800,7 @@ def test_address_reuse(self):\n         changeaddress = \"\"\n         for out in res_dec['vout']:\n             if out['value'] > 1.0:\n-                changeaddress += out['scriptPubKey']['addresses'][0]\n+                changeaddress += out['scriptPubKey']['address']\n         assert changeaddress != \"\"\n         nextaddr = self.nodes[3].getnewaddress()\n         # Now the change address key should be removed from the keypool."
      },
      {
        "sha": "742441648442923e7eb89c69a4be4f6392649ae9",
        "filename": "test/functional/rpc_generateblock.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_generateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_generateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_generateblock.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -27,29 +27,29 @@ def run_test(self):\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n         assert_equal(len(block['tx']), 1)\n-        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)\n+        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['address'], address)\n \n         self.log.info('Generate an empty block to a descriptor')\n         hash = node.generateblock('addr(' + address + ')', [])['hash']\n         block = node.getblock(blockhash=hash, verbosity=2)\n         assert_equal(len(block['tx']), 1)\n-        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)\n+        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['address'], address)\n \n         self.log.info('Generate an empty block to a combo descriptor with compressed pubkey')\n         combo_key = '0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'\n         combo_address = 'bcrt1qw508d6qejxtdg4y5r3zarvary0c5xw7kygt080'\n         hash = node.generateblock('combo(' + combo_key + ')', [])['hash']\n         block = node.getblock(hash, 2)\n         assert_equal(len(block['tx']), 1)\n-        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n+        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['address'], combo_address)\n \n         self.log.info('Generate an empty block to a combo descriptor with uncompressed pubkey')\n         combo_key = '0408ef68c46d20596cc3f6ddf7c8794f71913add807f1dc55949fa805d764d191c0b7ce6894c126fce0babc6663042f3dde9b0cf76467ea315514e5a6731149c67'\n         combo_address = 'mkc9STceoCcjoXEXe6cm66iJbmjM6zR9B2'\n         hash = node.generateblock('combo(' + combo_key + ')', [])['hash']\n         block = node.getblock(hash, 2)\n         assert_equal(len(block['tx']), 1)\n-        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n+        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['address'], combo_address)\n \n         # Generate 110 blocks to spend\n         node.generatetoaddress(110, address)"
      },
      {
        "sha": "18c0f2c66b118b0e1a80dd7d8f126aa9e81bf559",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -159,17 +159,17 @@ def run_test(self):\n         p2sh_p2wpkh_pos = -1\n         decoded = self.nodes[0].decoderawtransaction(signed_tx)\n         for out in decoded['vout']:\n-            if out['scriptPubKey']['addresses'][0] == p2sh:\n+            if out['scriptPubKey']['address'] == p2sh:\n                 p2sh_pos = out['n']\n-            elif out['scriptPubKey']['addresses'][0] == p2wsh:\n+            elif out['scriptPubKey']['address'] == p2wsh:\n                 p2wsh_pos = out['n']\n-            elif out['scriptPubKey']['addresses'][0] == p2wpkh:\n+            elif out['scriptPubKey']['address'] == p2wpkh:\n                 p2wpkh_pos = out['n']\n-            elif out['scriptPubKey']['addresses'][0] == p2sh_p2wsh:\n+            elif out['scriptPubKey']['address'] == p2sh_p2wsh:\n                 p2sh_p2wsh_pos = out['n']\n-            elif out['scriptPubKey']['addresses'][0] == p2sh_p2wpkh:\n+            elif out['scriptPubKey']['address'] == p2sh_p2wpkh:\n                 p2sh_p2wpkh_pos = out['n']\n-            elif out['scriptPubKey']['addresses'][0] == p2pkh:\n+            elif out['scriptPubKey']['address'] == p2pkh:\n                 p2pkh_pos = out['n']\n \n         inputs = [{\"txid\": txid, \"vout\": p2wpkh_pos}, {\"txid\": txid, \"vout\": p2sh_p2wpkh_pos}, {\"txid\": txid, \"vout\": p2pkh_pos}]"
      },
      {
        "sha": "7ebb06cb6be62b9ba083782125b75a1242955922",
        "filename": "test/functional/rpc_reqsigs_deprecation.py",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_reqsigs_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/rpc_reqsigs_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_reqsigs_deprecation.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -0,0 +1,58 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of reqSigs and addresses RPC fields.\"\"\"\n+\n+from io import BytesIO\n+\n+from test_framework.messages import CTransaction\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    hex_str_to_bytes\n+)\n+\n+\n+class ReqSigsDeprecationTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[], [\"-deprecatedrpc=reqSigs\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_reqsigs_deprecation()\n+\n+    def test_reqsigs_deprecation(self):\n+        node = self.nodes[0]\n+        coin = node.listunspent().pop()\n+\n+        inputs = [{'txid': coin['txid'], 'vout': coin['vout']}]\n+        outputs = {node.getnewaddress(): 0.99}\n+        raw = node.createrawtransaction(inputs, outputs)\n+        signed = node.signrawtransactionwithwallet(raw)['hex']\n+\n+        # This transaction is derived from test/util/data/txcreatemultisig1.json\n+        tx = CTransaction()\n+        tx.deserialize(BytesIO(hex_str_to_bytes(signed)))\n+        tx.vout[0].scriptPubKey = hex_str_to_bytes(\"522102a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff39721021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d2102df2089105c77f266fa11a9d33f05c735234075f2e8780824c6b709415f9fb48553ae\")\n+        tx_signed = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n+        txid = node.sendrawtransaction(hexstring=tx_signed, maxfeerate=0)\n+\n+        self.log.info(\"Test RPCResult scriptPubKey no longer returns the fields addresses or reqSigs by default\")\n+        hash = node.generateblock(output=node.getnewaddress(), transactions=[txid])['hash']\n+        # Ensure both nodes have the newly generated block on disk.\n+        self.sync_blocks()\n+        script_pub_key = node.getblock(blockhash=hash, verbose=2)['tx'][-1]['vout'][0]['scriptPubKey']\n+        assert 'addresses' not in script_pub_key and 'reqSigs' not in script_pub_key\n+\n+        self.log.info(\"Test RPCResult scriptPubKey returns the addresses field with -deprecatedrpc=reqSigs\")\n+        script_pub_key = self.nodes[1].getblock(blockhash=hash, verbose=2)['tx'][-1]['vout'][0]['scriptPubKey']\n+        assert_equal(script_pub_key['addresses'], ['mvKDK6D54HU8wQumJBLHY95eq5iHFqXSBz', 'mv3rHCQSwKp2BLSuMHD8uCS32LW5xiNAA5', 'mirrsyhAQYzo5CwVhcaYJKwUJu1WJRCRJe'])\n+        assert_equal(script_pub_key['reqSigs'], 2)\n+\n+\n+if __name__ == \"__main__\":\n+    ReqSigsDeprecationTest().main()"
      },
      {
        "sha": "22c7e10083cfa0edc76c04c689f75c343f91bd85",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -534,7 +534,7 @@ def find_vout_for_address(node, txid, addr):\n     \"\"\"\n     tx = node.getrawtransaction(txid, True)\n     for i in range(len(tx[\"vout\"])):\n-        if any([addr == a for a in tx[\"vout\"][i][\"scriptPubKey\"][\"addresses\"]]):\n+        if addr == tx[\"vout\"][i][\"scriptPubKey\"][\"address\"]:\n             return i\n     raise RuntimeError(\"Vout not found for address: txid=%s, addr=%s\" % (txid, addr))\n "
      },
      {
        "sha": "c711656508ff122e72c38790bcff8649e5e82c9b",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -280,6 +280,7 @@\n     'feature_settings.py',\n     'rpc_getdescriptorinfo.py',\n     'rpc_getpeerinfo_deprecation.py',\n+    'rpc_reqsigs_deprecation.py',\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',"
      },
      {
        "sha": "fc7d79bb7ea1833163c36f47a8384e09289b05b3",
        "filename": "test/functional/wallet_address_types.py",
        "status": "modified",
        "additions": 7,
        "deletions": 16,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_address_types.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_address_types.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_address_types.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -125,7 +125,6 @@ def test_address(self, node, address, multisig, typ):\n             assert info['isscript']\n             assert_equal(info['script'], 'multisig')\n             assert not info['iswitness']\n-            assert 'pubkeys' in info\n         elif typ == 'p2sh-segwit':\n             # P2SH-P2WSH-multisig\n             assert info['isscript']\n@@ -136,15 +135,13 @@ def test_address(self, node, address, multisig, typ):\n             assert info['embedded']['iswitness']\n             assert_equal(info['embedded']['witness_version'], 0)\n             assert_equal(len(info['embedded']['witness_program']), 64)\n-            assert 'pubkeys' in info['embedded']\n         elif typ == 'bech32':\n             # P2WSH-multisig\n             assert info['isscript']\n             assert_equal(info['script'], 'multisig')\n             assert info['iswitness']\n             assert_equal(info['witness_version'], 0)\n             assert_equal(len(info['witness_program']), 64)\n-            assert 'pubkeys' in info\n         else:\n             # Unknown type\n             assert False\n@@ -179,24 +176,17 @@ def test_desc(self, node, address, multisig, typ, utxo):\n         assert info['desc'] == self.nodes[0].getdescriptorinfo(info['desc'])['descriptor']\n         assert_equal(info['desc'][-8:], self.nodes[0].getdescriptorinfo(info['desc'])['checksum'])\n \n-        if not multisig and typ == 'legacy':\n+        if multisig:\n+            pass\n+        elif typ == 'legacy':\n             # P2PKH\n             assert_equal(info['desc'], descsum_create(\"pkh(%s)\" % key_descs[info['pubkey']]))\n-        elif not multisig and typ == 'p2sh-segwit':\n+        elif typ == 'p2sh-segwit':\n             # P2SH-P2WPKH\n             assert_equal(info['desc'], descsum_create(\"sh(wpkh(%s))\" % key_descs[info['pubkey']]))\n-        elif not multisig and typ == 'bech32':\n+        elif typ == 'bech32':\n             # P2WPKH\n             assert_equal(info['desc'], descsum_create(\"wpkh(%s)\" % key_descs[info['pubkey']]))\n-        elif typ == 'legacy':\n-            # P2SH-multisig\n-            assert_equal(info['desc'], descsum_create(\"sh(multi(2,%s,%s))\" % (key_descs[info['pubkeys'][0]], key_descs[info['pubkeys'][1]])))\n-        elif typ == 'p2sh-segwit':\n-            # P2SH-P2WSH-multisig\n-            assert_equal(info['desc'], descsum_create(\"sh(wsh(multi(2,%s,%s)))\" % (key_descs[info['embedded']['pubkeys'][0]], key_descs[info['embedded']['pubkeys'][1]])))\n-        elif typ == 'bech32':\n-            # P2WSH-multisig\n-            assert_equal(info['desc'], descsum_create(\"wsh(multi(2,%s,%s))\" % (key_descs[info['pubkeys'][0]], key_descs[info['pubkeys'][1]])))\n         else:\n             # Unknown type\n             assert False\n@@ -210,7 +200,7 @@ def test_change_output_type(self, node_sender, destinations, expected_type):\n         assert_equal(len(tx[\"vout\"]), len(destinations) + 1)\n \n         # Make sure the destinations are included, and remove them:\n-        output_addresses = [vout['scriptPubKey']['addresses'][0] for vout in tx[\"vout\"]]\n+        output_addresses = [vout['scriptPubKey']['address'] for vout in tx[\"vout\"]]\n         change_addresses = [d for d in output_addresses if d not in destinations]\n         assert_equal(len(change_addresses), 1)\n \n@@ -372,5 +362,6 @@ def run_test(self):\n         self.test_address(4, self.nodes[4].getrawchangeaddress(), multisig=False, typ='p2sh-segwit')\n         self.test_address(4, self.nodes[4].getrawchangeaddress('bech32'), multisig=False, typ='bech32')\n \n+\n if __name__ == '__main__':\n     AddressTypeTest().main()"
      },
      {
        "sha": "7c01208f53d3baec69b8061c3ed768b842df645a",
        "filename": "test/functional/wallet_avoidreuse.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_avoidreuse.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -254,7 +254,7 @@ def test_sending_from_reused_address_fails(self, second_addr_type):\n             if second_addr_type == \"p2sh-segwit\":\n                 new_fundaddr = fund_decoded[\"segwit\"][\"p2sh-segwit\"]\n             elif second_addr_type == \"bech32\":\n-                new_fundaddr = fund_decoded[\"segwit\"][\"addresses\"][0]\n+                new_fundaddr = fund_decoded[\"segwit\"][\"address\"]\n             else:\n                 new_fundaddr = fundaddr\n                 assert_equal(second_addr_type, \"legacy\")"
      },
      {
        "sha": "0891b3af6e36a4da89819ba410180320e09b428b",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -600,7 +600,7 @@ def run_test(self):\n         destination = self.nodes[1].getnewaddress()\n         txid = self.nodes[0].sendtoaddress(destination, 0.123)\n         tx = self.nodes[0].decoderawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n-        output_addresses = [vout['scriptPubKey']['addresses'][0] for vout in tx[\"vout\"]]\n+        output_addresses = [vout['scriptPubKey']['address'] for vout in tx[\"vout\"]]\n         assert len(output_addresses) > 1\n         for address in output_addresses:\n             ischange = self.nodes[0].getaddressinfo(address)['ischange']"
      },
      {
        "sha": "550c331c71b53a1aebf0b8d6632e5a3c273dac26",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -532,7 +532,7 @@ def test_change_script_match(self, rbf_node, dest_address):\n \n     def get_change_address(tx):\n         tx_details = rbf_node.getrawtransaction(tx, 1)\n-        txout_addresses = [txout['scriptPubKey']['addresses'][0] for txout in tx_details[\"vout\"]]\n+        txout_addresses = [txout['scriptPubKey']['address'] for txout in tx_details[\"vout\"]]\n         return [address for address in txout_addresses if rbf_node.getaddressinfo(address)[\"ischange\"]]\n \n     # Check that there is only one change output"
      },
      {
        "sha": "23d132df414a142818e661c9a2a956acce8d9cae",
        "filename": "test/functional/wallet_hd.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_hd.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -132,7 +132,7 @@ def run_test(self):\n         keypath = \"\"\n         for out in outs:\n             if out['value'] != 1:\n-                keypath = self.nodes[1].getaddressinfo(out['scriptPubKey']['addresses'][0])['hdkeypath']\n+                keypath = self.nodes[1].getaddressinfo(out['scriptPubKey']['address'])['hdkeypath']\n \n         if self.options.descriptors:\n             assert_equal(keypath[0:14], \"m/84'/1'/0'/1/\")"
      },
      {
        "sha": "344a9ea691d0acd823043f31ef5341b0e9077441",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -497,8 +497,7 @@ def run_test(self):\n         test_address(self.nodes[1],\n                      multisig.p2sh_addr,\n                      solvable=True,\n-                     ismine=True,\n-                     sigsrequired=2)\n+                     ismine=True)\n \n         # P2SH-P2WPKH address with no redeemscript or public or private key\n         key = get_key(self.nodes[0])"
      },
      {
        "sha": "46afefe0b34890cf7baf2d22d135c9d2fa6f1fb5",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -342,10 +342,10 @@ def run_test(self):\n         assert res[\"complete\"]\n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=False, change_address=change_address, change_position=0)\n         assert res[\"complete\"]\n-        assert_equal(self.nodes[0].decodepsbt(res[\"psbt\"])[\"tx\"][\"vout\"][0][\"scriptPubKey\"][\"addresses\"], [change_address])\n+        assert_equal(self.nodes[0].decodepsbt(res[\"psbt\"])[\"tx\"][\"vout\"][0][\"scriptPubKey\"][\"address\"], change_address)\n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=False, change_type=\"legacy\", change_position=0)\n         assert res[\"complete\"]\n-        change_address = self.nodes[0].decodepsbt(res[\"psbt\"])[\"tx\"][\"vout\"][0][\"scriptPubKey\"][\"addresses\"][0]\n+        change_address = self.nodes[0].decodepsbt(res[\"psbt\"])[\"tx\"][\"vout\"][0][\"scriptPubKey\"][\"address\"]\n         assert change_address[0] == \"m\" or change_address[0] == \"n\"\n \n         self.log.info(\"Set lock time...\")"
      },
      {
        "sha": "644f0a43fbfa256e2078c16004605ec14a670c15",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -65,8 +65,8 @@ def run_test(self):\n         # Construct a clone of tx1, to be malleated\n         rawtx1 = self.nodes[0].getrawtransaction(txid1, 1)\n         clone_inputs = [{\"txid\": rawtx1[\"vin\"][0][\"txid\"], \"vout\": rawtx1[\"vin\"][0][\"vout\"], \"sequence\": rawtx1[\"vin\"][0][\"sequence\"]}]\n-        clone_outputs = {rawtx1[\"vout\"][0][\"scriptPubKey\"][\"addresses\"][0]: rawtx1[\"vout\"][0][\"value\"],\n-                         rawtx1[\"vout\"][1][\"scriptPubKey\"][\"addresses\"][0]: rawtx1[\"vout\"][1][\"value\"]}\n+        clone_outputs = {rawtx1[\"vout\"][0][\"scriptPubKey\"][\"address\"]: rawtx1[\"vout\"][0][\"value\"],\n+                         rawtx1[\"vout\"][1][\"scriptPubKey\"][\"address\"]: rawtx1[\"vout\"][1][\"value\"]}\n         clone_locktime = rawtx1[\"locktime\"]\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n "
      },
      {
        "sha": "487d6874abf9e2d5cece9511940ef9a422b6c28b",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -20,6 +20,7 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"txmempool -> validation -> txmempool\"\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n+    \"core_io -> rpc/server -> rpc/util -> node/coinstats -> validation -> signet -> core_io\"\n )\n \n EXIT_CODE=0"
      },
      {
        "sha": "c5b9f6df01e1f2b7b27779792b3acd3ba10fb37a",
        "filename": "test/util/data/tt-delin1-out.json",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/tt-delin1-out.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/tt-delin1-out.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/tt-delin1-out.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -195,11 +195,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 8fd139bb39ced713f231c58a4d07bf6954d1c201 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9148fd139bb39ced713f231c58a4d07bf6954d1c20188ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"1E7SGgAZFCHDnVZLuRViX3gUmxpMfdvd2o\"\n-                ]\n+                \"address\": \"1E7SGgAZFCHDnVZLuRViX3gUmxpMfdvd2o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         },\n         {\n@@ -208,11 +205,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 6c772e9cf96371bba3da8cb733da70a2fcf20078 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9146c772e9cf96371bba3da8cb733da70a2fcf2007888ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"1AtWkdmfmYkErU16d3KYykJUbEp9MAj9Sb\"\n-                ]\n+                \"address\": \"1AtWkdmfmYkErU16d3KYykJUbEp9MAj9Sb\",\n+                \"type\": \"pubkeyhash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "38634164309b2c33048a8aa73ecf82f92d69487c",
        "filename": "test/util/data/tt-delout1-out.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/tt-delout1-out.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/tt-delout1-out.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/tt-delout1-out.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -204,11 +204,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 8fd139bb39ced713f231c58a4d07bf6954d1c201 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9148fd139bb39ced713f231c58a4d07bf6954d1c20188ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"1E7SGgAZFCHDnVZLuRViX3gUmxpMfdvd2o\"\n-                ]\n+                \"address\": \"1E7SGgAZFCHDnVZLuRViX3gUmxpMfdvd2o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "62e785f7d08550223ebfc2b9f584b4d3d09c12d8",
        "filename": "test/util/data/tt-locktime317000-out.json",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/tt-locktime317000-out.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/tt-locktime317000-out.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/tt-locktime317000-out.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -204,11 +204,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 8fd139bb39ced713f231c58a4d07bf6954d1c201 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9148fd139bb39ced713f231c58a4d07bf6954d1c20188ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"1E7SGgAZFCHDnVZLuRViX3gUmxpMfdvd2o\"\n-                ]\n+                \"address\": \"1E7SGgAZFCHDnVZLuRViX3gUmxpMfdvd2o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         },\n         {\n@@ -217,11 +214,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 6c772e9cf96371bba3da8cb733da70a2fcf20078 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9146c772e9cf96371bba3da8cb733da70a2fcf2007888ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"1AtWkdmfmYkErU16d3KYykJUbEp9MAj9Sb\"\n-                ]\n+                \"address\": \"1AtWkdmfmYkErU16d3KYykJUbEp9MAj9Sb\",\n+                \"type\": \"pubkeyhash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "96d77ef273194fe1e2dd8021a8b31f0a675acc09",
        "filename": "test/util/data/txcreate1.json",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreate1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreate1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreate1.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -42,11 +42,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 1fc11f39be1729bf973a7ab6a615ca4729d64574 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9141fc11f39be1729bf973a7ab6a615ca4729d6457488ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\"\n-                ]\n+                \"address\": \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         },\n         {\n@@ -55,11 +52,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 f2d4db28cad6502226ee484ae24505c2885cb12d OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a914f2d4db28cad6502226ee484ae24505c2885cb12d88ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"1P8yWvZW8jVihP1bzHeqfE4aoXNX8AVa46\"\n-                ]\n+                \"address\": \"1P8yWvZW8jVihP1bzHeqfE4aoXNX8AVa46\",\n+                \"type\": \"pubkeyhash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "87fc7e9cf740f4814fea5f7d1646a36cee9be100",
        "filename": "test/util/data/txcreatedata1.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatedata1.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -24,11 +24,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 1fc11f39be1729bf973a7ab6a615ca4729d64574 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9141fc11f39be1729bf973a7ab6a615ca4729d6457488ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\"\n-                ]\n+                \"address\": \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         },\n         {"
      },
      {
        "sha": "d03b1c8244729f2360af60ca2a0d819762bf11c7",
        "filename": "test/util/data/txcreatedata2.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatedata2.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -24,11 +24,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 1fc11f39be1729bf973a7ab6a615ca4729d64574 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9141fc11f39be1729bf973a7ab6a615ca4729d6457488ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\"\n-                ]\n+                \"address\": \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         },\n         {"
      },
      {
        "sha": "8a123f1ba876587219934bbe04f274e273001e55",
        "filename": "test/util/data/txcreatedata_seq0.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata_seq0.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata_seq0.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatedata_seq0.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -24,11 +24,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 1fc11f39be1729bf973a7ab6a615ca4729d64574 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9141fc11f39be1729bf973a7ab6a615ca4729d6457488ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\"\n-                ]\n+                \"address\": \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "006fd7259ff2f0322a3886b38f98b8e5550ba33f",
        "filename": "test/util/data/txcreatedata_seq1.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata_seq1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatedata_seq1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatedata_seq1.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -33,11 +33,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 1fc11f39be1729bf973a7ab6a615ca4729d64574 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9141fc11f39be1729bf973a7ab6a615ca4729d6457488ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\"\n-                ]\n+                \"address\": \"13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\",\n+                \"type\": \"pubkeyhash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "baa290c2b14199b29fb28efe1658667083e788ef",
        "filename": "test/util/data/txcreatemultisig1.json",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatemultisig1.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,13 +15,7 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"2 02a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff397 021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d 02df2089105c77f266fa11a9d33f05c735234075f2e8780824c6b709415f9fb485 3 OP_CHECKMULTISIG\",\n                 \"hex\": \"522102a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff39721021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d2102df2089105c77f266fa11a9d33f05c735234075f2e8780824c6b709415f9fb48553ae\",\n-                \"reqSigs\": 2,\n-                \"type\": \"multisig\",\n-                \"addresses\": [\n-                    \"1FoG2386FG2tAJS9acMuiDsKy67aGg9MKz\",\n-                    \"1FXtz9KU8JNmQDyHdiEm5HDiALuP3zdHvV\",\n-                    \"14LuavcBbXZYJ6Tsz3cAUQj9SuQoL2xCQX\"\n-                ]\n+                \"type\": \"multisig\"\n             }\n         }\n     ],"
      },
      {
        "sha": "66855125875729afc170cd83ecc26c68b084e091",
        "filename": "test/util/data/txcreatemultisig2.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatemultisig2.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_HASH160 1c6fbaf46d64221e80cbae182c33ddf81b9294ac OP_EQUAL\",\n                 \"hex\": \"a9141c6fbaf46d64221e80cbae182c33ddf81b9294ac87\",\n-                \"reqSigs\": 1,\n-                \"type\": \"scripthash\",\n-                \"addresses\": [\n-                    \"34HNh57oBCRKkxNyjTuWAJkTbuGh6jg2Ms\"\n-                ]\n+                \"address\": \"34HNh57oBCRKkxNyjTuWAJkTbuGh6jg2Ms\",\n+                \"type\": \"scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "be96f4c704f0a036537cc0b98b3d10a5fad3b2ae",
        "filename": "test/util/data/txcreatemultisig3.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatemultisig3.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"0 e15a86a23178f433d514dbbce042e87d72662b8b5edcacfd2e37ab7a2d135f05\",\n                 \"hex\": \"0020e15a86a23178f433d514dbbce042e87d72662b8b5edcacfd2e37ab7a2d135f05\",\n-                \"reqSigs\": 1,\n-                \"type\": \"witness_v0_scripthash\",\n-                \"addresses\": [\n-                    \"bc1qu9dgdg330r6r84g5mw7wqshg04exv2uttmw2elfwx74h5tgntuzs44gyfg\"\n-                ]\n+                \"address\": \"bc1qu9dgdg330r6r84g5mw7wqshg04exv2uttmw2elfwx74h5tgntuzs44gyfg\",\n+                \"type\": \"witness_v0_scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "08831ecdcacb0b2fd0b9d7dd526de8bb39e2c1ab",
        "filename": "test/util/data/txcreatemultisig4.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig4.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig4.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatemultisig4.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_HASH160 6edf12858999f0dae74f9c692e6694ee3621b2ac OP_EQUAL\",\n                 \"hex\": \"a9146edf12858999f0dae74f9c692e6694ee3621b2ac87\",\n-                \"reqSigs\": 1,\n-                \"type\": \"scripthash\",\n-                \"addresses\": [\n-                    \"3BoFUz1StqcNcgUTZE5cC1eFhuYFzj3fGH\"\n-                ]\n+                \"address\": \"3BoFUz1StqcNcgUTZE5cC1eFhuYFzj3fGH\",\n+                \"type\": \"scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "93048cf26169e1e0a99ffc387cafe9a7737e74da",
        "filename": "test/util/data/txcreatemultisig5.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig5.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatemultisig5.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatemultisig5.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_HASH160 a4051c02398868af83f28f083208fae99a769263 OP_EQUAL\",\n                 \"hex\": \"a914a4051c02398868af83f28f083208fae99a76926387\",\n-                \"reqSigs\": 1,\n-                \"type\": \"scripthash\",\n-                \"addresses\": [\n-                    \"3GeGs1eHUxPz5YyuFe9WPpXid2UsUb5Jos\"\n-                ]\n+                \"address\": \"3GeGs1eHUxPz5YyuFe9WPpXid2UsUb5Jos\",\n+                \"type\": \"scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "52168a889bcb4a426d538d043ccd0f99f3d02a81",
        "filename": "test/util/data/txcreateoutpubkey2.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreateoutpubkey2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreateoutpubkey2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreateoutpubkey2.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"0 a2516e770582864a6a56ed21a102044e388c62e3\",\n                 \"hex\": \"0014a2516e770582864a6a56ed21a102044e388c62e3\",\n-                \"reqSigs\": 1,\n-                \"type\": \"witness_v0_keyhash\",\n-                \"addresses\": [\n-                    \"bc1q5fgkuac9s2ry56jka5s6zqsyfcugcchry5cwu0\"\n-                ]\n+                \"address\": \"bc1q5fgkuac9s2ry56jka5s6zqsyfcugcchry5cwu0\",\n+                \"type\": \"witness_v0_keyhash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "fce210f8a38384b0947c64e406c0cff82736fd5d",
        "filename": "test/util/data/txcreateoutpubkey3.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreateoutpubkey3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreateoutpubkey3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreateoutpubkey3.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_HASH160 a5ab14c9804d0d8bf02f1aea4e82780733ad0a83 OP_EQUAL\",\n                 \"hex\": \"a914a5ab14c9804d0d8bf02f1aea4e82780733ad0a8387\",\n-                \"reqSigs\": 1,\n-                \"type\": \"scripthash\",\n-                \"addresses\": [\n-                    \"3GnzN8FqgvYGYdhj8NW6UNxxVv3Uj1ApQn\"\n-                ]\n+                \"address\": \"3GnzN8FqgvYGYdhj8NW6UNxxVv3Uj1ApQn\",\n+                \"type\": \"scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "2cde70fdf755a6874eb19dbccd9bf899f78c6023",
        "filename": "test/util/data/txcreatescript2.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatescript2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatescript2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatescript2.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_HASH160 71ed53322d470bb96657deb786b94f97dd46fb15 OP_EQUAL\",\n                 \"hex\": \"a91471ed53322d470bb96657deb786b94f97dd46fb1587\",\n-                \"reqSigs\": 1,\n-                \"type\": \"scripthash\",\n-                \"addresses\": [\n-                    \"3C5QarEGh9feKbDJ3QbMf2YNjnMoiPDhNp\"\n-                ]\n+                \"address\": \"3C5QarEGh9feKbDJ3QbMf2YNjnMoiPDhNp\",\n+                \"type\": \"scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "7a282faf4fac9f1dc7c566e78c422dd10cdfca88",
        "filename": "test/util/data/txcreatescript3.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatescript3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatescript3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatescript3.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"0 0bfe935e70c321c7ca3afc75ce0d0ca2f98b5422e008bb31c00c6d7f1f1c0ad6\",\n                 \"hex\": \"00200bfe935e70c321c7ca3afc75ce0d0ca2f98b5422e008bb31c00c6d7f1f1c0ad6\",\n-                \"reqSigs\": 1,\n-                \"type\": \"witness_v0_scripthash\",\n-                \"addresses\": [\n-                    \"bc1qp0lfxhnscvsu0j36l36uurgv5tuck4pzuqytkvwqp3kh78cupttqyf705v\"\n-                ]\n+                \"address\": \"bc1qp0lfxhnscvsu0j36l36uurgv5tuck4pzuqytkvwqp3kh78cupttqyf705v\",\n+                \"type\": \"witness_v0_scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "298b37bb4a0e05a4c2a9f2681cae67d1a3064751",
        "filename": "test/util/data/txcreatescript4.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatescript4.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatescript4.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatescript4.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -15,11 +15,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_HASH160 6a2c482f4985f57e702f325816c90e3723ca81ae OP_EQUAL\",\n                 \"hex\": \"a9146a2c482f4985f57e702f325816c90e3723ca81ae87\",\n-                \"reqSigs\": 1,\n-                \"type\": \"scripthash\",\n-                \"addresses\": [\n-                    \"3BNQbeFeJJGMAyDxPwWPuqxPMrjsFLjk3f\"\n-                ]\n+                \"address\": \"3BNQbeFeJJGMAyDxPwWPuqxPMrjsFLjk3f\",\n+                \"type\": \"scripthash\"\n             }\n         }\n     ],"
      },
      {
        "sha": "ca5e003110377b306c652977a44b716ba169884b",
        "filename": "test/util/data/txcreatesignv1.json",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatesignv1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6932139c2688df5ce554a6b96d12356754b399e/test/util/data/txcreatesignv1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatesignv1.json?ref=d6932139c2688df5ce554a6b96d12356754b399e",
        "patch": "@@ -24,11 +24,8 @@\n             \"scriptPubKey\": {\n                 \"asm\": \"OP_DUP OP_HASH160 5834479edbbe0539b31ffd3a8f8ebadc2165ed01 OP_EQUALVERIFY OP_CHECKSIG\",\n                 \"hex\": \"76a9145834479edbbe0539b31ffd3a8f8ebadc2165ed0188ac\",\n-                \"reqSigs\": 1,\n-                \"type\": \"pubkeyhash\",\n-                \"addresses\": [\n-                    \"193P6LtvS4nCnkDvM9uXn1gsSRqh4aDAz7\"\n-                ]\n+                \"address\": \"193P6LtvS4nCnkDvM9uXn1gsSRqh4aDAz7\",\n+                \"type\": \"pubkeyhash\"\n             }\n         }\n     ],"
      }
    ]
  },
  {
    "sha": "340b9183b85b1c078c15a6244a299709aec04d9b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDBiOTE4M2I4NWIxYzA3OGMxNWE2MjQ0YTI5OTcwOWFlYzA0ZDli",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2020-12-26T15:37:41Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-12-26T15:37:41Z"
      },
      "message": "minor style fix to src/script/standard.cpp\n\nCo-authored-by: MarcoFalke <falkemarco@gmail.com>",
      "tree": {
        "sha": "f09177c4674090d4b0bcbb1de9c30b05c58d6f8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f09177c4674090d4b0bcbb1de9c30b05c58d6f8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/340b9183b85b1c078c15a6244a299709aec04d9b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf51jFCRBK7hj4Ov3rIwAAdHIIAE5SRRW+fRn/+Tjdd7zBej+0\nVmTODfptaB7AlqaF7RoL89+cwj4tP7QVEj38jHZRp9Z7nVMod0EwW3L4wZpqLacX\njkQqXe++oTP4VeK/mJu1AfjvZRlx2lp+hIuMZuHRp9t69lb4HSxtGfNycYEtclAW\n2iTVHSIAmx9fGa+KLoYJA8vNKOOGdJA4+rIPzdyfcxEAwO735EdIk1oU2H8C225P\nzbYCfI4Kniy/nm5qcPDkUBgdoOo8g40ZXU9JlnSyyKQ2sOnk0xlHJU1WfDG6t+h1\nk9Gy6DEV1Bucca5lBRI+mJVuM5V8si4f6R9xpdfMEynU4S6xqdJsVYz8XC8jC48=\n=l2yU\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f09177c4674090d4b0bcbb1de9c30b05c58d6f8f\nparent d6932139c2688df5ce554a6b96d12356754b399e\nauthor Michael Dietz <michael.dietz@waya.ai> 1608997061 -0600\ncommitter GitHub <noreply@github.com> 1608997061 -0600\n\nminor style fix to src/script/standard.cpp\n\nCo-authored-by: MarcoFalke <falkemarco@gmail.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/340b9183b85b1c078c15a6244a299709aec04d9b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/340b9183b85b1c078c15a6244a299709aec04d9b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/340b9183b85b1c078c15a6244a299709aec04d9b/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6932139c2688df5ce554a6b96d12356754b399e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6932139c2688df5ce554a6b96d12356754b399e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6932139c2688df5ce554a6b96d12356754b399e"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a0bdcda9b5024341f7c3c9aae8f011f71fea2f71",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/340b9183b85b1c078c15a6244a299709aec04d9b/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/340b9183b85b1c078c15a6244a299709aec04d9b/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=340b9183b85b1c078c15a6244a299709aec04d9b",
        "patch": "@@ -221,7 +221,8 @@ bool ExtractDestination(const CScript& scriptPubKey, TxoutType& whichType, CTxDe\n     return false;\n }\n \n-bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet) {\n+bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n+{\n     TxoutType type;\n     return ExtractDestination(scriptPubKey, type, addressRet);\n }"
      }
    ]
  },
  {
    "sha": "45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NWQ0MTFhMTNmNzk4YmU4ZDQ4ZTg3YmMzN2YxYzdiN2RiNGNjY2M5",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2020-12-26T19:40:00Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2020-12-26T19:59:21Z"
      },
      "message": "change how we check deprecatedrpc so we don't touch build system",
      "tree": {
        "sha": "be6e80cde11a41c10209565d6257c6724ab08b56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be6e80cde11a41c10209565d6257c6724ab08b56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAl/nlh0ACgkQc3/VzfHR\nRrlu2A/9H8fk3tLoUBV2tacjfi/F27OdBk9Lur//hDWW2QFuYLp6lhT7W2JLL3Zg\nJvKkVW0J4wDbAXDUYIkTZrh72POartuAe9GDTcLrVL8OjQa/WYEqa0R6FdjoSpJv\nuRY70ODlwIKjtCB66MgjIaoemREId0buwe7ZWRyZ/bWUmaodkXvIAxSawEy2FByr\nWGIAn5VrtUcQ2V9kNTXoYBK6uAFSsb1bsQBLWlZGoD5GgIkkpUtQPti8bYpryu75\nX5h10uxVufQw6kedPREK6NWuGVk3IbqN0LSzqBQROuADTh5LzNDaYXwK+e9xIQGA\nJAYgi6+EXXAIuWfP/rsPqUX5lqeth59paMDgCPvhCDxU2MVDBHAciSESVuSLiOXa\nx+C1Czl8BWnf9uP3EAA4dANVXSgQ/rJPJ3VhYyEV89lJDFG3vF8325/jbDsE9a92\ndB59D8COw6wt+LcsEjIHGVrcNiPDSvM0PI06l1+kOcWBXFW/3Jqp24b/+ZUhp3d0\nAWYy1ecvCxKlEj/UJZBCPfSiVGled3JIvGEEI9Lwrt9ytPAZ0k/nth+ime0Efonp\nKRfeISE2xUf9st1KjFbTvKIHKLGdOFfOHuJyQBv8v1/NGehNwBdVymfDlM2PUA9j\nwW6IfD+uEk/e0Su8sLlOEAWLBahsj8i1Evi15DZxdchtHqDfouY=\n=+fXt\n-----END PGP SIGNATURE-----",
        "payload": "tree be6e80cde11a41c10209565d6257c6724ab08b56\nparent 340b9183b85b1c078c15a6244a299709aec04d9b\nauthor Michael Dietz <michael.dietz@waya.ai> 1609011600 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1609012761 -0600\n\nchange how we check deprecatedrpc so we don't touch build system\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "340b9183b85b1c078c15a6244a299709aec04d9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/340b9183b85b1c078c15a6244a299709aec04d9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/340b9183b85b1c078c15a6244a299709aec04d9b"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4a080ef1fbdbc303e5ae32321094643dfcaca7a1",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
        "patch": "@@ -502,14 +502,12 @@ libbitcoin_common_a_SOURCES = \\\n   protocol.cpp \\\n   psbt.cpp \\\n   rpc/rawtransaction_util.cpp \\\n-  rpc/server.cpp \\\n   rpc/util.cpp \\\n   scheduler.cpp \\\n   script/descriptor.cpp \\\n   script/sign.cpp \\\n   script/signingprovider.cpp \\\n   script/standard.cpp \\\n-  shutdown.cpp \\\n   versionbitsinfo.cpp \\\n   warnings.cpp \\\n   $(BITCOIN_CORE_H)"
      },
      {
        "sha": "505c21e9ea2696ffeb1cb9688053561cf476cc7d",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
        "patch": "@@ -7,7 +7,6 @@\n #include <consensus/consensus.h>\n #include <consensus/validation.h>\n #include <key_io.h>\n-#include <rpc/server.h>\n #include <script/script.h>\n #include <script/standard.h>\n #include <serialize.h>\n@@ -161,7 +160,8 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fInclud\n         out.pushKV(\"hex\", HexStr(scriptPubKey));\n \n     // TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) this entire if statement should be removed\n-    if (IsDeprecatedRPCEnabled(\"reqSigs\")) { // cruft...\n+    const std::vector<std::string> enabled_methods = gArgs.GetArgs(\"-deprecatedrpc\");\n+    if (find(enabled_methods.begin(), enabled_methods.end(), \"reqSigs\") != enabled_methods.end()) {\n         std::vector<CTxDestination> addresses;\n         int nRequired;\n         if (ExtractDestinations(scriptPubKey, type, addresses, nRequired) && type != TxoutType::PUBKEY) {"
      },
      {
        "sha": "8de7222c7e014c1727adc710a8dfb982874eb4c6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
        "patch": "@@ -3660,6 +3660,7 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n         obj.pushKV(\"hex\", HexStr(subscript));\n \n         CTxDestination embedded;\n+        const std::vector<std::string> enabled_methods = gArgs.GetArgs(\"-deprecatedrpc\");\n         if (ExtractDestination(subscript, embedded)) {\n             // Only when the script corresponds to an address.\n             UniValue subobj(UniValue::VOBJ);\n@@ -3672,7 +3673,8 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n             // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n             if (subobj.exists(\"pubkey\")) obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n             obj.pushKV(\"embedded\", std::move(subobj));\n-        } else if (IsDeprecatedRPCEnabled(\"reqSigs\") && which_type == TxoutType::MULTISIG) {\n+        } else if (find(enabled_methods.begin(), enabled_methods.end(), \"reqSigs\") != enabled_methods.end() &&\n+                   which_type == TxoutType::MULTISIG) {\n             // TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) this entire else if statement should be removed\n             obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n             UniValue pubkeys(UniValue::VARR);"
      },
      {
        "sha": "c4ad00e954faeb16282a3e81f319d6863c1daf36",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
        "patch": "@@ -20,7 +20,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"txmempool -> validation -> txmempool\"\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n-    \"core_io -> rpc/server -> rpc/util -> node/coinstats -> validation -> signet -> core_io\"\n )\n \n EXIT_CODE=0"
      }
    ]
  },
  {
    "sha": "283701fdf56e5dfe431297f9fc45a88e1383be8a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODM3MDFmZGY1NmU1ZGZlNDMxMjk3ZjlmYzQ1YTg4ZTEzODNiZThh",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2020-12-26T16:47:30Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2020-12-26T20:00:34Z"
      },
      "message": "rpc: finalize deprecate addresses and reqSigs from rpc outputs",
      "tree": {
        "sha": "c0156a285ec8391dcc64ab57dfc0b4678ab6ddb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0156a285ec8391dcc64ab57dfc0b4678ab6ddb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/283701fdf56e5dfe431297f9fc45a88e1383be8a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAl/nlmIACgkQc3/VzfHR\nRrkyORAAv/0KkGY87pbhooEDQ/DKWNBFfF4LtSIEOnNBXt3gwU4QfD1tK03VB/K0\nJbT3Jhj2f+oEBNqFnpIx58A32fHrvqih4GmdBOSRBaKMx1zzOyFNlNzTDsQKjyHL\nUBBm77czMt6w9gQ1R8QY+dB5gZuEnpnv4s4TSciRPmXEmA49MrkS+gXxQKB07Wrt\n9kq47NmPYkK72z2vsLsFZo8kXwZe+GxtkSiB4G2BHHz/0+5A135kz8F6j1vfgyZS\nphdXB3lmSc0J8WlkovTW9OnHgATmyjYfPoxbm1ENLXM528/UXyD2ZZwgTRxsf726\nnJwY2hRhjUUBKMZFnST2sSkNwW/xjqU0gvzb46+pS+dWZO8CRiGFojXq6g2fiyzu\nFGBRvDu0g3BGa1SWGb30WAKfReF6jYmoIkMa+gIX7ldzfY5GxJNLqy+2aQ55LiqH\nkNL/9tNIKiuOFoyn6s5JGCMOKqM8MimOReIu+9l9ZU/zQ7YpIVhHcsD19HchMjPO\n0QELh5yo5+/g63qLumxGVo0Fe6iEpqeK+60oQWnvqrnB9dFZCxIZe0Q6NbHWD0Gm\n4V48UaNo0NenQhd5cBw5D8Pb9Db7r4Mxvk8btALWXXgjTbxgv2F3cs4eWFJSnERO\nx+pm5aA52mm0sUvHyp4wzKHiozW6pFhi8olwj4U6F9PrATfbn5M=\n=rNk5\n-----END PGP SIGNATURE-----",
        "payload": "tree c0156a285ec8391dcc64ab57dfc0b4678ab6ddb6\nparent 45d411a13f798be8d48e87bc37f1c7b7db4cccc9\nauthor Michael Dietz <michael.dietz@waya.ai> 1609001250 -0600\ncommitter Michael Dietz <michael.dietz@waya.ai> 1609012834 -0600\n\nrpc: finalize deprecate addresses and reqSigs from rpc outputs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/283701fdf56e5dfe431297f9fc45a88e1383be8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/283701fdf56e5dfe431297f9fc45a88e1383be8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/283701fdf56e5dfe431297f9fc45a88e1383be8a/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45d411a13f798be8d48e87bc37f1c7b7db4cccc9"
      }
    ],
    "stats": {
      "total": 242,
      "additions": 6,
      "deletions": 236
    },
    "files": [
      {
        "sha": "ce6a079f542c6a4d224e6cf36e587d29694b9080",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -159,20 +159,6 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fInclud\n     if (fIncludeHex)\n         out.pushKV(\"hex\", HexStr(scriptPubKey));\n \n-    // TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) this entire if statement should be removed\n-    const std::vector<std::string> enabled_methods = gArgs.GetArgs(\"-deprecatedrpc\");\n-    if (find(enabled_methods.begin(), enabled_methods.end(), \"reqSigs\") != enabled_methods.end()) {\n-        std::vector<CTxDestination> addresses;\n-        int nRequired;\n-        if (ExtractDestinations(scriptPubKey, type, addresses, nRequired) && type != TxoutType::PUBKEY) {\n-            out.pushKV(\"reqSigs\", nRequired);\n-            UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n-            out.pushKV(\"addresses\", a);\n-        }\n-    }\n     if (ExtractDestination(scriptPubKey, type, address) && type != TxoutType::PUBKEY) {\n         out.pushKV(\"address\", EncodeDestination(address));\n     }"
      },
      {
        "sha": "50f97743e6e30cd32c92f6f9eda85cc0c3ee0ef4",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -1114,10 +1114,8 @@ static RPCHelpMan gettxout()\n                             {\n                                 {RPCResult::Type::STR_HEX, \"asm\", \"\"},\n                                 {RPCResult::Type::STR_HEX, \"hex\", \"\"},\n-                                {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n                                 {RPCResult::Type::STR, \"type\", \"The type, eg pubkeyhash\"},\n-                                {RPCResult::Type::ARR, \"addresses\", \"array of bitcoin addresses\",\n-                                    {{RPCResult::Type::STR, \"address\", \"bitcoin address\"}}},\n+                                {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n                             }},\n                         {RPCResult::Type::BOOL, \"coinbase\", \"Coinbase or not\"},\n                     }},"
      },
      {
        "sha": "533769fb97212f35870599493eb597464ab1c9f1",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 15,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -132,12 +132,8 @@ static RPCHelpMan getrawtransaction()\n                                      {\n                                          {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                          {RPCResult::Type::STR, \"hex\", \"the hex\"},\n-                                         {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n                                          {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                         {RPCResult::Type::ARR, \"addresses\", \"\",\n-                                         {\n-                                             {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n-                                         }},\n+                                         {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n                                      }},\n                                  }},\n                              }},\n@@ -490,12 +486,8 @@ static RPCHelpMan decoderawtransaction()\n                                 {\n                                     {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                     {RPCResult::Type::STR_HEX, \"hex\", \"the hex\"},\n-                                    {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n                                     {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                    {RPCResult::Type::ARR, \"addresses\", \"\",\n-                                    {\n-                                        {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n-                                    }},\n+                                    {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n                                 }},\n                             }},\n                         }},\n@@ -548,11 +540,7 @@ static RPCHelpMan decodescript()\n                     {\n                         {RPCResult::Type::STR, \"asm\", \"Script public key\"},\n                         {RPCResult::Type::STR, \"type\", \"The output type (e.g. \"+GetAllOutputTypes()+\")\"},\n-                        {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Number of required signatures\"},\n-                        {RPCResult::Type::ARR, \"addresses\", \"\",\n-                        {\n-                            {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n-                        }},\n+                        {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n                         {RPCResult::Type::STR, \"p2sh\", \"address of P2SH script wrapping this redeem script (not returned if the script is already a P2SH)\"},\n                         {RPCResult::Type::OBJ, \"segwit\", \"Result of a witness script public key wrapping this redeem script (not returned if the script is a P2SH or witness)\",\n                         {"
      },
      {
        "sha": "b3820df8cdf098dce50d6ad6278e055da89f01d5",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -227,47 +227,6 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     return ExtractDestination(scriptPubKey, type, addressRet);\n }\n \n-// TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) \"ExtractDestinations\" should be removed\n-bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet)\n-{\n-    addressRet.clear();\n-    std::vector<valtype> vSolutions;\n-    typeRet = Solver(scriptPubKey, vSolutions);\n-    if (typeRet == TxoutType::NONSTANDARD) {\n-        return false;\n-    } else if (typeRet == TxoutType::NULL_DATA) {\n-        // This is data, not addresses\n-        return false;\n-    }\n-\n-    if (typeRet == TxoutType::MULTISIG)\n-    {\n-        nRequiredRet = vSolutions.front()[0];\n-        for (unsigned int i = 1; i < vSolutions.size()-1; i++)\n-        {\n-            CPubKey pubKey(vSolutions[i]);\n-            if (!pubKey.IsValid())\n-                continue;\n-\n-            CTxDestination address = PKHash(pubKey);\n-            addressRet.push_back(address);\n-        }\n-\n-        if (addressRet.empty())\n-            return false;\n-    }\n-    else\n-    {\n-        nRequiredRet = 1;\n-        CTxDestination address;\n-        if (!ExtractDestination(scriptPubKey, address))\n-           return false;\n-        addressRet.push_back(address);\n-    }\n-\n-    return true;\n-}\n-\n namespace\n {\n class CScriptVisitor : public boost::static_visitor<CScript>"
      },
      {
        "sha": "4fed309407680de155166c9655e5f6b48b9c2b04",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 17,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -233,28 +233,12 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n \n /**\n  * Parse a standard scriptPubKey for the destination address. Assigns result to\n- * the addressRet parameter and returns true if successful. For multisig\n- * scripts, instead use ExtractDestinations. Currently only works for P2PK,\n+ * the addressRet parameter and returns true if successful. Currently only works for P2PK,\n  * P2PKH, P2SH, P2WPKH, and P2WSH scripts.\n  */\n bool ExtractDestination(const CScript& scriptPubKey, TxoutType& typeRet, CTxDestination& addressRet);\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n \n-/**\n- * Parse a standard scriptPubKey with one or more destination addresses. For\n- * multisig scripts, this populates the addressRet vector with the pubkey IDs\n- * and nRequiredRet with the n required to spend. For other destinations,\n- * addressRet is populated with a single value and nRequiredRet is set to 1.\n- * Returns true if successful.\n- *\n- * Note: this function confuses destinations (a subset of CScripts that are\n- * encodable as an address) with key identifiers (of keys involved in a\n- * CScript), and its use should be phased out.\n- *\n- * TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) \"ExtractDestinations\" should be removed\n- */\n-bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);\n-\n /**\n  * Generate a Bitcoin scriptPubKey for the given CTxDestination. Returns a P2PKH\n  * script for a CKeyID destination, a P2SH script for a CScriptID, and an empty"
      },
      {
        "sha": "a300bcc0f742374bcb400da62d551e48f9449e1f",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -58,11 +58,6 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     CTxDestination address;\n     (void)ExtractDestination(script, address);\n \n-    TxoutType type_ret;\n-    std::vector<CTxDestination> addresses;\n-    int required_ret;\n-    (void)ExtractDestinations(script, type_ret, addresses, required_ret);\n-\n     const FlatSigningProvider signing_provider;\n     (void)InferDescriptor(script, signing_provider);\n "
      },
      {
        "sha": "274b309b8bd7096eedff227f9b0997ce60331535",
        "filename": "src/test/script_standard_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/test/script_standard_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/test/script_standard_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_standard_tests.cpp?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -238,72 +238,6 @@ BOOST_AUTO_TEST_CASE(script_standard_ExtractDestination)\n     BOOST_CHECK(boost::get<WitnessUnknown>(&address) && *boost::get<WitnessUnknown>(&address) == unk);\n }\n \n-BOOST_AUTO_TEST_CASE(script_standard_ExtractDestinations)\n-{\n-    CKey keys[3];\n-    CPubKey pubkeys[3];\n-    for (int i = 0; i < 3; i++) {\n-        keys[i].MakeNewKey(true);\n-        pubkeys[i] = keys[i].GetPubKey();\n-    }\n-\n-    CScript s;\n-    TxoutType whichType;\n-    std::vector<CTxDestination> addresses;\n-    int nRequired;\n-\n-    // TxoutType::PUBKEY\n-    s.clear();\n-    s << ToByteVector(pubkeys[0]) << OP_CHECKSIG;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::PUBKEY);\n-    BOOST_CHECK_EQUAL(addresses.size(), 1U);\n-    BOOST_CHECK_EQUAL(nRequired, 1);\n-    BOOST_CHECK(boost::get<PKHash>(&addresses[0]) &&\n-                *boost::get<PKHash>(&addresses[0]) == PKHash(pubkeys[0]));\n-\n-    // TxoutType::PUBKEYHASH\n-    s.clear();\n-    s << OP_DUP << OP_HASH160 << ToByteVector(pubkeys[0].GetID()) << OP_EQUALVERIFY << OP_CHECKSIG;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::PUBKEYHASH);\n-    BOOST_CHECK_EQUAL(addresses.size(), 1U);\n-    BOOST_CHECK_EQUAL(nRequired, 1);\n-    BOOST_CHECK(boost::get<PKHash>(&addresses[0]) &&\n-                *boost::get<PKHash>(&addresses[0]) == PKHash(pubkeys[0]));\n-\n-    // TxoutType::SCRIPTHASH\n-    CScript redeemScript(s); // initialize with leftover P2PKH script\n-    s.clear();\n-    s << OP_HASH160 << ToByteVector(CScriptID(redeemScript)) << OP_EQUAL;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::SCRIPTHASH);\n-    BOOST_CHECK_EQUAL(addresses.size(), 1U);\n-    BOOST_CHECK_EQUAL(nRequired, 1);\n-    BOOST_CHECK(boost::get<ScriptHash>(&addresses[0]) &&\n-                *boost::get<ScriptHash>(&addresses[0]) == ScriptHash(redeemScript));\n-\n-    // TxoutType::MULTISIG\n-    s.clear();\n-    s << OP_2 <<\n-        ToByteVector(pubkeys[0]) <<\n-        ToByteVector(pubkeys[1]) <<\n-        OP_2 << OP_CHECKMULTISIG;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::MULTISIG);\n-    BOOST_CHECK_EQUAL(addresses.size(), 2U);\n-    BOOST_CHECK_EQUAL(nRequired, 2);\n-    BOOST_CHECK(boost::get<PKHash>(&addresses[0]) &&\n-                *boost::get<PKHash>(&addresses[0]) == PKHash(pubkeys[0]));\n-    BOOST_CHECK(boost::get<PKHash>(&addresses[1]) &&\n-                *boost::get<PKHash>(&addresses[1]) == PKHash(pubkeys[1]));\n-\n-    // TxoutType::NULL_DATA\n-    s.clear();\n-    s << OP_RETURN << std::vector<unsigned char>({75});\n-    BOOST_CHECK(!ExtractDestinations(s, whichType, addresses, nRequired));\n-}\n-\n BOOST_AUTO_TEST_CASE(script_standard_GetScriptFor_)\n {\n     CKey keys[3];"
      },
      {
        "sha": "14fb6f9b37321d564b4dcf0ea83173073e9bce7b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 16,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -3660,7 +3660,6 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n         obj.pushKV(\"hex\", HexStr(subscript));\n \n         CTxDestination embedded;\n-        const std::vector<std::string> enabled_methods = gArgs.GetArgs(\"-deprecatedrpc\");\n         if (ExtractDestination(subscript, embedded)) {\n             // Only when the script corresponds to an address.\n             UniValue subobj(UniValue::VOBJ);\n@@ -3673,16 +3672,6 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n             // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n             if (subobj.exists(\"pubkey\")) obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n             obj.pushKV(\"embedded\", std::move(subobj));\n-        } else if (find(enabled_methods.begin(), enabled_methods.end(), \"reqSigs\") != enabled_methods.end() &&\n-                   which_type == TxoutType::MULTISIG) {\n-            // TODO: from v0.22 (\"addresses\" and \"reqSigs\" deprecated) this entire else if statement should be removed\n-            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n-            UniValue pubkeys(UniValue::VARR);\n-            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n-                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n-                pubkeys.push_back(HexStr(key));\n-            }\n-            obj.pushKV(\"pubkeys\", std::move(pubkeys));\n         }\n     }\n \n@@ -3790,11 +3779,7 @@ RPCHelpMan getaddressinfo()\n                                                                      \"types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash,\\n\"\n                             \"witness_v0_scripthash, witness_unknown.\"},\n                         {RPCResult::Type::STR_HEX, \"hex\", /* optional */ true, \"The redeemscript for the p2sh address.\"},\n-                        {RPCResult::Type::ARR, \"pubkeys\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) Array of pubkeys associated with the known redeemscript (only if script is multisig).\",\n-                        {\n-                            {RPCResult::Type::STR, \"pubkey\", \"\"},\n-                        }},\n-                        {RPCResult::Type::NUM, \"sigsrequired\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=reqSigs is passed) The number of signatures required to spend multisig output (only if script is multisig).\"},\n+                        {RPCResult::Type::STR, \"pubkey\", \"\"},\n                         {RPCResult::Type::STR_HEX, \"pubkey\", /* optional */ true, \"The hex value of the raw public key for single-key addresses (possibly embedded in P2SH or P2WSH).\"},\n                         {RPCResult::Type::OBJ, \"embedded\", /* optional */ true, \"Information about the address embedded in P2SH or P2WSH, if relevant and known.\",\n                         {"
      },
      {
        "sha": "7ebb06cb6be62b9ba083782125b75a1242955922",
        "filename": "test/functional/rpc_reqsigs_deprecation.py",
        "status": "removed",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/test/functional/rpc_reqsigs_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45d411a13f798be8d48e87bc37f1c7b7db4cccc9/test/functional/rpc_reqsigs_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_reqsigs_deprecation.py?ref=45d411a13f798be8d48e87bc37f1c7b7db4cccc9",
        "patch": "@@ -1,58 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test deprecation of reqSigs and addresses RPC fields.\"\"\"\n-\n-from io import BytesIO\n-\n-from test_framework.messages import CTransaction\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    assert_equal,\n-    hex_str_to_bytes\n-)\n-\n-\n-class ReqSigsDeprecationTest(BitcoinTestFramework):\n-    def set_test_params(self):\n-        self.num_nodes = 2\n-        self.extra_args = [[], [\"-deprecatedrpc=reqSigs\"]]\n-\n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n-    def run_test(self):\n-        self.test_reqsigs_deprecation()\n-\n-    def test_reqsigs_deprecation(self):\n-        node = self.nodes[0]\n-        coin = node.listunspent().pop()\n-\n-        inputs = [{'txid': coin['txid'], 'vout': coin['vout']}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        raw = node.createrawtransaction(inputs, outputs)\n-        signed = node.signrawtransactionwithwallet(raw)['hex']\n-\n-        # This transaction is derived from test/util/data/txcreatemultisig1.json\n-        tx = CTransaction()\n-        tx.deserialize(BytesIO(hex_str_to_bytes(signed)))\n-        tx.vout[0].scriptPubKey = hex_str_to_bytes(\"522102a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff39721021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d2102df2089105c77f266fa11a9d33f05c735234075f2e8780824c6b709415f9fb48553ae\")\n-        tx_signed = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid = node.sendrawtransaction(hexstring=tx_signed, maxfeerate=0)\n-\n-        self.log.info(\"Test RPCResult scriptPubKey no longer returns the fields addresses or reqSigs by default\")\n-        hash = node.generateblock(output=node.getnewaddress(), transactions=[txid])['hash']\n-        # Ensure both nodes have the newly generated block on disk.\n-        self.sync_blocks()\n-        script_pub_key = node.getblock(blockhash=hash, verbose=2)['tx'][-1]['vout'][0]['scriptPubKey']\n-        assert 'addresses' not in script_pub_key and 'reqSigs' not in script_pub_key\n-\n-        self.log.info(\"Test RPCResult scriptPubKey returns the addresses field with -deprecatedrpc=reqSigs\")\n-        script_pub_key = self.nodes[1].getblock(blockhash=hash, verbose=2)['tx'][-1]['vout'][0]['scriptPubKey']\n-        assert_equal(script_pub_key['addresses'], ['mvKDK6D54HU8wQumJBLHY95eq5iHFqXSBz', 'mv3rHCQSwKp2BLSuMHD8uCS32LW5xiNAA5', 'mirrsyhAQYzo5CwVhcaYJKwUJu1WJRCRJe'])\n-        assert_equal(script_pub_key['reqSigs'], 2)\n-\n-\n-if __name__ == \"__main__\":\n-    ReqSigsDeprecationTest().main()"
      },
      {
        "sha": "5b3db282e15a12c5013567fb8a767192c647fc1f",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283701fdf56e5dfe431297f9fc45a88e1383be8a/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283701fdf56e5dfe431297f9fc45a88e1383be8a/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=283701fdf56e5dfe431297f9fc45a88e1383be8a",
        "patch": "@@ -280,7 +280,6 @@\n     'feature_settings.py',\n     'rpc_getdescriptorinfo.py',\n     'rpc_getpeerinfo_deprecation.py',\n-    'rpc_reqsigs_deprecation.py',\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',"
      }
    ]
  }
]