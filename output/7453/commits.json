[
  {
    "sha": "5d743099b5fe77ba423110bea4f5dfd854fef3b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDc0MzA5OWI1ZmU3N2JhNDIzMTEwYmVhNGY1ZGZkODU0ZmVmM2Iy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-01-21T12:15:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-02-01T14:28:25Z"
      },
      "message": "Get rid of inaccurate ScriptSigArgsExpected\n\n(cherry picked from commit 52b29dca7670c3f6d2ab918c0fff1d17c4e494ad)",
      "tree": {
        "sha": "e1b1a23d1900150100a938c831bc5eebffa06aec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1b1a23d1900150100a938c831bc5eebffa06aec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d743099b5fe77ba423110bea4f5dfd854fef3b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d743099b5fe77ba423110bea4f5dfd854fef3b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d743099b5fe77ba423110bea4f5dfd854fef3b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d743099b5fe77ba423110bea4f5dfd854fef3b2/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "196ad6913ff57cd39caf0b262267e67c5a143467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/196ad6913ff57cd39caf0b262267e67c5a143467",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/196ad6913ff57cd39caf0b262267e67c5a143467"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 6,
      "deletions": 70
    },
    "files": [
      {
        "sha": "332abc430e1165a00f6e8f15c38e27ad3b6524cf",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 31,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=5d743099b5fe77ba423110bea4f5dfd854fef3b2",
        "patch": "@@ -132,45 +132,20 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         const CScript& prevScript = prev.scriptPubKey;\n         if (!Solver(prevScript, whichType, vSolutions))\n             return false;\n-        int nArgsExpected = ScriptSigArgsExpected(whichType, vSolutions);\n-        if (nArgsExpected < 0)\n-            return false;\n-\n-        // Transactions with extra stuff in their scriptSigs are\n-        // non-standard. Note that this EvalScript() call will\n-        // be quick, because if there are any operations\n-        // beside \"push data\" in the scriptSig\n-        // IsStandardTx() will have already returned false\n-        // and this method isn't called.\n-        std::vector<std::vector<unsigned char> > stack;\n-        if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker()))\n-            return false;\n \n         if (whichType == TX_SCRIPTHASH)\n         {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), 0))\n+                return false;\n             if (stack.empty())\n                 return false;\n             CScript subscript(stack.back().begin(), stack.back().end());\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            txnouttype whichType2;\n-            if (Solver(subscript, whichType2, vSolutions2))\n-            {\n-                int tmpExpected = ScriptSigArgsExpected(whichType2, vSolutions2);\n-                if (tmpExpected < 0)\n-                    return false;\n-                nArgsExpected += tmpExpected;\n-            }\n-            else\n-            {\n-                // Any other Script with less than 15 sigops OK:\n-                unsigned int sigops = subscript.GetSigOpCount(true);\n-                // ... extra data left on the stack after execution is OK, too:\n-                return (sigops <= MAX_P2SH_SIGOPS);\n+            if (subscript.GetSigOpCount(true) > MAX_P2SH_SIGOPS) {\n+                return false;\n             }\n         }\n-\n-        if (stack.size() != (unsigned int)nArgsExpected)\n-            return false;\n     }\n \n     return true;"
      },
      {
        "sha": "67b6af327ae378fa63acf5143c5a8d25c26c92a4",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=5d743099b5fe77ba423110bea4f5dfd854fef3b2",
        "patch": "@@ -161,27 +161,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n     return false;\n }\n \n-int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned char> >& vSolutions)\n-{\n-    switch (t)\n-    {\n-    case TX_NONSTANDARD:\n-    case TX_NULL_DATA:\n-        return -1;\n-    case TX_PUBKEY:\n-        return 1;\n-    case TX_PUBKEYHASH:\n-        return 2;\n-    case TX_MULTISIG:\n-        if (vSolutions.size() < 1 || vSolutions[0].size() < 1)\n-            return -1;\n-        return vSolutions[0][0] + 1;\n-    case TX_SCRIPTHASH:\n-        return 1; // doesn't include args needed by the script\n-    }\n-    return -1;\n-}\n-\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n {\n     vector<valtype> vSolutions;"
      },
      {
        "sha": "64bf010ec199ef4431322bea2f344e66dbc6c679",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=5d743099b5fe77ba423110bea4f5dfd854fef3b2",
        "patch": "@@ -71,7 +71,6 @@ typedef boost::variant<CNoDestination, CKeyID, CScriptID> CTxDestination;\n const char* GetTxnOutputType(txnouttype t);\n \n bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet);\n-int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned char> >& vSolutions);\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);\n "
      },
      {
        "sha": "28b85e8d290a7c921e15fdbf3e17765d8597d9b7",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=5d743099b5fe77ba423110bea4f5dfd854fef3b2",
        "patch": "@@ -346,15 +346,6 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n     // 22 P2SH sigops for all inputs (1 for vin[0], 6 for vin[3], 15 for vin[4]\n     BOOST_CHECK_EQUAL(GetP2SHSigOpCount(txTo, coins), 22U);\n \n-    // Make sure adding crap to the scriptSigs makes them non-standard:\n-    for (int i = 0; i < 3; i++)\n-    {\n-        CScript t = txTo.vin[i].scriptSig;\n-        txTo.vin[i].scriptSig = (CScript() << 11) + t;\n-        BOOST_CHECK(!::AreInputsStandard(txTo, coins));\n-        txTo.vin[i].scriptSig = t;\n-    }\n-\n     CMutableTransaction txToNonStd1;\n     txToNonStd1.vout.resize(1);\n     txToNonStd1.vout[0].scriptPubKey = GetScriptForDestination(key[1].GetPubKey().GetID());"
      },
      {
        "sha": "c27f194b551bbb738495bbbdce899db2259c5cf9",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d743099b5fe77ba423110bea4f5dfd854fef3b2/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=5d743099b5fe77ba423110bea4f5dfd854fef3b2",
        "patch": "@@ -310,14 +310,6 @@ BOOST_AUTO_TEST_CASE(test_Get)\n \n     BOOST_CHECK(AreInputsStandard(t1, coins));\n     BOOST_CHECK_EQUAL(coins.GetValueIn(t1), (50+21+22)*CENT);\n-\n-    // Adding extra junk to the scriptSig should make it non-standard:\n-    t1.vin[0].scriptSig << OP_11;\n-    BOOST_CHECK(!AreInputsStandard(t1, coins));\n-\n-    // ... as should not having enough:\n-    t1.vin[0].scriptSig = CScript();\n-    BOOST_CHECK(!AreInputsStandard(t1, coins));\n }\n \n BOOST_AUTO_TEST_CASE(test_IsStandard)"
      }
    ]
  },
  {
    "sha": "1e9613ac090ee82f52e1d02a622358b2a1085249",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTk2MTNhYzA5MGVlODJmNTJlMWQwMmE2MjIzNThiMmExMDg1MjQ5",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-01-28T22:44:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-02-01T14:31:17Z"
      },
      "message": "Do not absolutely protect local peers from eviction.\n\nWith automatic tor HS support in place we should probably not be providing\n absolute protection for local peers, since HS inbound could be used to\n attack pretty easily.  Instead, this counts on the latency metric inside\n AttemptToEvictConnection to privilege actually local peers.\n\n(cherry picked from commit 46dbcd4833115401fecbb052365b4c7725874414)",
      "tree": {
        "sha": "a8e6ba754e3edb0683aeb2df2c2efbfadcb59b22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8e6ba754e3edb0683aeb2df2c2efbfadcb59b22"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e9613ac090ee82f52e1d02a622358b2a1085249",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9613ac090ee82f52e1d02a622358b2a1085249",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9613ac090ee82f52e1d02a622358b2a1085249",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9613ac090ee82f52e1d02a622358b2a1085249/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d743099b5fe77ba423110bea4f5dfd854fef3b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d743099b5fe77ba423110bea4f5dfd854fef3b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d743099b5fe77ba423110bea4f5dfd854fef3b2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "84c5644ccc896c2ae633cfd2162451b9863f13ac",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e9613ac090ee82f52e1d02a622358b2a1085249/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e9613ac090ee82f52e1d02a622358b2a1085249/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1e9613ac090ee82f52e1d02a622358b2a1085249",
        "patch": "@@ -899,8 +899,6 @@ static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n                 continue;\n             if (node->fDisconnect)\n                 continue;\n-            if (node->addr.IsLocal())\n-                continue;\n             vEvictionCandidates.push_back(CNodeRef(node));\n         }\n     }"
      }
    ]
  },
  {
    "sha": "1e05727072a58d3538dc654c5a3de83ed58874b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTA1NzI3MDcyYTU4ZDM1MzhkYzY1NGM1YTNkZTgzZWQ1ODg3NGI4",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-23T03:48:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-02-01T14:31:21Z"
      },
      "message": "Decide eviction group ties based on time.\n\nThis corrects a bug the case of tying group size where the code may\n fail to select the group with the newest member. Since newest time\n is the final selection criteria, failing to break ties on it\n on the step before can undermine the final selection.\n\nTied netgroups are very common.\n\n(cherry picked from commit 8e09f914f8ec66301257358b250e9a61befadd95)",
      "tree": {
        "sha": "9ae090fbc4635e029786b2ee98564121bea4f610",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ae090fbc4635e029786b2ee98564121bea4f610"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e05727072a58d3538dc654c5a3de83ed58874b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e05727072a58d3538dc654c5a3de83ed58874b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e05727072a58d3538dc654c5a3de83ed58874b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e05727072a58d3538dc654c5a3de83ed58874b8/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e9613ac090ee82f52e1d02a622358b2a1085249",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9613ac090ee82f52e1d02a622358b2a1085249",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9613ac090ee82f52e1d02a622358b2a1085249"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "14e22f6cb3b9bbb4dbc708b0d51e6030f2b5af5e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e05727072a58d3538dc654c5a3de83ed58874b8/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e05727072a58d3538dc654c5a3de83ed58874b8/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1e05727072a58d3538dc654c5a3de83ed58874b8",
        "patch": "@@ -929,30 +929,34 @@ static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n \n     if (vEvictionCandidates.empty()) return false;\n \n-    // Identify the network group with the most connections\n+    // Identify the network group with the most connections and youngest member.\n+    // (vEvictionCandidates is already sorted by reverse connect time)\n     std::vector<unsigned char> naMostConnections;\n     unsigned int nMostConnections = 0;\n+    int64_t nMostConnectionsTime = 0;\n     std::map<std::vector<unsigned char>, std::vector<CNodeRef> > mapAddrCounts;\n     BOOST_FOREACH(const CNodeRef &node, vEvictionCandidates) {\n         mapAddrCounts[node->addr.GetGroup()].push_back(node);\n+        int64_t grouptime = mapAddrCounts[node->addr.GetGroup()][0]->nTimeConnected;\n+        size_t groupsize = mapAddrCounts[node->addr.GetGroup()].size();\n \n-        if (mapAddrCounts[node->addr.GetGroup()].size() > nMostConnections) {\n-            nMostConnections = mapAddrCounts[node->addr.GetGroup()].size();\n+        if (groupsize > nMostConnections || (groupsize == nMostConnections && grouptime > nMostConnectionsTime)) {\n+            nMostConnections = groupsize;\n+            nMostConnectionsTime = grouptime;\n             naMostConnections = node->addr.GetGroup();\n         }\n     }\n \n     // Reduce to the network group with the most connections\n     vEvictionCandidates = mapAddrCounts[naMostConnections];\n \n-    // Do not disconnect peers if there is only 1 connection from their network group\n+    // Do not disconnect peers if there is only one unprotected connection from their network group.\n     if (vEvictionCandidates.size() <= 1)\n         // unless we prefer the new connection (for whitelisted peers)\n         if (!fPreferNewConnection)\n             return false;\n \n-    // Disconnect the most recent connection from the network group with the most connections\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    // Disconnect from the network group with the most connections\n     vEvictionCandidates[0]->fDisconnect = true;\n \n     return true;"
      }
    ]
  }
]