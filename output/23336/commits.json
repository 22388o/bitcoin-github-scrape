[
  {
    "sha": "faeb9a575367119dbff60c35fa2c13547718e179",
    "node_id": "C_kwDOABII59oAKGZhZWI5YTU3NTM2NzExOWRiZmY2MGMzNWZhMmMxMzU0NzcxOGUxNzk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-22T10:15:15Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-22T10:32:08Z"
      },
      "message": "remove unused CTxMemPool::info(const uint256& txid)",
      "tree": {
        "sha": "d837186aa9c98a04a35040342e1aee9026d14d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d837186aa9c98a04a35040342e1aee9026d14d1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faeb9a575367119dbff60c35fa2c13547718e179",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiUEAwAwxmnH31pX3dntNKmqUhsS0eniO0FBwa0wClUEwk5n2+38Or3FrihI6aO\n8ycsSSOqzLNpCf54Uh9L9+KemTHR7z/7MRO3lOWT9/XYgFbx8ys0NUnUCUWsIqW4\nMKEIYBxBKAW/VlhYqDkkYUY63E2KqHnZ/P80GhgO6vJ+AAsFv0b9xm91gb+AJI23\nJsbVVVE27iy/MWqnYyAYZdwepoUhU/dPuEwoas8keBNB7FnbhxT4DzQjD2I/71iG\nnNmIwzdcUsaVupopU8eU3VzB83gdysLr8/uf9dSYBjL5Q+URE8oucdSMtxeWphWF\n35hoPujIWvmEnMRDSePRGMs8JxvzGG4Gh/n2aZXkdQFcMbJ+GHnhyJg/o014fZPc\nk57JGHjJgsPVFC+wQCHKH7DpZRWt9mLAoDIAFIoXk4AyaYLyn13T/UNLe4ErE7dW\nanfX366IJeBY750210RvUWlaf9NA7hRTW9n2ZizdyBvpRKSjwlX02UkToMyF6SxW\nAvoTcDQz\n=wnWg\n-----END PGP SIGNATURE-----",
        "payload": "tree d837186aa9c98a04a35040342e1aee9026d14d1f\nparent c001da306b29c46ef1e7421002c3aba3ff5ed514\nauthor MarcoFalke <falke.marco@gmail.com> 1634897715 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1634898728 +0200\n\nremove unused CTxMemPool::info(const uint256& txid)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeb9a575367119dbff60c35fa2c13547718e179",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faeb9a575367119dbff60c35fa2c13547718e179",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeb9a575367119dbff60c35fa2c13547718e179/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c001da306b29c46ef1e7421002c3aba3ff5ed514",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c001da306b29c46ef1e7421002c3aba3ff5ed514",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c001da306b29c46ef1e7421002c3aba3ff5ed514"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 0,
      "deletions": 3
    },
    "files": [
      {
        "sha": "70084ea1d1df0b6c18b07b30bdbaaafefd1f18e6",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeb9a575367119dbff60c35fa2c13547718e179/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeb9a575367119dbff60c35fa2c13547718e179/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=faeb9a575367119dbff60c35fa2c13547718e179",
        "patch": "@@ -895,8 +895,6 @@ TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n     return GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info(const uint256& txid) const { return info(GenTxid{false, txid}); }\n-\n void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta)\n {\n     {"
      },
      {
        "sha": "c63522225a8c80c5decce0fe106bb03b5206e6a7",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeb9a575367119dbff60c35fa2c13547718e179/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeb9a575367119dbff60c35fa2c13547718e179/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=faeb9a575367119dbff60c35fa2c13547718e179",
        "patch": "@@ -789,7 +789,6 @@ class CTxMemPool\n         AssertLockHeld(cs);\n         return mapTx.project<0>(mapTx.get<index_by_wtxid>().find(wtxid));\n     }\n-    TxMempoolInfo info(const uint256& hash) const;\n     TxMempoolInfo info(const GenTxid& gtxid) const;\n     std::vector<TxMempoolInfo> infoAll() const;\n "
      }
    ]
  },
  {
    "sha": "fa4ec1c0bdaef9f082a6661d7faf16149774e145",
    "node_id": "C_kwDOABII59oAKGZhNGVjMWMwYmRhZWY5ZjA4MmE2NjYxZDdmYWYxNjE0OTc3NGUxNDU",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-22T10:28:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-22T10:32:16Z"
      },
      "message": "Make GenTxid boolean constructor private",
      "tree": {
        "sha": "a147b36362e1e1e422d45f9f1083edbcf5b671d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a147b36362e1e1e422d45f9f1083edbcf5b671d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4ec1c0bdaef9f082a6661d7faf16149774e145",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgWGgv+IuGIO7utOwcV9qAAG0m5BgfVZh1VbTHTaEhOqNZoUVE+OzzflFSo/Jro\nfS2aGNkSkSYGmWTbTucIoGKDLuHAUGVqVCHn2TisKDsxk9b7JQkoYlcavYdF+d1l\nbsZV1leK2BbkoO+kf0MsDnrzPB+lpqR9uI4bjPEPRBvd2Pms+bp9RRj4geUijhDv\nWZGAEHad8reBbpPP+PffbSe2rCZp2I4nORNAN+TNq7YQvjMYHyiyxdxzEzAFLej2\nvtNanobGZtQmc6Gx9ybk5gAN95/M0Po9pvckZMlNpTPbJooThdV9iJCoI22GatNe\nmz2gR7SOwq1033A8opi4K9RE31V9AwXv3oMiPWvtu+myWjMDW7dO1YEbOKppdV8z\nW75xnWprgLtDW5Rth3Du6v1PGxcQ9OJVrDPUMyns5n7c1K+7QPqELWONYiyK3MdE\nsZP0am+xb4bypE0KdJyBGtznxC9tZyZdvYwBLlXNPeUwqLydSY9oXgA04LvzwOhE\nftjD3dmL\n=mzS9\n-----END PGP SIGNATURE-----",
        "payload": "tree a147b36362e1e1e422d45f9f1083edbcf5b671d3\nparent faeb9a575367119dbff60c35fa2c13547718e179\nauthor MarcoFalke <falke.marco@gmail.com> 1634898494 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1634898736 +0200\n\nMake GenTxid boolean constructor private\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4ec1c0bdaef9f082a6661d7faf16149774e145",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4ec1c0bdaef9f082a6661d7faf16149774e145",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4ec1c0bdaef9f082a6661d7faf16149774e145/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faeb9a575367119dbff60c35fa2c13547718e179",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeb9a575367119dbff60c35fa2c13547718e179",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faeb9a575367119dbff60c35fa2c13547718e179"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 13,
      "deletions": 12
    },
    "files": [
      {
        "sha": "6d559d89f164341bd3c7a403daf9b5ff03687abd",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa4ec1c0bdaef9f082a6661d7faf16149774e145",
        "patch": "@@ -3242,7 +3242,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // already; and an adversary can already relay us old transactions\n         // (older than our recency filter) if trying to DoS us, without any need\n         // for witness malleation.\n-        if (AlreadyHaveTx(GenTxid(/* is_wtxid=*/true, wtxid))) {\n+        if (AlreadyHaveTx(GenTxid::Wtxid(wtxid))) {\n             if (pfrom.HasPermission(NetPermissionFlags::ForceRelay)) {\n                 // Always relay transactions received from peers with forcerelay\n                 // permission, even if they were already in the mempool, allowing\n@@ -3312,7 +3312,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     // wtxidrelay peers.\n                     // Eventually we should replace this with an improved\n                     // protocol for getting all unconfirmed parents.\n-                    const GenTxid gtxid{/* is_wtxid=*/false, parent_txid};\n+                    const auto gtxid{GenTxid::Txid(parent_txid)};\n                     pfrom.AddKnownTx(parent_txid);\n                     if (!AlreadyHaveTx(gtxid)) AddTxAnnouncement(pfrom, gtxid, current_time);\n                 }"
      },
      {
        "sha": "947c1c60bb00c4eafdd960ec9eb69a5edc8d752c",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=fa4ec1c0bdaef9f082a6661d7faf16149774e145",
        "patch": "@@ -391,8 +391,9 @@ class GenTxid\n {\n     bool m_is_wtxid;\n     uint256 m_hash;\n-public:\n     GenTxid(bool is_wtxid, const uint256& hash) : m_is_wtxid(is_wtxid), m_hash(hash) {}\n+\n+public:\n     static GenTxid Txid(const uint256& hash) { return GenTxid{false, hash}; }\n     static GenTxid Wtxid(const uint256& hash) { return GenTxid{true, hash}; }\n     bool IsWtxid() const { return m_is_wtxid; }"
      },
      {
        "sha": "7506c8181590fe6224605acfcfa41116e39480dd",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=fa4ec1c0bdaef9f082a6661d7faf16149774e145",
        "patch": "@@ -223,5 +223,5 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags)\n GenTxid ToGenTxid(const CInv& inv)\n {\n     assert(inv.IsGenTxMsg());\n-    return {inv.IsMsgWtx(), inv.hash};\n+    return inv.IsMsgWtx() ? GenTxid::Wtxid(inv.hash) : GenTxid::Txid(inv.hash);\n }"
      },
      {
        "sha": "a73bbcfc251db4d2513d503a5b53d365e360c930",
        "filename": "src/test/fuzz/txrequest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/test/fuzz/txrequest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/test/fuzz/txrequest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/txrequest.cpp?ref=fa4ec1c0bdaef9f082a6661d7faf16149774e145",
        "patch": "@@ -204,7 +204,7 @@ class Tester\n         }\n \n         // Call TxRequestTracker's implementation.\n-        m_tracker.ReceivedInv(peer, GenTxid{is_wtxid, TXHASHES[txhash]}, preferred, reqtime);\n+        m_tracker.ReceivedInv(peer, is_wtxid ? GenTxid::Wtxid(TXHASHES[txhash]) : GenTxid::Txid(TXHASHES[txhash]), preferred, reqtime);\n     }\n \n     void RequestedTx(int peer, int txhash, std::chrono::microseconds exptime)\n@@ -252,7 +252,7 @@ class Tester\n             for (int peer2 = 0; peer2 < MAX_PEERS; ++peer2) {\n                 Announcement& ann2 = m_announcements[txhash][peer2];\n                 if (ann2.m_state == State::REQUESTED && ann2.m_time <= m_now) {\n-                    expected_expired.emplace_back(peer2, GenTxid{ann2.m_is_wtxid, TXHASHES[txhash]});\n+                    expected_expired.emplace_back(peer2, ann2.m_is_wtxid ? GenTxid::Wtxid(TXHASHES[txhash]) : GenTxid::Txid(TXHASHES[txhash]));\n                     ann2.m_state = State::COMPLETED;\n                     break;\n                 }"
      },
      {
        "sha": "99d41882c9fe68b606d1aa48f4c96abde3fc9467",
        "filename": "src/test/txrequest_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/test/txrequest_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/test/txrequest_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txrequest_tests.cpp?ref=fa4ec1c0bdaef9f082a6661d7faf16149774e145",
        "patch": "@@ -221,7 +221,7 @@ class Scenario\n     /** Generate a random GenTxid; the txhash follows NewTxHash; the is_wtxid flag is random. */\n     GenTxid NewGTxid(const std::vector<std::vector<NodeId>>& orders = {})\n     {\n-        return {InsecureRandBool(), NewTxHash(orders)};\n+        return InsecureRandBool() ? GenTxid::Wtxid(NewTxHash(orders)) : GenTxid::Txid(NewTxHash(orders));\n     }\n \n     /** Generate a new random NodeId to use as peer. The same NodeId is never returned twice\n@@ -494,8 +494,8 @@ void BuildWtxidTest(Scenario& scenario, int config)\n     auto peerT = scenario.NewPeer();\n     auto peerW = scenario.NewPeer();\n     auto txhash = scenario.NewTxHash();\n-    GenTxid txid{false, txhash};\n-    GenTxid wtxid{true, txhash};\n+    auto txid{GenTxid::Txid(txhash)};\n+    auto wtxid{GenTxid::Wtxid(txhash)};\n \n     auto reqtimeT = InsecureRandBool() ? MIN_TIME : scenario.Now() + RandomTime8s();\n     auto reqtimeW = InsecureRandBool() ? MIN_TIME : scenario.Now() + RandomTime8s();"
      },
      {
        "sha": "7d478a5b263ba927e66082662e009471f1b6894e",
        "filename": "src/txrequest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/txrequest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/txrequest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txrequest.cpp?ref=fa4ec1c0bdaef9f082a6661d7faf16149774e145",
        "patch": "@@ -300,7 +300,7 @@ std::map<uint256, TxHashInfo> ComputeTxHashInfo(const Index& index, const Priori\n \n GenTxid ToGenTxid(const Announcement& ann)\n {\n-    return {ann.m_is_wtxid, ann.m_txhash};\n+    return ann.m_is_wtxid ? GenTxid::Wtxid(ann.m_txhash) : GenTxid::Txid(ann.m_txhash);\n }\n \n }  // namespace"
      },
      {
        "sha": "8d64a9a46067560893eae100eab86b156316565e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4ec1c0bdaef9f082a6661d7faf16149774e145/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa4ec1c0bdaef9f082a6661d7faf16149774e145",
        "patch": "@@ -585,10 +585,10 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+    if (m_pool.exists(GenTxid::Wtxid(tx.GetWitnessHash()))) {\n         // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n-    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+    } else if (m_pool.exists(GenTxid::Txid(tx.GetHash()))) {\n         // Transaction with the same non-witness data but different witness (same txid, different\n         // wtxid) already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-same-nonwitness-data-in-mempool\");"
      }
    ]
  }
]