{
  "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22481",
  "id": 692006305,
  "node_id": "MDExOlB1bGxSZXF1ZXN0NjkyMDA2MzA1",
  "html_url": "https://github.com/bitcoin/bitcoin/pull/22481",
  "diff_url": "https://github.com/bitcoin/bitcoin/pull/22481.diff",
  "patch_url": "https://github.com/bitcoin/bitcoin/pull/22481.patch",
  "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22481",
  "number": 22481,
  "state": "closed",
  "locked": false,
  "title": "mempool: apply rule of 5 to epochguard.h, fix compiler warnings",
  "user": {
    "login": "jonatack",
    "id": 2415484,
    "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jonatack",
    "html_url": "https://github.com/jonatack",
    "followers_url": "https://api.github.com/users/jonatack/followers",
    "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
    "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
    "organizations_url": "https://api.github.com/users/jonatack/orgs",
    "repos_url": "https://api.github.com/users/jonatack/repos",
    "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jonatack/received_events",
    "type": "User",
    "site_admin": false
  },
  "body": "Apply the rule of five to `src/util/epochguard.h::{Epoch, Marker}` for safety, which also nicely fixes the `-Wdeprecated-copy` compiler warnings with Clang 13.\r\n\r\nReferences:\r\n\r\n- https://en.cppreference.com/w/cpp/language/rule_of_three\r\n- https://www.stroustrup.com/C++11FAQ.html#default\r\n- https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-five\r\n\r\n<details><summary>Compiler warnings fixed</summary><p>\r\n\r\n```bash\r\nIn file included from policy/rbf.cpp:5:\r\nIn file included from ./policy/rbf.h:8:\r\nIn file included from ./txmempool.h:24:\r\n./util/epochguard.h:53:17: warning: definition of implicit copy constructor for 'Marker' is deprecated because it has a user-declared copy assignment operator [-Wdeprecated-copy]\r\n        Marker& operator=(const Marker&) = delete;\r\n                ^\r\n./txmempool.h:81:7: note: in implicit copy constructor for 'Epoch::Marker' first required here\r\nclass CTxMemPoolEntry\r\n      ^\r\npolicy/rbf.cpp:29:29: note: in implicit copy constructor for 'CTxMemPoolEntry' first required here\r\n    CTxMemPoolEntry entry = *pool.mapTx.find(tx.GetHash());\r\n```\r\n\r\n```bash\r\nIn file included from txmempool.cpp:6:\r\nIn file included from ./txmempool.h:24:\r\n./util/epochguard.h:53:17: warning: definition of implicit copy constructor for 'Marker' is deprecated because it has a user-declared copy assignment operator [-Wdeprecated-copy]\r\n        Marker& operator=(const Marker&) = delete;\r\n                ^\r\n./txmempool.h:81:7: note: in implicit copy constructor for 'Epoch::Marker' first required here\r\nclass CTxMemPoolEntry\r\n      ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:150:23: note: in implicit copy constructor for 'CTxMemPoolEntry' first required here\r\n        { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }\r\n                             ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:512:8: note: in instantiation of function template specialization '__gnu_cxx::new_allocator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<CTxMemPoolEntry, std::allocator<CTxMemPoolEntry>>>>>>>>::construct<CTxMemPoolEntry, const CTxMemPoolEntry &>' requested here\r\n          __a.construct(__p, std::forward<_Args>(__args)...);\r\n              ^\r\n/usr/include/boost/multi_index_container.hpp:655:24: note: in instantiation of function template specialization 'std::allocator_traits<std::allocator<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<CTxMemPoolEntry, std::allocator<CTxMemPoolEntry>>>>>>>>>::construct<CTxMemPoolEntry, const CTxMemPoolEntry &>' requested here\r\n    node_alloc_traits::construct(\r\n                       ^\r\n/usr/include/boost/multi_index/detail/index_base.hpp:108:15: note: in instantiation of member function 'boost::multi_index::multi_index_container<CTxMemPoolEntry, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>, boost::multi_index::hashed_unique<boost::multi_index::tag<index_by_wtxid>, mempoolentry_wtxid, SaltedTxidHasher>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<descendant_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByDescendantScore>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<entry_time>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByEntryTime>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<ancestor_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByAncestorFee>>>::construct_value' requested here\r\n      final().construct_value(x,v);\r\n              ^\r\n/usr/include/boost/multi_index/detail/ord_index_impl.hpp:770:33: note: (skipping 5 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)\r\n    final_node_type* res=super::insert_(v,x,variant);\r\n                                ^\r\n/usr/include/boost/multi_index_container.hpp:693:33: note: in instantiation of function template specialization 'boost::multi_index::detail::hashed_index<mempoolentry_txid, SaltedTxidHasher, std::equal_to<uint256>, boost::multi_index::detail::nth_layer<1, CTxMemPoolEntry, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>, boost::multi_index::hashed_unique<boost::multi_index::tag<index_by_wtxid>, mempoolentry_wtxid, SaltedTxidHasher>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<descendant_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByDescendantScore>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<entry_time>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByEntryTime>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<ancestor_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByAncestorFee>>, std::allocator<CTxMemPoolEntry>>, boost::mpl::vector0<>, boost::multi_index::detail::hashed_unique_tag>::insert_<boost::multi_index::detail::lvalue_tag>' requested here\r\n    final_node_type* res=super::insert_(v,x,variant);\r\n                                ^\r\n/usr/include/boost/multi_index_container.hpp:705:12: note: in instantiation of function template specialization 'boost::multi_index::multi_index_container<CTxMemPoolEntry, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>, boost::multi_index::hashed_unique<boost::multi_index::tag<index_by_wtxid>, mempoolentry_wtxid, SaltedTxidHasher>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<descendant_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByDescendantScore>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<entry_time>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByEntryTime>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<ancestor_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByAncestorFee>>>::insert_<boost::multi_index::detail::lvalue_tag>' requested here\r\n    return insert_(v,detail::lvalue_tag());\r\n           ^\r\n/usr/include/boost/multi_index/detail/index_base.hpp:213:21: note: in instantiation of member function 'boost::multi_index::multi_index_container<CTxMemPoolEntry, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>, boost::multi_index::hashed_unique<boost::multi_index::tag<index_by_wtxid>, mempoolentry_wtxid, SaltedTxidHasher>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<descendant_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByDescendantScore>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<entry_time>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByEntryTime>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<ancestor_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByAncestorFee>>>::insert_' requested here\r\n    {return final().insert_(x);}\r\n                    ^\r\n/usr/include/boost/multi_index/hashed_index.hpp:284:46: note: in instantiation of member function 'boost::multi_index::detail::index_base<CTxMemPoolEntry, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>, boost::multi_index::hashed_unique<boost::multi_index::tag<index_by_wtxid>, mempoolentry_wtxid, SaltedTxidHasher>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<descendant_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByDescendantScore>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<entry_time>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByEntryTime>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<ancestor_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByAncestorFee>>, std::allocator<CTxMemPoolEntry>>::final_insert_' requested here\r\n    std::pair<final_node_type*,bool> p=this->final_insert_(x);\r\n                                             ^\r\ntxmempool.cpp:363:53: note: in instantiation of member function 'boost::multi_index::detail::hashed_index<mempoolentry_txid, SaltedTxidHasher, std::equal_to<uint256>, boost::multi_index::detail::nth_layer<1, CTxMemPoolEntry, boost::multi_index::indexed_by<boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>, boost::multi_index::hashed_unique<boost::multi_index::tag<index_by_wtxid>, mempoolentry_wtxid, SaltedTxidHasher>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<descendant_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByDescendantScore>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<entry_time>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByEntryTime>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<ancestor_score>, boost::multi_index::identity<CTxMemPoolEntry>, CompareTxMemPoolEntryByAncestorFee>>, std::allocator<CTxMemPoolEntry>>, boost::mpl::vector0<>, boost::multi_index::detail::hashed_unique_tag>::insert' requested here\r\n    indexed_transaction_set::iterator newit = mapTx.insert(entry).first;\r\n```\r\n\r\n```bash\r\nIn file included from test/fuzz/policy_estimator.cpp:9:\r\nIn file included from ./test/fuzz/util.h:27:\r\nIn file included from ./txmempool.h:24:\r\n./util/epochguard.h:53:17: warning: definition of implicit copy constructor for 'Marker' is deprecated because it has a user-declared copy assignment operator [-Wdeprecated-copy]\r\n        Marker& operator=(const Marker&) = delete;\r\n                ^\r\n./txmempool.h:81:7: note: in implicit copy constructor for 'Epoch::Marker' first required here\r\nclass CTxMemPoolEntry\r\n      ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h:150:23: note: in implicit move constructor for 'CTxMemPoolEntry' first required here\r\n        { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }\r\n                             ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h:512:8: note: in instantiation of function template specialization '__gnu_cxx::new_allocator<CTxMemPoolEntry>::construct<CTxMemPoolEntry, CTxMemPoolEntry>' requested here\r\n          __a.construct(__p, std::forward<_Args>(__args)...);\r\n              ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc:115:21: note: in instantiation of function template specialization 'std::allocator_traits<std::allocator<CTxMemPoolEntry>>::construct<CTxMemPoolEntry, CTxMemPoolEntry>' requested here\r\n            _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,\r\n                           ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:1204:9: note: in instantiation of function template specialization 'std::vector<CTxMemPoolEntry>::emplace_back<CTxMemPoolEntry>' requested here\r\n      { emplace_back(std::move(__x)); }\r\n        ^\r\ntest/fuzz/policy_estimator.cpp:49:37: note: in instantiation of member function 'std::vector<CTxMemPoolEntry>::push_back' requested here\r\n                    mempool_entries.push_back(ConsumeTxMemPoolEntry(fuzzed_data_provider, tx));\r\n```\r\n</p></details>\r\n",
  "created_at": "2021-07-18T00:06:25Z",
  "updated_at": "2021-07-26T07:59:31Z",
  "closed_at": "2021-07-22T12:57:56Z",
  "merged_at": "2021-07-22T12:57:56Z",
  "merge_commit_sha": "3f083a5bbdbb41cfa6be8f9d4b0e306515bfa100",
  "assignee": null,
  "assignees": [],
  "requested_reviewers": [],
  "requested_teams": [],
  "labels": [
    {
      "id": 164208572,
      "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
      "name": "Mempool",
      "color": "fef2c0",
      "default": false,
      "description": null
    },
    {
      "id": 241832923,
      "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
      "name": "Utils/log/libs",
      "color": "5319e7",
      "default": false,
      "description": ""
    }
  ],
  "milestone": null,
  "draft": false,
  "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22481/commits",
  "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22481/comments",
  "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}",
  "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22481/comments",
  "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/7b3a20b2602f902c344a615f23f8f0280b6f6bcc",
  "head": {
    "label": "jonatack:epochguard-rule-of-three",
    "ref": "epochguard-rule-of-three",
    "sha": "7b3a20b2602f902c344a615f23f8f0280b6f6bcc",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "repo": {
      "id": 173103842,
      "node_id": "MDEwOlJlcG9zaXRvcnkxNzMxMDM4NDI=",
      "name": "bitcoin",
      "full_name": "jonatack/bitcoin",
      "private": false,
      "owner": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
        "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/jonatack/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": true,
      "url": "https://api.github.com/repos/jonatack/bitcoin",
      "forks_url": "https://api.github.com/repos/jonatack/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/jonatack/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/jonatack/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/jonatack/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/jonatack/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/jonatack/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/jonatack/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/jonatack/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/jonatack/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/jonatack/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/jonatack/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/jonatack/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/jonatack/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/jonatack/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/jonatack/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/jonatack/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/jonatack/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/jonatack/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/jonatack/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/jonatack/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/jonatack/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/jonatack/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/jonatack/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/jonatack/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/jonatack/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/jonatack/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/jonatack/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/jonatack/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/jonatack/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/jonatack/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/jonatack/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/jonatack/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/jonatack/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/jonatack/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/jonatack/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/jonatack/bitcoin/deployments",
      "created_at": "2019-02-28T11:57:18Z",
      "updated_at": "2021-07-18T00:15:12Z",
      "pushed_at": "2021-11-23T10:39:23Z",
      "git_url": "git://github.com/jonatack/bitcoin.git",
      "ssh_url": "git@github.com:jonatack/bitcoin.git",
      "clone_url": "https://github.com/jonatack/bitcoin.git",
      "svn_url": "https://github.com/jonatack/bitcoin",
      "homepage": "https://bitcoincore.org/en/download",
      "size": 176156,
      "stargazers_count": 1,
      "watchers_count": 1,
      "language": "C++",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 1,
      "default_branch": "master"
    }
  },
  "base": {
    "label": "bitcoin:master",
    "ref": "master",
    "sha": "5c8820b399f9b3c2b0713b5337e31ef56f6b3e0e",
    "user": {
      "login": "bitcoin",
      "id": 528860,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitcoin",
      "html_url": "https://github.com/bitcoin",
      "followers_url": "https://api.github.com/users/bitcoin/followers",
      "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/bitcoin/orgs",
      "repos_url": "https://api.github.com/users/bitcoin/repos",
      "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitcoin/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "repo": {
      "id": 1181927,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
      "name": "bitcoin",
      "full_name": "bitcoin/bitcoin",
      "private": false,
      "owner": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": false,
      "url": "https://api.github.com/repos/bitcoin/bitcoin",
      "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
      "created_at": "2010-12-19T15:16:43Z",
      "updated_at": "2021-12-01T04:13:45Z",
      "pushed_at": "2021-12-01T02:45:06Z",
      "git_url": "git://github.com/bitcoin/bitcoin.git",
      "ssh_url": "git@github.com:bitcoin/bitcoin.git",
      "clone_url": "https://github.com/bitcoin/bitcoin.git",
      "svn_url": "https://github.com/bitcoin/bitcoin",
      "homepage": "https://bitcoincore.org/en/download",
      "size": 188013,
      "stargazers_count": 59700,
      "watchers_count": 59700,
      "language": "C++",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 30697,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 1023,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [
        "bitcoin",
        "c-plus-plus",
        "cryptocurrency",
        "cryptography",
        "p2p"
      ],
      "visibility": "public",
      "forks": 30697,
      "open_issues": 1023,
      "watchers": 59700,
      "default_branch": "master"
    }
  },
  "_links": {
    "self": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22481"
    },
    "html": {
      "href": "https://github.com/bitcoin/bitcoin/pull/22481"
    },
    "issue": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/22481"
    },
    "comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/22481/comments"
    },
    "review_comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22481/comments"
    },
    "review_comment": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}"
    },
    "commits": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22481/commits"
    },
    "statuses": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/statuses/7b3a20b2602f902c344a615f23f8f0280b6f6bcc"
    }
  },
  "author_association": "MEMBER",
  "auto_merge": null,
  "active_lock_reason": null,
  "merged": true,
  "mergeable": null,
  "rebaseable": null,
  "mergeable_state": "unknown",
  "merged_by": {
    "login": "laanwj",
    "id": 126646,
    "node_id": "MDQ6VXNlcjEyNjY0Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/laanwj",
    "html_url": "https://github.com/laanwj",
    "followers_url": "https://api.github.com/users/laanwj/followers",
    "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
    "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
    "organizations_url": "https://api.github.com/users/laanwj/orgs",
    "repos_url": "https://api.github.com/users/laanwj/repos",
    "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/laanwj/received_events",
    "type": "User",
    "site_admin": false
  },
  "comments": 6,
  "review_comments": 3,
  "maintainer_can_modify": false,
  "commits": 1,
  "additions": 10,
  "deletions": 0,
  "changed_files": 1
}