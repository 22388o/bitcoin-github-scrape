[
  {
    "sha": "e573635835df22e7119ca60643d38bf6ed181247",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTczNjM1ODM1ZGYyMmU3MTE5Y2E2MDY0M2QzOGJmNmVkMTgxMjQ3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-04-16T10:55:59Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-07-17T09:41:56Z"
      },
      "message": "Add option to return fee histogram in getmempoolinfo",
      "tree": {
        "sha": "927b8559d8d92402b994a30b1b079460e3bdaaff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/927b8559d8d92402b994a30b1b079460e3bdaaff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e573635835df22e7119ca60643d38bf6ed181247",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl0u7WUACgkQHrd2uwPH\nki3dUA/9FDql6BxMW56cuXd2WCkfpRtgnR107JwM5t6uV067VjcVzqph6DCt6cho\nNrXBAzd6iaO0BIeUQ5rxMjXMHNbDGLZW6B/sQiF8H4i6KM1q+0DBMBdfC3FqX4bP\nz0SnCKSMHuxYafUHYtlV6j+LQwxTRHYinEhY6XTna65tArXqWosMH6LLFXsPuskX\nU+efjh8QUr7FTQxp//ejisp0BLJYL4XyDJNGkLSY1sTDzIhFBT0sDvRkGylfuDQX\n5dYoA3/SuqnrlK0U/GD6ZXjmFjDtdg4ROn/8CyvC7WU4U7h0ALkdQfqiJePDYDpR\nF1XsLw0LzLYorgk/Uf+8SyJb1q+n1NqUTay1etmIkVQXVPVo4C2tZZWX644SFA7D\nSasKH0uFr6NmWAKs30usRiIPpsB0FsrPB1JvGrdgM9Z3Td0legqL5ukAXZUWgMTD\nu1FROaJLWN1aHHgKXW9yG0prLKVzRl7CxFUKUu+MD4MFYLeWmfdbZjPHEyEUarTq\n8CYf2ipe70jL9P3axj+6krS5t/WwuSpn4dIlIamHL5IIXTzCkomUPOlbSTCUTRPE\n7Bm4/7TFMuyICmOcezcIFEVMMOxc91/aUSycMmCM6b9toogbvGiTVeiWa5emhcuz\n8AUdqOLovXBrBJC+98F/VQBdKL00FfyqTYX1kYPDS9eL8VkzBPU=\n=1S3O\n-----END PGP SIGNATURE-----",
        "payload": "tree 927b8559d8d92402b994a30b1b079460e3bdaaff\nparent 459baa1756b7f2d10d261daa0d0f5f4b91cef21f\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1555412159 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1563356516 +0200\n\nAdd option to return fee histogram in getmempoolinfo\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e573635835df22e7119ca60643d38bf6ed181247",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e573635835df22e7119ca60643d38bf6ed181247",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e573635835df22e7119ca60643d38bf6ed181247/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "459baa1756b7f2d10d261daa0d0f5f4b91cef21f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/459baa1756b7f2d10d261daa0d0f5f4b91cef21f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/459baa1756b7f2d10d261daa0d0f5f4b91cef21f"
      }
    ],
    "stats": {
      "total": 1218,
      "additions": 1212,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e0284f42573a21b9d3f32775068f4dc233bf1c27",
        "filename": "Bitcoin-Qt.config",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Bitcoin-Qt.config?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -0,0 +1,2 @@\n+// Add predefined macros for your project here. For example:\n+// #define THE_ANSWER 42"
      },
      {
        "sha": "e94cbbd3027df32cb00f4fca093d5c72d9696a85",
        "filename": "Bitcoin-Qt.creator",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.creator",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.creator",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Bitcoin-Qt.creator?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -0,0 +1 @@\n+[General]"
      },
      {
        "sha": "8e404c6fade03b6401eda64db3370ac29db6fd63",
        "filename": "Bitcoin-Qt.files",
        "status": "added",
        "additions": 1083,
        "deletions": 0,
        "changes": 1083,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.files",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.files",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Bitcoin-Qt.files?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -0,0 +1,1083 @@\n+INSTALL.md\n+README.md\n+SECURITY.md\n+configure.ac\n+src/addrdb.cpp\n+src/addrdb.h\n+src/addrman.cpp\n+src/addrman.h\n+src/amount.h\n+src/arith_uint256.cpp\n+src/arith_uint256.h\n+src/attributes.h\n+src/auxiliaryblockrequest.cpp\n+src/auxiliaryblockrequest.h\n+src/banman.cpp\n+src/banman.h\n+src/base58.cpp\n+src/base58.h\n+src/bech32.cpp\n+src/bech32.h\n+src/bench/base58.cpp\n+src/bench/bech32.cpp\n+src/bench/bench.cpp\n+src/bench/bench.h\n+src/bench/bench_bitcoin.cpp\n+src/bench/block_assemble.cpp\n+src/bench/ccoins_caching.cpp\n+src/bench/chacha20.cpp\n+src/bench/chacha_poly_aead.cpp\n+src/bench/checkblock.cpp\n+src/bench/checkqueue.cpp\n+src/bench/coin_selection.cpp\n+src/bench/crypto_hash.cpp\n+src/bench/data.cpp\n+src/bench/data.h\n+src/bench/data/block413567.raw.h\n+src/bench/duplicate_inputs.cpp\n+src/bench/examples.cpp\n+src/bench/gcs_filter.cpp\n+src/bench/lockedpool.cpp\n+src/bench/mempool_eviction.cpp\n+src/bench/merkle_root.cpp\n+src/bench/poly1305.cpp\n+src/bench/prevector.cpp\n+src/bench/rollingbloom.cpp\n+src/bench/rpc_blockchain.cpp\n+src/bench/rpc_mempool.cpp\n+src/bench/serialize.cpp\n+src/bench/util_time.cpp\n+src/bench/verify_script.cpp\n+src/bench/wallet_balance.cpp\n+src/bitcoin-cli.cpp\n+src/bitcoin-tx.cpp\n+src/bitcoin-wallet.cpp\n+src/bitcoind.cpp\n+src/blockencodings.cpp\n+src/blockencodings.h\n+src/blockfilter.cpp\n+src/blockfilter.h\n+src/bloom.cpp\n+src/bloom.h\n+src/chain.cpp\n+src/chain.h\n+src/chainparams.cpp\n+src/chainparams.h\n+src/chainparamsbase.cpp\n+src/chainparamsbase.h\n+src/chainparamsseeds.h\n+src/checkqueue.h\n+src/clientversion.cpp\n+src/clientversion.h\n+src/coins.cpp\n+src/coins.h\n+src/compat.h\n+src/compat/assumptions.h\n+src/compat/byteswap.h\n+src/compat/endian.h\n+src/compat/glibc_compat.cpp\n+src/compat/glibc_sanity.cpp\n+src/compat/glibcxx_sanity.cpp\n+src/compat/sanity.h\n+src/compat/strnlen.cpp\n+src/compressor.cpp\n+src/compressor.h\n+src/config/bitcoin-config.h\n+src/consensus/consensus.h\n+src/consensus/merkle.cpp\n+src/consensus/merkle.h\n+src/consensus/params.h\n+src/consensus/tx_check.cpp\n+src/consensus/tx_check.h\n+src/consensus/tx_verify.cpp\n+src/consensus/tx_verify.h\n+src/consensus/validation.h\n+src/core_io.h\n+src/core_memusage.h\n+src/core_read.cpp\n+src/core_write.cpp\n+src/crypto/aes.cpp\n+src/crypto/aes.h\n+src/crypto/chacha20.cpp\n+src/crypto/chacha20.h\n+src/crypto/chacha_poly_aead.cpp\n+src/crypto/chacha_poly_aead.h\n+src/crypto/common.h\n+src/crypto/ctaes/bench.c\n+src/crypto/ctaes/ctaes.c\n+src/crypto/ctaes/ctaes.h\n+src/crypto/ctaes/test.c\n+src/crypto/hkdf_sha256_32.cpp\n+src/crypto/hkdf_sha256_32.h\n+src/crypto/hmac_sha256.cpp\n+src/crypto/hmac_sha256.h\n+src/crypto/hmac_sha512.cpp\n+src/crypto/hmac_sha512.h\n+src/crypto/poly1305.cpp\n+src/crypto/poly1305.h\n+src/crypto/ripemd160.cpp\n+src/crypto/ripemd160.h\n+src/crypto/sha1.cpp\n+src/crypto/sha1.h\n+src/crypto/sha256.cpp\n+src/crypto/sha256.h\n+src/crypto/sha256_avx2.cpp\n+src/crypto/sha256_shani.cpp\n+src/crypto/sha256_sse4.cpp\n+src/crypto/sha256_sse41.cpp\n+src/crypto/sha512.cpp\n+src/crypto/sha512.h\n+src/crypto/siphash.cpp\n+src/crypto/siphash.h\n+src/cuckoocache.h\n+src/dbwrapper.cpp\n+src/dbwrapper.h\n+src/dummywallet.cpp\n+src/flatfile.cpp\n+src/flatfile.h\n+src/fs.cpp\n+src/fs.h\n+src/hash.cpp\n+src/hash.h\n+src/httprpc.cpp\n+src/httprpc.h\n+src/httpserver.cpp\n+src/httpserver.h\n+src/index/base.cpp\n+src/index/base.h\n+src/index/blockfilterindex.cpp\n+src/index/blockfilterindex.h\n+src/index/txindex.cpp\n+src/index/txindex.h\n+src/indirectmap.h\n+src/init.cpp\n+src/init.h\n+src/interfaces/chain.cpp\n+src/interfaces/chain.h\n+src/interfaces/handler.cpp\n+src/interfaces/handler.h\n+src/interfaces/node.cpp\n+src/interfaces/node.h\n+src/interfaces/wallet.cpp\n+src/interfaces/wallet.h\n+src/key.cpp\n+src/key.h\n+src/key_io.cpp\n+src/key_io.h\n+src/leveldb/db/autocompact_test.cc\n+src/leveldb/db/builder.cc\n+src/leveldb/db/builder.h\n+src/leveldb/db/c.cc\n+src/leveldb/db/c_test.c\n+src/leveldb/db/corruption_test.cc\n+src/leveldb/db/db_bench.cc\n+src/leveldb/db/db_impl.cc\n+src/leveldb/db/db_impl.h\n+src/leveldb/db/db_iter.cc\n+src/leveldb/db/db_iter.h\n+src/leveldb/db/db_test.cc\n+src/leveldb/db/dbformat.cc\n+src/leveldb/db/dbformat.h\n+src/leveldb/db/dbformat_test.cc\n+src/leveldb/db/dumpfile.cc\n+src/leveldb/db/fault_injection_test.cc\n+src/leveldb/db/filename.cc\n+src/leveldb/db/filename.h\n+src/leveldb/db/filename_test.cc\n+src/leveldb/db/leveldbutil.cc\n+src/leveldb/db/log_format.h\n+src/leveldb/db/log_reader.cc\n+src/leveldb/db/log_reader.h\n+src/leveldb/db/log_test.cc\n+src/leveldb/db/log_writer.cc\n+src/leveldb/db/log_writer.h\n+src/leveldb/db/memtable.cc\n+src/leveldb/db/memtable.h\n+src/leveldb/db/recovery_test.cc\n+src/leveldb/db/repair.cc\n+src/leveldb/db/skiplist.h\n+src/leveldb/db/skiplist_test.cc\n+src/leveldb/db/snapshot.h\n+src/leveldb/db/table_cache.cc\n+src/leveldb/db/table_cache.h\n+src/leveldb/db/version_edit.cc\n+src/leveldb/db/version_edit.h\n+src/leveldb/db/version_edit_test.cc\n+src/leveldb/db/version_set.cc\n+src/leveldb/db/version_set.h\n+src/leveldb/db/version_set_test.cc\n+src/leveldb/db/write_batch.cc\n+src/leveldb/db/write_batch_internal.h\n+src/leveldb/db/write_batch_test.cc\n+src/leveldb/doc/bench/db_bench_sqlite3.cc\n+src/leveldb/doc/bench/db_bench_tree_db.cc\n+src/leveldb/helpers/memenv/memenv.cc\n+src/leveldb/helpers/memenv/memenv.h\n+src/leveldb/helpers/memenv/memenv_test.cc\n+src/leveldb/include/leveldb/c.h\n+src/leveldb/include/leveldb/cache.h\n+src/leveldb/include/leveldb/comparator.h\n+src/leveldb/include/leveldb/db.h\n+src/leveldb/include/leveldb/dumpfile.h\n+src/leveldb/include/leveldb/env.h\n+src/leveldb/include/leveldb/filter_policy.h\n+src/leveldb/include/leveldb/iterator.h\n+src/leveldb/include/leveldb/options.h\n+src/leveldb/include/leveldb/slice.h\n+src/leveldb/include/leveldb/status.h\n+src/leveldb/include/leveldb/table.h\n+src/leveldb/include/leveldb/table_builder.h\n+src/leveldb/include/leveldb/write_batch.h\n+src/leveldb/issues/issue178_test.cc\n+src/leveldb/issues/issue200_test.cc\n+src/leveldb/port/atomic_pointer.h\n+src/leveldb/port/port.h\n+src/leveldb/port/port_example.h\n+src/leveldb/port/port_posix.cc\n+src/leveldb/port/port_posix.h\n+src/leveldb/port/port_posix_sse.cc\n+src/leveldb/port/port_win.cc\n+src/leveldb/port/port_win.h\n+src/leveldb/port/thread_annotations.h\n+src/leveldb/port/win/stdint.h\n+src/leveldb/table/block.cc\n+src/leveldb/table/block.h\n+src/leveldb/table/block_builder.cc\n+src/leveldb/table/block_builder.h\n+src/leveldb/table/filter_block.cc\n+src/leveldb/table/filter_block.h\n+src/leveldb/table/filter_block_test.cc\n+src/leveldb/table/format.cc\n+src/leveldb/table/format.h\n+src/leveldb/table/iterator.cc\n+src/leveldb/table/iterator_wrapper.h\n+src/leveldb/table/merger.cc\n+src/leveldb/table/merger.h\n+src/leveldb/table/table.cc\n+src/leveldb/table/table_builder.cc\n+src/leveldb/table/table_test.cc\n+src/leveldb/table/two_level_iterator.cc\n+src/leveldb/table/two_level_iterator.h\n+src/leveldb/util/arena.cc\n+src/leveldb/util/arena.h\n+src/leveldb/util/arena_test.cc\n+src/leveldb/util/bloom.cc\n+src/leveldb/util/bloom_test.cc\n+src/leveldb/util/cache.cc\n+src/leveldb/util/cache_test.cc\n+src/leveldb/util/coding.cc\n+src/leveldb/util/coding.h\n+src/leveldb/util/coding_test.cc\n+src/leveldb/util/comparator.cc\n+src/leveldb/util/crc32c.cc\n+src/leveldb/util/crc32c.h\n+src/leveldb/util/crc32c_test.cc\n+src/leveldb/util/env.cc\n+src/leveldb/util/env_posix.cc\n+src/leveldb/util/env_posix_test.cc\n+src/leveldb/util/env_posix_test_helper.h\n+src/leveldb/util/env_test.cc\n+src/leveldb/util/env_win.cc\n+src/leveldb/util/filter_policy.cc\n+src/leveldb/util/hash.cc\n+src/leveldb/util/hash.h\n+src/leveldb/util/hash_test.cc\n+src/leveldb/util/histogram.cc\n+src/leveldb/util/histogram.h\n+src/leveldb/util/logging.cc\n+src/leveldb/util/logging.h\n+src/leveldb/util/mutexlock.h\n+src/leveldb/util/options.cc\n+src/leveldb/util/posix_logger.h\n+src/leveldb/util/random.h\n+src/leveldb/util/status.cc\n+src/leveldb/util/testharness.cc\n+src/leveldb/util/testharness.h\n+src/leveldb/util/testutil.cc\n+src/leveldb/util/testutil.h\n+src/limitedmap.h\n+src/logging.cpp\n+src/logging.h\n+src/main.cpp\n+src/memusage.h\n+src/merkleblock.cpp\n+src/merkleblock.h\n+src/miner.cpp\n+src/miner.h\n+src/net.cpp\n+src/net.h\n+src/net_processing.cpp\n+src/net_processing.h\n+src/netaddress.cpp\n+src/netaddress.h\n+src/netbase.cpp\n+src/netbase.h\n+src/netmessagemaker.h\n+src/node/coin.cpp\n+src/node/coin.h\n+src/node/psbt.cpp\n+src/node/psbt.h\n+src/node/transaction.cpp\n+src/node/transaction.h\n+src/noui.cpp\n+src/noui.h\n+src/obj/build.h\n+src/optional.h\n+src/outputtype.cpp\n+src/outputtype.h\n+src/policy/feerate.cpp\n+src/policy/feerate.h\n+src/policy/fees.cpp\n+src/policy/fees.h\n+src/policy/policy.cpp\n+src/policy/policy.h\n+src/policy/rbf.cpp\n+src/policy/rbf.h\n+src/policy/settings.cpp\n+src/policy/settings.h\n+src/pow.cpp\n+src/pow.h\n+src/prevector.h\n+src/primitives/block.cpp\n+src/primitives/block.h\n+src/primitives/transaction.cpp\n+src/primitives/transaction.h\n+src/protocol.cpp\n+src/protocol.h\n+src/psbt.cpp\n+src/psbt.h\n+src/pubkey.cpp\n+src/pubkey.h\n+src/qt/addressbookpage.cpp\n+src/qt/addressbookpage.h\n+src/qt/addresstablemodel.cpp\n+src/qt/addresstablemodel.h\n+src/qt/askpassphrasedialog.cpp\n+src/qt/askpassphrasedialog.h\n+src/qt/bantablemodel.cpp\n+src/qt/bantablemodel.h\n+src/qt/bitcoin.cpp\n+src/qt/bitcoin.h\n+src/qt/bitcoinaddressvalidator.cpp\n+src/qt/bitcoinaddressvalidator.h\n+src/qt/bitcoinamountfield.cpp\n+src/qt/bitcoinamountfield.h\n+src/qt/bitcoingui.cpp\n+src/qt/bitcoingui.h\n+src/qt/bitcoinstrings.cpp\n+src/qt/bitcoinunits.cpp\n+src/qt/bitcoinunits.h\n+src/qt/clientmodel.cpp\n+src/qt/clientmodel.h\n+src/qt/coincontroldialog.cpp\n+src/qt/coincontroldialog.h\n+src/qt/coincontroltreewidget.cpp\n+src/qt/coincontroltreewidget.h\n+src/qt/csvmodelwriter.cpp\n+src/qt/csvmodelwriter.h\n+src/qt/editaddressdialog.cpp\n+src/qt/editaddressdialog.h\n+src/qt/forms/ui_addressbookpage.h\n+src/qt/forms/ui_askpassphrasedialog.h\n+src/qt/forms/ui_coincontroldialog.h\n+src/qt/forms/ui_debugwindow.h\n+src/qt/forms/ui_editaddressdialog.h\n+src/qt/forms/ui_helpmessagedialog.h\n+src/qt/forms/ui_intro.h\n+src/qt/forms/ui_mempoolstats.h\n+src/qt/forms/ui_modaloverlay.h\n+src/qt/forms/ui_openuridialog.h\n+src/qt/forms/ui_optionsdialog.h\n+src/qt/forms/ui_overviewpage.h\n+src/qt/forms/ui_receivecoinsdialog.h\n+src/qt/forms/ui_receiverequestdialog.h\n+src/qt/forms/ui_sendcoinsdialog.h\n+src/qt/forms/ui_sendcoinsentry.h\n+src/qt/forms/ui_signverifymessagedialog.h\n+src/qt/forms/ui_transactiondescdialog.h\n+src/qt/guiconstants.h\n+src/qt/guiutil.cpp\n+src/qt/guiutil.h\n+src/qt/intro.cpp\n+src/qt/intro.h\n+src/qt/macdockiconhandler.h\n+src/qt/macnotificationhandler.h\n+src/qt/macos_appnap.h\n+src/qt/main.cpp\n+src/qt/moc_addressbookpage.cpp\n+src/qt/moc_addresstablemodel.cpp\n+src/qt/moc_askpassphrasedialog.cpp\n+src/qt/moc_bantablemodel.cpp\n+src/qt/moc_bitcoin.cpp\n+src/qt/moc_bitcoinaddressvalidator.cpp\n+src/qt/moc_bitcoinamountfield.cpp\n+src/qt/moc_bitcoingui.cpp\n+src/qt/moc_bitcoinunits.cpp\n+src/qt/moc_callback.cpp\n+src/qt/moc_clientmodel.cpp\n+src/qt/moc_coincontroldialog.cpp\n+src/qt/moc_coincontroltreewidget.cpp\n+src/qt/moc_csvmodelwriter.cpp\n+src/qt/moc_editaddressdialog.cpp\n+src/qt/moc_guiutil.cpp\n+src/qt/moc_intro.cpp\n+src/qt/moc_macdockiconhandler.cpp\n+src/qt/moc_macnotificationhandler.cpp\n+src/qt/moc_mempoolstats.cpp\n+src/qt/moc_modaloverlay.cpp\n+src/qt/moc_netwatch.cpp\n+src/qt/moc_notificator.cpp\n+src/qt/moc_openuridialog.cpp\n+src/qt/moc_optionsdialog.cpp\n+src/qt/moc_optionsmodel.cpp\n+src/qt/moc_overviewpage.cpp\n+src/qt/moc_paymentserver.cpp\n+src/qt/moc_peertablemodel.cpp\n+src/qt/moc_qrimagewidget.cpp\n+src/qt/moc_qvalidatedlineedit.cpp\n+src/qt/moc_qvaluecombobox.cpp\n+src/qt/moc_receivecoinsdialog.cpp\n+src/qt/moc_receiverequestdialog.cpp\n+src/qt/moc_recentrequeststablemodel.cpp\n+src/qt/moc_rpcconsole.cpp\n+src/qt/moc_sendcoinsdialog.cpp\n+src/qt/moc_sendcoinsentry.cpp\n+src/qt/moc_signverifymessagedialog.cpp\n+src/qt/moc_splashscreen.cpp\n+src/qt/moc_trafficgraphwidget.cpp\n+src/qt/moc_transactiondesc.cpp\n+src/qt/moc_transactiondescdialog.cpp\n+src/qt/moc_transactionfilterproxy.cpp\n+src/qt/moc_transactiontablemodel.cpp\n+src/qt/moc_transactionview.cpp\n+src/qt/moc_utilitydialog.cpp\n+src/qt/moc_walletcontroller.cpp\n+src/qt/moc_walletframe.cpp\n+src/qt/moc_walletmodel.cpp\n+src/qt/moc_walletview.cpp\n+src/qt/modaloverlay.cpp\n+src/qt/modaloverlay.h\n+src/qt/networkstyle.cpp\n+src/qt/networkstyle.h\n+src/qt/notificator.cpp\n+src/qt/notificator.h\n+src/qt/openuridialog.cpp\n+src/qt/openuridialog.h\n+src/qt/optionsdialog.cpp\n+src/qt/optionsdialog.h\n+src/qt/optionsmodel.cpp\n+src/qt/optionsmodel.h\n+src/qt/overviewpage.cpp\n+src/qt/overviewpage.h\n+src/qt/paymentrequest.pb.cc\n+src/qt/paymentrequest.pb.h\n+src/qt/paymentrequestplus.cpp\n+src/qt/paymentrequestplus.h\n+src/qt/paymentserver.cpp\n+src/qt/paymentserver.h\n+src/qt/peertablemodel.cpp\n+src/qt/peertablemodel.h\n+src/qt/platformstyle.cpp\n+src/qt/platformstyle.h\n+src/qt/qrc_bitcoin.cpp\n+src/qt/qrc_bitcoin_locale.cpp\n+src/qt/qrimagewidget.cpp\n+src/qt/qrimagewidget.h\n+src/qt/qvalidatedlineedit.cpp\n+src/qt/qvalidatedlineedit.h\n+src/qt/qvaluecombobox.cpp\n+src/qt/qvaluecombobox.h\n+src/qt/receivecoinsdialog.cpp\n+src/qt/receivecoinsdialog.h\n+src/qt/receiverequestdialog.cpp\n+src/qt/receiverequestdialog.h\n+src/qt/recentrequeststablemodel.cpp\n+src/qt/recentrequeststablemodel.h\n+src/qt/rpcconsole.cpp\n+src/qt/rpcconsole.h\n+src/qt/sendcoinsdialog.cpp\n+src/qt/sendcoinsdialog.h\n+src/qt/sendcoinsentry.cpp\n+src/qt/sendcoinsentry.h\n+src/qt/signverifymessagedialog.cpp\n+src/qt/signverifymessagedialog.h\n+src/qt/splashscreen.cpp\n+src/qt/splashscreen.h\n+src/qt/test/addressbooktests.cpp\n+src/qt/test/addressbooktests.h\n+src/qt/test/apptests.cpp\n+src/qt/test/apptests.h\n+src/qt/test/compattests.cpp\n+src/qt/test/compattests.h\n+src/qt/test/moc_addressbooktests.cpp\n+src/qt/test/moc_apptests.cpp\n+src/qt/test/moc_compattests.cpp\n+src/qt/test/moc_paymentservertests.cpp\n+src/qt/test/moc_rpcnestedtests.cpp\n+src/qt/test/moc_uritests.cpp\n+src/qt/test/moc_wallettests.cpp\n+src/qt/test/paymentrequestdata.h\n+src/qt/test/paymentservertests.cpp\n+src/qt/test/paymentservertests.h\n+src/qt/test/rpcnestedtests.cpp\n+src/qt/test/rpcnestedtests.h\n+src/qt/test/test_main.cpp\n+src/qt/test/uritests.cpp\n+src/qt/test/uritests.h\n+src/qt/test/util.cpp\n+src/qt/test/util.h\n+src/qt/test/wallettests.cpp\n+src/qt/test/wallettests.h\n+src/qt/trafficgraphwidget.cpp\n+src/qt/trafficgraphwidget.h\n+src/qt/transactiondesc.cpp\n+src/qt/transactiondesc.h\n+src/qt/transactiondescdialog.cpp\n+src/qt/transactiondescdialog.h\n+src/qt/transactionfilterproxy.cpp\n+src/qt/transactionfilterproxy.h\n+src/qt/transactionrecord.cpp\n+src/qt/transactionrecord.h\n+src/qt/transactiontablemodel.cpp\n+src/qt/transactiontablemodel.h\n+src/qt/transactionview.cpp\n+src/qt/transactionview.h\n+src/qt/utilitydialog.cpp\n+src/qt/utilitydialog.h\n+src/qt/walletcontroller.cpp\n+src/qt/walletcontroller.h\n+src/qt/walletframe.cpp\n+src/qt/walletframe.h\n+src/qt/walletmodel.cpp\n+src/qt/walletmodel.h\n+src/qt/walletmodeltransaction.cpp\n+src/qt/walletmodeltransaction.h\n+src/qt/walletview.cpp\n+src/qt/walletview.h\n+src/qt/winshutdownmonitor.cpp\n+src/qt/winshutdownmonitor.h\n+src/random.cpp\n+src/random.h\n+src/rest.cpp\n+src/reverse_iterator.h\n+src/reverselock.h\n+src/rpc/blockchain.cpp\n+src/rpc/blockchain.h\n+src/rpc/client.cpp\n+src/rpc/client.h\n+src/rpc/mining.cpp\n+src/rpc/misc.cpp\n+src/rpc/net.cpp\n+src/rpc/protocol.h\n+src/rpc/rawtransaction.cpp\n+src/rpc/rawtransaction_util.cpp\n+src/rpc/rawtransaction_util.h\n+src/rpc/register.h\n+src/rpc/request.cpp\n+src/rpc/request.h\n+src/rpc/server.cpp\n+src/rpc/server.h\n+src/rpc/util.cpp\n+src/rpc/util.h\n+src/scheduler.cpp\n+src/scheduler.h\n+src/script/bitcoinconsensus.cpp\n+src/script/bitcoinconsensus.h\n+src/script/descriptor.cpp\n+src/script/descriptor.h\n+src/script/interpreter.cpp\n+src/script/interpreter.h\n+src/script/keyorigin.h\n+src/script/script.cpp\n+src/script/script.h\n+src/script/script_error.cpp\n+src/script/script_error.h\n+src/script/sigcache.cpp\n+src/script/sigcache.h\n+src/script/sign.cpp\n+src/script/sign.h\n+src/script/signingprovider.cpp\n+src/script/signingprovider.h\n+src/script/standard.cpp\n+src/script/standard.h\n+src/secp256k1/contrib/lax_der_parsing.c\n+src/secp256k1/contrib/lax_der_parsing.h\n+src/secp256k1/contrib/lax_der_privatekey_parsing.c\n+src/secp256k1/contrib/lax_der_privatekey_parsing.h\n+src/secp256k1/include/secp256k1.h\n+src/secp256k1/include/secp256k1_ecdh.h\n+src/secp256k1/include/secp256k1_recovery.h\n+src/secp256k1/src/basic-config.h\n+src/secp256k1/src/bench.h\n+src/secp256k1/src/bench_ecdh.c\n+src/secp256k1/src/bench_ecmult.c\n+src/secp256k1/src/bench_internal.c\n+src/secp256k1/src/bench_recover.c\n+src/secp256k1/src/bench_sign.c\n+src/secp256k1/src/bench_verify.c\n+src/secp256k1/src/ecdsa.h\n+src/secp256k1/src/ecdsa_impl.h\n+src/secp256k1/src/eckey.h\n+src/secp256k1/src/eckey_impl.h\n+src/secp256k1/src/ecmult.h\n+src/secp256k1/src/ecmult_const.h\n+src/secp256k1/src/ecmult_const_impl.h\n+src/secp256k1/src/ecmult_gen.h\n+src/secp256k1/src/ecmult_gen_impl.h\n+src/secp256k1/src/ecmult_impl.h\n+src/secp256k1/src/ecmult_static_context.h\n+src/secp256k1/src/field.h\n+src/secp256k1/src/field_10x26.h\n+src/secp256k1/src/field_10x26_impl.h\n+src/secp256k1/src/field_5x52.h\n+src/secp256k1/src/field_5x52_asm_impl.h\n+src/secp256k1/src/field_5x52_impl.h\n+src/secp256k1/src/field_5x52_int128_impl.h\n+src/secp256k1/src/field_impl.h\n+src/secp256k1/src/gen_context.c\n+src/secp256k1/src/group.h\n+src/secp256k1/src/group_impl.h\n+src/secp256k1/src/hash.h\n+src/secp256k1/src/hash_impl.h\n+src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c\n+src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h\n+src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c\n+src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h\n+src/secp256k1/src/libsecp256k1-config.h\n+src/secp256k1/src/modules/ecdh/main_impl.h\n+src/secp256k1/src/modules/ecdh/tests_impl.h\n+src/secp256k1/src/modules/recovery/main_impl.h\n+src/secp256k1/src/modules/recovery/tests_impl.h\n+src/secp256k1/src/num.h\n+src/secp256k1/src/num_gmp.h\n+src/secp256k1/src/num_gmp_impl.h\n+src/secp256k1/src/num_impl.h\n+src/secp256k1/src/scalar.h\n+src/secp256k1/src/scalar_4x64.h\n+src/secp256k1/src/scalar_4x64_impl.h\n+src/secp256k1/src/scalar_8x32.h\n+src/secp256k1/src/scalar_8x32_impl.h\n+src/secp256k1/src/scalar_impl.h\n+src/secp256k1/src/scalar_low.h\n+src/secp256k1/src/scalar_low_impl.h\n+src/secp256k1/src/scratch.h\n+src/secp256k1/src/scratch_impl.h\n+src/secp256k1/src/secp256k1.c\n+src/secp256k1/src/testrand.h\n+src/secp256k1/src/testrand_impl.h\n+src/secp256k1/src/tests.c\n+src/secp256k1/src/tests_exhaustive.c\n+src/secp256k1/src/util.h\n+src/serialize.h\n+src/shutdown.cpp\n+src/shutdown.h\n+src/span.h\n+src/stats/rpc_stats.cpp\n+src/streams.h\n+src/support/allocators/secure.h\n+src/support/allocators/zeroafterfree.h\n+src/support/cleanse.cpp\n+src/support/cleanse.h\n+src/support/events.h\n+src/support/lockedpool.cpp\n+src/support/lockedpool.h\n+src/sync.cpp\n+src/sync.h\n+src/test/addrman_tests.cpp\n+src/test/allocator_tests.cpp\n+src/test/amount_tests.cpp\n+src/test/arith_uint256_tests.cpp\n+src/test/base32_tests.cpp\n+src/test/base58_tests.cpp\n+src/test/base64_tests.cpp\n+src/test/bech32_tests.cpp\n+src/test/bip32_tests.cpp\n+src/test/blockchain_tests.cpp\n+src/test/blockencodings_tests.cpp\n+src/test/blockfilter_index_tests.cpp\n+src/test/blockfilter_tests.cpp\n+src/test/bloom_tests.cpp\n+src/test/bswap_tests.cpp\n+src/test/checkqueue_tests.cpp\n+src/test/coins_tests.cpp\n+src/test/compilerbug_tests.cpp\n+src/test/compress_tests.cpp\n+src/test/crypto_tests.cpp\n+src/test/cuckoocache_tests.cpp\n+src/test/data/base58_encode_decode.json.h\n+src/test/data/base58_keys_invalid.json.h\n+src/test/data/base58_keys_valid.json.h\n+src/test/data/blockfilters.json.h\n+src/test/data/key_io_invalid.json.h\n+src/test/data/key_io_valid.json.h\n+src/test/data/script_tests.json.h\n+src/test/data/sighash.json.h\n+src/test/data/tx_invalid.json.h\n+src/test/data/tx_valid.json.h\n+src/test/dbwrapper_tests.cpp\n+src/test/denialofservice_tests.cpp\n+src/test/descriptor_tests.cpp\n+src/test/flatfile_tests.cpp\n+src/test/fs_tests.cpp\n+src/test/fuzz/deserialize.cpp\n+src/test/fuzz/fuzz.cpp\n+src/test/fuzz/fuzz.h\n+src/test/fuzz/script_flags.cpp\n+src/test/gen/crypto_gen.cpp\n+src/test/gen/crypto_gen.h\n+src/test/getarg_tests.cpp\n+src/test/hash_tests.cpp\n+src/test/key_io_tests.cpp\n+src/test/key_properties.cpp\n+src/test/key_tests.cpp\n+src/test/limitedmap_tests.cpp\n+src/test/main.cpp\n+src/test/mempool_tests.cpp\n+src/test/merkle_tests.cpp\n+src/test/merkleblock_tests.cpp\n+src/test/miner_tests.cpp\n+src/test/multisig_tests.cpp\n+src/test/net_tests.cpp\n+src/test/netbase_tests.cpp\n+src/test/pmt_tests.cpp\n+src/test/policyestimator_tests.cpp\n+src/test/pow_tests.cpp\n+src/test/prevector_tests.cpp\n+src/test/raii_event_tests.cpp\n+src/test/random_tests.cpp\n+src/test/reverselock_tests.cpp\n+src/test/rpc_tests.cpp\n+src/test/sanity_tests.cpp\n+src/test/scheduler_tests.cpp\n+src/test/script_p2sh_tests.cpp\n+src/test/script_standard_tests.cpp\n+src/test/script_tests.cpp\n+src/test/scriptnum10.h\n+src/test/scriptnum_tests.cpp\n+src/test/serialize_tests.cpp\n+src/test/setup_common.cpp\n+src/test/setup_common.h\n+src/test/sighash_tests.cpp\n+src/test/sigopcount_tests.cpp\n+src/test/skiplist_tests.cpp\n+src/test/streams_tests.cpp\n+src/test/sync_tests.cpp\n+src/test/timedata_tests.cpp\n+src/test/torcontrol_tests.cpp\n+src/test/transaction_tests.cpp\n+src/test/txindex_tests.cpp\n+src/test/txvalidation_tests.cpp\n+src/test/txvalidationcache_tests.cpp\n+src/test/uint256_tests.cpp\n+src/test/util.cpp\n+src/test/util.h\n+src/test/util_tests.cpp\n+src/test/util_threadnames_tests.cpp\n+src/test/validation_block_tests.cpp\n+src/test/validation_tests.cpp\n+src/test/versionbits_tests.cpp\n+src/threadinterrupt.cpp\n+src/threadinterrupt.h\n+src/threadsafety.h\n+src/timedata.cpp\n+src/timedata.h\n+src/tinyformat.h\n+src/torcontrol.cpp\n+src/torcontrol.h\n+src/txdb.cpp\n+src/txdb.h\n+src/txmempool.cpp\n+src/txmempool.h\n+src/ui_interface.cpp\n+src/ui_interface.h\n+src/uint256.cpp\n+src/uint256.h\n+src/undo.h\n+src/univalue/gen/gen.cpp\n+src/univalue/include/univalue.h\n+src/univalue/lib/univalue.cpp\n+src/univalue/lib/univalue_escapes.h\n+src/univalue/lib/univalue_get.cpp\n+src/univalue/lib/univalue_read.cpp\n+src/univalue/lib/univalue_utffilter.h\n+src/univalue/lib/univalue_write.cpp\n+src/univalue/test/no_nul.cpp\n+src/univalue/test/object.cpp\n+src/univalue/test/test_json.cpp\n+src/univalue/test/unitester.cpp\n+src/univalue/univalue-config.h\n+src/util/bip32.cpp\n+src/util/bip32.h\n+src/util/bytevectorhash.cpp\n+src/util/bytevectorhash.h\n+src/util/error.cpp\n+src/util/error.h\n+src/util/fees.cpp\n+src/util/fees.h\n+src/util/memory.h\n+src/util/moneystr.cpp\n+src/util/moneystr.h\n+src/util/rbf.cpp\n+src/util/rbf.h\n+src/util/strencodings.cpp\n+src/util/strencodings.h\n+src/util/system.cpp\n+src/util/system.h\n+src/util/threadnames.cpp\n+src/util/threadnames.h\n+src/util/time.cpp\n+src/util/time.h\n+src/util/url.cpp\n+src/util/url.h\n+src/util/validation.cpp\n+src/util/validation.h\n+src/validation.cpp\n+src/validation.h\n+src/validationinterface.cpp\n+src/validationinterface.h\n+src/version.h\n+src/versionbits.cpp\n+src/versionbits.h\n+src/versionbitsinfo.cpp\n+src/versionbitsinfo.h\n+src/wallet/coincontrol.cpp\n+src/wallet/coincontrol.h\n+src/wallet/coinselection.cpp\n+src/wallet/coinselection.h\n+src/wallet/crypter.cpp\n+src/wallet/crypter.h\n+src/wallet/db.cpp\n+src/wallet/db.h\n+src/wallet/feebumper.cpp\n+src/wallet/feebumper.h\n+src/wallet/fees.cpp\n+src/wallet/fees.h\n+src/wallet/init.cpp\n+src/wallet/ismine.cpp\n+src/wallet/ismine.h\n+src/wallet/load.cpp\n+src/wallet/load.h\n+src/wallet/psbtwallet.cpp\n+src/wallet/psbtwallet.h\n+src/wallet/rpcdump.cpp\n+src/wallet/rpcwallet.cpp\n+src/wallet/rpcwallet.h\n+src/wallet/storageinterface.h\n+src/wallet/test/coinselector_tests.cpp\n+src/wallet/test/db_tests.cpp\n+src/wallet/test/init_test_fixture.cpp\n+src/wallet/test/init_test_fixture.h\n+src/wallet/test/init_tests.cpp\n+src/wallet/test/ismine_tests.cpp\n+src/wallet/test/psbt_wallet_tests.cpp\n+src/wallet/test/wallet_crypto_tests.cpp\n+src/wallet/test/wallet_test_fixture.cpp\n+src/wallet/test/wallet_test_fixture.h\n+src/wallet/test/wallet_tests.cpp\n+src/wallet/wallet.cpp\n+src/wallet/wallet.h\n+src/wallet/wallet1.cpp\n+src/wallet/walletdb.cpp\n+src/wallet/walletdb.h\n+src/wallet/wallettool.cpp\n+src/wallet/wallettool.h\n+src/wallet/walletutil.cpp\n+src/wallet/walletutil.h\n+src/walletinitinterface.h\n+src/warnings.cpp\n+src/warnings.h\n+src/zmq/zmqabstractnotifier.cpp\n+src/zmq/zmqabstractnotifier.h\n+src/zmq/zmqconfig.h\n+src/zmq/zmqnotificationinterface.cpp\n+src/zmq/zmqnotificationinterface.h\n+src/zmq/zmqpublishnotifier.cpp\n+src/zmq/zmqpublishnotifier.h\n+src/zmq/zmqrpc.cpp\n+src/zmq/zmqrpc.h\n+test/functional/README.md\n+test/functional/combine_logs.py\n+test/functional/combined_log_template.html\n+test/functional/config.ini\n+test/functional/create_cache.py\n+test/functional/data/__pycache__/invalid_txs.cpython-36.pyc\n+test/functional/data/__pycache__/invalid_txs.cpython-37.pyc\n+test/functional/data/invalid_txs.py\n+test/functional/data/rpc_getblockstats.json\n+test/functional/data/rpc_psbt.json\n+test/functional/example_test.py\n+test/functional/feature_assumevalid.py\n+test/functional/feature_bip68_sequence.py\n+test/functional/feature_block.py\n+test/functional/feature_blocksdir.py\n+test/functional/feature_cltv.py\n+test/functional/feature_config_args.py\n+test/functional/feature_csv_activation.py\n+test/functional/feature_dbcrash.py\n+test/functional/feature_dersig.py\n+test/functional/feature_fee_estimation.py\n+test/functional/feature_filelock.py\n+test/functional/feature_help.py\n+test/functional/feature_includeconf.py\n+test/functional/feature_logging.py\n+test/functional/feature_maxuploadtarget.py\n+test/functional/feature_minchainwork.py\n+test/functional/feature_notifications.py\n+test/functional/feature_nulldummy.py\n+test/functional/feature_proxy.py\n+test/functional/feature_pruning.py\n+test/functional/feature_pruning_smallblockfiles.py\n+test/functional/feature_rbf.py\n+test/functional/feature_reindex.py\n+test/functional/feature_segwit.py\n+test/functional/feature_shutdown.py\n+test/functional/feature_uacomment.py\n+test/functional/feature_versionbits_warning.py\n+test/functional/interface_bitcoin_cli.py\n+test/functional/interface_http.py\n+test/functional/interface_rest.py\n+test/functional/interface_rpc.py\n+test/functional/interface_zmq.py\n+test/functional/mempool_accept.py\n+test/functional/mempool_limit.py\n+test/functional/mempool_packages.py\n+test/functional/mempool_persist.py\n+test/functional/mempool_reorg.py\n+test/functional/mempool_resurrect.py\n+test/functional/mempool_spend_coinbase.py\n+test/functional/mempoolstats.py\n+test/functional/mining_basic.py\n+test/functional/mining_getblocktemplate_longpoll.py\n+test/functional/mining_prioritisetransaction.py\n+test/functional/p2p_blocksonly.py\n+test/functional/p2p_compactblocks.py\n+test/functional/p2p_disconnect_ban.py\n+test/functional/p2p_feefilter.py\n+test/functional/p2p_fingerprint.py\n+test/functional/p2p_invalid_block.py\n+test/functional/p2p_invalid_locator.py\n+test/functional/p2p_invalid_messages.py\n+test/functional/p2p_invalid_tx.py\n+test/functional/p2p_leak.py\n+test/functional/p2p_leak_tx.py\n+test/functional/p2p_mempool.py\n+test/functional/p2p_node_network_limited.py\n+test/functional/p2p_segwit.py\n+test/functional/p2p_sendheaders.py\n+test/functional/p2p_timeouts.py\n+test/functional/p2p_unrequested_blocks.py\n+test/functional/rpc_bind.py\n+test/functional/rpc_blockchain.py\n+test/functional/rpc_createmultisig.py\n+test/functional/rpc_decodescript.py\n+test/functional/rpc_deprecated.py\n+test/functional/rpc_deriveaddresses.py\n+test/functional/rpc_fundrawtransaction.py\n+test/functional/rpc_getblockfilter.py\n+test/functional/rpc_getblockstats.py\n+test/functional/rpc_getchaintips.py\n+test/functional/rpc_help.py\n+test/functional/rpc_invalidateblock.py\n+test/functional/rpc_misc.py\n+test/functional/rpc_named_arguments.py\n+test/functional/rpc_net.py\n+test/functional/rpc_preciousblock.py\n+test/functional/rpc_psbt.py\n+test/functional/rpc_rawtransaction.py\n+test/functional/rpc_scantxoutset.py\n+test/functional/rpc_signmessage.py\n+test/functional/rpc_signrawtransaction.py\n+test/functional/rpc_txoutproof.py\n+test/functional/rpc_uptime.py\n+test/functional/rpc_users.py\n+test/functional/spv.py\n+test/functional/test_framework/__init__.py\n+test/functional/test_framework/__pycache__/__init__.cpython-36.pyc\n+test/functional/test_framework/__pycache__/__init__.cpython-37.pyc\n+test/functional/test_framework/__pycache__/address.cpython-36.pyc\n+test/functional/test_framework/__pycache__/address.cpython-37.pyc\n+test/functional/test_framework/__pycache__/authproxy.cpython-36.pyc\n+test/functional/test_framework/__pycache__/authproxy.cpython-37.pyc\n+test/functional/test_framework/__pycache__/bignum.cpython-36.pyc\n+test/functional/test_framework/__pycache__/bignum.cpython-37.pyc\n+test/functional/test_framework/__pycache__/blocktools.cpython-36.pyc\n+test/functional/test_framework/__pycache__/blocktools.cpython-37.pyc\n+test/functional/test_framework/__pycache__/coverage.cpython-36.pyc\n+test/functional/test_framework/__pycache__/coverage.cpython-37.pyc\n+test/functional/test_framework/__pycache__/descriptors.cpython-36.pyc\n+test/functional/test_framework/__pycache__/descriptors.cpython-37.pyc\n+test/functional/test_framework/__pycache__/key.cpython-36.pyc\n+test/functional/test_framework/__pycache__/key.cpython-37.pyc\n+test/functional/test_framework/__pycache__/messages.cpython-36.pyc\n+test/functional/test_framework/__pycache__/messages.cpython-37.pyc\n+test/functional/test_framework/__pycache__/mininode.cpython-36.pyc\n+test/functional/test_framework/__pycache__/mininode.cpython-37.pyc\n+test/functional/test_framework/__pycache__/netutil.cpython-36.pyc\n+test/functional/test_framework/__pycache__/netutil.cpython-37.pyc\n+test/functional/test_framework/__pycache__/script.cpython-36.pyc\n+test/functional/test_framework/__pycache__/script.cpython-37.pyc\n+test/functional/test_framework/__pycache__/segwit_addr.cpython-36.pyc\n+test/functional/test_framework/__pycache__/segwit_addr.cpython-37.pyc\n+test/functional/test_framework/__pycache__/siphash.cpython-36.pyc\n+test/functional/test_framework/__pycache__/siphash.cpython-37.pyc\n+test/functional/test_framework/__pycache__/socks5.cpython-36.pyc\n+test/functional/test_framework/__pycache__/socks5.cpython-37.pyc\n+test/functional/test_framework/__pycache__/test_framework.cpython-36.pyc\n+test/functional/test_framework/__pycache__/test_framework.cpython-37.pyc\n+test/functional/test_framework/__pycache__/test_node.cpython-36.pyc\n+test/functional/test_framework/__pycache__/test_node.cpython-37.pyc\n+test/functional/test_framework/__pycache__/util.cpython-36.pyc\n+test/functional/test_framework/__pycache__/util.cpython-37.pyc\n+test/functional/test_framework/__pycache__/wallet_util.cpython-36.pyc\n+test/functional/test_framework/__pycache__/wallet_util.cpython-37.pyc\n+test/functional/test_framework/address.py\n+test/functional/test_framework/authproxy.py\n+test/functional/test_framework/bignum.py\n+test/functional/test_framework/blocktools.py\n+test/functional/test_framework/coverage.py\n+test/functional/test_framework/descriptors.py\n+test/functional/test_framework/key.py\n+test/functional/test_framework/messages.py\n+test/functional/test_framework/mininode.py\n+test/functional/test_framework/netutil.py\n+test/functional/test_framework/script.py\n+test/functional/test_framework/segwit_addr.py\n+test/functional/test_framework/siphash.py\n+test/functional/test_framework/socks5.py\n+test/functional/test_framework/test_framework.py\n+test/functional/test_framework/test_node.py\n+test/functional/test_framework/util.py\n+test/functional/test_framework/wallet_util.py\n+test/functional/test_runner.py\n+test/functional/tool_wallet.py\n+test/functional/wallet_abandonconflict.py\n+test/functional/wallet_address_types.py\n+test/functional/wallet_avoidreuse.py\n+test/functional/wallet_backup.py\n+test/functional/wallet_balance.py\n+test/functional/wallet_basic.py\n+test/functional/wallet_bumpfee.py\n+test/functional/wallet_coinbase_category.py\n+test/functional/wallet_create_tx.py\n+test/functional/wallet_createwallet.py\n+test/functional/wallet_disable.py\n+test/functional/wallet_dump.py\n+test/functional/wallet_encryption.py\n+test/functional/wallet_fallbackfee.py\n+test/functional/wallet_groups.py\n+test/functional/wallet_hd.py\n+test/functional/wallet_import_rescan.py\n+test/functional/wallet_import_with_label.py\n+test/functional/wallet_importmulti.py\n+test/functional/wallet_importprunedfunds.py\n+test/functional/wallet_keypool.py\n+test/functional/wallet_keypool_topup.py\n+test/functional/wallet_labels.py\n+test/functional/wallet_listreceivedby.py\n+test/functional/wallet_listsinceblock.py\n+test/functional/wallet_listtransactions.py\n+test/functional/wallet_multiwallet.py\n+test/functional/wallet_resendwallettransactions.py\n+test/functional/wallet_txn_clone.py\n+test/functional/wallet_txn_doublespend.py\n+test/functional/wallet_zapwallettxes.py"
      },
      {
        "sha": "7465ad8ec973213d70823ad813ccd23bc37088bf",
        "filename": "Bitcoin-Qt.includes",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.includes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/Bitcoin-Qt.includes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Bitcoin-Qt.includes?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -0,0 +1,45 @@\n+src\n+src/bench\n+src/bench/data\n+src/compat\n+src/config\n+src/consensus\n+src/crypto\n+src/crypto/ctaes\n+src/index\n+src/interfaces\n+src/leveldb/db\n+src/leveldb/helpers/memenv\n+src/leveldb/include/leveldb\n+src/leveldb/port\n+src/leveldb/port/win\n+src/leveldb/table\n+src/leveldb/util\n+src/node\n+src/obj\n+src/policy\n+src/primitives\n+src/qt\n+src/qt/forms\n+src/qt/test\n+src/rpc\n+src/script\n+src/secp256k1/contrib\n+src/secp256k1/include\n+src/secp256k1/src\n+src/secp256k1/src/java\n+src/secp256k1/src/modules/ecdh\n+src/secp256k1/src/modules/recovery\n+src/support\n+src/support/allocators\n+src/test\n+src/test/data\n+src/test/fuzz\n+src/test/gen\n+src/univalue\n+src/univalue/include\n+src/univalue/lib\n+src/util\n+src/wallet\n+src/wallet/test\n+src/zmq"
      },
      {
        "sha": "4c972ae20591478d88c1dd6701e507b1612bbbd3",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -301,7 +301,7 @@ static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n \n     switch (rf) {\n     case RetFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(::mempool);\n+        UniValue mempoolInfoObject = MempoolInfoToJSON(::mempool, false);\n \n         std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");"
      },
      {
        "sha": "c8244f97f2b284b7f60e5f6a09b8debe2e177833",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 78,
        "deletions": 4,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -1476,7 +1476,7 @@ static UniValue getchaintips(const JSONRPCRequest& request)\n     return res;\n }\n \n-UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n+UniValue MempoolInfoToJSON(const CTxMemPool& pool, bool with_fee_histogram)\n {\n     // Make sure this call is atomic in the pool.\n     LOCK(pool.cs);\n@@ -1490,14 +1490,73 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n \n+    if (with_fee_histogram) {\n+        /* TODO: define log scale formular for dynamically creating the\n+         * feelimits but with the property of not constantly changing\n+         * (and thus screw up client implementations) */\n+        static const std::vector<CAmount> feelimits{1, 2, 3, 4, 5, 6, 7, 8, 10,\n+            12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100,\n+            120, 140, 170, 200, 250, 300, 400, 500, 600, 700, 800, 1000,\n+            1200, 1400, 1700, 2000, 2500, 3000, 4000, 5000, 6000, 7000, 8000, 10000};\n+\n+        /* keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(feelimits.size(), 0);\n+        std::vector<uint64_t> count(feelimits.size(), 0);\n+        std::vector<uint64_t> fees(feelimits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; //fee per byte\n+            CAmount afpb = afees / asize; //fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; //fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // distribute feerates into feelimits\n+            for (size_t i = 0; i < feelimits.size(); i++) {\n+                if (feeperbyte >= feelimits[i] && (i == feelimits.size() - 1 || feeperbyte < feelimits[i + 1])) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+        CAmount total_fees = 0; //track total amount of available fees in mempool\n+        UniValue info(UniValue::VOBJ);\n+        for (size_t i = 0; i < feelimits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", feelimits[i]);\n+            info_sub.pushKV(\"to_feerate\", i == feelimits.size() - 1 ? std::numeric_limits<int64_t>::max() : feelimits[i + 1]);\n+            total_fees += fees[i];\n+            info.pushKV(std::to_string(feelimits[i]), info_sub);\n+        }\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static UniValue getmempoolinfo(const JSONRPCRequest& request)\n {\n             RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    {\"with_fee_histogram\", RPCArg::Type::BOOL, /* default */ \"false\", \"True for including the fee histogram in the response\"},\n+                },\n                 RPCResult{\n             \"{\\n\"\n             \"  \\\"loaded\\\": true|false         (boolean) True if the mempool is fully loaded\\n\"\n@@ -1507,6 +1566,17 @@ static UniValue getmempoolinfo(const JSONRPCRequest& request)\n             \"  \\\"maxmempool\\\": xxxxx,         (numeric) Maximum memory usage for the mempool\\n\"\n             \"  \\\"mempoolminfee\\\": xxxxx       (numeric) Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\\n\"\n             \"  \\\"minrelaytxfee\\\": xxxxx       (numeric) Current minimum relay fee for transactions\\n\"\n+            \"  \\\"fee_histogram\\\": {           (json object)\\n\"\n+            \"    \\\"<feerate-group>\\\": {       (json object) Object per feerate group\\n\"\n+            \"      \\\"sizes\\\": xxxxx           (numeric) Cumulated size of all transactions in feerate group\\n\"\n+            \"      \\\"count\\\": xxxxx           (numeric) Amount of transactions in feerate group\\n\"\n+            \"      \\\"fees\\\": xxxxx            (numeric) Cumulated fee of all transactions in feerate group\\n\"\n+            \"      \\\"from_feerate\\\": xxxxx    (numeric) Group contains transaction with feerates equal or greater than this value\\n\"\n+            \"      \\\"to_feerate\\\": xxxxx      (numeric) Group contains transaction with feerates less than than this value\\n\"\n+            \"    }, \\n\"\n+            \"    ..., \\n\"\n+            \"    \\\"total_fees\\\": xxxxx        (numeric) Total available fees in mempool\\n\"\n+            \"  }\\n\"\n             \"}\\n\"\n                 },\n                 RPCExamples{\n@@ -1515,7 +1585,11 @@ static UniValue getmempoolinfo(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    return MempoolInfoToJSON(::mempool);\n+    bool with_fee_histogram = false;\n+    if (!request.params[0].isNull()) {\n+        with_fee_histogram = request.params[0].get_bool();\n+    }\n+    return MempoolInfoToJSON(::mempool, with_fee_histogram);\n }\n \n static UniValue preciousblock(const JSONRPCRequest& request)\n@@ -2327,7 +2401,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    {\"txid\",\"verbose\"} },\n     { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  {\"txid\",\"verbose\"} },\n     { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        {\"txid\"} },\n-    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         {} },\n+    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         {\"with_fee_histogram\"} },\n     { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          {\"verbose\"} },\n     { \"blockchain\",         \"gettxout\",               &gettxout,               {\"txid\",\"n\",\"include_mempool\"} },\n     { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {} },"
      },
      {
        "sha": "0ebaefffe5f62689f67f949bcca729326164d269",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -35,7 +35,7 @@ void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, bool txDetails = false) LOCKS_EXCLUDED(cs_main);\n \n /** Mempool information to JSON */\n-UniValue MempoolInfoToJSON(const CTxMemPool& pool);\n+UniValue MempoolInfoToJSON(const CTxMemPool& pool, bool with_fee_histogram);\n \n /** Mempool to JSON */\n UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose = false);"
      },
      {
        "sha": "3ba63bbe0db6273745ab3a199c8180a6b1ecdb0c",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e573635835df22e7119ca60643d38bf6ed181247/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e573635835df22e7119ca60643d38bf6ed181247/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=e573635835df22e7119ca60643d38bf6ed181247",
        "patch": "@@ -135,6 +135,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getblockstats\", 1, \"stats\" },\n     { \"pruneblockchain\", 0, \"height\" },\n     { \"keypoolrefill\", 0, \"newsize\" },\n+    { \"getmempoolinfo\", 0, \"with_fee_histogram\" },\n     { \"getrawmempool\", 0, \"verbose\" },\n     { \"estimatesmartfee\", 0, \"conf_target\" },\n     { \"estimaterawfee\", 0, \"conf_target\" },"
      }
    ]
  },
  {
    "sha": "b94292a7cb18f0ea482ec62c08d1050c77de04b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTQyOTJhN2NiMThmMGVhNDgyZWM2MmMwOGQxMDUwYzc3ZGUwNGIy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-04-16T10:59:22Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-07-17T09:42:02Z"
      },
      "message": "Add mempool/fee_histogram option to rest API",
      "tree": {
        "sha": "adfbd84d6304d75068508aea25975b52f84f6f93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adfbd84d6304d75068508aea25975b52f84f6f93"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b94292a7cb18f0ea482ec62c08d1050c77de04b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl0u7WoACgkQHrd2uwPH\nki2KPBAApWiJMbARJJGpN/shVvfedz21j74p+fxrv8lnBU/k6KNreDv+jOI1nNHY\nb2Q5MkjDtSXDdkXHx2VWBg4amSAZ9koVZtDywZwNyARcIe+ieXghhvYKj9eY2e+8\nNEOVJKNSxDdANdBUKRgI/qDFHwXVqkAKyO/V8k00NJf+yCs0SzkXkeJ/yw/WFSLS\ncQ3T1swvRqH6nEmjMkIIm+bMdaotHZP88MnAJCIzq2nOA+CbwSfpVH+HU1bb94gD\nM9RWjQlShqAmomWfVZt8KbMmVliGm6qcxxfe5CBLeu9DbyVV1XP247bTXZYIp83V\nPJZXUs8NEdoCBTdGMJGCgEs7xc4ghGzOt+JMoOgaTepdgc87OkcTUq6qMJFwHGNk\nZh37nTpz2nrMokKWp+XbmltCS23FLMqR/8xOVAAQsUMhWJFNVhpIdOWn6FV2Q8QF\n78kvnjBFUGpoI7jlmZoqDCmkW08zMcZgFc3BiBNVj38Z+7TUVOUaK8LQ5F9CgyLY\nRCqO8NqrEuHdvp/pj9tmtsJOcvsryae8o32KhRq8UvvAiDpJP/ESS5xzHZAx2ut1\n8hDSU0nYbFqnhm3xZv3eoRuS+fFLCXMXm1avTNTUZq+PkSVTxg2Vw0eVmFCY47Ik\nCYgVXzNpX2zsQN1TD/aU8TJh0WKKBNJIwZCnPzR8Duy9OXWivkU=\n=BWT+\n-----END PGP SIGNATURE-----",
        "payload": "tree adfbd84d6304d75068508aea25975b52f84f6f93\nparent e573635835df22e7119ca60643d38bf6ed181247\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1555412362 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1563356522 +0200\n\nAdd mempool/fee_histogram option to rest API\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b94292a7cb18f0ea482ec62c08d1050c77de04b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b94292a7cb18f0ea482ec62c08d1050c77de04b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b94292a7cb18f0ea482ec62c08d1050c77de04b2/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e573635835df22e7119ca60643d38bf6ed181247",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e573635835df22e7119ca60643d38bf6ed181247",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e573635835df22e7119ca60643d38bf6ed181247"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "55f871ebbf47c0233ea751e978ff34949a17b9cf",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b94292a7cb18f0ea482ec62c08d1050c77de04b2/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b94292a7cb18f0ea482ec62c08d1050c77de04b2/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=b94292a7cb18f0ea482ec62c08d1050c77de04b2",
        "patch": "@@ -292,7 +292,7 @@ static bool rest_chaininfo(HTTPRequest* req, const std::string& strURIPart)\n     }\n }\n \n-static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n+static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart, bool fee_histogram)\n {\n     if (!CheckWarmup(req))\n         return false;\n@@ -301,7 +301,7 @@ static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n \n     switch (rf) {\n     case RetFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(::mempool, false);\n+        UniValue mempoolInfoObject = MempoolInfoToJSON(::mempool, fee_histogram);\n \n         std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n@@ -314,6 +314,16 @@ static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n     }\n }\n \n+static bool rest_mempool_info_basic(HTTPRequest* req, const std::string& strURIPart)\n+{\n+    return rest_mempool_info(req, strURIPart, false);\n+}\n+\n+static bool rest_mempool_info_with_fee_histogram(HTTPRequest* req, const std::string& strURIPart)\n+{\n+    return rest_mempool_info(req, strURIPart, true);\n+}\n+\n static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPart)\n {\n     if (!CheckWarmup(req))\n@@ -630,7 +640,8 @@ static const struct {\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n       {\"/rest/block/\", rest_block_extended},\n       {\"/rest/chaininfo\", rest_chaininfo},\n-      {\"/rest/mempool/info\", rest_mempool_info},\n+      {\"/rest/mempool/info\", rest_mempool_info_basic},\n+      {\"/rest/mempool/info/with_fee_histogram\", rest_mempool_info_with_fee_histogram},\n       {\"/rest/mempool/contents\", rest_mempool_contents},\n       {\"/rest/headers/\", rest_headers},\n       {\"/rest/getutxos\", rest_getutxos},"
      }
    ]
  }
]