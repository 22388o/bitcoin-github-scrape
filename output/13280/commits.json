[
  {
    "sha": "123466cd22cabb99511fe9c4cbd52d28ba185f60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjM0NjZjZDIyY2FiYjk5NTExZmU5YzRjYmQ1MmQyOGJhMTg1ZjYw",
    "commit": {
      "author": {
        "name": "GreatSock",
        "email": "greatsock@protonmail.com",
        "date": "2018-05-19T12:15:01Z"
      },
      "committer": {
        "name": "GreatSock",
        "email": "greatsock@protonmail.com",
        "date": "2018-05-19T12:15:01Z"
      },
      "message": "[qt] AmountField min/max value, allow empty option\nThis adds functions for specifing a min/max value for a BitcoinAmountField. These options only affect user input, so it's still possible to use setValue to set values outside of the min/max range. The existing value will not be changed when calling these functions even if it's out of range. The min/max range will be reinforced when the field loses focus.\nThis also adds an allow empty function which specifies if the field is allowed to be left empty by the user. If set to false the field will be set to the minimum allowed value if it's empty when focus is lost.",
      "tree": {
        "sha": "3d981b7d52e1065d46177d70857bb44bddd82061",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d981b7d52e1065d46177d70857bb44bddd82061"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/123466cd22cabb99511fe9c4cbd52d28ba185f60",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/123466cd22cabb99511fe9c4cbd52d28ba185f60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/123466cd22cabb99511fe9c4cbd52d28ba185f60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/123466cd22cabb99511fe9c4cbd52d28ba185f60/comments",
    "author": {
      "login": "GreatSock",
      "id": 39350803,
      "node_id": "MDQ6VXNlcjM5MzUwODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39350803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GreatSock",
      "html_url": "https://github.com/GreatSock",
      "followers_url": "https://api.github.com/users/GreatSock/followers",
      "following_url": "https://api.github.com/users/GreatSock/following{/other_user}",
      "gists_url": "https://api.github.com/users/GreatSock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GreatSock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GreatSock/subscriptions",
      "organizations_url": "https://api.github.com/users/GreatSock/orgs",
      "repos_url": "https://api.github.com/users/GreatSock/repos",
      "events_url": "https://api.github.com/users/GreatSock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GreatSock/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "GreatSock",
      "id": 39350803,
      "node_id": "MDQ6VXNlcjM5MzUwODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39350803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GreatSock",
      "html_url": "https://github.com/GreatSock",
      "followers_url": "https://api.github.com/users/GreatSock/followers",
      "following_url": "https://api.github.com/users/GreatSock/following{/other_user}",
      "gists_url": "https://api.github.com/users/GreatSock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GreatSock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GreatSock/subscriptions",
      "organizations_url": "https://api.github.com/users/GreatSock/orgs",
      "repos_url": "https://api.github.com/users/GreatSock/repos",
      "events_url": "https://api.github.com/users/GreatSock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GreatSock/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d792e47421fcb9ce3b381c1e6d8902777ae3f9f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d792e47421fcb9ce3b381c1e6d8902777ae3f9f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d792e47421fcb9ce3b381c1e6d8902777ae3f9f3"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 68,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0ea4f83ba64938735ea2497df4b429486038c659",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 8,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/123466cd22cabb99511fe9c4cbd52d28ba185f60/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/123466cd22cabb99511fe9c4cbd52d28ba185f60/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=123466cd22cabb99511fe9c4cbd52d28ba185f60",
        "patch": "@@ -25,7 +25,10 @@ class AmountSpinBox: public QAbstractSpinBox\n     explicit AmountSpinBox(QWidget *parent):\n         QAbstractSpinBox(parent),\n         currentUnit(BitcoinUnits::BTC),\n-        singleStep(100000) // satoshis\n+        singleStep(100000), // satoshis\n+        allow_empty(true),\n+        min_amount(0),\n+        max_amount(BitcoinUnits::maxMoney())\n     {\n         setAlignment(Qt::AlignRight);\n \n@@ -44,10 +47,24 @@ class AmountSpinBox: public QAbstractSpinBox\n \n     void fixup(QString &input) const\n     {\n-        bool valid = false;\n-        CAmount val = parse(input, &valid);\n-        if(valid)\n-        {\n+        bool valid;\n+        CAmount val;\n+\n+        if (input.isEmpty() && !allow_empty) {\n+            valid = true;\n+            val = min_amount;\n+        } else {\n+            valid = false;\n+            val = parse(input, &valid);\n+        }\n+\n+        if (valid) {\n+            if (val < min_amount) {\n+                val = min_amount;\n+            }\n+            if (val > max_amount) {\n+                val = max_amount;\n+            }\n             input = BitcoinUnits::format(currentUnit, val, false, BitcoinUnits::separatorAlways);\n             lineEdit()->setText(input);\n         }\n@@ -64,12 +81,27 @@ class AmountSpinBox: public QAbstractSpinBox\n         Q_EMIT valueChanged();\n     }\n \n+    void SetAllowEmpty(bool allow)\n+    {\n+        allow_empty = allow;\n+    }\n+\n+    void SetMinValue(const CAmount& value)\n+    {\n+        min_amount = value;\n+    }\n+\n+    void SetMaxValue(const CAmount& value)\n+    {\n+        max_amount = value;\n+    }\n+\n     void stepBy(int steps)\n     {\n         bool valid = false;\n         CAmount val = value(&valid);\n         val = val + steps * singleStep;\n-        val = qMin(qMax(val, CAmount(0)), BitcoinUnits::maxMoney());\n+        val = qMin(qMax(val, CAmount(min_amount)), max_amount);\n         setValue(val);\n     }\n \n@@ -129,6 +161,10 @@ class AmountSpinBox: public QAbstractSpinBox\n     CAmount singleStep;\n     mutable QSize cachedMinimumSizeHint;\n \n+    bool allow_empty;\n+    CAmount min_amount;\n+    CAmount max_amount;\n+\n     /**\n      * Parse a string into a number of base monetary units and\n      * return validity.\n@@ -176,9 +212,9 @@ class AmountSpinBox: public QAbstractSpinBox\n         CAmount val = value(&valid);\n         if(valid)\n         {\n-            if(val > 0)\n+            if(val > min_amount)\n                 rv |= StepDownEnabled;\n-            if(val < BitcoinUnits::maxMoney())\n+            if(val < max_amount)\n                 rv |= StepUpEnabled;\n         }\n         return rv;\n@@ -275,6 +311,21 @@ void BitcoinAmountField::setValue(const CAmount& value)\n     amount->setValue(value);\n }\n \n+void BitcoinAmountField::SetAllowEmpty(bool allow)\n+{\n+    amount->SetAllowEmpty(allow);\n+}\n+\n+void BitcoinAmountField::SetMinValue(const CAmount& value)\n+{\n+    amount->SetMinValue(value);\n+}\n+\n+void BitcoinAmountField::SetMaxValue(const CAmount& value)\n+{\n+    amount->SetMaxValue(value);\n+}\n+\n void BitcoinAmountField::setReadOnly(bool fReadOnly)\n {\n     amount->setReadOnly(fReadOnly);"
      },
      {
        "sha": "158988d5d36e13ada09051d9b40c35786af397c0",
        "filename": "src/qt/bitcoinamountfield.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/123466cd22cabb99511fe9c4cbd52d28ba185f60/src/qt/bitcoinamountfield.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/123466cd22cabb99511fe9c4cbd52d28ba185f60/src/qt/bitcoinamountfield.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.h?ref=123466cd22cabb99511fe9c4cbd52d28ba185f60",
        "patch": "@@ -31,6 +31,15 @@ class BitcoinAmountField: public QWidget\n     CAmount value(bool *value=0) const;\n     void setValue(const CAmount& value);\n \n+    /** If allow empty is set to false the field will be set to the minimum allowed value if left empty. **/\n+    void SetAllowEmpty(bool allow);\n+\n+    /** Set the minimum value in satoshis **/\n+    void SetMinValue(const CAmount& value);\n+\n+    /** Set the maximum value in satoshis **/\n+    void SetMaxValue(const CAmount& value);\n+\n     /** Set single step in satoshis **/\n     void setSingleStep(const CAmount& step);\n "
      }
    ]
  },
  {
    "sha": "45771668301594c1836314fb7065d0ece3a317c9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTc3MTY2ODMwMTU5NGMxODM2MzE0ZmI3MDY1ZDBlY2UzYTMxN2M5",
    "commit": {
      "author": {
        "name": "GreatSock",
        "email": "greatsock@protonmail.com",
        "date": "2018-05-19T12:37:53Z"
      },
      "committer": {
        "name": "GreatSock",
        "email": "greatsock@protonmail.com",
        "date": "2018-05-19T12:37:53Z"
      },
      "message": "[qt] Removed pay only required fee checkbox\nRemoves the pay only required fee checkbox from the custom transaction fee section in the SendCoinsDialog. It's replaced by a label giving a more general warning about low fees.\nThe custom fee input box now has a minimum value equal to the minimum required fee. Before a value below the minimum fee could be entered which was confusing since the minimum fee would still be paid even though a lower amount was entered.",
      "tree": {
        "sha": "c4f2a02a1555b3d585122bbbb931413ca380045c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4f2a02a1555b3d585122bbbb931413ca380045c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45771668301594c1836314fb7065d0ece3a317c9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45771668301594c1836314fb7065d0ece3a317c9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45771668301594c1836314fb7065d0ece3a317c9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45771668301594c1836314fb7065d0ece3a317c9/comments",
    "author": {
      "login": "GreatSock",
      "id": 39350803,
      "node_id": "MDQ6VXNlcjM5MzUwODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39350803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GreatSock",
      "html_url": "https://github.com/GreatSock",
      "followers_url": "https://api.github.com/users/GreatSock/followers",
      "following_url": "https://api.github.com/users/GreatSock/following{/other_user}",
      "gists_url": "https://api.github.com/users/GreatSock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GreatSock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GreatSock/subscriptions",
      "organizations_url": "https://api.github.com/users/GreatSock/orgs",
      "repos_url": "https://api.github.com/users/GreatSock/repos",
      "events_url": "https://api.github.com/users/GreatSock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GreatSock/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "GreatSock",
      "id": 39350803,
      "node_id": "MDQ6VXNlcjM5MzUwODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39350803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GreatSock",
      "html_url": "https://github.com/GreatSock",
      "followers_url": "https://api.github.com/users/GreatSock/followers",
      "following_url": "https://api.github.com/users/GreatSock/following{/other_user}",
      "gists_url": "https://api.github.com/users/GreatSock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GreatSock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GreatSock/subscriptions",
      "organizations_url": "https://api.github.com/users/GreatSock/orgs",
      "repos_url": "https://api.github.com/users/GreatSock/repos",
      "events_url": "https://api.github.com/users/GreatSock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GreatSock/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "123466cd22cabb99511fe9c4cbd52d28ba185f60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/123466cd22cabb99511fe9c4cbd52d28ba185f60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/123466cd22cabb99511fe9c4cbd52d28ba185f60"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 12,
      "deletions": 41
    },
    "files": [
      {
        "sha": "35eb44db6aaca61be292c105aaba91ada0b78e32",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 12,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45771668301594c1836314fb7065d0ece3a317c9/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45771668301594c1836314fb7065d0ece3a317c9/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=45771668301594c1836314fb7065d0ece3a317c9",
        "patch": "@@ -878,25 +878,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n                <item>\n                 <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee8\">\n                  <item>\n-                  <widget class=\"QCheckBox\" name=\"checkBoxMinimumFee\">\n-                   <property name=\"toolTip\">\n-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n-                   </property>\n-                   <property name=\"text\">\n-                    <string/>\n-                   </property>\n-                  </widget>\n-                 </item>\n-                 <item>\n-                  <widget class=\"QLabel\" name=\"labelMinFeeWarning\">\n+                  <widget class=\"QLabel\" name=\"labelCustomFeeWarning\">\n                    <property name=\"enabled\">\n                     <bool>true</bool>\n                    </property>\n                    <property name=\"toolTip\">\n                     <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n                    </property>\n                    <property name=\"text\">\n-                    <string>(read the tooltip)</string>\n+                    <string>A too low fee might result in a never confirming transaction (read the tooltip)</string>\n                    </property>\n                    <property name=\"margin\">\n                     <number>5</number>"
      },
      {
        "sha": "fd3395d8e5d73aad52db28a0d404b855e4d4d109",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 27,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45771668301594c1836314fb7065d0ece3a317c9/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45771668301594c1836314fb7065d0ece3a317c9/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=45771668301594c1836314fb7065d0ece3a317c9",
        "patch": "@@ -115,13 +115,11 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n         settings.setValue(\"nSmartFeeSliderPosition\", 0);\n     if (!settings.contains(\"nTransactionFee\"))\n         settings.setValue(\"nTransactionFee\", (qint64)DEFAULT_PAY_TX_FEE);\n-    if (!settings.contains(\"fPayOnlyMinFee\"))\n-        settings.setValue(\"fPayOnlyMinFee\", false);\n     ui->groupFee->setId(ui->radioSmartFee, 0);\n     ui->groupFee->setId(ui->radioCustomFee, 1);\n     ui->groupFee->button((int)std::max(0, std::min(1, settings.value(\"nFeeRadio\").toInt())))->setChecked(true);\n+    ui->customFee->SetAllowEmpty(false);\n     ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n-    ui->checkBoxMinimumFee->setChecked(settings.value(\"fPayOnlyMinFee\").toBool());\n     minimizeFeeSection(settings.value(\"fFeeSectionMinimized\").toBool());\n }\n \n@@ -170,14 +168,15 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(updateFeeSectionControls()));\n         connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->customFee, SIGNAL(valueChanged()), this, SLOT(coinControlUpdateLabels()));\n-        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(setMinimumFee()));\n-        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(updateFeeSectionControls()));\n-        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->optInRBF, SIGNAL(stateChanged(int)), this, SLOT(updateSmartFeeLabel()));\n         connect(ui->optInRBF, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        ui->customFee->setSingleStep(model->wallet().getRequiredFee(1000));\n+        CAmount requiredFee = model->wallet().getRequiredFee(1000);\n+        ui->customFee->SetMinValue(requiredFee);\n+        if (ui->customFee->value() < requiredFee) {\n+            ui->customFee->setValue(requiredFee);\n+        }\n+        ui->customFee->setSingleStep(requiredFee);\n         updateFeeSectionControls();\n-        updateMinFeeLabel();\n         updateSmartFeeLabel();\n \n         // set default rbf checkbox state\n@@ -206,7 +205,6 @@ SendCoinsDialog::~SendCoinsDialog()\n     settings.setValue(\"nFeeRadio\", ui->groupFee->checkedId());\n     settings.setValue(\"nConfTarget\", getConfTargetForIndex(ui->confTargetSelector->currentIndex()));\n     settings.setValue(\"nTransactionFee\", (qint64)ui->customFee->value());\n-    settings.setValue(\"fPayOnlyMinFee\", ui->checkBoxMinimumFee->isChecked());\n \n     delete ui;\n }\n@@ -534,7 +532,6 @@ void SendCoinsDialog::updateDisplayUnit()\n {\n     setBalance(model->wallet().getBalances());\n     ui->customFee->setDisplayUnit(model->getOptionsModel()->getDisplayUnit());\n-    updateMinFeeLabel();\n     updateSmartFeeLabel();\n }\n \n@@ -634,22 +631,16 @@ void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n     }\n }\n \n-void SendCoinsDialog::setMinimumFee()\n-{\n-    ui->customFee->setValue(model->wallet().getRequiredFee(1000));\n-}\n-\n void SendCoinsDialog::updateFeeSectionControls()\n {\n     ui->confTargetSelector      ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelSmartFee           ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelSmartFee2          ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelSmartFee3          ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelFeeEstimation      ->setEnabled(ui->radioSmartFee->isChecked());\n-    ui->checkBoxMinimumFee      ->setEnabled(ui->radioCustomFee->isChecked());\n-    ui->labelMinFeeWarning      ->setEnabled(ui->radioCustomFee->isChecked());\n-    ui->labelCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n-    ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n+    ui->labelCustomFeeWarning   ->setEnabled(ui->radioCustomFee->isChecked());\n+    ui->labelCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked());\n+    ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked());\n }\n \n void SendCoinsDialog::updateFeeMinimizedLabel()\n@@ -664,14 +655,6 @@ void SendCoinsDialog::updateFeeMinimizedLabel()\n     }\n }\n \n-void SendCoinsDialog::updateMinFeeLabel()\n-{\n-    if (model && model->getOptionsModel())\n-        ui->checkBoxMinimumFee->setText(tr(\"Pay only the required fee of %1\").arg(\n-            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), model->wallet().getRequiredFee(1000)) + \"/kB\")\n-        );\n-}\n-\n void SendCoinsDialog::updateCoinControlState(CCoinControl& ctrl)\n {\n     if (ui->radioCustomFee->isChecked()) {"
      },
      {
        "sha": "340c33470c63e5d47f458a977607ba8c59e6d8e7",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45771668301594c1836314fb7065d0ece3a317c9/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45771668301594c1836314fb7065d0ece3a317c9/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=45771668301594c1836314fb7065d0ece3a317c9",
        "patch": "@@ -92,9 +92,7 @@ private Q_SLOTS:\n     void coinControlClipboardBytes();\n     void coinControlClipboardLowOutput();\n     void coinControlClipboardChange();\n-    void setMinimumFee();\n     void updateFeeSectionControls();\n-    void updateMinFeeLabel();\n     void updateSmartFeeLabel();\n \n Q_SIGNALS:"
      }
    ]
  },
  {
    "sha": "7908f18b138fd75cc45d572cc5ee54b27de0ba90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTA4ZjE4YjEzOGZkNzVjYzQ1ZDU3MmNjNWVlNTRiMjdkZTBiYTkw",
    "commit": {
      "author": {
        "name": "GreatSock",
        "email": "greatsock@protonmail.com",
        "date": "2018-05-19T14:29:31Z"
      },
      "committer": {
        "name": "GreatSock",
        "email": "greatsock@protonmail.com",
        "date": "2018-05-19T14:29:31Z"
      },
      "message": "[qt] BitcoinAmountField use qBound",
      "tree": {
        "sha": "4dd11e0862ee62fff2fdb134dcc0eec8966344d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dd11e0862ee62fff2fdb134dcc0eec8966344d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7908f18b138fd75cc45d572cc5ee54b27de0ba90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7908f18b138fd75cc45d572cc5ee54b27de0ba90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7908f18b138fd75cc45d572cc5ee54b27de0ba90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7908f18b138fd75cc45d572cc5ee54b27de0ba90/comments",
    "author": {
      "login": "GreatSock",
      "id": 39350803,
      "node_id": "MDQ6VXNlcjM5MzUwODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39350803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GreatSock",
      "html_url": "https://github.com/GreatSock",
      "followers_url": "https://api.github.com/users/GreatSock/followers",
      "following_url": "https://api.github.com/users/GreatSock/following{/other_user}",
      "gists_url": "https://api.github.com/users/GreatSock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GreatSock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GreatSock/subscriptions",
      "organizations_url": "https://api.github.com/users/GreatSock/orgs",
      "repos_url": "https://api.github.com/users/GreatSock/repos",
      "events_url": "https://api.github.com/users/GreatSock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GreatSock/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "GreatSock",
      "id": 39350803,
      "node_id": "MDQ6VXNlcjM5MzUwODAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39350803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GreatSock",
      "html_url": "https://github.com/GreatSock",
      "followers_url": "https://api.github.com/users/GreatSock/followers",
      "following_url": "https://api.github.com/users/GreatSock/following{/other_user}",
      "gists_url": "https://api.github.com/users/GreatSock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GreatSock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GreatSock/subscriptions",
      "organizations_url": "https://api.github.com/users/GreatSock/orgs",
      "repos_url": "https://api.github.com/users/GreatSock/repos",
      "events_url": "https://api.github.com/users/GreatSock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GreatSock/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45771668301594c1836314fb7065d0ece3a317c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45771668301594c1836314fb7065d0ece3a317c9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45771668301594c1836314fb7065d0ece3a317c9"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e55f2d2fed6637d3204ffba76381d8b6c81101c7",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7908f18b138fd75cc45d572cc5ee54b27de0ba90/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7908f18b138fd75cc45d572cc5ee54b27de0ba90/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=7908f18b138fd75cc45d572cc5ee54b27de0ba90",
        "patch": "@@ -59,12 +59,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         }\n \n         if (valid) {\n-            if (val < min_amount) {\n-                val = min_amount;\n-            }\n-            if (val > max_amount) {\n-                val = max_amount;\n-            }\n+            val = qBound(min_amount, val, max_amount);\n             input = BitcoinUnits::format(currentUnit, val, false, BitcoinUnits::separatorAlways);\n             lineEdit()->setText(input);\n         }\n@@ -101,7 +96,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         bool valid = false;\n         CAmount val = value(&valid);\n         val = val + steps * singleStep;\n-        val = qMin(qMax(val, CAmount(min_amount)), max_amount);\n+        val = qBound(min_amount, val, max_amount);\n         setValue(val);\n     }\n "
      }
    ]
  }
]