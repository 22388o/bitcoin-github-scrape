[
  {
    "sha": "8b2e52c307f629a58304099beac84fadbd6b49b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjJlNTJjMzA3ZjYyOWE1ODMwNDA5OWJlYWM4NGZhZGJkNmI0OWI5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-14T20:46:57Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-15T08:38:38Z"
      },
      "message": "Add error checking to DecodeExtPubKey/DecodeExtKey",
      "tree": {
        "sha": "1680455231bc1539a67e246a09b9f09ff5725b4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1680455231bc1539a67e246a09b9f09ff5725b4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b2e52c307f629a58304099beac84fadbd6b49b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2e52c307f629a58304099beac84fadbd6b49b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2e52c307f629a58304099beac84fadbd6b49b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2e52c307f629a58304099beac84fadbd6b49b9/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63f8b0128b2aac3b25c6ec4d2f5bda213033162a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63f8b0128b2aac3b25c6ec4d2f5bda213033162a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63f8b0128b2aac3b25c6ec4d2f5bda213033162a"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 23,
      "deletions": 15
    },
    "files": [
      {
        "sha": "fbcc1159fd3497a25316344a5802d3b0d6d51bcf",
        "filename": "src/key_io.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2e52c307f629a58304099beac84fadbd6b49b9/src/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2e52c307f629a58304099beac84fadbd6b49b9/src/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.cpp?ref=8b2e52c307f629a58304099beac84fadbd6b49b9",
        "patch": "@@ -159,17 +159,17 @@ std::string EncodeSecret(const CKey& key)\n     return ret;\n }\n \n-CExtPubKey DecodeExtPubKey(const std::string& str)\n+bool DecodeExtPubKey(const std::string& str, CExtPubKey& extpubkey)\n {\n-    CExtPubKey key;\n     std::vector<unsigned char> data;\n     if (DecodeBase58Check(str, data)) {\n         const std::vector<unsigned char>& prefix = Params().Base58Prefix(CChainParams::EXT_PUBLIC_KEY);\n         if (data.size() == BIP32_EXTKEY_SIZE + prefix.size() && std::equal(prefix.begin(), prefix.end(), data.begin())) {\n-            key.Decode(data.data() + prefix.size());\n+            extpubkey.Decode(data.data() + prefix.size());\n+            return extpubkey.pubkey.IsValid();\n         }\n     }\n-    return key;\n+    return false;\n }\n \n std::string EncodeExtPubKey(const CExtPubKey& key)\n@@ -182,17 +182,17 @@ std::string EncodeExtPubKey(const CExtPubKey& key)\n     return ret;\n }\n \n-CExtKey DecodeExtKey(const std::string& str)\n+bool DecodeExtKey(const std::string& str, CExtKey& extkey)\n {\n-    CExtKey key;\n     std::vector<unsigned char> data;\n     if (DecodeBase58Check(str, data)) {\n         const std::vector<unsigned char>& prefix = Params().Base58Prefix(CChainParams::EXT_SECRET_KEY);\n         if (data.size() == BIP32_EXTKEY_SIZE + prefix.size() && std::equal(prefix.begin(), prefix.end(), data.begin())) {\n-            key.Decode(data.data() + prefix.size());\n+            extkey.Decode(data.data() + prefix.size());\n+            return extkey.key.IsValid();\n         }\n     }\n-    return key;\n+    return false;\n }\n \n std::string EncodeExtKey(const CExtKey& key)"
      },
      {
        "sha": "0d8e4ddca848512b5e00863f8c81db17b8fabe76",
        "filename": "src/key_io.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2e52c307f629a58304099beac84fadbd6b49b9/src/key_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2e52c307f629a58304099beac84fadbd6b49b9/src/key_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.h?ref=8b2e52c307f629a58304099beac84fadbd6b49b9",
        "patch": "@@ -16,9 +16,11 @@\n CKey DecodeSecret(const std::string& str);\n std::string EncodeSecret(const CKey& key);\n \n-CExtKey DecodeExtKey(const std::string& str);\n+//! Returns true if and only if extkey is valid (extkey.key.IsValid()) when the function returns.\n+bool DecodeExtKey(const std::string& str, CExtKey& extkey);\n std::string EncodeExtKey(const CExtKey& extkey);\n-CExtPubKey DecodeExtPubKey(const std::string& str);\n+//! Returns true if and only if extpubkey is valid (extpubkey.pubkey.IsValid()) when the function returns.\n+bool DecodeExtPubKey(const std::string& str, CExtPubKey& extpubkey);\n std::string EncodeExtPubKey(const CExtPubKey& extpubkey);\n \n std::string EncodeDestination(const CTxDestination& dest);"
      },
      {
        "sha": "2070dcd7a6adbf0c56242b1dc942a63a828fc487",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2e52c307f629a58304099beac84fadbd6b49b9/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2e52c307f629a58304099beac84fadbd6b49b9/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=8b2e52c307f629a58304099beac84fadbd6b49b9",
        "patch": "@@ -464,9 +464,11 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n             return MakeUnique<ConstPubkeyProvider>(pubkey);\n         }\n     }\n-    CExtKey extkey = DecodeExtKey(str);\n-    CExtPubKey extpubkey = DecodeExtPubKey(str);\n-    if (!extkey.key.IsValid() && !extpubkey.pubkey.IsValid()) return nullptr;\n+    CExtKey extkey;\n+    const bool validExtKey = DecodeExtKey(str, extkey);\n+    CExtPubKey extpubkey;\n+    const bool validExtPubKey = DecodeExtPubKey(str, extpubkey);\n+    if (!validExtKey && !validExtPubKey) return nullptr;\n     KeyPath path;\n     DeriveType type = DeriveType::NO;\n     if (split.back() == MakeSpan(\"*\").first(1)) {"
      },
      {
        "sha": "2b47b3264d8095d89ddc14f8e2fcd0fda6577353",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2e52c307f629a58304099beac84fadbd6b49b9/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2e52c307f629a58304099beac84fadbd6b49b9/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=8b2e52c307f629a58304099beac84fadbd6b49b9",
        "patch": "@@ -100,11 +100,15 @@ static void RunTest(const TestVector &test) {\n \n         // Test private key\n         BOOST_CHECK(EncodeExtKey(key) == derive.prv);\n-        BOOST_CHECK(DecodeExtKey(derive.prv) == key); //ensure a base58 decoded key also matches\n+        CExtKey extkey;\n+        BOOST_CHECK(DecodeExtKey(derive.prv, extkey));\n+        BOOST_CHECK(extkey == key); // ensure a base58 decoded key also matches\n \n         // Test public key\n         BOOST_CHECK(EncodeExtPubKey(pubkey) == derive.pub);\n-        BOOST_CHECK(DecodeExtPubKey(derive.pub) == pubkey); //ensure a base58 decoded pubkey also matches\n+        CExtPubKey extpubkey;\n+        BOOST_CHECK(DecodeExtPubKey(derive.pub, extpubkey));\n+        BOOST_CHECK(extpubkey == pubkey); // ensure a base58 decoded pubkey also matches\n \n         // Derive new keys\n         CExtKey keyNew;"
      }
    ]
  },
  {
    "sha": "a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzM2ZWNkNWM0MjM5YmVmMWFjZjI3ZjM4MDVkYzI5NjdiOGEyZTc0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-02T16:02:19Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-26T20:18:18Z"
      },
      "message": "Add #define NODISCARD",
      "tree": {
        "sha": "ca7a5ef274a12b8d030c73c2cf26b35d304d02e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca7a5ef274a12b8d030c73c2cf26b35d304d02e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a736ecd5c4239bef1acf27f3805dc2967b8a2e74/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b2e52c307f629a58304099beac84fadbd6b49b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2e52c307f629a58304099beac84fadbd6b49b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2e52c307f629a58304099beac84fadbd6b49b9"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e1307a0820dfe0fb28650911f672f573990e8cf2",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a736ecd5c4239bef1acf27f3805dc2967b8a2e74/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a736ecd5c4239bef1acf27f3805dc2967b8a2e74/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
        "patch": "@@ -92,6 +92,7 @@ endif\n BITCOIN_CORE_H = \\\n   addrdb.h \\\n   addrman.h \\\n+  attributes.h \\\n   base58.h \\\n   bech32.h \\\n   bloom.h \\"
      },
      {
        "sha": "6e1fb9744a9408345abca463d7372ce2e744abf9",
        "filename": "src/attributes.h",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a736ecd5c4239bef1acf27f3805dc2967b8a2e74/src/attributes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a736ecd5c4239bef1acf27f3805dc2967b8a2e74/src/attributes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/attributes.h?ref=a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
        "patch": "@@ -0,0 +1,17 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ATTRIBUTES_H\n+#define BITCOIN_ATTRIBUTES_H\n+\n+#if defined(__has_cpp_attribute) && __has_cpp_attribute(nodiscard)\n+#  define NODISCARD [[nodiscard]]\n+#elif defined(_MSC_VER) && _MSC_VER >= 1700\n+#  define NODISCARD _Check_return_\n+#else\n+#  define NODISCARD __attribute__((warn_unused_result))\n+#endif\n+\n+#endif // BITCOIN_ATTRIBUTES_H"
      }
    ]
  },
  {
    "sha": "b246e43b269ae2273a15498f1a60c50e626b04d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjQ2ZTQzYjI2OWFlMjI3M2ExNTQ5OGYxYTYwYzUwZTYyNmIwNGQ0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-14T21:00:29Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-26T20:18:18Z"
      },
      "message": "Add NODISCARD to DecodeExtPubKey/DecodeExtKey",
      "tree": {
        "sha": "78b9b45dd9aab746034751081a0651127058f871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78b9b45dd9aab746034751081a0651127058f871"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b246e43b269ae2273a15498f1a60c50e626b04d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b246e43b269ae2273a15498f1a60c50e626b04d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b246e43b269ae2273a15498f1a60c50e626b04d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b246e43b269ae2273a15498f1a60c50e626b04d4/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a736ecd5c4239bef1acf27f3805dc2967b8a2e74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a736ecd5c4239bef1acf27f3805dc2967b8a2e74"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6025164a22eac0c415e1c84b3bb704f4d29fa276",
        "filename": "src/key_io.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b246e43b269ae2273a15498f1a60c50e626b04d4/src/key_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b246e43b269ae2273a15498f1a60c50e626b04d4/src/key_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.h?ref=b246e43b269ae2273a15498f1a60c50e626b04d4",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_KEY_IO_H\n #define BITCOIN_KEY_IO_H\n \n+#include <attributes.h>\n #include <chainparams.h>\n #include <key.h>\n #include <pubkey.h>\n@@ -17,10 +18,10 @@ CKey DecodeSecret(const std::string& str);\n std::string EncodeSecret(const CKey& key);\n \n //! Returns true if and only if extkey is valid (extkey.key.IsValid()) when the function returns.\n-bool DecodeExtKey(const std::string& str, CExtKey& extkey);\n+NODISCARD bool DecodeExtKey(const std::string& str, CExtKey& extkey);\n std::string EncodeExtKey(const CExtKey& extkey);\n //! Returns true if and only if extpubkey is valid (extpubkey.pubkey.IsValid()) when the function returns.\n-bool DecodeExtPubKey(const std::string& str, CExtPubKey& extpubkey);\n+NODISCARD bool DecodeExtPubKey(const std::string& str, CExtPubKey& extpubkey);\n std::string EncodeExtPubKey(const CExtPubKey& extpubkey);\n \n std::string EncodeDestination(const CTxDestination& dest);"
      }
    ]
  },
  {
    "sha": "273a622e058c8eafaac56393e0a3bf7d8868ab4f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzNhNjIyZTA1OGM4ZWFmYWFjNTYzOTNlMGEzYmY3ZDg4NjhhYjRm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-15T10:12:04Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-26T20:18:18Z"
      },
      "message": "Add tests for DecodeExtKey and DecodeExtPubKey",
      "tree": {
        "sha": "fdffc57311402a1abd1433fdf3b3bebcb8fd3aab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdffc57311402a1abd1433fdf3b3bebcb8fd3aab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/273a622e058c8eafaac56393e0a3bf7d8868ab4f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/273a622e058c8eafaac56393e0a3bf7d8868ab4f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/273a622e058c8eafaac56393e0a3bf7d8868ab4f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/273a622e058c8eafaac56393e0a3bf7d8868ab4f/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b246e43b269ae2273a15498f1a60c50e626b04d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b246e43b269ae2273a15498f1a60c50e626b04d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b246e43b269ae2273a15498f1a60c50e626b04d4"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 44,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6a195e22aae5776ccfdc1529adbacdd464b2c0f1",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/273a622e058c8eafaac56393e0a3bf7d8868ab4f/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/273a622e058c8eafaac56393e0a3bf7d8868ab4f/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=273a622e058c8eafaac56393e0a3bf7d8868ab4f",
        "patch": "@@ -104,12 +104,56 @@ static void RunTest(const TestVector &test) {\n         BOOST_CHECK(DecodeExtKey(derive.prv, extkey));\n         BOOST_CHECK(extkey == key); // ensure a base58 decoded key also matches\n \n+        // Test DecodeExtKey with some valid and some invalid private keys\n+        CExtKey extkeyTmp;\n+        BOOST_CHECK(DecodeExtKey(\" \" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(\"_\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(derive.prv + \" \", extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(derive.prv + \"A\", extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(\"\\n\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(\"A\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(\"\\n\\n\\n\\n\" + derive.prv + \"\\n\\n\\n\\n\", extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(\"invalid\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(\" \\r\\t\\n\" + derive.prv + \" \\n\\t\\r\", extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(derive.prv + derive.prv, extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(\"\\r\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(\"\\r\\a\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(\"\\t\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(\"\\a\\t\" + derive.prv, extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(derive.prv + \"\\n\", extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(derive.prv + \"\\a\\n\", extkeyTmp));\n+        BOOST_CHECK(DecodeExtKey(derive.prv + \"\\r\", extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(derive.prv + \"\\r\\a\", extkeyTmp));\n+        BOOST_CHECK(!DecodeExtKey(derive.pub, extkeyTmp));\n+\n         // Test public key\n         BOOST_CHECK(EncodeExtPubKey(pubkey) == derive.pub);\n         CExtPubKey extpubkey;\n         BOOST_CHECK(DecodeExtPubKey(derive.pub, extpubkey));\n         BOOST_CHECK(extpubkey == pubkey); // ensure a base58 decoded pubkey also matches\n \n+        // Test DecodeExtPubKey with some valid and some invalid public keys\n+        CExtPubKey extpubkeyTmp;\n+        BOOST_CHECK(DecodeExtPubKey(\" \" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(\"_\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(derive.pub + \" \", extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(derive.pub + \"A\", extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(\"\\n\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(\"A\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(\"\\n\\n\\n\\n\" + derive.pub + \"\\n\\n\\n\\n\", extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(\"invalid\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(\" \\r\\t\\n\" + derive.pub + \" \\n\\t\\r\", extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(derive.pub + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(\"\\r\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(\"\\r\\a\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(\"\\t\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(\"\\a\\t\" + derive.pub, extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(derive.pub + \"\\n\", extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(derive.pub + \"\\a\\n\", extpubkeyTmp));\n+        BOOST_CHECK(DecodeExtPubKey(derive.pub + \"\\r\", extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(derive.pub + \"\\r\\a\", extpubkeyTmp));\n+        BOOST_CHECK(!DecodeExtPubKey(derive.prv, extpubkeyTmp));\n+\n         // Derive new keys\n         CExtKey keyNew;\n         BOOST_CHECK(key.Derive(keyNew, derive.nChild));"
      }
    ]
  }
]