[
  {
    "sha": "fa80ef8173f9562f9701ee025c846bbf3bc4b5e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTgwZWY4MTczZjk1NjJmOTcwMWVlMDI1Yzg0NmJiZjNiYzRiNWUx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-11-13T21:34:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-11-13T21:32:23Z"
      },
      "message": "[qa] proxy_test: Calculate hardcoded port numbers instead",
      "tree": {
        "sha": "bb87a10941a7b047c1dcb0034b1b3a0106678146",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb87a10941a7b047c1dcb0034b1b3a0106678146"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa80ef8173f9562f9701ee025c846bbf3bc4b5e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa80ef8173f9562f9701ee025c846bbf3bc4b5e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa80ef8173f9562f9701ee025c846bbf3bc4b5e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa80ef8173f9562f9701ee025c846bbf3bc4b5e1/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87ab49e4fe38f0d8d527090ea348081037a68cef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87ab49e4fe38f0d8d527090ea348081037a68cef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87ab49e4fe38f0d8d527090ea348081037a68cef"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9ccc0ffbb02a7aeac3beb0a5d46ec0bbc4312050",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa80ef8173f9562f9701ee025c846bbf3bc4b5e1/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa80ef8173f9562f9701ee025c846bbf3bc4b5e1/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=fa80ef8173f9562f9701ee025c846bbf3bc4b5e1",
        "patch": "@@ -4,10 +4,16 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n import socket\n+import os\n \n from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    start_nodes,\n+    assert_equal,\n+)\n from test_framework.netutil import test_ipv6_local\n '''\n Test plan:\n@@ -33,6 +39,8 @@\n addnode connect to generic DNS name\n '''\n \n+RANGE_BEGIN = PORT_MIN + 2 * PORT_RANGE  # Start after p2p and rpc ports\n+\n \n class ProxyTest(BitcoinTestFramework):\n     def __init__(self):\n@@ -44,19 +52,19 @@ def __init__(self):\n         # Create two proxies on different ports\n         # ... one unauthenticated\n         self.conf1 = Socks5Configuration()\n-        self.conf1.addr = ('127.0.0.1', 13000 + (os.getpid() % 1000))\n+        self.conf1.addr = ('127.0.0.1', RANGE_BEGIN + (os.getpid() % 1000))\n         self.conf1.unauth = True\n         self.conf1.auth = False\n         # ... one supporting authenticated and unauthenticated (Tor)\n         self.conf2 = Socks5Configuration()\n-        self.conf2.addr = ('127.0.0.1', 14000 + (os.getpid() % 1000))\n+        self.conf2.addr = ('127.0.0.1', RANGE_BEGIN + 1000 + (os.getpid() % 1000))\n         self.conf2.unauth = True\n         self.conf2.auth = True\n         if self.have_ipv6:\n             # ... one on IPv6 with similar configuration\n             self.conf3 = Socks5Configuration()\n             self.conf3.af = socket.AF_INET6\n-            self.conf3.addr = ('::1', 15000 + (os.getpid() % 1000))\n+            self.conf3.addr = ('::1', RANGE_BEGIN + 2000 + (os.getpid() % 1000))\n             self.conf3.unauth = True\n             self.conf3.auth = True\n         else:"
      }
    ]
  }
]