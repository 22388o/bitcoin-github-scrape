[
  {
    "sha": "4a09e1df51267c6d2dec219c6f96a24b716cc251",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTA5ZTFkZjUxMjY3YzZkMmRlYzIxOWM2Zjk2YTI0YjcxNmNjMjUx",
    "commit": {
      "author": {
        "name": "Andrew Poelstra",
        "email": "asp11@sfu.ca",
        "date": "2014-06-02T23:21:03Z"
      },
      "committer": {
        "name": "Andrew Poelstra",
        "email": "asp11@sfu.ca",
        "date": "2014-06-03T19:09:51Z"
      },
      "message": "key.cpp: fail with a friendlier message on missing ssl EC support\n\nPreviously if bitcoind is linked with an OpenSSL which is compiled\nwithout EC support, this is seen as an assertion failure \"pKey !=\nNULL\" at key.cpp:134, which occurs after several seconds. It is an\nesoteric piece of knowledge to interpret this as \"oops, I linked\nwith the wrong OpenSSL\", and because of the delay it may not even\nbe noticed.\n\nThe new output is\n\n: OpenSSL appears to lack support for elliptic curve cryptography. For\nmore information, visit\nhttps://en.bitcoin.it/wiki/OpenSSL_and_EC_Libraries\n: Initialization sanity check failed. Bitcoin Core is shutting down.\n\nwhich occurs immediately after attempted startup.\n\nThis also blocks in an InitSanityCheck() function which currently only\nchecks for EC support but should eventually do more. See #4081.",
      "tree": {
        "sha": "52a07bc8e7880c7ff0b7bec11083926b7bdd64f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52a07bc8e7880c7ff0b7bec11083926b7bdd64f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a09e1df51267c6d2dec219c6f96a24b716cc251",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.22 (GNU/Linux)\n\niQEcBAABAgAGBQJTjh39AAoJEHrQqRxAvQCRt48H/0yKkP1C6kTknyn+id7NZKk3\nrs1BNXcAXwoJUPa6MV5chz3b3WatnS6kchks7c/v55JW98dRR+DTlCJsTn5g30Kq\nSPQQMU3FsG6ONRcdAE56kK11yMj5p/mjm+RWrasg49tIo5yJ+DE0ww41VuPuzvpM\nbfqnGSE4gOd0rbEGi+qyl/4Zau5LpA5hEuPAZYdKRdjotGF/0epDlDl0dstGGEp6\nmCCoo/AB+S1LVHjRw16pzZTkoltdnJE8mUKNapOyLEpcjCIpSgRB0vwSbLjcMiOV\n9ysI9ZKVcCfKdTcCtduQTNATRqwY93OdFrXHz8nri/9ArM9vALHX+ui8epjDnFA=\n=upWg\n-----END PGP SIGNATURE-----",
        "payload": "tree 52a07bc8e7880c7ff0b7bec11083926b7bdd64f4\nparent 52d7a544342b20fbf0d8b97796923455a400d282\nauthor Andrew Poelstra <asp11@sfu.ca> 1401751263 -0700\ncommitter Andrew Poelstra <asp11@sfu.ca> 1401822591 -0700\n\nkey.cpp: fail with a friendlier message on missing ssl EC support\n\nPreviously if bitcoind is linked with an OpenSSL which is compiled\nwithout EC support, this is seen as an assertion failure \"pKey !=\nNULL\" at key.cpp:134, which occurs after several seconds. It is an\nesoteric piece of knowledge to interpret this as \"oops, I linked\nwith the wrong OpenSSL\", and because of the delay it may not even\nbe noticed.\n\nThe new output is\n\n: OpenSSL appears to lack support for elliptic curve cryptography. For\nmore information, visit\nhttps://en.bitcoin.it/wiki/OpenSSL_and_EC_Libraries\n: Initialization sanity check failed. Bitcoin Core is shutting down.\n\nwhich occurs immediately after attempted startup.\n\nThis also blocks in an InitSanityCheck() function which currently only\nchecks for EC support but should eventually do more. See #4081.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a09e1df51267c6d2dec219c6f96a24b716cc251",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a09e1df51267c6d2dec219c6f96a24b716cc251",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a09e1df51267c6d2dec219c6f96a24b716cc251/comments",
    "author": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "52d7a544342b20fbf0d8b97796923455a400d282",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52d7a544342b20fbf0d8b97796923455a400d282",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/52d7a544342b20fbf0d8b97796923455a400d282"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 36,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b66231ff2ce6365657b0c4cd7d99c3503bb41af9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a09e1df51267c6d2dec219c6f96a24b716cc251/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a09e1df51267c6d2dec219c6f96a24b716cc251/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4a09e1df51267c6d2dec219c6f96a24b716cc251",
        "patch": "@@ -11,6 +11,7 @@\n \n #include \"addrman.h\"\n #include \"checkpoints.h\"\n+#include \"key.h\"\n #include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\"\n@@ -385,6 +386,23 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n     }\n }\n \n+/** Sanity checks\n+ *  Ensure that Bitcoin is running in a usable environment with all\n+ *  necessary library support.\n+ */\n+bool InitSanityCheck(void)\n+{\n+    if(!ECC_InitSanityCheck()) {\n+        InitError(\"OpenSSL appears to lack support for elliptic curve cryptography. For more \"\n+                  \"information, visit https://en.bitcoin.it/wiki/OpenSSL_and_EC_Libraries\");\n+        return false;\n+    }\n+\n+    // TODO: remaining sanity checks, see #4081\n+\n+    return true;\n+}\n+\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n@@ -586,6 +604,9 @@ bool AppInit2(boost::thread_group& threadGroup)\n     strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n+    // Sanity check\n+    if (!InitSanityCheck())\n+        return InitError(_(\"Initialization sanity check failed. Bitcoin Core is shutting down.\"));\n \n     std::string strDataDir = GetDataDir().string();\n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "4747beffb4ed3359da6862a740d3530ad1da1c03",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a09e1df51267c6d2dec219c6f96a24b716cc251/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a09e1df51267c6d2dec219c6f96a24b716cc251/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=4a09e1df51267c6d2dec219c6f96a24b716cc251",
        "patch": "@@ -631,3 +631,15 @@ bool CExtPubKey::Derive(CExtPubKey &out, unsigned int nChild) const {\n     out.nChild = nChild;\n     return pubkey.Derive(out.pubkey, out.vchChainCode, nChild, vchChainCode);\n }\n+\n+bool ECC_InitSanityCheck() {\n+    EC_KEY *pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+    if(pkey == NULL)\n+        return false;\n+    EC_KEY_free(pkey);\n+\n+    // TODO Is there more EC functionality that could be missing?\n+    return true;\n+}\n+\n+"
      },
      {
        "sha": "11dc65de8ccb8558bcc53a9becd48c4ee57c9552",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a09e1df51267c6d2dec219c6f96a24b716cc251/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a09e1df51267c6d2dec219c6f96a24b716cc251/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=4a09e1df51267c6d2dec219c6f96a24b716cc251",
        "patch": "@@ -306,4 +306,7 @@ struct CExtKey {\n     void SetMaster(const unsigned char *seed, unsigned int nSeedLen);\n };\n \n+/** Check that required EC support is available at runtime */\n+bool ECC_InitSanityCheck(void);\n+\n #endif"
      }
    ]
  }
]