[
  {
    "sha": "5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTU1ZmE4Yjc0YmMzYzhlNjgyMzJhY2JmNGM1NGI5YThmYWRiOGYy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-06-19T19:40:38Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-06-20T11:35:12Z"
      },
      "message": "qa: Add stopatheight test",
      "tree": {
        "sha": "a962d16e89b1e6d761d8c9532c50e34ddf724d84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a962d16e89b1e6d761d8c9532c50e34ddf724d84"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "643fa0b22d70e459d7f7ec3d728ae4811dc5158f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/643fa0b22d70e459d7f7ec3d728ae4811dc5158f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/643fa0b22d70e459d7f7ec3d728ae4811dc5158f"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e205c6400cc5d1375685771af22d0381d87bd961",
        "filename": "test/functional/blockchain.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2/test/functional/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2/test/functional/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/blockchain.py?ref=5555fa8b74bc3c8e68232acbf4c54b9a8fadb8f2",
        "patch": "@@ -18,13 +18,16 @@\n \"\"\"\n \n from decimal import Decimal\n+import subprocess\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_raises,\n     assert_raises_jsonrpc,\n     assert_is_hex_string,\n     assert_is_hash_string,\n+    bitcoind_processes,\n )\n \n \n@@ -34,14 +37,16 @@ def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = False\n         self.num_nodes = 1\n+        self.extra_args = [['-stopatheight=207']]\n \n     def run_test(self):\n         self._test_getchaintxstats()\n         self._test_gettxoutsetinfo()\n         self._test_getblockheader()\n         self._test_getdifficulty()\n         self._test_getnetworkhashps()\n-        self.nodes[0].verifychain(4, 0)\n+        self._test_stopatheight()\n+        assert self.nodes[0].verifychain(4, 0)\n \n     def _test_getchaintxstats(self):\n         chaintxstats = self.nodes[0].getchaintxstats(1)\n@@ -129,5 +134,18 @@ def _test_getnetworkhashps(self):\n         # This should be 2 hashes every 10 minutes or 1/300\n         assert abs(hashes_per_second * 300 - 1) < 0.0001\n \n+    def _test_stopatheight(self):\n+        assert_equal(self.nodes[0].getblockcount(), 200)\n+        self.nodes[0].generate(6)\n+        assert_equal(self.nodes[0].getblockcount(), 206)\n+        self.log.debug('Node should not stop at this height')\n+        assert_raises(subprocess.TimeoutExpired, lambda: bitcoind_processes[0].wait(timeout=3))\n+        self.nodes[0].generate(1)\n+        self.log.debug('Node should stop at this height...')\n+        bitcoind_processes[0].wait(timeout=3)\n+        self.nodes[0] = self.start_node(0, self.options.tmpdir)\n+        assert_equal(self.nodes[0].getblockcount(), 207)\n+\n+\n if __name__ == '__main__':\n     BlockchainTest().main()"
      }
    ]
  }
]