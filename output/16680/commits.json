[
  {
    "sha": "052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTJjNTRlY2IwMjY5NWU1ZDI2OTRlOGUwY2JmNWNjYzg5ZGU4NmU4",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-10-13T20:38:10Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2019-09-06T20:05:33Z"
      },
      "message": "Testchains: Generic selection with -chain=<str> in addition of -testnet and -regtest",
      "tree": {
        "sha": "6c6aaf45446fdf2e952facf3b87627f08add20f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c6aaf45446fdf2e952facf3b87627f08add20f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl1yvA0ACgkQiGbBjqHJ\nRKJcMRAAoJ9KXbOhdr5tTSz8fhdhk0EBQldEFExxklH6K0OFtTpYjCCtA2vLe7uk\nA0nJa6OPws3hxfhUfGI+7pxN1kPr1sJFF+NcAV9bYHxA2+4+k7N0Zu68A+i6nY0Z\n8pTJeRnwQyJ/j2CaB+sjCviKBUJPDcheoVR9lU3NhAgx/zUiyJor2EeQ07cAPj82\nHfqFKeY/E4S9ijE+dD7SIPpfZ0fjR9nWEgdtcc8YlHQlVlq2B5yWZ6n2oyVDcVIi\nwOMkHtlfxJS4p9bZG8uEYyq4mCUjRJXc85lGfWWGwviDWS4l+dB2cFLZcXuN+b+5\nTrR4iRIeZgUmHiAhuwQ4yJXbfxF3aHu0VfEjIUyD7VHNZ38uFenFd8lcFVbAH8Oc\n1griEdV7J/CbIzC7zLHEwgRTjfERhSUZz3miaWZDPsGb4ki5VdYgP1lFMCQxOONB\nqJNMHvA59lJ7RRCfuuaQBJ7pTQ7uBR+dpkadzbbxxU+oUukPHod/8bnu7VadKkh2\nsmsvUMABE0i+O0PGPqm9KucZ71HtGJiVUuX3MtzJDBlJ4HA2pvnEqRq2TlXTBCzP\n8kDO/tXcRUyCrWjn8hmx9Yzcl+Fl2y1pIIkhqkACoYsGJd2EWfKeF8oauDt7T7B0\nGfwg92nGs7g4+f8FK1/XwbUOBLWVgPx/1tYn0iE21kTCsf0bNbc=\n=/nbz\n-----END PGP SIGNATURE-----",
        "payload": "tree 6c6aaf45446fdf2e952facf3b87627f08add20f7\nparent ae3e3bd151f43dfa9e08bf592aafc6066bad258d\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1476391090 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1567800333 +0200\n\nTestchains: Generic selection with -chain=<str> in addition of -testnet and -regtest\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae3e3bd151f43dfa9e08bf592aafc6066bad258d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae3e3bd151f43dfa9e08bf592aafc6066bad258d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae3e3bd151f43dfa9e08bf592aafc6066bad258d"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 17,
      "deletions": 14
    },
    "files": [
      {
        "sha": "a6756fcce786954a662b2840386493cc8bf43062",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -133,7 +133,7 @@ static int AppInitRPC(int argc, char* argv[])\n         tfm::format(std::cerr, \"Error reading configuration file: %s\\n\", error.c_str());\n         return EXIT_FAILURE;\n     }\n-    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n     try {\n         SelectBaseParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {"
      },
      {
        "sha": "88219f0d0f1a3034362707d22c162f7cd90efe07",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -88,7 +88,7 @@ static int AppInitRawTx(int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n         SelectParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {"
      },
      {
        "sha": "4051bbd24e2c7e2cb2ff38ba612c0075e8e1d47b",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -101,7 +101,7 @@ static bool AppInit(int argc, char* argv[])\n         if (!gArgs.ReadConfigFiles(error, true)) {\n             return InitError(strprintf(\"Error reading configuration file: %s\\n\", error));\n         }\n-        // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+        // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         try {\n             SelectParams(gArgs.GetChainName());\n         } catch (const std::exception& e) {"
      },
      {
        "sha": "4bb66c8d8b51251507eac51d6213297f78d7e54c",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -17,10 +17,11 @@ const std::string CBaseChainParams::REGTEST = \"regtest\";\n \n void SetupChainParamsBaseOptions()\n {\n+    gArgs.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Allowed values: main, test, regtest\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n-                                   \"This is intended for regression testing tools and app development.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+                 \"This is intended for regression testing tools and app development. Equivalent to -chain=regtest.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-testnet\", \"Use the test chain\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n }\n "
      },
      {
        "sha": "362ec10fa44571c6d3932d17aff583d33c7da54f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -511,7 +511,7 @@ int GuiMain(int argc, char* argv[])\n     // - QSettings() will use the new application name after this, resulting in network-specific settings\n     // - Needs to be done before createOptionsModel\n \n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n         node->selectParams(gArgs.GetChainName());\n     } catch(std::exception &e) {"
      },
      {
        "sha": "c4e0321f283eeaa573dbcf85b30d10e2453fd84a",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -588,7 +588,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n             // Start client minimized\n             QString strArgs = \"-min\";\n             // Set -testnet /-regtest options\n-            strArgs += QString::fromStdString(strprintf(\" -testnet=%d -regtest=%d\", gArgs.GetBoolArg(\"-testnet\", false), gArgs.GetBoolArg(\"-regtest\", false)));\n+            strArgs += QString::fromStdString(strprintf(\" -chain=%s\", gArgs.GetChainName()));\n \n             // Set the path to the shortcut target\n             psl->SetPath(pszExePath);\n@@ -683,7 +683,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n             optionFile << \"Name=Bitcoin\\n\";\n         else\n             optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n-        optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", gArgs.GetBoolArg(\"-testnet\", false), gArgs.GetBoolArg(\"-regtest\", false));\n+        optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -chain=%s\\n\", chain);\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";\n         optionFile.close();"
      },
      {
        "sha": "d0cd4b0a03d2d26c95f63f58bc3c7d11d6df6117",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -913,7 +913,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"b284f4b4a15dd6bf8c06213a69a004b1960388e1d9917173927db52ac220927f\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"94b4ad55c8ac639a56b93e36f7e32e4c611fd7d7dd7b2be6a71707b1eadcaec7\");\n }\n \n BOOST_AUTO_TEST_CASE(util_FormatMoney)"
      },
      {
        "sha": "8098cde093830966753f55c9b05ec3959ec6eb13",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "patch": "@@ -954,16 +954,18 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n std::string ArgsManager::GetChainName() const\n {\n     LOCK(cs_args);\n-    bool fRegTest = ArgsManagerHelper::GetNetBoolArg(*this, \"-regtest\");\n-    bool fTestNet = ArgsManagerHelper::GetNetBoolArg(*this, \"-testnet\");\n+    const bool fRegTest = ArgsManagerHelper::GetNetBoolArg(*this, \"-regtest\");\n+    const bool fTestNet = ArgsManagerHelper::GetNetBoolArg(*this, \"-testnet\");\n+    const bool is_chain_arg_set = IsArgSet(\"-chain\");\n \n-    if (fTestNet && fRegTest)\n-        throw std::runtime_error(\"Invalid combination of -regtest and -testnet.\");\n+    if ((int)is_chain_arg_set + (int)fRegTest + (int)fTestNet > 1) {\n+        throw std::runtime_error(\"Invalid combination of -regtest, -testnet and -chain. Can use at most one.\");\n+    }\n     if (fRegTest)\n         return CBaseChainParams::REGTEST;\n     if (fTestNet)\n         return CBaseChainParams::TESTNET;\n-    return CBaseChainParams::MAIN;\n+    return GetArg(\"-chain\", CBaseChainParams::MAIN);\n }\n \n bool RenameOver(fs::path src, fs::path dest)"
      }
    ]
  },
  {
    "sha": "3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmY5ZDhjYWMwOWZjODg3MjdlZjJmMmEyYmVhMzNiOTBiNjI1ZTUw",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-10-13T21:24:21Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2019-09-06T20:13:49Z"
      },
      "message": "Testchains: Qt: Simplify network/chain styles",
      "tree": {
        "sha": "4dff73a96a9f63c6ff46d3a0f86f961c9acbfc0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dff73a96a9f63c6ff46d3a0f86f961c9acbfc0d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl1yvf0ACgkQiGbBjqHJ\nRKLhfBAAiEMwSCEwE4AhwHemjZNBDOt11HXbqQ8681uZrI5pW8Cum/NsA9b1Br5+\nCu5EP0dqfvCavQf59EH2nmnSuNrX7WULzhrg8+J9PK1cDwesV3lcCKv1wvHBQgUv\nw3tN2rwDYo3XQgGwyJ5y12BNG2+DK9Jos6lqmk3BsuT+MT/ZriWtfs2r4VoMosfY\nCxuH6peLlG1FvsnkVkh9eelOXWjIRFnRCT78NnwpPqUq/qJqY3XAB1/Ehg5m5tPG\ny3fTSsNwtwCfKsEx4G0ymcg0p+RcVQEfpRZ2UsEkgWdTiJMHFX8upUC8pO76lPNn\nHHKOtt/8JYPRnqn1+J2kLZBIpnkLaa8Ol5gP95O5erbtN70QEbgQJeIjPZUQkfra\njqyIKDTN9cvkraY08aF7KiClMzhO2GFfoducPVF/m+LoIM79OJYB2bJ60FFQA4T9\nklQiExSJaIX8m0Zy3+3X1WPBzAtUG34H8JNQCbQhQ7/tDf09ojqDhCM+3vlUQ4GY\nEZbe4ncu+HrFWtgkbxCsuFIaNr6IRkonuDemv9p6al9Ote1hsezadzG3nBHf8Rkd\nSZE2X+6Rbf/6U0vgcQR0KUBf7bKn0gvDd+GmqgRwQ5STlHhB0FXFzXpP5wGxh/ZR\n/TXbzOeeEHGNjTPPrcEfW3flE3pXJRPYlkNI1x31kUeFxo8hyFI=\n=FC18\n-----END PGP SIGNATURE-----",
        "payload": "tree 4dff73a96a9f63c6ff46d3a0f86f961c9acbfc0d\nparent 052c54ecb02695e5d2694e8e0cbf5ccc89de86e8\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1476393861 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1567800829 +0200\n\nTestchains: Qt: Simplify network/chain styles\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/052c54ecb02695e5d2694e8e0cbf5ccc89de86e8"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 12,
      "deletions": 10
    },
    "files": [
      {
        "sha": "adc4827e639060ceeae666185497cebe098742d9",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
        "patch": "@@ -524,7 +524,7 @@ int GuiMain(int argc, char* argv[])\n     PaymentServer::ipcParseCommandLine(*node, argc, argv);\n #endif\n \n-    QScopedPointer<const NetworkStyle> networkStyle(NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    QScopedPointer<const NetworkStyle> networkStyle(NetworkStyle::instantiate(Params().NetworkIDString()));\n     assert(!networkStyle.isNull());\n     // Allow for separate UI settings for testnets\n     QApplication::setApplicationName(networkStyle->getAppName());"
      },
      {
        "sha": "5c039a939eee0902aeca5fa8c23a7f7be6083c7c",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
        "patch": "@@ -6,18 +6,20 @@\n \n #include <qt/guiconstants.h>\n \n+#include <chainparamsbase.h>\n+#include <tinyformat.h>\n+\n #include <QApplication>\n \n static const struct {\n     const char *networkId;\n     const char *appName;\n     const int iconColorHueShift;\n     const int iconColorSaturationReduction;\n-    const char *titleAddText;\n } network_styles[] = {\n-    {\"main\", QAPP_APP_NAME_DEFAULT, 0, 0, \"\"},\n-    {\"test\", QAPP_APP_NAME_TESTNET, 70, 30, QT_TRANSLATE_NOOP(\"SplashScreen\", \"[testnet]\")},\n-    {\"regtest\", QAPP_APP_NAME_REGTEST, 160, 30, \"[regtest]\"}\n+    {\"main\", QAPP_APP_NAME_DEFAULT, 0, 0},\n+    {\"test\", QAPP_APP_NAME_TESTNET, 70, 30},\n+    {\"regtest\", QAPP_APP_NAME_REGTEST, 160, 30}\n };\n static const unsigned network_styles_count = sizeof(network_styles)/sizeof(*network_styles);\n \n@@ -75,8 +77,9 @@ NetworkStyle::NetworkStyle(const QString &_appName, const int iconColorHueShift,\n     trayAndWindowIcon   = QIcon(pixmap.scaled(QSize(256,256)));\n }\n \n-const NetworkStyle *NetworkStyle::instantiate(const QString &networkId)\n+const NetworkStyle* NetworkStyle::instantiate(const std::string& networkId)\n {\n+    std::string titleAddText = networkId == CBaseChainParams::MAIN ? \"\" : strprintf(\"[%s]\", networkId);\n     for (unsigned x=0; x<network_styles_count; ++x)\n     {\n         if (networkId == network_styles[x].networkId)\n@@ -85,7 +88,7 @@ const NetworkStyle *NetworkStyle::instantiate(const QString &networkId)\n                     network_styles[x].appName,\n                     network_styles[x].iconColorHueShift,\n                     network_styles[x].iconColorSaturationReduction,\n-                    network_styles[x].titleAddText);\n+                    titleAddText.c_str());\n         }\n     }\n     return nullptr;"
      },
      {
        "sha": "bb12dd1b6ea22fde18680939de079fd8092246a4",
        "filename": "src/qt/networkstyle.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/networkstyle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/networkstyle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.h?ref=3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
        "patch": "@@ -14,7 +14,7 @@ class NetworkStyle\n {\n public:\n     /** Get style associated with provided BIP70 network id, or 0 if not known */\n-    static const NetworkStyle *instantiate(const QString &networkId);\n+    static const NetworkStyle* instantiate(const std::string& networkId);\n \n     const QString &getAppName() const { return appName; }\n     const QIcon &getAppIcon() const { return appIcon; }"
      },
      {
        "sha": "8ae01ac093b817700357a5a49cdf9c9b7ff4d701",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bf9d8cac09fc88727ef2f2a2bea33b90b625e50/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=3bf9d8cac09fc88727ef2f2a2bea33b90b625e50",
        "patch": "@@ -68,8 +68,7 @@ void AppTests::appTests()\n \n     m_app.parameterSetup();\n     m_app.createOptionsModel(true /* reset settings */);\n-    QScopedPointer<const NetworkStyle> style(\n-        NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    QScopedPointer<const NetworkStyle> style(NetworkStyle::instantiate(Params().NetworkIDString()));\n     m_app.setupPlatformStyle();\n     m_app.createWindow(style.data());\n     connect(&m_app, &BitcoinApplication::windowShown, this, &AppTests::guiTests);"
      }
    ]
  }
]