[
  {
    "sha": "fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTVhNGNkODEzYzJmMDIyNWRjYmMwNWNkMTZhZTJkMWMwZDEzMjM0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-07-30T18:02:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-07-30T17:53:21Z"
      },
      "message": "gui: Generate bech32 addresses by default (take 2, fixup)",
      "tree": {
        "sha": "8ec8d33c3033873359cfa1c4e638c137845a0b17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ec8d33c3033873359cfa1c4e638c137845a0b17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUha5wv+KMkewtitmK5W3nKKI1BG25CjOnLh+97kdpYVEunz2l4iTxaQ15vs0nmC\nPfjr5aZFmgt5GhfRM3JukBMiD2CVn+LI7GD/3unSN6vSU6mu7TwcKcjcIVSKBTxP\nNH9gsU9PpORhrWQbTlQrID1K8PjcN0to3i8+N2A6uiegJwTwwOuHkNeYTM++wF5f\nR12+FhznyHoZrxKlT8Y4AM97+wRqOb8lRL2x+1CFbtes0FRJ6BIHZQ3lgGv6+kwo\n/6+CgO+PovjFDACXL8g/T1iRyeSQPZ1FEvjSPDIcQeL0Lq2VEpHe81jEtAS9whz2\nkv4YWSswxV7bxFXhafk3vxYBwYyklQ6fvmAHbCWz/6isAUCcUCgZ9t99v49oNBVs\nox3pu7ZYT2H+PjWD5Ub/3uVwqOsZL9qduo0hqz3nmsjvmKOp2zwMPo+0VN0SUDpz\nXkIHbBTV6v9vfxW+GSbRjjcp68MJ01ZFX43h/oP6polTDz4/ME2kFf8JhEWpwZcI\ndOfC2216\n=YxM7\n-----END PGP SIGNATURE-----",
        "payload": "tree 8ec8d33c3033873359cfa1c4e638c137845a0b17\nparent 74f1a27f2f45af7dafcc34df766cf76d29c7c6ed\nauthor MarcoFalke <falke.marco@gmail.com> 1564509723 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1564509201 -0400\n\ngui: Generate bech32 addresses by default (take 2, fixup)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74f1a27f2f45af7dafcc34df766cf76d29c7c6ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74f1a27f2f45af7dafcc34df766cf76d29c7c6ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74f1a27f2f45af7dafcc34df766cf76d29c7c6ed"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "bcd226edd9670b4df931d91d011bedfb75c56f32",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234",
        "patch": "@@ -198,6 +198,7 @@ class NodeImpl : public Node\n         return GuessVerificationProgress(Params().TxData(), tip);\n     }\n     bool isInitialBlockDownload() override { return ::ChainstateActive().IsInitialBlockDownload(); }\n+    bool isAddressTypeSet() override { return !::gArgs.GetArg(\"-addresstype\", \"\").empty(); }\n     bool getReindex() override { return ::fReindex; }\n     bool getImporting() override { return ::fImporting; }\n     void setNetworkActive(bool active) override"
      },
      {
        "sha": "b93b52c5cc9e512b27cb157f8e1d62288bf88408",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234",
        "patch": "@@ -150,6 +150,9 @@ class Node\n     //! Is initial block download.\n     virtual bool isInitialBlockDownload() = 0;\n \n+    //! Is -addresstype set.\n+    virtual bool isAddressTypeSet() = 0;\n+\n     //! Get reindex.\n     virtual bool getReindex() = 0;\n "
      },
      {
        "sha": "05157c2a4ac95917fcf85cbcd5eb7854a7ef55aa",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=fa5a4cd813c2f0225dcbc05cd16ae2d1c0d13234",
        "patch": "@@ -7,6 +7,7 @@\n #include <qt/receivecoinsdialog.h>\n #include <qt/forms/ui_receivecoinsdialog.h>\n \n+#include <interfaces/node.h>\n #include <qt/addresstablemodel.h>\n #include <qt/optionsmodel.h>\n #include <qt/platformstyle.h>\n@@ -92,10 +93,16 @@ void ReceiveCoinsDialog::setModel(WalletModel *_model)\n         // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH, this);\n \n-        if (model->wallet().getDefaultAddressType() == OutputType::BECH32) {\n-            ui->useLegacyAddress->setCheckState(Qt::Unchecked);\n+        if (model->node().isAddressTypeSet()) {\n+            // user explicitly set the type, use it\n+            if (model->wallet().getDefaultAddressType() == OutputType::BECH32) {\n+                ui->useLegacyAddress->setCheckState(Qt::Unchecked);\n+            } else {\n+                ui->useLegacyAddress->setCheckState(Qt::Checked);\n+            }\n         } else {\n-            ui->useLegacyAddress->setCheckState(Qt::Checked);\n+            // Always fall back to bech32 in the gui\n+            ui->useLegacyAddress->setCheckState(Qt::Unchecked);\n         }\n \n         // Set the button to be enabled or disabled based on whether the wallet can give out new addresses."
      }
    ]
  }
]