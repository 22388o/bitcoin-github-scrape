jtimon,2014-09-01T19:20:37Z,Closing as it is included in #4794 with only one commit more.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-54086580,54086580,
jtimon,2014-09-02T11:28:14Z,Reopened as independent from #4506 \n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-54138644,54138644,
BitcoinPullTester,2014-09-02T11:42:27Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4793_cf07ea708c5822687ea9ef9c70a37324843a43b4/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-54139830,54139830,
jtimon,2014-10-10T09:26:45Z,@gavinandresen that's the reason why I wanted to get rid of the optimization (which doesn't really help much in regtest mode) in #4423 but I'm happy removing the hashmeter.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-58632533,58632533,
jtimon,2014-10-10T20:34:51Z,The last commit (Remove gethashespersec() from rpcmining) is completely optional and can be moved to another PR.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-58712620,58712620,
sipa,2014-10-10T20:47:52Z,"Concept ACK and code looks good.\n\nWe may want to deprecation period for gethashespersec() though, and just having it return 0 is not really acceptable. Having it return an error would be fine to me as nobody should really be depending on it anymore.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-58714171,58714171,
TheBlueMatt,2014-10-11T07:38:45Z,utACK. I dont think we need a deprecation period for anything related to the internal miner.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-58741397,58741397,
jtimon,2014-10-11T17:20:06Z,Waiting to get more consensus before changing the rpc stuff (in case we decide to leave it as it is now).\nI prefer to just remove it but I have no strong opinion on this.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-58757122,58757122,
jtimon,2014-10-14T08:01:03Z,"So counting opinions on the RPC stuff...\n\nA) Just remove gethashespersec RPC call in this PR ( TheBlueMatt, jtimon ) total 2\nB) Leave gethashespersec but throw an error when somebody calls it (sipa) total 1\nC) Let gethashespersec return always 0 and leave the RPC for another PR (nobody) total 0\n\nI don't really have a strong opinion on this. I'm not in a hurry to remove the RPC call.\nPlease,",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-59003467,59003467,
gmaxwell,2014-10-14T08:05:41Z,"I think gethashespersec is more or less worthless. I don't think I've heard of anyone using it in a long time. (IIRC it was even broken for a while).    I don't really have a strong opinion, but I think this is an unimportant enough RPC that removing it shoudl be fine.\n\n@jgarzik has had opinions about the internal miner before.  @luke-jr often has mining opinions\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-59003984,59003984,
Diapolo,2014-10-14T08:52:14Z,"Remove it `gethashespersec`, as long as the internal miner is working I'm fine with that ;).\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-59009354,59009354,
laanwj,2014-10-14T08:56:56Z,"As said before, sometimes I wonder why we don't just nuke the internal miner, instead of death by a thousand cuts.\n\nAnyhow - yes I'm fine with removing `gethashespersec`.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-59009831,59009831,
sipa,2014-10-14T22:54:30Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-59130881,59130881,
jtimon,2014-10-22T01:22:14Z,"Pushed one additional commit to avoid using boost on ScanHash().\nInstead it returns false, and just after that `boost::this_thread::interruption_point()` was called anyway.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-60024239,60024239,
maaku,2014-10-28T17:36:02Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-60797580,60797580,
jtimon,2014-10-29T21:02:16Z,"That makes sense, I can squash it there as soon as I get some more acks for the latest commit.\nIn fact, the commits are very separated to simplify review, but they're all very localized so I think I wouldn't oppose to collapse them all into a single commit once we're ready to merge.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-61004354,61004354,
jtimon,2014-11-14T14:56:39Z,"Ping\nAlso, should I squash already?\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-63075192,63075192,
jtimon,2014-11-18T13:01:56Z,Squashed into 2 commits.\nThe step by step version can still be found here: https://github.com/jtimon/bitcoin/tree/proof2_old\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-63467459,63467459,
jtimon,2015-01-04T20:16:09Z,"Squashed and rebased with some corrections, but closing at least until #5599 is merged.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-68647089,68647089,
jtimon,2015-01-24T18:30:56Z,After #5599 has been merged I reopened this.\nI also make regtest use the new generateProof (was ScanHash) function as discussed in #5275 after it was merged.\nThis should slightly improve regtest mining performance but I haven't tested.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-71331027,71331027,
ghost,2015-01-26T06:38:16Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-71419765,71419765,
jtimon,2015-02-06T05:23:26Z,Squashed the 2 commits. It didn't really help much to review to have them separated.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-73184644,73184644,
jtimon,2015-03-26T16:25:59Z,Needed rebase\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-86603456,86603456,
sipa,2015-04-07T22:08:34Z,@jtimon #5957 includes something similar to this (but goes further). I forgot you had a PR still open for this.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-90746542,90746542,
jtimon,2015-04-08T22:12:03Z,"Closing in favor of #5957, although waiting for some nits to be solved.\nI plan to remove the CheckProofOfWork() warnings as part of the libconsensus work to expose VerifyBlockHeader() soon.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-91051559,91051559,
jtimon,2015-04-10T09:48:25Z,Rebased and reopened.\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-91497184,91497184,
jtimon,2015-04-20T20:15:54Z,Needed rebase\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-94557789,94557789,
laanwj,2015-05-06T15:05:50Z,Most of the comments in this PR do not seem to apply to the actual code change here anymore. \n\nWhat is the motivation for this change?\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-99505259,99505259,
jtimon,2015-05-06T15:37:48Z,"@laanwj instead of checking for the overflow of the nNonce, the magic 1000 is used. This does not check all possible values of the nonce before changing the extra nonce, but that shouldn't be a problem.\nIt can be make a constant, sure. I was hoping that @sipa @luke-jr or someone less lazy than me for base conversions and hexadecimal would say something like ""since ScanHash returns false when `pbl",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-99516401,99516401,
jtimon,2015-06-25T19:25:49Z,ping\n,https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-115369711,115369711,
jtimon,2015-07-04T10:07:16Z,"Needed rebase. Also, I stopped using multiple threads for mining with regtest.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-118498227,118498227,
jgarzik,2015-07-23T18:11:43Z,"Closing this old PR.  This was a very confusing PR as @laanwj notes, as the associated commits keep changing, garnering ACKs, getting closed, getting re-opened.\n\nPlease open a new PR with a specific focused change, and a fresh PR summary description.\n",https://github.com/bitcoin/bitcoin/pull/4793#issuecomment-124191178,124191178,
sipa,2014-10-08T22:58:58Z,"Why turn this into a global? It's ugly, and I don't think it will actually work in case of multiple hasher threads...\n",https://github.com/bitcoin/bitcoin/pull/4793#discussion_r18618409,18618409,src/miner.cpp
jtimon,2014-10-09T17:42:25Z,"I don't know of any other way to encapsulate the hashmeter inside the function (which will later be a method of CProof). I already asked this and nobody answered, but would anyone oppose to just removing the hashmeter? It would be simpler and cleaner.\n",https://github.com/bitcoin/bitcoin/pull/4793#discussion_r18661188,18661188,src/miner.cpp
gavinandresen,2014-10-09T18:04:33Z,"Internal miner should only be used for testing, so I vote to simplify and remove the hash meter.\n",https://github.com/bitcoin/bitcoin/pull/4793#discussion_r18662629,18662629,src/miner.cpp
jtimon,2015-04-10T09:34:02Z,This log could be removed too for additional regtest performance.\n,https://github.com/bitcoin/bitcoin/pull/4793#discussion_r28132294,28132294,src/miner.cpp
laanwj,2015-05-06T14:58:31Z,"What is this ""1000"" magic value based on?\n",https://github.com/bitcoin/bitcoin/pull/4793#discussion_r29766116,29766116,src/miner.cpp
laanwj,2015-05-06T15:00:44Z,"Is there any overflow check for the nonce left? Or is this how the 1000 is computed? If so, please define a constant and make the computation explicit.\n",https://github.com/bitcoin/bitcoin/pull/4793#discussion_r29766374,29766374,src/miner.cpp
laanwj,2015-05-06T15:03:58Z,"Does it give a lot of overhead to call CheckProofOfWork for every nonce, instead of the 'some zero bits' check?\n",https://github.com/bitcoin/bitcoin/pull/4793#discussion_r29766709,29766709,src/miner.cpp
jtimon,2015-05-06T15:25:34Z,"No, CheckProofOfWork is not much more expensive than `((uint16_t*)phash)[15] == 0 && UintToArith256(hash) <= arith_uint256().SetCompact(pblock->nBits)`, which are the checks that CheckProofOfWork is replacing.\nIn fact, in regtest mode (the mining we care about the most, right?) those checks didn't existed and CheckProofOfWork was already being called.\n\nI also have commits to decouple the pow fu",https://github.com/bitcoin/bitcoin/pull/4793#discussion_r29769025,29769025,src/miner.cpp
