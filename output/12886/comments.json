[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378739389",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378739389",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378739389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODczOTM4OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T20:45:44Z",
    "updated_at": "2018-04-04T20:45:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Slice type seems similar to upcoming [std::span](http://en.cppreference.com/w/cpp/container/span). It may be a good idea to call this class `Span` and consciously keep the implementation compatible so it could be swapped out in the future (it does seem compatible already).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378739389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378741497",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378741497",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378741497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc0MTQ5Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T20:53:17Z",
    "updated_at": "2018-04-04T20:53:17Z",
    "author_association": "MEMBER",
    "body": "Cool, I'll rename it and add a comment. I wasn't aware of std::span.\n\nAlso, std::span seems to have a constructor that behaves like the MakeSlice function I have here. I don't think it's possible to implement that as a constructor in c++11 yet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378741497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378746171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378746171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378746171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc0NjE3MQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T21:09:59Z",
    "updated_at": "2018-04-04T21:09:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK. Very nice!\r\n\r\nDoes this need a test?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378746171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378754525",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378754525",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378754525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc1NDUyNQ==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T21:41:49Z",
    "updated_at": "2018-04-04T21:41:49Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, way overdue.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378754525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378755557",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378755557",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378755557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc1NTU1Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T21:46:03Z",
    "updated_at": "2018-04-04T21:46:03Z",
    "author_association": "MEMBER",
    "body": "@theuni My idea of removing the hack in netaddress is introducing a BigInteger wrapper (see #10785).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378755557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378775496",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378775496",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378775496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc3NTQ5Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T23:23:29Z",
    "updated_at": "2018-04-04T23:23:29Z",
    "author_association": "MEMBER",
    "body": "A few small changes:\r\n* Renamed to `Span`\r\n* Reduced the number of methods (it's now so trivial that I don't see what could be tested about it, @practicalswift).\r\n* Added comments to explain similarity with C++20's `std::span` (thanks @ryanofsky).\r\n* Added TODO on the netaddress port serialization hack (pointed out by @theuni).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378775496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378836987",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378836987",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378836987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODgzNjk4Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-05T06:49:18Z",
    "updated_at": "2018-04-05T06:50:36Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/pull/12886/commits/ce141afc5a4a322b309840789e984b0a79c603fb\r\n\r\n> A longer term goal for Spans is making the script execution operate on them rather than on CScript itself. This will allow separate storage mechanisms for scripts.\r\n\r\nFinally :)\r\n\r\n> @theuni My idea of removing the hack in netaddress is introducing a BigInteger wrapper (see #10785).\r\n\r\nGood idea, though the name BigInteger put me on the wrong foot initially. Better to spell it out as `BigEndianInteger` probably.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378836987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378962242",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378962242",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378962242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk2MjI0Mg==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-05T14:47:26Z",
    "updated_at": "2018-04-05T14:47:26Z",
    "author_association": "MEMBER",
    "body": "@sipa Sounds good.\r\n\r\nMy only complaint remaining was that member functions weren't constexpr, but that has apparently been fixed in the meantime. utACK ce141afc5a4a322b309840789e984b0a79c603fb",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378962242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378963363",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378963363",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378963363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk2MzM2Mw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-05T14:50:39Z",
    "updated_at": "2018-04-05T14:50:49Z",
    "author_association": "MEMBER",
    "body": "@laanwj Oops, typo. The wrapper is called `BigEndian` in #10785.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378963363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378963401",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-378963401",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 378963401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk2MzQwMQ==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-05T14:50:44Z",
    "updated_at": "2018-04-05T14:50:44Z",
    "author_association": "MEMBER",
    "body": "Quick follow-up, we'll want to add ```data()``` to any containers that don't have it already. base_blob (uint256) for example. No need to do it in this PR though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378963401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379550640",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-379550640",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 379550640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU1MDY0MA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T13:28:14Z",
    "updated_at": "2018-04-08T13:28:14Z",
    "author_association": "MEMBER",
    "body": "Rename Slice to Span in first commit message.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379550640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379553983",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#issuecomment-379553983",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12886",
    "id": 379553983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU1Mzk4Mw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T14:17:48Z",
    "updated_at": "2018-04-08T14:17:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379553983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179291732",
    "pull_request_review_id": 109510771,
    "id": 179291732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTI5MTczMg==",
    "diff_hunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SLICE_H\n+#define BITCOIN_SLICE_H\n+\n+#include <type_traits>\n+#include <cstddef>\n+\n+/** A Slice is a pointer to a non-owned continuous array that acts like a container. */\n+template<typename C>\n+class Slice\n+{\n+    C* m_data;\n+    std::size_t m_size;\n+\n+public:\n+    Slice() : m_data(nullptr), m_size(0) {}\n+    Slice(C* data, std::size_t size) : m_data(data), m_size(size) {}\n+\n+    C* data() const { return m_data; }\n+    std::size_t size() const { return m_size; }\n+\n+    C* begin() const { return m_data; }\n+    C* end() const { return m_data + m_size; }\n+\n+    C& operator[](std::size_t pos) const { return m_data[pos]; }\n+};\n+\n+/** Create a slice to a container exposing data() and size()\n+ *\n+ * This correctly deals with constness: if either the element type is const\n+ * or a reference to a const container is passed, the result will be a const\n+ * Slice. */\n+template<typename V>\n+Slice<typename std::remove_pointer<decltype(std::declval<V>().data())>::type> MakeSlice(V& v) { return Slice<typename std::remove_pointer<decltype(std::declval<V>().data())>::type>(v.data(), v.size()); }",
    "path": "src/slice.h",
    "position": null,
    "original_position": 37,
    "commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "original_commit_id": "347405bfc9f19438d034c0aaee129fd058bb16e9",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This could use an overload for the ```std::is_trivially_copyable``` trait that creates a slice for ```Slice<uint8_t>(&v, sizeof(v))```:\r\n> Objects of trivially-copyable types are the only C++ objects that may be safely copied with std::memcpy or serialized to/from binary files with std::ofstream::write()/std::ifstream::read(). In general, a trivially copyable type is any type for which the underlying bytes can be copied to an array of char or unsigned char and into a new object of the same type, and the resulting object would have the same value as the original.\r\n\r\nThat would eliminate the need for the hack in netaddress.h.",
    "created_at": "2018-04-04T21:40:42Z",
    "updated_at": "2018-04-05T15:20:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179291732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179291732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179291732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179291732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179324735",
    "pull_request_review_id": 109548724,
    "id": 179324735,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTMyNDczNQ==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SPAN_H\n+#define BITCOIN_SPAN_H\n+\n+#include <type_traits>\n+#include <cstddef>\n+\n+/** A Span is an object that can refer to a contiguous sequence of objects.\n+ *\n+ * It implements a subset of C++20's std::span.\n+ */\n+template<typename C>\n+class Span\n+{\n+    C* m_data;\n+    std::ptrdiff_t m_size;\n+\n+public:\n+    constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n+    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n+\n+    constexpr C* data() noexcept { return m_data; }\n+    constexpr std::ptrdiff_t size() noexcept { return m_size; }\n+};\n+\n+/** Create a span to a container exposing data() and size().\n+ *\n+ * This correctly deals with constness: the returned Span's element type will be\n+ * whatever data() returns a pointer to. If either the passed container is const,\n+ * or its element type is const, the resulting span will have a const element type.\n+ *\n+ * std::span will have a constructor that implements this functionality directly.\n+ */\n+template<typename V>\n+constexpr Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type> MakeSpan(V& v) { return Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type>(v.data(), v.size()); }",
    "path": "src/span.h",
    "position": 38,
    "original_position": 38,
    "commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "original_commit_id": "ce141afc5a4a322b309840789e984b0a79c603fb",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "clang-format will flatten this out and make some other whitespace changes",
    "created_at": "2018-04-05T00:57:03Z",
    "updated_at": "2018-04-05T15:20:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179324735",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179324735"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179324735"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179324735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 38,
    "original_line": 38,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179491282",
    "pull_request_review_id": 109745084,
    "id": 179491282,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTQ5MTI4Mg==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SPAN_H\n+#define BITCOIN_SPAN_H\n+\n+#include <type_traits>\n+#include <cstddef>\n+\n+/** A Span is an object that can refer to a contiguous sequence of objects.\n+ *\n+ * It implements a subset of C++20's std::span.\n+ */\n+template<typename C>\n+class Span\n+{\n+    C* m_data;\n+    std::ptrdiff_t m_size;\n+\n+public:\n+    constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n+    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n+\n+    constexpr C* data() noexcept { return m_data; }",
    "path": "src/span.h",
    "position": null,
    "original_position": 25,
    "commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "original_commit_id": "ce141afc5a4a322b309840789e984b0a79c603fb",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Tiny nit: I think these should be const too, as it's not implied by constexpr in c++14.",
    "created_at": "2018-04-05T14:54:23Z",
    "updated_at": "2018-04-05T15:20:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179491282",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179491282"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179491282"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179491282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179500947",
    "pull_request_review_id": 109756869,
    "id": 179500947,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTUwMDk0Nw==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SPAN_H\n+#define BITCOIN_SPAN_H\n+\n+#include <type_traits>\n+#include <cstddef>\n+\n+/** A Span is an object that can refer to a contiguous sequence of objects.\n+ *\n+ * It implements a subset of C++20's std::span.\n+ */\n+template<typename C>\n+class Span\n+{\n+    C* m_data;\n+    std::ptrdiff_t m_size;\n+\n+public:\n+    constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n+    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n+\n+    constexpr C* data() noexcept { return m_data; }",
    "path": "src/span.h",
    "position": null,
    "original_position": 25,
    "commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "original_commit_id": "ce141afc5a4a322b309840789e984b0a79c603fb",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2018-04-05T15:21:14Z",
    "updated_at": "2018-04-05T15:21:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179500947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179500947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179500947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179500947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 179491282
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179947614",
    "pull_request_review_id": 110287238,
    "id": 179947614,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk0NzYxNA==",
    "diff_hunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SPAN_H\n+#define BITCOIN_SPAN_H\n+\n+#include <type_traits>\n+#include <cstddef>\n+\n+/** A Span is an object that can refer to a contiguous sequence of objects.\n+ *\n+ * It implements a subset of C++20's std::span.\n+ */\n+template<typename C>\n+class Span\n+{\n+    C* m_data;\n+    std::ptrdiff_t m_size;\n+\n+public:\n+    constexpr Span() noexcept : m_data(nullptr), m_size(0) {}\n+    constexpr Span(C* data, std::ptrdiff_t size) noexcept : m_data(data), m_size(size) {}\n+\n+    constexpr C* data() const noexcept { return m_data; }\n+    constexpr std::ptrdiff_t size() const noexcept { return m_size; }\n+};\n+\n+/** Create a span to a container exposing data() and size().\n+ *\n+ * This correctly deals with constness: the returned Span's element type will be\n+ * whatever data() returns a pointer to. If either the passed container is const,\n+ * or its element type is const, the resulting span will have a const element type.\n+ *\n+ * std::span will have a constructor that implements this functionality directly.\n+ */\n+template<typename V>\n+constexpr Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type> MakeSpan(V& v) { return Span<typename std::remove_pointer<decltype(std::declval<V>().data())>::type>(v.data(), v.size()); }\n+\n+#endif",
    "path": "src/span.h",
    "position": 40,
    "original_position": 40,
    "commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "original_commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```cpp\r\n#endif // BITCOIN_SPAN_H",
    "created_at": "2018-04-08T13:23:24Z",
    "updated_at": "2018-04-08T13:26:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179947614",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179947614"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179947614"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179947614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 40,
    "original_line": 40,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179949230",
    "pull_request_review_id": 110288874,
    "id": 179949230,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk0OTIzMA==",
    "diff_hunk": "@@ -167,10 +168,13 @@ class CService : public CNetAddr\n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action) {\n             READWRITE(ip);\n+\n+            // TODO: introduce native support for BE serialization in serialize.h\n             unsigned short portN = htons(port);\n-            READWRITE(FLATDATA(portN));\n-            if (ser_action.ForRead())\n+            READWRITE(Span<unsigned char>((unsigned char*)&portN, 2));",
    "path": "src/netaddress.h",
    "position": 17,
    "original_position": 17,
    "commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "original_commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "not sure, but maybe use `sizeof(uint16_t)` instead of `2` to increase code readability?\r\nOr use `uint16_t` as htons container (instead of `unsigned short`) and `sizeof(portN)`?",
    "created_at": "2018-04-08T14:16:44Z",
    "updated_at": "2018-04-08T14:16:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179949230",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179949230"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179949230"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179949230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 174,
    "original_line": 174,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179952091",
    "pull_request_review_id": 110291650,
    "id": 179952091,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk1MjA5MQ==",
    "diff_hunk": "@@ -167,10 +168,13 @@ class CService : public CNetAddr\n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action) {\n             READWRITE(ip);\n+\n+            // TODO: introduce native support for BE serialization in serialize.h\n             unsigned short portN = htons(port);\n-            READWRITE(FLATDATA(portN));\n-            if (ser_action.ForRead())\n+            READWRITE(Span<unsigned char>((unsigned char*)&portN, 2));",
    "path": "src/netaddress.h",
    "position": 17,
    "original_position": 17,
    "commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "original_commit_id": "9272d70536287d4ff9aa1ee41a401465c0e8194a",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yep, but this code is going away anyhow see \r\n\r\n> @theuni My idea of removing the hack in netaddress is introducing a Big~~Integer~~Endian wrapper (see #10785).",
    "created_at": "2018-04-08T15:56:33Z",
    "updated_at": "2018-04-08T15:56:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179952091",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179952091"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12886#discussion_r179952091"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12886"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179952091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 174,
    "original_line": 174,
    "side": "RIGHT",
    "in_reply_to_id": 179949230
  }
]