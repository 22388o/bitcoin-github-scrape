DrahtBot,2021-10-26 05:33:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull r",https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-951576542,951576542,
theStack,2021-10-29 00:12:54,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-954312414,954312414,
hebasto,2021-10-31 17:44:09,"Updated 1d96788ce97f3dcfbe326652c0d6204624dbb783 -> 347774b86c8e451300c9487d8c350ebdb0df2f86 ([pr23345.01](https://github.com/hebasto/bitcoin/commits/pr23345.01) -> [pr23345.02](https://github.com/hebasto/bitcoin/commits/pr23345.02), [diff](https://github.com/hebasto/bitcoin/compare/pr23345.01..pr23345.02)):\n\n- addressed @luke-jr's [comment](https://github.com/bitcoin/bitcoin/pull/23345#pullre",https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-955763364,955763364,
hebasto,2021-11-01 10:15:21,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nf3e5d495458d3347503f3446b6810b75bc519c5508986f5225e1ee8e3187aead  guix-build-347774b86c8e/output/aarch64-linux-gnu/SHA256SUMS.part\n6d8dcea67a1295cf04f121697779fb1158e74fed6ec317cd81f0e5a10f82d532  guix-build-347774b86c8e/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-956106705,956106705,
jarolrod,2021-11-02 15:57:03,"contributing GUIX hashes, mine match @hebasto \n\n```\nfind guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n\nf3e5d495458d3347503f3446b6810b75bc519c5508986f5225e1ee8e3187aead  guix-build-347774b86c8e/output/aarch64-linux-gnu/SHA256SUMS.part\n6d8dcea67a1295cf04f121697779fb1158e74fed6ec317cd81f0e5a10f82d532  guix-build-347774b86",https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-957875813,957875813,
hebasto,2021-11-13 19:37:31,"Updated 347774b86c8e451300c9487d8c350ebdb0df2f86 -> 4fe7cf167796015c0f24e740f81a2452e3996a92 ([pr23345.02](https://github.com/hebasto/bitcoin/commits/pr23345.02) -> [pr23345.03](https://github.com/hebasto/bitcoin/commits/pr23345.03)):\n- rebased due to the conflict with #23114\n- addressed @laanwj's [comment](https://github.com/bitcoin/bitcoin/pull/23345#discussion_r746860579)",https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-968125192,968125192,
hebasto,2021-11-14 08:31:44,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nf752d99d15d59e3a70a54cf73dd0d28c6f602a9c82f5303695618038e9370d77  guix-build-4fe7cf167796/output/aarch64-linux-gnu/SHA256SUMS.part\n5857cc54913ab34737e269c2fd9ad29d32138f28436e11071bacf82f98d6c927  guix-build-4fe7cf167796/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-968247084,968247084,
laanwj,2021-11-15 15:28:26,Code review ACK 4fe7cf167796015c0f24e740f81a2452e3996a92,https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-969024260,969024260,
luke-jr,2021-11-02 17:34:37,"I guess we should only be checking bitcoind/bitcoin-qt here (the other tools don't need them either?), but perhaps that's safer left for a later PR...",https://github.com/bitcoin/bitcoin/pull/23345#discussion_r741322880,741322880,configure.ac
hebasto,2021-11-02 17:38:31,You read my mind :),https://github.com/bitcoin/bitcoin/pull/23345#discussion_r741325982,741325982,configure.ac
laanwj,2021-11-10 18:12:40,I don't understand why an explicit conditional is needed here. Shouldn't `make` be able to figure out for itself whether these libraries need to be built?,https://github.com/bitcoin/bitcoin/pull/23345#discussion_r746860579,746860579,src/Makefile.am
hebasto,2021-11-10 18:19:27,"> Shouldn't `make` be able to figure out for itself whether these libraries need to be built?\n\nYes, it should.\n\n> I don't understand why an explicit conditional is needed here.\n\nIt is not _needed_. It's an optimization -- not processing unused `Makefile.*.include` files.",https://github.com/bitcoin/bitcoin/pull/23345#discussion_r746865494,746865494,src/Makefile.am
hebasto,2021-11-13 19:38:03,[Updated](https://github.com/bitcoin/bitcoin/pull/23345#issuecomment-968125192).,https://github.com/bitcoin/bitcoin/pull/23345#discussion_r748758404,748758404,src/Makefile.am
laanwj,2021-11-15 15:25:43,"Thanks. Yes, I don't think this was worth special-case optimizing, parsing performance of `make` is hardly an issue on modern systems afaik.",https://github.com/bitcoin/bitcoin/pull/23345#discussion_r749429659,749429659,src/Makefile.am
