hebasto,2020-06-04 09:47:02,"@promag \n> I think you could also drop\n> \n> ```diff\n> --- a/src/qt/overviewpage.cpp\n> +++ b/src/qt/overviewpage.cpp\n> @@ -23,8 +23,6 @@\n>  #define DECORATION_SIZE 54\n>  #define NUM_ITEMS 5\n> \n> -Q_DECLARE_METATYPE(interfaces::WalletBalances)\n> -\n>  class TxViewDelegate : public QAbstractItemDelegate\n>  {\n>      Q_OBJECT\n> ```\n> \n> cc @ryanofsky\n\nhttps://github",https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-638743568,638743568,
promag,2020-06-04 10:03:59,That doesn't matter with Qt5 connection style. We also don't use `QVariant::fromValue` with `interfaces::WalletBalances`. FWIW I've tested without and it worked with `QT_FATAL_WARNINGS=1`. Maybe I missed something?,https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-638752433,638752433,
hebasto,2020-06-04 10:14:05,"> That doesn't matter with Qt5 connection style. We also don't use `QVariant::fromValue` with `interfaces::WalletBalances`. FWIW I've tested without and it worked with `QT_FATAL_WARNINGS=1`. Maybe I missed something?\n\nI'm totally agree with you. I mentioned `balanceChanged()` signal with idea: if it would use `Qt::QueuedConnection` it will require `qRegisterMetaType()` _and_ `Q_DECLARE_METATYP",https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-638757315,638757315,
promag,2020-06-04 10:16:22,"> if it would use `Qt::QueuedConnection` it will require `qRegisterMetaType()` _and_ `Q_DECLARE_METATYPE()`.\n\nAre you sure about this?",https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-638758442,638758442,
hebasto,2020-06-04 10:19:53,"@promag \n> > if it would use `Qt::QueuedConnection` it will require `qRegisterMetaType()` _and_ `Q_DECLARE_METATYPE()`.\n> \n> Are you sure about this?\n\nhttps://doc.qt.io/qt-5/qt.html#ConnectionType-enum:\n> With queued connections, the parameters must be of types that are known to Qt's meta-object system, because Qt needs to copy the arguments to store them in an event behind the scenes.",https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-638760040,638760040,
luke-jr,2020-06-05 16:53:10,Is not needing it for typedefs considered defined behaviour?,https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-639627488,639627488,
hebasto,2020-06-05 18:22:48,"> Is not needing it for typedefs considered defined behaviour?\n\nSorry, mind re-wording your question to be clear for me, please?",https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-639686898,639686898,
promag,2020-06-11 11:11:41,ACK ad113aeb29c7db6df94cebd784c0c6b668bfd9a5.,https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-642575918,642575918,
DrahtBot,2020-07-08 20:46:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19471 (util: Make default arg values more specific by hebasto)\n\nIf you consider this pull request important, please als",https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-655747758,655747758,
fanquake,2020-07-09 15:21:10,@laanwj or @jonasschnelli can you weigh in here?,https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-656191463,656191463,
fanquake,2020-08-10 07:57:33,Given there's been no follow up for > a month. Can you move this to the [GUI repo](https://github.com/bitcoin-core/gui).,https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-671214664,671214664,
hebasto,2020-08-14 12:50:55,Moved to https://github.com/bitcoin-core/gui/pull/61.,https://github.com/bitcoin/bitcoin/pull/19108#issuecomment-674058686,674058686,
