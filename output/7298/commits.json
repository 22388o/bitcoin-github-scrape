[
  {
    "sha": "faf3299b73ccb5044b7eaced229ac0c904aa25f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWYzMjk5YjczY2NiNTA0NGI3ZWFjZWQyMjlhYzBjOTA0YWEyNWY1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-29T14:38:38Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-05T18:22:47Z"
      },
      "message": "[qt] Intro: Display required space\n\nRequired space depends on the user's choice:\n -prune=0\n -prune=<n>",
      "tree": {
        "sha": "44b26cb888351d7112541c1b9345ec55cdba0cc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44b26cb888351d7112541c1b9345ec55cdba0cc6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf3299b73ccb5044b7eaced229ac0c904aa25f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf3299b73ccb5044b7eaced229ac0c904aa25f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf3299b73ccb5044b7eaced229ac0c904aa25f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf3299b73ccb5044b7eaced229ac0c904aa25f5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd836c1d855b92e7c73ab31979f471c4f8dad68"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 15,
      "deletions": 5
    },
    "files": [
      {
        "sha": "412d34264fb9e7ee7b4bf75a08b4c79d29c0cf18",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf3299b73ccb5044b7eaced229ac0c904aa25f5/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf3299b73ccb5044b7eaced229ac0c904aa25f5/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=faf3299b73ccb5044b7eaced229ac0c904aa25f5",
        "patch": "@@ -15,9 +15,15 @@\n #include <QSettings>\n #include <QMessageBox>\n \n-/* Minimum free space (in bytes) needed for data directory */\n+#include <cmath>\n+\n static const uint64_t GB_BYTES = 1000000000LL;\n-static const uint64_t BLOCK_CHAIN_SIZE = 20LL * GB_BYTES;\n+/* Minimum free space (in GB) needed for data directory */\n+static const uint64_t BLOCK_CHAIN_SIZE = 80;\n+/* Minimum free space (in GB) needed for data directory when pruned; Does not include prune target */\n+static const uint64_t CHAIN_STATE_SIZE = 2;\n+/* Total required space (in GB) depending on user choice (prune, not prune) */\n+static uint64_t requiredSpace;\n \n /* Check free space asynchronously to prevent hanging the UI thread.\n \n@@ -112,7 +118,11 @@ Intro::Intro(QWidget *parent) :\n     signalled(false)\n {\n     ui->setupUi(this);\n-    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    uint64_t pruneTarget = std::max<int64_t>(0, GetArg(\"-prune\", 0));\n+    requiredSpace = BLOCK_CHAIN_SIZE;\n+    if (pruneTarget)\n+        requiredSpace = CHAIN_STATE_SIZE + std::ceil(pruneTarget * 1024 * 1024.0 / GB_BYTES);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(requiredSpace));\n     startThread();\n }\n \n@@ -216,9 +226,9 @@ void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable\n         ui->freeSpace->setText(\"\");\n     } else {\n         QString freeString = tr(\"%n GB of free space available\", \"\", bytesAvailable/GB_BYTES);\n-        if(bytesAvailable < BLOCK_CHAIN_SIZE)\n+        if(bytesAvailable < requiredSpace * GB_BYTES)\n         {\n-            freeString += \" \" + tr(\"(of %n GB needed)\", \"\", BLOCK_CHAIN_SIZE/GB_BYTES);\n+            freeString += \" \" + tr(\"(of %n GB needed)\", \"\", requiredSpace);\n             ui->freeSpace->setStyleSheet(\"QLabel { color: #800000 }\");\n         } else {\n             ui->freeSpace->setStyleSheet(\"\");"
      }
    ]
  }
]