laanwj,2020-10-22 18:40:08,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714685164,714685164,
practicalswift,2020-10-22 18:42:54,"Concept ACK: a.) number go up is good, and b.) big number going up is obviously better than small number going up! :)\n",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714686768,714686768,
hebasto,2020-10-22 19:46:43,Concept ACK for 0.22.0 -> 22.0,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714721807,714721807,
Emzy,2020-10-22 20:01:41,Concept ACK for 0.22.0 -> 22.0,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714729098,714729098,
michaelfolkson,2020-10-22 20:48:55,"Concept ACK\n\nRedundancy is generally worth considering but this 0.x redundancy seems unnecessary for all possible future scenarios. I'm assuming we don't need to look as far ahead as v99, v100... :)",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714753559,714753559,
luke-jr,2020-10-22 21:13:23,"Concept NACK, we should stick to a standard versioning system. Either semver (0.features.bugfixes or features.0.bugfixes) or calendar versioning (yy.mm.bugfixes). Whatever we do, CLIENT_VERSION and the UA should reflect it properly. If we go with calendar versioning, replacing 0.21 with 20.11 would make a smoother migration than a 21.N following 0.21.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714765646,714765646,
fjahr,2020-10-22 21:53:34,Following the discussion in the meeting today I am somewhat indifferent towards making a change. I guess I just have not been asked about a 1.0 enough ;) But if we do change anything I strongly prefer this to all the other approaches that were discussed because it's a simple change and simple to explain to outsiders.,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714783696,714783696,
DrahtBot,2020-10-22 22:32:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18980 (build: Decouple clientversion.cpp from the git repo by hebasto)\n* #18261 (Erlay: bandwidth-efficient transaction ",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714799073,714799073,
JeremyRubin,2020-10-22 23:07:57,"I'd prefer if we track the calendar, e.g. 20.11 for a november 2020 release as luke suggests.\n\nBut if it's too late to make that happen I am happy to just drop the 0.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-714810334,714810334,
MarcoFalke,2020-10-23 07:54:03,"Concept ACK\n\nAssigned 22.0 milestone",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715110647,715110647,
jnewbery,2020-10-23 07:59:18,"Concept ACK\n\nThis was discussed in yesterday's meeting: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2020/bitcoin-core-dev.2020-10-22-18.59.log.html#l-122\n\nCurrent status (please correct me if I'm wrong and I'll update):\n\nConcept ACKs (10): @achow101, @laanwj, @practicalswift, @hebasto, @emzy, @michaelfolkson, @JeremyRubin, @MarcoFalke, @jnewbery, @sipa\nIndifferent (2): @fjahr,",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715120083,715120083,
kristapsk,2020-10-24 03:51:55,I tend to agree with @luke-jr here.,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715668393,715668393,
promag,2020-10-24 07:48:44,"Concept ACK. No strong opinion if it should be this release.\n\nIt makes sense to me because versions like 0.19.0.1 wouldn't exist.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715876225,715876225,
practicalswift,2020-10-24 08:40:23,"@kristapsk \n\n> I tend to agree with @luke-jr here.\n\nDo you mean in the NACK sense (""don't drop the leading zero""), or in the use calendar version sense (""20.11"" would be November 2020)? :)",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715882170,715882170,
luke-jr,2020-10-24 13:33:43,">It makes sense to me because versions like 0.19.0.1 wouldn't exist.\n\n0.19.0.1 is fundamentally different from typical bugfix releases, which are normally using the 3rd int.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715915825,715915825,
promag,2020-10-24 13:51:39,"@luke-jr fundamentally different? At the time, if it was 19.0.0, we would just tag 19.0.1, or am I wrong?",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715918241,715918241,
luke-jr,2020-10-24 14:42:00,"@promag Anything is possible with such hypotheticals. If we had 19.0.0, we should never have 19.1.0 because we don't do minor feature releases...",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715924702,715924702,
luke-jr,2020-10-24 14:42:17,"(Hmm, unless we decide softforks count as minor features?)",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-715924735,715924735,
theStack,2020-10-25 11:56:52,"Is there any strong fundamental long-term drawback on the calendar versioning, i.e. yy.mm.bugfixes (as suggested by JeremyRubin, luke-jr), other than ""dropping the zero is simpler""? If not, I'd prefer the calendar versioning as well, it's just nice that you can immediately deduce when a client/node has been last updated by looking at the version, w/o having to look up the version history.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-716135956,716135956,
luke-jr,2020-10-25 13:56:02,"@theStack Calendar versions don't do that... 2020.11.5 may very well have been released in 2022 and up to date.\n",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-716152444,716152444,
theStack,2020-10-25 15:11:32,"> @theStack Calendar versions don't do that... 2020.11.5 may very well have been released in 2022 and up to date.\n\nTrue, that doesn't work with bugfix releases (obviously), but at least it gives a lower bound in the sense of ""not older than"". I'd still not consider a node ""up to date"" if it has the latest bugfixes but is based on a years old feature set...",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-716163612,716163612,
achow101,2020-10-25 16:30:51,"> Is there any strong fundamental long-term drawback on the calendar versioning, i.e. yy.mm.bugfixes (as suggested by JeremyRubin, luke-jr), other than ""dropping the zero is simpler""? If not, I'd prefer the calendar versioning as well, it's just nice that you can immediately deduce when a client/node has been last updated by looking at the version, w/o having to look up the version history.\n\nI",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-716174601,716174601,
kristapsk,2020-10-26 22:25:34,"> @kristapsk\n> \n> > I tend to agree with @luke-jr here.\n> \n> Do you mean in the NACK sense (""don't drop the leading zero""), or in the use calendar version sense (""20.11"" would be November 2020)? :)\n\nNACK. I don't see a problem with leading zero.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-716857439,716857439,
sipa,2020-10-26 22:30:51,"Concept ACK.\n\nI see this more as making the versioning scheme reflect reality than anything else. We already call our 0.X releases ""major"" and 0.X.Y releases ""minor"", so the 0 doesn't seem to convey any information whatsoever.\n\nI'm not opposed to a date-based YY.MM.minor scheme, though my personal preference is just dropping the zero.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-716859358,716859358,
fanquake,2020-10-27 07:45:24,"Concept ACK\n\n> I'm not opposed to a date-based YY.MM.minor scheme, though my personal preference is just dropping the zero.\n\nFWIW I am opposed to a date-based scheme. Let's just drop the 0 and get this over with. ",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-717053478,717053478,
ajtowns,2020-10-29 05:07:41,"Concept ACK. I'd also mildly prefer year based, but just dropping the zero is certainly simplest. Don't see a practical benefit to putting consensus changes (particularly versus standardness changes) into the version.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-718362699,718362699,
jnewbery,2020-11-20 12:00:56,Code review ACK 8f7b930475,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-731129032,731129032,
MarcoFalke,2020-11-20 14:41:02,"review ACK 8f7b93047581c67f2133cdb8c7845471de66c30f ðŸŽ»\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK 8f7b93047581c67f2133cdb8c7845471de66c30f ðŸŽ»\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhEvQv/XEWpw+MGd8t2Z0NBKwh4VaA481Jue+XJxqO3",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-731209197,731209197,
MarcoFalke,2020-11-20 14:45:09,(also tested that `CLIENT_VERSION` is unchanged),https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-731211416,731211416,
kallewoof,2020-11-27 04:44:43,"Fixes the closed-since-April #9653. Not sure what changed, but I'm happy about the decision obviously.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-734641600,734641600,
MarcoFalke,2020-11-27 07:58:56,"I wouldn't say anything changed. When it comes to user experience, p2p features, bugfixes, hardening, testing improvements, and literally everything else, the leading 0 in the version is an insignificant stylistic choice. We have enough ""real"" issues so that tracking issues for stylistic questions are probably eating away resources from more important topics ( https://github.com/bitcoin/bitcoin/is",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-734699602,734699602,
whitslack,2020-11-29 09:14:38,I'm surprised nobody mentioned the obvious implication here: **Bitcoin Core is now officially out of beta!** ðŸš€ ,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-735364791,735364791,
sipa,2020-11-29 09:21:04,"It hasn't had a ""beta"" label since 2014 (see #4221), and even then it was already hardly applicable.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-735365387,735365387,
whitslack,2020-11-29 09:25:39,"From #4221:\n\n> This is not to say that the system is mature now, suddenly.\n\nSo are we **now** saying that the system is mature? ðŸ˜„  Typically software projects use version numbers less than 1.0 to denote that their software is not yet production-ready. Advancing the version number to something greater than 1.0 sends the signal that the software is now ready for prime time.",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-735365818,735365818,
sipa,2020-11-29 09:31:48,"And that's exactly what we wanted to avoid, by not going to 1.0, and instead just dropping the zero. We have for years been calling the X in 0.X.Y the major release number. I don't know what mature means, but Bitcoin Core has had a release process with test procedures, multiple release candidates, goals of compatibility, ... for a better part of a decade now.\n\nThere is no dramatic change here, n",https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-735366478,735366478,
davidlj95,2021-11-15 18:45:31,Guess we'll need to update https://bitcoincore.org/en/lifecycle/ now that `22.0` is in place,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-969208918,969208918,
prayank23,2021-11-15 19:15:16,@davidlj95 Yes I think it can be updated. Maybe try opening a issue/pull-request in https://github.com/bitcoin-core/bitcoincore.org/,https://github.com/bitcoin/bitcoin/pull/20223#issuecomment-969233999,969233999,
