[
  {
    "sha": "8b8ba3f50d1a932af3de2bacd5322925414e6b17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjhiYTNmNTBkMWE5MzJhZjNkZTJiYWNkNTMyMjkyNTQxNGU2YjE3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-12-28T18:58:20Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-04-12T22:25:17Z"
      },
      "message": "Document limitations of CCoinsView::Cursor implementations",
      "tree": {
        "sha": "1a186b0c900d5b13403dbde2d90de87ed6ee5d20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a186b0c900d5b13403dbde2d90de87ed6ee5d20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b8ba3f50d1a932af3de2bacd5322925414e6b17",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8ba3f50d1a932af3de2bacd5322925414e6b17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b8ba3f50d1a932af3de2bacd5322925414e6b17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8ba3f50d1a932af3de2bacd5322925414e6b17/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37f236acc6de08745118ac6cb4268bb5206e67c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37f236acc6de08745118ac6cb4268bb5206e67c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37f236acc6de08745118ac6cb4268bb5206e67c6"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e2c11568eb74bf3fb1a8efbf536a78d47b9009c7",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b8ba3f50d1a932af3de2bacd5322925414e6b17/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b8ba3f50d1a932af3de2bacd5322925414e6b17/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=8b8ba3f50d1a932af3de2bacd5322925414e6b17",
        "patch": "@@ -40,7 +40,9 @@ static const int64_t nMaxTxIndexCache = 1024;\n //! Max memory allocated to coin DB specific cache (MiB)\n static const int64_t nMaxCoinsDBCache = 8;\n \n-/** CCoinsView backed by the coin database (chainstate/) */\n+/** CCoinsView backed by the coin database (chainstate/)\n+ * Cursor requires FlushStateToDisk for consistency.\n+ */\n class CCoinsViewDB final : public CCoinsView\n {\n protected:"
      },
      {
        "sha": "7b562970b446ed5465c49ba8f50b2a5f117b0cc0",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b8ba3f50d1a932af3de2bacd5322925414e6b17/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b8ba3f50d1a932af3de2bacd5322925414e6b17/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=8b8ba3f50d1a932af3de2bacd5322925414e6b17",
        "patch": "@@ -749,6 +749,9 @@ class CTxMemPool\n  * It also allows you to sign a double-spend directly in\n  * signrawtransactionwithkey and signrawtransactionwithwallet,\n  * as long as the conflicting transaction is not yet confirmed.\n+ *\n+ * Its Cursor also doesn't work. In general, it is broken as a CCoinsView\n+ * implementation outside of a few use cases.\n  */\n class CCoinsViewMemPool : public CCoinsViewBacked\n {"
      }
    ]
  },
  {
    "sha": "0d14432974ff9130d46736326022fee81cdd39d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDE0NDMyOTc0ZmY5MTMwZDQ2NzM2MzI2MDIyZmVlODFjZGQzOWQz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-11-13T19:46:45Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-04-12T22:25:17Z"
      },
      "message": "CTxMemPool::FindScriptPubKey to search unconfirmed UTXOs",
      "tree": {
        "sha": "bb0555df1d163fa1a9fcf2d20731d4b9c939a91b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb0555df1d163fa1a9fcf2d20731d4b9c939a91b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d14432974ff9130d46736326022fee81cdd39d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d14432974ff9130d46736326022fee81cdd39d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d14432974ff9130d46736326022fee81cdd39d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d14432974ff9130d46736326022fee81cdd39d3/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b8ba3f50d1a932af3de2bacd5322925414e6b17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8ba3f50d1a932af3de2bacd5322925414e6b17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b8ba3f50d1a932af3de2bacd5322925414e6b17"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f0e0662db2f5bf5a324499aa3386a63fad3b16cd",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d14432974ff9130d46736326022fee81cdd39d3/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d14432974ff9130d46736326022fee81cdd39d3/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=0d14432974ff9130d46736326022fee81cdd39d3",
        "patch": "@@ -777,6 +777,20 @@ void CTxMemPool::queryHashes(std::vector<uint256>& vtxid)\n     }\n }\n \n+void CTxMemPool::FindScriptPubKey(const std::set<CScript>& needles, std::map<COutPoint, Coin>& out_results) {\n+    LOCK(cs);\n+    for (const CTxMemPoolEntry& entry : mapTx) {\n+        const CTransaction& tx = entry.GetTx();\n+        const uint256& hash = tx.GetHash();\n+        for (size_t txo_index = tx.vout.size(); txo_index-- > 0; ) {\n+            const CTxOut& txo = tx.vout[txo_index];\n+            if (needles.count(txo.scriptPubKey)) {\n+                out_results.emplace(COutPoint(hash, txo_index), Coin(txo, MEMPOOL_HEIGHT, false));\n+            }\n+        }\n+    }\n+}\n+\n static TxMempoolInfo GetInfo(CTxMemPool::indexed_transaction_set::const_iterator it) {\n     return TxMempoolInfo{it->GetSharedTx(), it->GetTime(), CFeeRate(it->GetFee(), it->GetTxSize()), it->GetModifiedFee() - it->GetFee()};\n }"
      },
      {
        "sha": "7b8a6bc64c7bb92ef2abd1a6d357ce7de2887354",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d14432974ff9130d46736326022fee81cdd39d3/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d14432974ff9130d46736326022fee81cdd39d3/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=0d14432974ff9130d46736326022fee81cdd39d3",
        "patch": "@@ -30,6 +30,7 @@\n \n class CBlockIndex;\n extern CCriticalSection cs_main;\n+class CScript;\n \n /** Fake height value used in Coin to signify they are only in the memory pool (since 0.8) */\n static const uint32_t MEMPOOL_HEIGHT = 0x7FFFFFFF;\n@@ -694,6 +695,8 @@ class CTxMemPool\n     TxMempoolInfo info(const uint256& hash) const;\n     std::vector<TxMempoolInfo> infoAll() const;\n \n+    void FindScriptPubKey(const std::set<CScript>& needles, std::map<COutPoint, Coin>& out_results);\n+\n     size_t DynamicMemoryUsage() const;\n \n     boost::signals2::signal<void (CTransactionRef)> NotifyEntryAdded;"
      }
    ]
  },
  {
    "sha": "7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzRlNWU2MjhjNzgwNDlhMWEwMWU1Yzc2MTViNzhkYzE4YmRmNWMy",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-11-13T22:05:20Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-04-25T21:12:56Z"
      },
      "message": "Wallet/RPC: sweepprivkeys method to scan UTXO set and send to local wallet",
      "tree": {
        "sha": "60231b530eb304a15e1f1ecd6c21331752adeaa7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60231b530eb304a15e1f1ecd6c21331752adeaa7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d14432974ff9130d46736326022fee81cdd39d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d14432974ff9130d46736326022fee81cdd39d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d14432974ff9130d46736326022fee81cdd39d3"
      }
    ],
    "stats": {
      "total": 182,
      "additions": 182,
      "deletions": 0
    },
    "files": [
      {
        "sha": "61d084fe06270d857ed029145ee1216af67edd95",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
        "patch": "@@ -70,6 +70,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"sendmany\", 6 , \"conf_target\" },\n     { \"deriveaddresses\", 1, \"range\" },\n     { \"scantxoutset\", 1, \"scanobjects\" },\n+    { \"sweepprivkeys\", 0, \"options\" },\n     { \"addmultisigaddress\", 0, \"nrequired\" },\n     { \"addmultisigaddress\", 1, \"keys\" },\n     { \"createmultisig\", 0, \"nrequired\" },"
      },
      {
        "sha": "41707995d895b3c208b1bb91bf370f95581130a7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
        "patch": "@@ -27,11 +27,13 @@\n #include <script/sign.h>\n #include <shutdown.h>\n #include <timedata.h>\n+#include <txdb.h>\n #include <util/bip32.h>\n #include <util/system.h>\n #include <util/moneystr.h>\n #include <wallet/coincontrol.h>\n #include <wallet/feebumper.h>\n+#include <wallet/fees.h>\n #include <wallet/psbtwallet.h>\n #include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n@@ -957,6 +959,184 @@ static UniValue sendmany(const JSONRPCRequest& request)\n     return tx->GetHash().GetHex();\n }\n \n+// defined in rpc/blockchain.cpp\n+bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>& should_abort, int64_t& count, CCoinsViewCursor* cursor, const std::set<CScript>& needles, std::map<COutPoint, Coin>& out_results);\n+\n+static UniValue sweepprivkeys(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            RPCHelpMan{\"sweepprivkeys\",\n+                \"\\nSends bitcoins controlled by private key to specified destinations.\\n\",\n+                {\n+                    {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::NO, \"\",\n+                        {\n+                            {\"privkeys\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of WIF private key(s)\",\n+                                {\n+                                    {\"privkey\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                                },\n+                                },\n+\n+                            {\"label\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Label for received bitcoins\"},\n+                        },\n+                        \"options\"},\n+                },\n+                RPCResults{},\n+                RPCExamples{\"\"},\n+            }.ToString());\n+    }\n+\n+    // NOTE: It isn't safe to sweep-and-send in a single action, since this would leave the send missing from the transaction history\n+\n+    RPCTypeCheck(request.params, {UniValue::VOBJ});\n+\n+    // Parse options\n+    std::set<CScript> needles;\n+    CCoinControl coin_control;\n+    CBasicKeyStore tempKeystore;\n+    CMutableTransaction tx;\n+    std::string label;\n+    CAmount total_in = 0;\n+    for (const std::string& optname : request.params[0].getKeys()) {\n+        const UniValue& optval = request.params[0][optname];\n+        if (optname == \"privkeys\") {\n+            const UniValue& privkeys_a = optval.get_array();\n+            for (size_t privkey_i = 0; privkey_i < privkeys_a.size(); ++privkey_i) {\n+                const UniValue& privkey_wif = privkeys_a[privkey_i];\n+                std::string wif_secret = privkey_wif.get_str();\n+                CKey key = DecodeSecret(wif_secret);\n+                if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+                CPubKey pubkey = key.GetPubKey();\n+                assert(key.VerifyPubKey(pubkey));\n+\n+                tempKeystore.AddKey(key);\n+                CKeyID address = pubkey.GetID();\n+                CScript script = GetScriptForDestination(address);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+                script = GetScriptForRawPubKey(pubkey);\n+                if (!script.empty()) {\n+                    needles.insert(script);\n+                }\n+            }\n+        } else if (optname == \"label\") {\n+            label = LabelFromValue(optval.get_str());\n+        } else {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unrecognised option '%s'\", optname));\n+        }\n+    }\n+\n+    // Ensure keypool is filled if possible\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+    }\n+\n+    // Reserve the key we will be using\n+    CReserveKey reservekey(pwallet);\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+    }\n+\n+    // Scan UTXO set for inputs\n+    std::vector<CTxOut> input_txos;\n+    {\n+        // Collect all possible inputs\n+        std::map<COutPoint, Coin> coins;\n+        {\n+            std::unique_ptr<CCoinsViewCursor> pcursor;\n+            {\n+                LOCK(cs_main);\n+                mempool.FindScriptPubKey(needles, coins);\n+                FlushStateToDisk();\n+                pcursor = std::unique_ptr<CCoinsViewCursor>(pcoinsdbview->Cursor());\n+                assert(pcursor);\n+            }\n+            std::atomic<int> scan_progress;\n+            const std::atomic<bool> should_abort{false};\n+            int64_t count;\n+            if (!FindScriptPubKey(scan_progress, should_abort, count, pcursor.get(), needles, coins)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"UTXO FindScriptPubKey failed\");\n+            }\n+        }\n+\n+        // Add them as inputs to the transaction, and count the total value\n+        for (auto& it : coins) {\n+            const COutPoint& outpoint = it.first;\n+            const Coin& coin = it.second;\n+            const CTxOut& txo = coin.out;\n+            tx.vin.emplace_back(outpoint.hash, outpoint.n);\n+            input_txos.push_back(txo);\n+            total_in += txo.nValue;\n+        }\n+    }\n+\n+    if (total_in == 0) {\n+        throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"No value to sweep\");\n+    }\n+\n+    CKeyID keyID = pubkey.GetID();\n+\n+    tx.vout.emplace_back(total_in, GetScriptForDestination(keyID));\n+\n+    while (true) {\n+        if (IsDust(tx.vout[0], ::minRelayTxFee)) {\n+            throw JSONRPCError(RPC_VERIFY_REJECTED, \"Swept value would be dust\");\n+        }\n+        for (size_t input_index = 0; input_index < tx.vin.size(); ++input_index) {\n+            if (!SignSignature(tempKeystore, input_txos[input_index].scriptPubKey, tx, input_index, input_txos[input_index].nValue, SIGHASH_ALL)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Failed to sign\");\n+            }\n+        }\n+        int64_t tx_vsize = GetVirtualTransactionSize(CTransaction(tx));\n+        CAmount fee_needed = GetMinimumFee(*wallet, tx_vsize, coin_control, ::mempool, ::feeEstimator, nullptr /* FeeCalculation */);\n+        const CAmount total_out = tx.vout[0].nValue;\n+        if (fee_needed <= total_in - total_out) {\n+            break;\n+        }\n+        tx.vout[0].nValue = total_in - fee_needed;\n+    }\n+\n+    CTransactionRef final_tx(MakeTransactionRef(std::move(tx)));\n+    pwallet->SetAddressBook(keyID, label, \"receive\");\n+\n+    CValidationState state;\n+    bool rv;\n+    {\n+        LOCK(cs_main);\n+        rv = AcceptToMemoryPool(mempool, state, final_tx, nullptr /* fMissingInputs */, nullptr /* plTxnReplaced */, false /* bypass_limits */, maxTxFee /* nAbsurdFee */);\n+    }\n+    if (!rv) {\n+        pwallet->DelAddressBook(keyID);\n+        if (state.IsInvalid()) {\n+            throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n+        } else {\n+            throw JSONRPCError(RPC_TRANSACTION_ERROR, state.GetRejectReason());\n+        }\n+    }\n+    reservekey.KeepKey();\n+\n+    CInv inv(MSG_TX, final_tx->GetHash());\n+    g_connman->ForEachNode([&inv](CNode* pnode)\n+    {\n+        pnode->PushInventory(inv);\n+    });\n+\n+    return final_tx->GetHash().GetHex();\n+}\n+\n static UniValue addmultisigaddress(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n@@ -4201,6 +4381,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"rescanblockchain\",                 &rescanblockchain,              {\"start_height\", \"stop_height\"} },\n     { \"wallet\",             \"sendmany\",                         &sendmany,                      {\"dummy\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n     { \"wallet\",             \"sendtoaddress\",                    &sendtoaddress,                 {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { \"wallet\",             \"sweepprivkeys\",                    &sweepprivkeys,                 {\"options\"} },\n     { \"wallet\",             \"sethdseed\",                        &sethdseed,                     {\"newkeypool\",\"seed\"} },\n     { \"wallet\",             \"setlabel\",                         &setlabel,                      {\"address\",\"label\"} },\n     { \"wallet\",             \"settxfee\",                         &settxfee,                      {\"amount\"} },"
      }
    ]
  },
  {
    "sha": "799abbbb483f0f41398faab8711f028b0e0001a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTlhYmJiYjQ4M2YwZjQxMzk4ZmFhYjg3MTFmMDI4YjBlMDAwMWEx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-12-29T13:22:03Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-04-25T21:12:56Z"
      },
      "message": "GUI/RPCConsole: Include sweepprivkeys in history sensitive-command filter",
      "tree": {
        "sha": "bd0866ba80fa51742458759b2fc8c4e3d800b630",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd0866ba80fa51742458759b2fc8c4e3d800b630"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/799abbbb483f0f41398faab8711f028b0e0001a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/799abbbb483f0f41398faab8711f028b0e0001a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/799abbbb483f0f41398faab8711f028b0e0001a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/799abbbb483f0f41398faab8711f028b0e0001a1/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c4e5e628c78049a1a01e5c7615b78dc18bdf5c2"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6f840030c4e51d2ac9c70f75dfe9357fb05169cc",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/799abbbb483f0f41398faab8711f028b0e0001a1/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/799abbbb483f0f41398faab8711f028b0e0001a1/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=799abbbb483f0f41398faab8711f028b0e0001a1",
        "patch": "@@ -71,6 +71,7 @@ const QStringList historyFilter = QStringList()\n     << \"signmessagewithprivkey\"\n     << \"signrawtransaction\"\n     << \"signrawtransactionwithkey\"\n+    << \"sweepprivkeys\"\n     << \"walletpassphrase\"\n     << \"walletpassphrasechange\"\n     << \"encryptwallet\";"
      }
    ]
  },
  {
    "sha": "f8ff31140469b9716dc4c009a1d896b806758b6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGZmMzExNDA0NjliOTcxNmRjNGMwMDlhMWQ4OTZiODA2NzU4YjZk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-08-19T03:54:38Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-04-25T21:12:56Z"
      },
      "message": "QA: Functional test for sweepprivkeys",
      "tree": {
        "sha": "68c9fda8ab519f5920092e1de52533104a3a0989",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68c9fda8ab519f5920092e1de52533104a3a0989"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8ff31140469b9716dc4c009a1d896b806758b6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8ff31140469b9716dc4c009a1d896b806758b6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8ff31140469b9716dc4c009a1d896b806758b6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8ff31140469b9716dc4c009a1d896b806758b6d/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "799abbbb483f0f41398faab8711f028b0e0001a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/799abbbb483f0f41398faab8711f028b0e0001a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/799abbbb483f0f41398faab8711f028b0e0001a1"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 66,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8636b9d62e0614cff3971b1bff0f5ab479fced77",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8ff31140469b9716dc4c009a1d896b806758b6d/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8ff31140469b9716dc4c009a1d896b806758b6d/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=f8ff31140469b9716dc4c009a1d896b806758b6d",
        "patch": "@@ -105,6 +105,7 @@\n     'interface_zmq.py',\n     'interface_bitcoin_cli.py',\n     'mempool_resurrect.py',\n+    'wallet_sweepprivkeys.py',\n     'wallet_txn_doublespend.py --mineblock',\n     'tool_wallet.py',\n     'wallet_txn_clone.py',"
      },
      {
        "sha": "7b2504c57c7ec8570f49a68bde2dcf30d5724159",
        "filename": "test/functional/wallet_sweepprivkeys.py",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8ff31140469b9716dc4c009a1d896b806758b6d/test/functional/wallet_sweepprivkeys.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8ff31140469b9716dc4c009a1d896b806758b6d/test/functional/wallet_sweepprivkeys.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_sweepprivkeys.py?ref=f8ff31140469b9716dc4c009a1d896b806758b6d",
        "patch": "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the sweepprivkeys RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, assert_fee_amount\n+\n+class SweepPrivKeysTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def check_balance(self, delta, txid):\n+        node = self.nodes[0]\n+        new_balance = node.getbalance('*', 0)\n+        balance_change = new_balance - self.balance\n+        actual_fee = delta - balance_change\n+        tx_vsize = node.getrawtransaction(txid, True)['vsize']\n+        assert_fee_amount(actual_fee, tx_vsize, self.tx_feerate)\n+        self.balance = new_balance\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        miner = self.nodes[1]\n+\n+        keys = (\n+            ('mkckmmfVv89sW1HUjyRuydGhwFmSaYtRvG', '92YkaycAxLPUqbbV78V9nNngKLnyVd9T8uZuZAzQnc26dJSP4fm'),\n+            ('mw8s1FS2Vr7GwQF8bnDVUQHQZq5qWqz5kq', '93VijJgAYnVUGXAfxYhbMHVGVwQUEXK1YnPvcCod3x1RLbzUhXe'),\n+        )\n+\n+        # This test is not meant to test fee estimation and we'd like\n+        # to be sure all txs are sent at a consistent desired feerate\n+        self.tx_feerate = self.nodes[0].getnetworkinfo()['relayfee'] * 2\n+        node.settxfee(self.tx_feerate)\n+\n+        miner.generate(120)\n+        self.sync_all()\n+        self.balance = node.getbalance('*', 0)\n+\n+        txid = node.sendtoaddress(keys[0][0], 10)\n+        self.check_balance(-10, txid)\n+\n+        # Sweep from mempool\n+        txid = node.sweepprivkeys({'privkeys': (keys[0][1],), 'label': 'test 1'})\n+        assert_equal(node.listtransactions()[-1]['label'], 'test 1')\n+        self.check_balance(10, txid)\n+\n+        txid = node.sendtoaddress(keys[1][0], 5)\n+        self.check_balance(-5, txid)\n+        self.sync_all()\n+        miner.generate(4)\n+        self.sync_all()\n+        assert_equal(self.balance, node.getbalance('*', 1))\n+\n+        # Sweep from blockchain\n+        txid = node.sweepprivkeys({'privkeys': (keys[1][1],), 'label': 'test 2'})\n+        assert_equal(node.listtransactions()[-1]['label'], 'test 2')\n+        self.check_balance(5, txid)\n+\n+if __name__ == '__main__':\n+    SweepPrivKeysTest().main()"
      }
    ]
  },
  {
    "sha": "e30d4b55626d48cee8a871d809d70cb57677e4c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzBkNGI1NTYyNmQ0OGNlZThhODcxZDgwOWQ3MGNiNTc2NzdlNGM1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-04-29T03:38:23Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-04-30T04:26:48Z"
      },
      "message": "RPC/Wallet: Use BroadcastTransaction for sweepprivkeys to ensure wallet is synced before we return",
      "tree": {
        "sha": "cd14bbad465631fd4f0ca805b6069a8ab5cbde85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd14bbad465631fd4f0ca805b6069a8ab5cbde85"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e30d4b55626d48cee8a871d809d70cb57677e4c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e30d4b55626d48cee8a871d809d70cb57677e4c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e30d4b55626d48cee8a871d809d70cb57677e4c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e30d4b55626d48cee8a871d809d70cb57677e4c5/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8ff31140469b9716dc4c009a1d896b806758b6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8ff31140469b9716dc4c009a1d896b806758b6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8ff31140469b9716dc4c009a1d896b806758b6d"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 7,
      "deletions": 19
    },
    "files": [
      {
        "sha": "8b4dc8b78aa58cc472331e49ba1f68835e848491",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 19,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e30d4b55626d48cee8a871d809d70cb57677e4c5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e30d4b55626d48cee8a871d809d70cb57677e4c5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e30d4b55626d48cee8a871d809d70cb57677e4c5",
        "patch": "@@ -1112,29 +1112,17 @@ static UniValue sweepprivkeys(const JSONRPCRequest& request)\n     CTransactionRef final_tx(MakeTransactionRef(std::move(tx)));\n     pwallet->SetAddressBook(keyID, label, \"receive\");\n \n-    CValidationState state;\n-    bool rv;\n-    {\n-        LOCK(cs_main);\n-        rv = AcceptToMemoryPool(mempool, state, final_tx, nullptr /* fMissingInputs */, nullptr /* plTxnReplaced */, false /* bypass_limits */, maxTxFee /* nAbsurdFee */);\n-    }\n-    if (!rv) {\n+    uint256 txid;\n+    std::string err_string;\n+    const TransactionError err = BroadcastTransaction(final_tx, txid, err_string, ::maxTxFee);\n+    if (TransactionError::OK != err) {\n         pwallet->DelAddressBook(keyID);\n-        if (state.IsInvalid()) {\n-            throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n-        } else {\n-            throw JSONRPCError(RPC_TRANSACTION_ERROR, state.GetRejectReason());\n-        }\n+        throw JSONRPCTransactionError(err, err_string);\n     }\n-    reservekey.KeepKey();\n \n-    CInv inv(MSG_TX, final_tx->GetHash());\n-    g_connman->ForEachNode([&inv](CNode* pnode)\n-    {\n-        pnode->PushInventory(inv);\n-    });\n+    reservekey.KeepKey();\n \n-    return final_tx->GetHash().GetHex();\n+    return txid.GetHex();\n }\n \n static UniValue addmultisigaddress(const JSONRPCRequest& request)"
      }
    ]
  }
]