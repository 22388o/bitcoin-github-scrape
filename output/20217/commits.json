[
  {
    "sha": "5805b8299f8f4943114de53c4dc09fc2dd9e270b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODA1YjgyOTlmOGY0OTQzMTE0ZGU1M2M0ZGMwOWZjMmRkOWUyNzBi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-10-22T09:53:22Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-09T18:09:42Z"
      },
      "message": "[net processing] Move PushNodeVersion into PeerManager",
      "tree": {
        "sha": "07963f99a53fffbfbbafb12cfe07e62c9d85cbc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07963f99a53fffbfbbafb12cfe07e62c9d85cbc0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5805b8299f8f4943114de53c4dc09fc2dd9e270b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5805b8299f8f4943114de53c4dc09fc2dd9e270b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5805b8299f8f4943114de53c4dc09fc2dd9e270b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5805b8299f8f4943114de53c4dc09fc2dd9e270b/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7212db4d2a558cf1658cd9173fa4941dcea983cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7212db4d2a558cf1658cd9173fa4941dcea983cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7212db4d2a558cf1658cd9173fa4941dcea983cc"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 33,
      "deletions": 30
    },
    "files": [
      {
        "sha": "33a851cd9beb06f42ae77031d9d23bec77b1bb95",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 30,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5805b8299f8f4943114de53c4dc09fc2dd9e270b/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5805b8299f8f4943114de53c4dc09fc2dd9e270b/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=5805b8299f8f4943114de53c4dc09fc2dd9e270b",
        "patch": "@@ -432,32 +432,6 @@ static void UpdatePreferredDownload(const CNode& node, CNodeState* state) EXCLUS\n     nPreferredDownload += state->fPreferredDownload;\n }\n \n-static void PushNodeVersion(CNode& pnode, CConnman& connman, int64_t nTime)\n-{\n-    // Note that pnode->GetLocalServices() is a reflection of the local\n-    // services we were offering when the CNode object was created for this\n-    // peer.\n-    ServiceFlags nLocalNodeServices = pnode.GetLocalServices();\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    int nNodeStartingHeight = pnode.GetMyStartingHeight();\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CAddress addrYou = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ?\n-                           addr :\n-                           CAddress(CService(), addr.nServices);\n-    CAddress addrMe = CAddress(CService(), nLocalNodeServices);\n-\n-    connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n-            nonce, strSubVersion, nNodeStartingHeight, ::g_relay_txes && pnode.m_tx_relay != nullptr));\n-\n-    if (fLogIPs) {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), addrYou.ToString(), nodeid);\n-    } else {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), nodeid);\n-    }\n-}\n-\n // Returns a bool indicating whether we requested this block.\n // Also used if a block was /not/ received and timed out or started with another peer\n static bool MarkBlockAsReceived(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n@@ -708,6 +682,32 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n \n } // namespace\n \n+void PeerManager::PushNodeVersion(CNode& pnode, int64_t nTime)\n+{\n+    // Note that pnode->GetLocalServices() is a reflection of the local\n+    // services we were offering when the CNode object was created for this\n+    // peer.\n+    ServiceFlags nLocalNodeServices = pnode.GetLocalServices();\n+    uint64_t nonce = pnode.GetLocalNonce();\n+    int nNodeStartingHeight = pnode.GetMyStartingHeight();\n+    NodeId nodeid = pnode.GetId();\n+    CAddress addr = pnode.addr;\n+\n+    CAddress addrYou = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ?\n+                           addr :\n+                           CAddress(CService(), addr.nServices);\n+    CAddress addrMe = CAddress(CService(), nLocalNodeServices);\n+\n+    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n+            nonce, strSubVersion, nNodeStartingHeight, ::g_relay_txes && pnode.m_tx_relay != nullptr));\n+\n+    if (fLogIPs) {\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), addrYou.ToString(), nodeid);\n+    } else {\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), nodeid);\n+    }\n+}\n+\n void PeerManager::AddTxAnnouncement(const CNode& node, const GenTxid& gtxid, std::chrono::microseconds current_time)\n {\n     AssertLockHeld(::cs_main); // For m_txrequest\n@@ -759,7 +759,7 @@ void PeerManager::InitializeNode(CNode *pnode) {\n         m_peer_map.emplace_hint(m_peer_map.end(), nodeid, std::move(peer));\n     }\n     if (!pnode->IsInboundConn()) {\n-        PushNodeVersion(*pnode, m_connman, GetTime());\n+        PushNodeVersion(*pnode, GetTime());\n     }\n }\n \n@@ -2312,9 +2312,9 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             SeenLocal(addrMe);\n         }\n \n-        // Be shy and don't send version until we hear\n-        if (pfrom.IsInboundConn())\n-            PushNodeVersion(pfrom, m_connman, GetAdjustedTime());\n+        // Inbound peers send us their version message when they connect.\n+        // We send our version message in response.\n+        if (pfrom.IsInboundConn()) PushNodeVersion(pfrom, GetAdjustedTime());\n \n         // Change version\n         const int greatest_common_version = std::min(nVersion, PROTOCOL_VERSION);"
      },
      {
        "sha": "1dedcf3b9804079c2cf7008bafb6c2e59b06583d",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5805b8299f8f4943114de53c4dc09fc2dd9e270b/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5805b8299f8f4943114de53c4dc09fc2dd9e270b/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=5805b8299f8f4943114de53c4dc09fc2dd9e270b",
        "patch": "@@ -186,6 +186,9 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n     void AddTxAnnouncement(const CNode& node, const GenTxid& gtxid, std::chrono::microseconds current_time)\n         EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    /** Send a version message to a peer */\n+    void PushNodeVersion(CNode& pnode, int64_t nTime);\n+\n     const CChainParams& m_chainparams;\n     CConnman& m_connman;\n     /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */"
      }
    ]
  },
  {
    "sha": "f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2Y2MWQwZWI5MzdhZGE1ZmQwMGQ3ZDU5MGY1ZjI5MzI1ZjdmNDE0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-10-22T09:38:10Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-09T18:10:38Z"
      },
      "message": "[net processing] Add IgnoresIncomingTxs() function to PeerManager",
      "tree": {
        "sha": "0a4c094ef6616f64002120a672e1b8653d9735c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a4c094ef6616f64002120a672e1b8653d9735c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f61d0eb937ada5fd00d7d590f5f29325f7f414/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5805b8299f8f4943114de53c4dc09fc2dd9e270b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5805b8299f8f4943114de53c4dc09fc2dd9e270b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5805b8299f8f4943114de53c4dc09fc2dd9e270b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cb34935ad181bacec9f3232cd5306136ac584b9a",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3f61d0eb937ada5fd00d7d590f5f29325f7f414/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3f61d0eb937ada5fd00d7d590f5f29325f7f414/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
        "patch": "@@ -138,6 +138,9 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n     /** Get statistics from node state */\n     bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats);\n \n+    /** Whether this node ignores txs received over p2p. */\n+    bool IgnoresIncomingTxs() {return !::g_relay_txes;};\n+\n private:\n     /** Get a shared pointer to the Peer object.\n      *  May return an empty shared_ptr if the Peer object can't be found. */"
      },
      {
        "sha": "19e717f0af6bec20d577b8d5b93bf2c7e26e607e",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3f61d0eb937ada5fd00d7d590f5f29325f7f414/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3f61d0eb937ada5fd00d7d590f5f29325f7f414/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
        "patch": "@@ -578,7 +578,9 @@ static RPCHelpMan getnetworkinfo()\n         obj.pushKV(\"localservices\", strprintf(\"%016x\", services));\n         obj.pushKV(\"localservicesnames\", GetServicesNames(services));\n     }\n-    obj.pushKV(\"localrelay\", g_relay_txes);\n+    if (node.peerman) {\n+        obj.pushKV(\"localrelay\", !node.peerman->IgnoresIncomingTxs());\n+    }\n     obj.pushKV(\"timeoffset\",    GetTimeOffset());\n     if (node.connman) {\n         obj.pushKV(\"networkactive\", node.connman->GetNetworkActive());"
      }
    ]
  },
  {
    "sha": "4d510aa055064df5a10c2cc7888baffc3e6bc0e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDUxMGFhMDU1MDY0ZGY1YTEwYzJjYzc4ODhiYWZmYzNlNmJjMGU2",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-10-22T09:39:24Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-09T18:10:38Z"
      },
      "message": "[init] Use MakeUnique<> to construct peerman",
      "tree": {
        "sha": "8509271fb786ec9ddd190df1bbae320d3563acaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8509271fb786ec9ddd190df1bbae320d3563acaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d510aa055064df5a10c2cc7888baffc3e6bc0e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d510aa055064df5a10c2cc7888baffc3e6bc0e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d510aa055064df5a10c2cc7888baffc3e6bc0e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d510aa055064df5a10c2cc7888baffc3e6bc0e6/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f61d0eb937ada5fd00d7d590f5f29325f7f414",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3f61d0eb937ada5fd00d7d590f5f29325f7f414"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3e7d539c0dcfebeef6d1c4dae2c269e463f103b4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d510aa055064df5a10c2cc7888baffc3e6bc0e6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d510aa055064df5a10c2cc7888baffc3e6bc0e6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4d510aa055064df5a10c2cc7888baffc3e6bc0e6",
        "patch": "@@ -1396,7 +1396,8 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     node.chainman = &g_chainman;\n     ChainstateManager& chainman = *Assert(node.chainman);\n \n-    node.peerman.reset(new PeerManager(chainparams, *node.connman, node.banman.get(), *node.scheduler, chainman, *node.mempool));\n+    assert(!node.peerman);\n+    node.peerman = MakeUnique<PeerManager>(chainparams, *node.connman, node.banman.get(), *node.scheduler, chainman, *node.mempool);\n     RegisterValidationInterface(node.peerman.get());\n \n     // sanitize comments per BIP-0014, format user agent and check total size"
      }
    ]
  },
  {
    "sha": "68334b39443b3cfd75b0ef815ac40074185386f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODMzNGIzOTQ0M2IzY2ZkNzViMGVmODE1YWM0MDA3NDE4NTM4NmYy",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-10-22T09:46:31Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-09T18:13:37Z"
      },
      "message": "[net processing] Add m_ignores_incoming_txs to PeerManager and use internally",
      "tree": {
        "sha": "1e5caa777021289a646481aa146c05293ac4c646",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e5caa777021289a646481aa146c05293ac4c646"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68334b39443b3cfd75b0ef815ac40074185386f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68334b39443b3cfd75b0ef815ac40074185386f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68334b39443b3cfd75b0ef815ac40074185386f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68334b39443b3cfd75b0ef815ac40074185386f2/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d510aa055064df5a10c2cc7888baffc3e6bc0e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d510aa055064df5a10c2cc7888baffc3e6bc0e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d510aa055064df5a10c2cc7888baffc3e6bc0e6"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 26,
      "deletions": 13
    },
    "files": [
      {
        "sha": "e16e72dcfe1fcabccd6174daed62ed572648857c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68334b39443b3cfd75b0ef815ac40074185386f2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68334b39443b3cfd75b0ef815ac40074185386f2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=68334b39443b3cfd75b0ef815ac40074185386f2",
        "patch": "@@ -1397,7 +1397,8 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     ChainstateManager& chainman = *Assert(node.chainman);\n \n     assert(!node.peerman);\n-    node.peerman = MakeUnique<PeerManager>(chainparams, *node.connman, node.banman.get(), *node.scheduler, chainman, *node.mempool);\n+    node.peerman = std::make_unique<PeerManager>(chainparams, *node.connman, node.banman.get(),\n+                                                 *node.scheduler, chainman, *node.mempool, !g_relay_txes);\n     RegisterValidationInterface(node.peerman.get());\n \n     // sanitize comments per BIP-0014, format user agent and check total size"
      },
      {
        "sha": "5dfca4186c4ebd20b642d7cd7cd337537a802273",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68334b39443b3cfd75b0ef815ac40074185386f2/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68334b39443b3cfd75b0ef815ac40074185386f2/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=68334b39443b3cfd75b0ef815ac40074185386f2",
        "patch": "@@ -699,7 +699,7 @@ void PeerManager::PushNodeVersion(CNode& pnode, int64_t nTime)\n     CAddress addrMe = CAddress(CService(), nLocalNodeServices);\n \n     m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n-            nonce, strSubVersion, nNodeStartingHeight, ::g_relay_txes && pnode.m_tx_relay != nullptr));\n+            nonce, strSubVersion, nNodeStartingHeight, !m_ignore_incoming_txs && pnode.m_tx_relay != nullptr));\n \n     if (fLogIPs) {\n         LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), addrYou.ToString(), nodeid);\n@@ -1124,13 +1124,15 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n }\n \n PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool)\n+                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                         bool ignore_incoming_txs)\n     : m_chainparams(chainparams),\n       m_connman(connman),\n       m_banman(banman),\n       m_chainman(chainman),\n       m_mempool(pool),\n-      m_stale_tip_check_time(0)\n+      m_stale_tip_check_time(0),\n+      m_ignore_incoming_txs(ignore_incoming_txs)\n {\n     // Initialize global variables that cannot be constructed at startup.\n     recentRejects.reset(new CRollingBloomFilter(120000, 0.000001));\n@@ -2624,7 +2626,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n         // We won't accept tx inv's if we're in blocks-only mode, or this is a\n         // block-relay-only peer\n-        bool fBlocksOnly = !g_relay_txes || (pfrom.m_tx_relay == nullptr);\n+        bool fBlocksOnly = m_ignore_incoming_txs || (pfrom.m_tx_relay == nullptr);\n \n         // Allow peers with relay permission to send data other than blocks in blocks only mode\n         if (pfrom.HasPermission(PF_RELAY)) {\n@@ -2901,7 +2903,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer\n-        if ((!g_relay_txes && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr))\n+        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr))\n         {\n             LogPrint(BCLog::NET, \"transaction sent in violation of protocol peer=%d\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;"
      },
      {
        "sha": "d5b54dae56147dfc27756009919f339c36b804b8",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68334b39443b3cfd75b0ef815ac40074185386f2/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68334b39443b3cfd75b0ef815ac40074185386f2/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=68334b39443b3cfd75b0ef815ac40074185386f2",
        "patch": "@@ -76,7 +76,8 @@ using PeerRef = std::shared_ptr<Peer>;\n class PeerManager final : public CValidationInterface, public NetEventsInterface {\n public:\n     PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool);\n+                CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                bool ignore_incoming_txs);\n \n     /**\n      * Overridden from CValidationInterface.\n@@ -139,7 +140,7 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n     bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats);\n \n     /** Whether this node ignores txs received over p2p. */\n-    bool IgnoresIncomingTxs() {return !::g_relay_txes;};\n+    bool IgnoresIncomingTxs() {return m_ignore_incoming_txs;};\n \n private:\n     /** Get a shared pointer to the Peer object.\n@@ -202,6 +203,9 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n \n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    //* Whether this node is running in blocks only mode */\n+    const bool m_ignore_incoming_txs;\n+\n     /** Protects m_peer_map */\n     mutable Mutex m_peer_mutex;\n     /**"
      },
      {
        "sha": "8f6fdd04d049bc930dc92ac90b2da34866777260",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68334b39443b3cfd75b0ef815ac40074185386f2/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68334b39443b3cfd75b0ef815ac40074185386f2/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=68334b39443b3cfd75b0ef815ac40074185386f2",
        "patch": "@@ -80,7 +80,8 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n {\n     const CChainParams& chainparams = Params();\n     auto connman = MakeUnique<CConnman>(0x1337, 0x1337);\n-    auto peerLogic = MakeUnique<PeerManager>(chainparams, *connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    auto peerLogic = std::make_unique<PeerManager>(chainparams, *connman, nullptr, *m_node.scheduler,\n+                                                   *m_node.chainman, *m_node.mempool, false);\n \n     // Mock an outbound peer\n     CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n@@ -149,7 +150,8 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\n {\n     const CChainParams& chainparams = Params();\n     auto connman = MakeUnique<CConnmanTest>(0x1337, 0x1337);\n-    auto peerLogic = MakeUnique<PeerManager>(chainparams, *connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    auto peerLogic = std::make_unique<PeerManager>(chainparams, *connman, nullptr, *m_node.scheduler,\n+                                                   *m_node.chainman, *m_node.mempool, false);\n \n     constexpr int max_outbound_full_relay = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS;\n     CConnman::Options options;\n@@ -222,7 +224,8 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n     const CChainParams& chainparams = Params();\n     auto banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     auto connman = MakeUnique<CConnman>(0x1337, 0x1337);\n-    auto peerLogic = MakeUnique<PeerManager>(chainparams, *connman, banman.get(), *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    auto peerLogic = std::make_unique<PeerManager>(chainparams, *connman, banman.get(), *m_node.scheduler,\n+                                                   *m_node.chainman, *m_node.mempool, false);\n \n     banman->ClearBanned();\n     CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n@@ -268,7 +271,8 @@ BOOST_AUTO_TEST_CASE(DoS_bantime)\n     const CChainParams& chainparams = Params();\n     auto banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     auto connman = MakeUnique<CConnman>(0x1337, 0x1337);\n-    auto peerLogic = MakeUnique<PeerManager>(chainparams, *connman, banman.get(), *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    auto peerLogic = std::make_unique<PeerManager>(chainparams, *connman, banman.get(), *m_node.scheduler,\n+                                                   *m_node.chainman, *m_node.mempool, false);\n \n     banman->ClearBanned();\n     int64_t nStartTime = GetTime();"
      },
      {
        "sha": "db8b43d039f3c062f297a612d28950eefb53462d",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68334b39443b3cfd75b0ef815ac40074185386f2/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68334b39443b3cfd75b0ef815ac40074185386f2/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=68334b39443b3cfd75b0ef815ac40074185386f2",
        "patch": "@@ -192,7 +192,9 @@ TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const\n \n     m_node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     m_node.connman = MakeUnique<CConnman>(0x1337, 0x1337); // Deterministic randomness for tests.\n-    m_node.peerman = MakeUnique<PeerManager>(chainparams, *m_node.connman, m_node.banman.get(), *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    m_node.peerman = std::make_unique<PeerManager>(chainparams, *m_node.connman, m_node.banman.get(),\n+                                                   *m_node.scheduler, *m_node.chainman, *m_node.mempool,\n+                                                   false);\n     {\n         CConnman::Options options;\n         options.m_msgproc = m_node.peerman.get();"
      }
    ]
  },
  {
    "sha": "34e33ab8592d757b3acfe812c20d235029bbc319",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGUzM2FiODU5MmQ3NTdiM2FjZmU4MTJjMjBkMjM1MDI5YmJjMzE5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-10-22T09:56:38Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-09T18:13:37Z"
      },
      "message": "Remove g_relay_txes\n\nAlso remove vestigial commend in init.cpp",
      "tree": {
        "sha": "92fe61dc4eb99ce083e4192e828fb661b1d33c16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92fe61dc4eb99ce083e4192e828fb661b1d33c16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34e33ab8592d757b3acfe812c20d235029bbc319",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34e33ab8592d757b3acfe812c20d235029bbc319",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34e33ab8592d757b3acfe812c20d235029bbc319",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34e33ab8592d757b3acfe812c20d235029bbc319/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68334b39443b3cfd75b0ef815ac40074185386f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68334b39443b3cfd75b0ef815ac40074185386f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68334b39443b3cfd75b0ef815ac40074185386f2"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "5460c9b2b00ffa8cd41c15cdf6a2ba856f3c559d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e33ab8592d757b3acfe812c20d235029bbc319/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e33ab8592d757b3acfe812c20d235029bbc319/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=34e33ab8592d757b3acfe812c20d235029bbc319",
        "patch": "@@ -1373,10 +1373,9 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     // is not yet setup and may end up being set up twice if we\n     // need to reindex later.\n \n-    // see Step 2: parameter interactions for more information about these\n     fListen = args.GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n     fDiscover = args.GetBoolArg(\"-discover\", true);\n-    g_relay_txes = !args.GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY);\n+    const bool ignores_incoming_txs{args.GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)};\n \n     assert(!node.banman);\n     node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", &uiInterface, args.GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME));\n@@ -1386,7 +1385,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     assert(!node.fee_estimator);\n     // Don't initialize fee estimation with old data if we don't relay transactions,\n     // as they would never get updated.\n-    if (g_relay_txes) node.fee_estimator = std::make_unique<CBlockPolicyEstimator>();\n+    if (!ignores_incoming_txs) node.fee_estimator = std::make_unique<CBlockPolicyEstimator>();\n \n     assert(!node.mempool);\n     int check_ratio = std::min<int>(std::max<int>(args.GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n@@ -1398,7 +1397,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n \n     assert(!node.peerman);\n     node.peerman = std::make_unique<PeerManager>(chainparams, *node.connman, node.banman.get(),\n-                                                 *node.scheduler, chainman, *node.mempool, !g_relay_txes);\n+                                                 *node.scheduler, chainman, *node.mempool, ignores_incoming_txs);\n     RegisterValidationInterface(node.peerman.get());\n \n     // sanitize comments per BIP-0014, format user agent and check total size"
      },
      {
        "sha": "d4746b476605bc60e62435df69fb2fe58b449a7d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e33ab8592d757b3acfe812c20d235029bbc319/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e33ab8592d757b3acfe812c20d235029bbc319/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=34e33ab8592d757b3acfe812c20d235029bbc319",
        "patch": "@@ -111,7 +111,6 @@ static const uint64_t RANDOMIZER_ID_ADDRCACHE = 0x1cf2e4ddd306dda9ULL; // SHA256\n //\n bool fDiscover = true;\n bool fListen = true;\n-bool g_relay_txes = !DEFAULT_BLOCKSONLY;\n RecursiveMutex cs_mapLocalHost;\n std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};"
      },
      {
        "sha": "cd3a80d29b373eaba58ab8a9c080d9ae4a051151",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e33ab8592d757b3acfe812c20d235029bbc319/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e33ab8592d757b3acfe812c20d235029bbc319/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=34e33ab8592d757b3acfe812c20d235029bbc319",
        "patch": "@@ -665,7 +665,6 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer, ServiceFlags nLocalServices)\n \n extern bool fDiscover;\n extern bool fListen;\n-extern bool g_relay_txes;\n \n /** Subversion as sent to the P2P network in `version` messages */\n extern std::string strSubVersion;"
      }
    ]
  }
]