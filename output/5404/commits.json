[
  {
    "sha": "67b2d819cdf6181e7f016e5366ce7479830893bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2N2IyZDgxOWNkZjYxODFlN2YwMTZlNTM2NmNlNzQ3OTgzMDg5M2Jk",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2014-11-25T17:54:36Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2014-12-02T07:40:08Z"
      },
      "message": "Fix small typos.",
      "tree": {
        "sha": "baa051f4394772bd9fbcb306e5098ad5dc74b4e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/baa051f4394772bd9fbcb306e5098ad5dc74b4e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67b2d819cdf6181e7f016e5366ce7479830893bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67b2d819cdf6181e7f016e5366ce7479830893bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/67b2d819cdf6181e7f016e5366ce7479830893bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67b2d819cdf6181e7f016e5366ce7479830893bd/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f0877f8b6200dcf6df12df5e69d498d365f81f8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0877f8b6200dcf6df12df5e69d498d365f81f8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0877f8b6200dcf6df12df5e69d498d365f81f8b"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "39b6984aa5f6f4a56cd41143b36d7bf999076a24",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67b2d819cdf6181e7f016e5366ce7479830893bd/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67b2d819cdf6181e7f016e5366ce7479830893bd/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=67b2d819cdf6181e7f016e5366ce7479830893bd",
        "patch": "@@ -95,7 +95,7 @@ enum BlockStatus {\n class CBlockIndex\n {\n public:\n-    //! pointer to the hash of the block, if any. memory is owned by this CBlockIndex\n+    //! pointer to the hash of the block, if any. Memory is owned by this CBlockIndex\n     const uint256* phashBlock;\n \n     //! pointer to the index of the predecessor of this block"
      },
      {
        "sha": "81c019056bb1a7966d8638f8e59af9e9f0392b44",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67b2d819cdf6181e7f016e5366ce7479830893bd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67b2d819cdf6181e7f016e5366ce7479830893bd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=67b2d819cdf6181e7f016e5366ce7479830893bd",
        "patch": "@@ -1010,7 +1010,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                                       hash.ToString(), nFees, txMinFee),\n                              REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n \n-        // Continuously rate-limit free (really, very-low-fee)transactions\n+        // Continuously rate-limit free (really, very-low-fee) transactions\n         // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n         // be annoying or make others' transactions take longer to confirm.\n         if (fLimitFree && nFees < ::minRelayTxFee.GetFee(nSize))\n@@ -1035,7 +1035,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         }\n \n         if (fRejectInsaneFee && nFees > ::minRelayTxFee.GetFee(nSize) * 10000)\n-            return error(\"AcceptToMemoryPool: : insane fees %s, %d > %d\",\n+            return error(\"AcceptToMemoryPool : insane fees %s, %d > %d\",\n                          hash.ToString(),\n                          nFees, ::minRelayTxFee.GetFee(nSize) * 10000);\n \n@@ -3168,7 +3168,7 @@ bool InitBlockIndex() {\n                 return error(\"LoadBlockIndex() : genesis block not accepted\");\n             if (!ActivateBestChain(state, &block))\n                 return error(\"LoadBlockIndex() : genesis block cannot be activated\");\n-            // Force a chainstate write so that when we VerifyDB in a moment, it doesnt check stale data\n+            // Force a chainstate write so that when we VerifyDB in a moment, it doesn't check stale data\n             return FlushStateToDisk(state, FLUSH_STATE_ALWAYS);\n         } catch(std::runtime_error &e) {\n             return error(\"LoadBlockIndex() : failed to initialize block database: %s\", e.what());"
      },
      {
        "sha": "4a0b4e276d096c0c359ba5fadd66fa478ba13af8",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67b2d819cdf6181e7f016e5366ce7479830893bd/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67b2d819cdf6181e7f016e5366ce7479830893bd/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=67b2d819cdf6181e7f016e5366ce7479830893bd",
        "patch": "@@ -60,7 +60,7 @@ static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n-/** Maxiumum number of signature check operations in an IsStandard() P2SH script */\n+/** Maximum number of signature check operations in an IsStandard() P2SH script */\n static const unsigned int MAX_P2SH_SIGOPS = 15;\n /** The maximum number of sigops we're willing to relay/mine in a single tx */\n static const unsigned int MAX_TX_SIGOPS = MAX_BLOCK_SIGOPS/5;"
      },
      {
        "sha": "fac659594cef841047b872b38bd23d44fcbb2079",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67b2d819cdf6181e7f016e5366ce7479830893bd/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67b2d819cdf6181e7f016e5366ce7479830893bd/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=67b2d819cdf6181e7f016e5366ce7479830893bd",
        "patch": "@@ -240,8 +240,8 @@ class CMinerPolicyEstimator\n             }\n         }\n \n-        //After new samples are added, we have to clear the sorted lists,\n-        //so they'll be resorted the next time someone asks for an estimate\n+        // After new samples are added, we have to clear the sorted lists,\n+        // so they'll be resorted the next time someone asks for an estimate\n         sortedFeeSamples.clear();\n         sortedPrioritySamples.clear();\n "
      },
      {
        "sha": "9ac886f815721f0cb975721316616196f6e24b82",
        "filename": "src/uint256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67b2d819cdf6181e7f016e5366ce7479830893bd/src/uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67b2d819cdf6181e7f016e5366ce7479830893bd/src/uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.cpp?ref=67b2d819cdf6181e7f016e5366ce7479830893bd",
        "patch": "@@ -99,7 +99,7 @@ base_uint<BITS>& base_uint<BITS>::operator/=(const base_uint& b)\n     if (div_bits > num_bits) // the result is certainly 0.\n         return *this;\n     int shift = num_bits - div_bits;\n-    div <<= shift; // shift so that div and nun align.\n+    div <<= shift; // shift so that div and num align.\n     while (shift >= 0) {\n         if (num >= div) {\n             num -= div;"
      },
      {
        "sha": "839f694850f220a15116837f1e6089d721163f55",
        "filename": "src/wallet_ismine.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67b2d819cdf6181e7f016e5366ce7479830893bd/src/wallet_ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67b2d819cdf6181e7f016e5366ce7479830893bd/src/wallet_ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet_ismine.cpp?ref=67b2d819cdf6181e7f016e5366ce7479830893bd",
        "patch": "@@ -74,7 +74,7 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n     case TX_MULTISIG:\n     {\n         // Only consider transactions \"mine\" if we own ALL the\n-        // keys involved. multi-signature transactions that are\n+        // keys involved. Multi-signature transactions that are\n         // partially owned (somebody else has a key that can spend\n         // them) enable spend-out-from-under-you attacks, especially\n         // in shared-wallet situations."
      }
    ]
  }
]