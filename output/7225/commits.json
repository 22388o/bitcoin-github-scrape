[
  {
    "sha": "dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmI4OWRjNzkzYjBmYzE5YTBkMGFjNWM0ZWYwOGNjMjc2MGIwNmJm",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-12-17T18:45:33Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-02-01T19:29:45Z"
      },
      "message": "Eliminate unnecessary call to CheckBlock\n\nProcessNewBlock would return failure early if CheckBlock failed, before\ncalling AcceptBlock.  AcceptBlock also calls CheckBlock, and upon failure\nwould update mapBlockIndex to indicate that a block was failed.  By returning\nearly in ProcessNewBlock, we were not marking blocks that fail a check in\nCheckBlock as permanently failed, and thus would continue to re-request and\nreprocess them.",
      "tree": {
        "sha": "27a83a6970ff5f7e3a8cd56f6efc49d7b622beb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27a83a6970ff5f7e3a8cd56f6efc49d7b622beb8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "196ad6913ff57cd39caf0b262267e67c5a143467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/196ad6913ff57cd39caf0b262267e67c5a143467",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/196ad6913ff57cd39caf0b262267e67c5a143467"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "01d1024b08f3b6f4a88218f7b06e6d733fa02e84",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dbb89dc793b0fc19a0d0ac5c4ef08cc2760b06bf",
        "patch": "@@ -3171,16 +3171,10 @@ static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned\n \n bool ProcessNewBlock(CValidationState& state, const CChainParams& chainparams, const CNode* pfrom, const CBlock* pblock, bool fForceProcessing, CDiskBlockPos* dbp)\n {\n-    // Preliminary checks\n-    bool checked = CheckBlock(*pblock, state);\n-\n     {\n         LOCK(cs_main);\n         bool fRequested = MarkBlockAsReceived(pblock->GetHash());\n         fRequested |= fForceProcessing;\n-        if (!checked) {\n-            return error(\"%s: CheckBlock FAILED %s\", __func__, FormatStateMessage(state));\n-        }\n \n         // Store to disk\n         CBlockIndex *pindex = NULL;"
      }
    ]
  }
]