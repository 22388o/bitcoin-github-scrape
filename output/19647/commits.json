[
  {
    "sha": "6dbd57fca9d324dd468d0ee627392bd788606bd8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGJkNTdmY2E5ZDMyNGRkNDY4ZDBlZTYyNzM5MmJkNzg4NjA2YmQ4",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T21:57:55Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:49:28Z"
      },
      "message": "refactor: Add more thread safety annotations to CTxMemPool",
      "tree": {
        "sha": "3cb281c26af6473af8a098baafcb5090f001de31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cb281c26af6473af8a098baafcb5090f001de31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMggACgkQQQEIES5+\nqB9TShAAntqtGyaXxyapTe4lVO2347kU+LJjKsKPn3qJ8B1JQpMnTC5LGRfxrNhT\nNoGRdh5Uv8BdMmk+Q9SjXYq1X5x/qUit70Vj2ZcsflxbsMMA6nNeae+uY1SJwESY\nzsyjcZCS6wt0V9WIGpxjJ+uOYj6R5EcFvB+FCZhaSzwq2eTfdj/vrTfX0eDwk/pJ\nPmKHEemtjrsPLnZLB+1pO5ZYqXUUwIfSMZzC01T+gsexU3ksD75DpH+EDXXtfvlE\nwZIFlqoKLKNNQtUvQy14C1jB6sI4I9YEXtFpndPv7Kkq8PPsrnVE9kWf+yElqtM6\nQkGvyA5y8rrxASkOYQ3M1EL+gcEK9g9QcAvx9jf7sN1n8eVGTHQmawM2AsXYMpFB\nR84LkW9IyXiZfBNTiX4+Nrs4mrKLHu5Hv0/3QIcAGDgCBh9JWt/zRjasySMYYZfK\njy/a9zG8bV6DHzLI0ic9T3/0c7GCi5i3XYrs4BoIi964Jgyff9mszA8XvgqvwThS\nLC0GPaxN/AFC918WFaxhh2OlJyToELc57XK8+S4HqNwNcK1Shtt2gTyBdvJ0jtM6\nIkemCmTuPA7ZDBF0heRvTT8y17jKZcUksQBMO0HJkt2igIj7ruCm4XlT4yzilIQt\n0cz8W5mO6dVCHzmXqOLy+X+hQBlsZwRYmShLx3K/36z7h1OP4xg=\n=mcUP\n-----END PGP SIGNATURE-----",
        "payload": "tree 3cb281c26af6473af8a098baafcb5090f001de31\nparent a78742830aa35bf57bcb0a4730977a1e5a1876bc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596405475 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596469768 +0300\n\nrefactor: Add more thread safety annotations to CTxMemPool\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbd57fca9d324dd468d0ee627392bd788606bd8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a78742830aa35bf57bcb0a4730977a1e5a1876bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a78742830aa35bf57bcb0a4730977a1e5a1876bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a78742830aa35bf57bcb0a4730977a1e5a1876bc"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 7,
      "deletions": 10
    },
    "files": [
      {
        "sha": "325e570303320b260b38ffd2754b5ae99e4ea747",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dbd57fca9d324dd468d0ee627392bd788606bd8/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dbd57fca9d324dd468d0ee627392bd788606bd8/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=6dbd57fca9d324dd468d0ee627392bd788606bd8",
        "patch": "@@ -854,7 +854,6 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n \n void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n {\n-    LOCK(cs);\n     std::map<uint256, CAmount>::const_iterator pos = mapDeltas.find(hash);\n     if (pos == mapDeltas.end())\n         return;\n@@ -864,7 +863,6 @@ void CTxMemPool::ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const\n \n void CTxMemPool::ClearPrioritisation(const uint256 hash)\n {\n-    LOCK(cs);\n     mapDeltas.erase(hash);\n }\n "
      },
      {
        "sha": "efe478cb2e3be8cabdd8fc8a4066ffc0e5b06421",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dbd57fca9d324dd468d0ee627392bd788606bd8/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dbd57fca9d324dd468d0ee627392bd788606bd8/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=6dbd57fca9d324dd468d0ee627392bd788606bd8",
        "patch": "@@ -568,8 +568,8 @@ class CTxMemPool\n     typedef std::map<txiter, TxLinks, CompareIteratorByHash> txlinksMap;\n     txlinksMap mapLinks;\n \n-    void UpdateParent(txiter entry, txiter parent, bool add);\n-    void UpdateChild(txiter entry, txiter child, bool add);\n+    void UpdateParent(txiter entry, txiter parent, bool add) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    void UpdateChild(txiter entry, txiter child, bool add) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n@@ -626,8 +626,8 @@ class CTxMemPool\n \n     /** Affect CreateNewBlock prioritisation of transactions */\n     void PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta);\n-    void ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const;\n-    void ClearPrioritisation(const uint256 hash);\n+    void ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    void ClearPrioritisation(const uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Get the transaction in the pool that spends the same prevout */\n     const CTransaction* GetConflictTx(const COutPoint& prevout) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n@@ -710,9 +710,8 @@ class CTxMemPool\n         return mapTx.size();\n     }\n \n-    uint64_t GetTotalTxSize() const\n+    uint64_t GetTotalTxSize() const EXCLUSIVE_LOCKS_REQUIRED(cs)\n     {\n-        LOCK(cs);\n         return totalTxSize;\n     }\n \n@@ -757,8 +756,8 @@ class CTxMemPool\n     }\n \n     /** Returns whether a txid is in the unbroadcast set */\n-    bool IsUnbroadcastTx(const uint256& txid) const {\n-        LOCK(cs);\n+    bool IsUnbroadcastTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n         return (m_unbroadcast_txids.count(txid) != 0);\n     }\n "
      }
    ]
  },
  {
    "sha": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzdkNGNiNTI4NjlkNTk0M2MyZjM2YjNiOGE5MWJiNjAzNDQyNzRj",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T21:58:07Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:50:39Z"
      },
      "message": "refactor: Make CTxMemPool::ClearPrioritisation() private",
      "tree": {
        "sha": "898bfafa3bad90f697556d0ba50d84e3b02ad5b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/898bfafa3bad90f697556d0ba50d84e3b02ad5b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMk8ACgkQQQEIES5+\nqB+GIg//c0ChifhyGbYHJY0NqSIgN6oXlNwJhWWi/+JJGOlWVN/ONE94l63J8eqc\nX5vcqyN73WC0xauAtKekWmpcDvkdGvqDDHuBYdMWBN5hyIeQVLt5erE7Udrkqiix\nwVetRe+pv93TARg8wmvFRxamYREJjBUr9SCBpGdr5MvDxaIg7K7Ajbzt8CeuUIc8\n+CUNIJHf3aILTgFD5GP1TheTxs8CtvK5TnW4KsnhmRLdqubD/4mMIJG3jlYR8qE5\nldP34pDHvuRrtGXKf7IXJjDwYMPQXcsz2QlOkI/ARerBXio+21tl5ZWZo0h+wvv6\nw4/9Cr7LNTmiwA7HBbvy1RjOFGMOdzGUQVtDCe4MdInqKpIwC6FIRBPHKO0c1raU\nvAGCk9frS/XQzu9LMua3Y2KxKaHiwLeDwbUG552DjmIqEtKXpnmVnWz9jWfOvzSd\nKM0V0AVrW8Q8kdq8tmSajtrth9fPNTncrAtAw1lAzQ93Rt9bfTCsdSAmDadKT0J3\nq3zXddPPrAehwx46RmK1LsP9cIiuJoypC2oWkerUp1SPEdQGuaAYyTV4UksGyUpj\nfCspP2/n51WkDgeUuJlB1X668nL8scvPd8Br9D2tNw2Oh4THP96cGWU3BVQ0vNAg\nFxb6uZTas8MGLQWfoFS9rEqo59GZjRrTuRBOSEbciCtClkP2YE4=\n=PhgI\n-----END PGP SIGNATURE-----",
        "payload": "tree 898bfafa3bad90f697556d0ba50d84e3b02ad5b2\nparent 6dbd57fca9d324dd468d0ee627392bd788606bd8\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596405487 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596469839 +0300\n\nrefactor: Make CTxMemPool::ClearPrioritisation() private\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6dbd57fca9d324dd468d0ee627392bd788606bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dbd57fca9d324dd468d0ee627392bd788606bd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbd57fca9d324dd468d0ee627392bd788606bd8"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ca51a26de7e4a38e34ad7d4c7a465bccfb57a023",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c7d4cb52869d5943c2f36b3b8a91bb60344274c/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c7d4cb52869d5943c2f36b3b8a91bb60344274c/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
        "patch": "@@ -579,6 +579,8 @@ class CTxMemPool\n      */\n     std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);\n \n+    void ClearPrioritisation(const uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n public:\n     indirectmap<COutPoint, const CTransaction*> mapNextTx GUARDED_BY(cs);\n     std::map<uint256, CAmount> mapDeltas;\n@@ -627,7 +629,6 @@ class CTxMemPool\n     /** Affect CreateNewBlock prioritisation of transactions */\n     void PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta);\n     void ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n-    void ClearPrioritisation(const uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Get the transaction in the pool that spends the same prevout */\n     const CTransaction* GetConflictTx(const COutPoint& prevout) const EXCLUSIVE_LOCKS_REQUIRED(cs);"
      }
    ]
  },
  {
    "sha": "343b93b45d468a4c747b0b5f7dd397aaf30081f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDNiOTNiNDVkNDY4YTRjNzQ3YjBiNWY3ZGQzOTdhYWYzMDA4MWYw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-02T22:17:41Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-03T15:54:32Z"
      },
      "message": "refactor: Add negative thread safety annotations to CTxMemPool",
      "tree": {
        "sha": "3339454ec7b59acbafc86fa33585fbbb20cb9509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3339454ec7b59acbafc86fa33585fbbb20cb9509"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8oMzgACgkQQQEIES5+\nqB/QhA//ROJ2lqLf4W4Bhs0U7U2lRImT3ET8aSB2Dte0yqsOIZ7BYLglM/r/WILv\nMtPQ4FsMza3okSvPQv1mZoTNyG1nNOtK++GjuTP0enhkKEy4K2ssJKZxQP9AdGlW\ndK3KYDUU0kDvJMMiANTTpa/PgZ/uyPArglJSlmca7XrCSVhWUclNCbtjU6/4Xwja\npmXxXsWWRpVG4fY2yAJ354XtMPiCTkzcwTzfSIDWhQv21Wpvt6oAaPqbbG+UTHtw\nMWOyndHzoAUVNBBoHUeT1y3qrdbHho8IL4AvvO/T6khAvUKcM44lQhvdAMLoFtVr\nvX2Bja6K84sT/8iGIRSCzSz/jv8xvg4NCxXQ7hV/pB8UJ+fVV+VFc3FzljMkaXwK\njK+JPn3f1VGKNuUbt+L2f9BAbWQa60Ed5QD1h87vSZBWx4GjjpyXHMms2FjSXoWG\nBdJqmnzbzjmTjo/ouPpEXaoJgTtT/qhrBnhrkLbOkszQls3yr2U19/MdLcJaeHb0\nO8XYjyMXmPTJS7yk22FE97JQnGrgb9gYBkTKzZpD778SgLYEkFewsVkcOVUJevGQ\n2OUEvIBBOpGBAjClRc1KsgB/WopQ3+J3NQPt/+oW8DvDzBk+RmOjD/2w8RTzsRp2\n2/kGzK0XSvvZ1qXtE2eATD4aMYi0VzQXjl876YK8TPLjcjTnXeM=\n=rN0I\n-----END PGP SIGNATURE-----",
        "payload": "tree 3339454ec7b59acbafc86fa33585fbbb20cb9509\nparent 3c7d4cb52869d5943c2f36b3b8a91bb60344274c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596406661 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596470072 +0300\n\nrefactor: Add negative thread safety annotations to CTxMemPool\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/343b93b45d468a4c747b0b5f7dd397aaf30081f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343b93b45d468a4c747b0b5f7dd397aaf30081f0/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7d4cb52869d5943c2f36b3b8a91bb60344274c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7d4cb52869d5943c2f36b3b8a91bb60344274c"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 13,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b54a2eb7223a294a19f2e28314b34541bc749e32",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/343b93b45d468a4c747b0b5f7dd397aaf30081f0/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/343b93b45d468a4c747b0b5f7dd397aaf30081f0/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=343b93b45d468a4c747b0b5f7dd397aaf30081f0",
        "patch": "@@ -596,7 +596,11 @@ class CTxMemPool\n      * check does nothing.\n      */\n     void check(const CCoinsViewCache *pcoins) const;\n-    void setSanityCheck(double dFrequency = 1.0) { LOCK(cs); nCheckFrequency = static_cast<uint32_t>(dFrequency * 4294967295.0); }\n+    void setSanityCheck(double dFrequency = 1.0) EXCLUSIVE_LOCKS_REQUIRED(!cs)\n+    {\n+        LOCK(cs);\n+        nCheckFrequency = static_cast<uint32_t>(dFrequency * 4294967295.0);\n+    }\n \n     // addUnchecked must updated state for all ancestors of a given transaction,\n     // to track size/count of descendant transactions.  First version of\n@@ -615,8 +619,8 @@ class CTxMemPool\n \n     void clear();\n     void _clear() EXCLUSIVE_LOCKS_REQUIRED(cs); //lock free\n-    bool CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid=false);\n-    void queryHashes(std::vector<uint256>& vtxid) const;\n+    bool CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid = false) EXCLUSIVE_LOCKS_REQUIRED(!cs);\n+    void queryHashes(std::vector<uint256>& vtxid) const EXCLUSIVE_LOCKS_REQUIRED(!cs);\n     bool isSpent(const COutPoint& outpoint) const;\n     unsigned int GetTransactionsUpdated() const;\n     void AddTransactionsUpdated(unsigned int n);\n@@ -627,7 +631,7 @@ class CTxMemPool\n     bool HasNoInputsOf(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Affect CreateNewBlock prioritisation of transactions */\n-    void PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta);\n+    void PrioritiseTransaction(const uint256& hash, const CAmount& nFeeDelta) EXCLUSIVE_LOCKS_REQUIRED(!cs);\n     void ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Get the transaction in the pool that spends the same prevout */\n@@ -703,7 +707,7 @@ class CTxMemPool\n     bool IsLoaded() const;\n \n     /** Sets the current loaded state */\n-    void SetIsLoaded(bool loaded);\n+    void SetIsLoaded(bool loaded) EXCLUSIVE_LOCKS_REQUIRED(!cs);\n \n     unsigned long size() const\n     {\n@@ -732,14 +736,15 @@ class CTxMemPool\n         AssertLockHeld(cs);\n         return mapTx.project<0>(mapTx.get<index_by_wtxid>().find(wtxid));\n     }\n-    TxMempoolInfo info(const uint256& hash) const;\n-    TxMempoolInfo info(const GenTxid& gtxid) const;\n+    TxMempoolInfo info(const uint256& hash) const EXCLUSIVE_LOCKS_REQUIRED(!cs);\n+    TxMempoolInfo info(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!cs);\n     std::vector<TxMempoolInfo> infoAll() const;\n \n     size_t DynamicMemoryUsage() const;\n \n     /** Adds a transaction to the unbroadcast set */\n-    void AddUnbroadcastTx(const uint256& txid, const uint256& wtxid) {\n+    void AddUnbroadcastTx(const uint256& txid, const uint256& wtxid) EXCLUSIVE_LOCKS_REQUIRED(!cs)\n+    {\n         LOCK(cs);\n         // Sanity Check: the transaction should also be in the mempool\n         if (exists(txid)) {"
      }
    ]
  }
]