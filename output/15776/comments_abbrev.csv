sdaftuar,2019-04-09T12:36:59Z,"That seems like a potentially very bad bug.  However at first glance I don't see how `fPauseSend` could be implicated as a trigger; I don't believe we ever drop requests on the floor if the send buffer fills up, we just wait until the buffer drains and then continue as before. \n\nActually, I realize now that one way this could maybe trigger is if our peer sends a NOTFOUND in response to a getda",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481233023,481233023,
DrahtBot,2019-04-09T12:45:16Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15505](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15505.html) ([p2p] Request NOTFOUND transactions immedia",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481235677,481235677,
gmaxwell,2019-04-09T18:16:58Z,"We should perhaps disconnect a peer that is consistently getdata DOSing us...   If all your peers do that (for whatever reason) you're not going to gain txn, regardless of what happens with this.  So this fix only helps the case where a peer is randomly responding to some getdatas.\n\nThe fact that we'd stop asking for data from peers if they were not responding wasn't lost on me in the original",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481371247,481371247,
sdaftuar,2019-04-09T18:19:44Z,"I think we should do two things:\n(a) Fix the bug in NOTFOUND processing -- if a peer sends a NOTFOUND for a transaction, we should remove it from the in-flight map for that peer.  I think we should definitely do this and backport to 0.18.\n\n(b) As a safeguard, we should also do something if a peer's in-flight count hits the max so that we're not downloading new transactions from them.  I thin",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481372232,481372232,
ajtowns,2019-04-10T10:17:09Z,"> at first glance I don't see how `fPauseSend` could be implicated as a trigger\n\nYep, I think you're right.\n\n> Actually, I realize now that one way this could maybe trigger is if our peer sends a NOTFOUND in response to a getdata, I don't think we would reduce the in flight count\n\nRight; I think a plausible scenario is ""INV tx1, GETDATA tx1, TX tx1, oh I'm missing a parent for tx1, GET",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481631275,481631275,
ajtowns,2019-04-10T10:23:29Z,"> Also, I think I spotted another bug in this code related to emptying out the tx_in_flight set -- if a different peer serves us a transaction that we requested from another, then the entry doesn't get removed (upon receiving a TX message, we only erase from the delivering peer's in_flight set).\n\nMaybe I'm missing something, but I think this should be okay -- if it's added to in_flight then we",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-481633221,481633221,
gmaxwell,2019-04-11T19:05:05Z,I think it's okay-- even preferable-- to not remove the tx when we get the tx from another peer. We should either get the tx or a not found or we should eventually stop requesting tx from that peer (e.g. because we disconnected them...),https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-482255437,482255437,
jonasschnelli,2019-04-15T10:58:15Z,"Not sure if it is related but today I found – for the second time – that my test 0.18.0RC3 node has a ""stuck"" mempool (size of 6 or so)",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483205471,483205471,
jonasschnelli,2019-04-15T11:00:36Z,Just looked at the `debug.log` and my node gets a lot of invs (but no getdata response) and mempool won't increase.,https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483206122,483206122,
jonasschnelli,2019-04-15T11:02:15Z,"After an `addnode`, I could see `getdata`'s and a growing mempool",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483206580,483206580,
ajtowns,2019-04-16T05:00:44Z,"> Scenario is likely: Alice sends Bob and INV for a new tx, Bob sends GETDATA for the tx, Alice responds with TX, Bob doesn't have the parent so sends GETDATA for the parent, adding it to the tx_in_flight set, Alice replies NOTFOUND due to the parent having expired from the relay set due to being in the mempool for over 15 minutes, so Bob doesn't remove the entry from the tx_in_flight set.\n\nI ",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483511720,483511720,
MarcoFalke,2019-04-16T12:11:40Z,"Could update the comment that says `have to wait around forever. Currently only SPV clients actually care` ?\n\nAlso, I was wondering if this could be limited to just the bugfix without the RPC changes (and maybe without the tests)? You could still provide the branch with tests to the reviewers to run, but I think review should focus on the bugfix and shouldn't be distracted by RPC changes or te",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483633411,483633411,
MarcoFalke,2019-04-16T12:23:32Z,"```\n2019-04-16T02:23:15Z received getdata for: witness-tx c062e3b8e43817920b138e1675e6e33fd92c036e9e5de73c5cb2f062423f4f39 peer=2\n2019-04-16T02:23:15Z will send notfound for: c062e3b8e43817920b138e1675e6e33fd92c036e9e5de73c5cb2f062423f4f39 -1s in mempool peer=2\n```\n\nI presume you are using self-made logging, since I couldn't find that logprint in the code base?\n\nAlso, I can't follow ",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483636933,483636933,
ajtowns,2019-04-17T02:46:32Z,"> I presume you are using self-made logging, since I couldn't find that logprint in the code base?\n\nYeah, it's just\n\n    +                auto txinfo = mempool.info(inv.hash);\n    +                LogPrint(BCLog::NET, ""will send notfound for: %s %ds in mempool peer=%d\n"", inv.hash.ToString(), (txinfo.tx ? GetTime() - txinfo.nTime : -1), pfrom->GetId());\n\nbefore `vNotFound.push_back(i",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483916240,483916240,
ajtowns,2019-04-17T05:16:10Z,"> Can we go back to the expiry approach?\n\nI don't see why not. Closing this PR in favour of #15834 . Fixed some issues in the branch anyway so it's still useful for reference.",https://github.com/bitcoin/bitcoin/pull/15776#issuecomment-483940239,483940239,
morcos,2019-04-11T16:52:36Z,do these need to be added to the help text?,https://github.com/bitcoin/bitcoin/pull/15776#discussion_r274521787,274521787,src/rpc/net.cpp
MarcoFalke,2019-04-11T19:07:30Z,"In commit 392cf539756e2af6df5684c3444df626b446754f\n\nWhat is this adding? We generally don't add commented out code without rationale ",https://github.com/bitcoin/bitcoin/pull/15776#discussion_r274599063,274599063,src/net_processing.cpp
ajtowns,2019-04-12T05:37:15Z,Replaced with actual comment,https://github.com/bitcoin/bitcoin/pull/15776#discussion_r274764846,274764846,src/net_processing.cpp
ajtowns,2019-04-12T05:39:16Z,"are they even worth keeping? i mostly added them for debugging, and i am using them in one of the test cases, but they're pretty obscure info.",https://github.com/bitcoin/bitcoin/pull/15776#discussion_r274765126,274765126,src/rpc/net.cpp
ajtowns,2019-04-12T07:14:10Z,added help text anyway,https://github.com/bitcoin/bitcoin/pull/15776#discussion_r274784284,274784284,src/rpc/net.cpp
naumenkogs,2019-04-15T16:47:19Z,Could you explain what's going on here? Why we're logging only the first notfound INV?,https://github.com/bitcoin/bitcoin/pull/15776#discussion_r275450761,275450761,src/net_processing.cpp
ajtowns,2019-04-16T04:06:50Z,It's doing the same logging as `getdata` which also only logs the first entry. Didn't seem terribly valuable to log every notfound entry seen.,https://github.com/bitcoin/bitcoin/pull/15776#discussion_r275622904,275622904,src/net_processing.cpp
sdaftuar,2019-04-16T14:06:59Z,"This will disconnect both inbound and outbound peers, I think? ",https://github.com/bitcoin/bitcoin/pull/15776#discussion_r275815853,275815853,src/net_processing.cpp
ajtowns,2019-04-17T05:14:41Z,"Yeah, fixed",https://github.com/bitcoin/bitcoin/pull/15776#discussion_r276081689,276081689,src/net_processing.cpp
