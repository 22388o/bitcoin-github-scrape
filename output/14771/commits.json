[
  {
    "sha": "fa21ca09a807e18476babe2651ad62df6477bbf0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTIxY2EwOWE4MDdlMTg0NzZiYWJlMjY1MWFkNjJkZjY0NzdiYmYw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-11-20T23:41:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-11-21T00:51:49Z"
      },
      "message": "test: Add BOOST_REQUIRE to getters returning optional",
      "tree": {
        "sha": "539e5c07937b9d82f5e8c59a199a2bd3570a0aa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/539e5c07937b9d82f5e8c59a199a2bd3570a0aa1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa21ca09a807e18476babe2651ad62df6477bbf0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJb9KwlAAoJEM4rdWl+aaVIZp0L/1lLD8vvDteycHCGb606HXz1\naoaZ4ojHNJrCXwNYkMmjBnB1+i0tuHU/GNmB596vNqtGlf+kZq96+2/5i4pwfYWV\n460IsNqSzLu/g1PZqioF+YtPnCNb5Z8gP/C/aAFnWnZzgHpKV5Wbd+RrxEzL/vzb\npBxJqsJib0Gy3zKtGBXv6qDOQeDeMIWVsXlbQj3zEeRDgUGzG3r/T9quG+IW8pXu\n8EiSzKjVcH69DvZrO4ruM0cn7b8sDA/Pwq+LTq+PA/iWF59BmVUFhzAtbbppebFX\neUVI7JXbULylqTnO8FZFVfkpwLtaXah3MV5JxFPWvJvvR3PBUhzDCc4pFymG8j2t\nekkNzWFF8TJgkVfPfXM4QVNKyCfJQqar4lYICBAM/uEjzI1ZwrX//JpnCXsIoPWN\n/a6Q5NPCBd8PEOVJTncHQ8cVGw/3f+3XaXcNZQr4vtiUZvUOzmQzYGi/OGyoayNM\n7Ty51VZpR78qhjXXUqajSnveK9dqZhvZpRj5HVtbTQ==\n=Y7oO\n-----END PGP SIGNATURE-----",
        "payload": "tree 539e5c07937b9d82f5e8c59a199a2bd3570a0aa1\nparent 6d58a5c3b05585b01c960776e00856637ff1794d\nauthor MarcoFalke <falke.marco@gmail.com> 1542757292 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1542761509 -0500\n\ntest: Add BOOST_REQUIRE to getters returning optional\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa21ca09a807e18476babe2651ad62df6477bbf0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa21ca09a807e18476babe2651ad62df6477bbf0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa21ca09a807e18476babe2651ad62df6477bbf0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d58a5c3b05585b01c960776e00856637ff1794d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d58a5c3b05585b01c960776e00856637ff1794d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d58a5c3b05585b01c960776e00856637ff1794d"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 12,
      "deletions": 11
    },
    "files": [
      {
        "sha": "d3cbaedf00e7e72056e7cd3e0732b9c7442b5d23",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa21ca09a807e18476babe2651ad62df6477bbf0/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa21ca09a807e18476babe2651ad62df6477bbf0/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=fa21ca09a807e18476babe2651ad62df6477bbf0",
        "patch": "@@ -2,17 +2,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <attributes.h>\n #include <coins.h>\n+#include <consensus/validation.h>\n #include <script/standard.h>\n+#include <test/test_bitcoin.h>\n #include <uint256.h>\n #include <undo.h>\n #include <util/strencodings.h>\n-#include <test/test_bitcoin.h>\n #include <validation.h>\n-#include <consensus/validation.h>\n \n-#include <vector>\n #include <map>\n+#include <vector>\n \n #include <boost/test/unit_test.hpp>\n \n@@ -36,7 +37,7 @@ class CCoinsViewTest : public CCoinsView\n     std::map<COutPoint, Coin> map_;\n \n public:\n-    bool GetCoin(const COutPoint& outpoint, Coin& coin) const override\n+    NODISCARD bool GetCoin(const COutPoint& outpoint, Coin& coin) const override\n     {\n         std::map<COutPoint, Coin>::const_iterator it = map_.find(outpoint);\n         if (it == map_.end()) {"
      },
      {
        "sha": "1034d4ade27f5e3784dec33d932880fcbeebf550",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa21ca09a807e18476babe2651ad62df6477bbf0/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa21ca09a807e18476babe2651ad62df6477bbf0/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=fa21ca09a807e18476babe2651ad62df6477bbf0",
        "patch": "@@ -102,15 +102,15 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n         char key_res;\n         uint256 val_res;\n \n-        it->GetKey(key_res);\n-        it->GetValue(val_res);\n+        BOOST_REQUIRE(it->GetKey(key_res));\n+        BOOST_REQUIRE(it->GetValue(val_res));\n         BOOST_CHECK_EQUAL(key_res, key);\n         BOOST_CHECK_EQUAL(val_res.ToString(), in.ToString());\n \n         it->Next();\n \n-        it->GetKey(key_res);\n-        it->GetValue(val_res);\n+        BOOST_REQUIRE(it->GetKey(key_res));\n+        BOOST_REQUIRE(it->GetValue(val_res));\n         BOOST_CHECK_EQUAL(key_res, key2);\n         BOOST_CHECK_EQUAL(val_res.ToString(), in2.ToString());\n "
      },
      {
        "sha": "9acebdd820ec54236516c2ca28da9f27100bd4d1",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa21ca09a807e18476babe2651ad62df6477bbf0/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa21ca09a807e18476babe2651ad62df6477bbf0/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa21ca09a807e18476babe2651ad62df6477bbf0",
        "patch": "@@ -187,7 +187,7 @@ struct TestArgsManager : public ArgsManager\n             m_config_args.clear();\n         }\n         std::string error;\n-        ReadConfigStream(streamConfig, error);\n+        BOOST_REQUIRE(ReadConfigStream(streamConfig, error));\n     }\n     void SetNetworkOnlyArg(const std::string arg)\n     {"
      },
      {
        "sha": "85e4c8e6cd491e35894e391269dd96aef63d6d8a",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa21ca09a807e18476babe2651ad62df6477bbf0/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa21ca09a807e18476babe2651ad62df6477bbf0/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=fa21ca09a807e18476babe2651ad62df6477bbf0",
        "patch": "@@ -150,7 +150,7 @@ class ArgsManager\n     std::set<std::string> m_network_only_args GUARDED_BY(cs_args);\n     std::map<OptionsCategory, std::map<std::string, Arg>> m_available_args GUARDED_BY(cs_args);\n \n-    bool ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys = false);\n+    NODISCARD bool ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys = false);\n \n public:\n     ArgsManager();\n@@ -161,7 +161,7 @@ class ArgsManager\n     void SelectConfigNetwork(const std::string& network);\n \n     NODISCARD bool ParseParameters(int argc, const char* const argv[], std::string& error);\n-    bool ReadConfigFiles(std::string& error, bool ignore_invalid_keys = false);\n+    NODISCARD bool ReadConfigFiles(std::string& error, bool ignore_invalid_keys = false);\n \n     /**\n      * Log warnings for options in m_section_only_args when"
      }
    ]
  }
]