Empact,2018-11-21T00:33:16Z,"Do you mean to tag `ReadConfigStream` or `GetValue` `NODISCARD` as well? They could be.\n\n`GetKey` has some unchecked uses in the codebase.",https://github.com/bitcoin/bitcoin/pull/14771#issuecomment-440481163,440481163,
laanwj,2018-11-21T09:13:17Z,"utACK, I like the idea of adding `NODISCARD` annotations to make sure the return codes are not ignored.",https://github.com/bitcoin/bitcoin/pull/14771#issuecomment-440590650,440590650,
practicalswift,2018-11-21T22:25:36Z,utACK – `NODISCARD` is great!,https://github.com/bitcoin/bitcoin/pull/14771#issuecomment-440829548,440829548,
Empact,2018-11-22T14:49:04Z,"I'm into adding `NODISCARD` to `GetKey` and `GetValue` as well, for coherence between the test and source changes.\n\nHere's the patch for that:\n```patch\ndiff --git a/src/dbwrapper.h b/src/dbwrapper.h\nindex 416f5e839..9460e5ff4 100644\n--- a/src/dbwrapper.h\n+++ b/src/dbwrapper.h\n@@ -5,6 +5,7 @@\n #ifndef BITCOIN_DBWRAPPER_H\n #define BITCOIN_DBWRAPPER_H\n \n+#include <attributes.h",https://github.com/bitcoin/bitcoin/pull/14771#issuecomment-441052294,441052294,
promag,2018-11-22T11:09:02Z,"Sorry, but this seems like a random change, why is this necessary?",https://github.com/bitcoin/bitcoin/pull/14771#discussion_r235686569,235686569,src/test/coins_tests.cpp
practicalswift,2018-11-22T12:50:33Z,"I'll let @MarcoFalke answer on this specific case, but generally I think it makes perfect sense to add `NODISCARD` to functions that return a `bool` indicating success/failure. I think we should do that by default for new functions at least.\n\nMaking discarding opt-in will guard against potentially dangerous unintentional discards :-)",https://github.com/bitcoin/bitcoin/pull/14771#discussion_r235714299,235714299,src/test/coins_tests.cpp
promag,2018-11-22T12:55:57Z,There are tons of that?,https://github.com/bitcoin/bitcoin/pull/14771#discussion_r235715797,235715797,src/test/coins_tests.cpp
practicalswift,2018-11-22T13:04:37Z,"@promag Let me re-phrase: I think we should add `NODISCARD` to functions – especially new functions – where discarding the return value might be a mistake.\n\nSuch as `bool ParseFoo(const std::string& s, Foo *out);`, etc.\n\nSounds reasonable? :-)",https://github.com/bitcoin/bitcoin/pull/14771#discussion_r235718242,235718242,src/test/coins_tests.cpp
promag,2018-11-22T13:08:29Z,"@practicalswift I'm not agains that annotation, I just don't understand why it's added to `GetCoin`.",https://github.com/bitcoin/bitcoin/pull/14771#discussion_r235719315,235719315,src/test/coins_tests.cpp
