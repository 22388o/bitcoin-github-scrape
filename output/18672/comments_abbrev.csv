DrahtBot,2020-04-16 19:58:38,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18672#issuecomment-614864451,614864451,
theStack,2020-04-20 16:26:54,"Rebased and changed the ""filteradd if no filter is set"" misbehaviour test to also use assert_debug_log, like the rest of the test. Fixes the following fail currently happening on master branch:\n```\n2020-04-20T16:24:43.175000Z TestFramework (INFO): Check that sending ""filteradd"" if no filter is set is treated as misbehavior (+100)\n2020-04-20T16:24:43.178000Z TestFramework (ERROR): Assertion f",https://github.com/bitcoin/bitcoin/pull/18672#issuecomment-616664429,616664429,
MarcoFalke,2020-04-20 18:20:04,ACK c7437185589926ec8def2af6bede6a407b3d2e4a,https://github.com/bitcoin/bitcoin/pull/18672#issuecomment-616727906,616727906,
robot-visions,2020-04-20 21:15:39,"ACK c7437185589926ec8def2af6bede6a407b3d2e4a\n\nThanks for updating!  This still passes locally for me, and I confirmed that `filter_node.send_and_ping(msg_filteradd(data=b'letsmisbehave'))` does in fact still increase the `banscore`.",https://github.com/bitcoin/bitcoin/pull/18672#issuecomment-616813479,616813479,
jonasschnelli,2020-04-21 08:29:28,utACK c7437185589926ec8def2af6bede6a407b3d2e4a. Seems to fix it: https://bitcoinbuilds.org/index.php?build=2524,https://github.com/bitcoin/bitcoin/pull/18672#issuecomment-617034813,617034813,
robot-visions,2020-04-18 17:23:20,Optional nit (please feel free to ignore): Would it make sense to either pass in `nHashFuncs=1` or change the default `nHashFuncs` from 0 to 1?,https://github.com/bitcoin/bitcoin/pull/18672#discussion_r410725653,410725653,test/functional/p2p_filter.py
robot-visions,2020-04-18 17:32:20,"Optional nit (please feel free to ignore): Would it make sense to also add checks like this?\n\n```\nself.log.info('Check that max size filter is accepted')\nwith self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n    filter_node.send_and_ping(msg_filterload(data=b'\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS, nTweak=0, nFlags=1))\nwith self.nodes[0].assert_debug_log([], unexpec",https://github.com/bitcoin/bitcoin/pull/18672#discussion_r410726637,410726637,test/functional/p2p_filter.py
theStack,2020-04-20 16:25:11,"Thanks for your review! I think it's fine to keep the default parameters of the msg_filterload constructor as they are -- they are in line with the equivalent of the `CBloomFilter()` constructor:\n\nhttps://github.com/bitcoin/bitcoin/blob/fc00e651e407200da1eb0ae61f6448e22d1b6d8d/src/bloom.h#L67\n\nWhat I did though was removing the explicit parameters for the first test case, as `nTweak` and `",https://github.com/bitcoin/bitcoin/pull/18672#discussion_r411516310,411516310,test/functional/p2p_filter.py
MarcoFalke,2020-04-21 11:27:28,I think you need to successfully load a filter first to test this condition?,https://github.com/bitcoin/bitcoin/pull/18672#discussion_r412101752,412101752,test/functional/p2p_filter.py
robot-visions,2020-04-21 18:38:42,Good point!  Sorry I missed this when reviewing.  I added this in #18726 ,https://github.com/bitcoin/bitcoin/pull/18672#discussion_r412399553,412399553,test/functional/p2p_filter.py
theStack,2020-04-22 07:55:44,"@MarcoFalke: You are right, the misbehaviour is caused for another reasons here, the test is basically equivalent to ""'Check that sending ""filteradd"" if no filter is set is treated as misbehavior'"" below.\n@robot-visions: Thanks for adding the fix!",https://github.com/bitcoin/bitcoin/pull/18672#discussion_r412756867,412756867,test/functional/p2p_filter.py
