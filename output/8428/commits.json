[
  {
    "sha": "b8db185952c815444b7052092472ef9af3a42e89",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOGRiMTg1OTUyYzgxNTQ0NGI3MDUyMDkyNDcyZWY5YWYzYTQyZTg5",
    "commit": {
      "author": {
        "name": "Chris Stewart",
        "email": "stewart.chris1234@gmail.com",
        "date": "2016-07-29T16:52:48Z"
      },
      "committer": {
        "name": "Chris Stewart",
        "email": "stewart.chris1234@gmail.com",
        "date": "2016-07-31T17:43:45Z"
      },
      "message": "Update README.md\n\nUpdating documentation for adding new unit test files\n\nRemoving unneeded sentence from README\n\nRemoving uint160_tests.cpp as it DNE\n\nFormatting command line instructions to use ``\n\nfixing 80 char formatting issue in README\n\nfixing more nits",
      "tree": {
        "sha": "0479bd10c71ca373a2ee30190d3b9ff56ac24d78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0479bd10c71ca373a2ee30190d3b9ff56ac24d78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8db185952c815444b7052092472ef9af3a42e89",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8db185952c815444b7052092472ef9af3a42e89",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8db185952c815444b7052092472ef9af3a42e89",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8db185952c815444b7052092472ef9af3a42e89/comments",
    "author": {
      "login": "Christewart",
      "id": 3514957,
      "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Christewart",
      "html_url": "https://github.com/Christewart",
      "followers_url": "https://api.github.com/users/Christewart/followers",
      "following_url": "https://api.github.com/users/Christewart/following{/other_user}",
      "gists_url": "https://api.github.com/users/Christewart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Christewart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
      "organizations_url": "https://api.github.com/users/Christewart/orgs",
      "repos_url": "https://api.github.com/users/Christewart/repos",
      "events_url": "https://api.github.com/users/Christewart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Christewart/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Christewart",
      "id": 3514957,
      "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Christewart",
      "html_url": "https://github.com/Christewart",
      "followers_url": "https://api.github.com/users/Christewart/followers",
      "following_url": "https://api.github.com/users/Christewart/following{/other_user}",
      "gists_url": "https://api.github.com/users/Christewart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Christewart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
      "organizations_url": "https://api.github.com/users/Christewart/orgs",
      "repos_url": "https://api.github.com/users/Christewart/repos",
      "events_url": "https://api.github.com/users/Christewart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Christewart/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbcb8fd884335134065143047e9798dc8ec13445",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbcb8fd884335134065143047e9798dc8ec13445",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbcb8fd884335134065143047e9798dc8ec13445"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 9,
      "deletions": 12
    },
    "files": [
      {
        "sha": "61462642bfb9c8df1fd708ded994a84d077f122b",
        "filename": "src/test/README.md",
        "status": "modified",
        "additions": 9,
        "deletions": 12,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8db185952c815444b7052092472ef9af3a42e89/src/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8db185952c815444b7052092472ef9af3a42e89/src/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/README.md?ref=b8db185952c815444b7052092472ef9af3a42e89",
        "patch": "@@ -5,18 +5,15 @@ sense to simply use this framework rather than require developers to\n configure some other framework (we want as few impediments to creating\n unit tests as possible).\n \n-The build system is setup to compile an executable called \"test_bitcoin\"\n+The build system is setup to compile an executable called `test_bitcoin`\n that runs all of the unit tests.  The main source file is called\n-test_bitcoin.cpp, which simply includes other files that contain the\n-actual unit tests (outside of a couple required preprocessor\n-directives).  The pattern is to create one test file for each class or\n-source file for which you want to create unit tests.  The file naming\n-convention is \"<source_filename>_tests.cpp\" and such files should wrap\n-their tests in a test suite called \"<source_filename>_tests\".  For an\n-examples of this pattern, examine uint160_tests.cpp and\n-uint256_tests.cpp.\n-\n-Add the source files to /src/Makefile.test.include to add them to the build.\n+test_bitcoin.cpp. To add a new unit test file to our test suite you need \n+to add the file to `src/Makefile.test.include`. The pattern is to create \n+one test file for each class or source file for which you want to create \n+unit tests.  The file naming convention is `<source_filename>_tests.cpp` \n+and such files should wrap their tests in a test suite \n+called `<source_filename>_tests`. For an example of this pattern, \n+examine `uint256_tests.cpp`.\n \n For further reading, I found the following website to be helpful in\n explaining how the boost unit test framework works:\n@@ -31,5 +28,5 @@ example, to run just the getarg_tests verbosely:\n \n     test_bitcoin --run_test=getarg_tests/doubledash\n \n-Run  test_bitcoin --help   for the full list.\n+Run `test_bitcoin --help` for the full list.\n "
      }
    ]
  }
]