[
  {
    "sha": "4e79d3e28167ac169f417623f07f48dd3cb0f6ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTc5ZDNlMjgxNjdhYzE2OWY0MTc2MjNmMDdmNDhkZDNjYjBmNmFj",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-06-16T22:53:14Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-06-17T13:25:04Z"
      },
      "message": "Ensure that event loop is empty before the loop exit",
      "tree": {
        "sha": "99eed2cdfdf1a06ceeea3b64cce47747f63ab0c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99eed2cdfdf1a06ceeea3b64cce47747f63ab0c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e79d3e28167ac169f417623f07f48dd3cb0f6ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e79d3e28167ac169f417623f07f48dd3cb0f6ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e79d3e28167ac169f417623f07f48dd3cb0f6ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e79d3e28167ac169f417623f07f48dd3cb0f6ac/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a90ca4087a6f0d7a0e22ce2769f3b0588d75b293",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a90ca4087a6f0d7a0e22ce2769f3b0588d75b293",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a90ca4087a6f0d7a0e22ce2769f3b0588d75b293"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9a8722fbeb811de56a774507d0a52d51e9ede7c3",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e79d3e28167ac169f417623f07f48dd3cb0f6ac/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e79d3e28167ac169f417623f07f48dd3cb0f6ac/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=4e79d3e28167ac169f417623f07f48dd3cb0f6ac",
        "patch": "@@ -467,18 +467,22 @@ void StopHTTPServer()\n     }\n     if (eventBase) {\n         LogPrint(BCLog::HTTP, \"Waiting for HTTP event thread to exit\\n\");\n-        // Exit the event loop as soon as there are no active events.\n-        event_base_loopexit(eventBase, nullptr);\n+        // Ensure that event loop is empty before the loop exit\n+        std::packaged_task<int(event_base*)> taskCleanup(event_base_dispatch);\n+        std::future<int> threadResultCleanup = taskCleanup.get_future();\n+        std::thread threadCleanup(std::move(taskCleanup), eventBase);\n         // Give event loop a few seconds to exit (to send back last RPC responses), then break it\n         // Before this was solved with event_base_loopexit, but that didn't work as expected in\n         // at least libevent 2.0.21 and always introduced a delay. In libevent\n         // master that appears to be solved, so in the future that solution\n         // could be used again (if desirable).\n         // (see discussion in https://github.com/bitcoin/bitcoin/pull/6990)\n-        if (threadResult.valid() && threadResult.wait_for(std::chrono::milliseconds(2000)) == std::future_status::timeout) {\n+        if ((threadResult.valid() && threadResult.wait_for(std::chrono::milliseconds(2000)) == std::future_status::timeout) ||\n+            (threadResultCleanup.valid() && threadResultCleanup.wait_for(std::chrono::milliseconds(2000)) == std::future_status::timeout)) {\n             LogPrintf(\"HTTP event loop did not exit within allotted time, sending loopbreak\\n\");\n             event_base_loopbreak(eventBase);\n         }\n+        threadCleanup.join();\n         threadHTTP.join();\n     }\n     if (eventHTTP) {"
      }
    ]
  }
]