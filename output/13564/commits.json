[
  {
    "sha": "ea65182f033eca73c291057dacd54f8e4e809fbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTY1MTgyZjAzM2VjYTczYzI5MTA1N2RhY2Q1NGY4ZTRlODA5ZmJk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-28T17:36:28Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-28T17:37:44Z"
      },
      "message": "[wallet] loadwallet shouldn't create new wallets.\n\nA bug in the initial implementation of loadwallet meant that if the\narguement was a directory that didn't contain a wallet.dat file, a new\nwallet would be created in that directory. Fix that so that if a\ndirectory is passed in, it must contain a wallet.dat file.\n\nBug reported by promag (Jo\u00e3o Barbosa).",
      "tree": {
        "sha": "08c1bf08e151037ce8a35f5eefa0665b7ae72719",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08c1bf08e151037ce8a35f5eefa0665b7ae72719"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea65182f033eca73c291057dacd54f8e4e809fbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea65182f033eca73c291057dacd54f8e4e809fbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea65182f033eca73c291057dacd54f8e4e809fbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea65182f033eca73c291057dacd54f8e4e809fbd/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9576d1a79f761358cc4c11264901ab009e5ef0ae",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea65182f033eca73c291057dacd54f8e4e809fbd/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea65182f033eca73c291057dacd54f8e4e809fbd/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ea65182f033eca73c291057dacd54f8e4e809fbd",
        "patch": "@@ -3092,6 +3092,12 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     fs::path wallet_path = fs::absolute(wallet_file, GetWalletDir());\n     if (fs::symlink_status(wallet_path).type() == fs::file_not_found) {\n         throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Wallet \" + wallet_file + \" not found.\");\n+    } else if (fs::is_directory(wallet_path)) {\n+        // The given filename is a directory. Check that there's a wallet.dat file.\n+        fs::path wallet_dat_file = wallet_path / \"wallet.dat\";\n+        if (fs::symlink_status(wallet_dat_file).type() == fs::file_not_found) {\n+            throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Directory \" + wallet_file + \" does not contain a wallet.dat file.\");\n+        }\n     }\n \n     std::string warning;"
      },
      {
        "sha": "fa5a2154a4ad1f98b3004db53c750410c9bc089a",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea65182f033eca73c291057dacd54f8e4e809fbd/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea65182f033eca73c291057dacd54f8e4e809fbd/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=ea65182f033eca73c291057dacd54f8e4e809fbd",
        "patch": "@@ -211,6 +211,10 @@ def run_test(self):\n         # Fail to load if wallet file is a symlink\n         assert_raises_rpc_error(-4, \"Wallet file verification failed: Invalid -wallet path 'w8_symlink'\", self.nodes[0].loadwallet, 'w8_symlink')\n \n+        # Fail to load if a directory is specified that doesn't contain a wallet\n+        os.mkdir(wallet_dir('empty_wallet_dir'))\n+        assert_raises_rpc_error(-18, \"Directory empty_wallet_dir does not contain a wallet.dat file\", self.nodes[0].loadwallet, 'empty_wallet_dir')\n+\n         self.log.info(\"Test dynamic wallet creation.\")\n \n         # Fail to create a wallet if it already exists."
      }
    ]
  }
]