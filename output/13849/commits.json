[
  {
    "sha": "566f826902cf1a1df18dba83d5302cf173b64e1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjZmODI2OTAyY2YxYTFkZjE4ZGJhODNkNTMwMmNmMTczYjY0ZTFk",
    "commit": {
      "author": {
        "name": "Julian Fleischer",
        "email": "tirednesscankill@warhog.net",
        "date": "2018-08-02T10:22:55Z"
      },
      "committer": {
        "name": "Julian Fleischer",
        "email": "tirednesscankill@warhog.net",
        "date": "2018-08-02T13:36:00Z"
      },
      "message": "use only travis jobs: instead of mix of jobs+matrix",
      "tree": {
        "sha": "0aaf3ce413899ba0e1c1d77a1aed594da1dcbc6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0aaf3ce413899ba0e1c1d77a1aed594da1dcbc6a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/566f826902cf1a1df18dba83d5302cf173b64e1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/566f826902cf1a1df18dba83d5302cf173b64e1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/566f826902cf1a1df18dba83d5302cf173b64e1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/566f826902cf1a1df18dba83d5302cf173b64e1d/comments",
    "author": {
      "login": "scravy",
      "id": 295504,
      "node_id": "MDQ6VXNlcjI5NTUwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scravy",
      "html_url": "https://github.com/scravy",
      "followers_url": "https://api.github.com/users/scravy/followers",
      "following_url": "https://api.github.com/users/scravy/following{/other_user}",
      "gists_url": "https://api.github.com/users/scravy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scravy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scravy/subscriptions",
      "organizations_url": "https://api.github.com/users/scravy/orgs",
      "repos_url": "https://api.github.com/users/scravy/repos",
      "events_url": "https://api.github.com/users/scravy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scravy/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "scravy",
      "id": 295504,
      "node_id": "MDQ6VXNlcjI5NTUwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scravy",
      "html_url": "https://github.com/scravy",
      "followers_url": "https://api.github.com/users/scravy/followers",
      "following_url": "https://api.github.com/users/scravy/following{/other_user}",
      "gists_url": "https://api.github.com/users/scravy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scravy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scravy/subscriptions",
      "organizations_url": "https://api.github.com/users/scravy/orgs",
      "repos_url": "https://api.github.com/users/scravy/repos",
      "events_url": "https://api.github.com/users/scravy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scravy/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e57766906237834906b979a59015eed218d34656",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e57766906237834906b979a59015eed218d34656",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e57766906237834906b979a59015eed218d34656"
      }
    ],
    "stats": {
      "total": 111,
      "additions": 58,
      "deletions": 53
    },
    "files": [
      {
        "sha": "c95ffd8d6bee266e93a101466ad271ea4e072179",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 58,
        "deletions": 53,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/566f826902cf1a1df18dba83d5302cf173b64e1d/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/566f826902cf1a1df18dba83d5302cf173b64e1d/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=566f826902cf1a1df18dba83d5302cf173b64e1d",
        "patch": "@@ -26,16 +26,58 @@ env:\n     - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n     - WINEDEBUG=fixme-all\n     - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n-  matrix:\n+before_install:\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+    - BEGIN_FOLD () { echo \"\"; CURRENT_FOLD_NAME=$1; echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"; }\n+    - END_FOLD () { RET=$?; echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"; return $RET; }\n+install:\n+    - travis_retry docker pull $DOCKER_NAME_TAG\n+    - env | grep -E '^(CCACHE_|WINEDEBUG|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env\n+    - if [[ $HOST = *-mingw32 ]]; then DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"; fi\n+    - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+    - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"; }\n+    - if [ -n \"$DPKG_ADD_ARCH\" ]; then DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n+    - travis_retry DOCKER_EXEC apt-get update\n+    - travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n+before_script:\n+    - DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n+    - mkdir -p depends/SDKs depends/sdk-sources\n+    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\); fi\n+    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n+script:\n+    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n+    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n+    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC ccache --max-size=$CCACHE_SIZE; fi\n+    - BEGIN_FOLD autogen; test -n \"$CONFIG_SHELL\" && DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\" || DOCKER_EXEC ./autogen.sh; END_FOLD\n+    - mkdir build && cd build\n+    - BEGIN_FOLD configure; DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n+    - BEGIN_FOLD distdir; DOCKER_EXEC make distdir VERSION=$HOST; END_FOLD\n+    - cd bitcoin-$HOST\n+    - BEGIN_FOLD configure; DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n+    - BEGIN_FOLD build; DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false ); END_FOLD\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD unit-tests; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; END_FOLD; fi\n+    - if [ \"$RUN_BENCH\" = \"true\" ]; then BEGIN_FOLD bench; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib $OUTDIR/bin/bench_bitcoin -scaling=0.001 ; END_FOLD; fi\n+    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude feature_pruning,feature_dbcrash\"; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD functional-tests; DOCKER_EXEC test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast ${extended}; END_FOLD; fi\n+after_script:\n+    - echo $TRAVIS_COMMIT_RANGE\n+    - echo $TRAVIS_COMMIT_LOG\n+jobs:\n+  include:\n # ARM\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=arm-linux-gnueabihf\n         PACKAGES=\"g++-arm-linux-gnueabihf\"\n         DEP_OPTS=\"NO_QT=1\"\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Win32\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=i686-w64-mingw32\n         DPKG_ADD_ARCH=\"i386\"\n         DEP_OPTS=\"NO_QT=1\"\n@@ -44,15 +86,17 @@ env:\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-reduce-exports\"\n # Win64\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=x86_64-w64-mingw32\n         DEP_OPTS=\"NO_QT=1\"\n         PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n         RUN_TESTS=true\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-reduce-exports\"\n # 32-bit + dash\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=i686-pc-linux-gnu\n         PACKAGES=\"g++-multilib python3-zmq\"\n         DEP_OPTS=\"NO_QT=1\"\n@@ -61,7 +105,8 @@ env:\n         BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n         CONFIG_SHELL=\"/bin/dash\"\n # x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=x86_64-unknown-linux-gnu\n         PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n         DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n@@ -70,71 +115,31 @@ env:\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\\\"-g0 -O2\\\"\"\n # x86_64 Linux (Qt5 & system libs)\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=x86_64-unknown-linux-gnu\n         PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n         NO_DEPENDS=1\n         RUN_TESTS=true\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER\"\n # x86_64 Linux, No wallet\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=x86_64-unknown-linux-gnu\n         PACKAGES=\"python3\"\n         DEP_OPTS=\"NO_WALLET=1\"\n         RUN_TESTS=true\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n-    - >-\n+    - stage: test\n+      env: >-\n         HOST=x86_64-apple-darwin14\n         PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git\"\n-        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n         OSX_SDK=10.11\n         GOAL=\"all deploy\"\n-\n-before_install:\n-    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n-    - BEGIN_FOLD () { echo \"\"; CURRENT_FOLD_NAME=$1; echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"; }\n-    - END_FOLD () { RET=$?; echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"; return $RET; }\n-install:\n-    - travis_retry docker pull $DOCKER_NAME_TAG\n-    - env | grep -E '^(CCACHE_|WINEDEBUG|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env\n-    - if [[ $HOST = *-mingw32 ]]; then DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"; fi\n-    - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n-    - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"; }\n-    - if [ -n \"$DPKG_ADD_ARCH\" ]; then DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n-    - travis_retry DOCKER_EXEC apt-get update\n-    - travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n-before_script:\n-    - DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n-    - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\); fi\n-    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n-script:\n-    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n-    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC ccache --max-size=$CCACHE_SIZE; fi\n-    - BEGIN_FOLD autogen; test -n \"$CONFIG_SHELL\" && DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\" || DOCKER_EXEC ./autogen.sh; END_FOLD\n-    - mkdir build && cd build\n-    - BEGIN_FOLD configure; DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n-    - BEGIN_FOLD distdir; DOCKER_EXEC make distdir VERSION=$HOST; END_FOLD\n-    - cd bitcoin-$HOST\n-    - BEGIN_FOLD configure; DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n-    - BEGIN_FOLD build; DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false ); END_FOLD\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD unit-tests; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; END_FOLD; fi\n-    - if [ \"$RUN_BENCH\" = \"true\" ]; then BEGIN_FOLD bench; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib $OUTDIR/bin/bench_bitcoin -scaling=0.001 ; END_FOLD; fi\n-    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude feature_pruning,feature_dbcrash\"; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD functional-tests; DOCKER_EXEC test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast ${extended}; END_FOLD; fi\n-after_script:\n-    - echo $TRAVIS_COMMIT_RANGE\n-    - echo $TRAVIS_COMMIT_LOG\n-\n-jobs:\n-  include:\n+        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n     - stage: lint\n       env:\n       sudo: false"
      }
    ]
  }
]