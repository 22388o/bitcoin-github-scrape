[
  {
    "sha": "24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGU4ODk2NDMwY2E3M2YwNjQyZWQxYzVmM2JkZDE0MDZjZGQ2NmY2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-20T03:55:04Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-21T04:41:46Z"
      },
      "message": "Add CValidationInterface::BlockChecked notification",
      "tree": {
        "sha": "f2d3cf23193fcec7bc906bebc6ca5529ede50973",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2d3cf23193fcec7bc906bebc6ca5529ede50973"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a96d113962b92b550a04d6ab0f580d29401039da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a96d113962b92b550a04d6ab0f580d29401039da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a96d113962b92b550a04d6ab0f580d29401039da"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d2f999ee56623e37b1c065ce21ef8d0390057b3e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
        "patch": "@@ -152,6 +152,8 @@ struct CMainSignals {\n     boost::signals2::signal<void (const uint256 &)> Inventory;\n     // Tells listeners to broadcast their data.\n     boost::signals2::signal<void ()> Broadcast;\n+    // Notifies listeners of a block validation result\n+    boost::signals2::signal<void (const CBlock&, const CValidationState&)> BlockChecked;\n } g_signals;\n \n } // anon namespace\n@@ -163,9 +165,11 @@ void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.Inventory.connect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n     g_signals.Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n+    g_signals.BlockChecked.connect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n }\n \n void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n+    g_signals.BlockChecked.disconnect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n     g_signals.Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n     g_signals.Inventory.disconnect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n     g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n@@ -175,6 +179,7 @@ void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n }\n \n void UnregisterAllValidationInterfaces() {\n+    g_signals.BlockChecked.disconnect_all_slots();\n     g_signals.Broadcast.disconnect_all_slots();\n     g_signals.Inventory.disconnect_all_slots();\n     g_signals.SetBestChain.disconnect_all_slots();\n@@ -1868,7 +1873,9 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, CBlock *\n     {\n         CCoinsViewCache view(pcoinsTip);\n         CInv inv(MSG_BLOCK, pindexNew->GetBlockHash());\n-        if (!ConnectBlock(*pblock, state, pindexNew, view)) {\n+        bool rv = ConnectBlock(*pblock, state, pindexNew, view);\n+        g_signals.BlockChecked(*pblock, state);\n+        if (!rv) {\n             if (state.IsInvalid())\n                 InvalidBlockFound(pindexNew, state);\n             return error(\"ConnectTip() : ConnectBlock %s failed\", pindexNew->GetBlockHash().ToString());"
      },
      {
        "sha": "69be26a4ee50ee10a0cea81bee71b234d587c205",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
        "patch": "@@ -648,6 +648,7 @@ class CValidationInterface {\n     virtual void UpdatedTransaction(const uint256 &hash) {};\n     virtual void Inventory(const uint256 &hash) {};\n     virtual void ResendWalletTransactions() {};\n+    virtual void BlockChecked(const CBlock&, const CValidationState&) {};\n     friend void ::RegisterValidationInterface(CValidationInterface*);\n     friend void ::UnregisterValidationInterface(CValidationInterface*);\n     friend void ::UnregisterAllValidationInterfaces();"
      }
    ]
  },
  {
    "sha": "f877aaaf16e40254bf685b4195b809138501feab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODc3YWFhZjE2ZTQwMjU0YmY2ODViNDE5NWI4MDkxMzg1MDFmZWFi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-20T04:18:00Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-21T04:48:31Z"
      },
      "message": "Bugfix: submitblock: Use a temporary CValidationState to determine accurately the outcome of ProcessBlock, now that it no longer does the full block validity check",
      "tree": {
        "sha": "cbf08970eda85cd4a33cdc73d8abd738015ac17a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbf08970eda85cd4a33cdc73d8abd738015ac17a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f877aaaf16e40254bf685b4195b809138501feab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f877aaaf16e40254bf685b4195b809138501feab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f877aaaf16e40254bf685b4195b809138501feab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f877aaaf16e40254bf685b4195b809138501feab/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24e8896430ca73f0642ed1c5f3bdd1406cdd66f6"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 33,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a6494163aa850c110bc65183196c91be984ded93",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f877aaaf16e40254bf685b4195b809138501feab/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f877aaaf16e40254bf685b4195b809138501feab/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=f877aaaf16e40254bf685b4195b809138501feab",
        "patch": "@@ -526,6 +526,24 @@ Value getblocktemplate(const Array& params, bool fHelp)\n     return result;\n }\n \n+class submitblock_StateCatcher : public CValidationInterface\n+{\n+public:\n+    uint256 hash;\n+    bool found;\n+    CValidationState state;\n+\n+    submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {};\n+\n+protected:\n+    virtual void BlockChecked(const CBlock& block, const CValidationState& stateIn) {\n+        if (block.GetHash() != hash)\n+            return;\n+        found = true;\n+        state = stateIn;\n+    };\n+};\n+\n Value submitblock(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n@@ -558,8 +576,22 @@ Value submitblock(const Array& params, bool fHelp)\n     }\n \n     CValidationState state;\n+    submitblock_StateCatcher sc(pblock.GetHash());\n+    RegisterValidationInterface(&sc);\n     bool fAccepted = ProcessBlock(state, NULL, &pblock);\n-    if (!fAccepted)\n+    UnregisterValidationInterface(&sc);\n+    if (fAccepted)\n+    {\n+        if (!sc.found)\n+            return \"inconclusive\";\n+        state = sc.state;\n+    }\n+    if (state.IsError())\n+    {\n+        std::string strRejectReason = state.GetRejectReason();\n+        throw JSONRPCError(RPC_MISC_ERROR, strRejectReason);\n+    }\n+    if (state.IsInvalid())\n         return \"rejected\"; // TODO: report validation state\n \n     return Value::null;"
      }
    ]
  },
  {
    "sha": "d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjlhMjkxN2ZmNzNmN2U4MmIzMmJkOTRhODdkZjNlZTIxMWEyN2My",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-06-26T14:39:27Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-21T04:48:31Z"
      },
      "message": "Rename RPC_TRANSACTION_* errors to RPC_VERIFY_* and use RPC_VERIFY_ERROR for submitblock",
      "tree": {
        "sha": "798bcc1205ce3cf6abac276aba982fefae3f562a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/798bcc1205ce3cf6abac276aba982fefae3f562a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d29a2917ff73f7e82b32bd94a87df3ee211a27c2/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f877aaaf16e40254bf685b4195b809138501feab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f877aaaf16e40254bf685b4195b809138501feab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f877aaaf16e40254bf685b4195b809138501feab"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "28076607b4293496effcf25791889eea4079ace6",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d29a2917ff73f7e82b32bd94a87df3ee211a27c2/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d29a2917ff73f7e82b32bd94a87df3ee211a27c2/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
        "patch": "@@ -589,7 +589,7 @@ Value submitblock(const Array& params, bool fHelp)\n     if (state.IsError())\n     {\n         std::string strRejectReason = state.GetRejectReason();\n-        throw JSONRPCError(RPC_MISC_ERROR, strRejectReason);\n+        throw JSONRPCError(RPC_VERIFY_ERROR, strRejectReason);\n     }\n     if (state.IsInvalid())\n         return \"rejected\"; // TODO: report validation state"
      },
      {
        "sha": "9117248506fa865beb4d885c0554c1b5977f3413",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d29a2917ff73f7e82b32bd94a87df3ee211a27c2/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d29a2917ff73f7e82b32bd94a87df3ee211a27c2/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
        "patch": "@@ -49,9 +49,14 @@ enum RPCErrorCode\n     RPC_INVALID_PARAMETER           = -8,  // Invalid, missing or duplicate parameter\n     RPC_DATABASE_ERROR              = -20, // Database error\n     RPC_DESERIALIZATION_ERROR       = -22, // Error parsing or validating structure in raw format\n-    RPC_TRANSACTION_ERROR           = -25, // General error during transaction submission\n-    RPC_TRANSACTION_REJECTED        = -26, // Transaction was rejected by network rules\n-    RPC_TRANSACTION_ALREADY_IN_CHAIN= -27, // Transaction already in chain\n+    RPC_VERIFY_ERROR                = -25, // General error during transaction or block submission\n+    RPC_VERIFY_REJECTED             = -26, // Transaction or block was rejected by network rules\n+    RPC_VERIFY_ALREADY_IN_CHAIN     = -27, // Transaction already in chain\n+\n+    // Aliases for backward compatibility\n+    RPC_TRANSACTION_ERROR           = RPC_VERIFY_ERROR,\n+    RPC_TRANSACTION_REJECTED        = RPC_VERIFY_REJECTED,\n+    RPC_TRANSACTION_ALREADY_IN_CHAIN= RPC_VERIFY_ALREADY_IN_CHAIN,\n \n     // P2P client errors\n     RPC_CLIENT_NOT_CONNECTED        = -9,  // Bitcoin is not connected"
      }
    ]
  },
  {
    "sha": "1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmVhMmJiZGRjZTZhYmFmMjY0MGM0YWFiNTZhZDA4ZGU1M2M0Yjkw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-28T07:41:33Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-10-28T08:15:14Z"
      },
      "message": "Rename ProcessBlock to ProcessNewBlock to indicate change of behaviour, and document it",
      "tree": {
        "sha": "9e9d2911a1ac218751a83b91d2813d3c9f27e834",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e9d2911a1ac218751a83b91d2813d3c9f27e834"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d29a2917ff73f7e82b32bd94a87df3ee211a27c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d29a2917ff73f7e82b32bd94a87df3ee211a27c2"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 21,
      "deletions": 13
    },
    "files": [
      {
        "sha": "ce1211cca56c37632d622b34b2b47bf5e10ff040",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
        "patch": "@@ -2524,7 +2524,7 @@ void CBlockIndex::BuildSkip()\n         pskip = pprev->GetAncestor(GetSkipHeight(nHeight));\n }\n \n-bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp)\n+bool ProcessNewBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp)\n {\n     // Preliminary checks\n     bool checked = CheckBlock(*pblock, state);\n@@ -2533,7 +2533,7 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n         LOCK(cs_main);\n         MarkBlockAsReceived(pblock->GetHash());\n         if (!checked) {\n-            return error(\"ProcessBlock() : CheckBlock FAILED\");\n+            return error(\"%s : CheckBlock FAILED\", __func__);\n         }\n \n         // Store to disk\n@@ -2543,11 +2543,11 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n             mapBlockSource[pindex->GetBlockHash()] = pfrom->GetId();\n         }\n         if (!ret)\n-            return error(\"ProcessBlock() : AcceptBlock FAILED\");\n+            return error(\"%s : AcceptBlock FAILED\", __func__);\n     }\n \n     if (!ActivateBestChain(state, pblock))\n-        return error(\"ProcessBlock() : ActivateBestChain failed\");\n+        return error(\"%s : ActivateBestChain failed\", __func__);\n \n     return true;\n }\n@@ -3145,7 +3145,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                 // process in case the block isn't known yet\n                 if (mapBlockIndex.count(hash) == 0) {\n                     CValidationState state;\n-                    if (ProcessBlock(state, NULL, &block, dbp))\n+                    if (ProcessNewBlock(state, NULL, &block, dbp))\n                         nLoaded++;\n                     if (state.IsError())\n                         break;\n@@ -3165,7 +3165,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                             LogPrintf(\"%s: Processing out of order child %s of %s\\n\", __func__, block.GetHash().ToString(),\n                                     head.ToString());\n                             CValidationState dummy;\n-                            if (ProcessBlock(dummy, NULL, &block, &it->second))\n+                            if (ProcessNewBlock(dummy, NULL, &block, &it->second))\n                             {\n                                 nLoaded++;\n                                 queue.push_back(block.GetHash());\n@@ -3943,7 +3943,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         pfrom->AddInventoryKnown(inv);\n \n         CValidationState state;\n-        ProcessBlock(state, pfrom, &block);\n+        ProcessNewBlock(state, pfrom, &block);\n         int nDoS;\n         if (state.IsInvalid(nDoS)) {\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),"
      },
      {
        "sha": "9d08b3c09fff42b5115fef85dfd624235fe65b50",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
        "patch": "@@ -148,8 +148,16 @@ void RegisterNodeSignals(CNodeSignals& nodeSignals);\n /** Unregister a network node */\n void UnregisterNodeSignals(CNodeSignals& nodeSignals);\n \n-/** Process an incoming block */\n-bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp = NULL);\n+/** Process an incoming block. This only returns after the best known valid\n+    block is made active. Note that it does not, however, guarantee that the\n+    specific block passed to it has been checked for validity!\n+    @param[out]  state   This may be set to an Error state if any error occurred processing it, including during validation/connection/etc of otherwise unrelated blocks during reorganisation; or it may be set to an Invalid state iff pblock is itself invalid (but this is not guaranteed even when the block is checked). If you want to *possibly* get feedback on whether pblock is valid, you must also install a CValidationInterface - this will have its BlockChecked method called whenever *any* block completes validation.\n+    @param[in]   pfrom   The node which we are receiving the block from; it is added to mapBlockSource and may be penalised if the block is invalid.\n+    @param[in]   pblock  The block we want to process.\n+    @param[out]  dbp     If pblock is stored to disk (or already there), this will be set to its location.\n+    @return True if state.IsValid()\n+*/\n+bool ProcessNewBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp = NULL);\n /** Check whether enough disk space is available for an incoming block */\n bool CheckDiskSpace(uint64_t nAdditionalBytes = 0);\n /** Open a block file (blk?????.dat) */"
      },
      {
        "sha": "3ad33a0062ab3f442755a11724d5bee01bdda45f",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
        "patch": "@@ -425,8 +425,8 @@ bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n \n     // Process this block the same as if we had received it from another node\n     CValidationState state;\n-    if (!ProcessBlock(state, NULL, pblock))\n-        return error(\"BitcoinMiner : ProcessBlock, block not accepted\");\n+    if (!ProcessNewBlock(state, NULL, pblock))\n+        return error(\"BitcoinMiner : ProcessNewBlock, block not accepted\");\n \n     return true;\n }"
      },
      {
        "sha": "b063159721b26b3c1233f600057a7bdc5c0e5664",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
        "patch": "@@ -578,7 +578,7 @@ Value submitblock(const Array& params, bool fHelp)\n     CValidationState state;\n     submitblock_StateCatcher sc(pblock.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool fAccepted = ProcessBlock(state, NULL, &pblock);\n+    bool fAccepted = ProcessNewBlock(state, NULL, &pblock);\n     UnregisterValidationInterface(&sc);\n     if (fAccepted)\n     {"
      },
      {
        "sha": "6e1fcf0a7d10488de207c5a6b071be5a4b91afde",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bea2bbddce6abaf2640c4aab56ad08de53c4b90/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=1bea2bbddce6abaf2640c4aab56ad08de53c4b90",
        "patch": "@@ -79,7 +79,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n         pblock->nNonce = blockinfo[i].nonce;\n         CValidationState state;\n-        BOOST_CHECK(ProcessBlock(state, NULL, pblock));\n+        BOOST_CHECK(ProcessNewBlock(state, NULL, pblock));\n         BOOST_CHECK(state.IsValid());\n         pblock->hashPrevBlock = pblock->GetHash();\n     }"
      }
    ]
  }
]