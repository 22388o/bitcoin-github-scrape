[
  {
    "sha": "a44a215177ab55b4a3b36a7980c313e908e2dd18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDRhMjE1MTc3YWI1NWI0YTNiMzZhNzk4MGMzMTNlOTA4ZTJkZDE4",
    "commit": {
      "author": {
        "name": "Pedro Branco",
        "email": "branco@uphold.com",
        "date": "2017-10-11T10:12:59Z"
      },
      "committer": {
        "name": "Pedro Branco",
        "email": "branco@uphold.com",
        "date": "2017-10-11T16:20:42Z"
      },
      "message": "Fix importmulti bug when importing an already imported key",
      "tree": {
        "sha": "a40bc2574db7c70cb36e6cc9d9cb1dfd66bfb686",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a40bc2574db7c70cb36e6cc9d9cb1dfd66bfb686"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a44a215177ab55b4a3b36a7980c313e908e2dd18",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44a215177ab55b4a3b36a7980c313e908e2dd18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a44a215177ab55b4a3b36a7980c313e908e2dd18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44a215177ab55b4a3b36a7980c313e908e2dd18/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "364da2c52942ebfe92d1d1495a309a8a9dd18ef3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/364da2c52942ebfe92d1d1495a309a8a9dd18ef3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/364da2c52942ebfe92d1d1495a309a8a9dd18ef3"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3ec4a5efb479c41902367afcd887a107051851ea",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a44a215177ab55b4a3b36a7980c313e908e2dd18/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a44a215177ab55b4a3b36a7980c313e908e2dd18/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a44a215177ab55b4a3b36a7980c313e908e2dd18",
        "patch": "@@ -961,7 +961,7 @@ UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, const int6\n                 pwallet->SetAddressBook(vchAddress, label, \"receive\");\n \n                 if (pwallet->HaveKey(vchAddress)) {\n-                    return false;\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n                 }\n \n                 pwallet->mapKeyMetadata[vchAddress].nCreateTime = timestamp;"
      },
      {
        "sha": "a691595f15116f94c635dbc1b519b7f60a4b9433",
        "filename": "test/functional/importmulti.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a44a215177ab55b4a3b36a7980c313e908e2dd18/test/functional/importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a44a215177ab55b4a3b36a7980c313e908e2dd18/test/functional/importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/importmulti.py?ref=a44a215177ab55b4a3b36a7980c313e908e2dd18",
        "patch": "@@ -160,6 +160,18 @@ def run_test (self):\n         assert_equal(address_assert['ismine'], True)\n         assert_equal(address_assert['timestamp'], timestamp)\n \n+        self.log.info(\"Should not import an address with private key if is already imported\")\n+        result = self.nodes[1].importmulti([{\n+            \"scriptPubKey\": {\n+                \"address\": address['address']\n+            },\n+            \"timestamp\": \"now\",\n+            \"keys\": [ self.nodes[0].dumpprivkey(address['address']) ]\n+        }])\n+        assert_equal(result[0]['success'], False)\n+        assert_equal(result[0]['error']['code'], -4)\n+        assert_equal(result[0]['error']['message'], 'The wallet already contains the private key for this address or script')\n+\n         # Address + Private key + watchonly\n         self.log.info(\"Should not import an address with private key and with watchonly\")\n         address = self.nodes[0].validateaddress(self.nodes[0].getnewaddress())"
      }
    ]
  }
]