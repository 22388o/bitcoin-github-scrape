vasild,2020-08-12 14:20:36,"I verified the size of `CAddress` on all Travis platforms - pushed [a patch](https://github.com/vasild/bitcoin/commit/8577879c8917efeb9a2b6da4ff9b39f012c8686b) that prints the sizes of `CAddress` before and after the change. [One result](https://travis-ci.org/github/vasild/bitcoin/jobs/717214074#L3048-L3051), [all results](https://travis-ci.org/github/vasild/bitcoin/builds/717214067)\n",https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-672900892,672900892,
laanwj,2020-08-12 14:46:10,"I guess we store enough addresses in e.g. addrman for this to matter substantially? Might want to add a comment on why this specific ordering of fields is used.\n\nEdit: How does this interact with #19628?",https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-672916299,672916299,
vasild,2020-08-12 15:46:46,"> I guess we store enough addresses in e.g. addrman for this to matter substantially?\n\nI guess this will reduce the memory footprint by a few 100s of KiB. I am not sure if this qualifies for ""substantially"" but the change is simple enough and not risky.\n\n> Might want to add a comment on why this specific ordering of fields is used.\n\nIsn't that too low level and basic to be mentioned? L",https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-672954733,672954733,
laanwj,2020-08-12 16:52:11,"> Isn't that too low level and basic to be mentioned? Like we don't comment every ++it why it was preferred over it++. Maybe also other structs would warrant such comments? I think that every time the order of data members in a struct is considered, padding should be taken into account. But anyway, this is subjective, I will add a comment about it if you feel it is needed.\n\nI agree in that cas",https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-672991224,672991224,
luke-jr,2020-08-14 18:12:32,x86-64*,https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-674199609,674199609,
kristapsk,2020-08-15 15:10:20,"Is this really x86-64 specific, doesn't it reduce CAddress size on other 64-bit archs, like aarch64 or riscv64, too?",https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-674409556,674409556,
laanwj,2020-08-16 15:15:18,"> Is this really x86-64 specific, doesn't it reduce CAddress size on other 64-bit archs, like aarch64 or riscv64, too?\n\nI'd expect this is the same for every architecture that requires 64-bit values to be aligned to 64-bit. \n\nSo practically for every 64-bit architecture.\n",https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-674538934,674538934,
laanwj,2020-08-16 16:44:48,"rv64:\n- without PR: 48\n- with PR: 40\n\nACK 767073fb9645f5cb0976a14288c03fe71912b569",https://github.com/bitcoin/bitcoin/pull/19705#issuecomment-674549299,674549299,
