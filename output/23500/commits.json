[
  {
    "sha": "2de1ceb2e9180d40611a6d32b3a9470c242952e0",
    "node_id": "C_kwDOABII59oAKDJkZTFjZWIyZTkxODBkNDA2MTFhNmQzMmIzYTk0NzBjMjQyOTUyZTA",
    "commit": {
      "author": {
        "name": "Dimitris Apostolou",
        "email": "dimitris.apostolou@icloud.com",
        "date": "2021-11-12T23:43:17Z"
      },
      "committer": {
        "name": "Dimitris Apostolou",
        "email": "dimitris.apostolou@icloud.com",
        "date": "2021-11-13T18:05:56Z"
      },
      "message": "depends, wallet: fix typos",
      "tree": {
        "sha": "8a32ee4e07c398b32ceece5076f1c10267f67cf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a32ee4e07c398b32ceece5076f1c10267f67cf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2de1ceb2e9180d40611a6d32b3a9470c242952e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEVlhaSifRMe/jhtJ8S10g6TggSooFAmGP/oQACgkQS10g6Tgg\nSooRHQ//VazPB/eu1ihx8H5+dh+W1VnPStiuBBnQt+CH2dcCBhsegQlblo2usa5Y\niraL3apqJdqfn9O5SHMA3pvpuJQwUGGMOJIii8EBiVDPTfRhHjSrO5CqCpD6kAgp\nT4nWWboHbm/vL/vvDiQLhSb3c3X8G0xOm/JQI/ofEN4UTEcWJXb4b3QO8tBMdLjF\n9m4UMoz+R4lc72sY1X3aHk0P8MSwWTNxOrWIjq8uWXC/NWuEv8OdiLlKHHGxioKL\n+OF1VgZdGqQBsXhInhBOqDGBMUM0+e6KRfNfx0umTJqi6GWmJAFYKHE3+hFLVRTF\nMSczkgznAuYUFUl/qRyGtKJGdsFxaqqjPZpRipRlWUe4bXTrHkAE0xpq7qbPwMa4\nQgFc5YeqDytNEBFTXn4f7X7aOc21K1MgtrL4VBXZI8zeLYWGvvrbW7cuCCHyypvZ\nSlbsKPJbyZsrZFsiWPMUCfXP2fRw136kBOppEAXsJR2fbeHAS+mZ8T8i0NVwVsFz\n+/Q7aYPYtAZcoFP5LSiCuDooHSBXFkdAqeCsDE/s7xr2UB9sLKw3iFZVSr5GcviT\nf53E//mXFjUj8ya9rd6Ph4/qKfTCVT+St96I0jLdw+cRhO9zwf6LljW/F96NSzmj\nmrP+einoFEmBFvGo1RJF+2DjNrx3BbX4OdMw2MBwksb4SWFlniQ=\n=EhQ7\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a32ee4e07c398b32ceece5076f1c10267f67cf1\nparent 5cc083cd46ad71510f56af957e2e8733c388c6f1\nauthor Dimitris Apostolou <dimitris.apostolou@icloud.com> 1636760597 +0200\ncommitter Dimitris Apostolou <dimitris.apostolou@icloud.com> 1636826756 +0200\n\ndepends, wallet: fix typos\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2de1ceb2e9180d40611a6d32b3a9470c242952e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2de1ceb2e9180d40611a6d32b3a9470c242952e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2de1ceb2e9180d40611a6d32b3a9470c242952e0/comments",
    "author": {
      "login": "rex4539",
      "id": 227442,
      "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rex4539",
      "html_url": "https://github.com/rex4539",
      "followers_url": "https://api.github.com/users/rex4539/followers",
      "following_url": "https://api.github.com/users/rex4539/following{/other_user}",
      "gists_url": "https://api.github.com/users/rex4539/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rex4539/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
      "organizations_url": "https://api.github.com/users/rex4539/orgs",
      "repos_url": "https://api.github.com/users/rex4539/repos",
      "events_url": "https://api.github.com/users/rex4539/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rex4539/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rex4539",
      "id": 227442,
      "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rex4539",
      "html_url": "https://github.com/rex4539",
      "followers_url": "https://api.github.com/users/rex4539/followers",
      "following_url": "https://api.github.com/users/rex4539/following{/other_user}",
      "gists_url": "https://api.github.com/users/rex4539/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rex4539/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
      "organizations_url": "https://api.github.com/users/rex4539/orgs",
      "repos_url": "https://api.github.com/users/rex4539/repos",
      "events_url": "https://api.github.com/users/rex4539/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rex4539/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cc083cd46ad71510f56af957e2e8733c388c6f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cc083cd46ad71510f56af957e2e8733c388c6f1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3dc99cc12157f833c4b133115ead734c3fb62e31",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2de1ceb2e9180d40611a6d32b3a9470c242952e0/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2de1ceb2e9180d40611a6d32b3a9470c242952e0/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=2de1ceb2e9180d40611a6d32b3a9470c242952e0",
        "patch": "@@ -115,7 +115,7 @@ include builders/default.mk\n include packages/packages.mk\n \n # Previously, we directly invoked the well-known programs using $(shell ...)\n-# to contruct build_id_string. However, that was problematic because:\n+# to construct build_id_string. However, that was problematic because:\n #\n # 1. When invoking a shell, GNU Make special-cases exit code 127 (command not\n #    found) by not capturing the output but instead passing it through. This is"
      },
      {
        "sha": "e8b49f12202718400acf51055a18892c2a4fdf16",
        "filename": "src/wallet/test/fuzz/notifications.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2de1ceb2e9180d40611a6d32b3a9470c242952e0/src/wallet/test/fuzz/notifications.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2de1ceb2e9180d40611a6d32b3a9470c242952e0/src/wallet/test/fuzz/notifications.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/fuzz/notifications.cpp?ref=2de1ceb2e9180d40611a6d32b3a9470c242952e0",
        "patch": "@@ -100,7 +100,7 @@ FUZZ_TARGET_INIT(wallet_notifications, initialize_setup)\n     using Coins = std::set<std::tuple<CAmount, COutPoint>>;\n     std::vector<std::tuple<Coins, CBlock>> chain;\n     {\n-        // Add the inital entry\n+        // Add the initial entry\n         chain.emplace_back();\n         auto& [coins, block]{chain.back()};\n         coins.emplace(total_amount, COutPoint{uint256::ONE, 1});"
      },
      {
        "sha": "64799fccdaba0fa285d227f940ba156b9147cc60",
        "filename": "test/functional/wallet_multisig_descriptor_psbt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2de1ceb2e9180d40611a6d32b3a9470c242952e0/test/functional/wallet_multisig_descriptor_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2de1ceb2e9180d40611a6d32b3a9470c242952e0/test/functional/wallet_multisig_descriptor_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multisig_descriptor_psbt.py?ref=2de1ceb2e9180d40611a6d32b3a9470c242952e0",
        "patch": "@@ -85,7 +85,7 @@ def run_test(self):\n             # This wallet will be the participant's `signer` for the resulting multisig. Avoid reusing this wallet for any other purpose (for privacy reasons).\n             \"signers\": [node.get_wallet_rpc(node.createwallet(wallet_name=f\"participant_{self.nodes.index(node)}\", descriptors=True)[\"name\"]) for node in self.nodes],\n             # After participants generate and exchange their xpubs they will each create their own watch-only multisig.\n-            # Note: these multisigs are all the same, this justs highlights that each participant can independently verify everything on their own node.\n+            # Note: these multisigs are all the same, this just highlights that each participant can independently verify everything on their own node.\n             \"multisigs\": []\n         }\n "
      }
    ]
  }
]