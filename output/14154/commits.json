[
  {
    "sha": "e6d375b1c032e3f27352510fa52fdb297d33a353",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmQzNzViMWMwMzJlM2YyNzM1MjUxMGZhNTJmZGIyOTdkMzNhMzUz",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-05T18:38:00Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-05T19:02:36Z"
      },
      "message": "p2p: Return a max of 1000 addrs from CAddrMan::GetAddr\n\nThis is the documented max size for an addr response, and was separately being\nlimited in PushAddress to 1000 via MAX_ADDR_TO_SEND. No point in selecting a\ntoo-large random set then filtering it randomly down to a smaller set.",
      "tree": {
        "sha": "56c239628a606023d9a622ae14fbc8cb653a5c05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56c239628a606023d9a622ae14fbc8cb653a5c05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6d375b1c032e3f27352510fa52fdb297d33a353",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbkChaAAoJEG7l83hfeLNFQHwH/ROoymX6P6WHU0+I0woI2UDb\nIkGrnXsPNMr2BsGD/1jQ2McS7pAQBiMNsh1fTN08HlQSTAIaAWxpyhSEb+Xd5gff\nN0/OexbIGuUWey/ORAP9XvP+Q3704PGcOAsWkPci+Vx+wfuDV7XsoxcEqoHj1VFX\nQebezZoWUDI0oRhD8ei5TEdg4lf5YYvtlzolI2ysrxW5m0e/PUz++STQwh6oPQpe\ncrg0RmBISV3d1hyhqalhNoAh8iWzXfxCP7oxsJ4968qlFpe5zcmWrJ6LJCOcDePa\ncSA0Fd2IdTgqr+lMdFzWllarVbCt+0cGvJ9rjZial0mEYTv4KzA1EndzmZBNUxM=\n=8Gy2\n-----END PGP SIGNATURE-----",
        "payload": "tree 56c239628a606023d9a622ae14fbc8cb653a5c05\nparent 97ccd2b84e7d945bc6a6b38cfc1a63a37519a400\nauthor Ben Woosley <ben.woosley@gmail.com> 1536172680 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1536174156 -0400\n\np2p: Return a max of 1000 addrs from CAddrMan::GetAddr\n\nThis is the documented max size for an addr response, and was separately being\nlimited in PushAddress to 1000 via MAX_ADDR_TO_SEND. No point in selecting a\ntoo-large random set then filtering it randomly down to a smaller set.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6d375b1c032e3f27352510fa52fdb297d33a353",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6d375b1c032e3f27352510fa52fdb297d33a353",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6d375b1c032e3f27352510fa52fdb297d33a353/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97ccd2b84e7d945bc6a6b38cfc1a63a37519a400",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97ccd2b84e7d945bc6a6b38cfc1a63a37519a400",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97ccd2b84e7d945bc6a6b38cfc1a63a37519a400"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8ef0a4bb8951620a8b985ce09b720f8623a7c660",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d375b1c032e3f27352510fa52fdb297d33a353/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d375b1c032e3f27352510fa52fdb297d33a353/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=e6d375b1c032e3f27352510fa52fdb297d33a353",
        "patch": "@@ -172,7 +172,7 @@ class CAddrInfo : public CAddress\n #define ADDRMAN_GETADDR_MAX_PCT 23\n \n //! the maximum number of nodes to return in a getaddr call\n-#define ADDRMAN_GETADDR_MAX 2500\n+#define ADDRMAN_GETADDR_MAX 1000\n \n //! Convenience\n #define ADDRMAN_TRIED_BUCKET_COUNT (1 << ADDRMAN_TRIED_BUCKET_COUNT_LOG2)"
      },
      {
        "sha": "35f23fdf2c2840a99575c375f13444a7c9469599",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6d375b1c032e3f27352510fa52fdb297d33a353/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6d375b1c032e3f27352510fa52fdb297d33a353/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e6d375b1c032e3f27352510fa52fdb297d33a353",
        "patch": "@@ -1757,7 +1757,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n \n             // Get recent addresses\n-            if (pfrom->fOneShot || pfrom->nVersion >= CADDR_TIME_VERSION || connman->GetAddressCount() < 1000)\n+            if (pfrom->fOneShot || pfrom->nVersion >= CADDR_TIME_VERSION || connman->GetAddressCount() < ADDRMAN_GETADDR_MAX)\n             {\n                 connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n                 pfrom->fGetAddr = true;\n@@ -1851,9 +1851,9 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         vRecv >> vAddr;\n \n         // Don't want addr from older versions unless seeding\n-        if (pfrom->nVersion < CADDR_TIME_VERSION && connman->GetAddressCount() > 1000)\n+        if (pfrom->nVersion < CADDR_TIME_VERSION && connman->GetAddressCount() > ADDRMAN_GETADDR_MAX)\n             return true;\n-        if (vAddr.size() > 1000)\n+        if (vAddr.size() > MAX_ADDR_TO_SEND)\n         {\n             LOCK(cs_main);\n             Misbehaving(pfrom->GetId(), 20, strprintf(\"message addr size() = %u\", vAddr.size()));\n@@ -1889,7 +1889,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 vAddrOk.push_back(addr);\n         }\n         connman->AddNewAddresses(vAddrOk, pfrom->addr, 2 * 60 * 60);\n-        if (vAddr.size() < 1000)\n+        if (vAddr.size() < ADDRMAN_GETADDR_MAX)\n             pfrom->fGetAddr = false;\n         if (pfrom->fOneShot)\n             pfrom->fDisconnect = true;"
      }
    ]
  },
  {
    "sha": "68a8acca8e363e076769a4aa17242b9bb05f6e14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGE4YWNjYThlMzYzZTA3Njc2OWE0YWExNzI0MmI5YmIwNWY2ZTE0",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-12T00:45:09Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-16T22:41:27Z"
      },
      "message": "Don't return known addresses from CConnman::GetAddresses\n\nThese addresses are used expressly for sending to a node in response to\nGETADDR, so we may as well skip them over in the lookup soas to return the\nappropriate number.",
      "tree": {
        "sha": "169742684a22ef1c747513bc8405d9505df3fa72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/169742684a22ef1c747513bc8405d9505df3fa72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68a8acca8e363e076769a4aa17242b9bb05f6e14",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbntwaAAoJEG7l83hfeLNFKp8H/iy2lP67wdzj9cr8jYIN41u5\nQUy+fjq3HrTG4lHNoB/IkiYYBA0boIo017Wtv+Xqu29aUBYD725nhe+rY0RH2PKh\nq37vD0wSffJIlLaD/hIK/gGkyMXA/M0vCQHQM92IRpRsDmmR2EWi833U4ptcqlGi\nnUq/kh6UC81Y4CPp57wuQ/L6W+0gFMGIR9KzVi1Bswt8dADTQEuZLU47Xysenj+Q\n+m2Alq3dEw+hUzKYmBcVZwBeG7pZUiHMLTjrgW8lpzF/aSUxdurvMa+n5Iwd5/e6\n0E85TjEBDDG0StTgyW8muNzdF/DHKt128+NqVwXliGatzYzcEyJWDzeh/5oNcg0=\n=VIbM\n-----END PGP SIGNATURE-----",
        "payload": "tree 169742684a22ef1c747513bc8405d9505df3fa72\nparent e6d375b1c032e3f27352510fa52fdb297d33a353\nauthor Ben Woosley <ben.woosley@gmail.com> 1536713109 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1537137687 -0400\n\nDon't return known addresses from CConnman::GetAddresses\n\nThese addresses are used expressly for sending to a node in response to\nGETADDR, so we may as well skip them over in the lookup soas to return the\nappropriate number.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68a8acca8e363e076769a4aa17242b9bb05f6e14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68a8acca8e363e076769a4aa17242b9bb05f6e14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68a8acca8e363e076769a4aa17242b9bb05f6e14/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6d375b1c032e3f27352510fa52fdb297d33a353",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6d375b1c032e3f27352510fa52fdb297d33a353",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6d375b1c032e3f27352510fa52fdb297d33a353"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "902fa4f88741d5a6249c0ced57796644c1873a44",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=68a8acca8e363e076769a4aa17242b9bb05f6e14",
        "patch": "@@ -471,7 +471,7 @@ int CAddrMan::Check_()\n }\n #endif\n \n-void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr)\n+void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, const CRollingBloomFilter& addr_known)\n {\n     unsigned int nNodes = ADDRMAN_GETADDR_MAX_PCT * vRandom.size() / 100;\n     if (nNodes > ADDRMAN_GETADDR_MAX)\n@@ -487,7 +487,7 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr)\n         assert(mapInfo.count(vRandom[n]) == 1);\n \n         const CAddrInfo& ai = mapInfo[vRandom[n]];\n-        if (!ai.IsTerrible())\n+        if (!ai.IsTerrible() && !addr_known.contains(ai.GetKey()))\n             vAddr.push_back(ai);\n     }\n }"
      },
      {
        "sha": "41db526f003964f67c2acda24e1fa3206e1ad92d",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=68a8acca8e363e076769a4aa17242b9bb05f6e14",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_ADDRMAN_H\n #define BITCOIN_ADDRMAN_H\n \n+#include <bloom.h>\n #include <netaddress.h>\n #include <protocol.h>\n #include <random.h>\n@@ -274,7 +275,7 @@ class CAddrMan\n #endif\n \n     //! Select several addresses at once.\n-    void GetAddr_(std::vector<CAddress> &vAddr);\n+    void GetAddr_(std::vector<CAddress> &vAddr, const CRollingBloomFilter& addr_known);\n \n     //! Mark an entry as currently-connected-to.\n     void Connected_(const CService &addr, int64_t nTime);\n@@ -607,13 +608,13 @@ class CAddrMan\n     }\n \n     //! Return a bunch of addresses, selected at random.\n-    std::vector<CAddress> GetAddr()\n+    std::vector<CAddress> GetAddr(const CRollingBloomFilter& addr_known)\n     {\n         Check();\n         std::vector<CAddress> vAddr;\n         {\n             LOCK(cs);\n-            GetAddr_(vAddr);\n+            GetAddr_(vAddr, addr_known);\n         }\n         Check();\n         return vAddr;"
      },
      {
        "sha": "2d4795a8831493f287c55da2462016d9cbf26898",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=68a8acca8e363e076769a4aa17242b9bb05f6e14",
        "patch": "@@ -2499,9 +2499,9 @@ void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddres\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n }\n \n-std::vector<CAddress> CConnman::GetAddresses()\n+std::vector<CAddress> CConnman::GetAddresses(const CRollingBloomFilter& addr_known)\n {\n-    return addrman.GetAddr();\n+    return addrman.GetAddr(addr_known);\n }\n \n bool CConnman::AddNode(const std::string& strNode)"
      },
      {
        "sha": "e6283e1b97b19609e08251ccb0fee2ef86373186",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=68a8acca8e363e076769a4aa17242b9bb05f6e14",
        "patch": "@@ -229,7 +229,7 @@ class CConnman\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n-    std::vector<CAddress> GetAddresses();\n+    std::vector<CAddress> GetAddresses(const CRollingBloomFilter& addr_known);\n \n     // Denial-of-service detection/prevention\n     // The idea is to detect peers that are behaving"
      },
      {
        "sha": "08194b48970db4a1da8a1926e1735125ba35a486",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68a8acca8e363e076769a4aa17242b9bb05f6e14/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=68a8acca8e363e076769a4aa17242b9bb05f6e14",
        "patch": "@@ -2744,9 +2744,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         pfrom->fSentAddr = true;\n \n         pfrom->vAddrToSend.clear();\n-        std::vector<CAddress> vAddr = connman->GetAddresses();\n         FastRandomContext insecure_rand;\n-        for (const CAddress &addr : vAddr)\n+        for (const CAddress &addr : connman->GetAddresses(pfrom->addrKnown))\n             pfrom->PushAddress(addr, insecure_rand);\n         return true;\n     }"
      }
    ]
  }
]