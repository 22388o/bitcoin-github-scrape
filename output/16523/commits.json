[
  {
    "sha": "a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOTViYTJhZGU1NjBiOGRkYjE3NGQ5OTFiNmMwZGMxYjM3OGY4NWU5",
    "commit": {
      "author": {
        "name": "James Lovejoy",
        "email": "jameslovejoy1@gmail.com",
        "date": "2019-07-31T21:32:51Z"
      },
      "committer": {
        "name": "James Lovejoy",
        "email": "jameslovejoy1@gmail.com",
        "date": "2019-08-01T20:21:10Z"
      },
      "message": "Add removemempoolentry RPC which manually removed a transaction and its descendants from the mempool\n\nThis command is useful for testing the behavior of double-spends when iteracting with Core on regtest.\nSince this RPC likely should not be used on livenet, it is hidden from help, similarly to invalidateblock.",
      "tree": {
        "sha": "9230fca97f9580af3e403c5f84d63fc42d042c82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9230fca97f9580af3e403c5f84d63fc42d042c82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/comments",
    "author": {
      "login": "metalicjames",
      "id": 4153717,
      "node_id": "MDQ6VXNlcjQxNTM3MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4153717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metalicjames",
      "html_url": "https://github.com/metalicjames",
      "followers_url": "https://api.github.com/users/metalicjames/followers",
      "following_url": "https://api.github.com/users/metalicjames/following{/other_user}",
      "gists_url": "https://api.github.com/users/metalicjames/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metalicjames/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metalicjames/subscriptions",
      "organizations_url": "https://api.github.com/users/metalicjames/orgs",
      "repos_url": "https://api.github.com/users/metalicjames/repos",
      "events_url": "https://api.github.com/users/metalicjames/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metalicjames/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "metalicjames",
      "id": 4153717,
      "node_id": "MDQ6VXNlcjQxNTM3MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4153717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metalicjames",
      "html_url": "https://github.com/metalicjames",
      "followers_url": "https://api.github.com/users/metalicjames/followers",
      "following_url": "https://api.github.com/users/metalicjames/following{/other_user}",
      "gists_url": "https://api.github.com/users/metalicjames/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metalicjames/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metalicjames/subscriptions",
      "organizations_url": "https://api.github.com/users/metalicjames/orgs",
      "repos_url": "https://api.github.com/users/metalicjames/repos",
      "events_url": "https://api.github.com/users/metalicjames/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metalicjames/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7821821a23b68cc9ec49d69829ad4c939cb762e8"
      }
    ],
    "stats": {
      "total": 98,
      "additions": 98,
      "deletions": 0
    },
    "files": [
      {
        "sha": "45ff3e7094fcf02a02c2fa881ac1090da76a2129",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
        "patch": "@@ -688,6 +688,37 @@ static UniValue getmempoolentry(const JSONRPCRequest& request)\n     return info;\n }\n \n+static UniValue removemempoolentry(const JSONRPCRequest& request)\n+{\n+            RPCHelpMan{\"removemempoolentry\",\n+                \"\\nRemoves a given transaction and its descendants from the mempool\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id (must be in mempool)\"},\n+                },\n+                RPCResult{\n+            \"true              (boolean) Returns true\\n\"\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"removemempoolentry\", \"\\\"mytxid\\\"\")\n+            + HelpExampleRpc(\"removemempoolentry\", \"\\\"mytxid\\\"\")\n+                },\n+            }.Check(request);\n+\n+    uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+\n+    LOCK(mempool.cs);\n+\n+    CTxMemPool::txiter it = mempool.mapTx.find(hash);\n+    if (it == mempool.mapTx.end()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not in mempool\");\n+    }\n+\n+    const CTxMemPoolEntry &e = *it;\n+    mempool.removeRecursive(e.GetTx(), MemPoolRemovalReason::MANUAL);\n+\n+    return true;\n+}\n+\n static UniValue getblockhash(const JSONRPCRequest& request)\n {\n             RPCHelpMan{\"getblockhash\",\n@@ -2346,6 +2377,7 @@ static const CRPCCommand commands[] =\n     { \"hidden\",             \"waitforblock\",           &waitforblock,           {\"blockhash\",\"timeout\"} },\n     { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n     { \"hidden\",             \"syncwithvalidationinterfacequeue\", &syncwithvalidationinterfacequeue, {} },\n+    { \"hidden\",             \"removemempoolentry\",     &removemempoolentry,     {\"txid\"} },\n };\n // clang-format on\n "
      },
      {
        "sha": "24944273f518fc07aaccafd584841d59881d8f5a",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
        "patch": "@@ -351,6 +351,7 @@ enum class MemPoolRemovalReason {\n     BLOCK,       //!< Removed for block\n     CONFLICT,    //!< Removed for conflict with in-block transaction\n     REPLACED,    //!< Removed for replacement\n+    MANUAL,      //!< Removed manually by user\n };\n \n class SaltedTxidHasher"
      },
      {
        "sha": "d272562f41244e16e3b8679fe983de80a3f2c24a",
        "filename": "test/functional/rpc_removemempoolentry.py",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/test/functional/rpc_removemempoolentry.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/test/functional/rpc_removemempoolentry.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_removemempoolentry.py?ref=a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
        "patch": "@@ -0,0 +1,64 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the removemempoolentry RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal, \n+    assert_raises_rpc_error, \n+    assert_greater_than\n+)\n+\n+\n+class MempoolRemoveTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-minrelaytxfee=0\"]]\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Mine some blocks so there are coins to spend\")\n+        beneficiary1 = self.nodes[0].getnewaddress()\n+        self.nodes[0].generatetoaddress(101, beneficiary1)\n+\n+        res = self.nodes[0].listunspent(100, 99999999, [beneficiary1])\n+        outpoint = res[0]\n+\n+        self.log.info(\"Generate and broadcast first transaction\")\n+        beneficiary2 = self.nodes[0].getnewaddress()\n+        res = self.nodes[0].createrawtransaction([{'txid': outpoint['txid'], \n+                                                'vout': outpoint['vout']}], \n+                                                [{beneficiary2: outpoint['amount']}])\n+        res = self.nodes[0].signrawtransactionwithwallet(res)\n+        orig_txid = self.nodes[0].sendrawtransaction(res['hex'])\n+\n+        \n+\n+        self.log.info(\"Generate second transaction, double-spending the first\")\n+        beneficiary3 = self.nodes[0].getnewaddress()\n+        res = self.nodes[0].createrawtransaction([{'txid': outpoint['txid'], \n+                                                'vout': outpoint['vout']}], \n+                                                [{beneficiary3: outpoint['amount']}])\n+        res = self.nodes[0].signrawtransactionwithwallet(res)\n+\n+        self.log.info(\"Check second transaction cannot be added to mempool\")\n+        assert_raises_rpc_error(-26, 'txn-mempool-conflict (code 18)', self.nodes[0].sendrawtransaction, res['hex'])\n+\n+        self.log.info(\"Remove first transaction from mempool\")\n+        assert_equal(self.nodes[0].removemempoolentry(orig_txid), True)\n+        assert_raises_rpc_error(-5, 'Transaction not in mempool', self.nodes[0].removemempoolentry, orig_txid)\n+\n+        self.log.info(\"Send double-spend transaction\")\n+        ds_txid = self.nodes[0].sendrawtransaction(res['hex'])\n+\n+        self.log.info(\"Check double-spend transaction is in the mempool\")\n+        assert_raises_rpc_error(-5, 'Transaction not in mempool', self.nodes[0].getmempoolentry, orig_txid)\n+        assert_greater_than(len(self.nodes[0].getmempoolentry(ds_txid)), 0)\n+\n+if __name__ == '__main__':\n+    MempoolRemoveTest().main()"
      },
      {
        "sha": "b29ba21c54df1b466ffa077ec7510db2bde5956c",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a95ba2ade560b8ddb174d991b6c0dc1b378f85e9/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=a95ba2ade560b8ddb174d991b6c0dc1b378f85e9",
        "patch": "@@ -156,6 +156,7 @@\n     'feature_notifications.py',\n     'rpc_getblockfilter.py',\n     'rpc_invalidateblock.py',\n+    'rpc_removemempoolentry.py',\n     'feature_rbf.py',\n     'mempool_packages.py',\n     'mempool_package_onemore.py',"
      }
    ]
  }
]