[
  {
    "sha": "4147d7413b6337abccda4f69a5694f07d5bfa9b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTQ3ZDc0MTNiNjMzN2FiY2NkYTRmNjlhNTY5NGYwN2Q1YmZhOWIy",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-06T17:23:42Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-06T17:29:12Z"
      },
      "message": "refactor, qt, net: Deduplicate NumConnections enum",
      "tree": {
        "sha": "686daabc6a3d3883d04fcd3ddca3918e483ef75b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/686daabc6a3d3883d04fcd3ddca3918e483ef75b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4147d7413b6337abccda4f69a5694f07d5bfa9b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7b0nYACgkQQQEIES5+\nqB8L8A/9ErFXBAB3c5PjB17iyhm4QOUjaoR3NSO++eqnBCJnrtGCZBB3uceIugC5\n6NnVdlVptWaEPnh5FxR3M2MZSI65HXldx4ywrnKS2EiB575wgu2X3QTZfLh089ib\nvZxJ3O3LX/yu8DJcQN4ZEhbwPovyat2PpmOIiHyxsuxgO03cStNYKIMjY4BTk82I\nZv1yNYy43w7tEjvMvyGIKaNTe7IyJRYrtNPoG9XYeRopAXJNVFs2PT5/cOJDrFo/\niW9cVe9x/WbHnmpQx1uOXuHI/ccB9Mxb+HqO46QW63Ki2C7otA5bN2ownjhata7c\nodA28y5Fw6fC8PiRrx+Py6oJrjcQ8tIXNcIcaXtkCcngLxRLAdmCznsZCG5FOMsO\n5Tm3VKK/MNR+cOtJV/R/uBcCE963GOs+l3dhlqYgMZEfq6lOgvBxXepLRO53qnX2\nBLmf5gs5HbLi8vu6vHKoAUm/e0nOl4csrV27r80ifQf8qzCb9vrhPBK03VLCX0Yv\nJLUSn+7+FEEQf02vUJclgRNkJ2ojcIbNDbARKh6Au2dFfqqVj6oZ64Gea8e0OX+1\n5+Sl9iC0yTLTju7oN6J7n7vB7HngFk7z5IMeg/82S1OenQzsCnA4z2rZ2+3W51ah\nDXbzgnHXzTa7LkvRzfgE8FjvzWzU0xcCv1GWXK6RxKilKiMuMz8=\n=J/W2\n-----END PGP SIGNATURE-----",
        "payload": "tree 686daabc6a3d3883d04fcd3ddca3918e483ef75b\nparent b1b173994406158e5faa3c83b113da9d971ac104\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591464222 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591464552 +0300\n\nrefactor, qt, net: Deduplicate NumConnections enum\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4147d7413b6337abccda4f69a5694f07d5bfa9b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4147d7413b6337abccda4f69a5694f07d5bfa9b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4147d7413b6337abccda4f69a5694f07d5bfa9b2/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1b173994406158e5faa3c83b113da9d971ac104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1b173994406158e5faa3c83b113da9d971ac104",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1b173994406158e5faa3c83b113da9d971ac104"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 13,
      "deletions": 26
    },
    "files": [
      {
        "sha": "6ebcc59544f7a36dbdbb0161d2fb6122203f92a7",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 11,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4147d7413b6337abccda4f69a5694f07d5bfa9b2/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4147d7413b6337abccda4f69a5694f07d5bfa9b2/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=4147d7413b6337abccda4f69a5694f07d5bfa9b2",
        "patch": "@@ -64,18 +64,9 @@ ClientModel::~ClientModel()\n     m_thread->wait();\n }\n \n-int ClientModel::getNumConnections(unsigned int flags) const\n+int ClientModel::getNumConnections(CConnman::NumConnections flags) const\n {\n-    CConnman::NumConnections connections = CConnman::CONNECTIONS_NONE;\n-\n-    if(flags == CONNECTIONS_IN)\n-        connections = CConnman::CONNECTIONS_IN;\n-    else if (flags == CONNECTIONS_OUT)\n-        connections = CConnman::CONNECTIONS_OUT;\n-    else if (flags == CONNECTIONS_ALL)\n-        connections = CConnman::CONNECTIONS_ALL;\n-\n-    return m_node.getNodeCount(connections);\n+    return m_node.getNodeCount(flags);\n }\n \n int ClientModel::getHeaderTipHeight() const"
      },
      {
        "sha": "beaf2986abec2b2a47c2d151c2e77735028ce659",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 12,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4147d7413b6337abccda4f69a5694f07d5bfa9b2/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4147d7413b6337abccda4f69a5694f07d5bfa9b2/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=4147d7413b6337abccda4f69a5694f07d5bfa9b2",
        "patch": "@@ -5,13 +5,15 @@\n #ifndef BITCOIN_QT_CLIENTMODEL_H\n #define BITCOIN_QT_CLIENTMODEL_H\n \n-#include <QObject>\n-#include <QDateTime>\n+#include <net.h>\n+#include <sync.h>\n+#include <uint256.h>\n \n #include <atomic>\n #include <memory>\n-#include <sync.h>\n-#include <uint256.h>\n+\n+#include <QDateTime>\n+#include <QObject>\n \n class BanTableModel;\n class CBlockIndex;\n@@ -35,13 +37,6 @@ enum class BlockSource {\n     NETWORK\n };\n \n-enum NumConnections {\n-    CONNECTIONS_NONE = 0,\n-    CONNECTIONS_IN   = (1U << 0),\n-    CONNECTIONS_OUT  = (1U << 1),\n-    CONNECTIONS_ALL  = (CONNECTIONS_IN | CONNECTIONS_OUT),\n-};\n-\n /** Model for Bitcoin network client. */\n class ClientModel : public QObject\n {\n@@ -57,7 +52,7 @@ class ClientModel : public QObject\n     BanTableModel *getBanTableModel();\n \n     //! Return number of connections, default is in- and outbound (total)\n-    int getNumConnections(unsigned int flags = CONNECTIONS_ALL) const;\n+    int getNumConnections(CConnman::NumConnections flags = CConnman::CONNECTIONS_ALL) const;\n     int getNumBlocks() const;\n     uint256 getBestBlockHash();\n     int getHeaderTipHeight() const;"
      },
      {
        "sha": "ff6cc4c500540b4d06e1dcaf086d3c9c9f9ef975",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4147d7413b6337abccda4f69a5694f07d5bfa9b2/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4147d7413b6337abccda4f69a5694f07d5bfa9b2/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=4147d7413b6337abccda4f69a5694f07d5bfa9b2",
        "patch": "@@ -15,9 +15,10 @@\n #include <qt/walletmodel.h>\n #include <chainparams.h>\n #include <interfaces/node.h>\n+#include <net.h>\n #include <netbase.h>\n-#include <rpc/server.h>\n #include <rpc/client.h>\n+#include <rpc/server.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n \n@@ -843,8 +844,8 @@ void RPCConsole::message(int category, const QString &message, bool html)\n void RPCConsole::updateNetworkState()\n {\n     QString connections = QString::number(clientModel->getNumConnections()) + \" (\";\n-    connections += tr(\"In:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_IN)) + \" / \";\n-    connections += tr(\"Out:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_OUT)) + \")\";\n+    connections += tr(\"In:\") + \" \" + QString::number(clientModel->getNumConnections(CConnman::CONNECTIONS_IN)) + \" / \";\n+    connections += tr(\"Out:\") + \" \" + QString::number(clientModel->getNumConnections(CConnman::CONNECTIONS_OUT)) + \")\";\n \n     if(!clientModel->node().getNetworkActive()) {\n         connections += \" (\" + tr(\"Network activity disabled\") + \")\";"
      }
    ]
  }
]