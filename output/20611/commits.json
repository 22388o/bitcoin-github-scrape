[
  {
    "sha": "fade6195b1c230edd561443637a7bde81c2594a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWRlNjE5NWIxYzIzMGVkZDU2MTQ0MzYzN2E3YmRlODFjMjU5NGE0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:21:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T10:12:08Z"
      },
      "message": "Move TX_MAX_STANDARD_VERSION to policy\n\nAlso remove extraneous whitespace, should be reviewed with --ignore-all-space",
      "tree": {
        "sha": "ddf3818f5417e5e1d381a08d8ba1eb53f4fa1172",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddf3818f5417e5e1d381a08d8ba1eb53f4fa1172"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fade6195b1c230edd561443637a7bde81c2594a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi/1AwAkAHz56BExUWtKEnSSpa2MrbbuGx2vIFDSWMxZ5aTECp9HOpca8FN6ckY\nr7Igcvr1xqophiAQeRSiNkS9eKIb3EkFWNle5AfYoaCGp6MrdDWkpwgkWdn+ZS+L\nzWFDdH0MFMR1Zeu06ZtFvQ+Lw7OnBsQlDs6P/EXsh6YXeBwTkw8RGOwsVOmPLTvo\nZMBL7sVtRsIIaTVRr9iNlxOgR6ND7Y8WyNJtIPr9mfiKVJUw2+OgxgdsOAjuvi8r\n/VFU+raR98ad8jqR27Fb84b2JS+Gw7Hokvg7DQ42maBotjBODT5YJQ6ZEntMAITI\n2AypnNMBAf3l0y7Cjn8b+1cUWYHMPqdn44uoxZh7dU2r6r7UW4YWdGtxLkRfgl6E\nOx5iYMgJ7LH/P61oRQ/CUpo4C2DsGsOxZvm9SdkL/6pqGz1c3y0rWWxM+Wsn9iKj\nAMPHFGYFqVwqSyL7hrVMi1sWeqV02R8Sr2ovTLOB6SzLM+e/GKJ0J7T5vBPFRR+0\nl24rG+dy\n=AcAl\n-----END PGP SIGNATURE-----",
        "payload": "tree ddf3818f5417e5e1d381a08d8ba1eb53f4fa1172\nparent 38176dc66523881d45705fe8f96b9da76ec9981b\nauthor MarcoFalke <falke.marco@gmail.com> 1607595693 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1607595128 +0100\n\nMove TX_MAX_STANDARD_VERSION to policy\n\nAlso remove extraneous whitespace, should be reviewed with --ignore-all-space\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fade6195b1c230edd561443637a7bde81c2594a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fade6195b1c230edd561443637a7bde81c2594a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fade6195b1c230edd561443637a7bde81c2594a4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38176dc66523881d45705fe8f96b9da76ec9981b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38176dc66523881d45705fe8f96b9da76ec9981b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38176dc66523881d45705fe8f96b9da76ec9981b"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 28,
      "deletions": 25
    },
    "files": [
      {
        "sha": "321d62fe4de0c8db1a416049c363683c2d852f9c",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fade6195b1c230edd561443637a7bde81c2594a4/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fade6195b1c230edd561443637a7bde81c2594a4/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=fade6195b1c230edd561443637a7bde81c2594a4",
        "patch": "@@ -11,6 +11,7 @@\n #include <consensus/consensus.h>\n #include <core_io.h>\n #include <key_io.h>\n+#include <policy/policy.h>\n #include <policy/rbf.h>\n #include <primitives/transaction.h>\n #include <script/script.h>\n@@ -196,8 +197,9 @@ static CAmount ExtractAndValidateValue(const std::string& strValue)\n static void MutateTxVersion(CMutableTransaction& tx, const std::string& cmdVal)\n {\n     int64_t newVersion;\n-    if (!ParseInt64(cmdVal, &newVersion) || newVersion < 1 || newVersion > CTransaction::MAX_STANDARD_VERSION)\n+    if (!ParseInt64(cmdVal, &newVersion) || newVersion < 1 || newVersion > TX_MAX_STANDARD_VERSION) {\n         throw std::runtime_error(\"Invalid TX version requested: '\" + cmdVal + \"'\");\n+    }\n \n     tx.nVersion = (int) newVersion;\n }"
      },
      {
        "sha": "8e367d31d093e90582d8f7ed8835e25244165ced",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fade6195b1c230edd561443637a7bde81c2594a4/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fade6195b1c230edd561443637a7bde81c2594a4/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=fade6195b1c230edd561443637a7bde81c2594a4",
        "patch": "@@ -75,7 +75,7 @@ bool IsStandard(const CScript& scriptPubKey, TxoutType& whichType)\n \n bool IsStandardTx(const CTransaction& tx, bool permit_bare_multisig, const CFeeRate& dust_relay_fee, std::string& reason)\n {\n-    if (tx.nVersion > CTransaction::MAX_STANDARD_VERSION || tx.nVersion < 1) {\n+    if (tx.nVersion > TX_MAX_STANDARD_VERSION || tx.nVersion < 1) {\n         reason = \"version\";\n         return false;\n     }"
      },
      {
        "sha": "fc163e958b6819053236800c68b7f5275abc69d8",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 24,
        "deletions": 17,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fade6195b1c230edd561443637a7bde81c2594a4/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fade6195b1c230edd561443637a7bde81c2594a4/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=fade6195b1c230edd561443637a7bde81c2594a4",
        "patch": "@@ -90,25 +90,32 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFee);\n bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFee);\n \n bool IsStandard(const CScript& scriptPubKey, TxoutType& whichType);\n-    /**\n-     * Check for standard transaction types\n-     * @return True if all outputs (scriptPubKeys) use only standard transaction forms\n-     */\n+\n+\n+// Changing the default transaction version requires a two step process: first\n+// adapting relay policy by bumping TX_MAX_STANDARD_VERSION, and then later\n+// allowing the new transaction version in the wallet/RPC.\n+static constexpr decltype(CTransaction::nVersion) TX_MAX_STANDARD_VERSION{2};\n+\n+/**\n+* Check for standard transaction types\n+* @return True if all outputs (scriptPubKeys) use only standard transaction forms\n+*/\n bool IsStandardTx(const CTransaction& tx, bool permit_bare_multisig, const CFeeRate& dust_relay_fee, std::string& reason);\n-    /**\n-     * Check for standard transaction types\n-     * @param[in] mapInputs       Map of previous transactions that have outputs we're spending\n-     * @param[in] taproot_active  Whether or taproot consensus rules are active (used to decide whether spends of them are permitted)\n-     * @return True if all inputs (scriptSigs) use only standard transaction forms\n-     */\n+/**\n+* Check for standard transaction types\n+* @param[in] mapInputs       Map of previous transactions that have outputs we're spending\n+* @param[in] taproot_active  Whether or taproot consensus rules are active (used to decide whether spends of them are permitted)\n+* @return True if all inputs (scriptSigs) use only standard transaction forms\n+*/\n bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs, bool taproot_active);\n-    /**\n-     * Check if the transaction is over standard P2WSH resources limit:\n-     * 3600bytes witnessScript size, 80bytes per witness stack element, 100 witness stack elements\n-     * These limits are adequate for multisignatures up to n-of-100 using OP_CHECKSIG, OP_ADD, and OP_EQUAL.\n-     *\n-     * Also enforce a maximum stack item size limit and no annexes for tapscript spends.\n-     */\n+/**\n+* Check if the transaction is over standard P2WSH resources limit:\n+* 3600bytes witnessScript size, 80bytes per witness stack element, 100 witness stack elements\n+* These limits are adequate for multisignatures up to n-of-100 using OP_CHECKSIG, OP_ADD, and OP_EQUAL.\n+*\n+* Also enforce a maximum stack item size limit and no annexes for tapscript spends.\n+*/\n bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs);\n \n /** Compute the virtual transaction size (weight reinterpreted as bytes). */"
      },
      {
        "sha": "0528be772238b854b4354e56da1475061d8979d1",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fade6195b1c230edd561443637a7bde81c2594a4/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fade6195b1c230edd561443637a7bde81c2594a4/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=fade6195b1c230edd561443637a7bde81c2594a4",
        "patch": "@@ -262,12 +262,6 @@ class CTransaction\n     // Default transaction version.\n     static const int32_t CURRENT_VERSION=2;\n \n-    // Changing the default transaction version requires a two step process: first\n-    // adapting relay policy by bumping MAX_STANDARD_VERSION, and then later date\n-    // bumping the default CURRENT_VERSION at which point both CURRENT_VERSION and\n-    // MAX_STANDARD_VERSION will be equal.\n-    static const int32_t MAX_STANDARD_VERSION=2;\n-\n     // The local variables are made const to prevent unintended modification\n     // without updating the cached hash value. However, CTransaction is not\n     // actually immutable; deserialization and assignment are implemented,"
      }
    ]
  }
]