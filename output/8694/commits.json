[
  {
    "sha": "f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjhlYjgwMjBlM2JiMzQxZTdmMTZjNmJmOTNkYTdlOTJjODJlYzk0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-03-09T20:29:01Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T21:04:42Z"
      },
      "message": "Bugfix: wallet: Increment \"update counter\" only after actually making the applicable db changes to avoid potential races\n\nAlso does all \"update counter\" access via IncrementUpdateCounter",
      "tree": {
        "sha": "ec6ab61e235bcd4cf0d3cdda2bf517ed6590db9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec6ab61e235bcd4cf0d3cdda2bf517ed6590db9f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fec4da0bec93a49798b5f5e92cf76e900759ee4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fec4da0bec93a49798b5f5e92cf76e900759ee4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fec4da0bec93a49798b5f5e92cf76e900759ee4"
      }
    ],
    "stats": {
      "total": 99,
      "additions": 50,
      "deletions": 49
    },
    "files": [
      {
        "sha": "3015d6b96335bebb725fdad1e6b37a0d60449867",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 49,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
        "patch": "@@ -32,47 +32,39 @@ static std::atomic<unsigned int> nWalletDBUpdateCounter;\n \n bool CWalletDB::WriteName(const std::string& strAddress, const std::string& strName)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::make_pair(std::string(\"name\"), strAddress), strName);\n+    return WriteIC(std::make_pair(std::string(\"name\"), strAddress), strName);\n }\n \n bool CWalletDB::EraseName(const std::string& strAddress)\n {\n     // This should only be used for sending addresses, never for receiving addresses,\n     // receiving addresses must always have an address book entry if they're not change return.\n-    nWalletDBUpdateCounter++;\n-    return batch.Erase(std::make_pair(std::string(\"name\"), strAddress));\n+    return EraseIC(std::make_pair(std::string(\"name\"), strAddress));\n }\n \n bool CWalletDB::WritePurpose(const std::string& strAddress, const std::string& strPurpose)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::make_pair(std::string(\"purpose\"), strAddress), strPurpose);\n+    return WriteIC(std::make_pair(std::string(\"purpose\"), strAddress), strPurpose);\n }\n \n bool CWalletDB::ErasePurpose(const std::string& strPurpose)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Erase(std::make_pair(std::string(\"purpose\"), strPurpose));\n+    return EraseIC(std::make_pair(std::string(\"purpose\"), strPurpose));\n }\n \n bool CWalletDB::WriteTx(const CWalletTx& wtx)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::make_pair(std::string(\"tx\"), wtx.GetHash()), wtx);\n+    return WriteIC(std::make_pair(std::string(\"tx\"), wtx.GetHash()), wtx);\n }\n \n bool CWalletDB::EraseTx(uint256 hash)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Erase(std::make_pair(std::string(\"tx\"), hash));\n+    return EraseIC(std::make_pair(std::string(\"tx\"), hash));\n }\n \n bool CWalletDB::WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata& keyMeta)\n {\n-    nWalletDBUpdateCounter++;\n-\n-    if (!batch.Write(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n+    if (!WriteIC(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n                keyMeta, false))\n         return false;\n \n@@ -82,63 +74,58 @@ bool CWalletDB::WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, c\n     vchKey.insert(vchKey.end(), vchPubKey.begin(), vchPubKey.end());\n     vchKey.insert(vchKey.end(), vchPrivKey.begin(), vchPrivKey.end());\n \n-    return batch.Write(std::make_pair(std::string(\"key\"), vchPubKey), std::make_pair(vchPrivKey, Hash(vchKey.begin(), vchKey.end())), false);\n+    return WriteIC(std::make_pair(std::string(\"key\"), vchPubKey), std::make_pair(vchPrivKey, Hash(vchKey.begin(), vchKey.end())), false);\n }\n \n bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n                                 const std::vector<unsigned char>& vchCryptedSecret,\n                                 const CKeyMetadata &keyMeta)\n {\n     const bool fEraseUnencryptedKey = true;\n-    nWalletDBUpdateCounter++;\n \n-    if (!batch.Write(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n+    if (!WriteIC(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n             keyMeta))\n         return false;\n \n-    if (!batch.Write(std::make_pair(std::string(\"ckey\"), vchPubKey), vchCryptedSecret, false))\n+    if (!WriteIC(std::make_pair(std::string(\"ckey\"), vchPubKey), vchCryptedSecret, false))\n         return false;\n     if (fEraseUnencryptedKey)\n     {\n-        batch.Erase(std::make_pair(std::string(\"key\"), vchPubKey));\n-        batch.Erase(std::make_pair(std::string(\"wkey\"), vchPubKey));\n+        EraseIC(std::make_pair(std::string(\"key\"), vchPubKey));\n+        EraseIC(std::make_pair(std::string(\"wkey\"), vchPubKey));\n     }\n+\n     return true;\n }\n \n bool CWalletDB::WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::make_pair(std::string(\"mkey\"), nID), kMasterKey, true);\n+    return WriteIC(std::make_pair(std::string(\"mkey\"), nID), kMasterKey, true);\n }\n \n bool CWalletDB::WriteCScript(const uint160& hash, const CScript& redeemScript)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::make_pair(std::string(\"cscript\"), hash), *(const CScriptBase*)(&redeemScript), false);\n+    return WriteIC(std::make_pair(std::string(\"cscript\"), hash), *(const CScriptBase*)(&redeemScript), false);\n }\n \n bool CWalletDB::WriteWatchOnly(const CScript &dest, const CKeyMetadata& keyMeta)\n {\n-    nWalletDBUpdateCounter++;\n-    if (!batch.Write(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest)), keyMeta))\n+    if (!WriteIC(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest)), keyMeta))\n         return false;\n-    return batch.Write(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)), '1');\n+    return WriteIC(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)), '1');\n }\n \n bool CWalletDB::EraseWatchOnly(const CScript &dest)\n {\n-    nWalletDBUpdateCounter++;\n-    if (!batch.Erase(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest))))\n+    if (!EraseIC(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest))))\n         return false;\n-    return batch.Erase(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)));\n+    return EraseIC(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)));\n }\n \n bool CWalletDB::WriteBestBlock(const CBlockLocator& locator)\n {\n-    nWalletDBUpdateCounter++;\n-    batch.Write(std::string(\"bestblock\"), CBlockLocator()); // Write empty block locator so versions that require a merkle branch automatically rescan\n-    return batch.Write(std::string(\"bestblock_nomerkle\"), locator);\n+    WriteIC(std::string(\"bestblock\"), CBlockLocator()); // Write empty block locator so versions that require a merkle branch automatically rescan\n+    return WriteIC(std::string(\"bestblock_nomerkle\"), locator);\n }\n \n bool CWalletDB::ReadBestBlock(CBlockLocator& locator)\n@@ -149,14 +136,12 @@ bool CWalletDB::ReadBestBlock(CBlockLocator& locator)\n \n bool CWalletDB::WriteOrderPosNext(int64_t nOrderPosNext)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::string(\"orderposnext\"), nOrderPosNext);\n+    return WriteIC(std::string(\"orderposnext\"), nOrderPosNext);\n }\n \n bool CWalletDB::WriteDefaultKey(const CPubKey& vchPubKey)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::string(\"defaultkey\"), vchPubKey);\n+    return WriteIC(std::string(\"defaultkey\"), vchPubKey);\n }\n \n bool CWalletDB::ReadPool(int64_t nPool, CKeyPool& keypool)\n@@ -166,19 +151,17 @@ bool CWalletDB::ReadPool(int64_t nPool, CKeyPool& keypool)\n \n bool CWalletDB::WritePool(int64_t nPool, const CKeyPool& keypool)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::make_pair(std::string(\"pool\"), nPool), keypool);\n+    return WriteIC(std::make_pair(std::string(\"pool\"), nPool), keypool);\n }\n \n bool CWalletDB::ErasePool(int64_t nPool)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Erase(std::make_pair(std::string(\"pool\"), nPool));\n+    return EraseIC(std::make_pair(std::string(\"pool\"), nPool));\n }\n \n bool CWalletDB::WriteMinVersion(int nVersion)\n {\n-    return batch.Write(std::string(\"minversion\"), nVersion);\n+    return WriteIC(std::string(\"minversion\"), nVersion);\n }\n \n bool CWalletDB::ReadAccount(const std::string& strAccount, CAccount& account)\n@@ -854,21 +837,18 @@ bool CWalletDB::VerifyDatabaseFile(const std::string& walletFile, const fs::path\n \n bool CWalletDB::WriteDestData(const std::string &address, const std::string &key, const std::string &value)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)), value);\n+    return WriteIC(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)), value);\n }\n \n bool CWalletDB::EraseDestData(const std::string &address, const std::string &key)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Erase(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)));\n+    return EraseIC(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)));\n }\n \n \n bool CWalletDB::WriteHDChain(const CHDChain& chain)\n {\n-    nWalletDBUpdateCounter++;\n-    return batch.Write(std::string(\"hdchain\"), chain);\n+    return WriteIC(std::string(\"hdchain\"), chain);\n }\n \n void CWalletDB::IncrementUpdateCounter()"
      },
      {
        "sha": "0fafdb6a1b4a9a7cf4d91eab5c8de71d5062630f",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
        "patch": "@@ -140,6 +140,27 @@ class CKeyMetadata\n  */\n class CWalletDB\n {\n+private:\n+    template <typename K, typename T>\n+    bool WriteIC(const K& key, const T& value, bool fOverwrite = true)\n+    {\n+        if (!batch.Write(key, value, fOverwrite)) {\n+            return false;\n+        }\n+        IncrementUpdateCounter();\n+        return true;\n+    }\n+\n+    template <typename K>\n+    bool EraseIC(const K& key)\n+    {\n+        if (!batch.Erase(key)) {\n+            return false;\n+        }\n+        IncrementUpdateCounter();\n+        return true;\n+    }\n+\n public:\n     CWalletDB(CWalletDBWrapper& dbw, const char* pszMode = \"r+\", bool _fFlushOnClose = true) :\n         batch(dbw, pszMode, _fFlushOnClose)"
      }
    ]
  },
  {
    "sha": "9d15d5548d375e7841e0505cdcf4ddcf11591994",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDE1ZDU1NDhkMzc1ZTc4NDFlMDUwNWNkY2Y0ZGRjZjExNTkxOTk0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-03-09T20:30:31Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T21:04:42Z"
      },
      "message": "Bugfix: wallet: Increment \"update counter\" when modifying account stuff",
      "tree": {
        "sha": "1be550e6f00f1236efebc3f13710625f8cafd648",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1be550e6f00f1236efebc3f13710625f8cafd648"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d15d5548d375e7841e0505cdcf4ddcf11591994",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d15d5548d375e7841e0505cdcf4ddcf11591994",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d15d5548d375e7841e0505cdcf4ddcf11591994",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d15d5548d375e7841e0505cdcf4ddcf11591994/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f28eb8020e3bb341e7f16c6bf93da7e92c82ec94"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f0d7f44ec0ad868d9481e43075d364cfe82e3cad",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d15d5548d375e7841e0505cdcf4ddcf11591994/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d15d5548d375e7841e0505cdcf4ddcf11591994/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=9d15d5548d375e7841e0505cdcf4ddcf11591994",
        "patch": "@@ -172,12 +172,12 @@ bool CWalletDB::ReadAccount(const std::string& strAccount, CAccount& account)\n \n bool CWalletDB::WriteAccount(const std::string& strAccount, const CAccount& account)\n {\n-    return batch.Write(std::make_pair(std::string(\"acc\"), strAccount), account);\n+    return WriteIC(std::make_pair(std::string(\"acc\"), strAccount), account);\n }\n \n bool CWalletDB::WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry)\n {\n-    return batch.Write(std::make_pair(std::string(\"acentry\"), std::make_pair(acentry.strAccount, nAccEntryNum)), acentry);\n+    return WriteIC(std::make_pair(std::string(\"acentry\"), std::make_pair(acentry.strAccount, nAccEntryNum)), acentry);\n }\n \n bool CWalletDB::WriteAccountingEntry_Backend(const CAccountingEntry& acentry)"
      }
    ]
  },
  {
    "sha": "23fb9adaea01c7baece6e1269e65713571088c5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2ZiOWFkYWVhMDFjN2JhZWNlNmUxMjY5ZTY1NzEzNTcxMDg4YzVm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-03-09T20:11:36Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T21:04:42Z"
      },
      "message": "wallet: Move nAccountingEntryNumber from static/global to CWallet",
      "tree": {
        "sha": "a5d502424da92afc409064d65627fcacc6cb8d20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5d502424da92afc409064d65627fcacc6cb8d20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23fb9adaea01c7baece6e1269e65713571088c5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23fb9adaea01c7baece6e1269e65713571088c5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23fb9adaea01c7baece6e1269e65713571088c5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23fb9adaea01c7baece6e1269e65713571088c5f/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d15d5548d375e7841e0505cdcf4ddcf11591994",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d15d5548d375e7841e0505cdcf4ddcf11591994",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d15d5548d375e7841e0505cdcf4ddcf11591994"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 6,
      "deletions": 11
    },
    "files": [
      {
        "sha": "547daf5c6238e018a9e95cbf4549459a7f62ba66",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=23fb9adaea01c7baece6e1269e65713571088c5f",
        "patch": "@@ -2871,7 +2871,7 @@ bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry)\n \n bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry, CWalletDB *pwalletdb)\n {\n-    if (!pwalletdb->WriteAccountingEntry_Backend(acentry))\n+    if (!pwalletdb->WriteAccountingEntry(++nAccountingEntryNumber, acentry))\n         return false;\n \n     laccentries.push_back(acentry);"
      },
      {
        "sha": "6236b5e560daa552f06388a56a9cd36ab91e8e53",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=23fb9adaea01c7baece6e1269e65713571088c5f",
        "patch": "@@ -785,6 +785,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n         nMasterKeyMaxID = 0;\n         pwalletdbEncryption = NULL;\n         nOrderPosNext = 0;\n+        nAccountingEntryNumber = 0;\n         nNextResend = 0;\n         nLastResend = 0;\n         nTimeFirstKey = 0;\n@@ -802,6 +803,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     TxItems wtxOrdered;\n \n     int64_t nOrderPosNext;\n+    uint64_t nAccountingEntryNumber;\n     std::map<uint256, int> mapRequestCount;\n \n     std::map<CTxDestination, CAddressBookData> mapAddressBook;"
      },
      {
        "sha": "75dbb2edffe4434f406ae3f4b32aa8e7d5a894ba",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=23fb9adaea01c7baece6e1269e65713571088c5f",
        "patch": "@@ -22,8 +22,6 @@\n #include <boost/foreach.hpp>\n #include <boost/thread.hpp>\n \n-static uint64_t nAccountingEntryNumber = 0;\n-\n static std::atomic<unsigned int> nWalletDBUpdateCounter;\n \n //\n@@ -180,11 +178,6 @@ bool CWalletDB::WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccount\n     return WriteIC(std::make_pair(std::string(\"acentry\"), std::make_pair(acentry.strAccount, nAccEntryNum)), acentry);\n }\n \n-bool CWalletDB::WriteAccountingEntry_Backend(const CAccountingEntry& acentry)\n-{\n-    return WriteAccountingEntry(++nAccountingEntryNumber, acentry);\n-}\n-\n CAmount CWalletDB::GetAccountCreditDebit(const std::string& strAccount)\n {\n     std::list<CAccountingEntry> entries;\n@@ -321,8 +314,9 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssKey >> strAccount;\n             uint64_t nNumber;\n             ssKey >> nNumber;\n-            if (nNumber > nAccountingEntryNumber)\n-                nAccountingEntryNumber = nNumber;\n+            if (nNumber > pwallet->nAccountingEntryNumber) {\n+                pwallet->nAccountingEntryNumber = nNumber;\n+            }\n \n             if (!wss.fAnyUnordered)\n             {"
      },
      {
        "sha": "5f9aec9afdbfc275e0788aba7119091718aaa8b3",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fb9adaea01c7baece6e1269e65713571088c5f/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=23fb9adaea01c7baece6e1269e65713571088c5f",
        "patch": "@@ -201,7 +201,6 @@ class CWalletDB\n     /// This writes directly to the database, and will not update the CWallet's cached accounting entries!\n     /// Use wallet.AddAccountingEntry instead, to write *and* update its caches.\n     bool WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry);\n-    bool WriteAccountingEntry_Backend(const CAccountingEntry& acentry);\n     bool ReadAccount(const std::string& strAccount, CAccount& account);\n     bool WriteAccount(const std::string& strAccount, const CAccount& account);\n "
      }
    ]
  },
  {
    "sha": "74e87389616ce1147c65f0e49f3d84b817693ac6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGU4NzM4OTYxNmNlMTE0N2M2NWYwZTQ5ZjNkODRiODE3NjkzYWM2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-01-03T20:33:55Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T21:04:42Z"
      },
      "message": "Bugfix: ForceSetArg should replace entr(ies) in mapMultiArgs, not append",
      "tree": {
        "sha": "5cb384819ed19322238fd6bf72f7c19a6512bf88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5cb384819ed19322238fd6bf72f7c19a6512bf88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74e87389616ce1147c65f0e49f3d84b817693ac6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e87389616ce1147c65f0e49f3d84b817693ac6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74e87389616ce1147c65f0e49f3d84b817693ac6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e87389616ce1147c65f0e49f3d84b817693ac6/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23fb9adaea01c7baece6e1269e65713571088c5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23fb9adaea01c7baece6e1269e65713571088c5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23fb9adaea01c7baece6e1269e65713571088c5f"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "745c3e3bc08f51ce5b5ef6da14ff261a6b1d19f6",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74e87389616ce1147c65f0e49f3d84b817693ac6/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74e87389616ce1147c65f0e49f3d84b817693ac6/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=74e87389616ce1147c65f0e49f3d84b817693ac6",
        "patch": "@@ -477,6 +477,7 @@ void ArgsManager::ForceSetArg(const std::string& strArg, const std::string& strV\n {\n     LOCK(cs_args);\n     mapArgs[strArg] = strValue;\n+    mapMultiArgs[strArg].clear();\n     mapMultiArgs[strArg].push_back(strValue);\n }\n "
      }
    ]
  },
  {
    "sha": "19b3648bb52d27c3a9674159d71726b73fe532d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWIzNjQ4YmI1MmQyN2MzYTk2NzQxNTlkNzE3MjZiNzNmZTUzMmQ5",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-03-09T20:56:58Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T22:27:57Z"
      },
      "message": "CWalletDB: Store the update counter per wallet",
      "tree": {
        "sha": "06736b4b84033fdffe3e820a1d1ab40fa91b14ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06736b4b84033fdffe3e820a1d1ab40fa91b14ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19b3648bb52d27c3a9674159d71726b73fe532d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19b3648bb52d27c3a9674159d71726b73fe532d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19b3648bb52d27c3a9674159d71726b73fe532d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19b3648bb52d27c3a9674159d71726b73fe532d9/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74e87389616ce1147c65f0e49f3d84b817693ac6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e87389616ce1147c65f0e49f3d84b817693ac6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74e87389616ce1147c65f0e49f3d84b817693ac6"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 29,
      "deletions": 26
    },
    "files": [
      {
        "sha": "7e1b94ffa4c4bf4a4d926428cd1529527b55bb97",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=19b3648bb52d27c3a9674159d71726b73fe532d9",
        "patch": "@@ -434,6 +434,16 @@ void CDB::Flush()\n     env->dbenv->txn_checkpoint(nMinutes ? GetArg(\"-dblogsize\", DEFAULT_WALLET_DBLOGSIZE) * 1024 : 0, nMinutes, 0);\n }\n \n+void CWalletDBWrapper::IncrementUpdateCounter()\n+{\n+    ++nUpdateCounter;\n+}\n+\n+unsigned int CWalletDBWrapper::GetUpdateCounter()\n+{\n+    return nUpdateCounter.load();\n+}\n+\n void CDB::Close()\n {\n     if (!pdb)"
      },
      {
        "sha": "1a583c3ce991e61ff0e1d45714609c0477e92c1c",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=19b3648bb52d27c3a9674159d71726b73fe532d9",
        "patch": "@@ -119,10 +119,14 @@ class CWalletDBWrapper\n      */\n     void Flush(bool shutdown);\n \n+    void IncrementUpdateCounter();\n+    unsigned int GetUpdateCounter();\n+\n private:\n     /** BerkeleyDB specific */\n     CDBEnv *env;\n     std::string strFile;\n+    std::atomic<unsigned int> nUpdateCounter;\n \n     /** Return whether this database handle is a dummy for testing.\n      * Only to be used at a low level, application should ideally not care"
      },
      {
        "sha": "9d49b72308dd5aa00f648ba9161b86a3e044c6ab",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=19b3648bb52d27c3a9674159d71726b73fe532d9",
        "patch": "@@ -3884,7 +3884,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         walletInstance->ScanForWalletTransactions(pindexRescan, true);\n         LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n         walletInstance->SetBestChain(chainActive.GetLocator());\n-        CWalletDB::IncrementUpdateCounter();\n+        walletInstance->dbw->IncrementUpdateCounter();\n \n         // Restore wallet transaction metadata after -zapwallettxes=1\n         if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")"
      },
      {
        "sha": "149d0e0c2060de5c5c5d4582d1177c2016e20e0e",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 19,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=19b3648bb52d27c3a9674159d71726b73fe532d9",
        "patch": "@@ -22,8 +22,6 @@\n #include <boost/foreach.hpp>\n #include <boost/thread.hpp>\n \n-static std::atomic<unsigned int> nWalletDBUpdateCounter;\n-\n //\n // CWalletDB\n //\n@@ -762,20 +760,22 @@ void MaybeCompactWalletDB()\n         return;\n     }\n \n-    static unsigned int nLastSeen = CWalletDB::GetUpdateCounter();\n-    static unsigned int nLastFlushed = CWalletDB::GetUpdateCounter();\n+    CWalletDBWrapper& dbh = pwalletMain->GetDBHandle();\n+\n+    static unsigned int nLastSeen = dbh.GetUpdateCounter();\n+    static unsigned int nLastFlushed = dbh.GetUpdateCounter();\n     static int64_t nLastWalletUpdate = GetTime();\n \n-    if (nLastSeen != CWalletDB::GetUpdateCounter())\n+    if (nLastSeen != dbh.GetUpdateCounter())\n     {\n-        nLastSeen = CWalletDB::GetUpdateCounter();\n+        nLastSeen = dbh.GetUpdateCounter();\n         nLastWalletUpdate = GetTime();\n     }\n \n-    if (nLastFlushed != CWalletDB::GetUpdateCounter() && GetTime() - nLastWalletUpdate >= 2)\n+    if (nLastFlushed != dbh.GetUpdateCounter() && GetTime() - nLastWalletUpdate >= 2)\n     {\n-        if (CDB::PeriodicFlush(pwalletMain->GetDBHandle())) {\n-            nLastFlushed = CWalletDB::GetUpdateCounter();\n+        if (CDB::PeriodicFlush(dbh)) {\n+            nLastFlushed = dbh.GetUpdateCounter();\n         }\n     }\n     fOneThread = false;\n@@ -845,16 +845,6 @@ bool CWalletDB::WriteHDChain(const CHDChain& chain)\n     return WriteIC(std::string(\"hdchain\"), chain);\n }\n \n-void CWalletDB::IncrementUpdateCounter()\n-{\n-    nWalletDBUpdateCounter++;\n-}\n-\n-unsigned int CWalletDB::GetUpdateCounter()\n-{\n-    return nWalletDBUpdateCounter;\n-}\n-\n bool CWalletDB::TxnBegin()\n {\n     return batch.TxnBegin();"
      },
      {
        "sha": "64cebd4330d341def98eceee4b5276e78cf00c12",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19b3648bb52d27c3a9674159d71726b73fe532d9/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=19b3648bb52d27c3a9674159d71726b73fe532d9",
        "patch": "@@ -147,7 +147,7 @@ class CWalletDB\n         if (!batch.Write(key, value, fOverwrite)) {\n             return false;\n         }\n-        IncrementUpdateCounter();\n+        m_dbw.IncrementUpdateCounter();\n         return true;\n     }\n \n@@ -157,13 +157,14 @@ class CWalletDB\n         if (!batch.Erase(key)) {\n             return false;\n         }\n-        IncrementUpdateCounter();\n+        m_dbw.IncrementUpdateCounter();\n         return true;\n     }\n \n public:\n     CWalletDB(CWalletDBWrapper& dbw, const char* pszMode = \"r+\", bool _fFlushOnClose = true) :\n-        batch(dbw, pszMode, _fFlushOnClose)\n+        batch(dbw, pszMode, _fFlushOnClose),\n+        m_dbw(dbw)\n     {\n     }\n \n@@ -232,9 +233,6 @@ class CWalletDB\n     //! write the hdchain model (external chain child index counter)\n     bool WriteHDChain(const CHDChain& chain);\n \n-    static void IncrementUpdateCounter();\n-    static unsigned int GetUpdateCounter();\n-\n     //! Begin a new transaction\n     bool TxnBegin();\n     //! Commit current transaction\n@@ -247,6 +245,7 @@ class CWalletDB\n     bool WriteVersion(int nVersion);\n private:\n     CDB batch;\n+    CWalletDBWrapper& m_dbw;\n \n     CWalletDB(const CWalletDB&);\n     void operator=(const CWalletDB&);"
      }
    ]
  },
  {
    "sha": "b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTI0Y2YwNGVhNDdlMWVkYTYwYmJjMjZhOTY5MGE5NzE1YzZiMjNm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-09-09T08:42:30Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:17:09Z"
      },
      "message": "Wallet: Replace pwalletMain with a vector of wallet pointers",
      "tree": {
        "sha": "a6efe783bcbcf8b37736d20de0aa365ae352e161",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6efe783bcbcf8b37736d20de0aa365ae352e161"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19b3648bb52d27c3a9674159d71726b73fe532d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19b3648bb52d27c3a9674159d71726b73fe532d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19b3648bb52d27c3a9674159d71726b73fe532d9"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 51,
      "deletions": 45
    },
    "files": [
      {
        "sha": "cc630d7337188f6260eb8ca3a0a3d331c1daa240",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -198,8 +198,9 @@ void Shutdown()\n     StopRPC();\n     StopHTTPServer();\n #ifdef ENABLE_WALLET\n-    if (pwalletMain)\n-        pwalletMain->Flush(false);\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->Flush(false);\n+    }\n #endif\n     MapPort(false);\n     UnregisterValidationInterface(peerLogic.get());\n@@ -239,8 +240,9 @@ void Shutdown()\n         pblocktree = NULL;\n     }\n #ifdef ENABLE_WALLET\n-    if (pwalletMain)\n-        pwalletMain->Flush(true);\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->Flush(true);\n+    }\n #endif\n \n #if ENABLE_ZMQ\n@@ -260,8 +262,10 @@ void Shutdown()\n #endif\n     UnregisterAllValidationInterfaces();\n #ifdef ENABLE_WALLET\n-    delete pwalletMain;\n-    pwalletMain = NULL;\n+    for (CWalletRef pwallet : vpwallets) {\n+        delete pwallet;\n+    }\n+    vpwallets.clear();\n #endif\n     globalVerifyHandle.reset();\n     ECC_Stop();\n@@ -1673,8 +1677,9 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     uiInterface.InitMessage(_(\"Done loading\"));\n \n #ifdef ENABLE_WALLET\n-    if (pwalletMain)\n-        pwalletMain->postInitProcess(scheduler);\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->postInitProcess(scheduler);\n+    }\n #endif\n \n     return !fRequestShutdown;"
      },
      {
        "sha": "6d8760c0713aa48983500118d0941db933b4ae80",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -474,9 +474,10 @@ void BitcoinApplication::initializeResult(bool success)\n         window->setClientModel(clientModel);\n \n #ifdef ENABLE_WALLET\n-        if(pwalletMain)\n+        // TODO: Expose secondary wallets\n+        if (!vpwallets.empty())\n         {\n-            walletModel = new WalletModel(platformStyle, pwalletMain, optionsModel);\n+            walletModel = new WalletModel(platformStyle, vpwallets[0], optionsModel);\n \n             window->addWallet(BitcoinGUI::DEFAULT_WALLET, walletModel);\n             window->setCurrentWallet(BitcoinGUI::DEFAULT_WALLET);"
      },
      {
        "sha": "906cc809bf0b43307a0e2ef17688e557755b2378",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -439,11 +439,6 @@ void CWalletDBWrapper::IncrementUpdateCounter()\n     ++nUpdateCounter;\n }\n \n-unsigned int CWalletDBWrapper::GetUpdateCounter()\n-{\n-    return nUpdateCounter.load();\n-}\n-\n void CDB::Close()\n {\n     if (!pdb)"
      },
      {
        "sha": "a2ede99d1ba2901beb28829a5ab805b38ca77b9a",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -93,13 +93,13 @@ class CWalletDBWrapper\n     friend class CDB;\n public:\n     /** Create dummy DB handle */\n-    CWalletDBWrapper(): env(nullptr)\n+    CWalletDBWrapper() : nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(nullptr)\n     {\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in):\n-        env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n+        nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n     {\n     }\n \n@@ -120,13 +120,16 @@ class CWalletDBWrapper\n     void Flush(bool shutdown);\n \n     void IncrementUpdateCounter();\n-    unsigned int GetUpdateCounter();\n+\n+    std::atomic<unsigned int> nUpdateCounter;\n+    unsigned int nLastSeen;\n+    unsigned int nLastFlushed;\n+    int64_t nLastWalletUpdate;\n \n private:\n     /** BerkeleyDB specific */\n     CDBEnv *env;\n     std::string strFile;\n-    std::atomic<unsigned int> nUpdateCounter;\n \n     /** Return whether this database handle is a dummy for testing.\n      * Only to be used at a low level, application should ideally not care"
      },
      {
        "sha": "7b9ed91947c52c80c413d45fd714842bbf141987",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -33,7 +33,8 @@\n \n CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n {\n-    return pwalletMain;\n+    // TODO: Some way to access secondary wallets\n+    return vpwallets.empty() ? nullptr : vpwallets[0];\n }\n \n std::string HelpRequiringPassphrase(CWallet * const pwallet)"
      },
      {
        "sha": "922fcc8e898dd613d3a8d392f462785b26eab9e4",
        "filename": "src/wallet/test/wallet_test_fixture.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/test/wallet_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/test/wallet_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_test_fixture.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -8,6 +8,8 @@\n #include \"wallet/db.h\"\n #include \"wallet/wallet.h\"\n \n+CWallet *pwalletMain;\n+\n WalletTestingSetup::WalletTestingSetup(const std::string& chainName):\n     TestingSetup(chainName)\n {"
      },
      {
        "sha": "7c48bc29ea29fb27e89e0deffb73e9f0b613d382",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -19,6 +19,8 @@\n #include <boost/test/unit_test.hpp>\n #include <univalue.h>\n \n+extern CWallet* pwalletMain;\n+\n extern UniValue importmulti(const JSONRPCRequest& request);\n extern UniValue dumpwallet(const JSONRPCRequest& request);\n extern UniValue importwallet(const JSONRPCRequest& request);\n@@ -402,8 +404,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n     // after.\n     {\n         CWallet wallet;\n-        CWallet *backup = ::pwalletMain;\n-        ::pwalletMain = &wallet;\n+        vpwallets.insert(vpwallets.begin(), &wallet);\n         UniValue keys;\n         keys.setArray();\n         UniValue key;\n@@ -434,7 +435,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n                       \"downloading and rescanning the relevant blocks (see -reindex and -rescan \"\n                       \"options).\\\"}},{\\\"success\\\":true}]\",\n                               0, oldTip->GetBlockTimeMax(), TIMESTAMP_WINDOW));\n-        ::pwalletMain = backup;\n+        vpwallets.erase(vpwallets.begin());\n     }\n }\n \n@@ -444,7 +445,6 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n // than or equal to key birthday.\n BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n {\n-    CWallet *pwalletMainBackup = ::pwalletMain;\n     LOCK(cs_main);\n \n     // Create two blocks with same timestamp to verify that importwallet rescan\n@@ -470,7 +470,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back(\"wallet.backup\");\n-        ::pwalletMain = &wallet;\n+        vpwallets.insert(vpwallets.begin(), &wallet);\n         ::dumpwallet(request);\n     }\n \n@@ -482,7 +482,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back(\"wallet.backup\");\n-        ::pwalletMain = &wallet;\n+        vpwallets[0] = &wallet;\n         ::importwallet(request);\n \n         BOOST_CHECK_EQUAL(wallet.mapWallet.size(), 3);\n@@ -495,7 +495,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n     }\n \n     SetMockTime(0);\n-    ::pwalletMain = pwalletMainBackup;\n+    vpwallets.erase(vpwallets.begin());\n }\n \n // Check that GetImmatureCredit() returns a newly calculated value instead of"
      },
      {
        "sha": "e5c9f11aa6359650975ff05a0d2ef72e1888ab7e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -35,7 +35,7 @@\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/thread.hpp>\n \n-CWallet* pwalletMain = NULL;\n+std::vector<CWalletRef> vpwallets;\n /** Transaction fee set by the user */\n CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;\n@@ -3926,7 +3926,6 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n bool CWallet::InitLoadWallet()\n {\n     if (GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n-        pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n         return true;\n     }\n@@ -3943,7 +3942,7 @@ bool CWallet::InitLoadWallet()\n     if (!pwallet) {\n         return false;\n     }\n-    pwalletMain = pwallet;\n+    vpwallets.push_back(pwallet);\n \n     return true;\n }"
      },
      {
        "sha": "b1516c6e65dd7d3e8dedf96cdd89038a56303d86",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -29,7 +29,8 @@\n #include <utility>\n #include <vector>\n \n-extern CWallet* pwalletMain;\n+typedef CWallet* CWalletRef;\n+extern std::vector<CWalletRef> vpwallets;\n \n /**\n  * Settings"
      },
      {
        "sha": "6f5ddece9a773dba6f6145dfbdde0b78dc4923ab",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b124cf04ea47e1eda60bbc26a9690a9715c6b23f/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "patch": "@@ -760,24 +760,23 @@ void MaybeCompactWalletDB()\n         return;\n     }\n \n-    CWalletDBWrapper& dbh = pwalletMain->GetDBHandle();\n+    for (CWalletRef pwallet : vpwallets) {\n+        CWalletDBWrapper& dbh = pwallet->GetDBHandle();\n \n-    static unsigned int nLastSeen = dbh.GetUpdateCounter();\n-    static unsigned int nLastFlushed = dbh.GetUpdateCounter();\n-    static int64_t nLastWalletUpdate = GetTime();\n+        unsigned int nUpdateCounter = dbh.nUpdateCounter;\n \n-    if (nLastSeen != dbh.GetUpdateCounter())\n-    {\n-        nLastSeen = dbh.GetUpdateCounter();\n-        nLastWalletUpdate = GetTime();\n-    }\n+        if (dbh.nLastSeen != nUpdateCounter) {\n+            dbh.nLastSeen = nUpdateCounter;\n+            dbh.nLastWalletUpdate = GetTime();\n+        }\n \n-    if (nLastFlushed != dbh.GetUpdateCounter() && GetTime() - nLastWalletUpdate >= 2)\n-    {\n-        if (CDB::PeriodicFlush(dbh)) {\n-            nLastFlushed = dbh.GetUpdateCounter();\n+        if (dbh.nLastFlushed != nUpdateCounter && GetTime() - dbh.nLastWalletUpdate >= 2) {\n+            if (CDB::PeriodicFlush(dbh)) {\n+                dbh.nLastFlushed = nUpdateCounter;\n+            }\n         }\n     }\n+\n     fOneThread = false;\n }\n "
      }
    ]
  },
  {
    "sha": "0f08575be2c6016c2c920e2b5b994e467576857d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjA4NTc1YmUyYzYwMTZjMmM5MjBlMmI1Yjk5NGU0Njc1NzY4NTdk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-09-09T08:50:09Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:17:09Z"
      },
      "message": "Wallet: Support loading multiple wallets if -wallet used more than once",
      "tree": {
        "sha": "2550988b0afa0379b0c493eb73bb0c1be7438935",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2550988b0afa0379b0c493eb73bb0c1be7438935"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f08575be2c6016c2c920e2b5b994e467576857d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f08575be2c6016c2c920e2b5b994e467576857d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f08575be2c6016c2c920e2b5b994e467576857d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f08575be2c6016c2c920e2b5b994e467576857d/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b124cf04ea47e1eda60bbc26a9690a9715c6b23f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b124cf04ea47e1eda60bbc26a9690a9715c6b23f"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 12,
      "deletions": 10
    },
    "files": [
      {
        "sha": "241aaffcef142a0400dc75a33e9fb0fcabb1415e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f08575be2c6016c2c920e2b5b994e467576857d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f08575be2c6016c2c920e2b5b994e467576857d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0f08575be2c6016c2c920e2b5b994e467576857d",
        "patch": "@@ -3930,19 +3930,21 @@ bool CWallet::InitLoadWallet()\n         return true;\n     }\n \n-    std::string walletFile = GetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n+    SoftSetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n \n-    if (boost::filesystem::path(walletFile).filename() != walletFile) {\n-        return InitError(_(\"-wallet parameter must only specify a filename (not a path)\"));\n-    } else if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n-        return InitError(_(\"Invalid characters in -wallet filename\"));\n-    }\n+    for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n+        if (boost::filesystem::path(walletFile).filename() != walletFile) {\n+            return InitError(_(\"-wallet parameter must only specify a filename (not a path)\"));\n+        } else if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n+            return InitError(_(\"Invalid characters in -wallet filename\"));\n+        }\n \n-    CWallet * const pwallet = CreateWalletFromFile(walletFile);\n-    if (!pwallet) {\n-        return false;\n+        CWallet * const pwallet = CreateWalletFromFile(walletFile);\n+        if (!pwallet) {\n+            return false;\n+        }\n+        vpwallets.push_back(pwallet);\n     }\n-    vpwallets.push_back(pwallet);\n \n     return true;\n }"
      }
    ]
  },
  {
    "sha": "008c3600834d42a98d4f0838e9bedc873102fe73",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDhjMzYwMDgzNGQ0MmE5OGQ0ZjA4MzhlOWJlZGM4NzMxMDJmZTcz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-03-09T23:45:58Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:17:09Z"
      },
      "message": "Wallet: Move multiwallet sanity checks to CWallet::Verify, and do other checks on all wallets",
      "tree": {
        "sha": "6e080ebf943133ea6ef67ab593b6551da623026c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e080ebf943133ea6ef67ab593b6551da623026c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/008c3600834d42a98d4f0838e9bedc873102fe73",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/008c3600834d42a98d4f0838e9bedc873102fe73",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/008c3600834d42a98d4f0838e9bedc873102fe73",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/008c3600834d42a98d4f0838e9bedc873102fe73/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f08575be2c6016c2c920e2b5b994e467576857d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f08575be2c6016c2c920e2b5b994e467576857d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f08575be2c6016c2c920e2b5b994e467576857d"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 29,
      "deletions": 27
    },
    "files": [
      {
        "sha": "f4ff5f83636dc9c64154410fdf231624e9ae53e1",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 27,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/008c3600834d42a98d4f0838e9bedc873102fe73/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/008c3600834d42a98d4f0838e9bedc873102fe73/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=008c3600834d42a98d4f0838e9bedc873102fe73",
        "patch": "@@ -440,30 +440,40 @@ bool CWallet::Verify()\n     if (GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET))\n         return true;\n \n-    uiInterface.InitMessage(_(\"Verifying wallet...\"));\n-    std::string walletFile = GetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n+    SoftSetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n \n-    std::string strError;\n-    if (!CWalletDB::VerifyEnvironment(walletFile, GetDataDir().string(), strError))\n-        return InitError(strError);\n+    uiInterface.InitMessage(_(\"Verifying wallet(s)...\"));\n \n-    if (GetBoolArg(\"-salvagewallet\", false))\n-    {\n-        // Recover readable keypairs:\n-        CWallet dummyWallet;\n-        if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter))\n+    for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n+        if (boost::filesystem::path(walletFile).filename() != walletFile) {\n+            return InitError(_(\"-wallet parameter must only specify a filename (not a path)\"));\n+        } else if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n+            return InitError(_(\"Invalid characters in -wallet filename\"));\n+        }\n+\n+        std::string strError;\n+        if (!CWalletDB::VerifyEnvironment(walletFile, GetDataDir().string(), strError))\n+            return InitError(strError);\n+\n+        if (GetBoolArg(\"-salvagewallet\", false))\n+        {\n+            // Recover readable keypairs:\n+            CWallet dummyWallet;\n+            if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter))\n+                return false;\n+        }\n+\n+        std::string strWarning;\n+        bool dbV = CWalletDB::VerifyDatabaseFile(walletFile, GetDataDir().string(), strWarning, strError);\n+        if (!strWarning.empty())\n+            InitWarning(strWarning);\n+        if (!dbV)\n+        {\n+            InitError(strError);\n             return false;\n+        }\n     }\n \n-    std::string strWarning;\n-    bool dbV = CWalletDB::VerifyDatabaseFile(walletFile, GetDataDir().string(), strWarning, strError);\n-    if (!strWarning.empty())\n-        InitWarning(strWarning);\n-    if (!dbV)\n-    {\n-        InitError(strError);\n-        return false;\n-    }\n     return true;\n }\n \n@@ -3930,15 +3940,7 @@ bool CWallet::InitLoadWallet()\n         return true;\n     }\n \n-    SoftSetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n-\n     for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n-        if (boost::filesystem::path(walletFile).filename() != walletFile) {\n-            return InitError(_(\"-wallet parameter must only specify a filename (not a path)\"));\n-        } else if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n-            return InitError(_(\"Invalid characters in -wallet filename\"));\n-        }\n-\n         CWallet * const pwallet = CreateWalletFromFile(walletFile);\n         if (!pwallet) {\n             return false;"
      }
    ]
  },
  {
    "sha": "84dcb45017a85e358fed274c49b342a40a1d1233",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGRjYjQ1MDE3YTg1ZTM1OGZlZDI3NGM0OWIzNDJhNDBhMWQxMjMz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T21:36:02Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:17:09Z"
      },
      "message": "Bugfix: wallet: Fix warningStr, errorStr argument order",
      "tree": {
        "sha": "4764098c7f45149a1edb0385a1f618521451256f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4764098c7f45149a1edb0385a1f618521451256f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84dcb45017a85e358fed274c49b342a40a1d1233",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84dcb45017a85e358fed274c49b342a40a1d1233",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84dcb45017a85e358fed274c49b342a40a1d1233",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84dcb45017a85e358fed274c49b342a40a1d1233/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "008c3600834d42a98d4f0838e9bedc873102fe73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/008c3600834d42a98d4f0838e9bedc873102fe73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/008c3600834d42a98d4f0838e9bedc873102fe73"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a1fc933a3723a2e597f03a9ecb6d98d5a91cb36a",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84dcb45017a85e358fed274c49b342a40a1d1233/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84dcb45017a85e358fed274c49b342a40a1d1233/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=84dcb45017a85e358fed274c49b342a40a1d1233",
        "patch": "@@ -825,7 +825,7 @@ bool CWalletDB::VerifyEnvironment(const std::string& walletFile, const fs::path&\n \n bool CWalletDB::VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr)\n {\n-    return CDB::VerifyDatabaseFile(walletFile, dataDir, errorStr, warningStr, CWalletDB::Recover);\n+    return CDB::VerifyDatabaseFile(walletFile, dataDir, warningStr, errorStr, CWalletDB::Recover);\n }\n \n bool CWalletDB::WriteDestData(const std::string &address, const std::string &key, const std::string &value)"
      }
    ]
  },
  {
    "sha": "b823a4c9f6836c802803dbd265cb7451fb93b8e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODIzYTRjOWY2ODM2YzgwMjgwM2RiZDI2NWNiNzQ1MWZiOTNiOGU3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T22:01:48Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:17:09Z"
      },
      "message": "wallet: Include actual backup filename in recovery warning message",
      "tree": {
        "sha": "cb2617a99de25ac9d2c685020949e7416e5b471b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb2617a99de25ac9d2c685020949e7416e5b471b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b823a4c9f6836c802803dbd265cb7451fb93b8e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b823a4c9f6836c802803dbd265cb7451fb93b8e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b823a4c9f6836c802803dbd265cb7451fb93b8e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b823a4c9f6836c802803dbd265cb7451fb93b8e7/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84dcb45017a85e358fed274c49b342a40a1d1233",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84dcb45017a85e358fed274c49b342a40a1d1233",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84dcb45017a85e358fed274c49b342a40a1d1233"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 20,
      "deletions": 17
    },
    "files": [
      {
        "sha": "f82b59db8bc52e1b9105d76d6ecf1d12a0146273",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=b823a4c9f6836c802803dbd265cb7451fb93b8e7",
        "patch": "@@ -143,7 +143,7 @@ void CDBEnv::MakeMock()\n     fMockDb = true;\n }\n \n-CDBEnv::VerifyResult CDBEnv::Verify(const std::string& strFile, bool (*recoverFunc)(const std::string& strFile))\n+CDBEnv::VerifyResult CDBEnv::Verify(const std::string& strFile, recoverFunc_type recoverFunc, std::string& out_backup_filename)\n {\n     LOCK(cs_db);\n     assert(mapFileUseCount.count(strFile) == 0);\n@@ -156,11 +156,11 @@ CDBEnv::VerifyResult CDBEnv::Verify(const std::string& strFile, bool (*recoverFu\n         return RECOVER_FAIL;\n \n     // Try to recover:\n-    bool fRecovered = (*recoverFunc)(strFile);\n+    bool fRecovered = (*recoverFunc)(strFile, out_backup_filename);\n     return (fRecovered ? RECOVER_OK : RECOVER_FAIL);\n }\n \n-bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue))\n+bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& newFilename)\n {\n     // Recovery procedure:\n     // move wallet file to wallet.timestamp.bak\n@@ -170,7 +170,7 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     // Set -rescan so any missing transactions will be\n     // found.\n     int64_t now = GetTime();\n-    std::string newFilename = strprintf(\"wallet.%d.bak\", now);\n+    newFilename = strprintf(\"wallet.%d.bak\", now);\n \n     int result = bitdb.dbenv->dbrename(NULL, filename.c_str(), NULL,\n                                        newFilename.c_str(), DB_AUTO_COMMIT);\n@@ -261,18 +261,19 @@ bool CDB::VerifyEnvironment(const std::string& walletFile, const fs::path& dataD\n     return true;\n }\n \n-bool CDB::VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, bool (*recoverFunc)(const std::string& strFile))\n+bool CDB::VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, CDBEnv::recoverFunc_type recoverFunc)\n {\n     if (fs::exists(dataDir / walletFile))\n     {\n-        CDBEnv::VerifyResult r = bitdb.Verify(walletFile, recoverFunc);\n+        std::string backup_filename;\n+        CDBEnv::VerifyResult r = bitdb.Verify(walletFile, recoverFunc, backup_filename);\n         if (r == CDBEnv::RECOVER_OK)\n         {\n             warningStr = strprintf(_(\"Warning: Wallet file corrupt, data salvaged!\"\n                                      \" Original %s saved as %s in %s; if\"\n                                      \" your balance or transactions are incorrect you should\"\n                                      \" restore from a backup.\"),\n-                                   walletFile, \"wallet.{timestamp}.bak\", dataDir);\n+                                   walletFile, backup_filename, dataDir);\n         }\n         if (r == CDBEnv::RECOVER_FAIL)\n         {"
      },
      {
        "sha": "ba3785357218a082cfa94c9ed83bdabc4acb1126",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=b823a4c9f6836c802803dbd265cb7451fb93b8e7",
        "patch": "@@ -55,7 +55,8 @@ class CDBEnv\n     enum VerifyResult { VERIFY_OK,\n                         RECOVER_OK,\n                         RECOVER_FAIL };\n-    VerifyResult Verify(const std::string& strFile, bool (*recoverFunc)(const std::string& strFile));\n+    typedef bool (*recoverFunc_type)(const std::string& strFile, std::string& out_backup_filename);\n+    VerifyResult Verify(const std::string& strFile, recoverFunc_type recoverFunc, std::string& out_backup_filename);\n     /**\n      * Salvage data from a file that Verify says is bad.\n      * fAggressive sets the DB_AGGRESSIVE flag (see berkeley DB->verify() method documentation).\n@@ -156,15 +157,15 @@ class CDB\n \n     void Flush();\n     void Close();\n-    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue));\n+    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& out_backup_filename);\n \n     /* flush the wallet passively (TRY_LOCK)\n        ideal to be called periodically */\n     static bool PeriodicFlush(CWalletDBWrapper& dbw);\n     /* verifies the database environment */\n     static bool VerifyEnvironment(const std::string& walletFile, const fs::path& dataDir, std::string& errorStr);\n     /* verifies the database file */\n-    static bool VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, bool (*recoverFunc)(const std::string& strFile));\n+    static bool VerifyDatabaseFile(const std::string& walletFile, const fs::path& dataDir, std::string& warningStr, std::string& errorStr, CDBEnv::recoverFunc_type recoverFunc);\n \n private:\n     CDB(const CDB&);"
      },
      {
        "sha": "065748bb9d28bf5e94c9abdc6e70ccbfdc48bf9a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b823a4c9f6836c802803dbd265cb7451fb93b8e7",
        "patch": "@@ -459,7 +459,8 @@ bool CWallet::Verify()\n         {\n             // Recover readable keypairs:\n             CWallet dummyWallet;\n-            if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter))\n+            std::string backup_filename;\n+            if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter, backup_filename))\n                 return false;\n         }\n "
      },
      {
        "sha": "4dd1ebf677205c74ca0614fcd3a907f1f33411f7",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=b823a4c9f6836c802803dbd265cb7451fb93b8e7",
        "patch": "@@ -783,16 +783,16 @@ void MaybeCompactWalletDB()\n //\n // Try to (very carefully!) recover wallet file if there is a problem.\n //\n-bool CWalletDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue))\n+bool CWalletDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& out_backup_filename)\n {\n-    return CDB::Recover(filename, callbackDataIn, recoverKVcallback);\n+    return CDB::Recover(filename, callbackDataIn, recoverKVcallback, out_backup_filename);\n }\n \n-bool CWalletDB::Recover(const std::string& filename)\n+bool CWalletDB::Recover(const std::string& filename, std::string& out_backup_filename)\n {\n     // recover without a key filter callback\n     // results in recovering all record types\n-    return CWalletDB::Recover(filename, NULL, NULL);\n+    return CWalletDB::Recover(filename, NULL, NULL, out_backup_filename);\n }\n \n bool CWalletDB::RecoverKeysOnlyFilter(void *callbackData, CDataStream ssKey, CDataStream ssValue)"
      },
      {
        "sha": "d78f143ebd65ea3077cbcd2f4a37a20043729865",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b823a4c9f6836c802803dbd265cb7451fb93b8e7/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=b823a4c9f6836c802803dbd265cb7451fb93b8e7",
        "patch": "@@ -218,9 +218,9 @@ class CWalletDB\n     DBErrors ZapWalletTx(std::vector<CWalletTx>& vWtx);\n     DBErrors ZapSelectTx(std::vector<uint256>& vHashIn, std::vector<uint256>& vHashOut);\n     /* Try to (very carefully!) recover wallet database (with a possible key type filter) */\n-    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue));\n+    static bool Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& out_backup_filename);\n     /* Recover convenience-function to bypass the key filter callback, called when verify fails, recovers everything */\n-    static bool Recover(const std::string& filename);\n+    static bool Recover(const std::string& filename, std::string& out_backup_filename);\n     /* Recover filter (used as callback), will only let keys (cryptographical keys) as KV/key-type pass through */\n     static bool RecoverKeysOnlyFilter(void *callbackData, CDataStream ssKey, CDataStream ssValue);\n     /* Function to determine if a certain KV/key-type is a key (cryptographical key) type */"
      }
    ]
  },
  {
    "sha": "a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMmE1ZjNmMGYwNmNkM2UzY2Q2MjAzZDJlZjcxMzM2MGRjYjlhZmUx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T22:02:32Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:20:22Z"
      },
      "message": "wallet: Base backup filenames on original wallet filename",
      "tree": {
        "sha": "607fbab1828fb6777e7e7f2f49085c4dc9335a2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/607fbab1828fb6777e7e7f2f49085c4dc9335a2a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b823a4c9f6836c802803dbd265cb7451fb93b8e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b823a4c9f6836c802803dbd265cb7451fb93b8e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b823a4c9f6836c802803dbd265cb7451fb93b8e7"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2047dc5f72eaa4707412cced4a4c1847157cfabc",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1",
        "patch": "@@ -163,14 +163,14 @@ CDBEnv::VerifyResult CDBEnv::Verify(const std::string& strFile, recoverFunc_type\n bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*recoverKVcallback)(void* callbackData, CDataStream ssKey, CDataStream ssValue), std::string& newFilename)\n {\n     // Recovery procedure:\n-    // move wallet file to wallet.timestamp.bak\n+    // move wallet file to walletfilename.timestamp.bak\n     // Call Salvage with fAggressive=true to\n     // get as much data as possible.\n     // Rewrite salvaged data to fresh wallet file\n     // Set -rescan so any missing transactions will be\n     // found.\n     int64_t now = GetTime();\n-    newFilename = strprintf(\"wallet.%d.bak\", now);\n+    newFilename = strprintf(\"%s.%d.bak\", filename, now);\n \n     int result = bitdb.dbenv->dbrename(NULL, filename.c_str(), NULL,\n                                        newFilename.c_str(), DB_AUTO_COMMIT);"
      }
    ]
  },
  {
    "sha": "9cbe8c80bad1b55557a91db65a06b66ec4743f18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2JlOGM4MGJhZDFiNTU1NTdhOTFkYjY1YTA2YjY2ZWM0NzQzZjE4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T22:21:20Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:20:22Z"
      },
      "message": "wallet: Forbid -salvagewallet, -zapwallettxes, and -upgradewallet with multiple wallets",
      "tree": {
        "sha": "9f020f49a7afee09deacfb9e031018bc2e0adac5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f020f49a7afee09deacfb9e031018bc2e0adac5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9cbe8c80bad1b55557a91db65a06b66ec4743f18",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cbe8c80bad1b55557a91db65a06b66ec4743f18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9cbe8c80bad1b55557a91db65a06b66ec4743f18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cbe8c80bad1b55557a91db65a06b66ec4743f18/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a2a5f3f0f06cd3e3cd6203d2ef713360dcb9afe1"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 15,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b3d94e42b2d2aa3ae0789167339abefce46576a7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cbe8c80bad1b55557a91db65a06b66ec4743f18/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cbe8c80bad1b55557a91db65a06b66ec4743f18/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9cbe8c80bad1b55557a91db65a06b66ec4743f18",
        "patch": "@@ -440,8 +440,6 @@ bool CWallet::Verify()\n     if (GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET))\n         return true;\n \n-    SoftSetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n-\n     uiInterface.InitMessage(_(\"Verifying wallet(s)...\"));\n \n     for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n@@ -3968,6 +3966,9 @@ void CWallet::postInitProcess(CScheduler& scheduler)\n \n bool CWallet::ParameterInteraction()\n {\n+    SoftSetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n+    const bool is_multiwallet = gArgs.GetArgs(\"-wallet\").size() > 1;\n+\n     if (GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET))\n         return true;\n \n@@ -3976,15 +3977,27 @@ bool CWallet::ParameterInteraction()\n     }\n \n     if (GetBoolArg(\"-salvagewallet\", false) && SoftSetBoolArg(\"-rescan\", true)) {\n+        if (is_multiwallet) {\n+            return InitError(strprintf(\"%s is only allowed with a single wallet file\", \"-salvagewallet\"));\n+        }\n         // Rewrite just private keys: rescan to find transactions\n         LogPrintf(\"%s: parameter interaction: -salvagewallet=1 -> setting -rescan=1\\n\", __func__);\n     }\n \n     // -zapwallettx implies a rescan\n     if (GetBoolArg(\"-zapwallettxes\", false) && SoftSetBoolArg(\"-rescan\", true)) {\n+        if (is_multiwallet) {\n+            return InitError(strprintf(\"%s is only allowed with a single wallet file\", \"-zapwallettxes\"));\n+        }\n         LogPrintf(\"%s: parameter interaction: -zapwallettxes=<mode> -> setting -rescan=1\\n\", __func__);\n     }\n \n+    if (is_multiwallet) {\n+        if (GetBoolArg(\"-upgradewallet\", false)) {\n+            return InitError(strprintf(\"%s is only allowed with a single wallet file\", \"-upgradewallet\"));\n+        }\n+    }\n+\n     if (GetBoolArg(\"-sysperms\", false))\n         return InitError(\"-sysperms is not allowed in combination with enabled wallet functionality\");\n     if (GetArg(\"-prune\", 0) && GetBoolArg(\"-rescan\", false))"
      }
    ]
  },
  {
    "sha": "c237bd750e11472f0f9639891036b975cf7faf15",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjM3YmQ3NTBlMTE0NzJmMGY5NjM5ODkxMDM2Yjk3NWNmN2ZhZjE1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T22:23:20Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-06T21:20:22Z"
      },
      "message": "wallet: Update formatting",
      "tree": {
        "sha": "b28ec76f13060e56ce4d336dff0682eaa32e18a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b28ec76f13060e56ce4d336dff0682eaa32e18a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c237bd750e11472f0f9639891036b975cf7faf15",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c237bd750e11472f0f9639891036b975cf7faf15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c237bd750e11472f0f9639891036b975cf7faf15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c237bd750e11472f0f9639891036b975cf7faf15/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9cbe8c80bad1b55557a91db65a06b66ec4743f18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cbe8c80bad1b55557a91db65a06b66ec4743f18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cbe8c80bad1b55557a91db65a06b66ec4743f18"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 20,
      "deletions": 15
    },
    "files": [
      {
        "sha": "a7a47e02fd0719097602caaf79cead327afacaa6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c237bd750e11472f0f9639891036b975cf7faf15/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c237bd750e11472f0f9639891036b975cf7faf15/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c237bd750e11472f0f9639891036b975cf7faf15",
        "patch": "@@ -450,24 +450,25 @@ bool CWallet::Verify()\n         }\n \n         std::string strError;\n-        if (!CWalletDB::VerifyEnvironment(walletFile, GetDataDir().string(), strError))\n+        if (!CWalletDB::VerifyEnvironment(walletFile, GetDataDir().string(), strError)) {\n             return InitError(strError);\n+        }\n \n-        if (GetBoolArg(\"-salvagewallet\", false))\n-        {\n+        if (GetBoolArg(\"-salvagewallet\", false)) {\n             // Recover readable keypairs:\n             CWallet dummyWallet;\n             std::string backup_filename;\n-            if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter, backup_filename))\n+            if (!CWalletDB::Recover(walletFile, (void *)&dummyWallet, CWalletDB::RecoverKeysOnlyFilter, backup_filename)) {\n                 return false;\n+            }\n         }\n \n         std::string strWarning;\n         bool dbV = CWalletDB::VerifyDatabaseFile(walletFile, GetDataDir().string(), strWarning, strError);\n-        if (!strWarning.empty())\n+        if (!strWarning.empty()) {\n             InitWarning(strWarning);\n-        if (!dbV)\n-        {\n+        }\n+        if (!dbV) {\n             InitError(strError);\n             return false;\n         }\n@@ -2880,8 +2881,9 @@ bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry)\n \n bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry, CWalletDB *pwalletdb)\n {\n-    if (!pwalletdb->WriteAccountingEntry(++nAccountingEntryNumber, acentry))\n+    if (!pwalletdb->WriteAccountingEntry(++nAccountingEntryNumber, acentry)) {\n         return false;\n+    }\n \n     laccentries.push_back(acentry);\n     CAccountingEntry & entry = laccentries.back();"
      },
      {
        "sha": "4e2a963b71aee14511481d87a3556200ea580a8a",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c237bd750e11472f0f9639891036b975cf7faf15/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c237bd750e11472f0f9639891036b975cf7faf15/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=c237bd750e11472f0f9639891036b975cf7faf15",
        "patch": "@@ -60,9 +60,9 @@ bool CWalletDB::EraseTx(uint256 hash)\n \n bool CWalletDB::WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata& keyMeta)\n {\n-    if (!WriteIC(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n-               keyMeta, false))\n+    if (!WriteIC(std::make_pair(std::string(\"keymeta\"), vchPubKey), keyMeta, false)) {\n         return false;\n+    }\n \n     // hash pubkey/privkey to accelerate wallet load\n     std::vector<unsigned char> vchKey;\n@@ -79,12 +79,13 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n {\n     const bool fEraseUnencryptedKey = true;\n \n-    if (!WriteIC(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n-            keyMeta))\n+    if (!WriteIC(std::make_pair(std::string(\"keymeta\"), vchPubKey), keyMeta)) {\n         return false;\n+    }\n \n-    if (!WriteIC(std::make_pair(std::string(\"ckey\"), vchPubKey), vchCryptedSecret, false))\n+    if (!WriteIC(std::make_pair(std::string(\"ckey\"), vchPubKey), vchCryptedSecret, false)) {\n         return false;\n+    }\n     if (fEraseUnencryptedKey)\n     {\n         EraseIC(std::make_pair(std::string(\"key\"), vchPubKey));\n@@ -106,15 +107,17 @@ bool CWalletDB::WriteCScript(const uint160& hash, const CScript& redeemScript)\n \n bool CWalletDB::WriteWatchOnly(const CScript &dest, const CKeyMetadata& keyMeta)\n {\n-    if (!WriteIC(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest)), keyMeta))\n+    if (!WriteIC(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest)), keyMeta)) {\n         return false;\n+    }\n     return WriteIC(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)), '1');\n }\n \n bool CWalletDB::EraseWatchOnly(const CScript &dest)\n {\n-    if (!EraseIC(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest))))\n+    if (!EraseIC(std::make_pair(std::string(\"watchmeta\"), *(const CScriptBase*)(&dest)))) {\n         return false;\n+    }\n     return EraseIC(std::make_pair(std::string(\"watchs\"), *(const CScriptBase*)(&dest)));\n }\n "
      }
    ]
  }
]