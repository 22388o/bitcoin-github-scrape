fanquake,2021-04-01 02:12:36,"Cirrus failures:\n```bash\nIn file included from init.cpp:55:\n./txorphanage.h:50:28: error: reading variable 'm_orphans' requires holding mutex 'g_cs_orphans' [-Werror,-Wthread-safety-analysis]\n    size_t Size() { return m_orphans.size(); };\n                           ^\n1 error generated.\nmake[2]: *** [libbitcoin_server_a-init.o] Error 1\nmake[2]: *** Waiting for unfinished jobs....\",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-811586697,811586697,
DrahtBot,2021-04-01 04:25:58,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22567 by MarcoFalke\n* #20362 by MarcoFalke\n* #18470 by MarcoFalke\n\nIf you consider this pull request important, pleas",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-811628410,811628410,
practicalswift,2021-04-01 09:14:50,"Strong Concept ACK\n\nI find the suggested code easier to reason about from a safety and correctness perspective.",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-811773260,811773260,
MarcoFalke,2021-04-01 14:00:03,The build failure is because `Assume` breaks static lock analysis. One way to fix is to assign the assumed-value to a bool first.,https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-811928614,811928614,
jnewbery,2021-04-01 15:27:44,Thanks Marco! I've just reverted these checks to `assert()` for now.,https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-811985857,811985857,
hebasto,2021-04-02 22:55:33,"@jnewbery Help me to understand the motivation for ""[net processing] Move consistency checks to PeerManagerImpl dtor"" commit please.\n\nMy current understanding is following. A consistency is an invariant that the `PeerManagerImpl` class must hold. It's ctor's job to establish class's invariants, and member functions' job to preserve invariants. Delegating such a task to dtor seems unusual for m",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-812746359,812746359,
jnewbery,2021-04-06 15:57:38,"> Help me to understand the motivation for ""[net processing] Move consistency checks to PeerManagerImpl dtor"" commit please.\n> \n> My current understanding is following. A consistency is an invariant that the PeerManagerImpl class must hold. It's ctor's job to establish class's invariants, and member functions' job to preserve invariants. Delegating such a task to dtor seems unusual for me.\n",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-814235832,814235832,
DrahtBot,2021-05-03 09:32:45,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @sipa has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-831142028,831142028,
jnewbery,2021-05-03 11:20:43,"@hebasto - there are various changes to net_processing logging happening in 21527, so I've removed the changes to the destructor here until those land. Let me know if you think the remaining changes to the constructor in this PR are worth keeping.\n\nAlso rebased on current master.",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-831196864,831196864,
Crypt-iQ,2021-05-09 00:58:28,"Code review ACK b26a5adceaf4e1dbf35aa595f7870fe059940959\n\nI was confused by the asserts prior to this PR.  Also there are two typos in the commit messages ""contetx"" should be ""context""?",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-835604440,835604440,
jnewbery,2021-05-10 06:45:01,"Thanks @Crypt-iQ. I've corrected the typos in the commit logs.\n\n> I was confused by the asserts prior to this PR.\n\nThese were to ensure that `recentRejects` wasn't null before dereferencing it. No need for that now that `m_recent_rejects` is not a pointer.",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-836253191,836253191,
Crypt-iQ,2021-05-12 15:34:15,"Code review ACK d6cef4d8a6a70920e98f40530113733142025f6a\n\nOnly the commit messages were fixed from b26a5adceaf4e1dbf35aa595f7870fe059940959, so should be good.",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-839870649,839870649,
jnewbery,2021-06-02 15:12:15,Rebased on master to fix fuzz CI timeout.,https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-853111832,853111832,
Crypt-iQ,2021-06-05 21:40:50,"Code review ACK 93e881f\n\nCommit message 9e6bf785 has a typo: rejectRejects should be recentRejects",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-855299409,855299409,
jnewbery,2021-06-14 09:23:52,"Rebased.\n\n> Commit message 9e6bf78 has a typo: rejectRejects should be recentRejects\n\nFixed. Thank you!",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-860537406,860537406,
MarcoFalke,2021-06-14 16:44:56,"review ACK d5dd3fa1de2f96a7ddfd8b300829c68b93bd4607 🔠\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK d5dd3fa1de2f96a7ddfd8b300829c68b93bd4607 🔠\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhpNwwAjxKP8RmX2H5ReC3tV5MQ/WvFMI9x+WHwIiNc",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-860830963,860830963,
practicalswift,2021-06-23 19:41:52,cr ACK d5dd3fa1de2f96a7ddfd8b300829c68b93bd4607,https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-867108626,867108626,
jnewbery,2021-06-30 16:23:17,"Thanks for the reviews @MarcoFalke, @hebasto, @practicalswift. I've addressed all of the review comments from @hebasto so this is now ready for re-review.\n\n> While touching the net_processing.cpp, also a typo which was introduced in #22141 could be fixed:\n	\nI was too slow. It's been fixed in #22323.",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-871547559,871547559,
jnewbery,2021-07-20 12:32:55,Thanks for the review @theStack. I didn't realize that the digit separator was permitted after the decimal point. I've taken your suggestion and rebased on master.,https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-883355682,883355682,
MarcoFalke,2021-07-28 14:30:20,"ACK fde1bf4f6136638e84cdf9806eedaae08e841bbf 👞\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK fde1bf4f6136638e84cdf9806eedaae08e841bbf 👞\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgIaAv+PZATwaBhcsf9/tfSEfMxRLP+BpK9c5vKV+URqEVG8wL+rV+vi/",https://github.com/bitcoin/bitcoin/pull/21562#issuecomment-888357069,888357069,
hebasto,2021-04-11 06:53:00,Only one thread has an access to the object while a dtor is called. Why lock?,https://github.com/bitcoin/bitcoin/pull/21562#discussion_r611141399,611141399,src/net_processing.cpp
hebasto,2021-06-18 01:06:19,"60cf71cfc16ec59857bd97608f599f8d2346c23c\n\n1) style-nit: redundant `;` and missed space:\n```suggestion\n    size_t Size() { return WITH_LOCK(g_cs_orphans, return m_orphans.size()); };\n```\n\n2) what about `LOCKS_EXCLUDED(::g_cs_orphans)` thread-safety annotation?\n\n3) style-nit: isn't `LOCK(::g_cs_orphans); return m_orphans.size();` shorter and more readable?\n\n4) why not use globa",https://github.com/bitcoin/bitcoin/pull/21562#discussion_r654076010,654076010,src/txorphanage.h
hebasto,2021-06-18 01:19:49,"754bdaa61fe6473ca7cf9e89146eb8419fdd7c0a\n\nI'm not an expert in Doxygen comments, but our [Developer Notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments) suggest `//!` or `//!<` for variables.",https://github.com/bitcoin/bitcoin/pull/21562#discussion_r654079896,654079896,src/net_processing.cpp
hebasto,2021-06-18 01:27:24,"6e48bfe706934fa4b71a3021d979321e94343c21, style nit:\n```suggestion\n    CRollingBloomFilter m_recent_rejects GUARDED_BY(::cs_main){120'000, 0.000001};\n```\n\n([`clang-format-diff.py`](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy) states that the space is redundant)",https://github.com/bitcoin/bitcoin/pull/21562#discussion_r654082087,654082087,src/net_processing.cpp
hebasto,2021-06-18 01:54:03,"d5dd3fa1de2f96a7ddfd8b300829c68b93bd4607, style-nit:\n```suggestion\n    CRollingBloomFilter m_recent_confirmed_transactions GUARDED_BY(m_recent_confirmed_transactions_mutex){48'000, 0.000001};\n```",https://github.com/bitcoin/bitcoin/pull/21562#discussion_r654089747,654089747,src/net_processing.cpp
jnewbery,2021-06-30 15:58:35,"Hmm, I wasn't aware of that guidance in the developer notes. Perhaps it should be updated - `/** comment */` is perfectly acceptable to doxygen, and many of the variables/members in the code base use that style.",https://github.com/bitcoin/bitcoin/pull/21562#discussion_r661611778,661611778,src/net_processing.cpp
jnewbery,2021-06-30 16:11:22,All fixed. Thanks for the suggestions!,https://github.com/bitcoin/bitcoin/pull/21562#discussion_r661622097,661622097,src/txorphanage.h
jnewbery,2021-06-30 16:22:29,Done. Thanks!,https://github.com/bitcoin/bitcoin/pull/21562#discussion_r661631087,661631087,src/net_processing.cpp
jnewbery,2021-06-30 16:22:35,Done,https://github.com/bitcoin/bitcoin/pull/21562#discussion_r661631171,661631171,src/net_processing.cpp
