[
  {
    "sha": "ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTY1YjUwMzlhNmU5YTEyZGY3ZWI3MWEwZTg0YmU3ZDM5MTZjNDBk",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T10:23:55Z"
      },
      "committer": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T10:23:55Z"
      },
      "message": "Replace `filesystem::absolute(path p, path base)` with `filesystem::absolute(base_dir / p)`.\n\n* This does not change behavior.\n* The idea is to replace `boost::filesystem::absolute(base_dir / p)` with `std::filesystem::absolute(base_dir / p)` later on when the migration to C++17 will start.",
      "tree": {
        "sha": "449a542eec546d9e2a60cbf3cc265b4a3673e2eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/449a542eec546d9e2a60cbf3cc265b4a3673e2eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abdfd2d0e3ebec7dbead89317ee9192189a35809",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abdfd2d0e3ebec7dbead89317ee9192189a35809",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abdfd2d0e3ebec7dbead89317ee9192189a35809"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9f0f5eaced76edd1d2cd4d6ef199f8626bb15d40",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
        "patch": "@@ -2288,10 +2288,10 @@ UniValue dumptxoutset(const JSONRPCRequest& request)\n         }\n     }.Check(request);\n \n-    fs::path path = fs::absolute(request.params[0].get_str(), GetDataDir());\n+    fs::path path = fs::absolute(GetDataDir() / request.params[0].get_str());\n     // Write to a temporary path and then move into `path` on completion\n     // to avoid confusion due to an interruption.\n-    fs::path temppath = fs::absolute(request.params[0].get_str() + \".incomplete\", GetDataDir());\n+    fs::path temppath = fs::absolute(GetDataDir() / (request.params[0].get_str() + \".incomplete\"));\n \n     if (fs::exists(path)) {\n         throw JSONRPCError("
      },
      {
        "sha": "9b4bff07fae1d82d34f157033d57afe0a1b7890f",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
        "patch": "@@ -1156,7 +1156,7 @@ fs::path AbsPathForConfigVal(const fs::path& path, bool net_specific)\n     if (path.is_absolute()) {\n         return path;\n     }\n-    return fs::absolute(path, GetDataDir(net_specific));\n+    return fs::absolute(GetDataDir(net_specific) / path);\n }\n \n void ScheduleBatchPriority()"
      },
      {
        "sha": "09c4718cc7e5954908dfca66dfc57363a1fab58f",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
        "patch": "@@ -127,7 +127,7 @@ static bool SalvageWallet(const fs::path& path)\n \n bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n {\n-    fs::path path = fs::absolute(name, GetWalletDir());\n+    fs::path path = fs::absolute(GetWalletDir() / name);\n \n     if (command == \"create\") {\n         std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);"
      },
      {
        "sha": "def7f40798c7c7a006e0f638e48f390f09cafc87",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
        "patch": "@@ -94,7 +94,7 @@ std::vector<fs::path> ListWalletDir()\n \n WalletLocation::WalletLocation(const std::string& name)\n     : m_name(name)\n-    , m_path(fs::absolute(name, GetWalletDir()))\n+    , m_path(fs::absolute(GetWalletDir() / name))\n {\n }\n \n@@ -103,7 +103,7 @@ bool WalletLocation::Exists() const\n     fs::path path = m_path;\n     // For the default wallet, check specifically for the wallet.dat file\n     if (m_name.empty()) {\n-        path = fs::absolute(\"wallet.dat\", m_path);\n+        path = fs::absolute(m_path / \"wallet.dat\");\n     }\n     return fs::symlink_status(path).type() != fs::file_not_found;\n }"
      }
    ]
  },
  {
    "sha": "7bf0bc7e179dfdb305b1b2eb9ff2a08370909235",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmYwYmM3ZTE3OWRmZGIzMDViMWIyZWI5ZmYyYTA4MzcwOTA5MjM1",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T13:48:43Z"
      },
      "committer": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T13:51:09Z"
      },
      "message": "walletutil: Handle empty name.",
      "tree": {
        "sha": "c04b89fc0b6d632320ab2c6af89546a5b4ba0670",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c04b89fc0b6d632320ab2c6af89546a5b4ba0670"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce65b5039a6e9a12df7eb71a0e84be7d3916c40d"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6f2ed728f221dcc82839dd47a17033ad80ea6118",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=7bf0bc7e179dfdb305b1b2eb9ff2a08370909235",
        "patch": "@@ -94,7 +94,7 @@ std::vector<fs::path> ListWalletDir()\n \n WalletLocation::WalletLocation(const std::string& name)\n     : m_name(name)\n-    , m_path(fs::absolute(GetWalletDir() / name))\n+    , m_path(fs::absolute(name.empty() ? GetWalletDir() : (GetWalletDir() / name)))\n {\n }\n "
      }
    ]
  },
  {
    "sha": "b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTAwYjU3ZDI4MDRjYjdiMGY4YjM1YmFmMDVjY2ZlNmEzY2JkNGQx",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T10:30:12Z"
      },
      "committer": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T13:51:45Z"
      },
      "message": "Use BOOST_CHECK_EQUAL for paths to get useful debug information when test fails.",
      "tree": {
        "sha": "ffdd0b5757264a7b37e84a029be3b48d052351b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ffdd0b5757264a7b37e84a029be3b48d052351b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7bf0bc7e179dfdb305b1b2eb9ff2a08370909235",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7bf0bc7e179dfdb305b1b2eb9ff2a08370909235"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e8b485997e372486a09f597e1a03a1a9be950f15",
        "filename": "src/wallet/test/db_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1/src/wallet/test/db_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1/src/wallet/test/db_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/db_tests.cpp?ref=b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
        "patch": "@@ -23,8 +23,8 @@ BOOST_AUTO_TEST_CASE(getwalletenv_file)\n \n     std::string filename;\n     std::shared_ptr<BerkeleyEnvironment> env = GetWalletEnv(file_path, filename);\n-    BOOST_CHECK(filename == test_name);\n-    BOOST_CHECK(env->Directory() == datadir);\n+    BOOST_CHECK_EQUAL(filename, test_name);\n+    BOOST_CHECK_EQUAL(env->Directory(), datadir);\n }\n \n BOOST_AUTO_TEST_CASE(getwalletenv_directory)"
      },
      {
        "sha": "9fd1fd95f152841f837da53e89d5601485041722",
        "filename": "src/wallet/test/init_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1/src/wallet/test/init_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1/src/wallet/test/init_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/init_tests.cpp?ref=b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
        "patch": "@@ -69,7 +69,7 @@ BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_no_trailing)\n     BOOST_CHECK(result == true);\n     fs::path walletdir = gArgs.GetArg(\"-walletdir\", \"\");\n     fs::path expected_path = fs::canonical(m_walletdir_path_cases[\"default\"]);\n-    BOOST_CHECK(walletdir == expected_path);\n+    BOOST_CHECK_EQUAL(walletdir, expected_path);\n }\n \n BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_no_trailing2)\n@@ -79,7 +79,7 @@ BOOST_AUTO_TEST_CASE(walletinit_verify_walletdir_no_trailing2)\n     BOOST_CHECK(result == true);\n     fs::path walletdir = gArgs.GetArg(\"-walletdir\", \"\");\n     fs::path expected_path = fs::canonical(m_walletdir_path_cases[\"default\"]);\n-    BOOST_CHECK(walletdir == expected_path);\n+    BOOST_CHECK_EQUAL(walletdir, expected_path);\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "b087859dc38047004e9e63114ace69671cd0a3c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDg3ODU5ZGMzODA0NzAwNGU5ZTYzMTE0YWNlNjk2NzFjZDBhM2M0",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T13:52:30Z"
      },
      "committer": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-07-08T13:52:30Z"
      },
      "message": "system.cpp: Check whethere datadir is not empty.",
      "tree": {
        "sha": "349b62cb637bbb75d3b5ddc6a9b9ad372ed61981",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/349b62cb637bbb75d3b5ddc6a9b9ad372ed61981"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b087859dc38047004e9e63114ace69671cd0a3c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b087859dc38047004e9e63114ace69671cd0a3c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b087859dc38047004e9e63114ace69671cd0a3c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b087859dc38047004e9e63114ace69671cd0a3c4/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b100b57d2804cb7b0f8b35baf05ccfe6a3cbd4d1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "bd7c74d491565af15df2319a505a3384d95e74e1",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b087859dc38047004e9e63114ace69671cd0a3c4/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b087859dc38047004e9e63114ace69671cd0a3c4/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=b087859dc38047004e9e63114ace69671cd0a3c4",
        "patch": "@@ -636,9 +636,11 @@ const fs::path &GetDataDir(bool fNetSpecific)\n     } else {\n         path = GetDefaultDataDir();\n     }\n-    if (fNetSpecific)\n-        path /= BaseParams().DataDir();\n-\n+    if (fNetSpecific) {\n+        if (!BaseParams().DataDir().empty()) {\n+            path /= BaseParams().DataDir();\n+        }\n+    }\n     if (fs::create_directories(path)) {\n         // This is the first run, create wallets subdirectory too\n         fs::create_directories(path / \"wallets\");"
      }
    ]
  }
]