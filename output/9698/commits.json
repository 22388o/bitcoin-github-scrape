[
  {
    "sha": "45e2e085612463dd9cca9f1b221733afa6d52991",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NWUyZTA4NTYxMjQ2M2RkOWNjYTlmMWIyMjE3MzNhZmE2ZDUyOTkx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-06T18:47:24Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-06T19:48:50Z"
      },
      "message": "net: rearrange so that socket accesses can be grouped together",
      "tree": {
        "sha": "61a599d965a34037f358eb5c03489d82206da0d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61a599d965a34037f358eb5c03489d82206da0d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45e2e085612463dd9cca9f1b221733afa6d52991",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45e2e085612463dd9cca9f1b221733afa6d52991",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45e2e085612463dd9cca9f1b221733afa6d52991",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45e2e085612463dd9cca9f1b221733afa6d52991/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02464da5e4aa8c19d4fff3859dcdee822e2af78c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02464da5e4aa8c19d4fff3859dcdee822e2af78c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02464da5e4aa8c19d4fff3859dcdee822e2af78c"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 23,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b47514fd925d580b372fe4a7430957f16caa2647",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 14,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45e2e085612463dd9cca9f1b221733afa6d52991/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45e2e085612463dd9cca9f1b221733afa6d52991/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=45e2e085612463dd9cca9f1b221733afa6d52991",
        "patch": "@@ -1152,9 +1152,6 @@ void CConnman::ThreadSocketHandler()\n             {\n                 if (pnode->hSocket == INVALID_SOCKET)\n                     continue;\n-                FD_SET(pnode->hSocket, &fdsetError);\n-                hSocketMax = std::max(hSocketMax, pnode->hSocket);\n-                have_fds = true;\n \n                 // Implement the following logic:\n                 // * If there is data to send, select() for sending data. As this only\n@@ -1166,16 +1163,24 @@ void CConnman::ThreadSocketHandler()\n                 //   receiving data.\n                 // * Hand off all complete messages to the processor, to be handled without\n                 //   blocking here.\n+\n+                bool select_recv = !pnode->fPauseRecv;\n+                bool select_send;\n                 {\n                     LOCK(pnode->cs_vSend);\n-                    if (!pnode->vSendMsg.empty()) {\n-                        FD_SET(pnode->hSocket, &fdsetSend);\n-                        continue;\n-                    }\n+                    select_send = !pnode->vSendMsg.empty();\n                 }\n-                {\n-                    if (!pnode->fPauseRecv)\n-                        FD_SET(pnode->hSocket, &fdsetRecv);\n+\n+                FD_SET(pnode->hSocket, &fdsetError);\n+                hSocketMax = std::max(hSocketMax, pnode->hSocket);\n+                have_fds = true;\n+\n+                if (select_send) {\n+                    FD_SET(pnode->hSocket, &fdsetSend);\n+                    continue;\n+                }\n+                if (select_recv) {\n+                    FD_SET(pnode->hSocket, &fdsetRecv);\n                 }\n             }\n         }\n@@ -1229,9 +1234,15 @@ void CConnman::ThreadSocketHandler()\n             //\n             // Receive\n             //\n+            bool recvSet = false;\n+            bool sendSet = false;\n+            bool errorSet = false;\n             if (pnode->hSocket == INVALID_SOCKET)\n                 continue;\n-            if (FD_ISSET(pnode->hSocket, &fdsetRecv) || FD_ISSET(pnode->hSocket, &fdsetError))\n+            recvSet = FD_ISSET(pnode->hSocket, &fdsetRecv);\n+            sendSet = FD_ISSET(pnode->hSocket, &fdsetSend);\n+            errorSet = FD_ISSET(pnode->hSocket, &fdsetError);\n+            if (recvSet || errorSet)\n             {\n                 {\n                     {\n@@ -1286,9 +1297,7 @@ void CConnman::ThreadSocketHandler()\n             //\n             // Send\n             //\n-            if (pnode->hSocket == INVALID_SOCKET)\n-                continue;\n-            if (FD_ISSET(pnode->hSocket, &fdsetSend))\n+            if (sendSet)\n             {\n                 LOCK(pnode->cs_vSend);\n                 size_t nBytes = SocketSendData(pnode);"
      }
    ]
  },
  {
    "sha": "9a0b784deaab6b9fffcab227d928987b981d0572",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTBiNzg0ZGVhYWI2YjlmZmZjYWIyMjdkOTI4OTg3Yjk4MWQwNTcy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-06T19:05:45Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-06T19:48:50Z"
      },
      "message": "net: add a lock around hSocket",
      "tree": {
        "sha": "798813108d73e10d0bf9ee61be34efd4657d11a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/798813108d73e10d0bf9ee61be34efd4657d11a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a0b784deaab6b9fffcab227d928987b981d0572",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a0b784deaab6b9fffcab227d928987b981d0572",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a0b784deaab6b9fffcab227d928987b981d0572",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a0b784deaab6b9fffcab227d928987b981d0572/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45e2e085612463dd9cca9f1b221733afa6d52991",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45e2e085612463dd9cca9f1b221733afa6d52991",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45e2e085612463dd9cca9f1b221733afa6d52991"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 29,
      "deletions": 15
    },
    "files": [
      {
        "sha": "2625cccaa3a922c400157297bbc7de1c87424c54",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 15,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a0b784deaab6b9fffcab227d928987b981d0572/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a0b784deaab6b9fffcab227d928987b981d0572/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9a0b784deaab6b9fffcab227d928987b981d0572",
        "patch": "@@ -425,6 +425,7 @@ void CConnman::DumpBanlist()\n void CNode::CloseSocketDisconnect()\n {\n     fDisconnect = true;\n+    LOCK(cs_hSocket);\n     if (hSocket != INVALID_SOCKET)\n     {\n         LogPrint(\"net\", \"disconnecting peer=%d\\n\", id);\n@@ -789,7 +790,13 @@ size_t CConnman::SocketSendData(CNode *pnode) const\n     while (it != pnode->vSendMsg.end()) {\n         const auto &data = *it;\n         assert(data.size() > pnode->nSendOffset);\n-        int nBytes = send(pnode->hSocket, reinterpret_cast<const char*>(data.data()) + pnode->nSendOffset, data.size() - pnode->nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+        int nBytes = 0;\n+        {\n+            LOCK(pnode->cs_hSocket);\n+            if (pnode->hSocket == INVALID_SOCKET)\n+                break;\n+            nBytes = send(pnode->hSocket, reinterpret_cast<const char*>(data.data()) + pnode->nSendOffset, data.size() - pnode->nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+        }\n         if (nBytes > 0) {\n             pnode->nLastSend = GetSystemTimeInSeconds();\n             pnode->nSendBytes += nBytes;\n@@ -1150,9 +1157,6 @@ void CConnman::ThreadSocketHandler()\n             LOCK(cs_vNodes);\n             BOOST_FOREACH(CNode* pnode, vNodes)\n             {\n-                if (pnode->hSocket == INVALID_SOCKET)\n-                    continue;\n-\n                 // Implement the following logic:\n                 // * If there is data to send, select() for sending data. As this only\n                 //   happens when optimistic write failed, we choose to first drain the\n@@ -1171,6 +1175,10 @@ void CConnman::ThreadSocketHandler()\n                     select_send = !pnode->vSendMsg.empty();\n                 }\n \n+                LOCK(pnode->cs_hSocket);\n+                if (pnode->hSocket == INVALID_SOCKET)\n+                    continue;\n+\n                 FD_SET(pnode->hSocket, &fdsetError);\n                 hSocketMax = std::max(hSocketMax, pnode->hSocket);\n                 have_fds = true;\n@@ -1237,18 +1245,27 @@ void CConnman::ThreadSocketHandler()\n             bool recvSet = false;\n             bool sendSet = false;\n             bool errorSet = false;\n-            if (pnode->hSocket == INVALID_SOCKET)\n-                continue;\n-            recvSet = FD_ISSET(pnode->hSocket, &fdsetRecv);\n-            sendSet = FD_ISSET(pnode->hSocket, &fdsetSend);\n-            errorSet = FD_ISSET(pnode->hSocket, &fdsetError);\n+            {\n+                LOCK(pnode->cs_hSocket);\n+                if (pnode->hSocket == INVALID_SOCKET)\n+                    continue;\n+                recvSet = FD_ISSET(pnode->hSocket, &fdsetRecv);\n+                sendSet = FD_ISSET(pnode->hSocket, &fdsetSend);\n+                errorSet = FD_ISSET(pnode->hSocket, &fdsetError);\n+            }\n             if (recvSet || errorSet)\n             {\n                 {\n                     {\n                         // typical socket buffer is 8K-64K\n                         char pchBuf[0x10000];\n-                        int nBytes = recv(pnode->hSocket, pchBuf, sizeof(pchBuf), MSG_DONTWAIT);\n+                        int nBytes = 0;\n+                        {\n+                            LOCK(pnode->cs_hSocket);\n+                            if (pnode->hSocket == INVALID_SOCKET)\n+                                continue;\n+                            nBytes = recv(pnode->hSocket, pchBuf, sizeof(pchBuf), MSG_DONTWAIT);\n+                        }\n                         if (nBytes > 0)\n                         {\n                             bool notify = false;\n@@ -2286,8 +2303,7 @@ void CConnman::Stop()\n \n     // Close sockets\n     BOOST_FOREACH(CNode* pnode, vNodes)\n-        if (pnode->hSocket != INVALID_SOCKET)\n-            CloseSocket(pnode->hSocket);\n+        pnode->CloseSocketDisconnect();\n     BOOST_FOREACH(ListenSocket& hListenSocket, vhListenSocket)\n         if (hListenSocket.socket != INVALID_SOCKET)\n             if (!CloseSocket(hListenSocket.socket))\n@@ -2688,9 +2704,6 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n     size_t nBytesSent = 0;\n     {\n         LOCK(pnode->cs_vSend);\n-        if(pnode->hSocket == INVALID_SOCKET) {\n-            return;\n-        }\n         bool optimisticSend(pnode->vSendMsg.empty());\n \n         //log total amount of bytes per command"
      },
      {
        "sha": "e5a19e0f43ef484525e5b4c531c9c3e4941b4f7c",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a0b784deaab6b9fffcab227d928987b981d0572/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a0b784deaab6b9fffcab227d928987b981d0572/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=9a0b784deaab6b9fffcab227d928987b981d0572",
        "patch": "@@ -572,6 +572,7 @@ class CNode\n     uint64_t nSendBytes;\n     std::deque<std::vector<unsigned char>> vSendMsg;\n     CCriticalSection cs_vSend;\n+    CCriticalSection cs_hSocket;\n \n     CCriticalSection cs_vProcessMsg;\n     std::list<CNetMessage> vProcessMsg;"
      }
    ]
  }
]