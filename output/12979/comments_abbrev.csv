MarcoFalke,2018-04-17T16:02:09Z,weak re-utACK e95db395592c763e8c77f619db7a8f5dbaa0a604 (Only changes were a rebase to solve conflicts and three minor comment clarifications),https://github.com/bitcoin/bitcoin/pull/12979#issuecomment-382047786,382047786,
sipa,2018-04-26T19:11:26Z,"I'm confused, this removes the connect trace, but it's only refactoring?",https://github.com/bitcoin/bitcoin/pull/12979#issuecomment-384757747,384757747,
ajtowns,2018-04-26T22:58:20Z,"Still a big set of commits.\n\nIt seems like it would have been simpler to do:\n\n```\n+void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReason reason, std::vector<CTransactionRef>* txn_removed) {\n     // Remove transaction from memory pool\n     LOCK(cs);\n     setEntries setAllRemoves;\n     calculateRemoveRecursive(origTx, setAllRemoves);\n+    if (txn_remov",https://github.com/bitcoin/bitcoin/pull/12979#issuecomment-384813991,384813991,
TheBlueMatt,2018-04-27T16:47:36Z,"@sipa yes. Because the validationinterface/mempoolinterface callbacks happen on a background thread, having an object which queues up callbacks for calling later is just redundant (as no other thread will be able to see an inconsistent state while we hold cs_main). The callbacks themselves should not change in that commit, it just removes a redundant queue.\n\n@ajtowns thanks for taking a look. ",https://github.com/bitcoin/bitcoin/pull/12979#issuecomment-385028158,385028158,
jimpo,2018-05-11T00:19:05Z,"ACK 53b90df. Tested by running with `-debug=mempool`, sending to wallet and checking unconfirmed balance, spending from wallet and checking balance. Did not attempt to test conflicts/double spends.",https://github.com/bitcoin/bitcoin/pull/12979#issuecomment-388223339,388223339,
MarcoFalke,2018-05-21T19:26:12Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/12979#issuecomment-390756546,390756546,
MarcoFalke,2018-04-16T17:50:32Z,"in commit 16e4c4bed66e436be606b9cfc6fa982819f00b86: Should say ""changes""?",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r181830064,181830064,src/validationinterface.h
MarcoFalke,2018-04-16T18:39:30Z,"in commit ff936aeea569a2ae56a3d9096a486fbd94b6dde7: I don't understand what this comment means. Mind to elaborate or remove?\n\nEdit: I presume instead of ""copy"" you mean ""witness"", since the witness might be different and it is no longer a copy?",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r181844101,181844101,src/txmempool.cpp
MarcoFalke,2018-04-16T19:34:41Z,"nit in commit db156ea327577fb1455049efe047e5722a18b1ab: Could add a semicolon, dot or new line to indicate the start of a new sentence. (before REPLACED)",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r181859836,181859836,src/txmempool.cpp
MarcoFalke,2018-04-16T19:52:17Z,nit in commit 6b4e2a79e41401c6a39f7039b469d04e13fd3c83: Could add a comment to explain why `txn_replaced` is dropped?,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r181864451,181864451,src/zmq/zmqnotificationinterface.cpp
MarcoFalke,2018-04-16T19:58:03Z,"in commit db156ea327577fb1455049efe047e5722a18b1ab: You pass the block height, but it doesn't appear to be used anywhere?",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r181865943,181865943,src/txmempool.cpp
TheBlueMatt,2018-04-17T15:20:28Z,Its used in #11775.,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r182112893,182112893,src/txmempool.cpp
TheBlueMatt,2018-04-17T15:20:31Z,"I just added a ""as per spec"" note that its clarified more in MempoolUpdatedForBlockConnect docs (""The txn_removed_in_block txn are as they appear in the block, and may have different witnesses from the version which was previously in the mempool"").",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r182112915,182112915,src/txmempool.cpp
Empact,2018-04-18T23:05:54Z,Could you break this line?,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r182594424,182594424,src/wallet/wallet.cpp
MarcoFalke,2018-04-19T12:12:23Z,"Please no trivial changes to pull request with a ton of commits. It is always a pain to re-ACK, since a diff has to be done for every commit.",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r182724028,182724028,src/wallet/wallet.cpp
TheBlueMatt,2018-04-20T16:15:30Z,"Will do when another round of changes comes in after more review, until then agree with Marco, not worth a rebase for it.",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r183101106,183101106,src/wallet/wallet.cpp
ryanofsky,2018-04-30T16:59:49Z,"In commit ""Clarify validationinterface notification ordering"" (e7d7edc898c31ef37d6d64e61c72979c32253a43)\n\nI couldn't understand what ""without forward-progress"" means, and would appreciate any clarification. Does it just mean this can be called repeatedly with the same tip? (I asked about this previously in https://github.com/bitcoin/bitcoin/pull/11856#discussion_r158392479)",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185045834,185045834,src/validationinterface.h
jnewbery,2018-05-01T15:59:21Z,Should this be `BlockDisconnected/BlockConnected`?,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185257376,185257376,src/validationinterface.h
jnewbery,2018-05-01T16:00:19Z,I don't understand why this is an edge case or needs to be removed? Seems reasonable to remove txs from the mempool without necessarily needing to add other txs.,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185257616,185257616,src/validationinterface.h
jnewbery,2018-05-01T16:04:46Z,I'm not sure if 'core' is the right word now that there are validation and mempool interfaces. Would 'chainstate' be better?,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185258701,185258701,src/validationinterface.h
jnewbery,2018-05-01T16:28:59Z,"I think this is still unclear (`as per spec` is not very meaningful for me). Suggested wording: `Use the tx as it appears in the block. See comment for MempoolUpdatedForBlockConnect() for details.` or similar\n",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185264767,185264767,src/txmempool.cpp
jnewbery,2018-05-01T17:32:18Z,"Can you add an `AssertLockHeld(cs_main);` to this function? `ConnectTip()` is only called by `ActivateBestChainStep()`, which holds `cs_main`.\n\nThis would make it clearer that MempoolUpdatedForBlockConnect is called immediately before its BlockConnected (ie we can't have two BlockConnected calls racing each other).\n",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185280866,185280866,src/validation.cpp
jnewbery,2018-05-01T18:32:14Z,"I can't comment on the exact line above (currently L2361), but can you update:\n```\n     // Remove conflicting transactions from the mempool.;\n```\nto:\n```\n     // Remove conflicting transactions from the mempool. This will fire the MempoolUpdatedForBlockConnect() notification.\n```\nor similar",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185297003,185297003,src/validation.cpp
jnewbery,2018-05-01T18:33:44Z,"micronit: this part of the comment was updated in the wrong commit (_Remove boost::signals from txmempool, call GetMainSignals() directly_ instead of _BlockConnected(vtxConflicted) -> New MempoolInterface callback_)",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185297406,185297406,src/validationinterface.h
jnewbery,2018-05-01T18:57:25Z,"In fact, I think this comment is basically misleading. `TransactionRemovedFromMempool` no longer has a corresponding `TransactionAddedToMempool` event (`TransactionAddedToMempool` carries its own replaced txs).",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185303587,185303587,src/validationinterface.h
TheBlueMatt,2018-05-02T04:46:03Z,The comment was referencing transactions which were never actually added to mempool but which we tried to add and then removed in the mempool limit pass before we ever generated a TransactionAddedToMempool callback for. Will look into making it more clear.,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185392382,185392382,src/validationinterface.h
TheBlueMatt,2018-05-02T17:59:37Z,"I'll let @practicalswift get to that with EXCLUSIVE_LOCKS_REQUIRED additions. Would prefer to not add more AssertLockHelds that are just gonna get converted anyway (also, I think its assumed that everything in CChainState either takes, or requires, and certainly for private stuff requires, cs_main).",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185585758,185585758,src/validation.cpp
practicalswift,2018-05-02T18:19:53Z,@TheBlueMatt I'm standing ready! :-),https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185592206,185592206,src/validation.cpp
jnewbery,2018-05-02T20:31:21Z,s/core and mempool/validation and mempool,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185629290,185629290,src/validationinterface.h
jnewbery,2018-05-02T20:48:06Z,"Ah, I understand now. Suggested wording:\n\n`Note that a transaction may fire a TransactionRemovedFromMempool notification without having previously fired a TransactionAddedToMempool notification (for example if it passes all AcceptToMemoryPool checks, but isn't added to the mempool due to a LimitMempoolSize() step).` or similar",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185633968,185633968,src/validationinterface.h
jnewbery,2018-05-02T20:48:58Z,"sure, sounds good",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185634207,185634207,src/validation.cpp
laanwj,2018-05-03T14:01:27Z,"Thanks for adding the documentation.\nI think it'd be better to open an issue to track the TODOs, instead of putting them in the source code comments (this tends to get out of date very quickly).",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185807826,185807826,src/validationinterface.h
laanwj,2018-05-03T14:17:03Z,"What is the rationale to put mempool signals on something else than on the mempool itself (or an object contained in it)? \nNaively I'd think it'd be a more appropriate place than on the global validation interface.",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185813127,185813127,src/txmempool.h
TheBlueMatt,2018-05-03T19:05:43Z,"CTxMemPool isn't really ""the mempool"" its more like ""the data structure that stores mempool and has some of the logic from validation.cpp's mempool management stuff in it"". While it'd be nice to clean that up, I don't think its as cut-and-dry as ""belongs elsewhere"". More directly, the reason I wanted to do this is it means one less place we have to include boost signals in an included-everywhere .",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r185906307,185906307,src/txmempool.h
sdaftuar,2018-05-08T14:29:58Z,"@ryanofsky ""without forward-progress"" means being at a worse-tip than we were previously at before (less work, or same work but a block that sorts worse than our prior tip, eg we received it second) -- exposing such an intermediate state to listeners is a bug.  Note that this would be fixed by #13023.",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r186747801,186747801,src/validationinterface.h
laanwj,2018-05-12T07:04:01Z,"If CTxMempool isn't really ""the mempool"" that doesn't mean it shouldn't be. I think grouping the functionality for a certain concern together in one module makes sense.\nE.g. when trying to understand the code, ""Mempool"" is definitely a more useful conceptual grouping than ""all notification signals"".\nBut I don't feel strongly enough about this to NACK this.",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r187766482,187766482,src/txmempool.h
sdaftuar,2018-05-16T12:23:23Z,"I think it would make sense to return both the version removed from the mempool and the version in the block, in the event that a malleated witness is mined.\n\nMy thinking is that listeners should either be expected to track everything they care about, in which case we should only return wtxid's to them when referencing something they've already seen, or they should not -- in which case we shou",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r188603956,188603956,src/txmempool.cpp
sdaftuar,2018-05-16T12:39:39Z,"I think it could make sense either way, with mempool signals living inside and coming from the mempool itself, or completely pulled out and coming from validation.cpp.  However it does seem suboptimal to have the call-sites be split, with some coming from validation.cpp and others coming from the mempool.\n\nIs it a design goal to eventually move all the call-sites to validation.cpp?  If so then",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r188608403,188608403,src/txmempool.h
sdaftuar,2018-05-16T12:46:25Z,"I haven't though through the numbers required here to make this a practical DoS, but should we make sure to drain the callback queue before processing too many tx messages to prevent unbounded memory?",https://github.com/bitcoin/bitcoin/pull/12979#discussion_r188610254,188610254,src/net_processing.cpp
sdaftuar,2018-05-16T12:55:57Z,nit: would be nice to add a comment explaining what txn_replaced is.,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r188613243,188613243,src/validationinterface.h
MarcoFalke,2018-05-17T19:09:28Z,Nit: could add a small comment in this method to explain why txn_replaced can safely be dropped?,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r189069737,189069737,src/zmq/zmqnotificationinterface.cpp
MarcoFalke,2018-09-24T15:26:28Z,#13023 was merged so this TODO can be removed?,https://github.com/bitcoin/bitcoin/pull/12979#discussion_r219880246,219880246,src/validationinterface.h
