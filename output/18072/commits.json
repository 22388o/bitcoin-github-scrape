[
  {
    "sha": "8e888983b7ced7a53d21272085a74558b20d7821",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTg4ODk4M2I3Y2VkN2E1M2QyMTI3MjA4NWE3NDU1OGIyMGQ3ODIx",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-02-04T17:52:11Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-02-05T16:11:24Z"
      },
      "message": "native_cctools: Don't use libc++ headers from clang\n\nWe modify the macdeploy instructions in the next commit to include\nlibc++ headers in the SDK.",
      "tree": {
        "sha": "ee1e25020739d0605b4193eff55a5175627ba092",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee1e25020739d0605b4193eff55a5175627ba092"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e888983b7ced7a53d21272085a74558b20d7821",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl466S0ACgkQDMUhUxl5\nkaUDwA/+NevErIgPvM12mbZCzF+uy/XhIRR6yEzevlL9VvX9Y41tS9F73GMZ2QA/\nBGyK7X3q1s4g2AtFOdnWEZpAYlWYkJtHfP9rQy0hzRaS64l4yBhaXOEGBVde46bK\nm/eT/IbjsbgSGMKblTLSl/mjFO3PKwhVBIiM6bRSRMV3pYw+fI2ys4T2MpOdM+3u\ngHqWkSwEAIOwy13FdlamVz2wwdcu7MyzOH0SWjxDvcE3Vaa5rhMwrfyrD2/qMKmb\nNwILK4S3w6NPwyTqQLL5VApW7Xw8xj3MSLuc0hkWYrxZxDalRUh8EA5WXNb7NIZk\n3lG1UkguM/FDZ59xA07PM+CUj4S4JaIvNP1vFIKbuw0KTVgDtagXyH4fe3ihTP7h\nHCL36ZVg7Gdzv8idxmoP/uyyKix8Ld2w2PJJ8XUF92j8+6m3qI6rLDSNtCzkVRDc\n+FWzUJMJMGt99fBCAY7tpRH7SZTZvKeJj+rJextG9HKhk60/FzsjEzazrX6yT6Vg\nNjV3sbZ9kE0wTOLXWTZMydIlo7ezNuAOKW5Hgqvl4CjZTTrPxG8JPkwSgyJBIacy\nqeLdS75juuRhlA6t47V7lJ/NXi1fS8HuPezvcasaDrhKKdrY99VbPd5afry8BTuq\nkGIsLbocQL66K51lG+6te9JOnSj6Ni6TM2WvhuJcbezxpj/FFVo=\n=RJqs\n-----END PGP SIGNATURE-----",
        "payload": "tree ee1e25020739d0605b4193eff55a5175627ba092\nparent 8a56f79d491271120abc3843c46e9dda44edd308\nauthor Carl Dong <contact@carldong.me> 1580838731 -0500\ncommitter Carl Dong <contact@carldong.me> 1580919084 -0500\n\nnative_cctools: Don't use libc++ headers from clang\n\nWe modify the macdeploy instructions in the next commit to include\nlibc++ headers in the SDK.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e888983b7ced7a53d21272085a74558b20d7821",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e888983b7ced7a53d21272085a74558b20d7821",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e888983b7ced7a53d21272085a74558b20d7821/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a56f79d491271120abc3843c46e9dda44edd308",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a56f79d491271120abc3843c46e9dda44edd308",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a56f79d491271120abc3843c46e9dda44edd308"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "19fcf54f9f1a28aa85e4db463e6dc7b22596f1ab",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e888983b7ced7a53d21272085a74558b20d7821/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e888983b7ced7a53d21272085a74558b20d7821/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=8e888983b7ced7a53d21272085a74558b20d7821",
        "patch": "@@ -73,6 +73,5 @@ define $(package)_stage_cmds\n   cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n   cp -rf lib/clang/$($(package)_clang_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include/ && \\\n   cp bin/llvm-dsymutil $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n-  if `test -d include/c++/`; then cp -rf include/c++/ $($(package)_staging_prefix_dir)/include/; fi && \\\n   if `test -d lib/c++/`; then cp -rf lib/c++/ $($(package)_staging_prefix_dir)/lib/; fi\n endef"
      }
    ]
  },
  {
    "sha": "8e8fadff59c48b33ffbdac14acd52f469954307d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZThmYWRmZjU5YzQ4YjMzZmZiZGFjMTRhY2Q1MmY0Njk5NTQzMDdk",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-10-15T23:28:49Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-02-05T16:11:27Z"
      },
      "message": "contrib: macdeploy: Correctly generate macOS SDK\n\nPreviously, we did not include the libc++ headers in our SDK creation,\nnow we can use tpoechtrager's script to correctly do that. The\ngen_sdk_package.sh is taken from\nhttps://github.com/tpoechtrager/osxcross/blob/d3392f4eae78f3fa3f1fd065fa423f2712825102/tools/gen_sdk_package.sh\n\nThe location within the SDK where we place the libc++ headers is chosen\nsuch that clang's search path detection logic for sysroots would pick up\nthe headers properly.\n\nWe also document this change.",
      "tree": {
        "sha": "73af8e708a992f467a5baaa6bea0d0a2da92f3f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73af8e708a992f467a5baaa6bea0d0a2da92f3f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e8fadff59c48b33ffbdac14acd52f469954307d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl466TAACgkQDMUhUxl5\nkaW3Ew/9E9AsY+6Kp5Ygjwkz4gZSbN2ZcnZzdtzRAY+3LfcSJZg8tl6H8Llqft1b\nIcszgLZaJxYMXwERRZAJ449WaAOzQ+HPFIdUCojaWAAnLekyWGdgeZ9BJU2gdR4o\n+dtqly6sMFFJsK6nUSWRx3BerIeaik6Ht1aWA+x2pl3XbfOcPG0umk5oRMl7mixu\njpdiHZT8YtGm1ddata1X8AU6dbd1PLZiw2nKeEzJ1ELdYDOfLnsXQEskyoigk1RV\nZ/gRdFRWL1qJqV3kPSe2mOdne9lDuTI/sQLeqUDmKaNEkmp5ZNUExyF39zHMXsZA\now8RVvHVA9CJVtW+BPu+/yqNg+MoBCBwMr9Tx1DorYB4FuD/AUgXJsbFDNB7JEQi\n7pQK/ZNTvj8Msz89KRMtGX+WvfooyGz+ycjyhhjzT6/2R+VAnUV75G+0uWxlFfik\n8FXjnqxVg0V36bV9/9+7uPx7kDoxRaSygVHiF8RxV+m4HIxkA4W8G5zh17x9vs0s\nVIpSFIan6sJQbXVx67gejc70VNxTfVvBUzUwRhLK53yEJldEbSZwCfSiz/JmIko3\n53G2LbgFyBcbl2lEILIsWqU5jXgiQCzGPRYxM28p2xt4FhIu4sDLJ1CrrrURiIsB\n/tJd0kzSBPC9j3rujCFo8vd0w+UVD/4e6s/5r4UKRxovyHj7WjI=\n=NJlx\n-----END PGP SIGNATURE-----",
        "payload": "tree 73af8e708a992f467a5baaa6bea0d0a2da92f3f7\nparent 8e888983b7ced7a53d21272085a74558b20d7821\nauthor Carl Dong <contact@carldong.me> 1571182129 -0400\ncommitter Carl Dong <contact@carldong.me> 1580919087 -0500\n\ncontrib: macdeploy: Correctly generate macOS SDK\n\nPreviously, we did not include the libc++ headers in our SDK creation,\nnow we can use tpoechtrager's script to correctly do that. The\ngen_sdk_package.sh is taken from\nhttps://github.com/tpoechtrager/osxcross/blob/d3392f4eae78f3fa3f1fd065fa423f2712825102/tools/gen_sdk_package.sh\n\nThe location within the SDK where we place the libc++ headers is chosen\nsuch that clang's search path detection logic for sysroots would pick up\nthe headers properly.\n\nWe also document this change.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e8fadff59c48b33ffbdac14acd52f469954307d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e8fadff59c48b33ffbdac14acd52f469954307d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e8fadff59c48b33ffbdac14acd52f469954307d/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e888983b7ced7a53d21272085a74558b20d7821",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e888983b7ced7a53d21272085a74558b20d7821",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e888983b7ced7a53d21272085a74558b20d7821"
      }
    ],
    "stats": {
      "total": 234,
      "additions": 227,
      "deletions": 7
    },
    "files": [
      {
        "sha": "f1f6f8b257e122e69d74fc8d25b2a7ab3f432872",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e8fadff59c48b33ffbdac14acd52f469954307d/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e8fadff59c48b33ffbdac14acd52f469954307d/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=8e8fadff59c48b33ffbdac14acd52f469954307d",
        "patch": "@@ -14,9 +14,11 @@ When complete, it will have produced `Bitcoin-Qt.dmg`.\n \n ## SDK Extraction\n \n-`Xcode.app` is packaged in a `.xip` archive.\n-This makes the SDK less-trivial to extract on non-macOS machines.\n-One approach (tested on Debian Buster) is outlined below:\n+### Step 1: Obtaining `Xcode.app`\n+\n+After Xcode version 7.x, Apple started shipping the `Xcode.app` in a `.xip`\n+archive. This makes the SDK less-trivial to extract on non-macOS machines. One\n+approach (tested on Debian Buster) is outlined below:\n \n ```bash\n \n@@ -37,17 +39,27 @@ popd\n xar -xf Xcode_10.2.1.xip -C .\n \n ./pbzx/pbzx -n Content | cpio -i\n-\n-find Xcode.app -type d -name MacOSX.sdk -execdir sh -c 'tar -c MacOSX.sdk/ | gzip -9n > /MacOSX10.14.sdk.tar.gz' \\;\n ```\n \n-on macOS the process is more straightforward:\n+On macOS the process is more straightforward:\n \n ```bash\n xip -x Xcode_10.2.1.xip\n-tar -C Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.14.sdk.tar.gz MacOSX.sdk\n ```\n \n+### Step 2: Generating `MacOSX10.14.sdk.tar.gz` from `Xcode.app`\n+\n+To generate `MacOSX10.14.sdk.tar.gz`, run the script\n+[`gen_sdk_package.sh`](./gen_sdk_package.sh) with the XCODEDIR environment\n+variable pointing to the `Xcode.app` extracted in the previous stage.\n+\n+```bash\n+env SDK_COMPRESSOR=gz XCODEDIR=\"<path_to_Xcode.app>\" \\\n+    contrib/macdeploy/gen_sdk_package.sh\n+```\n+\n+### Historial macOS SDK Extraction Notes\n+\n Our previously used macOS SDK (`MacOSX10.11.sdk`) can be extracted from\n [Xcode 7.3.1 dmg](https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg).\n The script [`extract-osx-sdk.sh`](./extract-osx-sdk.sh) automates this. First"
      },
      {
        "sha": "728d34b1137e885d998f1eec699395e925b633aa",
        "filename": "contrib/macdeploy/gen_sdk_package.sh",
        "status": "added",
        "additions": 208,
        "deletions": 0,
        "changes": 208,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e8fadff59c48b33ffbdac14acd52f469954307d/contrib/macdeploy/gen_sdk_package.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e8fadff59c48b33ffbdac14acd52f469954307d/contrib/macdeploy/gen_sdk_package.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/gen_sdk_package.sh?ref=8e8fadff59c48b33ffbdac14acd52f469954307d",
        "patch": "@@ -0,0 +1,208 @@\n+#!/usr/bin/env bash\n+#\n+# Package the OS X SDKs into a tar file to be used by `build.sh`.\n+#\n+\n+export LC_ALL=C\n+\n+\n+which gnutar &>/dev/null\n+\n+if [ $? -eq 0 ]; then\n+  TAR=gnutar\n+else\n+  TAR=tar\n+fi\n+\n+\n+if [ -z \"$SDK_COMPRESSOR\" ]; then\n+  which xz &>/dev/null\n+\n+  if [ $? -eq 0 ]; then\n+    SDK_COMPRESSOR=xz\n+    SDK_EXT=\"tar.xz\"\n+  else\n+    SDK_COMPRESSOR=bzip2\n+    SDK_EXT=\"tar.bz2\"\n+  fi\n+fi\n+\n+case $SDK_COMPRESSOR in\n+  \"gz\")\n+    SDK_COMPRESSOR=gzip\n+    SDK_EXT=\".tar.gz\"\n+    ;;\n+  \"bzip2\")\n+    SDK_EXT=\".tar.bz2\"\n+    ;;\n+  \"xz\")\n+    SDK_EXT=\".tar.xz\"\n+    ;;\n+  \"zip\")\n+    SDK_EXT=\".zip\"\n+    ;;\n+  *)\n+    echo \"error: unknown compressor \\\"$SDK_COMPRESSOR\\\"\" >&2\n+    exit 1\n+esac\n+\n+function compress()\n+{\n+  case $SDK_COMPRESSOR in\n+    \"zip\")\n+      $SDK_COMPRESSOR -q -5 -r - $1 > $2 ;;\n+    *)\n+      tar cf - $1 | $SDK_COMPRESSOR -5 - > $2 ;;\n+  esac\n+}\n+\n+\n+function rreadlink()\n+{\n+  if [ ! -h \"$1\" ]; then\n+    echo \"$1\"\n+  else\n+    local link=\"$(expr \"$(command ls -ld -- \"$1\")\" : '.*-> \\(.*\\)$')\"\n+    cd $(dirname $1)\n+    rreadlink \"$link\" | sed \"s|^\\([^/].*\\)\\$|$(dirname $1)/\\1|\"\n+  fi\n+}\n+\n+function set_xcode_dir()\n+{\n+  local tmp=$(ls $1 2>/dev/null | grep \"^Xcode.*.app\" | grep -v \"beta\" | head -n1)\n+\n+  if [ -z \"$tmp\" ]; then\n+    tmp=$(ls $1 2>/dev/null | grep \"^Xcode.*.app\" | head -n1)\n+  fi\n+\n+  if [ -n \"$tmp\" ]; then\n+    XCODEDIR=\"$1/$tmp\"\n+  fi\n+}\n+\n+\n+if [ $(uname -s) != \"Darwin\" ]; then\n+  if [ -z \"$XCODEDIR\" ]; then\n+    echo \"This script must be run on OS X\" 1>&2\n+    echo \"... Or with XCODEDIR=... on Linux\" 1>&2\n+    exit 1\n+  else\n+    case \"$XCODEDIR\" in\n+      /*) ;;\n+      *) XCODEDIR=\"$PWD/$XCODEDIR\" ;;\n+    esac\n+    set_xcode_dir \"$XCODEDIR\"\n+  fi\n+else\n+  set_xcode_dir $(echo /Volumes/Xcode* | tr ' ' '\\n' | grep -v \"beta\" | head -n1)\n+\n+  if [ -z \"$XCODEDIR\" ]; then\n+    set_xcode_dir /Applications\n+\n+    if [ -z \"$XCODEDIR\" ]; then\n+      set_xcode_dir $(echo /Volumes/Xcode* | tr ' ' '\\n' | head -n1)\n+\n+      if [ -z \"$XCODEDIR\" ]; then\n+        echo \"please mount Xcode.dmg\" 1>&2\n+        exit 1\n+      fi\n+    fi\n+  fi\n+fi\n+\n+if [ ! -d \"$XCODEDIR\" ]; then\n+  echo \"cannot find Xcode (XCODEDIR=$XCODEDIR)\" 1>&2\n+  exit 1\n+fi\n+\n+echo -e \"found Xcode: $XCODEDIR\"\n+\n+WDIR=$(pwd)\n+\n+set -e\n+\n+pushd \"$XCODEDIR\" &>/dev/null\n+\n+if [ -d \"Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\" ]; then\n+  pushd \"Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\" &>/dev/null\n+else\n+  if [ -d \"../Packages\" ]; then\n+    pushd \"../Packages\" &>/dev/null\n+  elif [ -d \"Packages\" ]; then\n+    pushd \"Packages\" &>/dev/null\n+  else\n+    if [ $? -ne 0 ]; then\n+      echo \"Xcode (or this script) is out of date\" 1>&2\n+      echo \"trying some magic to find the SDKs anyway ...\" 1>&2\n+\n+      SDKDIR=$(find . -name SDKs -type d | grep MacOSX | head -n1)\n+\n+      if [ -z \"$SDKDIR\" ]; then\n+        echo \"cannot find SDKs!\" 1>&2\n+        exit 1\n+      fi\n+\n+      pushd \"$SDKDIR\" &>/dev/null\n+    fi\n+  fi\n+fi\n+\n+SDKS=$(ls | grep \"^MacOSX10.*\" | grep -v \"Patch\")\n+\n+if [ -z \"$SDKS\" ]; then\n+    echo \"No SDK found\" 1>&2\n+    exit 1\n+fi\n+\n+# Xcode 5\n+LIBCXXDIR1=\"Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1\"\n+\n+# Xcode 6\n+LIBCXXDIR2=\"Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1\"\n+\n+# Manual directory\n+MANDIR=\"Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/share/man\"\n+\n+for SDK in $SDKS; do\n+  echo -n \"packaging $(echo \"$SDK\" | sed -E \"s/(.sdk|.pkg)//g\") SDK \"\n+  echo \"(this may take several minutes) ...\"\n+\n+  if [[ $SDK == *.pkg ]]; then\n+    cp $SDK $WDIR\n+    continue\n+  fi\n+\n+  TMP=$(mktemp -d /tmp/XXXXXXXXXXX)\n+  cp -r $(rreadlink $SDK) $TMP/$SDK &>/dev/null || true\n+\n+  pushd \"$XCODEDIR\" &>/dev/null\n+\n+  mkdir -p $TMP/$SDK/usr/include/c++\n+\n+  # libc++ headers for C++11/C++14\n+  if [ -d $LIBCXXDIR1 ]; then\n+    cp -rf $LIBCXXDIR1 \"$TMP/$SDK/usr/include/c++\"\n+  elif [ -d $LIBCXXDIR2 ]; then\n+    cp -rf $LIBCXXDIR2 \"$TMP/$SDK/usr/include/c++\"\n+  fi\n+\n+  if [ -d $MANDIR ]; then\n+    mkdir -p $TMP/$SDK/usr/share/man\n+    cp -rf $MANDIR/* $TMP/$SDK/usr/share/man\n+  fi\n+\n+  popd &>/dev/null\n+\n+  pushd $TMP &>/dev/null\n+  compress \"*\" \"$WDIR/$SDK$SDK_EXT\"\n+  popd &>/dev/null\n+\n+  rm -rf $TMP\n+done\n+\n+popd &>/dev/null\n+popd &>/dev/null\n+\n+echo \"\"\n+ls -lh | grep MacOSX"
      }
    ]
  }
]