[
  {
    "sha": "3450a9b25cd6dbc69daf946bd3a610681ee61317",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDUwYTliMjVjZDZkYmM2OWRhZjk0NmJkM2E2MTA2ODFlZTYxMzE3",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-11T03:13:32Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-11T03:13:32Z"
      },
      "message": "Extract consts for WITNESS_V0 hash sizes",
      "tree": {
        "sha": "7e72d27a4fdc3b92d53f660ac2dcce682f8d22a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e72d27a4fdc3b92d53f660ac2dcce682f8d22a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3450a9b25cd6dbc69daf946bd3a610681ee61317",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAlrNfVwACgkQTYykuhgE\nCQahpg//bNToX6aCGgRl2hFM6HS8kEJrQx+p/KWX0+qPGfj+dqipVsLzsxUcDApO\nqR0WUu6k95SelSv9zsuir9CS2VznhXqqx09IX0Q6BbSWpFpRylND/B9+e0MhdYFX\nHcOqrHZvjwZMRfqci75Bs7cSor6i3IsBp1cHWMTKW8i9rVwrrlhV6BkRbR5hR1CG\nTPpxnvw8UQvmz3OZWpRyfOWwiof1XYqxhBxDfNB5gejlfmcy3PcsobIaR5shKcBc\nEFg4TujpKdxCfY4UyZOtQwzzagLEWOnb717XzlZiqf+OoggF0/XqMj5n3bJxWCS8\nXLQcukRMeVr7alh9YCkXEUAmqy5Hde+nwFUcpgLe6GjYRdgakbrYbspmWoYQYXHe\nSg3Rh2tn/a1XYBNSZBZ///2Y5pHsi23CPE5eukYB069VEZfodp3ejdX+p9VVIOk4\nkPw5F5YFVsDGceyE3BzQ0JO/t6sT8vdt8UJTmrVHSZt+HzHjLySvUyVH0D+zmCvH\nm/Z+KOnVCpRnD0/5m9g+aTqlsOwcpEhsnfqm3bqMj2m8ODYGtVCvlYejvRDXqVW4\nGMaSPktIYqVdgxTCk9nJNGRvSrKeymFFE0dN0Myop7zY+CLWy8CSTX3b/c+rznJ1\n4XAmu4mav9BSiZgkxa/zcu0oamvIdjdJ35iFMW7+S2lcF4qzB6M=\n=F2lf\n-----END PGP SIGNATURE-----",
        "payload": "tree 7e72d27a4fdc3b92d53f660ac2dcce682f8d22a7\nparent 0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd\nauthor Ben Woosley <ben.woosley@gmail.com> 1523416412 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1523416412 -0700\n\nExtract consts for WITNESS_V0 hash sizes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3450a9b25cd6dbc69daf946bd3a610681ee61317",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3450a9b25cd6dbc69daf946bd3a610681ee61317",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3450a9b25cd6dbc69daf946bd3a610681ee61317/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 11,
      "deletions": 7
    },
    "files": [
      {
        "sha": "5963bf371abe6bf7e02b1fd0ee7b8b6fc3b74a3b",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=3450a9b25cd6dbc69daf946bd3a610681ee61317",
        "patch": "@@ -230,7 +230,7 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n             return false;\n \n         // Check P2WSH standard limits\n-        if (witnessversion == 0 && witnessprogram.size() == 32) {\n+        if (witnessversion == 0 && witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE) {\n             if (tx.vin[i].scriptWitness.stack.back().size() > MAX_STANDARD_P2WSH_SCRIPT_SIZE)\n                 return false;\n             size_t sizeWitnessStack = tx.vin[i].scriptWitness.stack.size() - 1;"
      },
      {
        "sha": "338e07e24e964068e227a0dc68dac4e04d7e5cfb",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=3450a9b25cd6dbc69daf946bd3a610681ee61317",
        "patch": "@@ -1361,7 +1361,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n     CScript scriptPubKey;\n \n     if (witversion == 0) {\n-        if (program.size() == 32) {\n+        if (program.size() == WITNESS_V0_SCRIPTHASH_SIZE) {\n             // Version 0 segregated witness program: SHA256(CScript) inside the program, CScript + inputs in witness\n             if (witness.stack.size() == 0) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n@@ -1373,7 +1373,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n             if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n-        } else if (program.size() == 20) {\n+        } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (witness.stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n@@ -1530,10 +1530,10 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n size_t static WitnessSigOps(int witversion, const std::vector<unsigned char>& witprogram, const CScriptWitness& witness, int flags)\n {\n     if (witversion == 0) {\n-        if (witprogram.size() == 20)\n+        if (witprogram.size() == WITNESS_V0_KEYHASH_SIZE)\n             return 1;\n \n-        if (witprogram.size() == 32 && witness.stack.size() > 0) {\n+        if (witprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE && witness.stack.size() > 0) {\n             CScript subscript(witness.stack.back().begin(), witness.stack.back().end());\n             return subscript.GetSigOpCount(true);\n         }"
      },
      {
        "sha": "601a4a866d1bdf131fe606fc42250b9dc81937a0",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=3450a9b25cd6dbc69daf946bd3a610681ee61317",
        "patch": "@@ -129,6 +129,10 @@ enum class SigVersion\n     WITNESS_V0 = 1,\n };\n \n+/** Signature hash sizes */\n+static constexpr size_t WITNESS_V0_SCRIPTHASH_SIZE = 32;\n+static constexpr size_t WITNESS_V0_KEYHASH_SIZE = 20;\n+\n uint256 SignatureHash(const CScript &scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType, const CAmount& amount, SigVersion sigversion, const PrecomputedTransactionData* cache = nullptr);\n \n class BaseSignatureChecker"
      },
      {
        "sha": "76778112aadd97d4f7c0300ea276e3ed15fdcecc",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3450a9b25cd6dbc69daf946bd3a610681ee61317/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=3450a9b25cd6dbc69daf946bd3a610681ee61317",
        "patch": "@@ -66,12 +66,12 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n     int witnessversion;\n     std::vector<unsigned char> witnessprogram;\n     if (scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n-        if (witnessversion == 0 && witnessprogram.size() == 20) {\n+        if (witnessversion == 0 && witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE) {\n             typeRet = TX_WITNESS_V0_KEYHASH;\n             vSolutionsRet.push_back(witnessprogram);\n             return true;\n         }\n-        if (witnessversion == 0 && witnessprogram.size() == 32) {\n+        if (witnessversion == 0 && witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE) {\n             typeRet = TX_WITNESS_V0_SCRIPTHASH;\n             vSolutionsRet.push_back(witnessprogram);\n             return true;"
      }
    ]
  }
]