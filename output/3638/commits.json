[
  {
    "sha": "44eb59e4a65499b581f3dd65adb719b21dc73673",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGViNTllNGE2NTQ5OWI1ODFmM2RkNjVhZGI3MTliMjFkYzczNjcz",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-02-07T06:55:23Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-02-07T11:27:41Z"
      },
      "message": "[Qt] remove broken OptionsModel::Upgrade()",
      "tree": {
        "sha": "85c2d23bcb2b107e994f1357804cc34e0579467f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85c2d23bcb2b107e994f1357804cc34e0579467f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44eb59e4a65499b581f3dd65adb719b21dc73673",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44eb59e4a65499b581f3dd65adb719b21dc73673",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44eb59e4a65499b581f3dd65adb719b21dc73673",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44eb59e4a65499b581f3dd65adb719b21dc73673/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d0295e9d5273838ef2cd9134154551bdbbf3850",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d0295e9d5273838ef2cd9134154551bdbbf3850",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d0295e9d5273838ef2cd9134154551bdbbf3850"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 0,
      "deletions": 69
    },
    "files": [
      {
        "sha": "dda79e3d0e1fa7201588a54ea84706fd1ee08e89",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44eb59e4a65499b581f3dd65adb719b21dc73673/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44eb59e4a65499b581f3dd65adb719b21dc73673/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=44eb59e4a65499b581f3dd65adb719b21dc73673",
        "patch": "@@ -376,9 +376,6 @@ void BitcoinApplication::initializeResult(int retval)\n     returnValue = retval ? 0 : 1;\n     if(retval)\n     {\n-        // Miscellaneous initialization after core is initialized\n-        optionsModel->Upgrade(); // Must be done after AppInit2\n-\n #ifdef ENABLE_WALLET\n         PaymentServer::LoadRootCAs();\n         paymentServer->setOptionsModel(optionsModel);"
      },
      {
        "sha": "a2a2732b1cedaae17462140185b89d378830424f",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44eb59e4a65499b581f3dd65adb719b21dc73673/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44eb59e4a65499b581f3dd65adb719b21dc73673/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=44eb59e4a65499b581f3dd65adb719b21dc73673",
        "patch": "@@ -130,69 +130,6 @@ void OptionsModel::Reset()\n     // default setting for OptionsModel::StartAtStartup - disabled\n     if (GUIUtil::GetStartOnSystemStartup())\n         GUIUtil::SetStartOnSystemStartup(false);\n-\n-    // Ensure Upgrade() is not running again by setting the bImportFinished flag\n-    settings.setValue(\"bImportFinished\", true);\n-}\n-\n-void OptionsModel::Upgrade()\n-{\n-    QSettings settings;\n-\n-    // Already upgraded\n-    if (settings.contains(\"bImportFinished\"))\n-        return;\n-\n-    settings.setValue(\"bImportFinished\", true);\n-\n-#ifdef ENABLE_WALLET\n-    // Move settings from old wallet.dat (if any):\n-    CWalletDB walletdb(strWalletFile);\n-\n-    QList<QString> intOptions;\n-    intOptions << \"nDisplayUnit\" << \"nTransactionFee\";\n-    foreach(QString key, intOptions)\n-    {\n-        int value = 0;\n-        if (walletdb.ReadSetting(key.toStdString(), value))\n-        {\n-            settings.setValue(key, value);\n-            walletdb.EraseSetting(key.toStdString());\n-        }\n-    }\n-    QList<QString> boolOptions;\n-    boolOptions << \"bDisplayAddresses\" << \"fMinimizeToTray\" << \"fMinimizeOnClose\" << \"fUseProxy\" << \"fUseUPnP\";\n-    foreach(QString key, boolOptions)\n-    {\n-        bool value = false;\n-        if (walletdb.ReadSetting(key.toStdString(), value))\n-        {\n-            settings.setValue(key, value);\n-            walletdb.EraseSetting(key.toStdString());\n-        }\n-    }\n-    try\n-    {\n-        CAddress addrProxyAddress;\n-        if (walletdb.ReadSetting(\"addrProxy\", addrProxyAddress))\n-        {\n-            settings.setValue(\"addrProxy\", addrProxyAddress.ToStringIPPort().c_str());\n-            walletdb.EraseSetting(\"addrProxy\");\n-        }\n-    }\n-    catch (std::ios_base::failure &e)\n-    {\n-        // 0.6.0rc1 saved this as a CService, which causes failure when parsing as a CAddress\n-        CService addrProxy;\n-        if (walletdb.ReadSetting(\"addrProxy\", addrProxy))\n-        {\n-            settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n-            walletdb.EraseSetting(\"addrProxy\");\n-        }\n-    }\n-#endif\n-\n-    Init();\n }\n \n int OptionsModel::rowCount(const QModelIndex & parent) const"
      },
      {
        "sha": "e5c1e3e8b909d32ce33365331ed64df56686ceae",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44eb59e4a65499b581f3dd65adb719b21dc73673/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44eb59e4a65499b581f3dd65adb719b21dc73673/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=44eb59e4a65499b581f3dd65adb719b21dc73673",
        "patch": "@@ -46,9 +46,6 @@ class OptionsModel : public QAbstractListModel\n     void Init();\n     void Reset();\n \n-    /* Migrate settings from wallet.dat after app initialization */\n-    void Upgrade();\n-\n     int rowCount(const QModelIndex & parent = QModelIndex()) const;\n     QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const;\n     bool setData(const QModelIndex & index, const QVariant & value, int role = Qt::EditRole);"
      }
    ]
  },
  {
    "sha": "cdb6c169355488d4e64a2435d916cb67a9c01ebe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGI2YzE2OTM1NTQ4OGQ0ZTY0YTI0MzVkOTE2Y2I2N2E5YzAxZWJl",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-02-07T11:59:46Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-02-07T11:59:46Z"
      },
      "message": "remove setting methods in wallet/walletdb",
      "tree": {
        "sha": "d6c9dae1cde5c582f1a609be191580ac7685cc3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6c9dae1cde5c582f1a609be191580ac7685cc3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdb6c169355488d4e64a2435d916cb67a9c01ebe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdb6c169355488d4e64a2435d916cb67a9c01ebe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdb6c169355488d4e64a2435d916cb67a9c01ebe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdb6c169355488d4e64a2435d916cb67a9c01ebe/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44eb59e4a65499b581f3dd65adb719b21dc73673",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44eb59e4a65499b581f3dd65adb719b21dc73673",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44eb59e4a65499b581f3dd65adb719b21dc73673"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 0,
      "deletions": 41
    },
    "files": [
      {
        "sha": "979560651c64750c3cb1e1d4af01794ccbefa163",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb6c169355488d4e64a2435d916cb67a9c01ebe/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb6c169355488d4e64a2435d916cb67a9c01ebe/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=cdb6c169355488d4e64a2435d916cb67a9c01ebe",
        "patch": "@@ -191,18 +191,6 @@ void CWallet::SetBestChain(const CBlockLocator& loc)\n     walletdb.WriteBestBlock(loc);\n }\n \n-// This class implements an addrIncoming entry that causes pre-0.4\n-// clients to crash on startup if reading a private-key-encrypted wallet.\n-class CCorruptAddress\n-{\n-public:\n-    IMPLEMENT_SERIALIZE\n-    (\n-        if (nType & SER_DISK)\n-            READWRITE(nVersion);\n-    )\n-};\n-\n bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn, bool fExplicit)\n {\n     AssertLockHeld(cs_wallet); // nWalletVersion\n@@ -221,13 +209,6 @@ bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn,\n     if (fFileBacked)\n     {\n         CWalletDB* pwalletdb = pwalletdbIn ? pwalletdbIn : new CWalletDB(strWalletFile);\n-        if (nWalletVersion >= 40000)\n-        {\n-            // Versions prior to 0.4.0 did not support the \"minversion\" record.\n-            // Use a CCorruptAddress to make them crash instead.\n-            CCorruptAddress corruptAddress;\n-            pwalletdb->WriteSetting(\"addrIncoming\", corruptAddress);\n-        }\n         if (nWalletVersion > 40000)\n             pwalletdb->WriteMinVersion(nWalletVersion);\n         if (!pwalletdbIn)"
      },
      {
        "sha": "56349fcfbdb8ca0c3cce607f0fc2da1e14b4aeaa",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb6c169355488d4e64a2435d916cb67a9c01ebe/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb6c169355488d4e64a2435d916cb67a9c01ebe/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=cdb6c169355488d4e64a2435d916cb67a9c01ebe",
        "patch": "@@ -154,12 +154,6 @@ bool CWalletDB::ErasePool(int64_t nPool)\n     return Erase(std::make_pair(std::string(\"pool\"), nPool));\n }\n \n-bool CWalletDB::EraseSetting(const std::string& strKey)\n-{\n-    nWalletDBUpdated++;\n-    return Erase(std::make_pair(std::string(\"setting\"), strKey));\n-}\n-\n bool CWalletDB::WriteMinVersion(int nVersion)\n {\n     return Write(std::string(\"minversion\"), nVersion);"
      },
      {
        "sha": "4f3e29283e830d25639c60338a10cfd4d10ba6e9",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb6c169355488d4e64a2435d916cb67a9c01ebe/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb6c169355488d4e64a2435d916cb67a9c01ebe/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=cdb6c169355488d4e64a2435d916cb67a9c01ebe",
        "patch": "@@ -104,22 +104,6 @@ class CWalletDB : public CDB\n     bool WritePool(int64_t nPool, const CKeyPool& keypool);\n     bool ErasePool(int64_t nPool);\n \n-    // Settings are no longer stored in wallet.dat; these are\n-    // used only for backwards compatibility:\n-    template<typename T>\n-    bool ReadSetting(const std::string& strKey, T& value)\n-    {\n-        return Read(std::make_pair(std::string(\"setting\"), strKey), value);\n-    }\n-    template<typename T>\n-    bool WriteSetting(const std::string& strKey, const T& value)\n-    {\n-        nWalletDBUpdated++;\n-        return Write(std::make_pair(std::string(\"setting\"), strKey), value);\n-    }\n- \n-    bool EraseSetting(const std::string& strKey);\n-\n     bool WriteMinVersion(int nVersion);\n \n     bool ReadAccount(const std::string& strAccount, CAccount& account);"
      }
    ]
  }
]