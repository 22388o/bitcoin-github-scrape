MarcoFalke,2018-09-11T21:37:43Z,"If they are known at compile time, they should use static_assert. Otherwise NACK",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420434263,420434263,
practicalswift,2018-09-11T21:45:22Z,"@MarcoFalke They are known at compile time by a sufficiently intelligent compiler, but I'm afraid we can't use `static_assert` since that requires the expressions to be [contextually converted constant expression of type bool](https://en.cppreference.com/w/cpp/language/constant_expression#Converted_constant_expression) which they are not.\n\nThis PR is WIP: let's find which of these cases that m",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420436353,420436353,
ryanofsky,2018-09-11T21:46:51Z,"> If they are known at compile time, they should use static_assert\n\nStatic assert is not applicable in any of these cases.\n\n> Otherwise NACK\n\nWould dispute this NACK. Generally these are nice code simplifications, though in many of these cases, I would probably just keep the simplifications and drop the asserts.",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420436806,420436806,
MarcoFalke,2018-09-11T22:17:56Z,The code with the explicit conditions is robust to refactoring oversights. I don't see why we would want to trade that for run-time assertions that can potentially be triggered remotely after some accidentally careless refactoring.,https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420445006,420445006,
ryanofsky,2018-09-11T22:24:29Z,"> The code with the explicit conditions is robust to refactoring oversights\n\nLike I said, I definitely would want to drop most of the assertions, but can you point to an example of a redundant condition which makes the code more robust?",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420446697,420446697,
MarcoFalke,2018-09-11T22:29:22Z,The condition to hit `bad-cb-missing` allows the if-statement to swap places with the if-statement above it. With or without an assert this is no longer possible and we'd have to rely on tests or review to not break anything.,https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420447845,420447845,
ryanofsky,2018-09-11T22:45:51Z,"Agreed in that case, but would still be happy to see code cleaned up in other cases. @practicalswift, it sounds like it's up to you to decide whether you want to make manual cleanups here and then remove the [wip] tag, or abandon the PR given concerns raised about the approach.",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420451505,420451505,
DrahtBot,2018-09-11T23:16:45Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14156 ([WIP] refactor: Make explicit CMutableTransaction -> CTransaction conversion. by lucash-dev)\n* #10973 (Refactor: separate wallet from node by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start w",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420457760,420457760,
practicalswift,2018-09-12T08:30:01Z,@ryanofsky @Empact @MarcoFalke Updated to address all feedback. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-420559831,420559831,
laanwj,2018-09-13T18:58:43Z,"I think it's bad to add assertions here; before you know it, you might introduce a DoS or other crash bug where none exists now. This change is, all in all, too risky.",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-421115450,421115450,
gmaxwell,2018-09-13T19:00:32Z,"NAK.   I just don't see an benefit to this change which would justify the small (but decidedly non-zero) review effort involved.  In particular, if any one of these assertions in consensus code aren't guaranteed by the preceding code they can cause network wide DOS and consensus failure. so it must be reviewed carefully even if the review is simple.   MarcoFalke's point that they make the code mor",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-421115961,421115961,
sdaftuar,2018-09-13T19:11:54Z,"fwiw I'm also a concept NACK on this.  Aside from the issue around the way we use asserts in this project (which we could probably document better for contributors in the developer notes, if anyone is up for it!), I generally think the review effort for minor changes to consensus critical code is not worth it unless we're achieving some larger goal than code cleanup, like a bugfix, new feature, or",https://github.com/bitcoin/bitcoin/pull/14201#issuecomment-421119307,421119307,
Empact,2018-09-12T00:17:03Z,How about drop this assert? It's assured here by 89.,https://github.com/bitcoin/bitcoin/pull/14201#discussion_r216863704,216863704,src/checkqueue.h
Empact,2018-09-12T00:26:30Z,Could this socket have been closed in the time the lock was not held?,https://github.com/bitcoin/bitcoin/pull/14201#discussion_r216865013,216865013,src/net.cpp
Empact,2018-09-12T00:27:48Z,drop this?,https://github.com/bitcoin/bitcoin/pull/14201#discussion_r216865183,216865183,src/script/sign.cpp
Empact,2018-09-12T00:28:32Z,drop this?,https://github.com/bitcoin/bitcoin/pull/14201#discussion_r216865270,216865270,src/test/multisig_tests.cpp
Empact,2018-09-12T00:28:58Z,drop this?,https://github.com/bitcoin/bitcoin/pull/14201#discussion_r216865328,216865328,src/utilstrencodings.cpp
