[
  {
    "sha": "8e617e3708e0e4d42d586531450a21ae70aecf63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTYxN2UzNzA4ZTBlNGQ0MmQ1ODY1MzE0NTBhMjFhZTcwYWVjZjYz",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-03T17:00:11Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-09T13:59:21Z"
      },
      "message": "Remove unused mempool index",
      "tree": {
        "sha": "be3d92f8474b6ab6897703b94133e687b96a1c1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be3d92f8474b6ab6897703b94133e687b96a1c1e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e617e3708e0e4d42d586531450a21ae70aecf63",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e617e3708e0e4d42d586531450a21ae70aecf63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e617e3708e0e4d42d586531450a21ae70aecf63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e617e3708e0e4d42d586531450a21ae70aecf63/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c991b304dee368f506cfee27ddaa333f1f82c518",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c991b304dee368f506cfee27ddaa333f1f82c518",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c991b304dee368f506cfee27ddaa333f1f82c518"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 2,
      "deletions": 39
    },
    "files": [
      {
        "sha": "e5afeddf26da57118abf0a5f32cb0a9aa083b15c",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e617e3708e0e4d42d586531450a21ae70aecf63/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e617e3708e0e4d42d586531450a21ae70aecf63/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=8e617e3708e0e4d42d586531450a21ae70aecf63",
        "patch": "@@ -287,35 +287,6 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n \n     pool.removeRecursive(pool.mapTx.find(tx9.GetHash())->GetTx());\n     pool.removeRecursive(pool.mapTx.find(tx8.GetHash())->GetTx());\n-    /* Now check the sort on the mining score index.\n-     * Final order should be:\n-     *\n-     * tx7 (2M)\n-     * tx2 (20k)\n-     * tx4 (15000)\n-     * tx1/tx5 (10000)\n-     * tx3/6 (0)\n-     * (Ties resolved by hash)\n-     */\n-    sortedOrder.clear();\n-    sortedOrder.push_back(tx7.GetHash().ToString());\n-    sortedOrder.push_back(tx2.GetHash().ToString());\n-    sortedOrder.push_back(tx4.GetHash().ToString());\n-    if (tx1.GetHash() < tx5.GetHash()) {\n-        sortedOrder.push_back(tx5.GetHash().ToString());\n-        sortedOrder.push_back(tx1.GetHash().ToString());\n-    } else {\n-        sortedOrder.push_back(tx1.GetHash().ToString());\n-        sortedOrder.push_back(tx5.GetHash().ToString());\n-    }\n-    if (tx3.GetHash() < tx6.GetHash()) {\n-        sortedOrder.push_back(tx6.GetHash().ToString());\n-        sortedOrder.push_back(tx3.GetHash().ToString());\n-    } else {\n-        sortedOrder.push_back(tx3.GetHash().ToString());\n-        sortedOrder.push_back(tx6.GetHash().ToString());\n-    }\n-    CheckSort<mining_score>(pool, sortedOrder);\n }\n \n BOOST_AUTO_TEST_CASE(MempoolAncestorIndexingTest)"
      },
      {
        "sha": "d1edde284f77d5381cff8691aac1c977bff500fe",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e617e3708e0e4d42d586531450a21ae70aecf63/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e617e3708e0e4d42d586531450a21ae70aecf63/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=8e617e3708e0e4d42d586531450a21ae70aecf63",
        "patch": "@@ -906,8 +906,8 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    // Estimate the overhead of mapTx to be 15 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n-    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n+    // Estimate the overhead of mapTx to be 12 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n+    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 12 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n }\n \n void CTxMemPool::RemoveStaged(setEntries &stage, bool updateDescendants, MemPoolRemovalReason reason) {"
      },
      {
        "sha": "ad0249c9a2ac235535d342e75496f72e1bacfe1a",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e617e3708e0e4d42d586531450a21ae70aecf63/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e617e3708e0e4d42d586531450a21ae70aecf63/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=8e617e3708e0e4d42d586531450a21ae70aecf63",
        "patch": "@@ -287,7 +287,6 @@ class CompareTxMemPoolEntryByAncestorFee\n // Multi_index tag names\n struct descendant_score {};\n struct entry_time {};\n-struct mining_score {};\n struct ancestor_score {};\n \n class CBlockPolicyEstimator;\n@@ -356,7 +355,6 @@ class SaltedTxidHasher\n  * - transaction hash\n  * - feerate [we use max(feerate of tx, feerate of tx with all descendants)]\n  * - time in mempool\n- * - mining score (feerate modified by any fee deltas from PrioritiseTransaction)\n  *\n  * Note: the term \"descendant\" refers to in-mempool transactions that depend on\n  * this one, while \"ancestor\" refers to in-mempool transactions that a given\n@@ -446,12 +444,6 @@ class CTxMemPool\n                 boost::multi_index::identity<CTxMemPoolEntry>,\n                 CompareTxMemPoolEntryByEntryTime\n             >,\n-            // sorted by score (for mining prioritization)\n-            boost::multi_index::ordered_unique<\n-                boost::multi_index::tag<mining_score>,\n-                boost::multi_index::identity<CTxMemPoolEntry>,\n-                CompareTxMemPoolEntryByScore\n-            >,\n             // sorted by fee rate with ancestors\n             boost::multi_index::ordered_non_unique<\n                 boost::multi_index::tag<ancestor_score>,"
      }
    ]
  }
]