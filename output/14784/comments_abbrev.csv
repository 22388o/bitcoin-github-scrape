laanwj,2018-11-23T09:07:21Z,"Concept ACK.\n\nSmall nit for clarity's sake: would make sense to word the PR title and commit as ""use WalletModel pointer as map key"" instead of what is *not* used, this tells reviewers more.",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-441186136,441186136,
promag,2018-11-23T12:06:55Z,"@laanwj sure, actually the commit was already along that.\n\n@practicalswift done.",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-441225093,441225093,
hebasto,2018-11-24T18:01:06Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-441384968,441384968,
jonasschnelli,2018-11-25T05:44:53Z,I'm not entirely convince that holding raw pointers in a list is an improvement.,https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-441417174,441417174,
promag,2018-11-26T14:25:53Z,@jonasschnelli what are your concerns?,https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-441656209,441656209,
laanwj,2019-01-02T13:19:16Z,"> @jonasschnelli what are your concerns?\n\nI think the concern, versus using another kind of id, is that when using a pointer an inconsistency between the different data structures will cause crashes / use after free.",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-450861211,450861211,
promag,2019-01-02T13:25:12Z,Must be removed before free and we should be confident about that.,https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-450862333,450862333,
laanwj,2019-01-03T07:12:53Z,"So is there no other suitable unique identifier except the pointer?\n\nI ask this because a remote RPC client would have to do with only the name too, right?",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451069306,451069306,
promag,2019-01-03T07:25:52Z,Yes the RPC identifies the wallet by its name.,https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451070848,451070848,
laanwj,2019-01-03T07:30:20Z,"> This is also necessary if in the future we allow renaming wallets.\n\nI guess there's something to be said, then, for not ever changing that identifier while the wallet is loaded to avoid confusing remote clients, even if, say, the on-disk name or location changes.\n(to be clear this is not an argument to not change this to `WalletModel*` if that helps, but I don't think renaming should work ",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451071344,451071344,
promag,2019-01-03T08:20:00Z,@laanwj my point is if there is a rename the WalletModel is the same. I'm not saying anything regarding RPC :),https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451078477,451078477,
laanwj,2019-01-03T08:30:29Z,"No, you don't say anything about RPC, but that the identifier should *probably* be constant while a wallet is loaded. Or does RPC use a different identifier for wallets than the GUI does?",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451080250,451080250,
promag,2019-01-03T13:52:19Z,"The public unique identifier is the wallet name but here `WalletModel*` is used as the internal identifier in the GUI.\n\nMaybe I shouldn't bring up ""wallet rename"".. I just think using the `WalletModel*` around is more convenient than looking up model by wallet name.",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451148433,451148433,
promag,2019-01-04T12:19:49Z,Rebased and also use `WalletModel*` in console window.,https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451429533,451429533,
laanwj,2019-01-04T14:55:50Z,"travis fail:\n```\nqt/libbitcoinqt.a(qt_libbitcoinqt_a-rpcconsole.o): In function `RPCConsole::on_lineEdit_returnPressed()':\n/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/qt/rpcconsole.cpp:928: undefined reference to `WalletModel::getWalletName() const'\nqt/libbitcoinqt.a(qt_libbitcoinqt_a-rpcconsole.o): In function `RPCConsole::on_lineEdit_returnPressed()':\n",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451465941,451465941,
promag,2019-01-04T16:15:12Z,"Thanks @laanwj, fixed now.",https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451489506,451489506,
promag,2019-01-04T17:09:03Z,@ryanofsky I had like that but RPC console already has `ENABLE_WALLET` macro to conditionally build the wallet endpoint. I think that a future refactor is to build the endpoint outside and inject it instead of passing the wallet.,https://github.com/bitcoin/bitcoin/pull/14784#issuecomment-451505604,451505604,
practicalswift,2018-11-23T06:15:53Z,Make sure parameter names match between declaration and definition :-),https://github.com/bitcoin/bitcoin/pull/14784#discussion_r235852564,235852564,src/qt/walletframe.h
practicalswift,2018-11-23T06:16:00Z,Same here :-),https://github.com/bitcoin/bitcoin/pull/14784#discussion_r235852574,235852574,src/qt/walletframe.h
