[
  {
    "sha": "d2a1adffebee86763fafc6f3ed2722f7038654c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmExYWRmZmViZWU4Njc2M2ZhZmM2ZjNlZDI3MjJmNzAzODY1NGM3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-25T21:22:01Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-04T15:22:13Z"
      },
      "message": "qt: Factor out WalletModel::getDisplayName()",
      "tree": {
        "sha": "01599ba49363bc0cc26775448fe471d2b7156eca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01599ba49363bc0cc26775448fe471d2b7156eca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2a1adffebee86763fafc6f3ed2722f7038654c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a1adffebee86763fafc6f3ed2722f7038654c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a1adffebee86763fafc6f3ed2722f7038654c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a1adffebee86763fafc6f3ed2722f7038654c7/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c64278e1a723bdc34598d0d83e56f1e74ea39bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c64278e1a723bdc34598d0d83e56f1e74ea39bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c64278e1a723bdc34598d0d83e56f1e74ea39bb"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "74aa0418199f0bbfebdc0b689baa8db774027174",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=d2a1adffebee86763fafc6f3ed2722f7038654c7",
        "patch": "@@ -570,7 +570,7 @@ bool BitcoinGUI::addWallet(WalletModel *walletModel)\n     if(!walletFrame)\n         return false;\n     const QString name = walletModel->getWalletName();\n-    QString display_name = name.isEmpty() ? \"[\"+tr(\"default wallet\")+\"]\" : name;\n+    const QString display_name = walletModel->getDisplayName();\n     setWalletActionsEnabled(true);\n     m_wallet_selector->addItem(display_name, name);\n     if (m_wallet_selector->count() == 2) {"
      },
      {
        "sha": "dc1abcbcffd3264b95d057599a59d552e3004b7a",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=d2a1adffebee86763fafc6f3ed2722f7038654c7",
        "patch": "@@ -700,7 +700,7 @@ void RPCConsole::addWallet(WalletModel * const walletModel)\n {\n     const QString name = walletModel->getWalletName();\n     // use name for text and internal data object (to allow to move to a wallet id later)\n-    QString display_name = name.isEmpty() ? \"[\"+tr(\"default wallet\")+\"]\" : name;\n+    const QString display_name = walletModel->getDisplayName();\n     ui->WalletSelector->addItem(display_name, name);\n     if (ui->WalletSelector->count() == 2 && !isVisible()) {\n         // First wallet added, set to default so long as the window isn't presently visible (and potentially in use)"
      },
      {
        "sha": "b7fa636494d2fd46e391ebacd1512609394e176c",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=d2a1adffebee86763fafc6f3ed2722f7038654c7",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -578,6 +578,12 @@ QString WalletModel::getWalletName() const\n     return QString::fromStdString(m_wallet->getWalletName());\n }\n \n+QString WalletModel::getDisplayName() const\n+{\n+    const QString name = getWalletName();\n+    return name.isEmpty() ? \"[\"+tr(\"default wallet\")+\"]\" : name;\n+}\n+\n bool WalletModel::isMultiwallet()\n {\n     return m_node.getWallets().size() > 1;"
      },
      {
        "sha": "29886825330f42eb97169c785c2861c85da124af",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a1adffebee86763fafc6f3ed2722f7038654c7/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=d2a1adffebee86763fafc6f3ed2722f7038654c7",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -219,6 +219,7 @@ class WalletModel : public QObject\n     interfaces::Wallet& wallet() const { return *m_wallet; }\n \n     QString getWalletName() const;\n+    QString getDisplayName() const;\n \n     bool isMultiwallet();\n "
      }
    ]
  },
  {
    "sha": "b2ce86c3ad79db49ddf06207230512300ec11156",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmNlODZjM2FkNzlkYjQ5ZGRmMDYyMDcyMzA1MTIzMDBlYzExMTU2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-11-22T11:36:07Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-04T15:22:13Z"
      },
      "message": "qt: Use WalletModel* instead of wallet name in main window",
      "tree": {
        "sha": "8870df879bd109b0a0c965961afb478c98819ea2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8870df879bd109b0a0c965961afb478c98819ea2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2ce86c3ad79db49ddf06207230512300ec11156",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ce86c3ad79db49ddf06207230512300ec11156",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2ce86c3ad79db49ddf06207230512300ec11156",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ce86c3ad79db49ddf06207230512300ec11156/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2a1adffebee86763fafc6f3ed2722f7038654c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a1adffebee86763fafc6f3ed2722f7038654c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a1adffebee86763fafc6f3ed2722f7038654c7"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 31,
      "deletions": 34
    },
    "files": [
      {
        "sha": "922987b7bc3a1aa89ae9a84d33fb1535eb3fd314",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=b2ce86c3ad79db49ddf06207230512300ec11156",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -431,7 +431,7 @@ void BitcoinApplication::addWallet(WalletModel* walletModel)\n     window->addWallet(walletModel);\n \n     if (m_wallet_models.empty()) {\n-        window->setCurrentWallet(walletModel->getWalletName());\n+        window->setCurrentWallet(walletModel);\n     }\n \n #ifdef ENABLE_BIP70"
      },
      {
        "sha": "0ca5b5fcdcc556152979e8b2938c0869a99cf5e8",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=b2ce86c3ad79db49ddf06207230512300ec11156",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -569,10 +569,9 @@ bool BitcoinGUI::addWallet(WalletModel *walletModel)\n {\n     if(!walletFrame)\n         return false;\n-    const QString name = walletModel->getWalletName();\n     const QString display_name = walletModel->getDisplayName();\n     setWalletActionsEnabled(true);\n-    m_wallet_selector->addItem(display_name, name);\n+    m_wallet_selector->addItem(display_name, QVariant::fromValue(walletModel));\n     if (m_wallet_selector->count() == 2) {\n         m_wallet_selector_label_action->setVisible(true);\n         m_wallet_selector_action->setVisible(true);\n@@ -584,8 +583,7 @@ bool BitcoinGUI::addWallet(WalletModel *walletModel)\n bool BitcoinGUI::removeWallet(WalletModel* walletModel)\n {\n     if (!walletFrame) return false;\n-    QString name = walletModel->getWalletName();\n-    int index = m_wallet_selector->findData(name);\n+    int index = m_wallet_selector->findData(QVariant::fromValue(walletModel));\n     m_wallet_selector->removeItem(index);\n     if (m_wallet_selector->count() == 0) {\n         setWalletActionsEnabled(false);\n@@ -594,20 +592,20 @@ bool BitcoinGUI::removeWallet(WalletModel* walletModel)\n         m_wallet_selector_action->setVisible(false);\n     }\n     rpcConsole->removeWallet(walletModel);\n-    return walletFrame->removeWallet(name);\n+    return walletFrame->removeWallet(walletModel);\n }\n \n-bool BitcoinGUI::setCurrentWallet(const QString& name)\n+bool BitcoinGUI::setCurrentWallet(WalletModel* wallet_model)\n {\n     if(!walletFrame)\n         return false;\n-    return walletFrame->setCurrentWallet(name);\n+    return walletFrame->setCurrentWallet(wallet_model);\n }\n \n bool BitcoinGUI::setCurrentWalletBySelectorIndex(int index)\n {\n-    QString internal_name = m_wallet_selector->itemData(index).toString();\n-    return setCurrentWallet(internal_name);\n+    WalletModel* wallet_model = m_wallet_selector->itemData(index).value<WalletModel*>();\n+    return setCurrentWallet(wallet_model);\n }\n \n void BitcoinGUI::removeAllWallets()"
      },
      {
        "sha": "1324dd6625d79763d9f6c67dc19cecc09d7d33db",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=b2ce86c3ad79db49ddf06207230512300ec11156",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -206,7 +206,7 @@ public Q_SLOTS:\n     void message(const QString &title, const QString &message, unsigned int style, bool *ret = nullptr);\n \n #ifdef ENABLE_WALLET\n-    bool setCurrentWallet(const QString& name);\n+    bool setCurrentWallet(WalletModel* wallet_model);\n     bool setCurrentWalletBySelectorIndex(int index);\n     /** Set the UI status indicators based on the currently selected wallet.\n     */"
      },
      {
        "sha": "4f8b6d363e37f1da905321c0c5687c1b892890f5",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 16,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=b2ce86c3ad79db49ddf06207230512300ec11156",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -46,8 +46,7 @@ bool WalletFrame::addWallet(WalletModel *walletModel)\n         return false;\n     }\n \n-    const QString name = walletModel->getWalletName();\n-    if (mapWalletViews.count(name) > 0) {\n+    if (mapWalletViews.count(walletModel) > 0) {\n         return false;\n     }\n \n@@ -65,7 +64,7 @@ bool WalletFrame::addWallet(WalletModel *walletModel)\n     }\n \n     walletStack->addWidget(walletView);\n-    mapWalletViews[name] = walletView;\n+    mapWalletViews[walletModel] = walletView;\n \n     // Ensure a walletView is able to show the main window\n     connect(walletView, &WalletView::showNormalIfMinimized, [this]{\n@@ -77,32 +76,32 @@ bool WalletFrame::addWallet(WalletModel *walletModel)\n     return true;\n }\n \n-bool WalletFrame::setCurrentWallet(const QString& name)\n+bool WalletFrame::setCurrentWallet(WalletModel* wallet_model)\n {\n-    if (mapWalletViews.count(name) == 0)\n+    if (mapWalletViews.count(wallet_model) == 0)\n         return false;\n \n-    WalletView *walletView = mapWalletViews.value(name);\n+    WalletView *walletView = mapWalletViews.value(wallet_model);\n     walletStack->setCurrentWidget(walletView);\n     assert(walletView);\n     walletView->updateEncryptionStatus();\n     return true;\n }\n \n-bool WalletFrame::removeWallet(const QString &name)\n+bool WalletFrame::removeWallet(WalletModel* wallet_model)\n {\n-    if (mapWalletViews.count(name) == 0)\n+    if (mapWalletViews.count(wallet_model) == 0)\n         return false;\n \n-    WalletView *walletView = mapWalletViews.take(name);\n+    WalletView *walletView = mapWalletViews.take(wallet_model);\n     walletStack->removeWidget(walletView);\n     delete walletView;\n     return true;\n }\n \n void WalletFrame::removeAllWallets()\n {\n-    QMap<QString, WalletView*>::const_iterator i;\n+    QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         walletStack->removeWidget(i.value());\n     mapWalletViews.clear();\n@@ -120,35 +119,35 @@ bool WalletFrame::handlePaymentRequest(const SendCoinsRecipient &recipient)\n void WalletFrame::showOutOfSyncWarning(bool fShow)\n {\n     bOutOfSync = fShow;\n-    QMap<QString, WalletView*>::const_iterator i;\n+    QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->showOutOfSyncWarning(fShow);\n }\n \n void WalletFrame::gotoOverviewPage()\n {\n-    QMap<QString, WalletView*>::const_iterator i;\n+    QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoOverviewPage();\n }\n \n void WalletFrame::gotoHistoryPage()\n {\n-    QMap<QString, WalletView*>::const_iterator i;\n+    QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoHistoryPage();\n }\n \n void WalletFrame::gotoReceiveCoinsPage()\n {\n-    QMap<QString, WalletView*>::const_iterator i;\n+    QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoReceiveCoinsPage();\n }\n \n void WalletFrame::gotoSendCoinsPage(QString addr)\n {\n-    QMap<QString, WalletView*>::const_iterator i;\n+    QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoSendCoinsPage(addr);\n }"
      },
      {
        "sha": "9fbc8b4d52fbf25ad1333a3b63778433a90cdc68",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce86c3ad79db49ddf06207230512300ec11156/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=b2ce86c3ad79db49ddf06207230512300ec11156",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -37,8 +37,8 @@ class WalletFrame : public QFrame\n     void setClientModel(ClientModel *clientModel);\n \n     bool addWallet(WalletModel *walletModel);\n-    bool setCurrentWallet(const QString& name);\n-    bool removeWallet(const QString &name);\n+    bool setCurrentWallet(WalletModel* wallet_model);\n+    bool removeWallet(WalletModel* wallet_model);\n     void removeAllWallets();\n \n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);\n@@ -53,7 +53,7 @@ class WalletFrame : public QFrame\n     QStackedWidget *walletStack;\n     BitcoinGUI *gui;\n     ClientModel *clientModel;\n-    QMap<QString, WalletView*> mapWalletViews;\n+    QMap<WalletModel*, WalletView*> mapWalletViews;\n \n     bool bOutOfSync;\n "
      }
    ]
  },
  {
    "sha": "91b0c5b09616bb8c5ef8107efb432ce4c7c9a383",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWIwYzViMDk2MTZiYjhjNWVmODEwN2VmYjQzMmNlNGM3YzlhMzgz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-04T12:17:53Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-04T15:24:00Z"
      },
      "message": "qt: Use WalletModel* instead of wallet name in console window",
      "tree": {
        "sha": "b2e562ab1b7293105ef116510fa4d0876d13cd07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2e562ab1b7293105ef116510fa4d0876d13cd07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2ce86c3ad79db49ddf06207230512300ec11156",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ce86c3ad79db49ddf06207230512300ec11156",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2ce86c3ad79db49ddf06207230512300ec11156"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 24,
      "deletions": 29
    },
    "files": [
      {
        "sha": "a6187685a9958fa7ad320a0ee32c1c9881b91098",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 23,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=91b0c5b09616bb8c5ef8107efb432ce4c7c9a383",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -85,7 +85,7 @@ class RPCExecutor : public QObject\n     explicit RPCExecutor(interfaces::Node& node) : m_node(node) {}\n \n public Q_SLOTS:\n-    void request(const QString &command, const QString &walletID);\n+    void request(const QString &command, const WalletModel* wallet_model);\n \n Q_SIGNALS:\n     void reply(int category, const QString &command);\n@@ -148,7 +148,7 @@ class QtRPCTimerInterface: public RPCTimerInterface\n  * @param[out]   pstrFilteredOut  Command line, filtered to remove any sensitive data\n  */\n \n-bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strResult, const std::string &strCommand, const bool fExecute, std::string * const pstrFilteredOut, const std::string *walletID)\n+bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strResult, const std::string &strCommand, const bool fExecute, std::string * const pstrFilteredOut, const WalletModel* wallet_model)\n {\n     std::vector< std::vector<std::string> > stack;\n     stack.push_back(std::vector<std::string>());\n@@ -306,8 +306,8 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n                             std::string method = stack.back()[0];\n                             std::string uri;\n #ifdef ENABLE_WALLET\n-                            if (walletID) {\n-                                QByteArray encodedName = QUrl::toPercentEncoding(QString::fromStdString(*walletID));\n+                            if (wallet_model) {\n+                                QByteArray encodedName = QUrl::toPercentEncoding(wallet_model->getWalletName());\n                                 uri = \"/wallet/\"+std::string(encodedName.constData(), encodedName.length());\n                             }\n #endif\n@@ -387,7 +387,7 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n     }\n }\n \n-void RPCExecutor::request(const QString &command, const QString &walletID)\n+void RPCExecutor::request(const QString &command, const WalletModel* wallet_model)\n {\n     try\n     {\n@@ -418,9 +418,7 @@ void RPCExecutor::request(const QString &command, const QString &walletID)\n                 \"   example:    getblock(getblockhash(0),true)[tx][0]\\n\\n\")));\n             return;\n         }\n-        std::string wallet_id = walletID.toStdString();\n-        if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, walletID.isNull() ? nullptr : &wallet_id))\n-        {\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\n             Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n             return;\n         }\n@@ -698,10 +696,8 @@ void RPCConsole::setClientModel(ClientModel *model)\n #ifdef ENABLE_WALLET\n void RPCConsole::addWallet(WalletModel * const walletModel)\n {\n-    const QString name = walletModel->getWalletName();\n-    // use name for text and internal data object (to allow to move to a wallet id later)\n-    const QString display_name = walletModel->getDisplayName();\n-    ui->WalletSelector->addItem(display_name, name);\n+    // use name for text and wallet model for internal data object (to allow to move to a wallet id later)\n+    ui->WalletSelector->addItem(walletModel->getDisplayName(), QVariant::fromValue(walletModel));\n     if (ui->WalletSelector->count() == 2 && !isVisible()) {\n         // First wallet added, set to default so long as the window isn't presently visible (and potentially in use)\n         ui->WalletSelector->setCurrentIndex(1);\n@@ -714,8 +710,7 @@ void RPCConsole::addWallet(WalletModel * const walletModel)\n \n void RPCConsole::removeWallet(WalletModel * const walletModel)\n {\n-    const QString name = walletModel->getWalletName();\n-    ui->WalletSelector->removeItem(ui->WalletSelector->findData(name));\n+    ui->WalletSelector->removeItem(ui->WalletSelector->findData(QVariant::fromValue(walletModel)));\n     if (ui->WalletSelector->count() == 2) {\n         ui->WalletSelector->setVisible(false);\n         ui->WalletSelectorLabel->setVisible(false);\n@@ -910,25 +905,25 @@ void RPCConsole::on_lineEdit_returnPressed()\n \n         cmdBeforeBrowsing = QString();\n \n-        QString walletID;\n+        WalletModel* wallet_model{nullptr};\n #ifdef ENABLE_WALLET\n         const int wallet_index = ui->WalletSelector->currentIndex();\n         if (wallet_index > 0) {\n-            walletID = (QString)ui->WalletSelector->itemData(wallet_index).value<QString>();\n+            wallet_model = ui->WalletSelector->itemData(wallet_index).value<WalletModel*>();\n         }\n \n-        if (m_last_wallet_id != walletID) {\n-            if (walletID.isNull()) {\n-                message(CMD_REQUEST, tr(\"Executing command without any wallet\"));\n+        if (m_last_wallet_model != wallet_model) {\n+            if (wallet_model) {\n+                message(CMD_REQUEST, tr(\"Executing command using \\\"%1\\\" wallet\").arg(wallet_model->getWalletName()));\n             } else {\n-                message(CMD_REQUEST, tr(\"Executing command using \\\"%1\\\" wallet\").arg(walletID));\n+                message(CMD_REQUEST, tr(\"Executing command without any wallet\"));\n             }\n-            m_last_wallet_id = walletID;\n+            m_last_wallet_model = wallet_model;\n         }\n #endif\n \n         message(CMD_REQUEST, QString::fromStdString(strFilteredCmd));\n-        Q_EMIT cmdRequest(cmd, walletID);\n+        Q_EMIT cmdRequest(cmd, m_last_wallet_model);\n \n         cmd = QString::fromStdString(strFilteredCmd);\n "
      },
      {
        "sha": "6c000ba09691dde577aece84fe313a723390fd48",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91b0c5b09616bb8c5ef8107efb432ce4c7c9a383/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=91b0c5b09616bb8c5ef8107efb432ce4c7c9a383",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -41,9 +41,9 @@ class RPCConsole: public QWidget\n     explicit RPCConsole(interfaces::Node& node, const PlatformStyle *platformStyle, QWidget *parent);\n     ~RPCConsole();\n \n-    static bool RPCParseCommandLine(interfaces::Node* node, std::string &strResult, const std::string &strCommand, bool fExecute, std::string * const pstrFilteredOut = nullptr, const std::string *walletID = nullptr);\n-    static bool RPCExecuteCommandLine(interfaces::Node& node, std::string &strResult, const std::string &strCommand, std::string * const pstrFilteredOut = nullptr, const std::string *walletID = nullptr) {\n-        return RPCParseCommandLine(&node, strResult, strCommand, true, pstrFilteredOut, walletID);\n+    static bool RPCParseCommandLine(interfaces::Node* node, std::string &strResult, const std::string &strCommand, bool fExecute, std::string * const pstrFilteredOut = nullptr, const WalletModel* wallet_model = nullptr);\n+    static bool RPCExecuteCommandLine(interfaces::Node& node, std::string &strResult, const std::string &strCommand, std::string * const pstrFilteredOut = nullptr, const WalletModel* wallet_model = nullptr) {\n+        return RPCParseCommandLine(&node, strResult, strCommand, true, pstrFilteredOut, wallet_model);\n     }\n \n     void setClientModel(ClientModel *model);\n@@ -133,7 +133,7 @@ public Q_SLOTS:\n Q_SIGNALS:\n     // For RPC command executor\n     void stopExecutor();\n-    void cmdRequest(const QString &command, const QString &walletID);\n+    void cmdRequest(const QString &command, const WalletModel* wallet_model);\n \n private:\n     void startExecutor();\n@@ -165,7 +165,7 @@ public Q_SLOTS:\n     int consoleFontSize = 0;\n     QCompleter *autoCompleter = nullptr;\n     QThread thread;\n-    QString m_last_wallet_id;\n+    WalletModel* m_last_wallet_model{nullptr};\n \n     /** Update UI with latest network info from model. */\n     void updateNetworkState();"
      }
    ]
  }
]