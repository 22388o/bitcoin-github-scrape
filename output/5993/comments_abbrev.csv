sipa,2015-05-06T10:40:55Z,Closing this until some other miner/wallet things are in.\n,https://github.com/bitcoin/bitcoin/pull/5993#issuecomment-99414601,99414601,
jtimon,2015-04-10T10:29:58Z,"Given that you're changing the function, can you also pass const CChainParams& params ? \n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135098,28135098,src/miner.cpp
jtimon,2015-04-10T10:32:34Z,Is it really that important to pass uint256& hash ? Maybe better to pass CBlock *pblock directly is cleaner?\n,https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135210,28135210,src/miner.cpp
sipa,2015-04-10T10:35:14Z,"Not worth copying a whole block, imho...\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135321,28135321,src/miner.cpp
jtimon,2015-04-10T10:37:34Z,"The problem wasn't accesing the nonce inside scanhash but outside of it, so passing `int64_t nMaxIter` doesn't solve it. It is this while (and the one inside mineblock that should turn in to fors). In the case of regtest, updating the extra nonce every time scanhash fails is probably good enough, as in https://github.com/bitcoin/bitcoin/pull/4793/files#diff-c2c990fee1c3381462640e80ae7db0d0R156\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135398,28135398,src/miner.cpp
jtimon,2015-04-10T10:38:38Z,"Can you replace this with CheckProofOfWork directly?\nMaybe with `if (((uint16_t*)&hash)[15] == 0 && CheckProofOfWork(pblock->GetHash(), pblock->nBits, params))` as in https://github.com/bitcoin/bitcoin/pull/4793/files#diff-4a59b408ad3778278c3aeffa7da33c3cR384 ?\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135436,28135436,src/miner.cpp
jtimon,2015-04-10T10:39:16Z,"It seems you're not moving update time anywhere, just removing it.\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135459,28135459,src/miner.cpp
jtimon,2015-04-10T10:42:45Z,"It's not a whole block, it's a pointer, no?\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135746,28135746,src/miner.cpp
sipa,2015-04-10T10:42:46Z,"No. The direct hash check makes regtest mining very slow, and calling checkproofofwork directly would cause 1000s of error lines in testnet mining.\n\nMy intent was eventually moving this function to pow.cpp, so it's fine to have it access details of the pow construction.\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135747,28135747,src/miner.cpp
jtimon,2015-04-10T10:47:18Z,"Ok, it can be replaced once the error logs are removed...\nIn anycase, I was planning to move ScanHash/GenerateProof to pow too, but I've changed my mind since the other pow functions will move to consensus and this is not part of consensus.\nMy current plan is to remove pow, moving most of it to consensus, a logging version of GetNextWork to miner and getBlockProof to chain. Anyway, things for ot",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135957,28135957,src/miner.cpp
sipa,2015-04-10T10:47:57Z,"CreateNewBlock builds a new CBlock object. If we'd want to return it in a passed pointer, you'd have to copy it there.\n\nAlternatively, we could return a CBlock\* variable in a CBlock*& argument, but why bother? All we need is the hash...\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28135987,28135987,src/miner.cpp
jtimon,2015-04-10T10:48:54Z,"Still, can you pass a `const Consensus::Params& params` parameter for when CheckProofOfWork is ready?\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136031,28136031,src/miner.cpp
jtimon,2015-04-10T10:49:47Z,Or maybe just remove the log errors of CheckProofOfWork in this PR\n,https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136082,28136082,src/miner.cpp
sipa,2015-04-10T10:50:11Z,"I agree it doesn't solve it. I've tried other strategies, but didn't find anything I could reasonably include in what this PR is trying to accomplish. Feel free to improve things in your PR.\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136101,28136101,src/miner.cpp
sipa,2015-04-10T10:50:52Z,Done.\n,https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136130,28136130,src/miner.cpp
jtimon,2015-04-10T11:04:31Z,"Ok, can we pass ChainParams to the newly created MineBlock() as well (CreateNewBlockWithKey is taking it).\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28136784,28136784,src/miner.cpp
jtimon,2015-04-10T11:07:30Z,"Well, in any case I don't think the new int64_t nMaxIter param in ScanHash is worth it (as dicussed it will be useful for later that it takes Consensus::Params though).\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137017,28137017,src/miner.cpp
jtimon,2015-04-10T11:10:55Z,You have to keep it here and also put it on MineBlock I believe.\nMaybe this is too much to ask but it taking Consensus::Params and replacing `Params().AllowMinDifficultyBlocks()` with `params.fPowAllowMinDifficultyBlocks` as in https://github.com/bitcoin/bitcoin/pull/5968/files#diff-4a59b408ad3778278c3aeffa7da33c3cR80 would be very nice as well.\n,https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137179,28137179,src/miner.cpp
jtimon,2015-04-10T11:16:44Z,"Oh, sorry, I didn't see that you moved it to ScanHash, that's actually better if regtest is going to use it as well.\nBut why are you getting rid of the `Params().AllowMinDifficultyBlocks()` check inside UpdateTime?\n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137399,28137399,src/miner.cpp
jtimon,2015-04-10T11:21:23Z,"Thank you for doing this, but if you do it, you should do it right. That is, with \n\n```\nconst CChainParams& params = Params(CBaseChainParams::MAIN);\n```\n\nat the beginning of the test case as in https://github.com/bitcoin/bitcoin/pull/5970/files#diff-5c64500485fda76388a86c95c0059585R53 \n",https://github.com/bitcoin/bitcoin/pull/5993#discussion_r28137558,28137558,src/test/miner_tests.cpp
