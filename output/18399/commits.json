[
  {
    "sha": "0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjU2YWNiYzNjMmZhM2FkNWY0NDFiYTI3MzgwNmM1MjJlNWY3Mjkx",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-03-21T17:00:26Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-04-03T23:54:04Z"
      },
      "message": "lint: Add PR description linter",
      "tree": {
        "sha": "33f733fdc674f9cf3c7246879f7327c0e124a7ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f733fdc674f9cf3c7246879f7327c0e124a7ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl6HzJ8VHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN9T0P/14SQZaC0kovBT13izlKkIOR8Muw\nB5+1ctILVCVkhxP/FrqLU0JaotaH1nPvdwca5WzIHGOpoY0Xj0OVZ+/Ib18YXlwg\nlujqQJtmT5OdvKK9cfc4DfkhhliEAmrJ50ewFUVhg6obUeJu7sdMI0ouiLpSSARY\nrK+LKk8r7fV/H7ys2abFF2uTrlY5BigyqscciH3ZpiyfXYNIjm6aa7bBtvwX+Z5L\nt3PUcdjOgbXlFIlU0qbq/nAf2zif+LzDIHZBI+bC0WUPaCQhPB1YkYPKISkqAPUo\nqLDx9O2GZJ4PZPnYY8514EY72uWD6I20Kb7wk9YQsE/am4ylwrq6XHPofhUwPjgg\nEN7bMv6kfbOEQdqGfTmB8Pf6pGcM/WI6MaHdvaHbt8oip72S88IDxjNVQX0+odM+\n01j3jN33hBnqKUJo7vokeALmUPCPqebR7r6nZbXuEGIYSgkjiSgdOFT4zI8JHQVl\neqL2ktR+HaYAoaPtM8QLZVS7BWZTcCzERnXl4K5SihGWs8Rn9pXmQ01jr1cZpzXi\nYYUZ13jBPPdl81hW3W42K0uwi096H0W+LRsFs86YHZ8Ewqdx/qRSGISYgMziqSJa\nYvnvZ9ZhhXD7qASYEFCwRUHzABbjtgNgt6Y78ujsiUsaZGTiqJHfDi4b0LBdMbvQ\nmsO94CKV6vCrmtDB\n=uFpu\n-----END PGP SIGNATURE-----",
        "payload": "tree 33f733fdc674f9cf3c7246879f7327c0e124a7ee\nparent 3516a31eaa7714a815e0346625ae096f281d3d9e\nauthor Fabian Jahr <fjahr@protonmail.com> 1584810026 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1585958044 +0200\n\nlint: Add PR description linter\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f56acbc3c2fa3ad5f441ba273806c522e5f7291/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3516a31eaa7714a815e0346625ae096f281d3d9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3516a31eaa7714a815e0346625ae096f281d3d9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3516a31eaa7714a815e0346625ae096f281d3d9e"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 83,
      "deletions": 0
    },
    "files": [
      {
        "sha": "97f47d948e1a24b1852eb232a5289c072ecb6590",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f56acbc3c2fa3ad5f441ba273806c522e5f7291/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f56acbc3c2fa3ad5f441ba273806c522e5f7291/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
        "patch": "@@ -49,6 +49,7 @@ env:\n     - CI_RETRY_EXE=\"travis_retry\"\n     - CI_WAIT=\"while sleep 500; do echo .; done\"\n     - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n+    - secure: \"Fv6ESl8xY2X4FZunKKEBgCTx/06dLs7D+CyMNUgMuUmEuS/oSCw6ydk1tTouITfXnkhMtQtJZdc7oSEmwQxKPMg3b8SSQmBDUjh5SU16rJWbBgsOlrZzE7mHtx56G+UkCNDVteA6JCYsWYeM8aBujwsfTTel+YgPBtSohHOI+Rk=\"\n before_install:\n   - set -o errexit; source ./ci/test/00_setup_env.sh\n   - set -o errexit; source ./ci/test/03_before_install.sh"
      },
      {
        "sha": "572e66a86597053e5a48cb0327e8dbe06748a27c",
        "filename": "ci/lint/06_script.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f56acbc3c2fa3ad5f441ba273806c522e5f7291/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f56acbc3c2fa3ad5f441ba273806c522e5f7291/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
        "patch": "@@ -16,6 +16,7 @@ test/lint/git-subtree-check.sh src/univalue\n test/lint/git-subtree-check.sh src/leveldb\n test/lint/git-subtree-check.sh src/crc32c\n test/lint/check-doc.py\n+test/lint/check-pr-description.py\n test/lint/check-rpc-mappings.py .\n test/lint/lint-all.sh\n "
      },
      {
        "sha": "2b9fdcf09b6aa1e972a42196c9fe2725d63f7c81",
        "filename": "test/lint/check-pr-description.py",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f56acbc3c2fa3ad5f441ba273806c522e5f7291/test/lint/check-pr-description.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f56acbc3c2fa3ad5f441ba273806c522e5f7291/test/lint/check-pr-description.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/check-pr-description.py?ref=0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
        "patch": "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+import os\n+import re\n+import json\n+import codecs\n+from urllib.request import Request, urlopen\n+from urllib.error import HTTPError\n+\n+def get_response(req_url, ghtoken):\n+    req = Request(req_url)\n+    if ghtoken is not None:\n+        req.add_header('Authorization', 'token ' + ghtoken)\n+    return urlopen(req)\n+\n+def retrieve_json(req_url, ghtoken):\n+    '''\n+    Retrieve json from github.\n+    Return None if an error happens.\n+    '''\n+    try:\n+        reader = codecs.getreader('utf-8')\n+        return json.load(reader(get_response(req_url, ghtoken)))\n+    except HTTPError as e:\n+        error_message = e.read()\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        print('Detailed error: %s' % error_message)\n+        return None\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def retrieve_pr_info(pull, ghtoken):\n+    req_url = \"https://api.github.com/repos/bitcoin/bitcoin/pulls/\"+pull\n+    return retrieve_json(req_url, ghtoken)\n+\n+def main():\n+    # Get pull request number from Travis environment\n+    if 'TRAVIS_PULL_REQUEST' in os.environ:\n+        pull = os.environ['TRAVIS_PULL_REQUEST']\n+    else:\n+        assert False, \"Error: No pull request number found, PR description could not be checked\"\n+\n+    # This Github token is in the .travis.yml as a secure (encrypted)\n+    # variable. See Travis CI documentation on how it is created:\n+    # https://docs.travis-ci.com/user/environment-variables/#encrypting-environment-variables\n+    if 'GITHUB_TOKEN' in os.environ:\n+        ghtoken = os.environ['GITHUB_TOKEN']\n+    else:\n+        assert False, \"Error: No Github token found, PR description could not be checked\"\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(pull, ghtoken)\n+    if info is None:\n+        assert False, \"Error: Did not receive a valid response from Github API\"\n+\n+    body = info['body'].strip()\n+\n+    # Simple, good enough Github username regex that tries to replicate\n+    # the logic by which Github tags users in messages and notifies them:\n+    # - Newline/start of string or any special character except hyphen\n+    # - Followed by @\n+    # - Followed by one alphanumeric character\n+    # - Followed by up to 37 alphanumeric characters or hyphens\n+    # - End with end of line/string or any special character except hyphen\n+    # - Ignore case\n+    gh_username = \"(^|[^a-z0-9-])@([a-z0-9])([a-z0-9-]){0,37}($|[^a-z0-9-])\"\n+    assert not bool(re.search(gh_username, body, re.IGNORECASE)), \"Please remove any GitHub @-prefixed usernames from your PR description\"\n+\n+    # Match a start or an end tag because there may just be a fraction\n+    # of the pull request template left over.\n+    html_comment_start = \"<!--\"\n+    assert not bool(re.search(html_comment_start, body)), \"Please remove the pull request template from your PR description\"\n+    html_comment_end = \"-->\"\n+    assert not bool(re.search(html_comment_end, body)), \"Please remove the pull request template from your PR description\"\n+\n+\n+if __name__ == '__main__':\n+    main()"
      }
    ]
  }
]