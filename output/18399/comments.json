[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602078120",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-602078120",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 602078120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjA3ODEyMA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-21T17:44:53Z",
    "updated_at": "2020-03-21T17:44:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rate limiting of the Travis IPs seems to make the use of an authenticated request mandatory, added that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602078120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602245571",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-602245571",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 602245571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjI0NTU3MQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-22T17:42:46Z",
    "updated_at": "2020-03-22T17:42:46Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, thanks for working on this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602245571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602267158",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-602267158",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 602267158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjI2NzE1OA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-22T20:26:17Z",
    "updated_at": "2020-03-22T20:26:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK: Automation is good",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602267158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602545081",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-602545081",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 602545081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjU0NTA4MQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-23T11:49:42Z",
    "updated_at": "2020-03-23T11:49:42Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602545081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603871620",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-603871620",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 603871620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzg3MTYyMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-25T14:30:22Z",
    "updated_at": "2020-03-25T14:30:22Z",
    "author_association": "MEMBER",
    "body": "Not sure if this is worth it. If it is extended to check for `@` in any comment (as suggested in the OP), it is a DOS vector where anyone can block the travis run/make it fail by just posting a comment. In that case maintainers would have to run around and remove the `@` to just get travis to run.\r\n\r\nI think it should be sufficient to have the check in the merge script ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603871620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603872800",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-603872800",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 603872800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzg3MjgwMA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-25T14:32:26Z",
    "updated_at": "2020-03-25T14:32:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Not sure if this is worth it. If it is extended to check for `@` in any comment (as suggested in the OP), it is a DOS vector where anyone can block the travis run/make it fail by just posting a comment. In that case maintainers would have to run around and remove the `@` to just get travis to run.\r\n> \r\n> I think it should be sufficient to have the check in the merge script\r\n\r\nThat makes a lot of sense, thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603872800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604104434",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-604104434",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 604104434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDEwNDQzNA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-25T21:45:25Z",
    "updated_at": "2020-03-25T21:45:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks to @theStack 's feedback the regex should work properly now. I also simplified the GH username regex and added some documentation.\r\n\r\nHere are some test vectors:\r\n\r\nFail due to HTML tags:\r\n```\r\n$ TRAVIS_PULL_REQUEST=16439 ./check-pr-description.py\r\n```\r\nFail due to GH username:\r\n```\r\n$ TRAVIS_PULL_REQUEST=18376 ./check-pr-description.py\r\n```\r\n\r\nSince these are active the descriptions could be fixed any day so if it does not work withthese please check first if that is the case.\r\n\r\nFor the fun of it, you can test ranges of PRs like so but you will see `404` errors for each number that is an `issue` and not a `pull`:\r\n```\r\nCOUNTER=18000; while [ $COUNTER -lt 18020 ]; do TRAVIS_PULL_REQUEST=$COUNTER test/lint/check-pr-description.py; let COUNTER+=1; done\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604104434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604115640",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-604115640",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 604115640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDExNTY0MA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-25T22:15:10Z",
    "updated_at": "2020-03-25T22:15:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought there was a github access token available in the git config inside Travis but it appears their isn't and not running into rate limiting last time was a false positive. I am trying to find out the variable name if there is one available in the Travis environment, otherwise it would need to be added.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604115640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604121858",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-604121858",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 604121858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDEyMTg1OA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-25T22:32:01Z",
    "updated_at": "2020-03-25T22:32:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, with the help of a quick `git log --grep=\"-->\"` and further manual inspection I could find two false positives, i.e. PRs that contain no HTML comments but still the linter would complain:\r\n* #17283 (`$ TRAVIS_PULL_REQUEST=17283 ./check-pr-description.py`)\r\n* #12759 (`$ TRAVIS_PULL_REQUEST=12759 ./check-pr-description.py`)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604121858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605999158",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-605999158",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 605999158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTk5OTE1OA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-30T13:28:52Z",
    "updated_at": "2020-03-30T13:28:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> FWIW, with the help of a quick `git log --grep=\"-->\"` and further manual inspection I could find two false positives, i.e. PRs that contain no HTML comments but still the linter would complain:\r\n> \r\n> * #17283 (`$ TRAVIS_PULL_REQUEST=17283 ./check-pr-description.py`)\r\n> * #12759 (`$ TRAVIS_PULL_REQUEST=12759 ./check-pr-description.py`)\r\n\r\nThanks for discovering these. So yes, the current version does give false positives any time someone wants to write something in the PR description that actually includes HTML comments. The only effective way I could think of to mitigate that would be to use the solution with the unique string in the template. It would work like this: at the bottom of the template, there is something like `TEMPLEATE_END_PLEASE_REMOVE_ME` or so and then this linter checks for that string. I am happy to hear feedback if that solution is preferred to prevent these false positives.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605999158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609040498",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#issuecomment-609040498",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18399",
    "id": 609040498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTA0MDQ5OA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-04T14:54:03Z",
    "updated_at": "2020-04-04T14:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unfortunately, it looks like this is blocked. I was trying to get a Github Oauth Token into the Travis build environment as a secure (encrypted) variable but this variable can still not be accessed by pull requests triggered through forks since the variable would be exposed to unknown code (see [travis docs](https://docs.travis-ci.com/user/environment-variables#defining-encrypted-variables-in-travisyml)) This makes sense and I currently only see this working if the pull body does get added to the standard Travis environment variables. There exists an issue for this https://github.com/travis-ci/travis-ci/issues/9302 and a pull request is open to add the title at least https://github.com/travis-ci/travis-build/pull/1319 but it has been open for 2 years.\r\n\r\nI am happy to hear if there are other ideas on how to achieve this. Otherwise, I will close this and reopen when the pull body becomes available in Travis somehow. But I don't think there are any other obvious solutions as they should have come up in the Travis issues on this topic.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609040498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397847808",
    "pull_request_review_id": 381139717,
    "id": 397847808,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0NzgwOA==",
    "diff_hunk": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+import os\n+import re\n+import subprocess\n+import sys\n+import json\n+import codecs\n+from urllib.request import Request, urlopen\n+from urllib.error import HTTPError\n+\n+# External tools (can be overridden using environment\n+GIT = os.getenv('GIT', 'git')\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT, 'config', '--get', option]).rstrip().decode('utf-8')\n+    except subprocess.CalledProcessError:\n+        return default\n+\n+def get_response(req_url, ghtoken):\n+    req = Request(req_url)\n+    if ghtoken is not None:\n+        req.add_header('Authorization', 'token ' + ghtoken)\n+    return urlopen(req)\n+\n+def retrieve_json(req_url, ghtoken):\n+    '''\n+    Retrieve json from github.\n+    Return None if an error happens.\n+    '''\n+    try:\n+        reader = codecs.getreader('utf-8')\n+        return json.load(reader(get_response(req_url, ghtoken)))\n+    except HTTPError as e:\n+        error_message = e.read()\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        print('Detailed error: %s' % error_message)\n+        return None\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def retrieve_pr_info(pull, ghtoken):\n+    req_url = \"https://api.github.com/repos/bitcoin/bitcoin/pulls/\"+pull\n+    return retrieve_json(req_url, ghtoken)\n+\n+def main():\n+    # Get pull request number from Travis environment\n+    if 'TRAVIS_PULL_REQUEST' in os.environ:\n+        pull = os.environ['TRAVIS_PULL_REQUEST']\n+        ghtoken = git_config_get('user.ghtoken')\n+    else:\n+        assert False, \"No pull request number found, PR description could not be checked\"\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(pull, ghtoken)\n+    if info is None:\n+        sys.exit(1)\n+\n+    body = info['body'].strip()\n+\n+    # Good enough username regex\n+    gh_username = r\"/\\B@([a-z0-9](?:-?[a-z0-9]){0,38})/gi\"\n+    assert not bool(re.search(gh_username, body)), \"Please remove any GitHub @-prefixed usernames from your PR description\"\n+\n+    html_comment_start = r\"/<!--/\"",
    "path": "test/lint/check-pr-description.py",
    "position": null,
    "original_position": 72,
    "commit_id": "0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
    "original_commit_id": "1f866ba44f3d859cc2a35cb73db1f3ac489a1ff4",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I guess you were inspired by the JavaScript/ECMAScript syntax here with slashes as regex delimiters (https://javascript.info/regexp-escaping#a-slash)? In Python regexs, those don't have any special meaning, as I just tried out, hence they are also part of the searched string (and thus HTML comments are never found!).\r\n\r\n```suggestion\r\n    html_comment_start = \"<!--\"\r\n```",
    "created_at": "2020-03-25T13:22:23Z",
    "updated_at": "2020-04-03T23:54:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r397847808",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397847808"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r397847808"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397847808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397850311",
    "pull_request_review_id": 381139717,
    "id": 397850311,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg1MDMxMQ==",
    "diff_hunk": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+import os\n+import re\n+import subprocess\n+import sys\n+import json\n+import codecs\n+from urllib.request import Request, urlopen\n+from urllib.error import HTTPError\n+\n+# External tools (can be overridden using environment\n+GIT = os.getenv('GIT', 'git')\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT, 'config', '--get', option]).rstrip().decode('utf-8')\n+    except subprocess.CalledProcessError:\n+        return default\n+\n+def get_response(req_url, ghtoken):\n+    req = Request(req_url)\n+    if ghtoken is not None:\n+        req.add_header('Authorization', 'token ' + ghtoken)\n+    return urlopen(req)\n+\n+def retrieve_json(req_url, ghtoken):\n+    '''\n+    Retrieve json from github.\n+    Return None if an error happens.\n+    '''\n+    try:\n+        reader = codecs.getreader('utf-8')\n+        return json.load(reader(get_response(req_url, ghtoken)))\n+    except HTTPError as e:\n+        error_message = e.read()\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        print('Detailed error: %s' % error_message)\n+        return None\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def retrieve_pr_info(pull, ghtoken):\n+    req_url = \"https://api.github.com/repos/bitcoin/bitcoin/pulls/\"+pull\n+    return retrieve_json(req_url, ghtoken)\n+\n+def main():\n+    # Get pull request number from Travis environment\n+    if 'TRAVIS_PULL_REQUEST' in os.environ:\n+        pull = os.environ['TRAVIS_PULL_REQUEST']\n+        ghtoken = git_config_get('user.ghtoken')\n+    else:\n+        assert False, \"No pull request number found, PR description could not be checked\"\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(pull, ghtoken)\n+    if info is None:\n+        sys.exit(1)\n+\n+    body = info['body'].strip()\n+\n+    # Good enough username regex\n+    gh_username = r\"/\\B@([a-z0-9](?:-?[a-z0-9]){0,38})/gi\"\n+    assert not bool(re.search(gh_username, body)), \"Please remove any GitHub @-prefixed usernames from your PR description\"\n+\n+    html_comment_start = r\"/<!--/\"\n+    assert not bool(re.search(html_comment_start, body)), \"Please remove the pull request template from your PR description\"\n+    html_comment_end = r\"/-->/\"",
    "path": "test/lint/check-pr-description.py",
    "position": null,
    "original_position": 74,
    "commit_id": "0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
    "original_commit_id": "1f866ba44f3d859cc2a35cb73db1f3ac489a1ff4",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See my comment just two lines above. By the way, in Python the prefix \"r\" has nothing to do with regexs per se, but just indicates raw strings, i.e. no need to escape special characters, but our search string doesn't contain any of those anyway.\r\n\r\n```suggestion\r\n    html_comment_end = \"-->\"\r\n```",
    "created_at": "2020-03-25T13:25:49Z",
    "updated_at": "2020-04-03T23:54:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r397850311",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397850311"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r397850311"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397850311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398186267",
    "pull_request_review_id": 381556119,
    "id": 398186267,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4NjI2Nw==",
    "diff_hunk": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+import os\n+import re\n+import subprocess\n+import sys\n+import json\n+import codecs\n+from urllib.request import Request, urlopen\n+from urllib.error import HTTPError\n+\n+# External tools (can be overridden using environment\n+GIT = os.getenv('GIT', 'git')\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT, 'config', '--get', option]).rstrip().decode('utf-8')\n+    except subprocess.CalledProcessError:\n+        return default\n+\n+def get_response(req_url, ghtoken):\n+    req = Request(req_url)\n+    if ghtoken is not None:\n+        req.add_header('Authorization', 'token ' + ghtoken)\n+    return urlopen(req)\n+\n+def retrieve_json(req_url, ghtoken):\n+    '''\n+    Retrieve json from github.\n+    Return None if an error happens.\n+    '''\n+    try:\n+        reader = codecs.getreader('utf-8')\n+        return json.load(reader(get_response(req_url, ghtoken)))\n+    except HTTPError as e:\n+        error_message = e.read()\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        print('Detailed error: %s' % error_message)\n+        return None\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def retrieve_pr_info(pull, ghtoken):\n+    req_url = \"https://api.github.com/repos/bitcoin/bitcoin/pulls/\"+pull\n+    return retrieve_json(req_url, ghtoken)\n+\n+def main():\n+    # Get pull request number from Travis environment\n+    if 'TRAVIS_PULL_REQUEST' in os.environ:\n+        pull = os.environ['TRAVIS_PULL_REQUEST']\n+        ghtoken = git_config_get('user.ghtoken')\n+    else:\n+        assert False, \"No pull request number found, PR description could not be checked\"\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(pull, ghtoken)\n+    if info is None:\n+        sys.exit(1)\n+\n+    body = info['body'].strip()\n+\n+    # Good enough username regex\n+    gh_username = r\"/\\B@([a-z0-9](?:-?[a-z0-9]){0,38})/gi\"\n+    assert not bool(re.search(gh_username, body)), \"Please remove any GitHub @-prefixed usernames from your PR description\"\n+\n+    html_comment_start = r\"/<!--/\"",
    "path": "test/lint/check-pr-description.py",
    "position": null,
    "original_position": 72,
    "commit_id": "0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
    "original_commit_id": "1f866ba44f3d859cc2a35cb73db1f3ac489a1ff4",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed! I think it was more some of my ruby background showing but also I was not sure if I would get ACKs for this so I did not do proper testing yet. Thanks a lot!",
    "created_at": "2020-03-25T21:38:35Z",
    "updated_at": "2020-04-03T23:54:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r398186267",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398186267"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r398186267"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398186267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT",
    "in_reply_to_id": 397847808
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398186335",
    "pull_request_review_id": 381556204,
    "id": 398186335,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4NjMzNQ==",
    "diff_hunk": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+import os\n+import re\n+import subprocess\n+import sys\n+import json\n+import codecs\n+from urllib.request import Request, urlopen\n+from urllib.error import HTTPError\n+\n+# External tools (can be overridden using environment\n+GIT = os.getenv('GIT', 'git')\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT, 'config', '--get', option]).rstrip().decode('utf-8')\n+    except subprocess.CalledProcessError:\n+        return default\n+\n+def get_response(req_url, ghtoken):\n+    req = Request(req_url)\n+    if ghtoken is not None:\n+        req.add_header('Authorization', 'token ' + ghtoken)\n+    return urlopen(req)\n+\n+def retrieve_json(req_url, ghtoken):\n+    '''\n+    Retrieve json from github.\n+    Return None if an error happens.\n+    '''\n+    try:\n+        reader = codecs.getreader('utf-8')\n+        return json.load(reader(get_response(req_url, ghtoken)))\n+    except HTTPError as e:\n+        error_message = e.read()\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        print('Detailed error: %s' % error_message)\n+        return None\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def retrieve_pr_info(pull, ghtoken):\n+    req_url = \"https://api.github.com/repos/bitcoin/bitcoin/pulls/\"+pull\n+    return retrieve_json(req_url, ghtoken)\n+\n+def main():\n+    # Get pull request number from Travis environment\n+    if 'TRAVIS_PULL_REQUEST' in os.environ:\n+        pull = os.environ['TRAVIS_PULL_REQUEST']\n+        ghtoken = git_config_get('user.ghtoken')\n+    else:\n+        assert False, \"No pull request number found, PR description could not be checked\"\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(pull, ghtoken)\n+    if info is None:\n+        sys.exit(1)\n+\n+    body = info['body'].strip()\n+\n+    # Good enough username regex\n+    gh_username = r\"/\\B@([a-z0-9](?:-?[a-z0-9]){0,38})/gi\"\n+    assert not bool(re.search(gh_username, body)), \"Please remove any GitHub @-prefixed usernames from your PR description\"\n+\n+    html_comment_start = r\"/<!--/\"\n+    assert not bool(re.search(html_comment_start, body)), \"Please remove the pull request template from your PR description\"\n+    html_comment_end = r\"/-->/\"",
    "path": "test/lint/check-pr-description.py",
    "position": null,
    "original_position": 74,
    "commit_id": "0f56acbc3c2fa3ad5f441ba273806c522e5f7291",
    "original_commit_id": "1f866ba44f3d859cc2a35cb73db1f3ac489a1ff4",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2020-03-25T21:38:46Z",
    "updated_at": "2020-04-03T23:54:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r398186335",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398186335"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18399#discussion_r398186335"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398186335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT",
    "in_reply_to_id": 397850311
  }
]