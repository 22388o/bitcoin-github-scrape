[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458800007",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-458800007",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 458800007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODgwMDAwNw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T03:38:08Z",
    "updated_at": "2019-03-03T18:28:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15491](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15491.html) (wallet: Improve log output for errors during load by gwillen)\n* [#15487](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15487.html) ([WIP] descriptor based wallet by Sjors)\n* [#15329](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15329.html) (Fix InitError() and InitWarning() content by hebasto)\n* [#15253](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15253.html) (Net: Consistently log outgoing INV messages by Empact)\n* [#15157](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15157.html) (rpc: Bumpfee units change, satoshis to BTC by benthecarman)\n* [#15112](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15112.html) (build: Optionally enable -Wzero-as-null-pointer-constant by Empact)\n* [#14707](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14707.html) ([RPC] Include coinbase transactions in receivedby RPCs by andrewtoth)\n* [#14641](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14641.html) (rpc: Add min_conf option to fund transaction calls by promag)\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: \"avoid_reuse\" wallet flag for improved privacy by kallewoof)\n* [#11413](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11413.html) ([wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option by kallewoof)\n* [#10823](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10823.html) (Allow all mempool txs to be replaced after a configurable timeout (default 6h) by greenaddress)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458800007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458991057",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-458991057",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 458991057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODk5MTA1Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T15:41:11Z",
    "updated_at": "2019-01-30T15:41:11Z",
    "author_association": "MEMBER",
    "body": "Agree with @hebasto that the indentations should be fixed since those are misaligned by this PR. Not sure about fixing `if` braces - I would expect that it's contributors choice whether they fix existing style in lines they touch, but they shouldn't be obligated.\r\n\r\n`git diff -U0 5ff7dc424~..  | ./contrib/devtools/clang-format-diff.py -p1 -i -v` throws up a couple more style suggestions if you're interested.\r\n\r\nI'll wait for Russ's response to the style comments before doing a full review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458991057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459003372",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-459003372",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 459003372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTAwMzM3Mg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T16:11:37Z",
    "updated_at": "2019-01-30T16:11:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'll wait for Russ's response to the style comments before doing a full review.\r\n\r\nWill look more closely but probably I'll fix whitespace in the existing commits and add braces in a new commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459003372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459018566",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-459018566",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 459018566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTAxODU2Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T16:49:05Z",
    "updated_at": "2019-01-30T16:49:05Z",
    "author_association": "MEMBER",
    "body": "Obvious Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459018566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459127275",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-459127275",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 459127275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTEyNzI3NQ==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T22:01:45Z",
    "updated_at": "2019-01-30T22:01:45Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459127275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459144193",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-459144193",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 459144193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTE0NDE5Mw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T22:57:55Z",
    "updated_at": "2019-01-30T22:57:55Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459144193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461301810",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-461301810",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 461301810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTMwMTgxMA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T06:23:31Z",
    "updated_at": "2019-02-07T06:23:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461301810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467194904",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-467194904",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 467194904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzE5NDkwNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T21:42:20Z",
    "updated_at": "2019-02-25T21:42:20Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/commit/bb0f2b04fd2b03245a19aef298ec5e83a8d20481 if you revert the `RelayWalletTransaction()` change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467194904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467214629",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-467214629",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 467214629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzIxNDYyOQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T22:44:07Z",
    "updated_at": "2019-02-25T22:44:07Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/commit/19afbb7e4a840404b992851612583fb2c3793e56 (only reviewed force-push diffs).\r\n\r\nSorry for pushing you in the direction of unnecessary tidy-ups! We can tackle those later.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467214629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467931775",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-467931775",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 467931775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzkzMTc3NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T16:29:44Z",
    "updated_at": "2019-02-27T16:29:44Z",
    "author_association": "MEMBER",
    "body": "> a preference for dropping [6f836c0](https://github.com/bitcoin/bitcoin/commit/6f836c04d13bd49bcddff570c73820777a56f419) `Remove use of generateBlocks in wallet code` and rebasing on #15492 which removes `generate` RPC.\r\n\r\nMy previous thoughts were that this PR could go in first and we could then remove the generate method, but I agree that removing `generate` first is cleaner due to the makefile changes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467931775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467979727",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-467979727",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 467979727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk3OTcyNw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T18:38:41Z",
    "updated_at": "2019-02-27T18:38:41Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky wrote in #15492:\r\n\r\n> I think there is some confusion in the #15288 discussion that `generateBlocks` method requires additional makefile changes that other `Chain` methods don't require, but this is not true. The only reason makefile changes are part of the `generateBlocks` commit is because that commit comes first, so all the later commits just piggyback off of it.\r\n\r\nSounds like it's a good idea to split that commit then. That slightly reduces the case for waiting for #15288, though that's still easier.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467979727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468056792",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468056792",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 468056792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODA1Njc5Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T22:29:37Z",
    "updated_at": "2019-02-27T22:29:37Z",
    "author_association": "MEMBER",
    "body": "Since the makefile changes are required with or without the removal of generate, I'm reverting to my previous opinion: we should aim to get this in first, and then tidy up the API later (by removing generate amongst other things).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468056792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468929514",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468929514",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 468929514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODkyOTUxNA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T15:18:31Z",
    "updated_at": "2019-03-02T15:18:40Z",
    "author_association": "MEMBER",
    "body": "re f7efd87: is there a particular reason now why the `Makefile` changes are in `Remove uses of g_connman in wallet code`? Otherwise it makes more sense to me to have a separate commit for that. From inline discussion:\r\n\r\n>> This causes RPC code to get entangled with pure wallet code, which adds a dependency on UniValue for the wallet and causes the need to change Makefile.\r\n\r\n>This isn't really accurate. This is just the first commit in a PR adding more server code to chain.cpp. The server code is what needs univalue, and without this commit the same makefile changes are still needed.\r\n\r\nIt's not immediately obvious to me what change in `chain.cpp` is causing this (indirect?) dependency.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468929514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468939538",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468939538",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 468939538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODkzOTUzOA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T17:11:08Z",
    "updated_at": "2019-03-02T17:49:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468929514\r\n\r\n> Otherwise it makes more sense to me to have a separate commit for that. \r\n\r\nI disagree with this. I think when you add a new dependency in the source, you should be adding the new dependency in the build at the same time. If you add one dependency in two commits, history is harder to understand than it needs to be and it becomes more difficult to roll back and bisect correctly. It's also just tedious and makes it things hard to follow when you have to track down different commits that reference each other instead of just doing simple things atomically.\r\n\r\n> It's not immediately obvious to me what change in chain.cpp is causing this (indirect?) dependency.\r\n\r\nI'm not sure what the source of confusion is, but I'm adding the dependency in commit \"Remove uses of g_connman in wallet code\" (00dfb2a440b94a24b61cafb519fb122f6a0ae176), which is the commit that requires the dependency. You can easily verify this by trying to build the commit without the Makefile changes:\r\n\r\n<details><summary>Build output</summary>\r\n\r\n```sh\r\n$ git checkout 00dfb2a440b # Remove uses of g_connman in wallet code\r\n$ git log -p -n1 src/Makefile* | git apply -R\r\n$ make\r\nMaking all in src\r\nmake[1]: Entering directory '/home/russ/src/bitcoin/src'\r\nmake[2]: Entering directory '/home/russ/src/bitcoin/src'\r\nmake[3]: Entering directory '/home/russ/src/bitcoin'\r\nmake[3]: Leaving directory '/home/russ/src/bitcoin'\r\n  CXXLD    bitcoin-wallet\r\nlibbitcoin_server.a(libbitcoin_server_a-init.o): In function `Shutdown(InitInterfaces&)':\r\n/home/russ/src/bitcoin/src/init.cpp:(.text+0x8ff): undefined reference to `g_zmq_notification_interface'\r\n/home/russ/src/bitcoin/src/init.cpp:283: undefined reference to `g_zmq_notification_interface'\r\n/home/russ/src/bitcoin/src/init.cpp:(.text+0x924): undefined reference to `g_zmq_notification_interface'\r\n/home/russ/src/bitcoin/src/init.cpp:(.text+0x94f): undefined reference to `g_zmq_notification_interface'\r\nlibbitcoin_server.a(libbitcoin_server_a-init.o): In function `SetupServerArgs()':\r\n/home/russ/src/bitcoin/src/init.cpp:455: undefined reference to `g_wallet_init_interface'\r\n/home/russ/src/bitcoin/src/init.cpp:462: undefined reference to `CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM'\r\n/home/russ/src/bitcoin/src/init.cpp:463: undefined reference to `CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM'\r\n/home/russ/src/bitcoin/src/init.cpp:464: undefined reference to `CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM'\r\n/home/russ/src/bitcoin/src/init.cpp:465: undefined reference to `CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM'\r\nlibbitcoin_server.a(libbitcoin_server_a-init.o): In function `AppInitParameterInteraction()':\r\n/home/russ/src/bitcoin/src/init.cpp:1147: undefined reference to `g_wallet_init_interface'\r\nlibbitcoin_server.a(libbitcoin_server_a-init.o): In function `AppInitMain(InitInterfaces&)':\r\n/home/russ/src/bitcoin/src/init.cpp:1297: undefined reference to `g_wallet_init_interface'\r\n/home/russ/src/bitcoin/src/init.cpp:1308: undefined reference to `RegisterZMQRPCCommands(CRPCTable&)'\r\n/home/russ/src/bitcoin/src/init.cpp:1431: undefined reference to `CZMQNotificationInterface::Create()'\r\n/home/russ/src/bitcoin/src/init.cpp:(.text+0x163c5): undefined reference to `g_zmq_notification_interface'\r\n/home/russ/src/bitcoin/src/init.cpp:1434: undefined reference to `g_zmq_notification_interface'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_tx(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rest.cpp:382: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_chaininfo(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rest.cpp:283: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_mempool_info(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rest.cpp:305: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_mempool_contents(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rest.cpp:327: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_headers(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rest.cpp:181: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rest.cpp:183: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_getutxos(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rest.cpp:556: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rest.cpp:561: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rest.cpp:562: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rest.cpp:564: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rest.cpp:567: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_blockhash_by_height(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rest.cpp:615: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `rest_block(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)':\r\n/home/russ/src/bitcoin/src/rest.cpp:246: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `JSONRPCRequest':\r\n/home/russ/src/bitcoin/src/./rpc/server.h:50: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:138: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:118: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rest.o): In function `UniValue':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:32: undefined reference to `UniValue::setInt(long)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `blockToJSON(CBlock const&, CBlockIndex const*, CBlockIndex const*, bool)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:139: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:144: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `mempoolToJSON(bool)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:479: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `entryToJSON(UniValue&, CTxMemPoolEntry const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:413: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:414: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:415: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o):/home/russ/src/bitcoin/src/rpc/blockchain.cpp:416: more undefined references to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)' follow\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `gettxout(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1124: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1125: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1125: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1128: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1129: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1129: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1136: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1140: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1151: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1154: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getblockchaininfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1354: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1355: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1356: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1360: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1361: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `SoftForkDesc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, CBlockIndex const*, Consensus::Params const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1217: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `BIP9SoftForkDescPushBack(UniValue&, Consensus::Params const&, Consensus::DeploymentPos)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1259: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `mempoolInfoToJSON()':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1496: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o):/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1497: more undefined references to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)' follow\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `scantxoutset(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2190: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2190: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2194: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2198: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2198: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2207: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2207: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2217: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2217: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2217: undefined reference to `UniValue::getValues() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2221: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2223: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2225: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2226: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2228: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2284: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2287: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2289: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2290: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getchaintxstats(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1676: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1680: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1693: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1696: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1696: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getblockstats(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1845: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1846: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1846: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1857: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1870: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1871: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1871: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1873: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1873: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2005: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2037: undefined reference to `UniValue::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2041: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getblock(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:884: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:887: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:888: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:889: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:889: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:891: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:891: undefined reference to `UniValue::get_bool() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getblockhash(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:727: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:727: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getblockheader(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:776: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:779: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:780: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:780: undefined reference to `UniValue::get_bool() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getchaintips(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1482: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getmempoolancestors(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:564: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:565: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:565: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:567: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:595: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getmempooldescendants(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:634: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:635: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:635: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:637: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:665: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getmempoolentry(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:692: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `getrawmempool(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:525: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:526: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:526: undefined reference to `UniValue::get_bool() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `gettxoutsetinfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1074: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `pruneblockchain(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1006: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1006: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `savemempool(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:2069: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `verifychain(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1183: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1184: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1184: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1185: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1186: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1186: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `preciousblock(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1546: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1564: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `invalidateblock(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1583: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1604: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `reconsiderblock(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1624: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1643: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `waitfornewblock(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:232: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:233: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:233: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `waitforblock(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:275: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:277: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:278: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:278: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `waitforblockheight(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:321: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:321: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:323: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:324: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:324: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `syncwithvalidationinterfacequeue(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:356: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `BIP9SoftForkDesc(Consensus::Params const&, Consensus::DeploymentPos)':\r\n/home/russ/src/bitcoin/src/rpc/blockchain.cpp:1248: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:126: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:130: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, double)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:142: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:90: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:134: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:35: undefined reference to `UniValue::setBool(bool)'\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:29: undefined reference to `UniValue::setInt(unsigned long)'\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:41: undefined reference to `UniValue::setFloat(double)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue::push_back(long)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:102: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:44: undefined reference to `UniValue::setStr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-blockchain.o): In function `UniValue::setInt(int)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:59: undefined reference to `UniValue::setInt(long)'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `getnetworkhashps(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:98: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:98: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:98: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:98: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:98: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:98: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `getmininginfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:221: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `prioritisetransaction(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:256: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:257: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:257: undefined reference to `UniValue::get_int64() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:259: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:259: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:259: undefined reference to `UniValue::get_real() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `getblocktemplate(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:379: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:382: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:384: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:384: undefined reference to `UniValue::get_obj() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:385: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:387: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:394: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:398: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:403: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:425: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:428: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:429: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:433: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:435: undefined reference to `UniValue::get_int64() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:464: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:566: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:578: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:592: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:637: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:638: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:650: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:651: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o):/home/russ/src/bitcoin/src/rpc/mining.cpp:656: more undefined references to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)' follow\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `submitblock(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:722: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:722: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `submitheader(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:787: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:787: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:799: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `generatetoaddress(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:171: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:171: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:173: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:174: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:174: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:177: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:177: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `estimatesmartfee(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:845: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:847: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:849: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:851: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:851: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:862: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:865: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `estimaterawfee(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:918: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:920: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:922: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:923: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:923: undefined reference to `UniValue::get_real() const'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:958: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:961: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:963: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:968: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:970: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o):/home/russ/src/bitcoin/src/rpc/mining.cpp:972: more undefined references to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)' follow\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `BIP22ValidationResult(CValidationState const&)':\r\n/home/russ/src/bitcoin/src/rpc/mining.cpp:(.text+0x10483): undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-mining.o): In function `UniValue':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:48: undefined reference to `UniValue::setStr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `getdescriptorinfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:173: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:173: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `deriveaddresses(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:216: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:216: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:225: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:225: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:226: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:226: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `logging(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:549: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:550: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:552: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:553: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `EnableOrDisableLogCategories(UniValue, bool)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:493: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:495: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:495: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `getmemoryinfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:476: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:476: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:476: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:479: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `validateaddress(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:62: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:62: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:76: undefined reference to `UniValue::pushKVs(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `createmultisig(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:113: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:113: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:116: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:116: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:119: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:119: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:119: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:119: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:119: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:119: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:120: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:120: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:122: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:122: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:128: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:129: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:129: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:130: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:130: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `verifymessage(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:303: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:303: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:304: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:304: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:305: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:305: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `signmessagewithprivkey(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:357: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:357: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:358: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:358: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-misc.o): In function `setmocktime(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:402: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:402: undefined reference to `UniValue::get_int64() const'\r\n/home/russ/src/bitcoin/src/rpc/misc.cpp:404: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `ping(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:73: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `getpeerinfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:185: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:188: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:195: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:202: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:204: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `addnode(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:213: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:214: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:214: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:237: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:237: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:243: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:257: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `disconnectnode(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:285: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:286: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:290: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:291: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:293: undefined reference to `UniValue::get_int64() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:303: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `getaddednodeinfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:342: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:345: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:345: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:367: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:369: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:370: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `getnettotals(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:420: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `getnetworkinfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:504: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:505: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:506: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:516: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:519: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `setban(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:527: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:528: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:528: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:555: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:555: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:560: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:560: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:564: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:564: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:576: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:577: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:577: undefined reference to `UniValue::get_int64() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:580: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:601: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `listbanned(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:635: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `clearbanned(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:660: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `setnetworkactive(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:682: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:682: undefined reference to `UniValue::get_bool() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `getnodeaddresses(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:718: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:719: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:719: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:736: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `GetNetworksInfo()':\r\n/home/russ/src/bitcoin/src/rpc/net.cpp:440: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-net.o): In function `UniValue::push_back(int)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:106: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `ConstructTransaction(UniValue const&, UniValue const&, UniValue const&, UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:359: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:361: undefined reference to `UniValue::get_obj() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:361: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:366: undefined reference to `UniValue::get_int64() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:375: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:376: undefined reference to `UniValue::get_obj() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:380: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:383: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:397: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:399: undefined reference to `UniValue::get_int64() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:416: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:423: undefined reference to `UniValue::pushKVs(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:432: undefined reference to `UniValue::getKeys[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:438: undefined reference to `UniValue::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:453: undefined reference to `UniValue::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `SignTransaction(interfaces::Chain&, CMutableTransaction&, UniValue const&, CBasicKeyStore*, bool, UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:812: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:814: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:819: undefined reference to `UniValue::get_obj() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:830: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:830: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:851: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:864: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:873: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:935: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `TxInErrorToJSON(CTxIn const&, UniValue&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:701: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:705: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `decodepsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1289: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1289: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1298: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1305: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1320: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1325: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1326: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o):/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1330: more undefined references to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)' follow\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `decodepsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1371: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1373: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1381: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1388: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1397: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1400: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1402: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1414: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1419: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1430: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1432: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1441: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1444: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1449: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1451: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `combinepsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1483: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1483: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1490: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1490: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `finalizepsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1540: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1540: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1544: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1544: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1544: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1544: undefined reference to `UniValue::get_bool() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `createpsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1624: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1624: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1624: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1624: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `converttopsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1675: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o):/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1675: more undefined references to `UniValue::operator[](unsigned long) const' follow\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `converttopsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1675: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1676: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1677: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1677: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1680: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1680: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `utxoupdatepsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1732: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1732: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `joinpsbts(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1799: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1799: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1810: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1810: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `analyzepsbt(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1893: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1893: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1939: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1955: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1957: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1973: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1975: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:2025: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `getrawtransaction(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:154: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:164: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:165: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:165: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:165: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:165: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:165: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:168: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:171: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `createrawtransaction(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:530: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:530: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:530: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o):/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:530: more undefined references to `UniValue::operator[](unsigned long) const' follow\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `decoderawtransaction(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:597: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:598: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:598: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:598: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:600: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:600: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `decodescript(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:642: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:642: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:643: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:651: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:653: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:659: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:659: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:659: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:659: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:684: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `sendrawtransaction(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1062: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1062: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1067: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1067: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1067: undefined reference to `UniValue::get_bool() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `combinerawtransaction(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:732: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:732: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:736: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:736: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `signrawtransactionwithkey(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1006: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1006: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1011: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1011: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1013: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1014: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1021: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1021: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `testmempoolaccept(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1120: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1120: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1125: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1125: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1125: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1125: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1132: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1132: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1132: undefined reference to `UniValue::get_bool() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:1159: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `gettxoutproof(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:240: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:240: undefined reference to `UniValue::get_array() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:242: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:245: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:252: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:254: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `verifytxoutproof(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/rawtransaction.cpp:326: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-rawtransaction.o): In function `UniValue::exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:76: undefined reference to `UniValue::findKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long&) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `RPCTypeCheck(UniValue const&, std::__cxx11::list<UniValueType, std::allocator<UniValueType> > const&, bool)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:88: undefined reference to `UniValue::operator[](unsigned long) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `RPCTypeCheckArgument(UniValue const&, UniValueType const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:99: undefined reference to `uvTypeName(UniValue::VType)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:99: undefined reference to `uvTypeName(UniValue::VType)'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `RPCTypeCheckObj(UniValue const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, UniValueType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, UniValueType> > > const&, bool, bool)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:109: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:115: undefined reference to `uvTypeName(UniValue::VType)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:115: undefined reference to `uvTypeName(UniValue::VType)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:122: undefined reference to `UniValue::getKeys[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `ParseHashV(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:147: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `ParseHashO(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:156: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `ParseHexV(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:162: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `ParseHexO(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:169: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `help(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:244: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:244: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `stop(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:267: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:268: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:268: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `getrpcinfo(JSONRPCRequest const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:311: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:315: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `JSONRPCRequest::parse(UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:419: undefined reference to `UniValue::get_obj() const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:422: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:425: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:430: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:438: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `JSONRPCExecBatch[abi:cxx11](JSONRPCRequest const&, UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:481: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:481: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:483: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `JSONRPCExecOne(JSONRPCRequest, UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:462: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:466: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:470: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-server.o): In function `transformNamedArguments(JSONRPCRequest const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)':\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:496: undefined reference to `UniValue::getKeys[abi:cxx11]() const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:497: undefined reference to `UniValue::getValues() const'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:519: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/server.cpp:522: undefined reference to `UniValue::push_back(UniValue const&)'\r\nlibbitcoin_server.a(libbitcoin_server_a-util.o): In function `ParseConfirmTarget(UniValue const&, unsigned int)':\r\n/home/russ/src/bitcoin/src/rpc/util.cpp:133: undefined reference to `UniValue::get_int() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `~TorControlConnection':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:130: undefined reference to `bufferevent_free'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `TorControlConnection::readcb(bufferevent*, void*)':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:136: undefined reference to `bufferevent_get_input'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:141: undefined reference to `evbuffer_readln'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:172: undefined reference to `evbuffer_get_length'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `TorControlConnection::Disconnect()':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:228: undefined reference to `bufferevent_free'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `TorControlConnection::Connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<void (TorControlConnection&)> const&, std::function<void (TorControlConnection&)> const&)':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:202: undefined reference to `evutil_parse_sockaddr_port'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:209: undefined reference to `bufferevent_socket_new'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:212: undefined reference to `bufferevent_setcb'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:213: undefined reference to `bufferevent_enable'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:218: undefined reference to `bufferevent_socket_connect'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `TorControlConnection::Command(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<void (TorControlConnection&, TorControlReply const&)> const&)':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:236: undefined reference to `bufferevent_get_output'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:239: undefined reference to `evbuffer_add'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:240: undefined reference to `evbuffer_add'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `TorController':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:457: undefined reference to `event_new'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `TorController::disconnected_cb(TorControlConnection&)':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:704: undefined reference to `event_add'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `~TorController':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:476: undefined reference to `event_free'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `StartTorControl()':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:747: undefined reference to `evthread_use_pthreads'\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:749: undefined reference to `event_base_new'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `TorControlThread()':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:738: undefined reference to `event_base_dispatch'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `InterruptTorControl()':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:762: undefined reference to `event_base_loopbreak'\r\nlibbitcoin_server.a(libbitcoin_server_a-torcontrol.o): In function `StopTorControl()':\r\n/home/russ/src/bitcoin/src/torcontrol.cpp:770: undefined reference to `event_base_free'\r\nlibbitcoin_server.a(libbitcoin_server_a-httprpc.o): In function `StartHTTPRPC()':\r\n/home/russ/src/bitcoin/src/httprpc.cpp:243: undefined reference to `g_wallet_init_interface'\r\nlibbitcoin_server.a(libbitcoin_server_a-httprpc.o): In function `HTTPReq_JSONRPC(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/httprpc.cpp:195: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/httprpc.cpp:199: undefined reference to `UniValue::get_array() const'\r\nlibbitcoin_server.a(libbitcoin_server_a-httprpc.o): In function `StopHTTPRPC()':\r\n/home/russ/src/bitcoin/src/httprpc.cpp:262: undefined reference to `g_wallet_init_interface'\r\nlibbitcoin_server.a(libbitcoin_server_a-httprpc.o): In function `JSONErrorReply(HTTPRequest*, UniValue const&, UniValue const&)':\r\n/home/russ/src/bitcoin/src/httprpc.cpp:74: undefined reference to `find_value(UniValue const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/home/russ/src/bitcoin/src/httprpc.cpp:74: undefined reference to `UniValue::get_int() const'\r\n/home/russ/src/bitcoin/src/httprpc.cpp:81: undefined reference to `NullUniValue'\r\nlibbitcoin_server.a(libbitcoin_server_a-httprpc.o): In function `UniValue::read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/./univalue/include/univalue.h:152: undefined reference to `UniValue::read(char const*, unsigned long)'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `InitHTTPServer()':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:363: undefined reference to `event_set_log_callback'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:374: undefined reference to `evthread_use_pthreads'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:387: undefined reference to `evhttp_set_timeout'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:388: undefined reference to `evhttp_set_max_headers_size'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:389: undefined reference to `evhttp_set_max_body_size'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:390: undefined reference to `evhttp_set_gencb'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `UpdateHTTPServerLogging(bool)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:411: undefined reference to `event_enable_debug_logging'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:413: undefined reference to `event_enable_debug_logging'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `http_request_cb(evhttp_request*, void*)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:215: undefined reference to `event_get_version_number'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:215: undefined reference to `event_get_version_number'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:216: undefined reference to `evhttp_request_get_connection'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:218: undefined reference to `evhttp_connection_get_bufferevent'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:220: undefined reference to `bufferevent_disable'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPBindAddresses(evhttp*)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:323: undefined reference to `evhttp_bind_socket_with_handle'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `ThreadHTTP(event_base*)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:289: undefined reference to `event_base_dispatch'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:292: undefined reference to `event_base_got_break'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `InterruptHTTPServer()':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:442: undefined reference to `evhttp_set_gencb'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `http_reject_request_cb(evhttp_request*, void*)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:281: undefined reference to `evhttp_send_error'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `StopHTTPServer()':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:463: undefined reference to `evhttp_del_accept_socket'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:471: undefined reference to `evhttp_free'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:475: undefined reference to `event_base_free'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPEvent':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:498: undefined reference to `event_new'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `~HTTPEvent':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:503: undefined reference to `event_free'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPEvent::trigger(timeval*)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:508: undefined reference to `event_active'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:510: undefined reference to `event_add'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPRequest::WriteReply(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:576: undefined reference to `evhttp_request_get_output_buffer'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:578: undefined reference to `evbuffer_add'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPRequest::GetHeader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:528: undefined reference to `evhttp_request_get_input_headers'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:530: undefined reference to `evhttp_find_header'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPRequest::ReadBody[abi:cxx11]()':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:539: undefined reference to `evhttp_request_get_input_buffer'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:542: undefined reference to `evbuffer_get_length'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:549: undefined reference to `evbuffer_pullup'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:553: undefined reference to `evbuffer_drain'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPRequest::WriteHeader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:559: undefined reference to `evhttp_request_get_output_headers'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:561: undefined reference to `evhttp_add_header'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPRequest::GetPeer() const':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:601: undefined reference to `evhttp_request_get_connection'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:607: undefined reference to `evhttp_connection_get_peer'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPRequest::GetURI[abi:cxx11]() const':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:615: undefined reference to `evhttp_request_get_uri'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `HTTPRequest::GetRequestMethod() const':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:620: undefined reference to `evhttp_request_get_command'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `urlDecode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:662: undefined reference to `evhttp_uridecode'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `operator()':\r\n/home/russ/src/bitcoin/src/httpserver.cpp:581: undefined reference to `evhttp_send_reply'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:584: undefined reference to `event_get_version_number'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:584: undefined reference to `event_get_version_number'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:585: undefined reference to `evhttp_request_get_connection'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:587: undefined reference to `evhttp_connection_get_bufferevent'\r\n/home/russ/src/bitcoin/src/httpserver.cpp:589: undefined reference to `bufferevent_enable'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `obtain_event_base()':\r\n/home/russ/src/bitcoin/src/./support/events.h:31: undefined reference to `event_base_new'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `obtain_evhttp(event_base*)':\r\n/home/russ/src/bitcoin/src/./support/events.h:42: undefined reference to `evhttp_new'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `event_base_deleter::operator()(event_base*)':\r\n/home/russ/src/bitcoin/src/./support/events.h:24: undefined reference to `event_base_free'\r\nlibbitcoin_server.a(libbitcoin_server_a-httpserver.o): In function `evhttp_deleter::operator()(evhttp*)':\r\n/home/russ/src/bitcoin/src/./support/events.h:26: undefined reference to `evhttp_free'\r\nlibbitcoin_common.a(libbitcoin_common_a-core_read.o): In function `ParseSighashString(UniValue const&)':\r\n/home/russ/src/bitcoin/src/core_read.cpp:238: undefined reference to `UniValue::get_str[abi:cxx11]() const'\r\nlibbitcoin_common.a(libbitcoin_common_a-core_write.o): In function `ScriptPubKeyToUniv(CScript const&, UniValue&, bool)':\r\n/home/russ/src/bitcoin/src/core_write.cpp:176: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_common.a(libbitcoin_common_a-core_write.o): In function `TxToUniv(CTransaction const&, uint256 const&, UniValue&, bool, int)':\r\n/home/russ/src/bitcoin/src/core_write.cpp:201: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/core_write.cpp:207: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/core_write.cpp:211: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/core_write.cpp:213: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/core_write.cpp:221: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/core_write.cpp:226: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/core_write.cpp:227: undefined reference to `UniValue::push_back(UniValue const&)'\r\n/home/russ/src/bitcoin/src/core_write.cpp:229: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_util.a(libbitcoin_util_a-protocol.o): In function `JSONRPCRequestObj(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&, UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:28: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:29: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_util.a(libbitcoin_util_a-protocol.o): In function `JSONRPCReplyObj(UniValue const&, UniValue const&, UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:37: undefined reference to `NullUniValue'\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:37: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:39: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:40: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:41: undefined reference to `UniValue::pushKV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, UniValue const&)'\r\nlibbitcoin_util.a(libbitcoin_util_a-protocol.o): In function `JSONRPCReply[abi:cxx11](UniValue const&, UniValue const&, UniValue const&)':\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:48: undefined reference to `UniValue::write[abi:cxx11](unsigned int, unsigned int) const'\r\nlibbitcoin_util.a(libbitcoin_util_a-protocol.o): In function `JSONRPCProcessBatchReply(UniValue const&, unsigned long)':\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:140: undefined reference to `UniValue::operator[](unsigned long) const'\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:144: undefined reference to `UniValue::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'\r\n/home/russ/src/bitcoin/src/rpc/protocol.cpp:144: undefined reference to `UniValue::get_int() const'\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nMakefile:5037: recipe for target 'bitcoin-wallet' failed\r\nmake[2]: *** [bitcoin-wallet] Error 1\r\nmake[2]: Leaving directory '/home/russ/src/bitcoin/src'\r\nMakefile:12466: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/russ/src/bitcoin/src'\r\nMakefile:776: recipe for target 'all-recursive' failed\r\nmake: *** [all-recursive] Error 1\r\n\r\n```\r\n\r\n</details>\r\n\r\nI'm not sure how much you know already about static linking c++, but https://www.airs.com/blog/archives/48 is a nice concise description of the process the linker goes through to resolve symbols. In this case, 00dfb2a440b94a24b61cafb519fb122f6a0ae176 adds a reference to the `g_connman` symbol in `src/interfaces/chain.cpp`. That symbol is defined in `init.cpp`, when means all the other symbols `init.cpp` uses have to be pulled in as well. This pulls in many other object files and a few new libraries, which now have to be listed in the Makefile, so I am listing them in the Makefile.\r\n\r\nIn bitcoin, historically people haven't put much thought into where symbols are defined so sometimes they get defined in weird places. There could be some advantages in moving some symbol definitions and splitting up monolithic .cpp files: smaller binary sizes, faster link times, fewer dependencies that need to be listed in makefiles, and less makefile churn. One disadvantage might be fewer fascinating conversations about makefiles like this one.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468939538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468944483",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468944483",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 468944483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk0NDQ4Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T18:02:17Z",
    "updated_at": "2019-03-02T18:02:17Z",
    "author_association": "MEMBER",
    "body": "utACK f7efd87c8fb49f82e268a95e989909d453500e2b (verified changes in the force push only).\r\n\r\n@ryanofsky - I edited your last comment by putting the build output in a collapsible `<details>` tag to make this issue easier to follow. I hope you don't mind!\r\n\r\nI think this should be high priority for review/merge now that the v0.18 branch is split. Large PRs that touch a lot of files are best merged after a major release branch to minimize rebase pain.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468944483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468945734",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468945734",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 468945734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk0NTczNA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T18:15:20Z",
    "updated_at": "2019-03-02T18:16:50Z",
    "author_association": "MEMBER",
    "body": "Ok, that's a good explanation of why it's in that particular `g_connman` commit. I'd love to see the include stuff get cleaned up one day, but that's out of scope here. \r\n\r\n@jnewbery TIL you can collapse stuff <details>Lorem ipsum</details>\r\n\r\n\r\nutACK f7efd87",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468945734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468946028",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468946028",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 468946028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk0NjAyOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T18:18:36Z",
    "updated_at": "2019-03-02T18:18:36Z",
    "author_association": "MEMBER",
    "body": "> you can collapse stuff. How does that work?\r\n\r\nPut it in a `<details></details>` tag (with optional `<summary>Click me!</summary>`, like this:\r\n\r\n<details><summary>Click me!</summary>\r\n\r\n![img](https://user-images.githubusercontent.com/1063656/53685808-8d79db80-3ced-11e9-9a18-8293b7c41f3e.jpg)\r\n\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468946028/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468948415",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-468948415",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 468948415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk0ODQxNQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T18:45:42Z",
    "updated_at": "2019-03-02T18:45:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'd love to see the include stuff get cleaned up one day, but that's out of scope here.\r\n\r\nJust in case anybody is interested in following up on this, the main thing we need if we want predictable link dependencies is to remove circular dependencies:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/46eb2755d456ca736c1cb7a0922bfece63c5151e/test/lint/lint-circular-dependencies.sh#L11-L42\r\n\r\nThe circular dependencies lint check isn't perfect for detecting link dependencies because it looks at preprecessor includes instead of linker symbols, but it's a pretty good proxy.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468948415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469679453",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#issuecomment-469679453",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
    "id": 469679453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTY3OTQ1Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T13:29:01Z",
    "updated_at": "2019-03-05T13:29:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could remove this PR from the high priority list https://github.com/bitcoin/bitcoin/projects/8 (and maybe replace it with #10973)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469679453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252125852",
    "pull_request_review_id": 197915100,
    "id": 252125852,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyNTg1Mg==",
    "diff_hunk": "@@ -270,7 +270,8 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::shared_ptr<CWallet> wallet) { fn(MakeWallet(wallet)); }));\n+        return MakeHandler(\n+            ::uiInterface.LoadWallet_connect([fn](std::unique_ptr<Wallet>& wallet) { fn(std::move(wallet)); }));",
    "path": "src/interfaces/node.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it required to break the line?",
    "created_at": "2019-01-30T06:01:45Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252125852",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252125852"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252125852"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252125852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 274,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127175",
    "pull_request_review_id": 197915100,
    "id": 252127175,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyNzE3NQ==",
    "diff_hunk": "@@ -1941,10 +1937,8 @@ bool CWalletTx::InMempool() const\n \n bool CWalletTx::IsTrusted(interfaces::Chain::Lock& locked_chain) const\n {\n-    LockAnnotation lock(::cs_main); // Temporary, for CheckFinalTx below. Removed in upcoming commit.\n-\n     // Quick answer in most cases\n-    if (!CheckFinalTx(*tx))\n+    if (!locked_chain.checkFinalTx(*tx))",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n    if (!locked_chain.checkFinalTx(*tx)) {\r\n        return false;\r\n    }\r\n```\r\nor\r\n```\r\n    if (!locked_chain.checkFinalTx(*tx)) return false;\r\n```",
    "created_at": "2019-01-30T06:10:25Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252127175",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127175"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252127175"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1941,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127661",
    "pull_request_review_id": 197915100,
    "id": 252127661,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyNzY2MQ==",
    "diff_hunk": "@@ -2000,7 +1994,7 @@ std::vector<uint256> CWallet::ResendWalletTransactionsBefore(interfaces::Chain::\n     for (const std::pair<const unsigned int, CWalletTx*>& item : mapSorted)\n     {\n         CWalletTx& wtx = *item.second;\n-        if (wtx.RelayWalletTransaction(locked_chain, connman))\n+        if (wtx.RelayWalletTransaction(locked_chain))",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 82,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n        if (wtx.RelayWalletTransaction(locked_chain)) {\r\n            result.push_back(wtx.GetHash());\r\n        }\r\n```\r\nor\r\n```\r\n        if (wtx.RelayWalletTransaction(locked_chain)) result.push_back(wtx.GetHash());\r\n```",
    "created_at": "2019-01-30T06:13:38Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252127661",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127661"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252127661"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1997,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127946",
    "pull_request_review_id": 197915100,
    "id": 252127946,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyNzk0Ng==",
    "diff_hunk": "@@ -2191,7 +2184,7 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n         const uint256& wtxid = entry.first;\n         const CWalletTx* pcoin = &entry.second;\n \n-        if (!CheckFinalTx(*pcoin->tx))\n+        if (!locked_chain.checkFinalTx(*pcoin->tx))",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 117,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n        if (!locked_chain.checkFinalTx(*pcoin->tx)) {\r\n            continue;\r\n        }\r\n```\r\nor\r\n```\r\n        if (!locked_chain.checkFinalTx(*pcoin->tx)) continue;\r\n```",
    "created_at": "2019-01-30T06:15:25Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252127946",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127946"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252127946"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252127946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2187,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252128843",
    "pull_request_review_id": 197915100,
    "id": 252128843,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyODg0Mw==",
    "diff_hunk": "@@ -4068,41 +4052,41 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n \n         // Top up the keypool\n         if (!walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && !walletInstance->TopUpKeyPool()) {\n-            InitError(_(\"Unable to generate initial keys\"));\n+            chain.initError(_(\"Unable to generate initial keys\"));\n             return nullptr;\n         }\n \n         auto locked_chain = chain.assumeLocked();  // Temporary. Removed in upcoming lock cleanup\n         walletInstance->ChainStateFlushed(locked_chain->getLocator());\n     } else if (wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) {\n         // Make it impossible to disable private keys after creation\n-        InitError(strprintf(_(\"Error loading %s: Private keys can only be disabled during creation\"), walletFile));\n+        chain.initError(strprintf(_(\"Error loading %s: Private keys can only be disabled during creation\"), walletFile));\n         return NULL;\n     } else if (walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         LOCK(walletInstance->cs_KeyStore);\n         if (!walletInstance->mapKeys.empty() || !walletInstance->mapCryptedKeys.empty()) {\n-            InitWarning(strprintf(_(\"Warning: Private keys detected in wallet {%s} with disabled private keys\"), walletFile));\n+            chain.initWarning(strprintf(_(\"Warning: Private keys detected in wallet {%s} with disabled private keys\"), walletFile));\n         }\n     }\n \n     if (!gArgs.GetArg(\"-addresstype\", \"\").empty() && !ParseOutputType(gArgs.GetArg(\"-addresstype\", \"\"), walletInstance->m_default_address_type)) {\n-        InitError(strprintf(\"Unknown address type '%s'\", gArgs.GetArg(\"-addresstype\", \"\")));\n+        chain.initError(strprintf(\"Unknown address type '%s'\", gArgs.GetArg(\"-addresstype\", \"\")));\n         return nullptr;\n     }\n \n     if (!gArgs.GetArg(\"-changetype\", \"\").empty() && !ParseOutputType(gArgs.GetArg(\"-changetype\", \"\"), walletInstance->m_default_change_type)) {\n-        InitError(strprintf(\"Unknown change type '%s'\", gArgs.GetArg(\"-changetype\", \"\")));\n+        chain.initError(strprintf(\"Unknown change type '%s'\", gArgs.GetArg(\"-changetype\", \"\")));\n         return nullptr;\n     }\n \n     if (gArgs.IsArgSet(\"-mintxfee\")) {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-mintxfee\", \"\"), n) || 0 == n) {\n-            InitError(AmountErrMsg(\"mintxfee\", gArgs.GetArg(\"-mintxfee\", \"\")));\n+            chain.initError(AmountErrMsg(\"mintxfee\", gArgs.GetArg(\"-mintxfee\", \"\")));\n             return nullptr;\n         }\n         if (n > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-mintxfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-mintxfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 331,
    "original_position": 331,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indentation:\r\n```\r\n            chain.initWarning(AmountHighWarn(\"-mintxfee\") + \" \" +\r\n                              _(\"This is the minimum transaction fee you pay on every transaction.\"));\r\n```",
    "created_at": "2019-01-30T06:20:02Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252128843",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252128843"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252128843"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252128843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4252,
    "original_line": 4252,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252128990",
    "pull_request_review_id": 197915100,
    "id": 252128990,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyODk5MA==",
    "diff_hunk": "@@ -4112,11 +4096,11 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (gArgs.IsArgSet(\"-fallbackfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-fallbackfee\", \"\"), nFeePerK)) {\n-            InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), gArgs.GetArg(\"-fallbackfee\", \"\")));\n+            chain.initError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), gArgs.GetArg(\"-fallbackfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 347,
    "original_position": 345,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indentation:\r\n```\r\n            chain.initWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +\r\n                              _(\"This is the transaction fee you may pay when fee estimates are not available.\"));\r\n```",
    "created_at": "2019-01-30T06:20:50Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252128990",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252128990"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252128990"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252128990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4266,
    "original_line": 4266,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252129142",
    "pull_request_review_id": 197915100,
    "id": 252129142,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyOTE0Mg==",
    "diff_hunk": "@@ -4125,28 +4109,28 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (gArgs.IsArgSet(\"-discardfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-discardfee\", \"\"), nFeePerK)) {\n-            InitError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n+            chain.initError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-discardfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 363,
    "original_position": 359,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indentation:\r\n```\r\n            chain.initWarning(AmountHighWarn(\"-discardfee\") + \" \" +\r\n                              _(\"This is the transaction fee you may discard if change is smaller than dust at this level\"));\r\n```",
    "created_at": "2019-01-30T06:21:40Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252129142",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252129142"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252129142"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252129142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4279,
    "original_line": 4279,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252129340",
    "pull_request_review_id": 197915100,
    "id": 252129340,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEyOTM0MA==",
    "diff_hunk": "@@ -4125,28 +4109,28 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (gArgs.IsArgSet(\"-discardfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-discardfee\", \"\"), nFeePerK)) {\n-            InitError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n+            chain.initError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n                         _(\"This is the transaction fee you may discard if change is smaller than dust at this level\"));\n         }\n         walletInstance->m_discard_rate = CFeeRate(nFeePerK);\n     }\n     if (gArgs.IsArgSet(\"-paytxfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-paytxfee\", \"\"), nFeePerK)) {\n-            InitError(AmountErrMsg(\"paytxfee\", gArgs.GetArg(\"-paytxfee\", \"\")));\n+            chain.initError(AmountErrMsg(\"paytxfee\", gArgs.GetArg(\"-paytxfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-paytxfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-paytxfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 378,
    "original_position": 373,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indentation:\r\n```\r\n            chain.initWarning(AmountHighWarn(\"-paytxfee\") + \" \" +\r\n                              _(\"This is the transaction fee you will pay if you send a transaction.\"));\r\n```",
    "created_at": "2019-01-30T06:22:54Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252129340",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252129340"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252129340"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252129340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4291,
    "original_line": 4291,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130091",
    "pull_request_review_id": 197915100,
    "id": 252130091,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDA5MQ==",
    "diff_hunk": "@@ -152,7 +152,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         if (!request.params[2].isNull())\n             fRescan = request.params[2].get_bool();\n \n-        if (fRescan && fPruneMode)\n+        if (fRescan && pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n        if (fRescan && pwallet->chain().getPruneMode()) {\r\n            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\r\n        }\r\n```",
    "created_at": "2019-01-30T06:27:37Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130091",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130091"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130091"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 155,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130168",
    "pull_request_review_id": 197915100,
    "id": 252130168,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDE2OA==",
    "diff_hunk": "@@ -308,7 +308,7 @@ UniValue importaddress(const JSONRPCRequest& request)\n     if (!request.params[2].isNull())\n         fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n+    if (fRescan && pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n    if (fRescan && pwallet->chain().getPruneMode()) {\r\n        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\r\n    }\r\n```",
    "created_at": "2019-01-30T06:28:09Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130168",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130168"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130168"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 311,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130246",
    "pull_request_review_id": 197915100,
    "id": 252130246,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDI0Ng==",
    "diff_hunk": "@@ -496,7 +496,7 @@ UniValue importpubkey(const JSONRPCRequest& request)\n     if (!request.params[2].isNull())\n         fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n+    if (fRescan && pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n    if (fRescan && pwallet->chain().getPruneMode()) {\r\n        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\r\n    }\r\n```",
    "created_at": "2019-01-30T06:28:36Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130246",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130246"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130246"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 499,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130370",
    "pull_request_review_id": 197915100,
    "id": 252130370,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDM3MA==",
    "diff_hunk": "@@ -557,7 +557,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n-    if (fPruneMode)\n+    if (pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n    if (pwallet->chain().getPruneMode()) {\r\n        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing wallets is disabled in pruned mode\");\r\n    }\r\n```",
    "created_at": "2019-01-30T06:29:14Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130370",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130370"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130370"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 560,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130561",
    "pull_request_review_id": 197915100,
    "id": 252130561,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDU2MQ==",
    "diff_hunk": "@@ -627,7 +625,7 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n     CAmount nAmount = 0;\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n-        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx))\n+        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx))",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 50,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx)) {\r\n            continue;\r\n        }\r\n```\r\nor\r\n```\r\n        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx)) continue;\r\n```",
    "created_at": "2019-01-30T06:30:26Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130561",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130561"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130561"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 628,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130679",
    "pull_request_review_id": 197915100,
    "id": 252130679,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDY3OQ==",
    "diff_hunk": "@@ -693,7 +690,7 @@ static UniValue getreceivedbylabel(const JSONRPCRequest& request)\n     CAmount nAmount = 0;\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n-        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx))\n+        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx))",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx)) {\r\n            continue;\r\n        }\r\n```\r\nor\r\n```\r\n        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx)) continue;\r\n```",
    "created_at": "2019-01-30T06:31:10Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130679",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130679"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130679"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 693,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130825",
    "pull_request_review_id": 197915100,
    "id": 252130825,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDgyNQ==",
    "diff_hunk": "@@ -1080,7 +1075,7 @@ static UniValue ListReceived(interfaces::Chain::Lock& locked_chain, CWallet * co\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n \n-        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx))\n+        if (wtx.IsCoinBase() || !locked_chain.checkFinalTx(*wtx.tx))",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n        if (wtx.IsCoinBase() || !locked_chain.checkFinalTx(*wtx.tx)) {\r\n            continue;\r\n        }\r\n```\r\nor\r\n```\r\n        if (wtx.IsCoinBase() || !locked_chain.checkFinalTx(*wtx.tx)) continue;\r\n```",
    "created_at": "2019-01-30T06:32:12Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130825",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130825"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130825"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1078,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130921",
    "pull_request_review_id": 197915100,
    "id": 252130921,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMDkyMQ==",
    "diff_hunk": "@@ -2698,7 +2693,7 @@ static UniValue resendwallettransactions(const JSONRPCRequest& request)\n              }.ToString()\n             );\n \n-    if (!g_connman)\n+    if (!pwallet->chain().p2pEnabled())",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 121,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n    if (!pwallet->chain().p2pEnabled()) {\r\n        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\r\n    }\r\n```",
    "created_at": "2019-01-30T06:32:49Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130921",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130921"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252130921"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252130921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2696,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131446",
    "pull_request_review_id": 197915100,
    "id": 252131446,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMTQ0Ng==",
    "diff_hunk": "@@ -3967,26 +3951,26 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (nLoadWalletRet != DBErrors::LOAD_OK)\n     {\n         if (nLoadWalletRet == DBErrors::CORRUPT) {\n-            InitError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n+            chain.initError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n             return nullptr;\n         }\n         else if (nLoadWalletRet == DBErrors::NONCRITICAL_ERROR)\n         {\n-            InitWarning(strprintf(_(\"Error reading %s! All keys read correctly, but transaction data\"\n+            chain.initWarning(strprintf(_(\"Error reading %s! All keys read correctly, but transaction data\"",
    "path": "src/wallet/wallet.cpp",
    "position": 237,
    "original_position": 238,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indentation:\r\n```\r\n            chain.initWarning(strprintf(_(\"Error reading %s! All keys read correctly, but transaction data\"\r\n                                          \" or address book entries might be missing or incorrect.\"),\r\n```",
    "created_at": "2019-01-30T06:36:17Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252131446",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131446"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252131446"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4120,
    "original_line": 4120,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131841",
    "pull_request_review_id": 197915100,
    "id": 252131841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEzMTg0MQ==",
    "diff_hunk": "@@ -4187,20 +4171,20 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n-        if (fPruneMode)\n+        if (chain.getPruneMode())",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 388,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Brace on the same line:\r\n```\r\n        if (chain.getPruneMode()) {\r\n```",
    "created_at": "2019-01-30T06:39:02Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252131841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252131841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252131841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4174,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252408008",
    "pull_request_review_id": 198268928,
    "id": 252408008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQwODAwOA==",
    "diff_hunk": "@@ -25,6 +26,8 @@\n #include <memory>\n #include <utility>\n \n+class CReserveScript;",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "81adc6a95d1eb2a62e2222798d47cdfd3872f297",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "unnecessary given this is declared in the header",
    "created_at": "2019-01-30T19:38:53Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252408008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252408008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252408008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252408008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252412378",
    "pull_request_review_id": 198274310,
    "id": 252412378,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQxMjM3OA==",
    "diff_hunk": "@@ -5,7 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n-#include <optional.h>\n+#include <optional.h>               // For Optional and nullopt",
    "path": "src/interfaces/chain.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "adfd42c0c8cf83d066e645f329626f17c64aac1a",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: IMO we could do without this comment",
    "created_at": "2019-01-30T19:50:36Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252412378",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252412378"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252412378"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252412378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 8,
    "original_line": 8,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252413788",
    "pull_request_review_id": 198276008,
    "id": 252413788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQxMzc4OA==",
    "diff_hunk": "@@ -138,6 +139,9 @@ class Chain\n \n     //! Get virtual transaction size.\n     virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 49,
    "original_position": 16,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "adfd42c0c8cf83d066e645f329626f17c64aac1a",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could return the status string and thus avoid the include / simplify the interface.",
    "created_at": "2019-01-30T19:54:14Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252413788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252413788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252413788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252413788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 146,
    "original_line": 146,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252417273",
    "pull_request_review_id": 198280549,
    "id": 252417273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQxNzI3Mw==",
    "diff_hunk": "@@ -43,6 +43,10 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(EVENT_PTHREADS_LIBS) \\",
    "path": "src/Makefile.bench.include",
    "position": null,
    "original_position": 6,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "02022184aa98ad27ba4338dd0f7a8e4d20180818",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you explain these? Compiles successfully with just the EVENT_LIBS on my machine.",
    "created_at": "2019-01-30T20:04:33Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252417273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252417273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252417273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252417273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252450316",
    "pull_request_review_id": 198322603,
    "id": 252450316,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQ1MDMxNg==",
    "diff_hunk": "@@ -99,8 +99,6 @@ class CCoinControl;\n class COutput;\n class CReserveKey;\n class CScript;\n-class CTxMemPool;\n-class CBlockPolicyEstimator;",
    "path": "src/wallet/wallet.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "5340672d5ecff804c6fbb2f11e990357bbcedb1d",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "note: last use removed in d97fe2016cc7739929aac5c44de5037163b17ad0",
    "created_at": "2019-01-30T21:44:51Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252450316",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252450316"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252450316"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252450316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 104,
    "original_line": 104,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252453738",
    "pull_request_review_id": 198326957,
    "id": 252453738,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQ1MzczOA==",
    "diff_hunk": "@@ -138,6 +139,12 @@ class LockImpl : public Chain::Lock\n         LockAnnotation lock(::cs_main);\n         return CheckFinalTx(tx);\n     }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "9eee26ef6071451ee426f71beb6b77184bc8b073",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: these read better if you lead with the param name comment IMO",
    "created_at": "2019-01-30T21:54:43Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252453738",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252453738"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252453738"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252453738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 158,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252455116",
    "pull_request_review_id": 198328681,
    "id": 252455116,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQ1NTExNg==",
    "diff_hunk": "@@ -258,6 +259,7 @@ class ChainImpl : public Chain\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }",
    "path": "src/interfaces/chain.cpp",
    "position": 96,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "76401da3a0cdcf07f6b1e6128647afe941e55e48",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this be in `interfaces/node`? That's where other `::uiInterface` access is.",
    "created_at": "2019-01-30T21:58:45Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252455116",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252455116"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252455116"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252455116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 256,
    "original_line": 256,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252455869",
    "pull_request_review_id": 198329705,
    "id": 252455869,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQ1NTg2OQ==",
    "diff_hunk": "@@ -251,6 +252,9 @@ class ChainImpl : public Chain\n     bool getPruneMode() override { return ::fPruneMode; }\n     bool p2pEnabled() override { return g_connman != nullptr; }\n     int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }",
    "path": "src/interfaces/chain.cpp",
    "position": 95,
    "original_position": 14,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "e8d3a84234d442bcfbbd122b9682492e7d5cd46c",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this be in `interfaces/node`? That's where other `::uiInterface` access is.",
    "created_at": "2019-01-30T22:01:12Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252455869",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252455869"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252455869"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252455869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 255,
    "original_line": 255,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320373",
    "pull_request_review_id": 199406213,
    "id": 253320373,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMDM3Mw==",
    "diff_hunk": "@@ -43,6 +43,10 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(EVENT_PTHREADS_LIBS) \\",
    "path": "src/Makefile.bench.include",
    "position": null,
    "original_position": 6,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "02022184aa98ad27ba4338dd0f7a8e4d20180818",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Could you explain these? Compiles successfully with just the EVENT_LIBS on my machine.\r\n\r\nI didn't take the time go back and see why these were needed, but I dropped the wallet and server lines. We have circular dependencies so the need to repeat libraries on the linker command line comes and goes as dependencies between individual object files change: https://github.com/bitcoin/bitcoin/pull/14437#discussion_r226395545",
    "created_at": "2019-02-03T21:29:44Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253320373",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320373"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253320373"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 252417273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320689",
    "pull_request_review_id": 199406213,
    "id": 253320689,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMDY4OQ==",
    "diff_hunk": "@@ -25,6 +26,8 @@\n #include <memory>\n #include <utility>\n \n+class CReserveScript;",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "81adc6a95d1eb2a62e2222798d47cdfd3872f297",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> unnecessary given this is declared in the header\r\n\r\nThis was added by IWYU because `CReserveScript` is only forward declared in the headers included here, and defined in a different header. In theory this allows the other headers to change without breaking this file. I don't think [IWYU rationale](https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/WhyIWYU.md) is completely airtight, but I like the IWYU tool, and don't personally think it's worth spending effort to override it if it isn't creating a problem.",
    "created_at": "2019-02-03T21:38:06Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253320689",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320689"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253320689"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 252408008
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320864",
    "pull_request_review_id": 199406213,
    "id": 253320864,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMDg2NA==",
    "diff_hunk": "@@ -138,6 +139,12 @@ class LockImpl : public Chain::Lock\n         LockAnnotation lock(::cs_main);\n         return CheckFinalTx(tx);\n     }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "9eee26ef6071451ee426f71beb6b77184bc8b073",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> nit: these read better if you lead with the param name comment IMO\r\n\r\nI don't think there is anything to be done here. I just want to stick to one style, and would be happy with whatever style people like. If you want to see changes related to this, I'd suggest opening a PR adding a recommendation to the developer guide so the project could converge on one style.",
    "created_at": "2019-02-03T21:42:42Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253320864",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320864"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253320864"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253320864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 158,
    "side": "RIGHT",
    "in_reply_to_id": 252453738
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253321096",
    "pull_request_review_id": 199406213,
    "id": 253321096,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMTA5Ng==",
    "diff_hunk": "@@ -251,6 +252,9 @@ class ChainImpl : public Chain\n     bool getPruneMode() override { return ::fPruneMode; }\n     bool p2pEnabled() override { return g_connman != nullptr; }\n     int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }",
    "path": "src/interfaces/chain.cpp",
    "position": 95,
    "original_position": 14,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "e8d3a84234d442bcfbbd122b9682492e7d5cd46c",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Should this be in interfaces/node? That's where other ::uiInterface access is.\r\n\r\nIn #10102 there are three processes: `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui`. `interfaces::Node` is used by the `bitcoin-gui` process to control the `bitcoin-node` process, and `interfaces::Chain` is used by the `bitcoin-wallet` process to interact with the `bitcoin-node` process (mainly by receiving blocks and transactions).\r\n\r\nThe `uiInterface` variable is used in both `NodeImpl` and `ChainImpl` classes because they both execute in the same `bitcoin-node` process where `uiInterface` is valid.",
    "created_at": "2019-02-03T21:48:30Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253321096",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253321096"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253321096"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253321096/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 255,
    "original_line": 255,
    "side": "RIGHT",
    "in_reply_to_id": 252455869
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322273",
    "pull_request_review_id": 199406213,
    "id": 253322273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjI3Mw==",
    "diff_hunk": "@@ -258,6 +259,7 @@ class ChainImpl : public Chain\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }",
    "path": "src/interfaces/chain.cpp",
    "position": 96,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "76401da3a0cdcf07f6b1e6128647afe941e55e48",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Should this be in interfaces/node? That's where other ::uiInterface access is.\r\n\r\nPrevious comment https://github.com/bitcoin/bitcoin/pull/15288#discussion_r252455869 about `uiInterface` also applies here, but in the future, the `initMessage`, `initWarning`, `initError`, and `loadWallet` methods will likely move to a new interface (maybe `interfaces::WalletClient` or `interfaces::Ui`) to allow the `bitcoin-gui` process to connect directly to the `bitcoin-wallet` process without going through `bitcoin-node`.\r\n\r\nI didn't start down that road yet because ostensibly there are a lot of other ways the Chain object could be broken up, and in general I think it's less confusing to have fewer class types with more methods than more class types with fewer methods. Especially if instances would have the same cardinality and just be sitting side by side anyway.",
    "created_at": "2019-02-03T22:16:25Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 256,
    "original_line": 256,
    "side": "RIGHT",
    "in_reply_to_id": 252455116
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322347",
    "pull_request_review_id": 199406213,
    "id": 253322347,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjM0Nw==",
    "diff_hunk": "@@ -5,7 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n-#include <optional.h>\n+#include <optional.h>               // For Optional and nullopt",
    "path": "src/interfaces/chain.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "adfd42c0c8cf83d066e645f329626f17c64aac1a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> nit: IMO we could do without this comment\r\n\r\nNot clear what change is being asked for. It would seem inconsistent to delete this comment and keep other comments around it.",
    "created_at": "2019-02-03T22:18:35Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322347",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322347"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322347"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 8,
    "original_line": 8,
    "side": "RIGHT",
    "in_reply_to_id": 252412378
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322575",
    "pull_request_review_id": 199406213,
    "id": 253322575,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjU3NQ==",
    "diff_hunk": "@@ -138,6 +139,9 @@ class Chain\n \n     //! Get virtual transaction size.\n     virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 49,
    "original_position": 16,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "adfd42c0c8cf83d066e645f329626f17c64aac1a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ">  Could return the status string and thus avoid the include / simplify the interface.\r\n\r\nInclude could be removed with a forward declaration in the future. String would make the interface more cumbersome and generate JSONRPC error text in non-RPC code.",
    "created_at": "2019-02-03T22:23:43Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322575",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322575"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322575"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 146,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 252413788
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322593",
    "pull_request_review_id": 199406213,
    "id": 253322593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjU5Mw==",
    "diff_hunk": "@@ -270,7 +270,8 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::shared_ptr<CWallet> wallet) { fn(MakeWallet(wallet)); }));\n+        return MakeHandler(\n+            ::uiInterface.LoadWallet_connect([fn](std::unique_ptr<Wallet>& wallet) { fn(std::move(wallet)); }));",
    "path": "src/interfaces/node.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "reformatted",
    "created_at": "2019-02-03T22:24:01Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 274,
    "side": "RIGHT",
    "in_reply_to_id": 252125852
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322670",
    "pull_request_review_id": 199406213,
    "id": 253322670,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjY3MA==",
    "diff_hunk": "@@ -152,7 +152,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         if (!request.params[2].isNull())\n             fRescan = request.params[2].get_bool();\n \n-        if (fRescan && fPruneMode)\n+        if (fRescan && pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:26:07Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322670",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322670"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322670"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 155,
    "side": "RIGHT",
    "in_reply_to_id": 252130091
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322675",
    "pull_request_review_id": 199406213,
    "id": 253322675,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjY3NQ==",
    "diff_hunk": "@@ -308,7 +308,7 @@ UniValue importaddress(const JSONRPCRequest& request)\n     if (!request.params[2].isNull())\n         fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n+    if (fRescan && pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:26:16Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322675",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322675"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322675"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 311,
    "side": "RIGHT",
    "in_reply_to_id": 252130168
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322682",
    "pull_request_review_id": 199406213,
    "id": 253322682,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjY4Mg==",
    "diff_hunk": "@@ -496,7 +496,7 @@ UniValue importpubkey(const JSONRPCRequest& request)\n     if (!request.params[2].isNull())\n         fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n+    if (fRescan && pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:26:21Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322682",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322682"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322682"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 499,
    "side": "RIGHT",
    "in_reply_to_id": 252130246
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322691",
    "pull_request_review_id": 199406213,
    "id": 253322691,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjY5MQ==",
    "diff_hunk": "@@ -557,7 +557,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n-    if (fPruneMode)\n+    if (pwallet->chain().getPruneMode())",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:26:28Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 560,
    "side": "RIGHT",
    "in_reply_to_id": 252130370
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322766",
    "pull_request_review_id": 199406213,
    "id": 253322766,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjc2Ng==",
    "diff_hunk": "@@ -627,7 +625,7 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n     CAmount nAmount = 0;\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n-        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx))\n+        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx))",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 50,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:27:49Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322766",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322766"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322766"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 628,
    "side": "RIGHT",
    "in_reply_to_id": 252130561
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322774",
    "pull_request_review_id": 199406213,
    "id": 253322774,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjc3NA==",
    "diff_hunk": "@@ -693,7 +690,7 @@ static UniValue getreceivedbylabel(const JSONRPCRequest& request)\n     CAmount nAmount = 0;\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n-        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx))\n+        if (wtx.IsCoinBase() || !locked_chain->checkFinalTx(*wtx.tx))",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:27:56Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322774",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322774"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322774"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 693,
    "side": "RIGHT",
    "in_reply_to_id": 252130679
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322781",
    "pull_request_review_id": 199406213,
    "id": 253322781,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjc4MQ==",
    "diff_hunk": "@@ -1080,7 +1075,7 @@ static UniValue ListReceived(interfaces::Chain::Lock& locked_chain, CWallet * co\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n \n-        if (wtx.IsCoinBase() || !CheckFinalTx(*wtx.tx))\n+        if (wtx.IsCoinBase() || !locked_chain.checkFinalTx(*wtx.tx))",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:28:05Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322781",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322781"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322781"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1078,
    "side": "RIGHT",
    "in_reply_to_id": 252130825
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322816",
    "pull_request_review_id": 199406213,
    "id": 253322816,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjgxNg==",
    "diff_hunk": "@@ -2698,7 +2693,7 @@ static UniValue resendwallettransactions(const JSONRPCRequest& request)\n              }.ToString()\n             );\n \n-    if (!g_connman)\n+    if (!pwallet->chain().p2pEnabled())",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 121,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:28:37Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322816",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322816"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322816"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2696,
    "side": "RIGHT",
    "in_reply_to_id": 252130921
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322836",
    "pull_request_review_id": 199406213,
    "id": 253322836,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjgzNg==",
    "diff_hunk": "@@ -1941,10 +1937,8 @@ bool CWalletTx::InMempool() const\n \n bool CWalletTx::IsTrusted(interfaces::Chain::Lock& locked_chain) const\n {\n-    LockAnnotation lock(::cs_main); // Temporary, for CheckFinalTx below. Removed in upcoming commit.\n-\n     // Quick answer in most cases\n-    if (!CheckFinalTx(*tx))\n+    if (!locked_chain.checkFinalTx(*tx))",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:28:55Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322836",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322836"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322836"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1941,
    "side": "RIGHT",
    "in_reply_to_id": 252127175
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322878",
    "pull_request_review_id": 199406213,
    "id": 253322878,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjg3OA==",
    "diff_hunk": "@@ -2000,7 +1994,7 @@ std::vector<uint256> CWallet::ResendWalletTransactionsBefore(interfaces::Chain::\n     for (const std::pair<const unsigned int, CWalletTx*>& item : mapSorted)\n     {\n         CWalletTx& wtx = *item.second;\n-        if (wtx.RelayWalletTransaction(locked_chain, connman))\n+        if (wtx.RelayWalletTransaction(locked_chain))",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 82,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:29:57Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322878",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322878"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322878"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1997,
    "side": "RIGHT",
    "in_reply_to_id": 252127661
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322891",
    "pull_request_review_id": 199406213,
    "id": 253322891,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjg5MQ==",
    "diff_hunk": "@@ -2191,7 +2184,7 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n         const uint256& wtxid = entry.first;\n         const CWalletTx* pcoin = &entry.second;\n \n-        if (!CheckFinalTx(*pcoin->tx))\n+        if (!locked_chain.checkFinalTx(*pcoin->tx))",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 117,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added braces",
    "created_at": "2019-02-03T22:30:05Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322891",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322891"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322891"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2187,
    "side": "RIGHT",
    "in_reply_to_id": 252127946
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322923",
    "pull_request_review_id": 199406213,
    "id": 253322923,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjkyMw==",
    "diff_hunk": "@@ -4187,20 +4171,20 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n-        if (fPruneMode)\n+        if (chain.getPruneMode())",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 388,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "moved brace",
    "created_at": "2019-02-03T22:30:53Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322923",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322923"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322923"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4174,
    "side": "RIGHT",
    "in_reply_to_id": 252131841
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322985",
    "pull_request_review_id": 199406213,
    "id": 253322985,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMjk4NQ==",
    "diff_hunk": "@@ -3967,26 +3951,26 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (nLoadWalletRet != DBErrors::LOAD_OK)\n     {\n         if (nLoadWalletRet == DBErrors::CORRUPT) {\n-            InitError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n+            chain.initError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n             return nullptr;\n         }\n         else if (nLoadWalletRet == DBErrors::NONCRITICAL_ERROR)\n         {\n-            InitWarning(strprintf(_(\"Error reading %s! All keys read correctly, but transaction data\"\n+            chain.initWarning(strprintf(_(\"Error reading %s! All keys read correctly, but transaction data\"",
    "path": "src/wallet/wallet.cpp",
    "position": 237,
    "original_position": 238,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added space",
    "created_at": "2019-02-03T22:32:01Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322985",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322985"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253322985"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253322985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4120,
    "original_line": 4120,
    "side": "RIGHT",
    "in_reply_to_id": 252131446
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323007",
    "pull_request_review_id": 199406213,
    "id": 253323007,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMzAwNw==",
    "diff_hunk": "@@ -4068,41 +4052,41 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n \n         // Top up the keypool\n         if (!walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && !walletInstance->TopUpKeyPool()) {\n-            InitError(_(\"Unable to generate initial keys\"));\n+            chain.initError(_(\"Unable to generate initial keys\"));\n             return nullptr;\n         }\n \n         auto locked_chain = chain.assumeLocked();  // Temporary. Removed in upcoming lock cleanup\n         walletInstance->ChainStateFlushed(locked_chain->getLocator());\n     } else if (wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) {\n         // Make it impossible to disable private keys after creation\n-        InitError(strprintf(_(\"Error loading %s: Private keys can only be disabled during creation\"), walletFile));\n+        chain.initError(strprintf(_(\"Error loading %s: Private keys can only be disabled during creation\"), walletFile));\n         return NULL;\n     } else if (walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         LOCK(walletInstance->cs_KeyStore);\n         if (!walletInstance->mapKeys.empty() || !walletInstance->mapCryptedKeys.empty()) {\n-            InitWarning(strprintf(_(\"Warning: Private keys detected in wallet {%s} with disabled private keys\"), walletFile));\n+            chain.initWarning(strprintf(_(\"Warning: Private keys detected in wallet {%s} with disabled private keys\"), walletFile));\n         }\n     }\n \n     if (!gArgs.GetArg(\"-addresstype\", \"\").empty() && !ParseOutputType(gArgs.GetArg(\"-addresstype\", \"\"), walletInstance->m_default_address_type)) {\n-        InitError(strprintf(\"Unknown address type '%s'\", gArgs.GetArg(\"-addresstype\", \"\")));\n+        chain.initError(strprintf(\"Unknown address type '%s'\", gArgs.GetArg(\"-addresstype\", \"\")));\n         return nullptr;\n     }\n \n     if (!gArgs.GetArg(\"-changetype\", \"\").empty() && !ParseOutputType(gArgs.GetArg(\"-changetype\", \"\"), walletInstance->m_default_change_type)) {\n-        InitError(strprintf(\"Unknown change type '%s'\", gArgs.GetArg(\"-changetype\", \"\")));\n+        chain.initError(strprintf(\"Unknown change type '%s'\", gArgs.GetArg(\"-changetype\", \"\")));\n         return nullptr;\n     }\n \n     if (gArgs.IsArgSet(\"-mintxfee\")) {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-mintxfee\", \"\"), n) || 0 == n) {\n-            InitError(AmountErrMsg(\"mintxfee\", gArgs.GetArg(\"-mintxfee\", \"\")));\n+            chain.initError(AmountErrMsg(\"mintxfee\", gArgs.GetArg(\"-mintxfee\", \"\")));\n             return nullptr;\n         }\n         if (n > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-mintxfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-mintxfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 331,
    "original_position": 331,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added space",
    "created_at": "2019-02-03T22:32:29Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323007",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323007"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323007"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4252,
    "original_line": 4252,
    "side": "RIGHT",
    "in_reply_to_id": 252128843
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323037",
    "pull_request_review_id": 199406213,
    "id": 253323037,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMzAzNw==",
    "diff_hunk": "@@ -4112,11 +4096,11 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (gArgs.IsArgSet(\"-fallbackfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-fallbackfee\", \"\"), nFeePerK)) {\n-            InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), gArgs.GetArg(\"-fallbackfee\", \"\")));\n+            chain.initError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), gArgs.GetArg(\"-fallbackfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 347,
    "original_position": 345,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added space",
    "created_at": "2019-02-03T22:32:57Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323037",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323037"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323037"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4266,
    "original_line": 4266,
    "side": "RIGHT",
    "in_reply_to_id": 252128990
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323059",
    "pull_request_review_id": 199406213,
    "id": 253323059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMzA1OQ==",
    "diff_hunk": "@@ -4125,28 +4109,28 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (gArgs.IsArgSet(\"-discardfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-discardfee\", \"\"), nFeePerK)) {\n-            InitError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n+            chain.initError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-discardfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 363,
    "original_position": 359,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added space",
    "created_at": "2019-02-03T22:33:09Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4279,
    "original_line": 4279,
    "side": "RIGHT",
    "in_reply_to_id": 252129142
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323073",
    "pull_request_review_id": 199406213,
    "id": 253323073,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzMyMzA3Mw==",
    "diff_hunk": "@@ -4125,28 +4109,28 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (gArgs.IsArgSet(\"-discardfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-discardfee\", \"\"), nFeePerK)) {\n-            InitError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n+            chain.initError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), gArgs.GetArg(\"-discardfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n                         _(\"This is the transaction fee you may discard if change is smaller than dust at this level\"));\n         }\n         walletInstance->m_discard_rate = CFeeRate(nFeePerK);\n     }\n     if (gArgs.IsArgSet(\"-paytxfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-paytxfee\", \"\"), nFeePerK)) {\n-            InitError(AmountErrMsg(\"paytxfee\", gArgs.GetArg(\"-paytxfee\", \"\")));\n+            chain.initError(AmountErrMsg(\"paytxfee\", gArgs.GetArg(\"-paytxfee\", \"\")));\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            InitWarning(AmountHighWarn(\"-paytxfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-paytxfee\") + \" \" +",
    "path": "src/wallet/wallet.cpp",
    "position": 378,
    "original_position": 373,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "4f851c9249094ea87a9c24020ade6f2185bc5c67",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added space",
    "created_at": "2019-02-03T22:33:35Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323073",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323073"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253323073"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253323073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4291,
    "original_line": 4291,
    "side": "RIGHT",
    "in_reply_to_id": 252129340
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253975914",
    "pull_request_review_id": 200216310,
    "id": 253975914,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mzk3NTkxNA==",
    "diff_hunk": "@@ -25,6 +26,8 @@\n #include <memory>\n #include <utility>\n \n+class CReserveScript;",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "81adc6a95d1eb2a62e2222798d47cdfd3872f297",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Aside: Perhaps IWYU can be included in `doc/developer-notes.md`",
    "created_at": "2019-02-05T17:52:39Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253975914",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253975914"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253975914"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253975914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 252408008
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253978656",
    "pull_request_review_id": 200219685,
    "id": 253978656,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mzk3ODY1Ng==",
    "diff_hunk": "@@ -25,6 +26,8 @@\n #include <memory>\n #include <utility>\n \n+class CReserveScript;",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "81adc6a95d1eb2a62e2222798d47cdfd3872f297",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree, and it should come with steps to install for Bitcoin Core.",
    "created_at": "2019-02-05T17:59:44Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253978656",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253978656"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253978656"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253978656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 252408008
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254004123",
    "pull_request_review_id": 200250987,
    "id": 254004123,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDAwNDEyMw==",
    "diff_hunk": "@@ -25,6 +26,8 @@\n #include <memory>\n #include <utility>\n \n+class CReserveScript;",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "81adc6a95d1eb2a62e2222798d47cdfd3872f297",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Agree, and it should come with steps to install for Bitcoin Core.\r\n\r\nIt's not very convenient, but here are steps I've followed previously: https://github.com/bitcoin/bitcoin/pull/11878#issuecomment-351610027",
    "created_at": "2019-02-05T19:06:35Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254004123",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254004123"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254004123"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254004123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 252408008
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254329944",
    "pull_request_review_id": 200652391,
    "id": 254329944,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDMyOTk0NA==",
    "diff_hunk": "@@ -138,6 +139,12 @@ class LockImpl : public Chain::Lock\n         LockAnnotation lock(::cs_main);\n         return CheckFinalTx(tx);\n     }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "9eee26ef6071451ee426f71beb6b77184bc8b073",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't have an opinion on whether the comment should be before or after the parameter, but agree with Russ that this PR should stick to one style. A future PR could update the developer guide if we want to converge to a single style",
    "created_at": "2019-02-06T15:54:36Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254329944",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254329944"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254329944"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254329944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 158,
    "side": "RIGHT",
    "in_reply_to_id": 252453738
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254331334",
    "pull_request_review_id": 200652391,
    "id": 254331334,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDMzMTMzNA==",
    "diff_hunk": "@@ -102,6 +111,12 @@ class Chain\n         //! is guaranteed to be an ancestor of the block used to create the\n         //! locator.\n         virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n+\n+        //! Check if transaction will be final given chain height current time.\n+        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool.\n+        virtual bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) = 0;",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 40,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Suggestion: consider renaming this interface function `submitToMemoryPool()`. The wallet cannot itself accept a transaction to the memory pool, it can only submit it to the node, which will decide whether to accept the tx. I think changing the naming reinforces the division between wallet and node.\r\n\r\nInterested to hear your thoughts on this. If you agree, we can push the naming change to a future PR.",
    "created_at": "2019-02-06T15:57:37Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254331334",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254331334"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254331334"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254331334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 119,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254339021",
    "pull_request_review_id": 200652391,
    "id": 254339021,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDMzOTAyMQ==",
    "diff_hunk": "@@ -132,6 +146,17 @@ class LockImpl : public Chain::Lock\n         }\n         return nullopt;\n     }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I have a slight concern about the `maxTxFee` being set by the node instead of the wallet here, but that's more of a long-term design question (and is inherited from having a single `maxTxFee` for both the raw transaction RPCs and wallet RPCs). This PR simply moves the existing function calls to the interface classes. The API can be improved later.\r\n\r\nLonger term, the single `-maxtxfee` option should not be shared between the node and wallet. See https://github.com/bitcoin/bitcoin/issues/15355 for more details.",
    "created_at": "2019-02-06T16:14:45Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254339021",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254339021"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254339021"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254339021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 158,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254417716",
    "pull_request_review_id": 200652391,
    "id": 254417716,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQxNzcxNg==",
    "diff_hunk": "@@ -177,6 +202,72 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 66,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Are we ever expecting `g_conman` to be false? (except perhaps in the unit tests?)\r\n\r\nIn any case, you could make this a bit tidier with:\r\n\r\n```\r\nif (g_conman == nullptr) return false\r\n...\r\n```",
    "created_at": "2019-02-06T19:30:59Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254417716",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254417716"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254417716"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254417716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 219,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254418583",
    "pull_request_review_id": 200652391,
    "id": 254418583,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQxODU4Mw==",
    "diff_hunk": "@@ -1757,25 +1758,20 @@ void CWallet::ReacceptWalletTransactions()\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         CValidationState state;\n-        wtx.AcceptToMemoryPool(*locked_chain, maxTxFee, state);\n+        wtx.AcceptToMemoryPool(*locked_chain, state);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CConnman* connman)\n+bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n {\n     assert(pwallet->GetBroadcastTransactions());\n     if (!IsCoinBase() && !isAbandoned() && GetDepthInMainChain(locked_chain) == 0)\n     {\n         CValidationState state;\n         /* GetDepthInMainChain already catches known conflicts. */\n-        if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n+        if (InMempool() || AcceptToMemoryPool(locked_chain, state)) {\n             pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-            if (connman) {\n-                CInv inv(MSG_TX, GetHash());\n-                connman->ForEachNode([&inv](CNode* pnode)\n-                {\n-                    pnode->PushInventory(inv);\n-                });\n+            if (pwallet->chain().relayTransaction(GetHash())) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 52,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "could just:\r\n\r\n`return pwallet->chain().relayTransaction(GetHash())`\r\n\r\nhere\r\n\r\nEDIT: in fact, after ff0c6daf3aee45cc806178a3737f64693e9f0f53, you could just change the conditional above to:\r\n\r\n```\r\nif (InMempool() || AcceptToMemoryPool(locked_chain, state) && pwallet->chain().p2pEnabled()) {\r\n    pwallet->chain().relayTransaction(GetHash());\r\n}\r\n```\r\n\r\nand drop the return value from `relayTransaction()` (which doesn't get called anywhere else)",
    "created_at": "2019-02-06T19:33:19Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254418583",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254418583"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254418583"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254418583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1774,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254446784",
    "pull_request_review_id": 200652391,
    "id": 254446784,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQ0Njc4NA==",
    "diff_hunk": "@@ -177,6 +202,72 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        auto nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        auto nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        auto nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        auto nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The return value of `errString` is unused. A future PR could rename to `dummy_string` or add a comment. Not required for this move-only commit.",
    "created_at": "2019-02-06T20:54:08Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254446784",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254446784"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254446784"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254446784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 239,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254449444",
    "pull_request_review_id": 200652391,
    "id": 254449444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQ0OTQ0NA==",
    "diff_hunk": "@@ -13,6 +13,6 @@\n UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript);\n \n /** Check bounds on a command line confirm target */\n-unsigned int ParseConfirmTarget(const UniValue& value);\n+unsigned int ParseConfirmTarget(const UniValue& value, unsigned int max_target);",
    "path": "src/rpc/mining.h",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wow. This should be moved into `rpc/util` (in a future PR). (also comment is outdated!)",
    "created_at": "2019-02-06T21:01:42Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254449444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254449444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254449444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254449444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254453488",
    "pull_request_review_id": 200652391,
    "id": 254453488,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQ1MzQ4OA==",
    "diff_hunk": "@@ -177,6 +202,72 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        auto nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        auto nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        auto nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        auto nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        return ::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+            nLimitDescendants, nLimitDescendantSize, errString);\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    unsigned int estimateMaxBlocks() override\n+    {\n+        return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n+    }\n+    CFeeRate poolMinFee() override",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 99,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: can you name this function `mempoolMinFee()`?",
    "created_at": "2019-02-06T21:13:46Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254453488",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254453488"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254453488"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254453488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 252,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254462181",
    "pull_request_review_id": 200652391,
    "id": 254462181,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQ2MjE4MQ==",
    "diff_hunk": "@@ -127,6 +142,63 @@ class Chain\n     //! Estimate fraction of total transactions verified if blocks up to\n     //! the specified block hash are verified.\n     virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n+\n+    //! Get virtual transaction size.\n+    virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction has descendants in mempool.\n+    virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n+\n+    //! Relay transaction.\n+    virtual bool relayTransaction(const uint256& txid) = 0;\n+\n+    //! Calculate mempool ancestor and descendant counts for the given transaction.\n+    virtual void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) = 0;\n+\n+    //! Check chain limits.\n+    virtual bool checkChainLimits(CTransactionRef tx) = 0;\n+\n+    //! Estimate smart fee.\n+    virtual CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc = nullptr) = 0;\n+\n+    //! Fee estimator max target.\n+    virtual unsigned int estimateMaxBlocks() = 0;\n+\n+    //! Pool min fee.\n+    virtual CFeeRate poolMinFee() = 0;\n+\n+    //! Check if pruning is enabled.\n+    virtual bool getPruneMode() = 0;\n+\n+    //! Check if p2p enabled.\n+    virtual bool p2pEnabled() = 0;\n+\n+    // Check if in IBD.\n+    virtual bool isInitialBlockDownload() = 0;\n+\n+    //! Get adjusted time.\n+    virtual int64_t getAdjustedTime() = 0;\n+\n+    //! Send init message.\n+    virtual void initMessage(const std::string& message) = 0;\n+\n+    //! Send init warning.\n+    virtual void initWarning(const std::string& message) = 0;\n+\n+    //! Send init error.\n+    virtual void initError(const std::string& message) = 0;\n+\n+    //! Send wallet load notification.",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 97,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: change to \"Send wallet load notification to the GUI.\"",
    "created_at": "2019-02-06T21:38:31Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254462181",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254462181"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254462181"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254462181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 194,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254464908",
    "pull_request_review_id": 200652391,
    "id": 254464908,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQ2NDkwOA==",
    "diff_hunk": "@@ -270,7 +270,7 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::shared_ptr<CWallet> wallet) { fn(MakeWallet(wallet)); }));\n+        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::unique_ptr<Wallet>& wallet) { fn(std::move(wallet)); }));",
    "path": "src/interfaces/node.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not obvious to me why this (and associated changes) is necessary. Can you perhaps add commentary to the commit message why you're changing the function signature here?",
    "created_at": "2019-02-06T21:46:31Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254464908",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254464908"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254464908"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254464908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 278,
    "original_line": 278,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254474385",
    "pull_request_review_id": 200833836,
    "id": 254474385,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDQ3NDM4NQ==",
    "diff_hunk": "@@ -270,7 +270,7 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::shared_ptr<CWallet> wallet) { fn(MakeWallet(wallet)); }));\n+        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::unique_ptr<Wallet>& wallet) { fn(std::move(wallet)); }));",
    "path": "src/interfaces/node.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254464908\r\n\r\n> It's not obvious to me why this (and associated changes) is necessary\r\n\r\nI'll add information to the commit message, but just to give some feedback now, the idea is that in #10102 the `CWallet` class is internal to the `bitcoin-wallet` process. The other `bitcoin-node` and `bitcoin-gui` processes don't use `CWallet` at all, and only access the wallet through interface classes (`interfaces::ChainClient` and `interfaces::Wallet` respectively).\r\n\r\nThe change from `shared_ptr` to `unique_ptr` here just follows because `CWallet` is used with `shared_ptr`, while the interface classes have more defined lifetimes and don't need `shared_ptr`. Any place an interface argument or return value is passed it's always by reference or with `unique_ptr`.",
    "created_at": "2019-02-06T22:15:57Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254474385",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254474385"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254474385"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254474385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 278,
    "original_line": 278,
    "side": "RIGHT",
    "in_reply_to_id": 254464908
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750583",
    "pull_request_review_id": 201174553,
    "id": 254750583,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MDU4Mw==",
    "diff_hunk": "@@ -1757,25 +1758,20 @@ void CWallet::ReacceptWalletTransactions()\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         CValidationState state;\n-        wtx.AcceptToMemoryPool(*locked_chain, maxTxFee, state);\n+        wtx.AcceptToMemoryPool(*locked_chain, state);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CConnman* connman)\n+bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n {\n     assert(pwallet->GetBroadcastTransactions());\n     if (!IsCoinBase() && !isAbandoned() && GetDepthInMainChain(locked_chain) == 0)\n     {\n         CValidationState state;\n         /* GetDepthInMainChain already catches known conflicts. */\n-        if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n+        if (InMempool() || AcceptToMemoryPool(locked_chain, state)) {\n             pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-            if (connman) {\n-                CInv inv(MSG_TX, GetHash());\n-                connman->ForEachNode([&inv](CNode* pnode)\n-                {\n-                    pnode->PushInventory(inv);\n-                });\n+            if (pwallet->chain().relayTransaction(GetHash())) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 52,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254418583\r\n\r\n> could just\r\n\r\nNice suggestions, they do make things clearer and I think I applied them all.",
    "created_at": "2019-02-07T16:10:42Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750583",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750583"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750583"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1774,
    "side": "RIGHT",
    "in_reply_to_id": 254418583
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750723",
    "pull_request_review_id": 201174553,
    "id": 254750723,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MDcyMw==",
    "diff_hunk": "@@ -132,6 +146,17 @@ class LockImpl : public Chain::Lock\n         }\n         return nullopt;\n     }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254339021\r\n\r\nI replaced ::maxTxFee with an absurd_fee parameter here to help with goal of having separate settings. I think this also makes the current behavior more clear.",
    "created_at": "2019-02-07T16:11:00Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750723",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750723"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750723"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 158,
    "side": "RIGHT",
    "in_reply_to_id": 254339021
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750915",
    "pull_request_review_id": 201174553,
    "id": 254750915,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MDkxNQ==",
    "diff_hunk": "@@ -177,6 +202,72 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 66,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288/files#r254417716\r\n\r\nIn commit \"Remove use of g_connman / PushInventory in wallet code\" (9cd8d6a90df628ca805d0cfa5569d50a666674c9)\r\n\r\n> Are we ever expecting `g_conman` to be false? (except perhaps in the unit tests?)\r\n\r\nI don't think so, but it does seem reasonable for a test to leave g_connman set to null.\r\n\r\nThis is just a cut and paste of the previous code, so that's where the check comes from.\r\n\r\n> In any case, you could make this a bit tidier\r\n\r\nApplied suggestion",
    "created_at": "2019-02-07T16:11:24Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750915",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750915"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750915"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 254417716
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750968",
    "pull_request_review_id": 201174553,
    "id": 254750968,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MDk2OA==",
    "diff_hunk": "@@ -177,6 +202,72 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        auto nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        auto nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        auto nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        auto nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254446784\r\n\r\n> The return value of `errString` is unused. A future PR could rename to `dummy_string` or add a comment. Not required for this move-only commit.\r\n\r\nApplied suggestion here. This wasn't 100% move only anyway, because size_t/auto change (I think made in response to practicalswift signed/unsigned warnings).",
    "created_at": "2019-02-07T16:11:31Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750968",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750968"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254750968"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254750968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 239,
    "side": "RIGHT",
    "in_reply_to_id": 254446784
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751037",
    "pull_request_review_id": 201174553,
    "id": 254751037,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MTAzNw==",
    "diff_hunk": "@@ -177,6 +202,72 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        auto nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        auto nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        auto nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        auto nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        return ::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+            nLimitDescendants, nLimitDescendantSize, errString);\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    unsigned int estimateMaxBlocks() override\n+    {\n+        return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n+    }\n+    CFeeRate poolMinFee() override",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 99,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254453488\r\n\r\n> nit: can you name this function `mempoolMinFee()`?\r\n\r\nRenamed",
    "created_at": "2019-02-07T16:11:42Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751037",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751037"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751037"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 252,
    "side": "RIGHT",
    "in_reply_to_id": 254453488
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751088",
    "pull_request_review_id": 201174553,
    "id": 254751088,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MTA4OA==",
    "diff_hunk": "@@ -102,6 +111,12 @@ class Chain\n         //! is guaranteed to be an ancestor of the block used to create the\n         //! locator.\n         virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n+\n+        //! Check if transaction will be final given chain height current time.\n+        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool.\n+        virtual bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) = 0;",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 40,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254331334\r\n\r\n> Suggestion: consider renaming this interface function `submitToMemoryPool()`\r\n\r\nMakes sense, changed.",
    "created_at": "2019-02-07T16:11:47Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751088",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751088"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751088"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 119,
    "side": "RIGHT",
    "in_reply_to_id": 254331334
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751139",
    "pull_request_review_id": 201174553,
    "id": 254751139,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MTEzOQ==",
    "diff_hunk": "@@ -127,6 +142,63 @@ class Chain\n     //! Estimate fraction of total transactions verified if blocks up to\n     //! the specified block hash are verified.\n     virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n+\n+    //! Get virtual transaction size.\n+    virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction has descendants in mempool.\n+    virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n+\n+    //! Relay transaction.\n+    virtual bool relayTransaction(const uint256& txid) = 0;\n+\n+    //! Calculate mempool ancestor and descendant counts for the given transaction.\n+    virtual void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) = 0;\n+\n+    //! Check chain limits.\n+    virtual bool checkChainLimits(CTransactionRef tx) = 0;\n+\n+    //! Estimate smart fee.\n+    virtual CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc = nullptr) = 0;\n+\n+    //! Fee estimator max target.\n+    virtual unsigned int estimateMaxBlocks() = 0;\n+\n+    //! Pool min fee.\n+    virtual CFeeRate poolMinFee() = 0;\n+\n+    //! Check if pruning is enabled.\n+    virtual bool getPruneMode() = 0;\n+\n+    //! Check if p2p enabled.\n+    virtual bool p2pEnabled() = 0;\n+\n+    // Check if in IBD.\n+    virtual bool isInitialBlockDownload() = 0;\n+\n+    //! Get adjusted time.\n+    virtual int64_t getAdjustedTime() = 0;\n+\n+    //! Send init message.\n+    virtual void initMessage(const std::string& message) = 0;\n+\n+    //! Send init warning.\n+    virtual void initWarning(const std::string& message) = 0;\n+\n+    //! Send init error.\n+    virtual void initError(const std::string& message) = 0;\n+\n+    //! Send wallet load notification.",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 97,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254462181\r\n\r\n> nit: change to \"Send wallet load notification to the GUI.\"\r\n\r\nChanged",
    "created_at": "2019-02-07T16:11:53Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751139",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751139"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751139"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 194,
    "side": "RIGHT",
    "in_reply_to_id": 254462181
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751182",
    "pull_request_review_id": 201174553,
    "id": 254751182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MTE4Mg==",
    "diff_hunk": "@@ -270,7 +270,7 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::shared_ptr<CWallet> wallet) { fn(MakeWallet(wallet)); }));\n+        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::unique_ptr<Wallet>& wallet) { fn(std::move(wallet)); }));",
    "path": "src/interfaces/node.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254464908\r\n\r\n> Can you perhaps add commentary to the commit message why you're changing the function signature here?\r\n\r\nAdded description in f40de055f0bbed97d0a4e1dddd2413be672bf717",
    "created_at": "2019-02-07T16:11:58Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 278,
    "original_line": 278,
    "side": "RIGHT",
    "in_reply_to_id": 254464908
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751213",
    "pull_request_review_id": 201174553,
    "id": 254751213,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDc1MTIxMw==",
    "diff_hunk": "@@ -13,6 +13,6 @@\n UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript);\n \n /** Check bounds on a command line confirm target */\n-unsigned int ParseConfirmTarget(const UniValue& value);\n+unsigned int ParseConfirmTarget(const UniValue& value, unsigned int max_target);",
    "path": "src/rpc/mining.h",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "ba426f53709902a35a46732846226977fbfd5519",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254449444\r\n\r\n> Wow. This should be moved into `rpc/util` (in a future PR). (also comment is outdated!)\r\n\r\nDone in #15373.",
    "created_at": "2019-02-07T16:12:02Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751213",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751213"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254751213"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254751213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT",
    "in_reply_to_id": 254449444
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255300183",
    "pull_request_review_id": 201864550,
    "id": 255300183,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTMwMDE4Mw==",
    "diff_hunk": "@@ -99,8 +99,6 @@ WalletTx MakeWalletTx(interfaces::Chain::Lock& locked_chain, CWallet& wallet, co\n //! Construct wallet tx status struct.\n WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n {\n-    LockAnnotation lock(::cs_main); // Temporary, for CheckFinalTx below. Removed in upcoming commit.",
    "path": "src/interfaces/wallet.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "f5d3f6be30489e110e09d1adf4dc1046d2898154",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is also used for `::mapBlockIndex`, so can not be removed yet?",
    "created_at": "2019-02-09T14:23:32Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r255300183",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255300183"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r255300183"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255300183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 102,
    "original_line": 102,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255314043",
    "pull_request_review_id": 201878732,
    "id": 255314043,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTMxNDA0Mw==",
    "diff_hunk": "@@ -99,8 +99,6 @@ WalletTx MakeWalletTx(interfaces::Chain::Lock& locked_chain, CWallet& wallet, co\n //! Construct wallet tx status struct.\n WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n {\n-    LockAnnotation lock(::cs_main); // Temporary, for CheckFinalTx below. Removed in upcoming commit.",
    "path": "src/interfaces/wallet.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "f5d3f6be30489e110e09d1adf4dc1046d2898154",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r255300183\r\n\r\n> This is also used for `::mapBlockIndex`, so can not be removed yet?\r\n\r\nSeems like a silent merge conflict with #15321 (this PR has not been rebased since that was merged).",
    "created_at": "2019-02-09T21:20:03Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r255314043",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255314043"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r255314043"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255314043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 102,
    "original_line": 102,
    "side": "LEFT",
    "in_reply_to_id": 255300183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256036330",
    "pull_request_review_id": 202770999,
    "id": 256036330,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjAzNjMzMA==",
    "diff_hunk": "@@ -1802,25 +1803,21 @@ void CWallet::ReacceptWalletTransactions()\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         CValidationState state;\n-        wtx.AcceptToMemoryPool(*locked_chain, maxTxFee, state);\n+        wtx.AcceptToMemoryPool(*locked_chain, state);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CConnman* connman)\n+bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n {\n     assert(pwallet->GetBroadcastTransactions());\n     if (!IsCoinBase() && !isAbandoned() && GetDepthInMainChain(locked_chain) == 0)\n     {\n         CValidationState state;\n         /* GetDepthInMainChain already catches known conflicts. */\n-        if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n+        if (InMempool() || AcceptToMemoryPool(locked_chain, state)) {",
    "path": "src/wallet/wallet.cpp",
    "position": 35,
    "original_position": 44,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "a2f0f2daa3077d950e1537751d5b70f397994351",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "My previous comment wasn't clear. I think this would be even better as:\r\n\r\n```\r\nif ((InMempool() || AcceptToMemoryPool(locked_chain, state) && pwallet->chain().p2pEnabled()) {\r\n    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\r\n    return True;\r\n}\r\n```\r\n\r\nI think the existing behaviour, where `Relaying wtx...` is logged even when p2p is not enabled and the tx is not broadcast, is a logging bug.\r\n\r\nI can see this either way though. Changing this is a (minor) behaviour change in a PR which is supposed to be refactor only.",
    "created_at": "2019-02-12T16:30:05Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r256036330",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256036330"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r256036330"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256036330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1901,
    "original_line": 1901,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260016631",
    "pull_request_review_id": 207630652,
    "id": 260016631,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDAxNjYzMQ==",
    "diff_hunk": "@@ -1802,25 +1803,21 @@ void CWallet::ReacceptWalletTransactions()\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         CValidationState state;\n-        wtx.AcceptToMemoryPool(*locked_chain, maxTxFee, state);\n+        wtx.AcceptToMemoryPool(*locked_chain, state);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CConnman* connman)\n+bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n {\n     assert(pwallet->GetBroadcastTransactions());\n     if (!IsCoinBase() && !isAbandoned() && GetDepthInMainChain(locked_chain) == 0)\n     {\n         CValidationState state;\n         /* GetDepthInMainChain already catches known conflicts. */\n-        if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n+        if (InMempool() || AcceptToMemoryPool(locked_chain, state)) {",
    "path": "src/wallet/wallet.cpp",
    "position": 35,
    "original_position": 44,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "a2f0f2daa3077d950e1537751d5b70f397994351",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r256036330\r\n\r\n> I think this would be even better as\r\n\r\nApplied your suggestion in commit \"Remove use of g_connman / PushInventory in wallet code\" (ae6b51043e46e80c0fe89628776de48274d7c1b2)\r\n\r\nI think it's still not a change in behavior, unless it really is possible for `g_connman` to be null at this point. Even if there is a change, only effect is dropping a misleading log message like you say.",
    "created_at": "2019-02-25T21:02:55Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260016631",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260016631"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260016631"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260016631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1901,
    "original_line": 1901,
    "side": "RIGHT",
    "in_reply_to_id": 256036330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260030584",
    "pull_request_review_id": 207648086,
    "id": 260030584,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDAzMDU4NA==",
    "diff_hunk": "@@ -1802,25 +1803,21 @@ void CWallet::ReacceptWalletTransactions()\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         CValidationState state;\n-        wtx.AcceptToMemoryPool(*locked_chain, maxTxFee, state);\n+        wtx.AcceptToMemoryPool(*locked_chain, state);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CConnman* connman)\n+bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n {\n     assert(pwallet->GetBroadcastTransactions());\n     if (!IsCoinBase() && !isAbandoned() && GetDepthInMainChain(locked_chain) == 0)\n     {\n         CValidationState state;\n         /* GetDepthInMainChain already catches known conflicts. */\n-        if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n+        if (InMempool() || AcceptToMemoryPool(locked_chain, state)) {",
    "path": "src/wallet/wallet.cpp",
    "position": 35,
    "original_position": 44,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "a2f0f2daa3077d950e1537751d5b70f397994351",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Your parens are slightly different from the existing precedence.\r\n\r\nWhat you have in this PR:\r\n\r\n```\r\n        if (InMempool() || (AcceptToMemoryPool(locked_chain, state) && pwallet->chain().p2pEnabled())) {\r\n```\r\n\r\ninstead of:\r\n\r\n```\r\n        if ((InMempool() || AcceptToMemoryPool(locked_chain, state)) && pwallet->chain().p2pEnabled()) {\r\n```\r\n\r\nI suggest we revert the most recent change and leave tidying up for a follow-up PR. It doesn't make sense to burden this already large PR with aesthetic improvements.",
    "created_at": "2019-02-25T21:41:06Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260030584",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260030584"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260030584"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260030584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1901,
    "original_line": 1901,
    "side": "RIGHT",
    "in_reply_to_id": 256036330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260042724",
    "pull_request_review_id": 207663365,
    "id": 260042724,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDA0MjcyNA==",
    "diff_hunk": "@@ -1802,25 +1803,21 @@ void CWallet::ReacceptWalletTransactions()\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         CValidationState state;\n-        wtx.AcceptToMemoryPool(*locked_chain, maxTxFee, state);\n+        wtx.AcceptToMemoryPool(*locked_chain, state);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CConnman* connman)\n+bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n {\n     assert(pwallet->GetBroadcastTransactions());\n     if (!IsCoinBase() && !isAbandoned() && GetDepthInMainChain(locked_chain) == 0)\n     {\n         CValidationState state;\n         /* GetDepthInMainChain already catches known conflicts. */\n-        if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n+        if (InMempool() || AcceptToMemoryPool(locked_chain, state)) {",
    "path": "src/wallet/wallet.cpp",
    "position": 35,
    "original_position": 44,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "a2f0f2daa3077d950e1537751d5b70f397994351",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260030584\r\n\r\n> Your parens are slightly different from the existing precedence\r\n\r\nWow, not good. Reverted.",
    "created_at": "2019-02-25T22:15:40Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260042724",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260042724"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260042724"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260042724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1901,
    "original_line": 1901,
    "side": "RIGHT",
    "in_reply_to_id": 256036330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260655451",
    "pull_request_review_id": 208409512,
    "id": 260655451,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDY1NTQ1MQ==",
    "diff_hunk": "@@ -3411,7 +3411,7 @@ UniValue generate(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No coinbase script available\");\n     }\n \n-    return generateBlocks(coinbase_script, num_generate, max_tries, true);\n+    return pwallet->chain().generateBlocks(coinbase_script, num_generate, max_tries, true);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "6f836c04d13bd49bcddff570c73820777a56f419",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This causes RPC code to get entangled with pure wallet code, which adds a dependency on UniValue for the wallet and causes the need to change Makefile.\r\n\r\n`generateBlocks` itself should be split between:\r\n* `rpc/mining.cpp`: check the input parameters, loop over the number of blocks requested, request a block hash, convert the result(s) to JSON\r\n* `interfaces/chain.cpp`  construct block and returns block hash\r\n\r\nFortunately: `The wallet generate rpc method is deprecated and will be fully removed in v0.19` so you can drop this entire commit and wait for #15492.",
    "created_at": "2019-02-27T09:18:59Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260655451",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260655451"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260655451"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260655451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3414,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260675286",
    "pull_request_review_id": 208409512,
    "id": 260675286,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDY3NTI4Ng==",
    "diff_hunk": "@@ -111,7 +111,7 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n     }\n \n     // Calculate the expected size of the new transaction.\n-    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    int64_t txSize = wallet->chain().getVirtualTransactionSize(*(wtx.tx));",
    "path": "src/wallet/feebumper.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "428e6c422c21f35ff991823697a373dfa5cb4e4f",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There should be no need to communicate with the node for pure utility functions like this, but we can worry about that later. Maybe we need a `Utility` interface? Or `CTransaction` should just have a `->VirtualSize()` method.",
    "created_at": "2019-02-27T10:07:59Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260675286",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260675286"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260675286"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260675286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 114,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260679620",
    "pull_request_review_id": 208409512,
    "id": 260679620,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDY3OTYyMA==",
    "diff_hunk": "@@ -138,6 +139,9 @@ class Chain\n \n     //! Get virtual transaction size.\n     virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 49,
    "original_position": 16,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "adfd42c0c8cf83d066e645f329626f17c64aac1a",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Call me `enum` fanboy, but I like to avoid using strings when enums suffice, and let the RPC & GUI deal with rendering them as strings. So agree with keeping it as is.",
    "created_at": "2019-02-27T10:18:04Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260679620",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260679620"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260679620"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260679620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 146,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 252413788
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260692216",
    "pull_request_review_id": 208409512,
    "id": 260692216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDY5MjIxNg==",
    "diff_hunk": "@@ -233,6 +234,7 @@ class ChainImpl : public Chain\n         return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n     }\n     bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }",
    "path": "src/interfaces/chain.cpp",
    "position": 90,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "6fdfa18dfb99a586f493ebd8db611e4ebf783fe2",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note to other reviewers: `p2pEnabled()` is called 1835020e98259568e5e754a7930eb7e0995c7b34 which Github incorrectly shows as earlier.",
    "created_at": "2019-02-27T10:49:26Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260692216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260692216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260692216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260692216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 250,
    "original_line": 250,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260696227",
    "pull_request_review_id": 208409512,
    "id": 260696227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDY5NjIyNw==",
    "diff_hunk": "@@ -111,6 +112,10 @@ class Chain\n \n         //! Check if transaction will be final given chain height current time.\n         virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool if the transaction fee is below the\n+        //! specified amount (as a safeguard). */",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 23,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "8f24a2664899bc268e039500b2e9ff8eef84bbbb",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: \"below the amount specified by absurd_fee\"",
    "created_at": "2019-02-27T11:00:01Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260696227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260696227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260696227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260696227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260700480",
    "pull_request_review_id": 208409512,
    "id": 260700480,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDcwMDQ4MA==",
    "diff_hunk": "@@ -1899,12 +1899,8 @@ bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CC\n         /* GetDepthInMainChain already catches known conflicts. */\n         if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n             pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());",
    "path": "src/wallet/wallet.cpp",
    "position": 36,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1835020e98259568e5e754a7930eb7e0995c7b34",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "From discussion in commit `Remove use of AcceptToMemoryPool in wallet code` between you and @jnewbery: this `Relaying wtx` log message is displayed even if `!p2pEnabled()`. I'm fine with moving the log message down, or adding a TODO, or just ignoring this.",
    "created_at": "2019-02-27T11:10:59Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260700480",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260700480"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260700480"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260700480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1902,
    "original_line": 1902,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260701216",
    "pull_request_review_id": 208409512,
    "id": 260701216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDcwMTIxNg==",
    "diff_hunk": "@@ -8,9 +8,18 @@\n     'core_write.cpp': 'core_io.cpp',\n }\n \n+# Directories with header-based modules, where the assumption that .cpp files\n+# define functions and variables declared in corresponding .h files is\n+# incorrect.\n+HEADER_MODULE_PATHS = [",
    "path": "contrib/devtools/circular-dependencies.py",
    "position": 7,
    "original_position": 7,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1e5f7a174c264cfe9e65a7206acc24f43d9255d7",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: could be a separate commit",
    "created_at": "2019-02-27T11:13:20Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260701216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260701216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260701216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260701216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 14,
    "original_line": 14,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260706613",
    "pull_request_review_id": 208409512,
    "id": 260706613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDcwNjYxMw==",
    "diff_hunk": "@@ -102,7 +105,7 @@ class CClientUIInterface\n     ADD_SIGNALS_DECL_WRAPPER(NotifyAlertChanged, void, );\n \n     /** A wallet has been loaded. */\n-    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::shared_ptr<CWallet> wallet);\n+    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::unique_ptr<interfaces::Wallet>& wallet);",
    "path": "src/ui_interface.h",
    "position": 24,
    "original_position": 24,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1e5f7a174c264cfe9e65a7206acc24f43d9255d7",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To make this bouncing around of unique pointers easier to follow (another commit could) move `std::string name = wallet->getWalletName();` all the way up in `WalletModel* WalletController::getOrCreateWallet`, and then add a comment that this is the last time it needs the unique pointer `std::unique_ptr<interfaces::Wallet> wallet`.\r\n\r\nAlternatively, but that's too much behavior change for this PR, we could use the wallet name (or some canonical identifier) for the signal.\r\n\r\ncc @promag ",
    "created_at": "2019-02-27T11:27:08Z",
    "updated_at": "2019-03-01T19:54:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260706613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260706613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260706613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/260706613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 108,
    "original_line": 108,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062410",
    "pull_request_review_id": 208909696,
    "id": 261062410,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTA2MjQxMA==",
    "diff_hunk": "@@ -8,9 +8,18 @@\n     'core_write.cpp': 'core_io.cpp',\n }\n \n+# Directories with header-based modules, where the assumption that .cpp files\n+# define functions and variables declared in corresponding .h files is\n+# incorrect.\n+HEADER_MODULE_PATHS = [",
    "path": "contrib/devtools/circular-dependencies.py",
    "position": 7,
    "original_position": 7,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1e5f7a174c264cfe9e65a7206acc24f43d9255d7",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260701216\r\n\r\nIn commit \"Remove use of uiInterface.LoadWallet in wallet code\" (1e5f7a174c264cfe9e65a7206acc24f43d9255d7)\r\n\r\n> nit: could be a separate commit\r\n\r\nMoved to 318f41fb2cae0a46b4e4be49156562b8ed640f0c.",
    "created_at": "2019-02-28T06:38:43Z",
    "updated_at": "2019-03-01T19:58:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062410",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062410"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062410"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 14,
    "original_line": 14,
    "side": "RIGHT",
    "in_reply_to_id": 260701216
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062488",
    "pull_request_review_id": 208909696,
    "id": 261062488,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTA2MjQ4OA==",
    "diff_hunk": "@@ -111,6 +112,10 @@ class Chain\n \n         //! Check if transaction will be final given chain height current time.\n         virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool if the transaction fee is below the\n+        //! specified amount (as a safeguard). */",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 23,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "8f24a2664899bc268e039500b2e9ff8eef84bbbb",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260696227\r\n\r\n> Nit: \"below the amount specified by absurd_fee\"\r\n\r\nThanks, fixed.",
    "created_at": "2019-02-28T06:39:08Z",
    "updated_at": "2019-03-01T19:58:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062488",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062488"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062488"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 260696227
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062566",
    "pull_request_review_id": 208909696,
    "id": 261062566,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTA2MjU2Ng==",
    "diff_hunk": "@@ -102,7 +105,7 @@ class CClientUIInterface\n     ADD_SIGNALS_DECL_WRAPPER(NotifyAlertChanged, void, );\n \n     /** A wallet has been loaded. */\n-    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::shared_ptr<CWallet> wallet);\n+    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::unique_ptr<interfaces::Wallet>& wallet);",
    "path": "src/ui_interface.h",
    "position": 24,
    "original_position": 24,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1e5f7a174c264cfe9e65a7206acc24f43d9255d7",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260706613\r\n\r\nIn commit \"Remove use of uiInterface.LoadWallet in wallet code\" (1e5f7a174c264cfe9e65a7206acc24f43d9255d7)\r\n\r\n> To make this bouncing around of unique pointers easier to follow (another commit could) move `std::string name = wallet->getWalletName();` all the way up in `WalletModel* WalletController::getOrCreateWallet`, and then add a comment that this is the last time it needs the unique pointer `std::unique_ptr<interfaces::Wallet> wallet`.\r\n\r\nIt shouldn't matter for this PR, but I don't think I understand the suggestion, specifically where you would move the `getWalletName` call.\r\n\r\nI think one thing that might make this code more understandable would be to stop using a boost signal (just replacing the signal with `std::list<LoadWalletFn>` or similar).",
    "created_at": "2019-02-28T06:39:37Z",
    "updated_at": "2019-03-01T19:58:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062566",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062566"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062566"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 108,
    "original_line": 108,
    "side": "RIGHT",
    "in_reply_to_id": 260706613
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062589",
    "pull_request_review_id": 208909696,
    "id": 261062589,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTA2MjU4OQ==",
    "diff_hunk": "@@ -111,7 +111,7 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n     }\n \n     // Calculate the expected size of the new transaction.\n-    int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n+    int64_t txSize = wallet->chain().getVirtualTransactionSize(*(wtx.tx));",
    "path": "src/wallet/feebumper.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "428e6c422c21f35ff991823697a373dfa5cb4e4f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260675286\r\n\r\nIn commit \"Remove uses of GetVirtualTransactionSize in wallet code\" (428e6c422c21f35ff991823697a373dfa5cb4e4f)\r\n\r\n> There should be no need to communicate with the node for pure utility functions like this, but we can worry about that later. Maybe we need a `Utility` interface? Or `CTransaction` should just have a `->VirtualSize()` method.\r\n\r\nGood catch, dropped this commit. I originally wrapped `GetVirtualTransactionSize` because the `hide-globals.py` script from #10244 detected it that relies on the `nBytesPerSigOp` global. But actually the global value doesn't have any effect in the wallet call, so it's fine to make the call from anywhere.\r\n\r\nIn the future, it might be good to get rid of the `PendingWalletTx::getVirtualSize` method, too, since it's also unnecessary:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f9dbb319d26f41c2b0b56982a79639844ddf1e9d/src/interfaces/wallet.h#L295-L296",
    "created_at": "2019-02-28T06:39:44Z",
    "updated_at": "2019-03-01T19:58:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062589",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062589"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062589"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 114,
    "side": "RIGHT",
    "in_reply_to_id": 260675286
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062613",
    "pull_request_review_id": 208909696,
    "id": 261062613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTA2MjYxMw==",
    "diff_hunk": "@@ -3411,7 +3411,7 @@ UniValue generate(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No coinbase script available\");\n     }\n \n-    return generateBlocks(coinbase_script, num_generate, max_tries, true);\n+    return pwallet->chain().generateBlocks(coinbase_script, num_generate, max_tries, true);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "6f836c04d13bd49bcddff570c73820777a56f419",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260655451\r\n\r\nIn commit \"Remove use of generateBlocks in wallet code\" (6f836c04d13bd49bcddff570c73820777a56f419)\r\n\r\nDropped this commit as suggested to avoid unnecessary conflicts with #15492.\r\n\r\n> This causes RPC code to get entangled with pure wallet code, which adds a dependency on UniValue for the wallet and causes the need to change Makefile.\r\n\r\nThis isn't really accurate. This is just the first commit in a PR adding more server code to chain.cpp. The server code is what needs univalue, and without this commit the same makefile changes are still needed.",
    "created_at": "2019-02-28T06:39:53Z",
    "updated_at": "2019-03-01T19:58:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261062613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261062613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3414,
    "side": "RIGHT",
    "in_reply_to_id": 260655451
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261063266",
    "pull_request_review_id": 208909696,
    "id": 261063266,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTA2MzI2Ng==",
    "diff_hunk": "@@ -1899,12 +1899,8 @@ bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CC\n         /* GetDepthInMainChain already catches known conflicts. */\n         if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n             pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());",
    "path": "src/wallet/wallet.cpp",
    "position": 36,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1835020e98259568e5e754a7930eb7e0995c7b34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r260700480\r\n\r\n> I'm fine with moving the log message down, or adding a TODO, or just ignoring this.\r\n\r\nI'm happy to go with whatever you and John want to see here. Since you're ok with the status quo, I'm going to stick with this, since it follows the last suggestion from John.",
    "created_at": "2019-02-28T06:42:59Z",
    "updated_at": "2019-03-01T19:58:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261063266",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261063266"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261063266"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261063266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1902,
    "original_line": 1902,
    "side": "RIGHT",
    "in_reply_to_id": 260700480
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261835599",
    "pull_request_review_id": 209877088,
    "id": 261835599,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzNTU5OQ==",
    "diff_hunk": "@@ -1899,12 +1899,8 @@ bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain, CC\n         /* GetDepthInMainChain already catches known conflicts. */\n         if (InMempool() || AcceptToMemoryPool(locked_chain, maxTxFee, state)) {\n             pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());",
    "path": "src/wallet/wallet.cpp",
    "position": 36,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1835020e98259568e5e754a7930eb7e0995c7b34",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Leave it. Tidy ups can come in a later PR.",
    "created_at": "2019-03-02T17:56:34Z",
    "updated_at": "2019-03-02T17:56:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261835599",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261835599"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261835599"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261835599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1902,
    "original_line": 1902,
    "side": "RIGHT",
    "in_reply_to_id": 260700480
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261880757",
    "pull_request_review_id": 209924602,
    "id": 261880757,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg4MDc1Nw==",
    "diff_hunk": "@@ -258,6 +259,7 @@ class ChainImpl : public Chain\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }",
    "path": "src/interfaces/chain.cpp",
    "position": 96,
    "original_position": 12,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "76401da3a0cdcf07f6b1e6128647afe941e55e48",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for the explanation.\r\n\r\n> the `initMessage`, `initWarning`, `initError`, and `loadWallet` methods will likely move to a new interface\r\n\r\nI though it could be `interfaces::Wallet`, the `CreateWalletFromFile` caller would get the wallet interface asap, then request the loading etc and then signal the loading for everyone else.",
    "created_at": "2019-03-03T18:45:27Z",
    "updated_at": "2019-03-03T18:45:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261880757",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261880757"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261880757"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261880757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 256,
    "original_line": 256,
    "side": "RIGHT",
    "in_reply_to_id": 252455116
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261881121",
    "pull_request_review_id": 209924937,
    "id": 261881121,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg4MTEyMQ==",
    "diff_hunk": "@@ -102,7 +105,7 @@ class CClientUIInterface\n     ADD_SIGNALS_DECL_WRAPPER(NotifyAlertChanged, void, );\n \n     /** A wallet has been loaded. */\n-    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::shared_ptr<CWallet> wallet);\n+    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::unique_ptr<interfaces::Wallet>& wallet);",
    "path": "src/ui_interface.h",
    "position": 24,
    "original_position": 24,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1e5f7a174c264cfe9e65a7206acc24f43d9255d7",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this is fine.",
    "created_at": "2019-03-03T18:54:53Z",
    "updated_at": "2019-03-03T18:54:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261881121",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261881121"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r261881121"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261881121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 108,
    "original_line": 108,
    "side": "RIGHT",
    "in_reply_to_id": 260706613
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262141149",
    "pull_request_review_id": 210241864,
    "id": 262141149,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE0MTE0OQ==",
    "diff_hunk": "@@ -5,7 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n-#include <optional.h>\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState",
    "path": "src/interfaces/chain.h",
    "position": 6,
    "original_position": 6,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "bdc6628683197945326cbdfea3f53ec0b7d1949f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit bdc6628683\r\n\r\nCan this be done as a forward decl?",
    "created_at": "2019-03-04T16:34:56Z",
    "updated_at": "2019-03-04T18:13:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262141149",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262141149"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262141149"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262141149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 9,
    "original_line": 9,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262142373",
    "pull_request_review_id": 210241864,
    "id": 262142373,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE0MjM3Mw==",
    "diff_hunk": "@@ -190,6 +190,12 @@ class ChainImpl : public Chain\n         LOCK(::mempool.cs);\n         return IsRBFOptIn(tx, ::mempool);\n     }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;",
    "path": "src/interfaces/chain.cpp",
    "position": 51,
    "original_position": 8,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "291276f7f40df9fcd62e54c016953705bf0ed04a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 291276f7f4:\r\n\r\nCould use `CTxMemPool::GetIter` to avoid the direct access to mapTx (which should ideally be private to the mempool)",
    "created_at": "2019-03-04T16:37:40Z",
    "updated_at": "2019-03-04T18:13:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262142373",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262142373"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262142373"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262142373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 197,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262145565",
    "pull_request_review_id": 210241864,
    "id": 262145565,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE0NTU2NQ==",
    "diff_hunk": "@@ -4528,7 +4528,7 @@ std::vector<OutputGroup> CWallet::GroupOutputs(const std::vector<COutput>& outpu\n             CInputCoin input_coin = output.GetInputCoin();\n \n             size_t ancestors, descendants;\n-            mempool.GetTransactionAncestry(output.tx->GetHash(), ancestors, descendants);\n+            chain().getTransactionAncestry(output.tx->GetHash(), ancestors, descendants);",
    "path": "src/wallet/wallet.cpp",
    "position": 455,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "cd32160af0528cc746968ee0eadf4f63c98665f2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit cd32160af0528cc746:\r\n\r\nI didn't check if this needs a broader mempool (or main) lock (maybe for this whole function, since the mempool can remove/expire entries at will), but you are not changing this in your refactoring. So probably orthogonal to your changes. Still, I wanted to leave the comment.",
    "created_at": "2019-03-04T16:44:51Z",
    "updated_at": "2019-03-04T18:13:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262145565",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262145565"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262145565"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262145565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4518,
    "original_line": 4531,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262147319",
    "pull_request_review_id": 210241864,
    "id": 262147319,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE0NzMxOQ==",
    "diff_hunk": "@@ -200,6 +200,20 @@ class ChainImpl : public Chain\n     {\n         ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n     }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries ancestors;\n+        auto limit_ancestor_count = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);",
    "path": "src/interfaces/chain.cpp",
    "position": 67,
    "original_position": 9,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1fb0a4a04e9cda19ed5ad04694a39c83c91b6072",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit cd32160af0528cc746:\r\n\r\nAny reason to rename the variables `(set)ancestors` and types `(int)->(auto)`? Breaks `--color-moved=dimmed-zebra` and makes review harder",
    "created_at": "2019-03-04T16:49:00Z",
    "updated_at": "2019-03-04T18:13:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262147319",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262147319"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262147319"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262147319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 227,
    "original_line": 208,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262177802",
    "pull_request_review_id": 210241864,
    "id": 262177802,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE3NzgwMg==",
    "diff_hunk": "@@ -109,6 +110,10 @@ class Chain\n \n         //! Check if transaction will be final given chain height current time.\n         virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool if the transaction fee is below the\n+        //! amount specified by absurd_fee (as a safeguard). */\n+        virtual bool submitToMemoryPool(CTransactionRef tx, CAmount absurd_fee, CValidationState& state) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 39,
    "original_position": 24,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "d02b34c8a8bd446c9620fe626b4379617f9a9639",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit d02b34c8a8bd446c9620fe626b4379617f9a9639:\r\n\r\nCould take a const ref to `CTransactionRef` to avoid incrementing the shared ptr counter?",
    "created_at": "2019-03-04T18:07:16Z",
    "updated_at": "2019-03-04T18:13:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262177802",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262177802"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262177802"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262177802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 118,
    "original_line": 116,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262178929",
    "pull_request_review_id": 210241864,
    "id": 262178929,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE3ODkyOQ==",
    "diff_hunk": "@@ -109,6 +110,10 @@ class Chain\n \n         //! Check if transaction will be final given chain height current time.\n         virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool if the transaction fee is below the\n+        //! amount specified by absurd_fee (as a safeguard). */",
    "path": "src/interfaces/chain.h",
    "position": 38,
    "original_position": 23,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "d02b34c8a8bd446c9620fe626b4379617f9a9639",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit d02b34c8a8bd446c9620fe626b437:\r\n\r\nThe `absurd_fee` is only one case this could return false, but should never happen. There might be other cases such as descendant limits?",
    "created_at": "2019-03-04T18:10:22Z",
    "updated_at": "2019-03-04T18:13:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262178929",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262178929"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262178929"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262178929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 115,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184574",
    "pull_request_review_id": 210295797,
    "id": 262184574,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE4NDU3NA==",
    "diff_hunk": "@@ -190,6 +190,12 @@ class ChainImpl : public Chain\n         LOCK(::mempool.cs);\n         return IsRBFOptIn(tx, ::mempool);\n     }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;",
    "path": "src/interfaces/chain.cpp",
    "position": 51,
    "original_position": 8,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "291276f7f40df9fcd62e54c016953705bf0ed04a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262142373\r\n\r\n> Could use CTxMemPool::GetIter to avoid the direct access to mapTx (which should ideally be private to the mempool)\r\n\r\nDone in #15531",
    "created_at": "2019-03-04T18:25:34Z",
    "updated_at": "2019-03-04T21:37:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184574",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184574"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184574"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 262142373
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184637",
    "pull_request_review_id": 210295797,
    "id": 262184637,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE4NDYzNw==",
    "diff_hunk": "@@ -200,6 +200,20 @@ class ChainImpl : public Chain\n     {\n         ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n     }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries ancestors;\n+        auto limit_ancestor_count = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);",
    "path": "src/interfaces/chain.cpp",
    "position": 67,
    "original_position": 9,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "1fb0a4a04e9cda19ed5ad04694a39c83c91b6072",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262147319\r\n\r\n> Any reason to rename the variables (set)ancestors and types (int)->(auto)? Breaks --color-moved=dimmed-zebra and makes review harder\r\n\r\nIIRC, John asked for variable renames, and I used auto to avoid signed/unsigned conversion errors reported by practicalswift.",
    "created_at": "2019-03-04T18:25:43Z",
    "updated_at": "2019-03-04T21:37:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184637",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184637"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184637"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 227,
    "original_line": 208,
    "side": "RIGHT",
    "in_reply_to_id": 262147319
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184675",
    "pull_request_review_id": 210295797,
    "id": 262184675,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE4NDY3NQ==",
    "diff_hunk": "@@ -5,7 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n-#include <optional.h>\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState",
    "path": "src/interfaces/chain.h",
    "position": 6,
    "original_position": 6,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "bdc6628683197945326cbdfea3f53ec0b7d1949f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262141149\r\n\r\n> Can this be done as a forward decl?\r\n\r\nDone in #15531",
    "created_at": "2019-03-04T18:25:49Z",
    "updated_at": "2019-03-04T21:37:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184675",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184675"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184675"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 9,
    "original_line": 9,
    "side": "RIGHT",
    "in_reply_to_id": 262141149
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184694",
    "pull_request_review_id": 210295797,
    "id": 262184694,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE4NDY5NA==",
    "diff_hunk": "@@ -109,6 +110,10 @@ class Chain\n \n         //! Check if transaction will be final given chain height current time.\n         virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool if the transaction fee is below the\n+        //! amount specified by absurd_fee (as a safeguard). */",
    "path": "src/interfaces/chain.h",
    "position": 38,
    "original_position": 23,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "d02b34c8a8bd446c9620fe626b4379617f9a9639",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262178929\r\n\r\n> The absurd_fee is only one case this could return false, but should never happen. There might be other cases such as descendant limits?\r\n\r\nUpdated comment in #15531",
    "created_at": "2019-03-04T18:25:54Z",
    "updated_at": "2019-03-04T21:37:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184694",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184694"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184694"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 115,
    "side": "RIGHT",
    "in_reply_to_id": 262178929
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184731",
    "pull_request_review_id": 210295797,
    "id": 262184731,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE4NDczMQ==",
    "diff_hunk": "@@ -109,6 +110,10 @@ class Chain\n \n         //! Check if transaction will be final given chain height current time.\n         virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool if the transaction fee is below the\n+        //! amount specified by absurd_fee (as a safeguard). */\n+        virtual bool submitToMemoryPool(CTransactionRef tx, CAmount absurd_fee, CValidationState& state) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 39,
    "original_position": 24,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "d02b34c8a8bd446c9620fe626b4379617f9a9639",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262177802\r\n\r\n> Could take a const ref to CTransactionRef to avoid incrementing the shared ptr counter?\r\n\r\nDone in #15531",
    "created_at": "2019-03-04T18:25:59Z",
    "updated_at": "2019-03-04T21:37:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184731",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184731"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262184731"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262184731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 118,
    "original_line": 116,
    "side": "RIGHT",
    "in_reply_to_id": 262177802
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262185264",
    "pull_request_review_id": 210295797,
    "id": 262185264,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE4NTI2NA==",
    "diff_hunk": "@@ -4528,7 +4528,7 @@ std::vector<OutputGroup> CWallet::GroupOutputs(const std::vector<COutput>& outpu\n             CInputCoin input_coin = output.GetInputCoin();\n \n             size_t ancestors, descendants;\n-            mempool.GetTransactionAncestry(output.tx->GetHash(), ancestors, descendants);\n+            chain().getTransactionAncestry(output.tx->GetHash(), ancestors, descendants);",
    "path": "src/wallet/wallet.cpp",
    "position": 455,
    "original_position": 5,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "cd32160af0528cc746968ee0eadf4f63c98665f2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262145565\r\n\r\n> I didn't check if this needs a broader mempool (or main) lock (maybe for this whole function, since the mempool can remove/expire entries at will), but you are not changing this in your refactoring. So probably orthogonal to your changes. Still, I wanted to leave the comment\r\n\r\nThis is called from coin selection, so I'm guessing it's just a tradeoff between having to keep the mempool locked continuously and selected outputs being possibly out of date.\r\n\r\nI think ideally the wallet wouldn't have any ability to lock the mempool mutex for an extended period of time, so if there is a bug here, it would be better to resolve it by adding a batch TransactionAncestry lookup method, so the wallet could look up many transactions in a single call, but not be able to keep `mempool.cs` locked indefinitely over many calls.",
    "created_at": "2019-03-04T18:27:34Z",
    "updated_at": "2019-03-04T21:37:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262185264",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262185264"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262185264"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262185264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4518,
    "original_line": 4531,
    "side": "RIGHT",
    "in_reply_to_id": 262145565
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262191377",
    "pull_request_review_id": 210304308,
    "id": 262191377,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjE5MTM3Nw==",
    "diff_hunk": "@@ -5,7 +5,8 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n-#include <optional.h>\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState",
    "path": "src/interfaces/chain.h",
    "position": 6,
    "original_position": 6,
    "commit_id": "f7efd87c8fb49f82e268a95e989909d453500e2b",
    "original_commit_id": "bdc6628683197945326cbdfea3f53ec0b7d1949f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```diff\r\ndiff --git a/src/interfaces/chain.h b/src/interfaces/chain.h\r\nindex 60f8570e36..ef2b6607de 100644\r\n--- a/src/interfaces/chain.h\r\n+++ b/src/interfaces/chain.h\r\n@@ -6,7 +6,7 @@\r\n #define BITCOIN_INTERFACES_CHAIN_H\r\n \r\n #include <optional.h>               // For Optional and nullopt\r\n-#include <policy/rbf.h>             // For RBFTransactionState\r\n+enum class RBFTransactionState;\r\n #include <primitives/transaction.h> // For CTransactionRef\r\n \r\n #include <memory>\r\n@@ -16,6 +16,7 @@\r\n #include <vector>\r\n \r\n class CBlock;\r\n+class CFeeRate;\r\n class CScheduler;\r\n class CValidationState;\r\n class uint256;\r\n",
    "created_at": "2019-03-04T18:44:48Z",
    "updated_at": "2019-03-04T18:44:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262191377",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262191377"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15288#discussion_r262191377"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262191377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 9,
    "original_line": 9,
    "side": "RIGHT",
    "in_reply_to_id": 262141149
  }
]