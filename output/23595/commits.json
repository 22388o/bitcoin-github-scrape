[
  {
    "sha": "faec115887c4745b4059a6ca980ca1c6265e3140",
    "node_id": "C_kwDOABII59oAKGZhZWMxMTU4ODdjNDc0NWI0MDU5YTZjYTk4MGNhMWM2MjY1ZTMxNDA",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-09T18:51:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-25T15:16:14Z"
      },
      "message": "test: Add test for embedded null in hex string\n\nAlso, fix style in the corresponding function. The style change can be\nreviewed with \"--word-diff-regex=.\"",
      "tree": {
        "sha": "e96b3757f44e8cf2279a6860d9c958aa960f1669",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e96b3757f44e8cf2279a6860d9c958aa960f1669"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faec115887c4745b4059a6ca980ca1c6265e3140",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjt/AwAoBWFDlqbFvjhIWZ1g+QPxLp+wUf8ba/Wkf3oj0tEABA0mpOgcszIGYAZ\n/sguA4VyUZTNw49sPsSZ2W6RgxUwjxaI6ZRI82AeNNoyz6t+Dn/ijw+ZNB7AJDYq\n4G4tUDURk5erQ8jJZKJA7gK+d5BHQrEJQoWPN96NPGs89mV898aqA4c9FKK6c6Wn\n2kJP0C+O033V5V6GA6occqPEGTwhnKO3OtP6SHe880sL/jHjcJyewgOXp+osqDFn\nMUou/+8HuuFpuMQlKc9ynpHefO17GmbJhAYC0dCv72gxB4TbaSabwjduKfFES87h\nsNWVx1Be0f5/HV5fe4vziC6NoWt5CJPUXclaIb5bjrhV3TGsUcillztRcwlvYIBe\nb59ZBhBkqiu+AirKIgyiiDRIFjNtxP7ntvURA0IEh/icXwmJ0dizchZDXBScIa2o\nFYypTFNKSViZWKz01lfucxab4fUp38dYKwc5j+OlazpTVyYeqKd0hhmXtWiWxprF\n4xce00s8\n=ri3Y\n-----END PGP SIGNATURE-----",
        "payload": "tree e96b3757f44e8cf2279a6860d9c958aa960f1669\nparent 76392b042e98fcdb3b7ce3c2023003910326d14e\nauthor MarcoFalke <falke.marco@gmail.com> 1636483910 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637853374 +0100\n\ntest: Add test for embedded null in hex string\n\nAlso, fix style in the corresponding function. The style change can be\nreviewed with \"--word-diff-regex=.\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec115887c4745b4059a6ca980ca1c6265e3140",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faec115887c4745b4059a6ca980ca1c6265e3140",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec115887c4745b4059a6ca980ca1c6265e3140/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76392b042e98fcdb3b7ce3c2023003910326d14e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76392b042e98fcdb3b7ce3c2023003910326d14e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76392b042e98fcdb3b7ce3c2023003910326d14e"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 16,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6fb463856a69f5516740fb40e4f91613651ab3df",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec115887c4745b4059a6ca980ca1c6265e3140/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec115887c4745b4059a6ca980ca1c6265e3140/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=faec115887c4745b4059a6ca980ca1c6265e3140",
        "patch": "@@ -114,7 +114,7 @@ static const unsigned char ParseHex_expected[65] = {\n     0xde, 0x5c, 0x38, 0x4d, 0xf7, 0xba, 0x0b, 0x8d, 0x57, 0x8a, 0x4c, 0x70, 0x2b, 0x6b, 0xf1, 0x1d,\n     0x5f\n };\n-BOOST_AUTO_TEST_CASE(util_ParseHex)\n+BOOST_AUTO_TEST_CASE(parse_hex)\n {\n     std::vector<unsigned char> result;\n     std::vector<unsigned char> expected(ParseHex_expected, ParseHex_expected + sizeof(ParseHex_expected));\n@@ -130,6 +130,14 @@ BOOST_AUTO_TEST_CASE(util_ParseHex)\n     result = ParseHex(\" 89 34 56 78\");\n     BOOST_CHECK(result.size() == 4 && result[0] == 0x89 && result[1] == 0x34 && result[2] == 0x56 && result[3] == 0x78);\n \n+    // Embedded null is treated as end\n+    const std::string with_embedded_null{\" 11 \"s\n+                                         \" \\0 \"\n+                                         \" 22 \"s};\n+    BOOST_CHECK_EQUAL(with_embedded_null.size(), 11);\n+    result = ParseHex(with_embedded_null);\n+    BOOST_CHECK(result.size() == 1 && result[0] == 0x11);\n+\n     // Stop parsing at invalid value\n     result = ParseHex(\"1234 invalid 1234\");\n     BOOST_CHECK(result.size() == 2 && result[0] == 0x12 && result[1] == 0x34);"
      },
      {
        "sha": "64b4b84d397ead1be130e24f7ae1e60caa0c5897",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec115887c4745b4059a6ca980ca1c6265e3140/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec115887c4745b4059a6ca980ca1c6265e3140/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=faec115887c4745b4059a6ca980ca1c6265e3140",
        "patch": "@@ -83,19 +83,20 @@ bool IsHexNumber(const std::string& str)\n \n std::vector<unsigned char> ParseHex(const char* psz)\n {\n-    // convert hex dump to vector\n     std::vector<unsigned char> vch;\n-    while (true)\n-    {\n-        while (IsSpace(*psz))\n+    while (true) {\n+        while (IsSpace(*psz)) {\n             psz++;\n+        }\n         signed char c = HexDigit(*psz++);\n-        if (c == (signed char)-1)\n+        if (c == (signed char)-1) {\n             break;\n+        }\n         unsigned char n = (c << 4);\n         c = HexDigit(*psz++);\n-        if (c == (signed char)-1)\n+        if (c == (signed char)-1) {\n             break;\n+        }\n         n |= c;\n         vch.push_back(n);\n     }"
      }
    ]
  },
  {
    "sha": "fa5c48c575ae48e64fbb21beb38199024e4cc443",
    "node_id": "C_kwDOABII59oAKGZhNWM0OGM1NzVhZTQ4ZTY0ZmJiMjFiZWIzODE5OTAyNGU0Y2M0NDM",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-09T20:30:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-25T15:16:44Z"
      },
      "message": "refactor: Remove ParseHex(const char*) from public interface",
      "tree": {
        "sha": "6698437aec76aa6702205f8483de066d3d09c6c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6698437aec76aa6702205f8483de066d3d09c6c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5c48c575ae48e64fbb21beb38199024e4cc443",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgm2AwAkEcYQROageatovLYayS8q0TYDC/yqJ+20fRrwjK36h9aRJASHHg07UQc\nw0ZjZb+exc5IfUfgGf4sUMoPuCPBkLk5igG8YVTqdPJPxUQO1xjDV0ApLUbYuQhh\nAOk3vxUV8aOg48bvN4i0Y7ZLJykSE889SQhkN1dkZ4uT+bT5lUjqO6xWinADmNO0\nNHNviOiD/t+hnjLFs/7bE0Q2iy1liKKXMkIiN51P3SnMza8ey1Y7pXMZ4QUoClbk\nZVf2tkzUWiZykqlEllfkswsq5tuFCHAJsCsIis6arGdctw7QF7wo2td/5e9aWbW+\ndtD4JZQg1pVNkQGEeijy3zwsySfNkwt514lct7daDh4PtkgY8my46pXLqmdMVf84\nfbDgfCAPF39qTYHYFBBtYt9WhoW1Mfzr5sR5YED84Orj6uv95FyScqLOV+HOTZyn\ngJ/8gWw7HPBtA2yUcGLHXIoaWewzu82rcCLT3QjRijpe5V93Vey4E+vi0vEJyVME\nE7s2JLO/\n=s1i5\n-----END PGP SIGNATURE-----",
        "payload": "tree 6698437aec76aa6702205f8483de066d3d09c6c1\nparent faec115887c4745b4059a6ca980ca1c6265e3140\nauthor MarcoFalke <falke.marco@gmail.com> 1636489807 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637853404 +0100\n\nrefactor: Remove ParseHex(const char*) from public interface\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5c48c575ae48e64fbb21beb38199024e4cc443",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5c48c575ae48e64fbb21beb38199024e4cc443",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5c48c575ae48e64fbb21beb38199024e4cc443/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faec115887c4745b4059a6ca980ca1c6265e3140",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec115887c4745b4059a6ca980ca1c6265e3140",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faec115887c4745b4059a6ca980ca1c6265e3140"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 3,
      "deletions": 7
    },
    "files": [
      {
        "sha": "f5ada5a11894e76c9f676488eaeafb7eb5f40184",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5c48c575ae48e64fbb21beb38199024e4cc443/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5c48c575ae48e64fbb21beb38199024e4cc443/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=fa5c48c575ae48e64fbb21beb38199024e4cc443",
        "patch": "@@ -81,8 +81,9 @@ bool IsHexNumber(const std::string& str)\n     return (str.size() > starting_location);\n }\n \n-std::vector<unsigned char> ParseHex(const char* psz)\n+std::vector<unsigned char> ParseHex(const std::string& str)\n {\n+    const char* psz{str.c_str()};\n     std::vector<unsigned char> vch;\n     while (true) {\n         while (IsSpace(*psz)) {\n@@ -103,11 +104,6 @@ std::vector<unsigned char> ParseHex(const char* psz)\n     return vch;\n }\n \n-std::vector<unsigned char> ParseHex(const std::string& str)\n-{\n-    return ParseHex(str.c_str());\n-}\n-\n void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut)\n {\n     size_t colon = in.find_last_of(':');"
      },
      {
        "sha": "d2d1bf1451a15fc78180050286970f53c11d0fc3",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5c48c575ae48e64fbb21beb38199024e4cc443/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5c48c575ae48e64fbb21beb38199024e4cc443/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=fa5c48c575ae48e64fbb21beb38199024e4cc443",
        "patch": "@@ -54,7 +54,7 @@ enum class ByteUnit : uint64_t {\n * @return           A new string without unsafe chars\n */\n std::string SanitizeString(const std::string& str, int rule = SAFE_CHARS_DEFAULT);\n-std::vector<unsigned char> ParseHex(const char* psz);\n+/** Parse the hex string into bytes. Ignores whitespace. */\n std::vector<unsigned char> ParseHex(const std::string& str);\n signed char HexDigit(char c);\n /* Returns true if each character in str is a hex character, and has an even"
      }
    ]
  },
  {
    "sha": "fa73b1b0278663300550fffa44dc0cf8fb68e599",
    "node_id": "C_kwDOABII59oAKGZhNzNiMWIwMjc4NjYzMzAwNTUwZmZmYTQ0ZGMwY2Y4ZmI2OGU1OTk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-10T09:14:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-25T16:00:57Z"
      },
      "message": "util: Add ParseHex<std::byte>() helper",
      "tree": {
        "sha": "eee89f90525f88b9fe9e2ae82b9e0e907b632a8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eee89f90525f88b9fe9e2ae82b9e0e907b632a8b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa73b1b0278663300550fffa44dc0cf8fb68e599",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjqFgwAl1+ughuAlp2fEwTSDJnth8UcRw6eB6nNmeuC70AsFaKta+Y9MijyM/Sh\n5XI3BzQtkoCblKFi1Rj7HTf93LXBl6hJsZ5/uXnnPCfXAcXpqHEaotPoIFD/jd9U\n0xYb2Iyxi4CBk79CVuG0393JVvTPlcdiATBUeQctZ/8ftAk4MgENTHmlO0HNzO3l\ngJUvpzcuS6b+uajkDzFaTCbcgTTxSTflx4Xaj9sMnkvPxxvmDDLprPeR30+s3ykg\nmONY2bvc+XT205X20J4FF22OMKdRHm/JMZnr9mDu7VL+TFlQYOUlihbGUK7GPAq5\nW7vz9PYJhLP8C4mR7vxDkvSQ7PW2KYAF+s4LX+OmPH3ANsnBiBsYDs9MY7M2fI/t\nhRNjJfvWQLDnvP85FhXWuqNXzfI/9AUn2dfOJys3uMyfojNE1TTkb0F+haFL3HZO\n9zn3sOPTYyQC3b709kruS7G6G+FORmpUqlVNjBph4nBS7NS77wRgKJf6/DuDJ2MJ\nV/8cn94v\n=Fepb\n-----END PGP SIGNATURE-----",
        "payload": "tree eee89f90525f88b9fe9e2ae82b9e0e907b632a8b\nparent fa5c48c575ae48e64fbb21beb38199024e4cc443\nauthor MarcoFalke <falke.marco@gmail.com> 1636535642 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637856057 +0100\n\nutil: Add ParseHex<std::byte>() helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa73b1b0278663300550fffa44dc0cf8fb68e599",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa73b1b0278663300550fffa44dc0cf8fb68e599",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa73b1b0278663300550fffa44dc0cf8fb68e599/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa5c48c575ae48e64fbb21beb38199024e4cc443",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5c48c575ae48e64fbb21beb38199024e4cc443",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5c48c575ae48e64fbb21beb38199024e4cc443"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "39f8dc48ceb7072dd22ca79cc0ab9f0ac94fd490",
        "filename": "src/test/fuzz/hex.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa73b1b0278663300550fffa44dc0cf8fb68e599/src/test/fuzz/hex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa73b1b0278663300550fffa44dc0cf8fb68e599/src/test/fuzz/hex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/hex.cpp?ref=fa73b1b0278663300550fffa44dc0cf8fb68e599",
        "patch": "@@ -25,6 +25,8 @@ FUZZ_TARGET_INIT(hex, initialize_hex)\n {\n     const std::string random_hex_string(buffer.begin(), buffer.end());\n     const std::vector<unsigned char> data = ParseHex(random_hex_string);\n+    const std::vector<std::byte> bytes{ParseHex<std::byte>(random_hex_string)};\n+    assert(AsBytes(Span<const uint8_t>{data}) == Span<const std::byte>{bytes});\n     const std::string hex_data = HexStr(data);\n     if (IsHex(random_hex_string)) {\n         assert(ToLower(random_hex_string) == hex_data);"
      },
      {
        "sha": "32bfe05fe18b29dc923931d3174462bc2084063d",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa73b1b0278663300550fffa44dc0cf8fb68e599/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa73b1b0278663300550fffa44dc0cf8fb68e599/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=fa73b1b0278663300550fffa44dc0cf8fb68e599",
        "patch": "@@ -81,10 +81,11 @@ bool IsHexNumber(const std::string& str)\n     return (str.size() > starting_location);\n }\n \n-std::vector<unsigned char> ParseHex(const std::string& str)\n+template <typename Byte>\n+std::vector<Byte> ParseHex(const std::string& str)\n {\n     const char* psz{str.c_str()};\n-    std::vector<unsigned char> vch;\n+    std::vector<Byte> vch;\n     while (true) {\n         while (IsSpace(*psz)) {\n             psz++;\n@@ -99,10 +100,12 @@ std::vector<unsigned char> ParseHex(const std::string& str)\n             break;\n         }\n         n |= c;\n-        vch.push_back(n);\n+        vch.push_back(Byte{n});\n     }\n     return vch;\n }\n+template std::vector<std::byte> ParseHex(const std::string&);\n+template std::vector<uint8_t> ParseHex(const std::string&);\n \n void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut)\n {"
      },
      {
        "sha": "b77c32567a1cb0fa7f197490840cedb6b2f363a9",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa73b1b0278663300550fffa44dc0cf8fb68e599/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa73b1b0278663300550fffa44dc0cf8fb68e599/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=fa73b1b0278663300550fffa44dc0cf8fb68e599",
        "patch": "@@ -54,8 +54,9 @@ enum class ByteUnit : uint64_t {\n * @return           A new string without unsafe chars\n */\n std::string SanitizeString(const std::string& str, int rule = SAFE_CHARS_DEFAULT);\n-/** Parse the hex string into bytes. Ignores whitespace. */\n-std::vector<unsigned char> ParseHex(const std::string& str);\n+/** Parse the hex string into bytes (uint8_t or std::byte). Ignores whitespace. */\n+template <typename Byte = uint8_t>\n+std::vector<Byte> ParseHex(const std::string& str);\n signed char HexDigit(char c);\n /* Returns true if each character in str is a hex character, and has an even\n  * number of hex digits.*/"
      }
    ]
  },
  {
    "sha": "facdef44652f4aad4a9aabf869bcfef988e6fecc",
    "node_id": "C_kwDOABII59oAKGZhY2RlZjQ0NjUyZjRhYWQ0YTlhYWJmODY5YmNmZWY5ODhlNmZlY2M",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-08T13:02:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-25T16:02:06Z"
      },
      "message": "refactor: Use Span of std::byte in CExtKey::SetSeed",
      "tree": {
        "sha": "776bba75e4a1892fc17d9828505c62bbb9688db9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/776bba75e4a1892fc17d9828505c62bbb9688db9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/facdef44652f4aad4a9aabf869bcfef988e6fecc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgIlAwAkgYlXWp4NmgghpA7uDx0WosRPJ5zL+2M+ZkP5jyKPRXuo6a8ls6LRC2U\nDXZ5P29imXN5/VpcU/tffup3SBbPGjjlE+B081aW0QMpLpFjZcRxr6szKTo02tu4\nLGDwAdDVXYzNOPC9d+wtixAFFkjkhR0XxuKY4lqGUTl7sxtHll3mgOcpgyWlF++C\nE+0V8VyxfWXlygd+pwT3z7jjWQQrLGtDu4lGKmwbtu64sJyjMyNXlxPflZITGR3n\n30sXf8XN4aziHh9VFJ9ej6uq2UZB1TzGQRvTZljoCNwV/TSlKzvby2noEszI+2ty\nwBR0dUHQNglsQeks9+/k+DwOdUn8Zzju9COLlGoNLW3TbZrrhmEvw1pG70SmM18c\nAmJf1VR4JS8zLKwcLpSiLzCMTcwgkLWCGBaC2afATy0UMYxgkQwUVNl9d2b0nNPb\nve8jCZUBCU6UzCJB2svCjHE5MyXXK43VZhEvMFLnJUJNEjiYPvtQdBqwkYu+RXON\nDQ8QeZqG\n=Jd7A\n-----END PGP SIGNATURE-----",
        "payload": "tree 776bba75e4a1892fc17d9828505c62bbb9688db9\nparent fa73b1b0278663300550fffa44dc0cf8fb68e599\nauthor MarcoFalke <falke.marco@gmail.com> 1636376521 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637856126 +0100\n\nrefactor: Use Span of std::byte in CExtKey::SetSeed\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facdef44652f4aad4a9aabf869bcfef988e6fecc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/facdef44652f4aad4a9aabf869bcfef988e6fecc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facdef44652f4aad4a9aabf869bcfef988e6fecc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa73b1b0278663300550fffa44dc0cf8fb68e599",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa73b1b0278663300550fffa44dc0cf8fb68e599",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa73b1b0278663300550fffa44dc0cf8fb68e599"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "01e273745a0d41a90cf4f10c2579be44f148adfb",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=facdef44652f4aad4a9aabf869bcfef988e6fecc",
        "patch": "@@ -340,11 +340,11 @@ bool CExtKey::Derive(CExtKey &out, unsigned int _nChild) const {\n     return key.Derive(out.key, out.chaincode, _nChild, chaincode);\n }\n \n-void CExtKey::SetSeed(Span<const uint8_t> seed)\n+void CExtKey::SetSeed(Span<const std::byte> seed)\n {\n     static const unsigned char hashkey[] = {'B','i','t','c','o','i','n',' ','s','e','e','d'};\n     std::vector<unsigned char, secure_allocator<unsigned char>> vout(64);\n-    CHMAC_SHA512{hashkey, sizeof(hashkey)}.Write(seed.data(), seed.size()).Finalize(vout.data());\n+    CHMAC_SHA512{hashkey, sizeof(hashkey)}.Write(UCharCast(seed.data()), seed.size()).Finalize(vout.data());\n     key.Set(vout.data(), vout.data() + 32, true);\n     memcpy(chaincode.begin(), vout.data() + 32, 32);\n     nDepth = 0;"
      },
      {
        "sha": "652cd6845380892a7953887c69eb68befbe93ea1",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=facdef44652f4aad4a9aabf869bcfef988e6fecc",
        "patch": "@@ -85,7 +85,7 @@ class CKey\n \n     //! Simple read-only vector-like interface.\n     unsigned int size() const { return (fValid ? keydata.size() : 0); }\n-    const unsigned char* data() const { return keydata.data(); }\n+    const std::byte* data() const { return reinterpret_cast<const std::byte*>(keydata.data()); }\n     const unsigned char* begin() const { return keydata.data(); }\n     const unsigned char* end() const { return keydata.data() + size(); }\n \n@@ -178,7 +178,7 @@ struct CExtKey {\n     void Decode(const unsigned char code[BIP32_EXTKEY_SIZE]);\n     bool Derive(CExtKey& out, unsigned int nChild) const;\n     CExtPubKey Neuter() const;\n-    void SetSeed(Span<const uint8_t> seed);\n+    void SetSeed(Span<const std::byte> seed);\n };\n \n /** Initialize the elliptic curve support. May not be called twice without calling ECC_Stop first. */"
      },
      {
        "sha": "64cc9242392daa27010078891a4e7afb1bec14ef",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=facdef44652f4aad4a9aabf869bcfef988e6fecc",
        "patch": "@@ -120,8 +120,9 @@ const std::vector<std::string> TEST5 = {\n     \"xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHL\"\n };\n \n-void RunTest(const TestVector &test) {\n-    std::vector<unsigned char> seed = ParseHex(test.strHexMaster);\n+void RunTest(const TestVector& test)\n+{\n+    std::vector<std::byte> seed{ParseHex<std::byte>(test.strHexMaster)};\n     CExtKey key;\n     CExtPubKey pubkey;\n     key.SetSeed(seed);"
      },
      {
        "sha": "717f2b13e0ded54ed22e4f8b906c84f039c3226e",
        "filename": "src/test/key_io_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/test/key_io_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facdef44652f4aad4a9aabf869bcfef988e6fecc/src/test/key_io_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_io_tests.cpp?ref=facdef44652f4aad4a9aabf869bcfef988e6fecc",
        "patch": "@@ -35,7 +35,7 @@ BOOST_AUTO_TEST_CASE(key_io_valid_parse)\n             continue;\n         }\n         std::string exp_base58string = test[0].get_str();\n-        std::vector<unsigned char> exp_payload = ParseHex(test[1].get_str());\n+        const std::vector<std::byte> exp_payload{ParseHex<std::byte>(test[1].get_str())};\n         const UniValue &metadata = test[2].get_obj();\n         bool isPrivkey = find_value(metadata, \"isPrivkey\").get_bool();\n         SelectParams(find_value(metadata, \"chain\").get_str());\n@@ -46,7 +46,7 @@ BOOST_AUTO_TEST_CASE(key_io_valid_parse)\n             privkey = DecodeSecret(exp_base58string);\n             BOOST_CHECK_MESSAGE(privkey.IsValid(), \"!IsValid:\" + strTest);\n             BOOST_CHECK_MESSAGE(privkey.IsCompressed() == isCompressed, \"compressed mismatch:\" + strTest);\n-            BOOST_CHECK_MESSAGE(Span<const uint8_t>{privkey} == Span<const uint8_t>{exp_payload}, \"key mismatch:\" + strTest);\n+            BOOST_CHECK_MESSAGE(Span<const std::byte>{privkey} == Span<const std::byte>{exp_payload}, \"key mismatch:\" + strTest);\n \n             // Private key must be invalid public key\n             destination = DecodeDestination(exp_base58string);"
      }
    ]
  }
]