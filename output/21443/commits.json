[
  {
    "sha": "7c8c140ecc95ab2ac90e20951416886c9ac5fa93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzhjMTQwZWNjOTVhYjJhYzkwZTIwOTUxNDE2ODg2YzlhYzVmYTkz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-03-15T15:20:03Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-03-15T15:27:25Z"
      },
      "message": "fuzz: Implement fuzzed_dns_lookup_function as lambda",
      "tree": {
        "sha": "cd724e164587ac209f471bfe4def24bd6d048ed3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd724e164587ac209f471bfe4def24bd6d048ed3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c8c140ecc95ab2ac90e20951416886c9ac5fa93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c8c140ecc95ab2ac90e20951416886c9ac5fa93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8c140ecc95ab2ac90e20951416886c9ac5fa93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c8c140ecc95ab2ac90e20951416886c9ac5fa93/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eceb3f7707d6793152a00476adae1c4e268ce6f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eceb3f7707d6793152a00476adae1c4e268ce6f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eceb3f7707d6793152a00476adae1c4e268ce6f3"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 9,
      "deletions": 15
    },
    "files": [
      {
        "sha": "7be8b137435a77bebe603473915cc2c339e1c9cb",
        "filename": "src/test/fuzz/netbase_dns_lookup.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 15,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c8c140ecc95ab2ac90e20951416886c9ac5fa93/src/test/fuzz/netbase_dns_lookup.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c8c140ecc95ab2ac90e20951416886c9ac5fa93/src/test/fuzz/netbase_dns_lookup.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/netbase_dns_lookup.cpp?ref=7c8c140ecc95ab2ac90e20951416886c9ac5fa93",
        "patch": "@@ -12,27 +12,22 @@\n #include <string>\n #include <vector>\n \n-namespace {\n-FuzzedDataProvider* fuzzed_data_provider_ptr = nullptr;\n-\n-std::vector<CNetAddr> fuzzed_dns_lookup_function(const std::string& name, bool allow_lookup)\n-{\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (fuzzed_data_provider_ptr->ConsumeBool()) {\n-        resolved_addresses.push_back(ConsumeNetAddr(*fuzzed_data_provider_ptr));\n-    }\n-    return resolved_addresses;\n-}\n-} // namespace\n-\n FUZZ_TARGET(netbase_dns_lookup)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n-    fuzzed_data_provider_ptr = &fuzzed_data_provider;\n     const std::string name = fuzzed_data_provider.ConsumeRandomLengthString(512);\n     const unsigned int max_results = fuzzed_data_provider.ConsumeIntegral<unsigned int>();\n     const bool allow_lookup = fuzzed_data_provider.ConsumeBool();\n     const int default_port = fuzzed_data_provider.ConsumeIntegral<int>();\n+\n+    auto fuzzed_dns_lookup_function = [&](const std::string&, bool) {\n+        std::vector<CNetAddr> resolved_addresses;\n+        while (fuzzed_data_provider.ConsumeBool()) {\n+            resolved_addresses.push_back(ConsumeNetAddr(fuzzed_data_provider));\n+        }\n+        return resolved_addresses;\n+    };\n+\n     {\n         std::vector<CNetAddr> resolved_addresses;\n         if (LookupHost(name, resolved_addresses, max_results, allow_lookup, fuzzed_dns_lookup_function)) {\n@@ -73,5 +68,4 @@ FUZZ_TARGET(netbase_dns_lookup)\n             assert(resolved_subnet.IsValid());\n         }\n     }\n-    fuzzed_data_provider_ptr = nullptr;\n }"
      }
    ]
  }
]