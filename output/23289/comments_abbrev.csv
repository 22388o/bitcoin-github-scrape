practicalswift,2021-10-17 19:30:35,"Strong Concept ACK\n\nFunctional testing, unit testing, fuzz testing and now stress testing: great to see!\n\nFault injection testing and mutation testing next in line? :)",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-945181371,945181371,
dongcarl,2021-10-19 16:30:39,"Code Review ACK 71ba24a724556af02901d2aa06a71d24e18f6f3c\n\nThis is great, and is very helpful for testing initialization! Thank you James!\n\n<details>\n <summary>Naive idea</summary>\n Since GDB has a Python API, perhaps someone can use that for more granular stress testing (shouldn't be in this PR since it seems like quite a large undertaking)\n</details>",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-946896373,946896373,
mzumsande,2021-10-19 21:48:40,"Concept ACK, very cool idea.\n\nI also encountered the intermittent `Error: txindex best block of the index goes beyond pruned data` once while running the new test yesterday - what is the best way to proceed? Should that issue be analysed/fixed before merging this?",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947131763,947131763,
jamesob,2021-10-20 14:26:30,"> I also encountered the intermittent Error: txindex best block of the index goes beyond pruned data once while running the new test yesterday - what is the best way to proceed? Should that issue be analysed/fixed before merging this?\n\nOn the one hand, holding off on merging test coverage because there may be a bug in master seems wrong. On the other hand, spurious test failures in CI for a ha",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947721502,947721502,
MarcoFalke,2021-10-20 14:28:49,"If txindex is causing issues here, maybe submit it in a follow-up pull request?",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947723762,947723762,
mzumsande,2021-10-20 17:37:04,"> For context and neither here nor there: this bug seems pretty minor - under very particular circumstances (SIGTERM during just the right init point) it may cause a user to have to reindex. But that said, we should certainly have a better understanding of why it's happening.\n\nI see different things locally: For me, the failure happens in roughly 1-2% of the runs in the `will exit after line '",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947890550,947890550,
fanquake,2021-10-21 01:53:03,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-948184596,948184596,
DrahtBot,2021-10-26 06:02:57,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull r",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-951589284,951589284,
jamesob,2021-10-26 19:06:03,"Okay, I've addressed a bunch of feedback and disabled txindex for the time being. I think this is a good first pass on this test provided all the non-deterministic failures have been removed. @mzumsande/@dongcarl if you'd like to PR the indexing change and fix you're welcome to, otherwise I can take care of it shortly.",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-952228571,952228571,
mzumsande,2021-10-26 22:07:04,"> Okay, I've addressed a bunch of feedback and disabled txindex for the time being. I think this is a good first pass on this test provided all the non-deterministic failures have been removed. @mzumsande/@dongcarl if you'd like to PR the indexing change and fix you're welcome to, otherwise I can take care of it shortly.\n\nI opened #23365 to fix the intermittent issue.",https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-952364073,952364073,
laanwj,2021-11-10 12:28:10,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-965084690,965084690,
jamesob,2021-11-16 16:51:53,Anything left here? I think as things stand this is a stable test that adds some good coverage. AFAIK there's no outstanding feedback aside from a few nits and marginal suggestions.,https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-970465173,970465173,
laanwj,2021-11-30 19:49:50,Code review ACK d9803f7a0a33688f7429cf10384244f4770851ca,https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-982965388,982965388,
brunoerg,2021-10-16 21:00:56,"`if line and bail_line.lower() in line.lower()` and `(time.time() - start) > MAX_SECS_TO_WAIT` sigterm_node() will be called twice, is this the intention? ",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730313233,730313233,test/functional/stress_init.py
MarcoFalke,2021-10-17 10:19:26,"I think this would be called `feature_init`, no?",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730390464,730390464,test/functional/test_runner.py
lsilva01,2021-10-18 05:27:49,"I think it won't happen, as there is a `break` after these conditions.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730579472,730579472,test/functional/stress_init.py
jamesob,2021-10-18 16:11:30,"Yep sure, will change.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731096739,731096739,test/functional/test_runner.py
brunoerg,2021-10-18 17:44:09,True! Thanks! missed that break,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731168310,731168310,test/functional/stress_init.py
MarcoFalke,2021-10-20 09:01:41,2017 was 5 years ago,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732561699,732561699,test/functional/feature_init.py
MarcoFalke,2021-10-20 09:12:09,Why not return a Path here when the function is called ..._path?,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732570270,732570270,test/functional/test_framework/test_node.py
MarcoFalke,2021-10-20 09:15:08,is this needed? `wait_for_rpc_connection` should already do that by waiting for the mempool to be loaded.,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732572743,732572743,test/functional/feature_init.py
MarcoFalke,2021-10-20 09:18:45,Shouldn't this be an assertion error?,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732575759,732575759,test/functional/feature_init.py
MarcoFalke,2021-10-20 09:24:30,"Haven't tried this, but what happens when you use:\n\n```py\ntarget_file = node.chain_path.glob(file_patt)[0]",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732580386,732580386,test/functional/feature_init.py
jamesob,2021-10-20 13:00:07,"So I actually made this change last night... but the problem is that this is actually hit pretty routinely (about every third run) on master (but oddly not on @dongcarl's #23280?). Each time I manually checked the debug.log and saw the `loadblk thread started` line, so I'm not sure how the Python code would be missing that as-written. I'll investigate a bit because I agree, an assertion here would",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732750839,732750839,test/functional/feature_init.py
jamesob,2021-10-20 13:40:24,"Yeah, because I think it's important to explicitly verify that the number of blocks that the setup dictated (200) are present. This is to check for the case where, for example, the block index somehow gets screwed up and fewer blocks are loaded than the original count, despite having loaded the mempool successfully. But am I missing some reason this isn't necessary?",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732788935,732788935,test/functional/feature_init.py
MarcoFalke,2021-10-20 13:43:11,Wouldn't an assert_equal be a better choice then?,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732791744,732791744,test/functional/feature_init.py
jamesob,2021-10-20 13:45:42,"Works, but had to add a `list(...)` and `str(file_patt)`. Still probably better than what I had.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732794397,732794397,test/functional/feature_init.py
jamesob,2021-10-20 14:09:47,"Oh, what, to avoid a timeout? I guess that makes sense.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732818942,732818942,test/functional/feature_init.py
MarcoFalke,2021-10-20 14:11:07,What is the point of `str(Path(str()))`? Just use str?,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732820513,732820513,test/functional/feature_init.py
jamesob,2021-10-20 14:22:23,"Okay I don't understand what you're saying anymore so if you want me to change it, suggest a patch.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732832006,732832006,test/functional/feature_init.py
MarcoFalke,2021-10-20 14:24:09,"```suggestion\n            'blocks/index/*.ldb': 'Error opening block database.',\n            'chainstate/*.ldb': 'Error opening block database.',\n            'blocks/blk*.dat': 'Error loading block database.',\n        }\n\n        for file_patt, err_fragment in files_to_disturb.items():\n            target_file = list(node.chain_path.glob(file_patt))[0]\n```",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732833879,732833879,test/functional/feature_init.py
jamesob,2021-10-20 14:29:30,"Done, thanks.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732839745,732839745,test/functional/feature_init.py
MarcoFalke,2021-10-20 15:22:08,Can you explain why `str()` is needed here? It should be possible to open a Path in python,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732893288,732893288,test/functional/test_framework/test_node.py
jamesob,2021-10-20 15:26:29,"Weird, thought I'd started off by doing that and then had to add `str`. Fixed.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732897381,732897381,test/functional/test_framework/test_node.py
jonatack,2021-10-20 15:39:05,"nit, the file name could go out of date without being noticed\n```suggestion\n""""""Stress tests related to node initialization.""""""\n```",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732909184,732909184,test/functional/feature_init.py
jonatack,2021-10-20 15:40:11,"sort\n```diff\n-import time\n-import random\n import os\n from pathlib import Path\n+import random\n+import time\n```\n",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732910239,732910239,test/functional/feature_init.py
jonatack,2021-10-20 15:45:16,"This would be simpler, I think.\n```suggestion\n            assert_equal(200, node.getblockcount())\n```",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732914870,732914870,test/functional/feature_init.py
jonatack,2021-10-20 15:48:18,"maybe better to snakecase this localvar throughout, as the variable name is reused with a different value in a different scope below\n```suggestion\n            max_seconds_to_wait = 30\n```",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732917765,732917765,test/functional/feature_init.py
jonatack,2021-10-20 15:56:31,"It would be nice to be able to omit this, as it renders the `debug` log level difficult to follow.\n\nSome other logging suggestions to clean up the output:\n```diff\n         for bail_line in lines_to_bail_after:\n-            self.log.info(f""Starting node and will exit after line '{bail_line}'"")\n+            self.log.debug(f""Starting node and will exit after line '{bail_line}'"")\n       ",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732925146,732925146,test/functional/feature_init.py
jonatack,2021-10-20 15:58:23,"nit, sort\n```diff\n@@ -13,6 +13,7 @@ import json\n import decimal\n from enum import Enum\n import errno\n import http.client\n import json\n import logging\n import os\n+from pathlib import Path\n import re\n import subprocess\n import tempfile\n import time\n import urllib.parse\n import collections\n import shlex\n import sys\n-from pathlib import Path\n``\n",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732926715,732926715,test/functional/test_framework/test_node.py
jnewbery,2021-10-21 11:28:28,"This comment was marked resolved, but the imports are still unsorted.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733580834,733580834,test/functional/feature_init.py
jnewbery,2021-10-21 11:33:52,"""to bail"" is a bit colloquial and may not be understood by non-native english speakers. It might be better to use a more standard, technical term such as ""to terminate"".",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733584445,733584445,test/functional/feature_init.py
jnewbery,2021-10-21 11:52:23,"Doing this will probably make it more difficult to debug failures, since the bitcoind log is erased. For example, the second time I ran this test, I hit the following failure:\n\n<details>\n<summary>Log</summary>\n\n```\n→ ./test/functional/feature_init.py --nocleanup\n2021-10-21T11:43:53.709000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_lh9p1xfw\n2021-10-21T",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733597570,733597570,test/functional/feature_init.py
jnewbery,2021-10-21 11:53:10,"This feels a little bit verbose for info logging. I'd suggest moving to debug. Same for the ""terminating node after"" log below.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733598115,733598115,test/functional/feature_init.py
jnewbery,2021-10-21 12:09:06,This results in very verbose test logs,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733609265,733609265,test/functional/feature_init.py
jnewbery,2021-10-21 12:10:14,"I think it's generally better to leave TODOs out of the source and track them as issues, so that they can be discussed/amended/removed.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733610131,733610131,test/functional/feature_init.py
jnewbery,2021-10-21 12:18:56,"Is there a way to derive this value programatically from the subtests above? I imagine it could change over time as log lines are added/removed in bitcoind, and this value would become outdated.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733616552,733616552,test/functional/feature_init.py
mzumsande,2021-10-24 19:18:32,"I think I have found the cause for the intermittent failures, it's related to #15946, see `index/base.cpp`:\n\nIt happens when the node starts with `-txindex=1` but `ThreadSync` is interrupted after it sets `m_best_block_index` to Genesis, and before it gets do any further work (like indexing the next block).\n\nThen, with the next restart, `BaseIndex::Init()` tries to check whether we know th",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r735159180,735159180,test/functional/feature_init.py
dongcarl,2021-10-25 21:25:46,"I think you have identified the right cause. I obtained a datadir from jamesob that triggers the ""Error: txindex best block of the index goes beyond pruned data..."" error on master when run with the following invocation:\n\n```bash\n./src/bitcoind -txindex=1 -datadir=$PWD/james-datadir/home/james/tmp/bitcoin_func_test_cf43f1hi/node0/\n```\n\nNow, if I apply the following (very naive, should ",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r735979548,735979548,test/functional/feature_init.py
MarcoFalke,2021-10-26 16:04:44,"If txindex is causing issues, maybe remove it for now and add it in a later pull?",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736701015,736701015,test/functional/feature_init.py
jamesob,2021-10-26 16:33:41,Sorted imports are not in the Python style guide. I think keeping them sorted is an unnecessary burden to authors and reviewers.,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736725588,736725588,test/functional/feature_init.py
jamesob,2021-10-26 16:37:21,"Good idea, will do.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736728442,736728442,test/functional/feature_init.py
jamesob,2021-10-26 16:50:47,Fixed,https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736739979,736739979,test/functional/feature_init.py
jamesob,2021-10-26 16:51:03,"Good idea, done.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736740209,736740209,test/functional/feature_init.py
jamesob,2021-10-26 16:51:40,"Nice detective work, guys! I'm going to follow @MarcoFalke's advice and disable txindex here, but create an issue to follow this up.",https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736740690,736740690,test/functional/feature_init.py
