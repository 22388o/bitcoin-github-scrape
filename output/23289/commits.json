[
  {
    "sha": "23f85616a8d9c9a1b054e492eca4d199028f34dc",
    "node_id": "C_kwDOABII59oAKDIzZjg1NjE2YThkOWM5YTFiMDU0ZTQ5MmVjYTRkMTk5MDI4ZjM0ZGM",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-15T21:23:05Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-20T15:24:56Z"
      },
      "message": "test: add node.chain_path and node.debug_log_path\n\nTo allow easier access to the node's datadir and debug logs.",
      "tree": {
        "sha": "920190f802624853e69a1d95be1f371f0929bc74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/920190f802624853e69a1d95be1f371f0929bc74"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f85616a8d9c9a1b054e492eca4d199028f34dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFwNMkACgkQepNdrbLE\nTwXhhg/+LAdBnwKh1N31rKdtDxSPtZ3ENJ0HkZiHdpozOVA5sQ3Ff/jIUjtlZK6A\nWJPIrs4L1OJ1UpJAMtfOte5n15VXXL/VWhfHlf0L5K4K9qcL8UnD4re1nadxw80b\n9ZxouP7hbrKuoTK3dEBbRsvrBplfnNMc1IdeKDvaLKyvGlrHwlJ8uJP+9q3sdY6t\nyJao7SnW1UHwmJmxE1smyM+csXqnmv3P5Im5PahODfTveXH1s22SLUo6dJQb3QGi\nGFW2mKUG0LS3wmIEc5kNVOwDjj2tdXpbbNMkEZ2FNIBiI7vtLF+c9U66bhuv4ar1\nbGZp22VAgBYX97cobGaBo8EPjpu+CPOkvmUZuuIbVcq4OL3NBSV9LQUAIHa3NKLC\ne/jx9q44+k0J5xSVOsd0LhFnvovNLwl2M1GtykWaKA9WfW2cmrM7d9rXMzSSb6YY\nPGlcnlv3c8JUu3NQ5VOsEtR0R1CCek5DMo1UhZYdEFyNqBo4H/ncIQHNfI0jV12U\nkcLwAaW5OPHTBLzO6oWqQ9Qq803O0yVF+eUo1AixLQ5ux0wOXwPXMxBfQPjM2Zpv\nEcryAMxNWU7xx6YsR/qe4Eec5gtILdWOgAELjdAXizPY45AJ7VP2R0Ii7Y6vN5ow\nlkEsWOKO+/kX5HNWWpfbBdXGrCKTiNyHN9FolhNj9PW3e1V63AM=\n=iKF+\n-----END PGP SIGNATURE-----",
        "payload": "tree 920190f802624853e69a1d95be1f371f0929bc74\nparent 02ccf1086ea02635d59282e5dd2b3eeb35484753\nauthor James O'Beirne <james.obeirne@pm.me> 1634332985 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1634743496 -0400\n\ntest: add node.chain_path and node.debug_log_path\n\nTo allow easier access to the node's datadir and debug logs.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23f85616a8d9c9a1b054e492eca4d199028f34dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23f85616a8d9c9a1b054e492eca4d199028f34dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23f85616a8d9c9a1b054e492eca4d199028f34dc/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02ccf1086ea02635d59282e5dd2b3eeb35484753",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ccf1086ea02635d59282e5dd2b3eeb35484753",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02ccf1086ea02635d59282e5dd2b3eeb35484753"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "1adfb7c79a657654f82eb03ee7018790233254fc",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23f85616a8d9c9a1b054e492eca4d199028f34dc/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23f85616a8d9c9a1b054e492eca4d199028f34dc/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=23f85616a8d9c9a1b054e492eca4d199028f34dc",
        "patch": "@@ -20,6 +20,7 @@\n import collections\n import shlex\n import sys\n+from pathlib import Path\n \n from .authproxy import JSONRPCException\n from .descriptors import descsum_create\n@@ -368,21 +369,28 @@ def is_node_stopped(self):\n     def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n         wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\n \n+    @property\n+    def chain_path(self) -> Path:\n+        return Path(self.datadir) / self.chain\n+\n+    @property\n+    def debug_log_path(self) -> Path:\n+        return self.chain_path / 'debug.log'\n+\n     @contextlib.contextmanager\n     def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):\n         if unexpected_msgs is None:\n             unexpected_msgs = []\n         time_end = time.time() + timeout * self.timeout_factor\n-        debug_log = os.path.join(self.datadir, self.chain, 'debug.log')\n-        with open(debug_log, encoding='utf-8') as dl:\n+        with open(self.debug_log_path, encoding='utf-8') as dl:\n             dl.seek(0, 2)\n             prev_size = dl.tell()\n \n         yield\n \n         while True:\n             found = True\n-            with open(debug_log, encoding='utf-8') as dl:\n+            with open(self.debug_log_path, encoding='utf-8') as dl:\n                 dl.seek(prev_size)\n                 log = dl.read()\n             print_log = \" - \" + \"\\n - \".join(log.splitlines())"
      }
    ]
  },
  {
    "sha": "d9803f7a0a33688f7429cf10384244f4770851ca",
    "node_id": "C_kwDOABII59oAKGQ5ODAzZjdhMGEzMzY4OGY3NDI5Y2YxMDM4NDI0NGY0NzcwODUxY2E",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-15T21:29:48Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-26T16:46:36Z"
      },
      "message": "test: add stress tests for initialization",
      "tree": {
        "sha": "d9e122f2d82a132c2fced62f6b66691520afc970",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9e122f2d82a132c2fced62f6b66691520afc970"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9803f7a0a33688f7429cf10384244f4770851ca",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmF4MO0ACgkQepNdrbLE\nTwVq1A/9HlOgiduhz54QfcrDirqNE4AfvQNSCAUbJUAjdlMeFMsrhsfBl943MlXD\n5KaWlqAGpX7UnEt5CaeS0P/XDL/OpF1O1u5Z/B7Lbd2Wz34QV7fkRXwQrCg6cerR\nyiaBJWQPkUJ9xoh9vTJeViwSeiCU45rmE8X4mYJY4mvhRaLJoTzA/lk54Tb62lWS\nKybN61eelJMC87bbWsauH6X0sDfkqh5eKaZhtM5MwksqTNy3L+rG+4Siyx12jtwL\nq8U0KbTuFIbc8hnYcWOoGkhdUtad9mVyOOA5nRAi+RGEapoJuwfgyNP+skHsAldL\nNruyg6iUVGCkLIOTAsCf6mijOSlVYT4i+sEuO6PQe8pbHyXuldQxwiWNHwdOu3uh\nTXmZp9j6ZcmX0Ir12Ivpj6178XT7hG7xura8zAPtF0xSivw5CFGuLoZP3arLidQu\n4AtQpcnZZL7FWXuT2DvrlnnMZ+tRwE8U+tnHjorlGxVtMCcpEXeIydv7MVYI2z6/\nFNTp1MLbGe5nx73LAhm1RwKfGFxa2qVDwzGSHSAHNZx2gnRZKE/aMDRzg5WQUWsJ\ni3hTN5A/F+WeiIIdY69hDZw970Afa8Uz45L9mmSgJ6lCfdSg6Zww2xqO8o1rt6TO\nOqttml9lI3T3e8RwAVeZSha6y3fk82HHzPYiNt0POJl+uEoRudw=\n=t6t9\n-----END PGP SIGNATURE-----",
        "payload": "tree d9e122f2d82a132c2fced62f6b66691520afc970\nparent 23f85616a8d9c9a1b054e492eca4d199028f34dc\nauthor James O'Beirne <james.obeirne@pm.me> 1634333388 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1635266796 -0400\n\ntest: add stress tests for initialization\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9803f7a0a33688f7429cf10384244f4770851ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9803f7a0a33688f7429cf10384244f4770851ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9803f7a0a33688f7429cf10384244f4770851ca/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23f85616a8d9c9a1b054e492eca4d199028f34dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23f85616a8d9c9a1b054e492eca4d199028f34dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23f85616a8d9c9a1b054e492eca4d199028f34dc"
      }
    ],
    "stats": {
      "total": 183,
      "additions": 183,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cffbd402718c3928a33af921759975998e50339d",
        "filename": "test/functional/feature_init.py",
        "status": "added",
        "additions": 182,
        "deletions": 0,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9803f7a0a33688f7429cf10384244f4770851ca/test/functional/feature_init.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9803f7a0a33688f7429cf10384244f4770851ca/test/functional/feature_init.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_init.py?ref=d9803f7a0a33688f7429cf10384244f4770851ca",
        "patch": "@@ -0,0 +1,182 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test terminating initialization after seeing a certain log line.\n+        - test terminating init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            # TODO: add -txindex=1 to fully test index initiatlization.\n+            # See https://github.com/bitcoin/bitcoin/pull/23289#discussion_r735159180 for\n+            # a discussion of the related bug.\n+            node.start()\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockcount())\n+\n+        lines_to_terminate_after = [\n+            'scheduler thread start',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            # TODO: reenable - see above TODO\n+            # 'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        if self.is_wallet_compiled():\n+            lines_to_terminate_after.append('Verifying wallet')\n+\n+        for terminate_line in lines_to_terminate_after:\n+            self.log.info(f\"Starting node and will exit after line '{terminate_line}'\")\n+            node.start(\n+                # TODO: add -txindex=1 to fully test index initiatlization.\n+                # extra_args=['-txindex=1'],\n+            )\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and terminate_line.lower() in line.lower():\n+                    self.log.debug(f\"Terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    raise AssertionError(\n+                        f\"missed line {terminate_line}; terminating now after {num_lines} lines\")\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{terminate_line}')\")\n+\n+        check_clean_start()\n+        num_total_logs = len(node.debug_log_path.read_text().splitlines())\n+        self.stop_node(0)\n+\n+        self.log.info(\n+            f\"Terminate at some random point in the init process (max logs: {num_total_logs})\")\n+\n+        for _ in range(40):\n+            terminate_after = random.randint(1, num_total_logs)\n+            self.log.debug(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(\n+                # TODO: add -txindex=1 to fully test index initiatlization.\n+                # extra_args=['-txindex=1'],\n+            )\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.debug(f\"Terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            'blocks/index/*.ldb': 'Error opening block database.',\n+            'chainstate/*.ldb': 'Error opening block database.',\n+            'blocks/blk*.dat': 'Error loading block database.',\n+        }\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = list(node.chain_path.glob(file_patt))[0]\n+\n+            self.log.info(f\"Tweaking file to ensure failure {target_file}\")\n+            bak_path = str(target_file) + \".bak\"\n+            target_file.rename(bak_path)\n+\n+            # TODO: at some point, we should test perturbing the files instead of removing\n+            # them, e.g.\n+            #\n+            # contents = target_file.read_bytes()\n+            # tweaked_contents = bytearray(contents)\n+            # tweaked_contents[50:250] = b'1' * 200\n+            # target_file.write_bytes(bytes(tweaked_contents))\n+            #\n+            # At the moment I can't get this to work (bitcoind loads successfully?) so\n+            # investigate doing this later.\n+\n+            node.assert_start_raises_init_error(\n+                # TODO: add -txindex=1 to fully test index initiatlization.\n+                # extra_args=['-txindex=1'],\n+                expected_msg=err_fragment,\n+                match=ErrorMatch.PARTIAL_REGEX,\n+            )\n+\n+            self.log.info(f\"Restoring file from {bak_path} and restarting\")\n+            Path(bak_path).rename(target_file)\n+            check_clean_start()\n+            self.stop_node(0)\n+\n+\n+if __name__ == '__main__':\n+    InitStressTest().main()"
      },
      {
        "sha": "8c828eab563769e78d194baa9b36b34f3c8f7892",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9803f7a0a33688f7429cf10384244f4770851ca/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9803f7a0a33688f7429cf10384244f4770851ca/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=d9803f7a0a33688f7429cf10384244f4770851ca",
        "patch": "@@ -275,6 +275,7 @@\n     'wallet_taproot.py',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n+    'feature_init.py',\n     'wallet_coinbase_category.py --legacy-wallet',\n     'wallet_coinbase_category.py --descriptors',\n     'feature_filelock.py',"
      }
    ]
  }
]