[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327957949",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-327957949",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 327957949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk1Nzk0OQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T23:40:46Z",
    "updated_at": "2017-09-07T23:40:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Best reviewed with `?w=1` (https://github.com/bitcoin/bitcoin/pull/11281/files?w=1)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327957949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328023287",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-328023287",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 328023287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODAyMzI4Nw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T07:26:09Z",
    "updated_at": "2017-09-08T07:26:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli Which variables are guarded by `cs_main` and `cs_wallet` in these specific cases?\r\n\r\nI'll double-check against my lock annotations to make sure they are in sync.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328023287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328530818",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-328530818",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 328530818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODUzMDgxOA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T13:35:22Z",
    "updated_at": "2017-09-11T13:35:22Z",
    "author_association": "MEMBER",
    "body": "Awesome, will review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328530818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329943121",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-329943121",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 329943121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk0MzEyMQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-16T03:53:43Z",
    "updated_at": "2017-09-16T03:53:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated and reduced locks after @sipa's mentioning.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329943121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330266408",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-330266408",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 330266408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI2NjQwOA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T15:49:43Z",
    "updated_at": "2017-09-18T15:49:43Z",
    "author_association": "MEMBER",
    "body": "utACK 1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330266408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330705883",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-330705883",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 330705883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDcwNTg4Mw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T23:54:05Z",
    "updated_at": "2017-09-19T23:54:05Z",
    "author_association": "MEMBER",
    "body": "Sorry for the bad reference \u261d\ufe0f ...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330705883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331343028",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-331343028",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 331343028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTM0MzAyOA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-22T03:49:26Z",
    "updated_at": "2017-09-22T03:49:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed @promag's code folding/style issue",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331343028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344724982",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-344724982",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 344724982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDcyNDk4Mg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T20:53:58Z",
    "updated_at": "2017-11-15T20:53:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reviewers welcome (to make progress with GUI rescan abort #11200), best reviewed with ?w=1",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344724982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344897211",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-344897211",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 344897211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg5NzIxMQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T11:35:11Z",
    "updated_at": "2017-11-16T11:52:44Z",
    "author_association": "MEMBER",
    "body": "~~utACK 726fe69~~. There might be a slight overhead to locking for every block, likely only relevant for the first blocks of the chain which have few transactions. In any case this is preferable to the current situation.\r\n\r\n(removed my utACK for now, this does not get reorgs right in case the order in which blocks are scanned matters, which I'm not sure about)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344897211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347211606",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347211606",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 347211606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzIxMTYwNg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T15:12:02Z",
    "updated_at": "2017-11-27T15:12:02Z",
    "author_association": "MEMBER",
    "body": "BTW, see question https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549593.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347211606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347218612",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347218612",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 347218612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzIxODYxMg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T15:33:31Z",
    "updated_at": "2017-11-27T15:33:31Z",
    "author_association": "MEMBER",
    "body": "This also allows concurrent rescans correct? It will mess up the progress dialog no?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347218612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347454431",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347454431",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 347454431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzQ1NDQzMQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-28T08:51:19Z",
    "updated_at": "2017-11-28T09:06:01Z",
    "author_association": "MEMBER",
    "body": "> This also allows concurrent rescans correct? It will mess up the progress dialog no?\r\n\r\nConcurrent rescans on multiple wallets would be nice, multiple concurrent rescans on one wallet would be dangerous or at least counter-productive (so we might want to track that?).\r\nProgress dialog issues can be fixed later.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347454431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347980858",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347980858",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 347980858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk4MDg1OA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T20:08:43Z",
    "updated_at": "2017-11-29T20:08:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased the PR.\r\n\r\n* Added checks to make sure only one rescan per time and per wallet can be executed (with appropriate error responses)\r\n\r\n* Extended the lock reduction to the new `rescanblockchain` call",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347980858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347981907",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347981907",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 347981907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk4MTkwNw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T20:12:05Z",
    "updated_at": "2017-11-29T20:12:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Best reviewed with [w=1](https://github.com/bitcoin/bitcoin/pull/11281/files?w=1).\r\nEasy way to test multiple parallel rescans by adding a sleep within the inner rescan loop.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347981907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349173234",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349173234",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 349173234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE3MzIzNA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T02:16:58Z",
    "updated_at": "2017-12-05T02:16:58Z",
    "author_association": "MEMBER",
    "body": "> > This also allows concurrent rescans correct? It will mess up the progress dialog no?\r\n>\r\n> Concurrent rescans on multiple wallets would be nice, multiple concurrent rescans on one wallet would be dangerous or at least counter-productive (so we might want to track that?).\r\n> Progress dialog issues can be fixed later.\r\n\r\nPlease see #11826.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349173234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349729510",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349729510",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 349729510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTcyOTUxMA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T18:21:48Z",
    "updated_at": "2017-12-06T18:21:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems like this PR still has some races described above that need to be fixed.\r\n\r\nAlso, it is unclear to me what the \"important show-stopper for #11200\" mentioned in the PR description is. The comments in #11200 seems to indicate that there is some existing deadlock that this fixes and #11200 would worsen without this PR. But there's no explanation of how or when the deadlock happens. It's be good to have some clarification about this. (I also asked about it in https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-340865856).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349729510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349760376",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349760376",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 349760376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc2MDM3Ng==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T20:12:26Z",
    "updated_at": "2017-12-06T20:12:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ryanofsky: #11200 won't currently work because the rescan locks `cs_main` over a longer period. The GUI also tries to lock `cs_main` via graphical updates on the transaction table as well as the balances.... == unresponsiveness (not actually a deadlock) == you won't be able to abort the rescan because the whole GUI is locked.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349760376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349879125",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349879125",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 349879125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg3OTEyNQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T06:50:06Z",
    "updated_at": "2017-12-07T06:50:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added two commits.\r\n* Addressed the race issue found by @promag and @TheBlueMatt (d7f3836b74b790887793997562216885840df7a2)\r\n* Update the progress max if the tip has changed (as found by @promag, 9b59847ddca46d30404ca574cba32b6de214844f)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349879125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349886775",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349886775",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 349886775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg4Njc3NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T07:35:11Z",
    "updated_at": "2017-12-07T07:35:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this still WIP? I don't see changes or responses for 3 other races: [IsScanning](https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154683955), [GuessVerificationProcess](https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154672170), [ReadBlockFromDisk](https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154675029)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349886775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349890421",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349890421",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 349890421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg5MDQyMQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T07:55:14Z",
    "updated_at": "2017-12-07T07:55:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added a commit that fixes the remaining missing locks mentioned by @TheBlueMatt, expect the racy `IsScanning()`. Would it make sense to read and set (protected by a internal lock) the scanning flag right after checking (something like `checkAndEventuallySetScanning()`)? Other ideas?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349890421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350294897",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350294897",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 350294897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI5NDg5Nw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T15:43:10Z",
    "updated_at": "2017-12-08T15:43:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: race: I certainly appreciate the RPC exception before importing in case of an existing scan. It might be nice to get some RAII-like lock on the ability to scan, ie like your suggestion but you create a class instance which gives you the right to rescan instead of having to make sure you set some boolean to false if you decide you don't want to rescan.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350294897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350372374",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350372374",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 350372374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDM3MjM3NA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T21:09:25Z",
    "updated_at": "2017-12-08T21:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added an RAII object to preserve wallet rescan races.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350372374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350496195",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350496195",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 350496195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ5NjE5NQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-09T18:28:35Z",
    "updated_at": "2017-12-09T18:28:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "It appears test_bitcoin.exe hung. Not sure if PR-related or some other issue, but I'm not aware of any issues with such hangs on master atm?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350496195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350527625",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350527625",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 350527625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUyNzYyNQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-10T06:11:30Z",
    "updated_at": "2017-12-10T06:11:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TheBlueMatt: where did it hung? Travis seems to be happy?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350527625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351165171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351165171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 351165171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE2NTE3MQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T19:26:15Z",
    "updated_at": "2017-12-12T19:26:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and cleaned up commit history.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351165171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351181137",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351181137",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 351181137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE4MTEzNw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T20:17:43Z",
    "updated_at": "2017-12-12T20:17:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "It may be nice to make a WalletRescanReserver a required argument to ScanForWalletTransactions/RescanFromTime to enforce correctness.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351181137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351226949",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351226949",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 351226949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTIyNjk0OQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T23:15:56Z",
    "updated_at": "2017-12-12T23:15:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Followed @TheBlueMatt advice and made the `WalletRescanReserver` an argument of `ScanForWalletTransactions` and `RescanFromTime` to ensure on code level that the wallet rescan is reserved before scanning.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351226949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351456105",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351456105",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 351456105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ1NjEwNQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T17:05:20Z",
    "updated_at": "2017-12-13T17:05:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "See comment github is hiding at https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156484165. Also, could you squash \"Make sure we rescan only blocks in the main chain\" into the first commit? Otherwise the first commit is \"wrong\", which is annoying in review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351456105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351525517",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351525517",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 351525517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUyNTUxNw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T21:08:55Z",
    "updated_at": "2017-12-13T21:08:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added a commit ff54709 to allow to call `ReadBlockFromDisk()` without holding `cs_main` (push the lock down for `CDiskBlockPos::GetBlockPos()`).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351525517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352123819",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-352123819",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 352123819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjEyMzgxOQ==",
    "user": {
      "login": "heri99",
      "id": 20781722,
      "node_id": "MDQ6VXNlcjIwNzgxNzIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/20781722?u=f8628bdfdccc59c29b3c01b0cab35d3fdfdfb47d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heri99",
      "html_url": "https://github.com/heri99",
      "followers_url": "https://api.github.com/users/heri99/followers",
      "following_url": "https://api.github.com/users/heri99/following{/other_user}",
      "gists_url": "https://api.github.com/users/heri99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heri99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heri99/subscriptions",
      "organizations_url": "https://api.github.com/users/heri99/orgs",
      "repos_url": "https://api.github.com/users/heri99/repos",
      "events_url": "https://api.github.com/users/heri99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heri99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-15T22:05:53Z",
    "updated_at": "2017-12-15T22:05:53Z",
    "author_association": "NONE",
    "body": "Sory for that\n\nOn 16 Dec 2017 5:24 am, \"Matt Corallo\" <notifications@github.com> wrote:\n\n> *@TheBlueMatt* commented on this pull request.\n> ------------------------------\n>\n> In src/wallet/rpcdump.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011>:\n>\n> >          }\n>      }\n> +    if (fRescan) {\n>\n> I wouldnt think so directly. What may be of larger concern may be that you\n> could get a bogus balance due to having found old transactions but not\n> newer ones. Its probably still fine, but we should note it in the help doc\n> for the rescanning functions. Alternatively we could block other wallet RPC\n> calls until rescan finishes.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AT0amrJB8ZTspbPKK86FyFNuKI74wYBeks5tAuN3gaJpZM4PQhYL>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352123819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352918517",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-352918517",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 352918517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjkxODUxNw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T23:30:43Z",
    "updated_at": "2017-12-19T23:30:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed @promag's nits",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352918517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352923698",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-352923698",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 352923698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjkyMzY5OA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T00:01:25Z",
    "updated_at": "2017-12-20T00:01:48Z",
    "author_association": "MEMBER",
    "body": "Squash *Make sure WalletRescanReserver has successfully reserved the rescan*  into *Add RAII wallet rescan reserver*?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352923698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353707688",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-353707688",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 353707688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzcwNzY4OA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-23T05:11:27Z",
    "updated_at": "2017-12-23T05:11:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs rebase. Also I believe still needs (at least) doc fixes to address @sipa's comments at https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353707688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355660996",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-355660996",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 355660996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY2MDk5Ng==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T20:46:00Z",
    "updated_at": "2018-01-05T20:46:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and added a commit that adds mentioning of the concern reported by @sipa (https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953, other RPC calls may report keys as imported but related transactions are still not there because of the ongoing rescan)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355660996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357003325",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-357003325",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 357003325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAwMzMyNQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T17:37:00Z",
    "updated_at": "2018-01-11T17:37:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs rebase and to address @sipa's note. Personally I think just documenting the case is sufficient.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357003325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357035491",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-357035491",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 357035491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAzNTQ5MQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T19:29:55Z",
    "updated_at": "2018-01-11T19:29:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased (non trivial).\r\nAnother review would help. Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357035491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/359010967",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-359010967",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 359010967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTAxMDk2Nw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T16:08:54Z",
    "updated_at": "2018-01-19T16:08:54Z",
    "author_association": "MEMBER",
    "body": "Not sure what exactly to test here, but at least I can confirm `bitcoin-cli abortrescan` still works and there's no noticeable difference in QT (I assume that's good).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/359010967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360097489",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-360097489",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 360097489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDA5NzQ4OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T11:07:31Z",
    "updated_at": "2018-01-24T11:07:31Z",
    "author_association": "MEMBER",
    "body": "Forgot to mention, it is still not possible to abort the rescan at initialisation time, I guess the goal is to not change that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360097489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360106438",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-360106438",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
    "id": 360106438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDEwNjQzOA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T11:47:19Z",
    "updated_at": "2018-01-24T11:54:33Z",
    "author_association": "MEMBER",
    "body": "> Forgot to mention, it is still not possible to abort the rescan at initialisation time, I guess the goal is to not change that.\r\n\r\nI don't think that's a goal here? Let's not extend the scope beyond what is in the OP.\r\n\r\nutACK 7f81250",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360106438/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138222877",
    "pull_request_review_id": 61989731,
    "id": 138222877,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODIyMjg3Nw==",
    "diff_hunk": "@@ -1529,14 +1529,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  */\n int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n {\n-    AssertLockHeld(cs_main);\n-    AssertLockHeld(cs_wallet);\n-\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* const startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-    LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n+    CBlockIndex* startBlock = nullptr;\n+    {\n+        LOCK2(cs_main, cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What needs cs_wallet here?",
    "created_at": "2017-09-12T00:01:47Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138222877",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138222877"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138222877"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138222877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1537,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138223641",
    "pull_request_review_id": 61989731,
    "id": 138223641,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODIyMzY0MQ==",
    "diff_hunk": "@@ -1564,13 +1565,18 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressStart = 0;\n+        double dProgressTip = 0;\n+        {\n+            LOCK2(cs_main, cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What needs cs_wallet here?",
    "created_at": "2017-09-12T00:07:36Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138223641",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138223641"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138223641"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138223641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1575,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224114",
    "pull_request_review_id": 61989731,
    "id": 138224114,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODIyNDExNA==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": 87,
    "original_position": 47,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What needs cs_main here?",
    "created_at": "2017-09-12T00:11:31Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224114",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224114"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224114"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1694,
    "original_line": 1694,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224151",
    "pull_request_review_id": 61989731,
    "id": 138224151,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODIyNDE1MQ==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK2(cs_main, cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What needs cs_wallet here?",
    "created_at": "2017-09-12T00:11:43Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224151",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224151"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224151"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1704,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549239",
    "pull_request_review_id": 63497928,
    "id": 139549239,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU0OTIzOQ==",
    "diff_hunk": "@@ -1564,13 +1565,18 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressStart = 0;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Only `chainActive.Tip()` needs the lock? So keep old code and:\r\n```cpp\r\nCBlockIndex* tip = nullptr;\r\n{\r\n    LOCK(cs_main);\r\n    tip = chainActive.Tip();\r\n}\r\n\r\ndouble dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\r\ndouble dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\r\n```",
    "created_at": "2017-09-18T21:46:42Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549239",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549239"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549239"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1572,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549593",
    "pull_request_review_id": 63497928,
    "id": 139549593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU0OTU5Mw==",
    "diff_hunk": "@@ -1564,13 +1565,18 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressStart = 0;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "BTW, this patch allows the tip to be update so `dProgressTip` should be inside the loop?",
    "created_at": "2017-09-18T21:48:30Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1572,
    "side": "RIGHT",
    "in_reply_to_id": 139549239
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139829712",
    "pull_request_review_id": 63816742,
    "id": 139829712,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgyOTcxMg==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What if there's a reorg between iterations?\r\n\r\nDoes anything weird happen if we (for ex): begin scanning, receive a new best block with our tx from p2p, then re-scan here?\r\n\r\nSeems to me that we should take a copy of ChainActive, traverse, compare to progress to chainActive.Tip(), and repeat until they match. Something like (just a quick sketch, probably broken):\r\n```c++\r\nCBlockIndex* pindex = pindexStart;\r\nCChain chain;\r\nwhile (!fAbortRescan) {\r\n    {\r\n        LOCK(cs_main);\r\n        if (pindex == chainActive.Tip()) {\r\n            break;\r\n        }\r\n        chain.SetTip(chainActive.Tip());\r\n    }\r\n    if (pindex) {\r\n        // start where we left off.\r\n        const CBlockIndex* fork = chain.FindFork(pindex);\r\n        if (fork != pindex) {\r\n            // Need to undo the orphans.\r\n        }\r\n        pindex = chain.Next(fork);\r\n    }\r\n    while(!fAbortRescan && pindex) {\r\n        /*\r\n        do stuff\r\n        ...\r\n        pindex = chain.Next(pindex);\r\n        */\r\n    }\r\n    pindex = chain.Tip();\r\n}\r\n```\r\nThat almost entirely avoids locking cs_main, while ensuring that we're never jumping chains.\r\n\r\nIt could also be done with just the pindex and GetAncestor(), to skip the memory overhead of the second chain copy.",
    "created_at": "2017-09-19T22:00:18Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139829712",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139829712"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139829712"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139829712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140407028",
    "pull_request_review_id": 64476586,
    "id": 140407028,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDQwNzAyOA==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not sure if this is really a problem. During rescans, IMO it won't hurt to scan an orphaned block nor does it hurt if you do not scan up to the tip in case you have connected new blocks during the time of re-scanning. This, because those new blocks must also have been scanned by the wallet logic (outside of `ScanForWalletTransactions`).",
    "created_at": "2017-09-22T03:44:53Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r140407028",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140407028"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r140407028"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140407028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151390218",
    "pull_request_review_id": 77087996,
    "id": 151390218,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTM5MDIxOA==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If a reorg happens during rescan, we want to continue rescanning using the current chain, not the outdated one.\r\n\r\n> This, because those new blocks must also have been scanned by the wallet logic (outside of ScanForWalletTransactions).\r\n\r\nIndeed.\r\n... I think it works out like this. Though @theuni does put a good point.\r\n",
    "created_at": "2017-11-16T11:39:30Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r151390218",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151390218"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r151390218"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151390218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153220818",
    "pull_request_review_id": 79194980,
    "id": 153220818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzIyMDgxOA==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe break the rescan as soon as possible if the above tip is not in the current chain? Then add here:\r\n```cpp\r\nif (!chainActive.Contains(tip)) break;\r\n```",
    "created_at": "2017-11-27T15:03:26Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153220818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153220818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153220818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153220818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153601338",
    "pull_request_review_id": 79631510,
    "id": 153601338,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzYwMTMzOA==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In case of a reorg, wouldn't `chainActive.Next(pindex);` return a `nullptr` leading to stop the scan, which should be totally fine. During the reorg, the blocks of the new chain must have been scanned by the wallet via ConnectBlock.",
    "created_at": "2017-11-28T19:40:48Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153601338",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153601338"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153601338"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153601338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153603479",
    "pull_request_review_id": 79634026,
    "id": 153603479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzYwMzQ3OQ==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes that's true when pindex is not in the chain. But if any later block is not in the chain, why keep rescanning?",
    "created_at": "2017-11-28T19:48:40Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153603479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153603479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153603479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153603479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153608512",
    "pull_request_review_id": 79639661,
    "id": 153608512,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzYwODUxMg==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It should be detected during the next `chainActive.Next(pindex);` which, in case we had a fork between the last `chainActive.Next(pindex);` we would only scan max 1 block... also very unlikely IMO.",
    "created_at": "2017-11-28T20:07:02Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153608512",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153608512"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153608512"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153608512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153662484",
    "pull_request_review_id": 79701730,
    "id": 153662484,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzY2MjQ4NA==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Suppose the following:\r\n - `A B C D E F G H I J` - chain to rescan, tip = J\r\n - `(A) B C D E F G H I J` - scanning block A\r\n - `A (B) C D E F G H I J` - scanning block B\r\n - `A (B) C D E F G H K L M` - scanning block B, reorg after H\r\n\r\nShould only rescan to H inclusive? Agree it's an edge case.\r\n\r\nBTW, if the tip changes `dProgressTip` could be updated?",
    "created_at": "2017-11-29T00:17:23Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153662484",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153662484"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153662484"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153662484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154672170",
    "pull_request_review_id": 80868458,
    "id": 154672170,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDY3MjE3MA==",
    "diff_hunk": "@@ -1651,13 +1652,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n+        CBlockIndex* tip = nullptr;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+        }\n         double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 37,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "fbca42a021342580fa8f4de12c55f941ba521ad6",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "GuessVerificationProcess needs cs_main (probably best to lock cs_main in GuessVerificationProcess).",
    "created_at": "2017-12-04T15:01:54Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154672170",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154672170"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154672170"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154672170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1665,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154675029",
    "pull_request_review_id": 80868458,
    "id": 154675029,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDY3NTAyOQ==",
    "diff_hunk": "@@ -1669,6 +1674,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "fbca42a021342580fa8f4de12c55f941ba521ad6",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(one line up) ReadBlockFromDisk in CBlockIndex* form requires cs_main.",
    "created_at": "2017-12-04T15:11:32Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154675029",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154675029"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154675029"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154675029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1693,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154681446",
    "pull_request_review_id": 80868458,
    "id": 154681446,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDY4MTQ0Ng==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yea, I think there is a real issue here. I (believe) it could be fixed by doing the AddToWalletIfInvolvingMe inside a cs_main (which is going to be at least mostly required since ReadBlockFromDisk requires cs_main) with a chainActive.Contains() check before doing the AddToWalletIfInvolvingMe. That should put us back to the original state of anything we add to the wallet is on the main chain and, thus, will either be Disconnected then Connected in the callbacks, only Connected, or not included in a callback at all.",
    "created_at": "2017-12-04T15:32:23Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154681446",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154681446"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154681446"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154681446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154683955",
    "pull_request_review_id": 80868458,
    "id": 154683955,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDY4Mzk1NQ==",
    "diff_hunk": "@@ -428,6 +432,10 @@ UniValue importpubkey(const JSONRPCRequest& request)\n     if (fRescan && fPruneMode)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n+    if (fRescan && pwallet->IsScanning()) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "d859779cd012571709ea364ba2480129bea8f399",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is very race-y. You could check check this, have another thread call rescan, and then end up with two parallell rescans.",
    "created_at": "2017-12-04T15:40:38Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154683955",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154683955"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154683955"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154683955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 435,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155161367",
    "pull_request_review_id": 81433007,
    "id": 155161367,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTE2MTM2Nw==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I still don't fully understand the concerns (please help me).\r\n\r\n* If there is a reorg, all blocks of the new chain will be scanned by the wallet via ConnectBlock (no need to rescan again, we only need to rescan the stuff that doesn't come in via Connect/Disconnect block).\r\n* If we scan blocks that are no longer in the main-chain, and we could find a transaction in those blocks that is relevant to our wallet, so be it. The wallet does display such transactions as unconfirmed... same as we would have a reorg outside of the rescan process.",
    "created_at": "2017-12-06T07:22:05Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155161367",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155161367"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155161367"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155161367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155326447",
    "pull_request_review_id": 81628083,
    "id": 155326447,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTMyNjQ0Nw==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Heh, sorry, I didnt fully specify my concern because I thought the above discussion did, but I dont think the above comments are correct. As you point out, I do not believe there is a race where you simply miss transactions. However, there is a race where you may end up marking a transaction as in the wrong block:\r\n\r\nA -> B -> ....\r\n    -> C -> ...\r\n\r\nBoth B and C have the transaction you're interested in.\r\n\r\nYou go to load block B from a rescan, but it has already been reorg'd and the notificatitons for disconnect(B) and connect(C) have already fired. Thus, you have the transaction marked as in block C, which is correct, but then you finish rescanning and mark the transaction as in block B, which now makes you think the transaction has been conflicted and has negative GetDepthInMainChain.\r\n\r\nAs I mentioned, this is most simply fixed by adding a \"LOCK(cs_main); if (!chainActive.Contains(pindex)) break;\" outside the AddToWalletIfInvolvingMe loop.",
    "created_at": "2017-12-06T18:50:33Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155326447",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155326447"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155326447"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155326447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156484165",
    "pull_request_review_id": 82968766,
    "id": 156484165,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjQ4NDE2NQ==",
    "diff_hunk": "@@ -1703,6 +1703,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             {\n                 LOCK(cs_main);\n                 pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "8f0e976df202a81f2ba37b6276f75e279c3e65ed",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This check needs to be inside a LOCK2(cs_main, cs_wallet) in the same block as AddToWalletIfInvolvingMe.",
    "created_at": "2017-12-12T20:18:59Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156484165",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156484165"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156484165"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156484165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1708,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156518016",
    "pull_request_review_id": 83009402,
    "id": 156518016,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjUxODAxNg==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 57,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed",
    "created_at": "2017-12-12T22:45:12Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156518016",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156518016"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156518016"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156518016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 139829712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776358",
    "pull_request_review_id": 83310456,
    "id": 156776358,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Njc3NjM1OA==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK2(cs_main, cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed",
    "created_at": "2017-12-13T20:41:29Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776358",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776358"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776358"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1704,
    "side": "RIGHT",
    "in_reply_to_id": 138224151
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776403",
    "pull_request_review_id": 83310507,
    "id": 156776403,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Njc3NjQwMw==",
    "diff_hunk": "@@ -1703,6 +1703,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             {\n                 LOCK(cs_main);\n                 pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "8f0e976df202a81f2ba37b6276f75e279c3e65ed",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2017-12-13T20:41:39Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776403",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776403"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776403"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1708,
    "side": "RIGHT",
    "in_reply_to_id": 156484165
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156808534",
    "pull_request_review_id": 83346623,
    "id": 156808534,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgwODUzNA==",
    "diff_hunk": "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 90,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line is a noop - chainActive.Next() is never going to return something non-nullptr that isn't on the best chain.",
    "created_at": "2017-12-13T22:47:32Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156808534",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156808534"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156808534"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156808534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1703,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156810727",
    "pull_request_review_id": 83346623,
    "id": 156810727,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxMDcyNw==",
    "diff_hunk": "@@ -1645,36 +1646,48 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is a weird case here that I think should be documented - something in the description of ScanForWalletTransactions should mention that, in order to ensure scan is \"successful\", pindex *must* have been/be on the main chain at some point after the addition of any keys which we want to rescan for.",
    "created_at": "2017-12-13T22:58:12Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156810727"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156810727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1691,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811137",
    "pull_request_review_id": 83346623,
    "id": 156811137,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxMTEzNw==",
    "diff_hunk": "@@ -3376,30 +3376,39 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you meant to put a LOCK(cs_main) at the top of this scope?",
    "created_at": "2017-12-13T23:00:07Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811137",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811137"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811137"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3409,
    "original_line": 3409,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811507",
    "pull_request_review_id": 83346623,
    "id": 156811507,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxMTUwNw==",
    "diff_hunk": "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;\n+                if (tip != chainActive.Tip()) {\n+                    // in case the tip has changed, update progress max\n+                    dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 93,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "err, didnt you mean to set tip to chainActive.Tip() first?",
    "created_at": "2017-12-13T23:02:00Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811507",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811507"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811507"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1716,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156814899",
    "pull_request_review_id": 83354105,
    "id": 156814899,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxNDg5OQ==",
    "diff_hunk": "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 90,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops. This is a rebase issue, ... removing this line now.",
    "created_at": "2017-12-13T23:20:51Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156814899",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156814899"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156814899"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156814899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1703,
    "side": "RIGHT",
    "in_reply_to_id": 156808534
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818774",
    "pull_request_review_id": 83358521,
    "id": 156818774,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxODc3NA==",
    "diff_hunk": "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;\n+                if (tip != chainActive.Tip()) {\n+                    // in case the tip has changed, update progress max\n+                    dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 93,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Argh. Thanks. Fixed.",
    "created_at": "2017-12-13T23:44:00Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818774",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818774"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818774"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1716,
    "side": "RIGHT",
    "in_reply_to_id": 156811507
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818904",
    "pull_request_review_id": 83358635,
    "id": 156818904,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxODkwNA==",
    "diff_hunk": "@@ -3376,30 +3376,39 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh. Indeed! Added. Fixed.",
    "created_at": "2017-12-13T23:44:42Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818904",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818904"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818904"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3409,
    "original_line": 3409,
    "side": "RIGHT",
    "in_reply_to_id": 156811137
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156819018",
    "pull_request_review_id": 83358777,
    "id": 156819018,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxOTAxOA==",
    "diff_hunk": "@@ -1645,36 +1646,48 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "ff547097b369fbd3aceb7216d6325df194af4a97",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. That case is a bit wired. We should probably return a custom state object instead a single CBlockIndex in the long run.\r\nMentioned that behaviour now in the `ScanForWalletTransactions` comment.",
    "created_at": "2017-12-13T23:45:33Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156819018",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156819018"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156819018"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156819018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1691,
    "side": "RIGHT",
    "in_reply_to_id": 156810727
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156984022",
    "pull_request_review_id": 83551405,
    "id": 156984022,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Njk4NDAyMg==",
    "diff_hunk": "@@ -1644,37 +1645,52 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * An additional check if the returned CBlockIndex* is/was on the main chain",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "61315d1455063641cf998abcd30145a35367e3b1",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I dont think that fully captures the requirement here. Its actually rather loose, y ou just need to make sure pindexStop (and pindexStart) are on the main chain *after* to the addition of any new keys you want to detect transactions for. What is returned actually doesnt matter because if pindexStart and pindexStop were on the main chain at some point when all the neccessary keys were in the wallet, any missed blocks during rescan were also caught in the validationinterface callbacks.",
    "created_at": "2017-12-14T15:59:08Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156984022",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156984022"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156984022"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156984022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1649,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157135059",
    "pull_request_review_id": 83729413,
    "id": 157135059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzEzNTA1OQ==",
    "diff_hunk": "@@ -1644,37 +1645,52 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * An additional check if the returned CBlockIndex* is/was on the main chain",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "61315d1455063641cf998abcd30145a35367e3b1",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Updated the comment.",
    "created_at": "2017-12-15T07:06:40Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157135059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157135059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157135059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157135059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1649,
    "side": "RIGHT",
    "in_reply_to_id": 156984022
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157283067",
    "pull_request_review_id": 83905785,
    "id": 157283067,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzI4MzA2Nw==",
    "diff_hunk": "@@ -3376,30 +3376,40 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {\n+        LOCK(cs_main);\n+        pindexStart = chainActive.Genesis();\n+        pChainTip = chainActive.Tip();\n \n-    if (!request.params[1].isNull()) {\n-        pindexStop = chainActive[request.params[1].get_int()];\n-        if (!pindexStop) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        if (!request.params[0].isNull()) {\n+            pindexStart = chainActive[request.params[0].get_int()];\n+            if (!pindexStart) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+            }\n         }\n-        else if (pindexStop->nHeight < pindexStart->nHeight) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+\n+        if (!request.params[1].isNull()) {\n+            pindexStop = chainActive[request.params[1].get_int()];\n+            if (!pindexStop) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+            }\n+            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+            }\n         }\n     }\n \n     // We can't rescan beyond non-pruned blocks, stop and throw an error\n     if (fPruneMode) {\n-        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 52,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "eba53080666402bba2efe4a430bde2b824edef9d",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The nStatus check two lines down still needs cs_main.",
    "created_at": "2017-12-15T19:37:10Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157283067",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157283067"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157283067"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157283067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3435,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157300953",
    "pull_request_review_id": 83928058,
    "id": 157300953,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMwMDk1Mw==",
    "diff_hunk": "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Releasing cs_wallet here means another RPC could occur in between which observes the key being present, but not the relevant transactions. Is that a concern?",
    "created_at": "2017-12-15T21:18:32Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157300953"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157300953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157302011",
    "pull_request_review_id": 83929304,
    "id": 157302011,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMwMjAxMQ==",
    "diff_hunk": "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wouldnt think so directly. What may be of larger concern may be that you could get a bogus balance due to having found old transactions but not newer ones. Its probably still fine, but we should note it in the help doc for the rescanning functions. Alternatively we could block other wallet RPC calls until rescan finishes.",
    "created_at": "2017-12-15T21:23:07Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157302011"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157302011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 157300953
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308303",
    "pull_request_review_id": 83936860,
    "id": 157308303,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMwODMwMw==",
    "diff_hunk": "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Possible solutions:\r\n1.) User must take care: report the rescan status in `getwalletinfo()`\r\n2.) Block relevant RPC calls during an active rescan...\r\n\r\nI think 1) is more flexible but my introduce some pitfalls...",
    "created_at": "2017-12-15T22:00:23Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 157300953
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308663",
    "pull_request_review_id": 83937262,
    "id": 157308663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMwODY2Mw==",
    "diff_hunk": "@@ -3376,30 +3376,40 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {\n+        LOCK(cs_main);\n+        pindexStart = chainActive.Genesis();\n+        pChainTip = chainActive.Tip();\n \n-    if (!request.params[1].isNull()) {\n-        pindexStop = chainActive[request.params[1].get_int()];\n-        if (!pindexStop) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        if (!request.params[0].isNull()) {\n+            pindexStart = chainActive[request.params[0].get_int()];\n+            if (!pindexStart) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+            }\n         }\n-        else if (pindexStop->nHeight < pindexStart->nHeight) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+\n+        if (!request.params[1].isNull()) {\n+            pindexStop = chainActive[request.params[1].get_int()];\n+            if (!pindexStop) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+            }\n+            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+            }\n         }\n     }\n \n     // We can't rescan beyond non-pruned blocks, stop and throw an error\n     if (fPruneMode) {\n-        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 52,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "eba53080666402bba2efe4a430bde2b824edef9d",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right!\r\nFixed by adding a `cs_main` lock for this block (only occurs for pruned peers).",
    "created_at": "2017-12-15T22:02:27Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3435,
    "side": "RIGHT",
    "in_reply_to_id": 157283067
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356351",
    "pull_request_review_id": 83988701,
    "id": 157356351,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzM1NjM1MQ==",
    "diff_hunk": "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+    explicit WalletRescanReserver(CWalletRef w): m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve() {",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 22,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e56aa6ce6b25becf1005d219b056d34c86347372",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, `{` in new line.",
    "created_at": "2017-12-17T02:36:50Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356351",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356351"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356351"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1232,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356354",
    "pull_request_review_id": 83988701,
    "id": 157356354,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzM1NjM1NA==",
    "diff_hunk": "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+    explicit WalletRescanReserver(CWalletRef w): m_wallet(w), m_could_reserve(false) {}",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 20,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e56aa6ce6b25becf1005d219b056d34c86347372",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, missing space before `:`.",
    "created_at": "2017-12-17T02:37:06Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356354",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356354"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356354"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1230,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356359",
    "pull_request_review_id": 83988701,
    "id": 157356359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzM1NjM1OQ==",
    "diff_hunk": "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 18,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e56aa6ce6b25becf1005d219b056d34c86347372",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make these private?",
    "created_at": "2017-12-17T02:37:27Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1274,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356413",
    "pull_request_review_id": 83988701,
    "id": 157356413,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzM1NjQxMw==",
    "diff_hunk": "@@ -656,6 +656,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;\n+    std::mutex mutexScanning;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 4,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e56aa6ce6b25becf1005d219b056d34c86347372",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why the mutex when `fScanningWallet` is `std::atomic`? Could use `std::atomic<bool>::compare_exchange_strong`?",
    "created_at": "2017-12-17T02:42:46Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356413",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356413"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356413"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 673,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903189",
    "pull_request_review_id": 84624142,
    "id": 157903189,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzkwMzE4OQ==",
    "diff_hunk": "@@ -656,6 +656,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;\n+    std::mutex mutexScanning;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 4,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e56aa6ce6b25becf1005d219b056d34c86347372",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. Maybe. But lets keep this for now.",
    "created_at": "2017-12-19T23:26:54Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157903189",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903189"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157903189"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 673,
    "side": "RIGHT",
    "in_reply_to_id": 157356413
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906537",
    "pull_request_review_id": 84628059,
    "id": 157906537,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzkwNjUzNw==",
    "diff_hunk": "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@sipa that is already possible: `importprivkey rescan=false` followed by `rescanblockchain`.",
    "created_at": "2017-12-19T23:51:23Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906537",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906537"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906537"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 157300953
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906752",
    "pull_request_review_id": 84628321,
    "id": 157906752,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzkwNjc1Mg==",
    "diff_hunk": "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": 87,
    "original_position": 47,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "chainActive.",
    "created_at": "2017-12-19T23:53:04Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906752",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906752"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906752"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1694,
    "original_line": 1694,
    "side": "RIGHT",
    "in_reply_to_id": 138224114
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908101",
    "pull_request_review_id": 84629976,
    "id": 157908101,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzkwODEwMQ==",
    "diff_hunk": "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@promag If you sent rescan to false you're taking that risk yourself obviously. My point is that if you do request a rescan, there is a reasonable expectation to not see inconsistent results.",
    "created_at": "2017-12-20T00:03:42Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908101",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908101"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908101"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 157300953
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908983",
    "pull_request_review_id": 84631077,
    "id": 157908983,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzkwODk4Mw==",
    "diff_hunk": "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah I know, there is also reasonable expectation to have the RPC responsive \ud83d\ude04 ",
    "created_at": "2017-12-20T00:10:06Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908983",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908983"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908983"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 157300953
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157909476",
    "pull_request_review_id": 84631656,
    "id": 157909476,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzkwOTQ3Ng==",
    "diff_hunk": "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The same happens in `importmulti`, where the locks are held only when importing the keys.",
    "created_at": "2017-12-20T00:14:03Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157909476",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157909476"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157909476"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157909476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT",
    "in_reply_to_id": 157300953
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158206569",
    "pull_request_review_id": 84978600,
    "id": 158206569,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODIwNjU2OQ==",
    "diff_hunk": "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 18,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e56aa6ce6b25becf1005d219b056d34c86347372",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2017-12-21T06:47:10Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r158206569",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158206569"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r158206569"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158206569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1274,
    "side": "RIGHT",
    "in_reply_to_id": 157356359
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389155",
    "pull_request_review_id": 87495542,
    "id": 160389155,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM4OTE1NQ==",
    "diff_hunk": "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 54,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`return m_could_reserve` is enough? `WalletRescanReserver` is the \"owner.",
    "created_at": "2018-01-09T12:06:31Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389155",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389155"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389155"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1293,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389240",
    "pull_request_review_id": 87495542,
    "id": 160389240,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM4OTI0MA==",
    "diff_hunk": "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 44,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add `assert(!m_could_reserve);`.",
    "created_at": "2018-01-09T12:06:59Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389240",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389240"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389240"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1282,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391530",
    "pull_request_review_id": 87495542,
    "id": 160391530,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM5MTUzMA==",
    "diff_hunk": "@@ -1639,37 +1640,53 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Remove, since reserver already set `fScanningWallet` to true.\r\n  ",
    "created_at": "2018-01-09T12:19:32Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391530",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391530"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391530"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1666,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391901",
    "pull_request_review_id": 87495542,
    "id": 160391901,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM5MTkwMQ==",
    "diff_hunk": "@@ -1639,37 +1640,53 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should also remove `fScanningWallet = false` at the end?",
    "created_at": "2018-01-09T12:21:26Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391901",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391901"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391901"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1666,
    "side": "RIGHT",
    "in_reply_to_id": 160391530
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160392235",
    "pull_request_review_id": 87495542,
    "id": 160392235,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM5MjIzNQ==",
    "diff_hunk": "@@ -656,6 +657,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 11,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add a comment saying this is controlled by `WalletRescanReserver`.",
    "created_at": "2018-01-09T12:23:10Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160392235",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160392235"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160392235"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160392235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 672,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161081512",
    "pull_request_review_id": 88313390,
    "id": 161081512,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTA4MTUxMg==",
    "diff_hunk": "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 83,
    "original_position": 83,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b5aaefb2d52ff0f81619147e949f5472501c8db9",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line didn't make it into the new rebase, I believe.",
    "created_at": "2018-01-11T21:33:17Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161081512",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161081512"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161081512"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161081512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 153,
    "original_line": 153,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161105331",
    "pull_request_review_id": 88341191,
    "id": 161105331,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTEwNTMzMQ==",
    "diff_hunk": "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 83,
    "original_position": 83,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b5aaefb2d52ff0f81619147e949f5472501c8db9",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh. Yes. Thanks Will fix",
    "created_at": "2018-01-11T23:30:38Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161105331",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161105331"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161105331"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161105331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 153,
    "original_line": 153,
    "side": "LEFT",
    "in_reply_to_id": 161081512
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161147840",
    "pull_request_review_id": 88388297,
    "id": 161147840,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTE0Nzg0MA==",
    "diff_hunk": "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 83,
    "original_position": 83,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b5aaefb2d52ff0f81619147e949f5472501c8db9",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2018-01-12T06:21:55Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161147840",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161147840"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161147840"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161147840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 153,
    "original_line": 153,
    "side": "LEFT",
    "in_reply_to_id": 161081512
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406332",
    "pull_request_review_id": 88690948,
    "id": 161406332,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTQwNjMzMg==",
    "diff_hunk": "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 83,
    "original_position": 83,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b5aaefb2d52ff0f81619147e949f5472501c8db9",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Why'd you move it up in the function instead of keeping its position?",
    "created_at": "2018-01-14T18:45:29Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406332",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406332"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406332"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 153,
    "original_line": 153,
    "side": "LEFT",
    "in_reply_to_id": 161081512
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406849",
    "pull_request_review_id": 88691465,
    "id": 161406849,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTQwNjg0OQ==",
    "diff_hunk": "@@ -3430,21 +3440,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n-    if (!stopBlock) {\n-        if (pwallet->IsAbortingRescan()) {\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+    CBlockIndex *stopBlock = nullptr;\n+    {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: why scope this? There's no lock to scope, could you not just leave this as-is and only change the chainActive.Tip() call?",
    "created_at": "2018-01-14T19:05:29Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406849",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406849"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406849"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3444,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406956",
    "pull_request_review_id": 88691465,
    "id": 161406956,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTQwNjk1Ng==",
    "diff_hunk": "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
    "path": "src/wallet/wallet.cpp",
    "position": 65,
    "original_position": 50,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not changed in this PR, but it may be nice (here or in a follow-up before we start showing rescan as a progress bar in more places) to not use the tip here and instead use pindexStop. It makes sense to always give progress towards tip if there are (potentially) API clients which are calling with a stop a ways back from our tip.",
    "created_at": "2018-01-14T19:10:44Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406956",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406956"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406956"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1674,
    "original_line": 1674,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407018",
    "pull_request_review_id": 88691465,
    "id": 161407018,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTQwNzAxOA==",
    "diff_hunk": "@@ -1683,7 +1704,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (tip != chainActive.Tip()) {\n+                    tip = chainActive.Tip();",
    "path": "src/wallet/wallet.cpp",
    "position": 106,
    "original_position": 87,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same goes for here - while this check makes the behavior not change, I'm not sure the current behavior is exactly optimal...we scan until pindexStop, *not* chainActive.Tip().",
    "created_at": "2018-01-14T19:13:52Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407018",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407018"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407018"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1714,
    "original_line": 1714,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407220",
    "pull_request_review_id": 88691465,
    "id": 161407220,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTQwNzIyMA==",
    "diff_hunk": "@@ -86,7 +86,8 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n-            \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n+            \"\\nNote: This call can take minutes to complete if rescan is true, during that time, other rpc calls\\n\"\n+            \"may report that the imported key exists but related transactions are still missing.\\n\"",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "0dad810adeb3bbb6a60b722240ee2b90136e8384",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You should probably add a \", leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes\" to the warning message.",
    "created_at": "2018-01-14T19:22:34Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407220",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407220"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407220"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 90,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602498",
    "pull_request_review_id": 88918188,
    "id": 161602498,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwMjQ5OA==",
    "diff_hunk": "@@ -3430,21 +3440,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n-    if (!stopBlock) {\n-        if (pwallet->IsAbortingRescan()) {\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+    CBlockIndex *stopBlock = nullptr;\n+    {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right... fixing.",
    "created_at": "2018-01-15T19:46:02Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602498",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602498"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602498"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3444,
    "side": "RIGHT",
    "in_reply_to_id": 161406849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602585",
    "pull_request_review_id": 88918284,
    "id": 161602585,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwMjU4NQ==",
    "diff_hunk": "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
    "path": "src/wallet/wallet.cpp",
    "position": 65,
    "original_position": 50,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Lets leave this open for a possible followup PR (out of scope here)",
    "created_at": "2018-01-15T19:46:27Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602585",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602585"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602585"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1674,
    "original_line": 1674,
    "side": "RIGHT",
    "in_reply_to_id": 161406956
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161604900",
    "pull_request_review_id": 88920866,
    "id": 161604900,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwNDkwMA==",
    "diff_hunk": "@@ -86,7 +86,8 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n-            \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n+            \"\\nNote: This call can take minutes to complete if rescan is true, during that time, other rpc calls\\n\"\n+            \"may report that the imported key exists but related transactions are still missing.\\n\"",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "0dad810adeb3bbb6a60b722240ee2b90136e8384",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed by adding @TheBlueMatt's proposed sentence-part.",
    "created_at": "2018-01-15T19:58:35Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161604900",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161604900"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161604900"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161604900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 90,
    "side": "RIGHT",
    "in_reply_to_id": 161407220
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605450",
    "pull_request_review_id": 88921536,
    "id": 161605450,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwNTQ1MA==",
    "diff_hunk": "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 54,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's better for future changes to keep the check here... don't hurt but may protect from a future mistake.",
    "created_at": "2018-01-15T20:02:06Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605450",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605450"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605450"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1293,
    "side": "RIGHT",
    "in_reply_to_id": 160389155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605453",
    "pull_request_review_id": 88921541,
    "id": 161605453,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwNTQ1Mw==",
    "diff_hunk": "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 44,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added",
    "created_at": "2018-01-15T20:02:09Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605453",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605453"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605453"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1282,
    "side": "RIGHT",
    "in_reply_to_id": 160389240
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605590",
    "pull_request_review_id": 88921691,
    "id": 161605590,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwNTU5MA==",
    "diff_hunk": "@@ -656,6 +657,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 11,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not really controlled by `WalletRescanReserver`. This was added before and `ScanForWalletTransactions` sets it to `true`.",
    "created_at": "2018-01-15T20:02:56Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605590",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605590"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605590"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 672,
    "side": "RIGHT",
    "in_reply_to_id": 160392235
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606282",
    "pull_request_review_id": 88922469,
    "id": 161606282,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwNjI4Mg==",
    "diff_hunk": "@@ -3430,21 +3440,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n-    if (!stopBlock) {\n-        if (pwallet->IsAbortingRescan()) {\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+    CBlockIndex *stopBlock = nullptr;\n+    {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Your right,.. removed the unnecessary scope.",
    "created_at": "2018-01-15T20:07:13Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606282",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606282"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606282"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3444,
    "side": "RIGHT",
    "in_reply_to_id": 161406849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606416",
    "pull_request_review_id": 88922628,
    "id": 161606416,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYwNjQxNg==",
    "diff_hunk": "@@ -1639,37 +1640,53 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah. I see your point. Removed those sets and mentioned that `fScanningWallet` is controlled by `WalletRescanReserver`.",
    "created_at": "2018-01-15T20:07:58Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606416",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606416"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606416"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1666,
    "side": "RIGHT",
    "in_reply_to_id": 160391530
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061186",
    "pull_request_review_id": 90617498,
    "id": 163061186,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzA2MTE4Ng==",
    "diff_hunk": "@@ -3436,15 +3446,14 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n         }\n         // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n-        stopBlock = pindexStop ? pindexStop : chainActive.Tip();\n+        stopBlock = pindexStop ? pindexStop : pChainTip;\n     }\n     else {\n         throw JSONRPCError(RPC_MISC_ERROR, \"Rescan failed. Potentially corrupted data files.\");\n     }\n-\n     UniValue response(UniValue::VOBJ);\n     response.pushKV(\"start_height\", pindexStart->nHeight);\n-    response.pushKV(\"stop_height\", stopBlock->nHeight);\n+    response.pushKV(\"stop_height\", stopBlock ? stopBlock->nHeight : 0);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Avoid permanent cs_main\"\r\n\r\nStrange that this line is changing while the line above isn't. Seems impossible for pindexStart or stopBlock to be null, and odd to be adding a check now only for stopBlock.",
    "created_at": "2018-01-22T20:37:47Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061186",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061186"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061186"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3456,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061343",
    "pull_request_review_id": 90617498,
    "id": 163061343,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzA2MTM0Mw==",
    "diff_hunk": "@@ -1614,14 +1614,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  */\n int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n {\n-    AssertLockHeld(cs_main);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Avoid permanent cs_main\"\r\n\r\nCould this now assert lock not held, instead of not asserting at all?",
    "created_at": "2018-01-22T20:38:31Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061343",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061343"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061343"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1617,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163063324",
    "pull_request_review_id": 90617498,
    "id": 163063324,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzA2MzMyNA==",
    "diff_hunk": "@@ -1643,6 +1644,10 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.",
    "path": "src/wallet/wallet.cpp",
    "position": 35,
    "original_position": 28,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Avoid permanent cs_main\"\r\n\r\nI guess this sentence is added in response to: https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727, but I don't understand what it is saying. Since the lock is released, how is the caller supposed to \"make sure\" pindexStop is on the main chain when it may not be? Also, I think part of the comment \"after to the addition of any new keys you want to detect transactions for\" should be be removed, it doesn't seem to be adding any information, and not every caller is even adding keys (e.g. bestblock startup code).\r\n\r\nProbably this should just say that the rescan will abort if there is a reorg and scanning proceeded past the fork point on the wrong chain. Alternately, I don't think it would be hard to clean up this behavior by doing something like Cory suggested: https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139829712, but this could be saved for another PR.",
    "created_at": "2018-01-22T20:47:55Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163063324",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163063324"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163063324"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163063324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1650,
    "original_line": 1650,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163065916",
    "pull_request_review_id": 90617498,
    "id": 163065916,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzA2NTkxNg==",
    "diff_hunk": "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Avoid permanent cs_main\"\r\n\r\nSeems like cs_main only needs to be held for GuessVerificationProgress but not ShowProgress? Might be good to reduce lock scope more, or have comment if it can't be reduced.",
    "created_at": "2018-01-22T20:57:33Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163065916",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163065916"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163065916"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163065916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1680,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163070403",
    "pull_request_review_id": 90617498,
    "id": 163070403,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzA3MDQwMw==",
    "diff_hunk": "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n+            bool readRet = false;\n             CBlock block;\n-            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+            {\n+                LOCK(cs_main);\n+                readRet = ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n+            }\n+            if (readRet) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Avoid permanent cs_main\"\r\n\r\nBecause of the break here, the \"Returns null if scan was successful\" documentation is no longer correct. Would suggest changing so it's still easily possible to distinguish success from failure:\r\n\r\n```c++\r\nif (pindex && !chainActive.Contains(pindex)) {\r\n    ret = pIndex;\r\n    break;\r\n}\r\n \r\n```\r\n\r\nAlso, the reason for this check is obscure enough (https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155326447) that it I think it deserves some kind of comment. I would suggest something like \"Abort scan if current block is no longer active, to prevent marking transactions as coming from the wrong block.\"\r\n",
    "created_at": "2018-01-22T21:15:56Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163070403",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163070403"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163070403"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163070403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1697,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163078419",
    "pull_request_review_id": 90617498,
    "id": 163078419,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzA3ODQxOQ==",
    "diff_hunk": "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 54,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "b2cc7020956cfd36925e4957493cd28d1d6f672e",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Make sure WalletRescanReserver has successfully reserved\".\r\n\r\nAlternative could be to just `return m_could_reserve` and assert `!m_could_reserve || fScanningWallet`, so if there is a future mistake, it can be detected instead of papered over.\r\n\r\nAlso formatting here is inconsistent, opening brace for function goes on new line.\r\n\r\n",
    "created_at": "2018-01-22T21:48:11Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163078419",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163078419"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163078419"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163078419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1293,
    "side": "RIGHT",
    "in_reply_to_id": 160389155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163461397",
    "pull_request_review_id": 91073738,
    "id": 163461397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ2MTM5Nw==",
    "diff_hunk": "@@ -1614,14 +1614,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  */\n int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n {\n-    AssertLockHeld(cs_main);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think we should enforce *not* locking cs_main at this point.",
    "created_at": "2018-01-24T06:17:48Z",
    "updated_at": "2018-01-24T06:25:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163461397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163461397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163461397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163461397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1617,
    "side": "LEFT",
    "in_reply_to_id": 163061343
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462196",
    "pull_request_review_id": 91074627,
    "id": 163462196,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ2MjE5Ng==",
    "diff_hunk": "@@ -3436,15 +3446,14 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n         }\n         // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n-        stopBlock = pindexStop ? pindexStop : chainActive.Tip();\n+        stopBlock = pindexStop ? pindexStop : pChainTip;\n     }\n     else {\n         throw JSONRPCError(RPC_MISC_ERROR, \"Rescan failed. Potentially corrupted data files.\");\n     }\n-\n     UniValue response(UniValue::VOBJ);\n     response.pushKV(\"start_height\", pindexStart->nHeight);\n-    response.pushKV(\"stop_height\", stopBlock->nHeight);\n+    response.pushKV(\"stop_height\", stopBlock ? stopBlock->nHeight : 0);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. Your right. Fixed (removed the extra nullptr check).",
    "created_at": "2018-01-24T06:25:23Z",
    "updated_at": "2018-01-24T06:25:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462196",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462196"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462196"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3456,
    "side": "RIGHT",
    "in_reply_to_id": 163061186
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462299",
    "pull_request_review_id": 91074731,
    "id": 163462299,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ2MjI5OQ==",
    "diff_hunk": "@@ -1643,6 +1644,10 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.",
    "path": "src/wallet/wallet.cpp",
    "position": 35,
    "original_position": 28,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I keep that comment for now and leave it open for another PR. The comment was directly proposed (word by word) by @TheBlueMatt.",
    "created_at": "2018-01-24T06:26:08Z",
    "updated_at": "2018-01-24T06:26:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462299",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462299"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462299"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1650,
    "original_line": 1650,
    "side": "RIGHT",
    "in_reply_to_id": 163063324
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462322",
    "pull_request_review_id": 91074753,
    "id": 163462322,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ2MjMyMg==",
    "diff_hunk": "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good pont. Fixed.",
    "created_at": "2018-01-24T06:26:18Z",
    "updated_at": "2018-01-24T06:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462322",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462322"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462322"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1680,
    "side": "RIGHT",
    "in_reply_to_id": 163065916
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462541",
    "pull_request_review_id": 91075014,
    "id": 163462541,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ2MjU0MQ==",
    "diff_hunk": "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n+            bool readRet = false;\n             CBlock block;\n-            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+            {\n+                LOCK(cs_main);\n+                readRet = ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n+            }\n+            if (readRet) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "48a57eba3447f79672b2c12f1605b3a10becff33",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice catch! Thanks. Fixed.",
    "created_at": "2018-01-24T06:28:26Z",
    "updated_at": "2018-01-24T06:28:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462541",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462541"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462541"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1697,
    "side": "RIGHT",
    "in_reply_to_id": 163070403
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163494846",
    "pull_request_review_id": 91113017,
    "id": 163494846,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ5NDg0Ng==",
    "diff_hunk": "@@ -1263,4 +1267,39 @@ CTxDestination GetDestinationForKey(const CPubKey& key, OutputType);\n /** Get all destinations (potentially) supported by the wallet for the given key. */\n std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key);\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        assert(!m_could_reserve);\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const\n+    {\n+        return (m_could_reserve && m_wallet->fScanningWallet);\n+    }\n+\n+    ~WalletRescanReserver()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);",
    "path": "src/wallet/wallet.h",
    "position": 63,
    "original_position": 63,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Lock inside `if`.",
    "created_at": "2018-01-24T09:38:26Z",
    "updated_at": "2018-01-24T11:06:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163494846",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163494846"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163494846"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163494846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1298,
    "original_line": 1298,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163496905",
    "pull_request_review_id": 91113017,
    "id": 163496905,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ5NjkwNQ==",
    "diff_hunk": "@@ -1263,4 +1267,39 @@ CTxDestination GetDestinationForKey(const CPubKey& key, OutputType);\n /** Get all destinations (potentially) supported by the wallet for the given key. */\n std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key);\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        assert(!m_could_reserve);\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const\n+    {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
    "path": "src/wallet/wallet.h",
    "position": 58,
    "original_position": 58,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just `return m_could_reserve;`?",
    "created_at": "2018-01-24T09:46:50Z",
    "updated_at": "2018-01-24T11:06:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163496905",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163496905"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163496905"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163496905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1293,
    "original_line": 1293,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163497435",
    "pull_request_review_id": 91113017,
    "id": 163497435,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQ5NzQzNQ==",
    "diff_hunk": "@@ -668,7 +669,10 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n private:\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n-    std::atomic<bool> fScanningWallet;\n+    std::atomic<bool> fScanningWallet; //controlled by WalletRescanReserver",
    "path": "src/wallet/wallet.h",
    "position": 13,
    "original_position": 13,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since it's guarded by `mutexScanning`, drop `std::atomic`?",
    "created_at": "2018-01-24T09:48:59Z",
    "updated_at": "2018-01-24T11:06:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163497435",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163497435"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163497435"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163497435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 672,
    "original_line": 672,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163501235",
    "pull_request_review_id": 91113017,
    "id": 163501235,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzUwMTIzNQ==",
    "diff_hunk": "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)",
    "path": "src/wallet/wallet.cpp",
    "position": 38,
    "original_position": 38,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, space `WalletRescanReserver& reserver`.",
    "created_at": "2018-01-24T10:02:51Z",
    "updated_at": "2018-01-24T11:06:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163501235",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163501235"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163501235"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163501235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1652,
    "original_line": 1652,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163503788",
    "pull_request_review_id": 91113017,
    "id": 163503788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzUwMzc4OA==",
    "diff_hunk": "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
    "path": "src/wallet/wallet.cpp",
    "position": 65,
    "original_position": 50,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree with @TheBlueMatt, the *follow the tip thing* could be elsewhere (another PR).\r\n\r\n@TheBlueMatt do you suggest to rescan up to pIndexStop even if at some point a block is no longer in the active chain?",
    "created_at": "2018-01-24T10:13:28Z",
    "updated_at": "2018-01-24T11:06:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163503788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163503788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163503788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163503788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1674,
    "original_line": 1674,
    "side": "RIGHT",
    "in_reply_to_id": 161406956
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163937257",
    "pull_request_review_id": 91634643,
    "id": 163937257,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzkzNzI1Nw==",
    "diff_hunk": "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n-        fScanningWallet = true;\n-\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                double gvp = 0;\n+                {\n+                    LOCK(cs_main);",
    "path": "src/wallet/wallet.cpp",
    "position": 74,
    "original_position": 74,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jonasschnelli, is this lock necessary? It seems like either this should be removed, or else a lock needs to be added below at line 1721 (https://github.com/bitcoin/bitcoin/pull/11281/files#diff-b2bb174788c7409b671c46ccc86034bdR1721) if cs_main is required to call GuessVerificationProgress.",
    "created_at": "2018-01-25T19:01:52Z",
    "updated_at": "2018-01-25T19:01:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163937257",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163937257"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163937257"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163937257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1681,
    "original_line": 1681,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163947997",
    "pull_request_review_id": 91647472,
    "id": 163947997,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzk0Nzk5Nw==",
    "diff_hunk": "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n-        fScanningWallet = true;\n-\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                double gvp = 0;\n+                {\n+                    LOCK(cs_main);",
    "path": "src/wallet/wallet.cpp",
    "position": 74,
    "original_position": 74,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think GVP needs cs_main (@TheBlueMatt?), so, yes, your right, L1721 should also have one... working on a fixup.",
    "created_at": "2018-01-25T19:43:39Z",
    "updated_at": "2018-01-25T19:43:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163947997",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163947997"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163947997"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163947997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1681,
    "original_line": 1681,
    "side": "RIGHT",
    "in_reply_to_id": 163937257
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163948323",
    "pull_request_review_id": 91647861,
    "id": 163948323,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzk0ODMyMw==",
    "diff_hunk": "@@ -1683,14 +1707,20 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 104,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think there is still a bug here where scan will return success (`nullptr`) if it gets aborted due to a reorg.\r\n\r\nMaybe this line:\r\n\r\n```c++\r\npindex = chainActive.Next(pindex);\r\n```\r\n\r\nshould be changed to something like:\r\n\r\n```c++\r\nif (CBlockIndex* new_index = chainActive.Next(pindex)) {\r\n    pindex = new_index;\r\n} else {\r\n    /* aborting, reorg */\r\n    ret = pindex;\r\n    break;\r\n}\r\n```\r\n\r\nAnother alternative could be to resume instead of aborting on reorgs.",
    "created_at": "2018-01-25T19:44:54Z",
    "updated_at": "2018-01-25T19:44:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163948323",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163948323"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163948323"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163948323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163949348",
    "pull_request_review_id": 91649090,
    "id": 163949348,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzk0OTM0OA==",
    "diff_hunk": "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n-        fScanningWallet = true;\n-\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                double gvp = 0;\n+                {\n+                    LOCK(cs_main);",
    "path": "src/wallet/wallet.cpp",
    "position": 74,
    "original_position": 74,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Great, thanks for addressing this.\r\n\r\n> I think GVP needs cs_main\r\n\r\nI was curious about this. It would be good for GuessVerificationProgress comment to mention that it needs cs_main, since it isn't really obvious one way or the other.",
    "created_at": "2018-01-25T19:48:51Z",
    "updated_at": "2018-01-25T19:48:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163949348",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163949348"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163949348"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163949348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1681,
    "original_line": 1681,
    "side": "RIGHT",
    "in_reply_to_id": 163937257
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163954610",
    "pull_request_review_id": 91655215,
    "id": 163954610,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzk1NDYxMA==",
    "diff_hunk": "@@ -1683,14 +1707,20 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 104,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> should be changed to something like:\r\n\r\nI think my suggestion above won't work because it will return an error when pindex points to the the tip. Maybe simplest fix would be to restructure the code a little to just acquire cs_main once after ReadBlockFromDisk instead of acquiring, releasing, then immediately re-acquiring. That way there is would be no chance of reorg between the `chainActive.Contains` check above and this `chainActive.Next` call.\r\n",
    "created_at": "2018-01-25T20:09:22Z",
    "updated_at": "2018-01-25T20:09:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163954610",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163954610"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163954610"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163954610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 163948323
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164138244",
    "pull_request_review_id": 91869644,
    "id": 164138244,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDEzODI0NA==",
    "diff_hunk": "@@ -1683,14 +1707,20 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
    "path": "src/wallet/wallet.cpp",
    "position": 104,
    "original_position": 104,
    "commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "original_commit_id": "7f812502b78b76653bbef19169e8a05873ee3b8d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I think there is still a bug here where scan will return success\r\n\r\nSorry for the churn, but I no longer think there's a bug here. Opened #12275 to try to clarify the return value.",
    "created_at": "2018-01-26T15:22:48Z",
    "updated_at": "2018-01-26T15:22:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r164138244",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164138244"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r164138244"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164138244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1712,
    "original_line": 1712,
    "side": "RIGHT",
    "in_reply_to_id": 163948323
  }
]