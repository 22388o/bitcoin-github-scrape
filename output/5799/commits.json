[
  {
    "sha": "e5ece053da705a630bb664e16036299915ac1246",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWVjZTA1M2RhNzA1YTYzMGJiNjY0ZTE2MDM2Mjk5OTE1YWMxMjQ2",
    "commit": {
      "author": {
        "name": "Shaul Kfir",
        "email": "shaul.kfir@gmail.com",
        "date": "2015-02-17T13:46:51Z"
      },
      "committer": {
        "name": "Shaul Kfir",
        "email": "shaul.kfir@gmail.com",
        "date": "2015-02-17T13:46:51Z"
      },
      "message": "Rename Interval() to DifficultyAdjustmentInterval()",
      "tree": {
        "sha": "532f7872bc94d87796ddb5143cf34b5fdf789c4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/532f7872bc94d87796ddb5143cf34b5fdf789c4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5ece053da705a630bb664e16036299915ac1246",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5ece053da705a630bb664e16036299915ac1246",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5ece053da705a630bb664e16036299915ac1246",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5ece053da705a630bb664e16036299915ac1246/comments",
    "author": {
      "login": "shaulkf",
      "id": 4781551,
      "node_id": "MDQ6VXNlcjQ3ODE1NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4781551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaulkf",
      "html_url": "https://github.com/shaulkf",
      "followers_url": "https://api.github.com/users/shaulkf/followers",
      "following_url": "https://api.github.com/users/shaulkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaulkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaulkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaulkf/subscriptions",
      "organizations_url": "https://api.github.com/users/shaulkf/orgs",
      "repos_url": "https://api.github.com/users/shaulkf/repos",
      "events_url": "https://api.github.com/users/shaulkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaulkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shaulkf",
      "id": 4781551,
      "node_id": "MDQ6VXNlcjQ3ODE1NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4781551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaulkf",
      "html_url": "https://github.com/shaulkf",
      "followers_url": "https://api.github.com/users/shaulkf/followers",
      "following_url": "https://api.github.com/users/shaulkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaulkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaulkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaulkf/subscriptions",
      "organizations_url": "https://api.github.com/users/shaulkf/orgs",
      "repos_url": "https://api.github.com/users/shaulkf/repos",
      "events_url": "https://api.github.com/users/shaulkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaulkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "175d86e633bedcfb642fb326f1ec0b43c14c4f3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/175d86e633bedcfb642fb326f1ec0b43c14c4f3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/175d86e633bedcfb642fb326f1ec0b43c14c4f3b"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "86b84df6677f7ecbbe8f1a852b884a305216a2c0",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5ece053da705a630bb664e16036299915ac1246/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5ece053da705a630bb664e16036299915ac1246/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=e5ece053da705a630bb664e16036299915ac1246",
        "patch": "@@ -68,7 +68,7 @@ class CChainParams\n     bool RequireStandard() const { return fRequireStandard; }\n     int64_t TargetTimespan() const { return nTargetTimespan; }\n     int64_t TargetSpacing() const { return nTargetSpacing; }\n-    int64_t Interval() const { return nTargetTimespan / nTargetSpacing; }\n+    int64_t DifficultyAdjustmentInterval() const { return nTargetTimespan / nTargetSpacing; }\n     /** Make miner stop after a block is found. In RPC, don't return until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     /** In the future use NetworkIDString() for RPC fields */"
      },
      {
        "sha": "6dd5c4c12c76806e766a3a358aec52778c1b1f49",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5ece053da705a630bb664e16036299915ac1246/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5ece053da705a630bb664e16036299915ac1246/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=e5ece053da705a630bb664e16036299915ac1246",
        "patch": "@@ -20,8 +20,8 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     if (pindexLast == NULL)\n         return nProofOfWorkLimit;\n \n-    // Only change once per interval\n-    if ((pindexLast->nHeight+1) % Params().Interval() != 0)\n+    // Only change once per difficulty adjustment interval\n+    if ((pindexLast->nHeight+1) % Params().DifficultyAdjustmentInterval() != 0)\n     {\n         if (Params().AllowMinDifficultyBlocks())\n         {\n@@ -34,7 +34,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n             {\n                 // Return the last non-special-min-difficulty-rules-block\n                 const CBlockIndex* pindex = pindexLast;\n-                while (pindex->pprev && pindex->nHeight % Params().Interval() != 0 && pindex->nBits == nProofOfWorkLimit)\n+                while (pindex->pprev && pindex->nHeight % Params().DifficultyAdjustmentInterval() != 0 && pindex->nBits == nProofOfWorkLimit)\n                     pindex = pindex->pprev;\n                 return pindex->nBits;\n             }\n@@ -44,7 +44,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n     // Go back by what we want to be 14 days worth of blocks\n     const CBlockIndex* pindexFirst = pindexLast;\n-    for (int i = 0; pindexFirst && i < Params().Interval()-1; i++)\n+    for (int i = 0; pindexFirst && i < Params().DifficultyAdjustmentInterval()-1; i++)\n         pindexFirst = pindexFirst->pprev;\n     assert(pindexFirst);\n "
      },
      {
        "sha": "165a9df697d6daef2492ada5417226808b7149a6",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5ece053da705a630bb664e16036299915ac1246/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5ece053da705a630bb664e16036299915ac1246/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=e5ece053da705a630bb664e16036299915ac1246",
        "patch": "@@ -44,7 +44,7 @@ Value GetNetworkHashPS(int lookup, int height) {\n \n     // If lookup is -1, then use blocks since last difficulty change.\n     if (lookup <= 0)\n-        lookup = pb->nHeight % Params().Interval() + 1;\n+        lookup = pb->nHeight % Params().DifficultyAdjustmentInterval() + 1;\n \n     // If lookup is larger than chain, then set it to chain length.\n     if (lookup > pb->nHeight)"
      }
    ]
  }
]