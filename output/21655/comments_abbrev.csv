DrahtBot,2021-04-11 15:21:04,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21654 (build, qt: Make Qt rcc output always deterministic by hebasto)\n\nIf you consider this pull request important, ple",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-817324916,817324916,
hebasto,2021-04-11 16:24:17,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nd81dbbdc6efeb1af17dd57a2d94104203904104989f4c4adda9275b43018eb05  guix-build-c799a19b4bb8/output/aarch64-linux-gnu/bitcoin-c799a19b4bb8-aarch64-linux-gnu-debug.tar.gz\n058b48c0b0b3fd899eec3ea87404a9197735bae7c6506bd325a88490de98b52e  guix-build-c799a1",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-817333635,817333635,
hebasto,2021-04-11 19:20:32,"#### Gitian builds:\n- Linux\n```\nGenerating report\na76307460204682fc86b93e1971a4fd64b06725e1bee918b04a50be0efc0332c  bitcoin-c799a19b4bb8-aarch64-linux-gnu-debug.tar.gz\nea1387d9a5aa29b1fd2a31fc189a015b34da3fd4668c5d3ae6fc3411c129abcc  bitcoin-c799a19b4bb8-aarch64-linux-gnu.tar.gz\n57470f5b72fd6e44a32197732abdefcecea660366a9e8f82d3dc4fba134747d2  bitcoin-c799a19b4bb8-arm-linux-gnueabihf-d",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-817358639,817358639,
fanquake,2021-04-14 02:58:12,"Concept ACK - given the builds look deterministic.\n\nI think the PR description could do a slightly better job of explaining why this is no longer needed. Looking at the source for the 5.12 branch, `QT_RCC_TEST` is still used in multiple places. It isn't fully removed until commits [300bd7fff8b25bfbdb025315331e5733c3346d98](https://github.com/qt/qtbase/commit/300bd7fff8b25bfbdb025315331e5733c33",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-819192767,819192767,
hebasto,2021-04-14 06:27:32,"@fanquake \n> ... `QT_RCC_TEST` is still used in multiple places. It isn't fully removed until commits [300bd7fff8b25bfbdb025315331e5733c3346d98](https://github.com/qt/qtbase/commit/300bd7fff8b25bfbdb025315331e5733c3346d98) and [f96244f614894b19e5964925db963aeb56e16bdd](https://github.com/qt/qtbase/commit/f96244f614894b19e5964925db963aeb56e16bdd).\n\nThe commits you mentioned are cleanups after",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-819263896,819263896,
hebasto,2021-04-14 06:37:37,"> I think the PR description could do a slightly better job of explaining why this is no longer needed.\n\nDone.",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-819268709,819268709,
fanquake,2021-04-15 01:10:10,"> The commits you mentioned are cleanups after the behavior change commit mentioned in the OP.\n\nI realise. However that isn't immediately obvious to reviewers, especially not from the original PR description or by looking at the [linked commit](https://github.com/qt/qtbase/commit/5283a6c87beac5a43f612786fefd6e43f2c70bf6). \n\nWhen reviewing a change like this, the first thing someone might d",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-819947684,819947684,
hebasto,2021-04-15 06:22:41,"> When reviewing a change like this, the first thing someone might do is go and grep the upstream source for `QT_RCC_TEST`.\n\nI'd suggest to start ab ovo :)\n\nWhen using of `QT_RCC_TEST` was introduced as a workaround\nhttps://github.com/bitcoin/bitcoin/blob/65615a3a784c01128b408a915ab375c35640fb0a/contrib/gitian-descriptors/gitian-win.yml#L39-L46\nit was clearly stated the `QHash` is the ",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-820149349,820149349,
fanquake,2021-04-15 06:46:16,"> I'd suggest to start ab ovo :)\n> it was clearly stated the QHash \n\nYes, stated 7 years ago, in a comment that has since been deleted from our own source code. I'd hardly use that as the source of truth for how Qts codebase or tooling works _now_, so would need to look upstream to verify comments like that anyways.\n\nMy point here is that you can be more verbose with details, and provide",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-820162156,820162156,
hebasto,2021-04-15 08:11:55,"> My point here is that you can be more verbose with details, and provide as much information as possible when opening a PR. Not only does that potentially lower the bar for others to review, but no one is going to complain that your PR descriptions are too verbose, or explain changes too well.\n\nAgree. Does the current PR description require more info?",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-820218673,820218673,
DrahtBot,2021-04-15 20:30:36,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 773f8c1a7d568012768e16d2ede65b5d4d62aced<br>(master) | commit 81437b3e99029f3b869ec0bd04827b09c87d7df7<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`5eb1a0bc43a5fd81...`](https://drahtbot.space/gitian/bitcoin/bitcoin/773f8c1a7d568012768e16d2ede65b5d4d62aced/bitcoin-773f8c1a7d56-aarch64-l,https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-820711521,820711521,
laanwj,2021-04-21 13:01:36,"Posthumous ACKâ€”glad to see this override gone, and Qt upstream taking build determinism seriously.",https://github.com/bitcoin/bitcoin/pull/21655#issuecomment-824041239,824041239,
