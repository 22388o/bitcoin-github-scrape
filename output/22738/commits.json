[
  {
    "sha": "646b3885f795c640a2ac979362c509c4a8ee592a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDZiMzg4NWY3OTVjNjQwYTJhYzk3OTM2MmM1MDljNGE4ZWU1OTJh",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-08-18T15:23:26Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-08-23T16:11:37Z"
      },
      "message": "test: refactor: use named args for block_submit in feature_nulldummy.py",
      "tree": {
        "sha": "065a9757ee7d5b702006bfa3961fee01cf7f3081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/065a9757ee7d5b702006bfa3961fee01cf7f3081"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/646b3885f795c640a2ac979362c509c4a8ee592a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/646b3885f795c640a2ac979362c509c4a8ee592a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/646b3885f795c640a2ac979362c509c4a8ee592a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/646b3885f795c640a2ac979362c509c4a8ee592a/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6f7a12462b381945b1cb9bcb94b129d8fb7e289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6f7a12462b381945b1cb9bcb94b129d8fb7e289",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6f7a12462b381945b1cb9bcb94b129d8fb7e289"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 13,
      "deletions": 9
    },
    "files": [
      {
        "sha": "0f2d47f4b1e29c1be50f660f057329b9e0df5d28",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/646b3885f795c640a2ac979362c509c4a8ee592a/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/646b3885f795c640a2ac979362c509c4a8ee592a/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=646b3885f795c640a2ac979362c509c4a8ee592a",
        "patch": "@@ -24,7 +24,10 @@\n from test_framework.messages import CTransaction\n from test_framework.script import CScript\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n \n NULLDUMMY_ERROR = \"non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero)\"\n \n@@ -86,36 +89,36 @@ def run_test(self):\n         txid2 = self.nodes[0].sendrawtransaction(test1txs[1].serialize_with_witness().hex(), 0)\n         test1txs.append(create_transaction(self.nodes[0], coinbase_txid[1], self.wit_ms_address, amount=49))\n         txid3 = self.nodes[0].sendrawtransaction(test1txs[2].serialize_with_witness().hex(), 0)\n-        self.block_submit(self.nodes[0], test1txs, False, True)\n+        self.block_submit(self.nodes[0], test1txs, accept=True)\n \n         self.log.info(\"Test 2: Non-NULLDUMMY base multisig transaction should not be accepted to mempool before activation\")\n         test2tx = create_transaction(self.nodes[0], txid2, self.ms_address, amount=47)\n         trueDummy(test2tx)\n         assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test2tx.serialize_with_witness().hex(), 0)\n \n         self.log.info(f\"Test 3: Non-NULLDUMMY base transactions should be accepted in a block before activation [{COINBASE_MATURITY + 4}]\")\n-        self.block_submit(self.nodes[0], [test2tx], False, True)\n+        self.block_submit(self.nodes[0], [test2tx], accept=True)\n \n         self.log.info(\"Test 4: Non-NULLDUMMY base multisig transaction is invalid after activation\")\n         test4tx = create_transaction(self.nodes[0], test2tx.hash, self.address, amount=46)\n         test6txs = [CTransaction(test4tx)]\n         trueDummy(test4tx)\n         assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test4tx.serialize_with_witness().hex(), 0)\n-        self.block_submit(self.nodes[0], [test4tx])\n+        self.block_submit(self.nodes[0], [test4tx], accept=False)\n \n         self.log.info(\"Test 5: Non-NULLDUMMY P2WSH multisig transaction invalid after activation\")\n         test5tx = create_transaction(self.nodes[0], txid3, self.wit_address, amount=48)\n         test6txs.append(CTransaction(test5tx))\n         test5tx.wit.vtxinwit[0].scriptWitness.stack[0] = b'\\x01'\n         assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test5tx.serialize_with_witness().hex(), 0)\n-        self.block_submit(self.nodes[0], [test5tx], True)\n+        self.block_submit(self.nodes[0], [test5tx], with_witness=True, accept=False)\n \n         self.log.info(f\"Test 6: NULLDUMMY compliant base/witness transactions should be accepted to mempool and in block after activation [{COINBASE_MATURITY + 5}]\")\n         for i in test6txs:\n             self.nodes[0].sendrawtransaction(i.serialize_with_witness().hex(), 0)\n-        self.block_submit(self.nodes[0], test6txs, True, True)\n+        self.block_submit(self.nodes[0], test6txs, with_witness=True, accept=True)\n \n-    def block_submit(self, node, txs, witness=False, accept=False):\n+    def block_submit(self, node, txs, *, with_witness=False, accept):\n         tmpl = node.getblocktemplate(NORMAL_GBT_REQUEST_PARAMS)\n         assert_equal(tmpl['previousblockhash'], self.lastblockhash)\n         assert_equal(tmpl['height'], self.lastblockheight + 1)\n@@ -124,11 +127,12 @@ def block_submit(self, node, txs, witness=False, accept=False):\n             tx.rehash()\n             block.vtx.append(tx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n-        witness and add_witness_commitment(block)\n+        if with_witness:\n+            add_witness_commitment(block)\n         block.rehash()\n         block.solve()\n         assert_equal(None if accept else 'block-validation-failed', node.submitblock(block.serialize().hex()))\n-        if (accept):\n+        if accept:\n             assert_equal(node.getbestblockhash(), block.hash)\n             self.lastblockhash = block.hash\n             self.lastblocktime += 1"
      }
    ]
  },
  {
    "sha": "7720d4f650015272dc7109238230520f71858c6c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzIwZDRmNjUwMDE1MjcyZGM3MTA5MjM4MjMwNTIwZjcxODU4YzZj",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-08-18T15:27:37Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-08-23T16:11:37Z"
      },
      "message": "test: fix failure in feature_nulldummy.py on single-core machines\n\nOn single-core machines, executing the test feature_nulldummy.py results in\nthe following assertion error:\n\n...\n2021-08-18T15:37:58.805000Z TestFramework (INFO): Test 4: Non-NULLDUMMY base multisig transaction is invalid after activation\n2021-08-18T15:37:58.814000Z TestFramework (ERROR): Assertion failed\nTraceback (most recent call last):\n  File \"[...]/test/functional/test_framework/test_framework.py\", line 131, in main\n    self.run_test()\n  File \"[...]/test/functional/feature_nulldummy.py\", line 107, in run_test\n    self.block_submit(self.nodes[0], [test4tx], accept=False)\n  File \"[...]/test/functional/feature_nulldummy.py\", line 134, in block_submit\n    assert_equal(None if accept else 'block-validation-failed', node.submitblock(block.serialize().hex()))\n  File \"[...]/test/functional/test_framework/util.py\", line 49, in assert_equal\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\nAssertionError: not(block-validation-failed == non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero))\n2021-08-18T15:37:58.866000Z TestFramework (INFO): Stopping nodes\n...\n\nThe behaviour can be reproduced on a multi-core machine by simply changing the\nfunction GetNumCores() (in src/util/system.cpp) to return 1:\n\nint GetNumCores()\n{\n    return 1;\n}",
      "tree": {
        "sha": "06d064bb6ee8ba319775738aacd3c605e094b7c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06d064bb6ee8ba319775738aacd3c605e094b7c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7720d4f650015272dc7109238230520f71858c6c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7720d4f650015272dc7109238230520f71858c6c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7720d4f650015272dc7109238230520f71858c6c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7720d4f650015272dc7109238230520f71858c6c/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "646b3885f795c640a2ac979362c509c4a8ee592a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/646b3885f795c640a2ac979362c509c4a8ee592a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/646b3885f795c640a2ac979362c509c4a8ee592a"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "678e103e5f5af0d41d5b69242bf991a4e5c050ab",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7720d4f650015272dc7109238230520f71858c6c/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7720d4f650015272dc7109238230520f71858c6c/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=7720d4f650015272dc7109238230520f71858c6c",
        "patch": "@@ -54,6 +54,7 @@ def set_test_params(self):\n         self.extra_args = [[\n             f'-segwitheight={COINBASE_MATURITY + 5}',\n             '-addresstype=legacy',\n+            '-par=1',  # Use only one script thread to get the exact reject reason for testing\n         ]]\n \n     def skip_test_if_missing_module(self):\n@@ -131,7 +132,7 @@ def block_submit(self, node, txs, *, with_witness=False, accept):\n             add_witness_commitment(block)\n         block.rehash()\n         block.solve()\n-        assert_equal(None if accept else 'block-validation-failed', node.submitblock(block.serialize().hex()))\n+        assert_equal(None if accept else NULLDUMMY_ERROR, node.submitblock(block.serialize().hex()))\n         if accept:\n             assert_equal(node.getbestblockhash(), block.hash)\n             self.lastblockhash = block.hash"
      }
    ]
  }
]