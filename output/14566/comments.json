[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/432889181",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14566#issuecomment-432889181",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14566",
    "id": 432889181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjg4OTE4MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T02:12:44Z",
    "updated_at": "2018-10-25T02:12:44Z",
    "author_association": "MEMBER",
    "body": "This fixes the issue reported by @instagibbs https://travis-ci.org/bitcoin/bitcoin/jobs/443960300, and the issue to run the extended tests (example_test.py fails)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/432889181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433140570",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14566#issuecomment-433140570",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14566",
    "id": 433140570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzE0MDU3MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T17:36:52Z",
    "updated_at": "2018-10-25T17:36:52Z",
    "author_association": "MEMBER",
    "body": "Can we pull commit 90b1d057141aa118f45bbcea7b88187ee86b5fdc (travis: Pin flake8 version) into a separate PR. That would fix the 0.17 Travis build.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433140570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433263812",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14566#issuecomment-433263812",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14566",
    "id": 433263812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzI2MzgxMg==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T02:15:53Z",
    "updated_at": "2018-10-26T02:15:53Z",
    "author_association": "MEMBER",
    "body": "@jnewbery done in #14579.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433263812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433274980",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14566#issuecomment-433274980",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14566",
    "id": 433274980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzI3NDk4MA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T03:29:31Z",
    "updated_at": "2018-10-26T03:29:31Z",
    "author_association": "MEMBER",
    "body": "tACK 9461f98\r\n\r\nTravis & the linters are ok.\r\n`make check` is fixed on macOS (9461f98)\r\nRan the `--extended` tests and all passed except `feature_pruning.py`:\r\n```\r\nTEST                                  | STATUS    | DURATION\r\n\r\nexample_test.py                       | \u2713 Passed  | 2 s\r\nfeature_assumevalid.py                | \u2713 Passed  | 15 s\r\nfeature_bip68_sequence.py             | \u2713 Passed  | 36 s\r\nfeature_block.py                      | \u2713 Passed  | 68 s\r\nfeature_blocksdir.py                  | \u2713 Passed  | 2 s\r\nfeature_cltv.py                       | \u2713 Passed  | 5 s\r\nfeature_config_args.py                | \u2713 Passed  | 2 s\r\nfeature_csv_activation.py             | \u2713 Passed  | 10 s\r\nfeature_dbcrash.py                    | \u2713 Passed  | 1109 s\r\nfeature_dersig.py                     | \u2713 Passed  | 5 s\r\nfeature_fee_estimation.py             | \u2713 Passed  | 307 s\r\nfeature_help.py                       | \u2713 Passed  | 0 s\r\nfeature_includeconf.py                | \u2713 Passed  | 3 s\r\nfeature_logging.py                    | \u2713 Passed  | 5 s\r\nfeature_maxuploadtarget.py            | \u2713 Passed  | 67 s\r\nfeature_minchainwork.py               | \u2713 Passed  | 6 s\r\nfeature_notifications.py              | \u2713 Passed  | 2 s\r\nfeature_nulldummy.py                  | \u2713 Passed  | 2 s\r\nfeature_proxy.py                      | \u2713 Passed  | 5 s\r\nfeature_rbf.py                        | \u2713 Passed  | 8 s\r\nfeature_reindex.py                    | \u2713 Passed  | 4 s\r\nfeature_segwit.py                     | \u2713 Passed  | 23 s\r\nfeature_uacomment.py                  | \u2713 Passed  | 3 s\r\nfeature_versionbits_warning.py        | \u2713 Passed  | 7 s\r\ninterface_bitcoin_cli.py              | \u2713 Passed  | 2 s\r\ninterface_http.py                     | \u2713 Passed  | 3 s\r\ninterface_rest.py                     | \u2713 Passed  | 8 s\r\ninterface_zmq.py                      | \u2713 Passed  | 5 s\r\nmempool_accept.py                     | \u2713 Passed  | 4 s\r\nmempool_limit.py                      | \u2713 Passed  | 4 s\r\nmempool_packages.py                   | \u2713 Passed  | 36 s\r\nmempool_persist.py                    | \u2713 Passed  | 11 s\r\nmempool_reorg.py                      | \u2713 Passed  | 4 s\r\nmempool_resurrect.py                  | \u2713 Passed  | 2 s\r\nmempool_spend_coinbase.py             | \u2713 Passed  | 1 s\r\nmining_basic.py                       | \u2713 Passed  | 3 s\r\nmining_getblocktemplate_longpoll.py   | \u2713 Passed  | 67 s\r\nmining_prioritisetransaction.py       | \u2713 Passed  | 5 s\r\np2p_compactblocks.py                  | \u2713 Passed  | 42 s\r\np2p_disconnect_ban.py                 | \u2713 Passed  | 4 s\r\np2p_feefilter.py                      | \u2713 Passed  | 21 s\r\np2p_fingerprint.py                    | \u2713 Passed  | 8 s\r\np2p_invalid_block.py                  | \u2713 Passed  | 1 s\r\np2p_invalid_locator.py                | \u2713 Passed  | 2 s\r\np2p_invalid_tx.py                     | \u2713 Passed  | 2 s\r\np2p_leak.py                           | \u2713 Passed  | 7 s\r\np2p_mempool.py                        | \u2713 Passed  | 1 s\r\np2p_node_network_limited.py           | \u2713 Passed  | 9 s\r\np2p_segwit.py                         | \u2713 Passed  | 69 s\r\np2p_sendheaders.py                    | \u2713 Passed  | 14 s\r\np2p_timeouts.py                       | \u2713 Passed  | 63 s\r\np2p_unrequested_blocks.py             | \u2713 Passed  | 5 s\r\nrpc_blockchain.py                     | \u2713 Passed  | 8 s\r\nrpc_createmultisig.py                 | \u2713 Passed  | 13 s\r\nrpc_decodescript.py                   | \u2713 Passed  | 1 s\r\nrpc_deprecated.py                     | \u2713 Passed  | 3 s\r\nrpc_fundrawtransaction.py             | \u2713 Passed  | 41 s\r\nrpc_getblockstats.py                  | \u2713 Passed  | 1 s\r\nrpc_getchaintips.py                   | \u2713 Passed  | 3 s\r\nrpc_help.py                           | \u2713 Passed  | 1 s\r\nrpc_invalidateblock.py                | \u2713 Passed  | 7 s\r\nrpc_named_arguments.py                | \u2713 Passed  | 1 s\r\nrpc_net.py                            | \u2713 Passed  | 2 s\r\nrpc_preciousblock.py                  | \u2713 Passed  | 3 s\r\nrpc_psbt.py                           | \u2713 Passed  | 14 s\r\nrpc_rawtransaction.py                 | \u2713 Passed  | 20 s\r\nrpc_scantxoutset.py                   | \u2713 Passed  | 7 s\r\nrpc_signmessage.py                    | \u2713 Passed  | 1 s\r\nrpc_signrawtransaction.py             | \u2713 Passed  | 2 s\r\nrpc_txoutproof.py                     | \u2713 Passed  | 3 s\r\nrpc_uptime.py                         | \u2713 Passed  | 1 s\r\nrpc_users.py                          | \u2713 Passed  | 3 s\r\nrpc_zmq.py                            | \u2713 Passed  | 3 s\r\nwallet_abandonconflict.py             | \u2713 Passed  | 7 s\r\nwallet_address_types.py               | \u2713 Passed  | 56 s\r\nwallet_backup.py                      | \u2713 Passed  | 109 s\r\nwallet_basic.py                       | \u2713 Passed  | 35 s\r\nwallet_bumpfee.py                     | \u2713 Passed  | 19 s\r\nwallet_disable.py                     | \u2713 Passed  | 1 s\r\nwallet_disableprivatekeys.py          | \u2713 Passed  | 3 s\r\nwallet_disableprivatekeys.py --usecli | \u2713 Passed  | 3 s\r\nwallet_dump.py                        | \u2713 Passed  | 10 s\r\nwallet_encryption.py                  | \u2713 Passed  | 5 s\r\nwallet_fallbackfee.py                 | \u2713 Passed  | 2 s\r\nwallet_groups.py                      | \u2713 Passed  | 14 s\r\nwallet_hd.py                          | \u2713 Passed  | 13 s\r\nwallet_import_rescan.py               | \u2713 Passed  | 19 s\r\nwallet_importmulti.py                 | \u2713 Passed  | 6 s\r\nwallet_importprunedfunds.py           | \u2713 Passed  | 4 s\r\nwallet_keypool.py                     | \u2713 Passed  | 5 s\r\nwallet_keypool_topup.py               | \u2713 Passed  | 18 s\r\nwallet_labels.py                      | \u2713 Passed  | 24 s\r\nwallet_listreceivedby.py              | \u2713 Passed  | 8 s\r\nwallet_listsinceblock.py              | \u2713 Passed  | 8 s\r\nwallet_listtransactions.py            | \u2713 Passed  | 18 s\r\nwallet_multiwallet.py                 | \u2713 Passed  | 23 s\r\nwallet_multiwallet.py --usecli        | \u2713 Passed  | 28 s\r\nwallet_resendwallettransactions.py    | \u2713 Passed  | 2 s\r\nwallet_txn_clone.py                   | \u2713 Passed  | 6 s\r\nwallet_txn_clone.py --mineblock       | \u2713 Passed  | 6 s\r\nwallet_txn_clone.py --segwit          | \u2713 Passed  | 5 s\r\nwallet_txn_doublespend.py             | \u2713 Passed  | 5 s\r\nwallet_txn_doublespend.py --mineblock | \u2713 Passed  | 6 s\r\nwallet_zapwallettxes.py               | \u2713 Passed  | 3 s\r\nrpc_bind.py --ipv4                    | \u25cb Skipped | 0 s\r\nrpc_bind.py --ipv6                    | \u25cb Skipped | 0 s\r\nrpc_bind.py --nonloopback             | \u25cb Skipped | 0 s\r\nfeature_pruning.py                    | \u2716 Failed  | 1199 s\r\n\r\nALL                                   | \u2716 Failed  | 3907 s (accumulated) \r\nRuntime: 1199 s\r\n```\r\n\r\nwhich failed with:\r\n\r\n<details><summary>Details</summary><p>\r\n\r\n```\r\n\r\nfeature_pruning.py failed, Duration: 1199 s\r\n\r\nstdout:\r\n2018-10-26T02:25:27.022000Z TestFramework (INFO): Initializing test directory /var/folders/z2/cn877pxd3czdfh47mfkmbwgm0000gn/T/test_runner_\u20bf_\ud83c\udfc3_20181026_102522/feature_pruning_107\r\n2018-10-26T02:25:29.028000Z TestFramework (INFO): Warning! This test requires 4GB of disk space and takes over 30 mins (up to 2 hours)\r\n2018-10-26T02:25:29.029000Z TestFramework (INFO): Mining a big blockchain of 995 blocks\r\n2018-10-26T02:31:29.406000Z TestFramework (INFO): Check that we haven't started pruning yet because we're below PruneAfterHeight\r\n2018-10-26T02:31:29.407000Z TestFramework (INFO): Success\r\n2018-10-26T02:31:29.407000Z TestFramework (INFO): Though we're already using more than 550MiB, current usage: 591\r\n2018-10-26T02:31:29.407000Z TestFramework (INFO): Mining 25 more blocks should cause the first block file to be pruned\r\n2018-10-26T02:31:44.934000Z TestFramework (INFO): Success\r\n2018-10-26T02:31:44.936000Z TestFramework (INFO): Usage should be below target: 479\r\n2018-10-26T02:31:44.937000Z TestFramework (INFO): Check that we'll exceed disk space target if we have a very high stale block rate\r\n2018-10-26T02:31:44.937000Z TestFramework (INFO): Mine 24 (stale) blocks on Node 1, followed by 25 (main chain) block reorg from Node 0, for 12 rounds\r\n2018-10-26T02:43:24.306000Z TestFramework (INFO): Usage can be over target because of high stale rate: 638\r\n2018-10-26T02:43:24.308000Z TestFramework (INFO): Check that we can survive a 288 block reorg still\r\n2018-10-26T02:43:25.699000Z TestFramework (INFO): Current block height: 1320\r\n2018-10-26T02:43:25.699000Z TestFramework (INFO): Invalidating block 750bef50699b748116059dab8acbf280db503522c14da7592009f38a84f94521 at height 1033\r\n2018-10-26T02:43:30.544000Z TestFramework (INFO): New best height: 1032\r\n2018-10-26T02:43:32.032000Z TestFramework (INFO): Generating new longer chain of 300 more blocks\r\n2018-10-26T02:43:36.339000Z TestFramework (INFO): Reconnect nodes\r\n2018-10-26T02:43:40.797000Z TestFramework (INFO): Verify height on node 2: 1332\r\n2018-10-26T02:43:40.799000Z TestFramework (INFO): Usage possibly still high bc of stale blocks in block files: 638\r\n2018-10-26T02:43:40.799000Z TestFramework (INFO): Mine 220 more blocks so we have requisite history (some blocks will be big and cause pruning of previous chain)\r\n2018-10-26T02:44:18.949000Z TestFramework (ERROR): Unexpected exception caught during testing\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_framework.py\", line 170, in main\r\n    self.run_test()\r\n  File \"/Users/michael/github/bitcoin/test/functional/feature_pruning.py\", line 397, in run_test\r\n    (self.forkheight,self.forkhash) = self.reorg_test() #(1033, )\r\n  File \"/Users/michael/github/bitcoin/test/functional/feature_pruning.py\", line 180, in reorg_test\r\n    sync_blocks(self.nodes[0:3], timeout=300)\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/util.py\", line 388, in sync_blocks\r\n    best_hash = [x.getbestblockhash() for x in rpc_connections]\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/util.py\", line 388, in <listcomp>\r\n    best_hash = [x.getbestblockhash() for x in rpc_connections]\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/authproxy.py\", line 136, in __call__\r\n    response = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/authproxy.py\", line 106, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1055, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 977, in send\r\n    self.sock.sendall(data)\r\nOSError: [Errno 41] Protocol wrong type for socket\r\n2018-10-26T02:44:19.007000Z TestFramework (INFO): Stopping nodes\r\n2018-10-26T02:44:19.008000Z TestFramework.node1 (ERROR): Unable to stop node.\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_node.py\", line 210, in stop_node\r\n    self.stop()\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/authproxy.py\", line 136, in __call__\r\n    response = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/authproxy.py\", line 106, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1240, in _send_request\r\n    self.putrequest(method, url, **skips)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1098, in putrequest\r\n    raise CannotSendRequest(self.__state)\r\nhttp.client.CannotSendRequest: Request-sent\r\n2018-10-26T02:45:25.723000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: (['    def is_node_stopped(self):\\n', '        \"\"\"Checks whether the node has stopped.\\n', '\\n', '        Returns True if the node has stopped. False otherwise.\\n', '        This method is responsible for freeing resources (self.process).\"\"\"\\n', '        if not self.running:\\n', '            return True\\n', '        return_code = self.process.poll()\\n', '        if return_code is None:\\n', '            return False\\n', '\\n', \"        # process has stopped. Assert that it didn't return an error code.\\n\", '        assert return_code == 0, self._node_msg(\\n', '            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\\n', '        self.running = False\\n', '        self.process = None\\n', '        self.rpc_connected = False\\n', '        self.rpc = None\\n', '        self.log.debug(\"Node stopped\")\\n', '        return True\\n'], 225)\r\n[node 5] Cleaning up leftover process\r\n[node 2] Cleaning up leftover process\r\n[node 1] Cleaning up leftover process\r\n\r\n\r\nstderr:\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/github/bitcoin/test/functional/feature_pruning.py\", line 461, in <module>\r\n    PruneTest().main()\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_framework.py\", line 195, in main\r\n    self.stop_nodes()\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_framework.py\", line 342, in stop_nodes\r\n    node.wait_until_stopped()\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_node.py\", line 247, in wait_until_stopped\r\n    wait_until(self.is_node_stopped, timeout=timeout)\r\n  File \"/Users/michael/github/bitcoin/test/functional/test_framework/util.py\", line 227, in wait_until\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate (['    def is_node_stopped(self):\\n', '        \"\"\"Checks whether the node has stopped.\\n', '\\n', '        Returns True if the node has stopped. False otherwise.\\n', '        This method is responsible for freeing resources (self.process).\"\"\"\\n', '        if not self.running:\\n', '            return True\\n', '        return_code = self.process.poll()\\n', '        if return_code is None:\\n', '            return False\\n', '\\n', \"        # process has stopped. Assert that it didn't return an error code.\\n\", '        assert return_code == 0, self._node_msg(\\n', '            \"Node returned non-zero exit code (%d) when stopping\" % return_code)\\n', '        self.running = False\\n', '        self.process = None\\n', '        self.rpc_connected = False\\n', '        self.rpc = None\\n', '        self.log.debug(\"Node stopped\")\\n', '        return True\\n'], 225) not true after 60 seconds\r\n```\r\n</p></details><br>\r\n\r\nHowever in subsequent runs of that test it passes successfully:\r\n```\r\nbash-3.2$ test/functional/test_runner.py feature_pruning.py\r\nTemporary test directory at /var/folders/z2/cn877pxd3czdfh47mfkmbwgm0000gn/T/test_runner_\u20bf_\ud83c\udfc3_20181026_104940\r\n.....\r\nfeature_pruning.py passed, Duration: 881 s\r\nTEST               | STATUS    | DURATION\r\nfeature_pruning.py | \u2713 Passed  | 881 s\r\nALL                | \u2713 Passed  | 881 s (accumulated) \r\nRuntime: 881 s\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433274980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]