[
  {
    "sha": "2de222c40198d3d528668d78cc52e2ce3fa96765",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZGUyMjJjNDAxOThkM2Q1Mjg2NjhkNzhjYzUyZTJjZTNmYTk2NzY1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-12T02:03:56Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-13T04:34:02Z"
      },
      "message": "wallet: Use GetSelectionAmount for target value calculations\n\nFor target value calculations, GetSelectionAmount should be used, not\nm_effective_value or m_value.\n\nSpecifically, ApproximateBestSubset mistakenly uses m_value when\ncalculating whether the target value has been met. This has been changed\nto use GetSelectionAmount.",
      "tree": {
        "sha": "10f549f8df5ebd97a4beab6fcb49b309d341fbf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10f549f8df5ebd97a4beab6fcb49b309d341fbf9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2de222c40198d3d528668d78cc52e2ce3fa96765",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2de222c40198d3d528668d78cc52e2ce3fa96765",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2de222c40198d3d528668d78cc52e2ce3fa96765",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2de222c40198d3d528668d78cc52e2ce3fa96765/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77e23ca945030d557559a7391cb8bd368693548c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77e23ca945030d557559a7391cb8bd368693548c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77e23ca945030d557559a7391cb8bd368693548c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "25b1ee07e44af87d43605112e2327eed4ba294ba",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2de222c40198d3d528668d78cc52e2ce3fa96765/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2de222c40198d3d528668d78cc52e2ce3fa96765/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=2de222c40198d3d528668d78cc52e2ce3fa96765",
        "patch": "@@ -195,7 +195,7 @@ static void ApproximateBestSubset(const std::vector<OutputGroup>& groups, const\n                 //the selection random.\n                 if (nPass == 0 ? insecure_rand.randbool() : !vfIncluded[i])\n                 {\n-                    nTotal += groups[i].m_value;\n+                    nTotal += groups[i].GetSelectionAmount();\n                     vfIncluded[i] = true;\n                     if (nTotal >= nTargetValue)\n                     {\n@@ -205,7 +205,7 @@ static void ApproximateBestSubset(const std::vector<OutputGroup>& groups, const\n                             nBest = nTotal;\n                             vfBest = vfIncluded;\n                         }\n-                        nTotal -= groups[i].m_value;\n+                        nTotal -= groups[i].GetSelectionAmount();\n                         vfIncluded[i] = false;\n                     }\n                 }"
      }
    ]
  },
  {
    "sha": "d9262324e80da32725e21d4e0fbfee56f25490b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTI2MjMyNGU4MGRhMzI3MjVlMjFkNGUwZmJmZWU1NmYyNTQ5MGIx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-12T02:05:51Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-13T04:34:47Z"
      },
      "message": "wallet: Assert that enough was selected to cover the fees\n\nWhen the fee is not subtracted from the outputs, the amount that has\nbeen reserved for the fee (change_and_fee - change_amount) must be\nenough to cover the fee that is needed. It would be a bug to not do so,\nso use an assert to make this obvious if such a situation were to occur.",
      "tree": {
        "sha": "7428fc9c27676f8a9266d56e89def41839d13124",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7428fc9c27676f8a9266d56e89def41839d13124"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9262324e80da32725e21d4e0fbfee56f25490b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9262324e80da32725e21d4e0fbfee56f25490b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9262324e80da32725e21d4e0fbfee56f25490b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9262324e80da32725e21d4e0fbfee56f25490b1/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2de222c40198d3d528668d78cc52e2ce3fa96765",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2de222c40198d3d528668d78cc52e2ce3fa96765",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2de222c40198d3d528668d78cc52e2ce3fa96765"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3bb7134b2480eea52a2d79a4ff43ec3bf6f8922c",
        "filename": "src/wallet/spend.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9262324e80da32725e21d4e0fbfee56f25490b1/src/wallet/spend.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9262324e80da32725e21d4e0fbfee56f25490b1/src/wallet/spend.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/spend.cpp?ref=d9262324e80da32725e21d4e0fbfee56f25490b1",
        "patch": "@@ -778,6 +778,10 @@ bool CWallet::CreateTransactionInternal(\n         fee_needed = coin_selection_params.m_effective_feerate.GetFee(nBytes);\n     }\n \n+    // The only time that fee_needed should be less than the amount available for fees (in change_and_fee - change_amount) is when\n+    // we are subtracting the fee from the outputs. If this occurs at any other time, it is a bug.\n+    assert(coin_selection_params.m_subtract_fee_outputs || fee_needed <= change_and_fee - change_amount);\n+\n     // Update nFeeRet in case fee_needed changed due to dropping the change output\n     if (fee_needed <= change_and_fee - change_amount) {\n         nFeeRet = change_and_fee - change_amount;"
      }
    ]
  },
  {
    "sha": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Mjg4NWM0ZjY5YTVlNmZjNDk4OTY3N2Q2ZTViZThhNjY2ZmJmZjBk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-12T02:07:15Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-13T04:34:47Z"
      },
      "message": "test: Test for ApproximateBestSubset edge case with too little fees\n\nApproximateBestSubset had an edge case (due to not using\nGetSelectionAmount) where it was possible for it to return success but\nfail to select enough to cover transaction fees. A test is added that\ncould trigger this failure prior to the fix being implemented.",
      "tree": {
        "sha": "53d6ef2e91a0761df8fedf50261d851ee50f5d15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53d6ef2e91a0761df8fedf50261d851ee50f5d15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92885c4f69a5e6fc4989677d6e5be8a666fbff0d/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9262324e80da32725e21d4e0fbfee56f25490b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9262324e80da32725e21d4e0fbfee56f25490b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9262324e80da32725e21d4e0fbfee56f25490b1"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 57,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2524eaa7a55c00327858d49b6a3c93e6f7270b3c",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92885c4f69a5e6fc4989677d6e5be8a666fbff0d/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92885c4f69a5e6fc4989677d6e5be8a666fbff0d/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
        "patch": "@@ -99,6 +99,7 @@ def run_test(self):\n         self.test_subtract_fee_with_presets()\n         self.test_transaction_too_large()\n         self.test_include_unsafe()\n+        self.test_22670()\n \n     def test_change_position(self):\n         \"\"\"Ensure setting changePosition in fundraw with an exact match is handled properly.\"\"\"\n@@ -969,6 +970,62 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected because the transaction fee must be at least 0.01 BTC (the minimum change value).\n+        # Otherwise the targeted minimum change value will be enough to cover the transaction fees that were not\n+        # being accounted for. So the minimum relay fee is set to 0.1 BTC/kvB in this test.\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        feerate = Decimal(\"0.1\")\n+        self.restart_node(0, [f\"-minrelaytxfee={feerate}\", \"-discardfee=0\"]) # Set high minrelayfee, set discardfee to 0 for easier calculation\n+\n+        self.nodes[0].loadwallet(self.default_wallet_name, True)\n+        funds = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(wallet_name=\"tester\")\n+        tester = self.nodes[0].get_wallet_rpc(\"tester\")\n+\n+        # Because this test is specifically for ApproximateBestSubset, the target value must be greater\n+        # than any single input available, and require more than 1 input. So we make 3 outputs\n+        for i in range(0, 3):\n+            funds.sendtoaddress(tester.getnewaddress(address_type=\"bech32\"), 1)\n+        self.nodes[0].generate(1)\n+\n+        # Create transactions in order to calculate fees for the target bounds that can trigger this bug\n+        change_tx = tester.fundrawtransaction(tester.createrawtransaction([], [{funds.getnewaddress(): 1.5}]))\n+        tx = tester.createrawtransaction([], [{funds.getnewaddress(): 2}])\n+        no_change_tx = tester.fundrawtransaction(tx, {\"subtractFeeFromOutputs\": [0]})\n+\n+        overhead_fees = feerate * len(tx) / 2 / 1000\n+        cost_of_change = change_tx[\"fee\"] - no_change_tx[\"fee\"]\n+        fees = no_change_tx[\"fee\"]\n+        assert_greater_than(fees, 0.01)\n+\n+        def do_fund_send(target):\n+            create_tx = tester.createrawtransaction([], [{funds.getnewaddress(): lower_bound}])\n+            funded_tx = tester.fundrawtransaction(create_tx)\n+            signed_tx = tester.signrawtransactionwithwallet(funded_tx[\"hex\"])\n+            assert signed_tx[\"complete\"]\n+            decoded_tx = tester.decoderawtransaction(signed_tx[\"hex\"])\n+            assert_equal(len(decoded_tx[\"vin\"]), 3)\n+            assert tester.testmempoolaccept([signed_tx[\"hex\"]])[0][\"allowed\"]\n+\n+        # We want to choose more value than is available in 2 inputs when considering the fee,\n+        # but not enough to need 3 inputs when not considering the fee.\n+        # So the target value must be at least 2.00000001 - fee.\n+        lower_bound = Decimal(\"2.00000001\") - fees\n+        # The target value must be at most 2 - cost_of_change - not_input_fees - min_change (these are all\n+        # included in the target before ApproximateBestSubset).\n+        upper_bound = Decimal(\"2.0\") - cost_of_change - overhead_fees - Decimal(\"0.01\")\n+        assert_greater_than_or_equal(upper_bound, lower_bound)\n+        do_fund_send(lower_bound)\n+        do_fund_send(upper_bound)\n+\n+        self.restart_node(0)\n \n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      }
    ]
  }
]