[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897294749",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-897294749",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 897294749,
    "node_id": "IC_kwDOABII5841e6Gd",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-12T02:16:48Z",
    "updated_at": "2021-08-12T02:16:48Z",
    "author_association": "MEMBER",
    "body": "For 22.0 backport (this bug may cause other issues that are not as immediately obvious).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897294749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897313647",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-897313647",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 897313647,
    "node_id": "IC_kwDOABII5841e-tv",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-12T03:11:21Z",
    "updated_at": "2021-08-12T03:11:21Z",
    "author_association": "MEMBER",
    "body": "Failure in the [previous releases CI](https://cirrus-ci.com/task/6498169006587904?logs=ci#L3632). Similar to #18737 / #18737:\r\n```bash\r\n test  2021-08-12T02:39:40.038000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/tmp/cirrus-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/tmp/cirrus-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/feature_fee_estimation.py\", line 271, in run_test\r\n                                       check_estimates(self.nodes[1], self.fees_per_kb)\r\n                                     File \"/tmp/cirrus-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/feature_fee_estimation.py\", line 155, in check_estimates\r\n                                       check_smart_estimates(node, fees_seen)\r\n                                     File \"/tmp/cirrus-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/feature_fee_estimation.py\", line 145, in check_smart_estimates\r\n                                       % (feerate, last_feerate))\r\n                                   AssertionError: Estimated fee (0.000238) larger than last fee (0.000201) for lower number of confirms\r\n test  2021-08-12T02:39:40.040000Z TestFramework (DEBUG): Closing down network thread \r\n test  2021-08-12T02:39:40.041000Z TestFramework (INFO): Stopping nodes \r\n test  2021-08-12T02:39:40.041000Z TestFramework.node0 (DEBUG): Stopping node \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897313647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897903241",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-897903241",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 897903241,
    "node_id": "IC_kwDOABII5841hOqJ",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-12T19:18:15Z",
    "updated_at": "2021-08-12T19:18:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22049](https://github.com/bitcoin/bitcoin/pull/22049) (rpc: allow specifying min chain depth for inputs in fund calls by champo)\n* [#17211](https://github.com/bitcoin/bitcoin/pull/17211) (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897903241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898062892",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-898062892",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 898062892,
    "node_id": "IC_kwDOABII5841h1os",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-13T00:30:55Z",
    "updated_at": "2021-08-13T00:30:55Z",
    "author_association": "MEMBER",
    "body": "cc @Xekyo ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898062892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898185311",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-898185311",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 898185311,
    "node_id": "IC_kwDOABII5841iThf",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-13T04:35:16Z",
    "updated_at": "2021-08-13T04:35:16Z",
    "author_association": "MEMBER",
    "body": "> To be clear, the bug is that it is using the output value, even if we're not subtracting fee from outputs. We use `GetSelectionAmount` to switch between effective and output value as our target based on subtracting fee from outputs or not.\r\n> \r\n> This explanation should go in the commit message, or at least the OP to get pulled in on merge.\r\n\r\nI've added a specific explanation in the first commit",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898185311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899007444",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-899007444",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 899007444,
    "node_id": "IC_kwDOABII5841lcPU",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-15T07:12:46Z",
    "updated_at": "2021-08-15T07:12:46Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/pull/22686/commits/92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899007444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901367159",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-901367159",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 901367159,
    "node_id": "IC_kwDOABII5841ucV3",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-18T19:18:53Z",
    "updated_at": "2021-08-18T19:18:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Post-merge utACK 92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901367159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901506462",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-901506462",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 901506462,
    "node_id": "IC_kwDOABII5841u-We",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-19T00:00:08Z",
    "updated_at": "2021-08-19T00:00:08Z",
    "author_association": "MEMBER",
    "body": "@Xekyo thanks for following up.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901506462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901691019",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#issuecomment-901691019",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
    "id": 901691019,
    "node_id": "IC_kwDOABII5841vraL",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-19T07:51:47Z",
    "updated_at": "2021-08-19T07:51:47Z",
    "author_association": "MEMBER",
    "body": "Backported in #22629.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901691019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688196526",
    "pull_request_review_id": 729208250,
    "id": 688196526,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODE5NjUyNg==",
    "diff_hunk": "@@ -969,6 +970,44 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected. It is most easily observed when the minimum relay fee is set to\n+        # an extremely high value (0.1 BTC/kvB in this test).\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        self.restart_node(0, [\"-minrelaytxfee=0.1\", \"-changetype=bech32\"])\n+\n+        self.nodes[0].loadwallet(self.default_wallet_name, True)\n+        funds = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(wallet_name=\"tester\")\n+        tester = self.nodes[0].get_wallet_rpc(\"tester\")\n+\n+        # Because this test is specifically for ApproximateBestSubset, the target value must be greater\n+        # than any single input available, and require more than 1 input. So we make 3 outputs\n+        for i in range(0, 3):\n+            funds.sendtoaddress(tester.getnewaddress(address_type=\"bech32\"), 1)\n+        self.nodes[0].generate(1)\n+\n+        # With 3 outputs of 1 BTC, the target value must between 1 and 2 BTC. We choose a value where with 2 inputs, the",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 35,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "5a89197a22bf806ff0ad7b514c037efcfb08bffe",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "can this be done programmatically? \r\n\r\nblocks of comments means the chances of the description and/or the test going stale quite high\r\n\r\nin other words, can we get size estimations, calculate the final total, round properly, using python rather than english? ",
    "created_at": "2021-08-13T02:09:32Z",
    "updated_at": "2021-08-13T02:21:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688196526",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688196526"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688196526"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688196526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 996,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688197443",
    "pull_request_review_id": 729208250,
    "id": 688197443,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODE5NzQ0Mw==",
    "diff_hunk": "@@ -969,6 +970,44 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected. It is most easily observed when the minimum relay fee is set to\n+        # an extremely high value (0.1 BTC/kvB in this test).\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        self.restart_node(0, [\"-minrelaytxfee=0.1\", \"-changetype=bech32\"])",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 22,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "5a89197a22bf806ff0ad7b514c037efcfb08bffe",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe create `DEFAULT_MAX_RAW_TX_FEE_RATE` constant and use that so you can refer to it later as well?",
    "created_at": "2021-08-13T02:12:43Z",
    "updated_at": "2021-08-13T02:21:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688197443",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688197443"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688197443"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688197443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 983,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688199891",
    "pull_request_review_id": 729208250,
    "id": 688199891,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODE5OTg5MQ==",
    "diff_hunk": "@@ -778,6 +778,10 @@ bool CWallet::CreateTransactionInternal(\n         fee_needed = coin_selection_params.m_effective_feerate.GetFee(nBytes);\n     }\n \n+    // The only time that fee_needed should be less than the amount available for fees (in change_and_fee - change_amount) is when\n+    // we are subtracting the fee from the outputs. If this occurs at any other time, it is a bug.\n+    assert(coin_selection_params.m_subtract_fee_outputs || fee_needed <= change_and_fee - change_amount);",
    "path": "src/wallet/spend.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "fdf2111ab5d9e57139d9512d0c5487c3eeb54e44",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "am I correct in noting that `change_and_fee - change_amount` may be non-zero in `coin_selection_params.m_subtract_fee_outputs` instance in the case where change is dropped to fee?\r\n\r\njust thinking if any tighter assertion can be placed.",
    "created_at": "2021-08-13T02:21:07Z",
    "updated_at": "2021-08-13T02:21:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688199891",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688199891"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688199891"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688199891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 783,
    "original_line": 783,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688206940",
    "pull_request_review_id": 729220228,
    "id": 688206940,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODIwNjk0MA==",
    "diff_hunk": "@@ -778,6 +778,10 @@ bool CWallet::CreateTransactionInternal(\n         fee_needed = coin_selection_params.m_effective_feerate.GetFee(nBytes);\n     }\n \n+    // The only time that fee_needed should be less than the amount available for fees (in change_and_fee - change_amount) is when\n+    // we are subtracting the fee from the outputs. If this occurs at any other time, it is a bug.\n+    assert(coin_selection_params.m_subtract_fee_outputs || fee_needed <= change_and_fee - change_amount);",
    "path": "src/wallet/spend.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "fdf2111ab5d9e57139d9512d0c5487c3eeb54e44",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. If `m_subtract_fee_outputs`, `change_and_fee - change_amount` can be positive, negative, or 0. It's pretty much a useless value in that case.",
    "created_at": "2021-08-13T02:45:47Z",
    "updated_at": "2021-08-13T02:45:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688206940",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688206940"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688206940"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688206940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 783,
    "original_line": 783,
    "side": "RIGHT",
    "in_reply_to_id": 688199891
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688236670",
    "pull_request_review_id": 729254481,
    "id": 688236670,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODIzNjY3MA==",
    "diff_hunk": "@@ -969,6 +970,44 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected. It is most easily observed when the minimum relay fee is set to\n+        # an extremely high value (0.1 BTC/kvB in this test).\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        self.restart_node(0, [\"-minrelaytxfee=0.1\", \"-changetype=bech32\"])\n+\n+        self.nodes[0].loadwallet(self.default_wallet_name, True)\n+        funds = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(wallet_name=\"tester\")\n+        tester = self.nodes[0].get_wallet_rpc(\"tester\")\n+\n+        # Because this test is specifically for ApproximateBestSubset, the target value must be greater\n+        # than any single input available, and require more than 1 input. So we make 3 outputs\n+        for i in range(0, 3):\n+            funds.sendtoaddress(tester.getnewaddress(address_type=\"bech32\"), 1)\n+        self.nodes[0].generate(1)\n+\n+        # With 3 outputs of 1 BTC, the target value must between 1 and 2 BTC. We choose a value where with 2 inputs, the",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 35,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "5a89197a22bf806ff0ad7b514c037efcfb08bffe",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-08-13T04:35:21Z",
    "updated_at": "2021-08-13T04:35:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688236670",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688236670"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688236670"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688236670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 996,
    "side": "RIGHT",
    "in_reply_to_id": 688196526
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688236735",
    "pull_request_review_id": 729254540,
    "id": 688236735,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODIzNjczNQ==",
    "diff_hunk": "@@ -969,6 +970,44 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected. It is most easily observed when the minimum relay fee is set to\n+        # an extremely high value (0.1 BTC/kvB in this test).\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        self.restart_node(0, [\"-minrelaytxfee=0.1\", \"-changetype=bech32\"])",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 22,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "5a89197a22bf806ff0ad7b514c037efcfb08bffe",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.. ish",
    "created_at": "2021-08-13T04:35:31Z",
    "updated_at": "2021-08-13T04:35:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688236735",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688236735"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r688236735"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688236735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 983,
    "side": "RIGHT",
    "in_reply_to_id": 688197443
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691888435",
    "pull_request_review_id": 733693856,
    "id": 691888435,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTg4ODQzNQ==",
    "diff_hunk": "@@ -969,6 +970,62 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected because the transaction fee must be at least 0.01 BTC (the minimum change value).\n+        # Otherwise the targeted minimum change value will be enough to cover the transaction fees that were not\n+        # being accounted for. So the minimum relay fee is set to 0.1 BTC/kvB in this test.\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        feerate = Decimal(\"0.1\")\n+        self.restart_node(0, [f\"-minrelaytxfee={feerate}\", \"-discardfee=0\"]) # Set high minrelayfee, set discardfee to 0 for easier calculation\n+\n+        self.nodes[0].loadwallet(self.default_wallet_name, True)\n+        funds = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(wallet_name=\"tester\")\n+        tester = self.nodes[0].get_wallet_rpc(\"tester\")\n+\n+        # Because this test is specifically for ApproximateBestSubset, the target value must be greater\n+        # than any single input available, and require more than 1 input. So we make 3 outputs\n+        for i in range(0, 3):\n+            funds.sendtoaddress(tester.getnewaddress(address_type=\"bech32\"), 1)\n+        self.nodes[0].generate(1)\n+\n+        # Create transactions in order to calculate fees for the target bounds that can trigger this bug\n+        change_tx = tester.fundrawtransaction(tester.createrawtransaction([], [{funds.getnewaddress(): 1.5}]))\n+        tx = tester.createrawtransaction([], [{funds.getnewaddress(): 2}])\n+        no_change_tx = tester.fundrawtransaction(tx, {\"subtractFeeFromOutputs\": [0]})\n+\n+        overhead_fees = feerate * len(tx) / 2 / 1000",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 42,
    "original_position": 42,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why do we divide by 2 here?",
    "created_at": "2021-08-19T08:14:06Z",
    "updated_at": "2021-08-19T08:14:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r691888435",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691888435"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r691888435"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691888435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1003,
    "original_line": 1003,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691888763",
    "pull_request_review_id": 733693856,
    "id": 691888763,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTg4ODc2Mw==",
    "diff_hunk": "@@ -969,6 +970,62 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected because the transaction fee must be at least 0.01 BTC (the minimum change value).\n+        # Otherwise the targeted minimum change value will be enough to cover the transaction fees that were not\n+        # being accounted for. So the minimum relay fee is set to 0.1 BTC/kvB in this test.\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        feerate = Decimal(\"0.1\")\n+        self.restart_node(0, [f\"-minrelaytxfee={feerate}\", \"-discardfee=0\"]) # Set high minrelayfee, set discardfee to 0 for easier calculation\n+\n+        self.nodes[0].loadwallet(self.default_wallet_name, True)\n+        funds = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(wallet_name=\"tester\")\n+        tester = self.nodes[0].get_wallet_rpc(\"tester\")\n+\n+        # Because this test is specifically for ApproximateBestSubset, the target value must be greater\n+        # than any single input available, and require more than 1 input. So we make 3 outputs\n+        for i in range(0, 3):\n+            funds.sendtoaddress(tester.getnewaddress(address_type=\"bech32\"), 1)\n+        self.nodes[0].generate(1)\n+\n+        # Create transactions in order to calculate fees for the target bounds that can trigger this bug\n+        change_tx = tester.fundrawtransaction(tester.createrawtransaction([], [{funds.getnewaddress(): 1.5}]))\n+        tx = tester.createrawtransaction([], [{funds.getnewaddress(): 2}])\n+        no_change_tx = tester.fundrawtransaction(tx, {\"subtractFeeFromOutputs\": [0]})\n+\n+        overhead_fees = feerate * len(tx) / 2 / 1000\n+        cost_of_change = change_tx[\"fee\"] - no_change_tx[\"fee\"]\n+        fees = no_change_tx[\"fee\"]\n+        assert_greater_than(fees, 0.01)\n+\n+        def do_fund_send(target):\n+            create_tx = tester.createrawtransaction([], [{funds.getnewaddress(): lower_bound}])\n+            funded_tx = tester.fundrawtransaction(create_tx)\n+            signed_tx = tester.signrawtransactionwithwallet(funded_tx[\"hex\"])\n+            assert signed_tx[\"complete\"]\n+            decoded_tx = tester.decoderawtransaction(signed_tx[\"hex\"])\n+            assert_equal(len(decoded_tx[\"vin\"]), 3)\n+            assert tester.testmempoolaccept([signed_tx[\"hex\"]])[0][\"allowed\"]\n+\n+        # We want to choose more value than is available in 2 inputs when considering the fee,\n+        # but not enough to need 3 inputs when not considering the fee.\n+        # So the target value must be at least 2.00000001 - fee.\n+        lower_bound = Decimal(\"2.00000001\") - fees\n+        # The target value must be at most 2 - cost_of_change - not_input_fees - min_change (these are all\n+        # included in the target before ApproximateBestSubset).\n+        upper_bound = Decimal(\"2.0\") - cost_of_change - overhead_fees - Decimal(\"0.01\")",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 62,
    "original_position": 62,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The test also passes with much higher upper_bound.",
    "created_at": "2021-08-19T08:14:33Z",
    "updated_at": "2021-08-19T08:14:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r691888763",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691888763"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r691888763"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/691888763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1023,
    "original_line": 1023,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692268515",
    "pull_request_review_id": 734198379,
    "id": 692268515,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjI2ODUxNQ==",
    "diff_hunk": "@@ -969,6 +970,62 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected because the transaction fee must be at least 0.01 BTC (the minimum change value).\n+        # Otherwise the targeted minimum change value will be enough to cover the transaction fees that were not\n+        # being accounted for. So the minimum relay fee is set to 0.1 BTC/kvB in this test.\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        feerate = Decimal(\"0.1\")\n+        self.restart_node(0, [f\"-minrelaytxfee={feerate}\", \"-discardfee=0\"]) # Set high minrelayfee, set discardfee to 0 for easier calculation\n+\n+        self.nodes[0].loadwallet(self.default_wallet_name, True)\n+        funds = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(wallet_name=\"tester\")\n+        tester = self.nodes[0].get_wallet_rpc(\"tester\")\n+\n+        # Because this test is specifically for ApproximateBestSubset, the target value must be greater\n+        # than any single input available, and require more than 1 input. So we make 3 outputs\n+        for i in range(0, 3):\n+            funds.sendtoaddress(tester.getnewaddress(address_type=\"bech32\"), 1)\n+        self.nodes[0].generate(1)\n+\n+        # Create transactions in order to calculate fees for the target bounds that can trigger this bug\n+        change_tx = tester.fundrawtransaction(tester.createrawtransaction([], [{funds.getnewaddress(): 1.5}]))\n+        tx = tester.createrawtransaction([], [{funds.getnewaddress(): 2}])\n+        no_change_tx = tester.fundrawtransaction(tx, {\"subtractFeeFromOutputs\": [0]})\n+\n+        overhead_fees = feerate * len(tx) / 2 / 1000",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 42,
    "original_position": 42,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To get the byte length of the hex string.",
    "created_at": "2021-08-19T16:02:57Z",
    "updated_at": "2021-08-19T16:02:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r692268515",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692268515"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r692268515"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692268515/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1003,
    "original_line": 1003,
    "side": "RIGHT",
    "in_reply_to_id": 691888435
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692269478",
    "pull_request_review_id": 734199703,
    "id": 692269478,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjI2OTQ3OA==",
    "diff_hunk": "@@ -969,6 +970,62 @@ def test_include_unsafe(self):\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n         wallet.sendrawtransaction(signedtx['hex'])\n \n+    def test_22670(self):\n+        # In issue #22670, it was observed that ApproximateBestSubset may\n+        # choose enough value to cover the target amount but not enough to cover the transaction fees.\n+        # This leads to a transaction whose actual transaction feerate is lower than expected.\n+        # However at normal feerates, the difference between the effective value and the real value\n+        # that this bug is not detected because the transaction fee must be at least 0.01 BTC (the minimum change value).\n+        # Otherwise the targeted minimum change value will be enough to cover the transaction fees that were not\n+        # being accounted for. So the minimum relay fee is set to 0.1 BTC/kvB in this test.\n+        self.log.info(\"Test issue 22670 ApproximateBestSubset bug\")\n+        # Make sure the default wallet will not be loaded when restarted with a high minrelaytxfee\n+        self.nodes[0].unloadwallet(self.default_wallet_name, False)\n+        feerate = Decimal(\"0.1\")\n+        self.restart_node(0, [f\"-minrelaytxfee={feerate}\", \"-discardfee=0\"]) # Set high minrelayfee, set discardfee to 0 for easier calculation\n+\n+        self.nodes[0].loadwallet(self.default_wallet_name, True)\n+        funds = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(wallet_name=\"tester\")\n+        tester = self.nodes[0].get_wallet_rpc(\"tester\")\n+\n+        # Because this test is specifically for ApproximateBestSubset, the target value must be greater\n+        # than any single input available, and require more than 1 input. So we make 3 outputs\n+        for i in range(0, 3):\n+            funds.sendtoaddress(tester.getnewaddress(address_type=\"bech32\"), 1)\n+        self.nodes[0].generate(1)\n+\n+        # Create transactions in order to calculate fees for the target bounds that can trigger this bug\n+        change_tx = tester.fundrawtransaction(tester.createrawtransaction([], [{funds.getnewaddress(): 1.5}]))\n+        tx = tester.createrawtransaction([], [{funds.getnewaddress(): 2}])\n+        no_change_tx = tester.fundrawtransaction(tx, {\"subtractFeeFromOutputs\": [0]})\n+\n+        overhead_fees = feerate * len(tx) / 2 / 1000\n+        cost_of_change = change_tx[\"fee\"] - no_change_tx[\"fee\"]\n+        fees = no_change_tx[\"fee\"]\n+        assert_greater_than(fees, 0.01)\n+\n+        def do_fund_send(target):\n+            create_tx = tester.createrawtransaction([], [{funds.getnewaddress(): lower_bound}])\n+            funded_tx = tester.fundrawtransaction(create_tx)\n+            signed_tx = tester.signrawtransactionwithwallet(funded_tx[\"hex\"])\n+            assert signed_tx[\"complete\"]\n+            decoded_tx = tester.decoderawtransaction(signed_tx[\"hex\"])\n+            assert_equal(len(decoded_tx[\"vin\"]), 3)\n+            assert tester.testmempoolaccept([signed_tx[\"hex\"]])[0][\"allowed\"]\n+\n+        # We want to choose more value than is available in 2 inputs when considering the fee,\n+        # but not enough to need 3 inputs when not considering the fee.\n+        # So the target value must be at least 2.00000001 - fee.\n+        lower_bound = Decimal(\"2.00000001\") - fees\n+        # The target value must be at most 2 - cost_of_change - not_input_fees - min_change (these are all\n+        # included in the target before ApproximateBestSubset).\n+        upper_bound = Decimal(\"2.0\") - cost_of_change - overhead_fees - Decimal(\"0.01\")",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 62,
    "original_position": 62,
    "commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "original_commit_id": "92885c4f69a5e6fc4989677d6e5be8a666fbff0d",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The lower and upper bounds are the minimum and maximum values that cause this test to fail prior to this PR. So a higher upper bound should still pass after this PR, and all values in between should pass after this PR.",
    "created_at": "2021-08-19T16:04:11Z",
    "updated_at": "2021-08-19T16:04:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r692269478",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692269478"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22686#discussion_r692269478"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692269478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1023,
    "original_line": 1023,
    "side": "RIGHT",
    "in_reply_to_id": 691888763
  }
]