[
  {
    "sha": "c5784085e9031ea1ad32a2aee897bd57a0482d24",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTc4NDA4NWU5MDMxZWExYWQzMmEyYWVlODk3YmQ1N2EwNDgyZDI0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-15T14:59:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-20T23:19:05Z"
      },
      "message": "Add exclude option to rpc-tests.py",
      "tree": {
        "sha": "6ce5b8f7fe8636bab70f94b3d99838b98b5b3097",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ce5b8f7fe8636bab70f94b3d99838b98b5b3097"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5784085e9031ea1ad32a2aee897bd57a0482d24",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5784085e9031ea1ad32a2aee897bd57a0482d24",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5784085e9031ea1ad32a2aee897bd57a0482d24",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5784085e9031ea1ad32a2aee897bd57a0482d24/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7639d38f14b1517c56856a2be4bd13f9d51ddf79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7639d38f14b1517c56856a2be4bd13f9d51ddf79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7639d38f14b1517c56856a2be4bd13f9d51ddf79"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "523d753c949b7f627452b9bc47ac1d5aef3d62c7",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5784085e9031ea1ad32a2aee897bd57a0482d24/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5784085e9031ea1ad32a2aee897bd57a0482d24/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=c5784085e9031ea1ad32a2aee897bd57a0482d24",
        "patch": "@@ -133,6 +133,7 @@ def main():\n     Help text and arguments for individual test script:''',\n                                      formatter_class=argparse.RawTextHelpFormatter)\n     parser.add_argument('--coverage', action='store_true', help='generate a basic coverage report for the RPC interface')\n+    parser.add_argument('--exclude', '-x', help='specify a comma-seperated-list of scripts to exclude. Do not include the .py extension in the name.')\n     parser.add_argument('--extended', action='store_true', help='run the extended test suite in addition to the basic tests')\n     parser.add_argument('--force', '-f', action='store_true', help='run tests even on platforms where they are disabled by default (e.g. windows).')\n     parser.add_argument('--help', '-h', '-?', action='store_true', help='print help text and exit')\n@@ -179,13 +180,6 @@ def main():\n         # in the ALL_SCRIPTS list. Accept the name with or without .py extension.\n         test_list = [t for t in ALL_SCRIPTS if\n                 (t in tests or re.sub(\".py$\", \"\", t) in tests)]\n-        if not test_list:\n-            print(\"No valid test scripts specified. Check that your test is in one \"\n-                  \"of the test lists in rpc-tests.py or run rpc-tests.py with no arguments to run all tests\")\n-            print(\"Scripts not found:\")\n-            print(tests)\n-            sys.exit(0)\n-\n     else:\n         # No individual tests have been specified. Run base tests, and\n         # optionally ZMQ tests and extended tests.\n@@ -198,6 +192,17 @@ def main():\n             # (for parallel running efficiency). This combined list will is no\n             # longer sorted.\n \n+    # Remove the test cases that the user has explicitly asked to exclude.\n+    if args.exclude:\n+        for exclude_test in args.exclude.split(','):\n+            if exclude_test + \".py\" in test_list:\n+                test_list.remove(exclude_test + \".py\")\n+\n+    if not test_list:\n+        print(\"No valid test scripts specified. Check that your test is in one \"\n+              \"of the test lists in rpc-tests.py, or run rpc-tests.py with no arguments to run all tests\")\n+        sys.exit(0)\n+\n     if args.help:\n         # Print help for rpc-tests.py, then print help of the first script and exit.\n         parser.print_help()"
      }
    ]
  }
]