S3RK,2021-08-23 06:38:12,"I think the underlying RPCs of the console commands are primarily for machines and not for humans. So it seems it's not a big deal to make two calls, and it might be even preferable than adding more parameters.\n\nWhy is it important for the desired use case to work from console rather than from GUI? ",https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-903485367,903485367,
ben-kaufman,2021-08-23 14:49:35,"There are cases where the RPC is used remotely, for example as a hidden service exposed over Tor. Then latency can be very bad and every call takes a long time, so reducing the number of calls is very important in these cases. In [Specter](https://github.com/cryptoadvance/specter-desktop), for example, we have many such users connecting to a remote Bitcoin Core over Tor, and so have to try and red",https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-903843166,903843166,
ben-kaufman,2021-08-23 20:06:30,Added test and release note in 3f9112c6291cbc22a3e14bbc6f39f454b40032ca,https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-904083073,904083073,
prayank23,2021-08-24 09:15:07,"> I think the underlying RPCs of the console commands are primarily for machines and not for humans. So it seems it's not a big deal to make two calls, and it might be even preferable than adding more parameters.\n\nAgree with this\n\n> have to try and reduce the number of separate calls to the minimum.\n\nThis also makes sense\n\nSince not including the new flag or setting it to true will",https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-904470153,904470153,
kristapsk,2021-08-24 09:57:46,"Have you seen #19443? There `skip` is replaced with `options`, which could be used for various things, including reverse order.",https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-904499192,904499192,
prayank23,2021-08-24 10:46:24,@kristapsk looks interesting. Will try today.,https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-904530854,904530854,
ben-kaufman,2021-08-24 17:44:03,Updated with d07577b259aa1144e92e0572e4711e4d7c2fcdfe to minimise code duplication.,https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-904846929,904846929,
benthecarman,2021-08-24 19:18:56,"> Have you seen #19443? There `skip` is replaced with `options`, which could be used for various things, including reverse order.\n\nLooks like it needs rebase",https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-904909261,904909261,
S3RK,2021-08-25 06:27:46,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-905221329,905221329,
kristapsk,2021-08-27 20:21:07,"@jamesob Functionality that could be used for this PR ar now split off from #19443 as #22807, which is pretty simple. Universal `options` argument was why I mentioned #19443 here in first place, not whole `paginatebypointer` thing.",https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-907455255,907455255,
DrahtBot,2021-11-15 14:29:42,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23507](https://github.com/bitcoin/bitcoin/pull/23507) (Refactor: Improve API design of `ScriptToUniv`, `TxToUniv` etc to",https://github.com/bitcoin/bitcoin/pull/22775#issuecomment-968965829,968965829,
benthecarman,2021-08-23 17:43:30,Should probably say which is the default in the hint,https://github.com/bitcoin/bitcoin/pull/22775#discussion_r694180396,694180396,src/wallet/rpcwallet.cpp
ben-kaufman,2021-08-23 20:05:34,Updated,https://github.com/bitcoin/bitcoin/pull/22775#discussion_r694271979,694271979,src/wallet/rpcwallet.cpp
jonatack,2021-09-15 16:06:01,"- This comment should be removed\n```diff\n-    // ret is newest to oldest\n-\n``` \n- The second comment below seems incorrect (can probably drop them)\n- Use clang format\n\n```diff\n     if (ascending_order) {\n-        result.push_backV({ txs.rend() - nFrom - nCount, txs.rend() - nFrom }); // Return oldest to newest\n+        result.push_backV({txs.rend() - nFrom - nCount, txs.rend(",https://github.com/bitcoin/bitcoin/pull/22775#discussion_r709335563,709335563,src/wallet/rpcwallet.cpp
jonatack,2021-09-15 16:08:19,"1. Subjective: calling the argument `ascending` would be shorter and just as clear to me.\n\n2. The following is simpler and would print a help that seems clearer and easier to understand:\n\n```suggestion\n                    {""ascending_order"", RPCArg::Type::BOOL, RPCArg::Default{true}, ""Whether to list transactions by ascending or descending order""},\n```\n\nreturns\n```\n5. ascending",https://github.com/bitcoin/bitcoin/pull/22775#discussion_r709337319,709337319,src/wallet/rpcwallet.cpp
jonatack,2021-09-15 16:10:43,"suggestion\n```diff\n-    // Default ascending_order to true if no value has been specified\n-    bool ascending_order = true;\n-\n-    if (!request.params[4].isNull()) {\n-        ascending_order = request.params[4].get_bool();\n-    }\n+    const bool ascending_order{request.params[4].isNull() ? true : request.params[4].get_bool()};\n```\n",https://github.com/bitcoin/bitcoin/pull/22775#discussion_r709339370,709339370,src/wallet/rpcwallet.cpp
jonatack,2021-09-15 16:55:31,"suggestion\n```diff\n New RPCs\n --------\n-- A new optional ascending_order flag in the `listtransactions` RPC\n-will allow to go through the transactions list from the oldest to\n-the newest in addition to the current newest to oldest behavior. (#22775)\n+\n+- RPC `listtransactions` has a new optional `ascending_order` argument that\n+  allows selecting whether to return transactions in",https://github.com/bitcoin/bitcoin/pull/22775#discussion_r709374301,709374301,doc/release-notes-22775.md
jonatack,2021-09-15 17:07:39,"suggestions\n```diff\n-        # The first transaction counting from the oldest (descending order) should be the last transaction counting from the newest (ascending order)\n+        size = len(self.nodes[0].listtransactions(count=10000))  # get size of transactions list\n+        # The first transaction in descending order should be the last transaction in ascending order.\n         assert_e",https://github.com/bitcoin/bitcoin/pull/22775#discussion_r709383193,709383193,test/functional/wallet_listtransactions.py
luke-jr,2021-09-20 01:40:29,"Maybe just a negative number for `skip`?\n\nAt the very least, make it an options object...",https://github.com/bitcoin/bitcoin/pull/22775#discussion_r711839099,711839099,src/wallet/rpcwallet.cpp
