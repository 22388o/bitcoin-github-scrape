[
  {
    "sha": "d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDc1NzdiMjU5YWExMTQ0ZTkyZTA1NzJlNDcxMWU0ZDdjMmZjZGZl",
    "commit": {
      "author": {
        "name": "benk10",
        "email": "ben.kaufman10@gmail.com",
        "date": "2021-08-24T17:47:07Z"
      },
      "committer": {
        "name": "benk10",
        "email": "ben.kaufman10@gmail.com",
        "date": "2021-08-24T17:47:07Z"
      },
      "message": "Add option to go from oldest to newest in listtransactions",
      "tree": {
        "sha": "862b504dfc501257e99593aaf554440a55822ae3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/862b504dfc501257e99593aaf554440a55822ae3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/comments",
    "author": {
      "login": "ben-kaufman",
      "id": 10667901,
      "node_id": "MDQ6VXNlcjEwNjY3OTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10667901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-kaufman",
      "html_url": "https://github.com/ben-kaufman",
      "followers_url": "https://api.github.com/users/ben-kaufman/followers",
      "following_url": "https://api.github.com/users/ben-kaufman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-kaufman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-kaufman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-kaufman/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-kaufman/orgs",
      "repos_url": "https://api.github.com/users/ben-kaufman/repos",
      "events_url": "https://api.github.com/users/ben-kaufman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-kaufman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ben-kaufman",
      "id": 10667901,
      "node_id": "MDQ6VXNlcjEwNjY3OTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10667901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-kaufman",
      "html_url": "https://github.com/ben-kaufman",
      "followers_url": "https://api.github.com/users/ben-kaufman/followers",
      "following_url": "https://api.github.com/users/ben-kaufman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-kaufman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-kaufman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-kaufman/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-kaufman/orgs",
      "repos_url": "https://api.github.com/users/ben-kaufman/repos",
      "events_url": "https://api.github.com/users/ben-kaufman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-kaufman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f5a406f003a060325128db47552089b3254044e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5a406f003a060325128db47552089b3254044e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5a406f003a060325128db47552089b3254044e3"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 42,
      "deletions": 5
    },
    "files": [
      {
        "sha": "80d9588041a1ebd97e047970c6e1d042d5ce378f",
        "filename": "doc/release-notes-22775.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/doc/release-notes-22775.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/doc/release-notes-22775.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-22775.md?ref=d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
        "patch": "@@ -0,0 +1,5 @@\n+New RPCs\n+--------\n+- A new optional ascending_order flag in the `listtransactions` RPC\n+will allow to go through the transactions list from the oldest to\n+the newest in addition to the current newest to oldest behavior. (#22775)"
      },
      {
        "sha": "39cf9e67cae9a067c62d424900ccfb2e428c97c8",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
        "patch": "@@ -64,6 +64,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listtransactions\", 1, \"count\" },\n     { \"listtransactions\", 2, \"skip\" },\n     { \"listtransactions\", 3, \"include_watchonly\" },\n+    { \"listtransactions\", 4, \"ascending_order\" },\n     { \"walletpassphrase\", 1, \"timeout\" },\n     { \"getblocktemplate\", 0, \"template_request\" },\n     { \"listsinceblock\", 1, \"target_confirmations\" },"
      },
      {
        "sha": "cb0b928b34b6b48ad37e0d4d3ce2b9d2fbd8c073",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 5,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
        "patch": "@@ -1414,6 +1414,7 @@ static RPCHelpMan listtransactions()\n                     {\"count\", RPCArg::Type::NUM, RPCArg::Default{10}, \"The number of transactions to return\"},\n                     {\"skip\", RPCArg::Type::NUM, RPCArg::Default{0}, \"The number of transactions to skip\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Include transactions to watch-only addresses (see 'importaddress')\"},\n+                    {\"ascending_order\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for ascending order (newest to oldest), false for descending order (oldest to newest), default is true\"}, \"The direction from which to start getting transactions\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::ARR, \"\", \"\",\n@@ -1483,19 +1484,37 @@ static RPCHelpMan listtransactions()\n     if (nFrom < 0)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Negative from\");\n \n+    // Default ascending_order to true if no value has been specified\n+    bool ascending_order = true;\n+\n+    if (!request.params[4].isNull()) {\n+        ascending_order = request.params[4].get_bool();\n+    }\n+\n     UniValue ret(UniValue::VARR);\n \n     {\n         LOCK(pwallet->cs_wallet);\n \n         const CWallet::TxItems & txOrdered = pwallet->wtxOrdered;\n \n-        // iterate backwards until we have nCount items to return:\n-        for (CWallet::TxItems::const_reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)\n-        {\n+        // Returns true when enough transactions have been accumulated.\n+        auto AccumulateTxns = [&](auto it) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n             CWalletTx *const pwtx = (*it).second;\n             ListTransactions(*pwallet, *pwtx, 0, true, ret, filter, filter_label);\n-            if ((int)ret.size() >= (nCount+nFrom)) break;\n+            return ((int)ret.size() >= (nCount + nFrom));\n+        };\n+\n+        // iterate until we have nCount items to return:\n+        // iterate backwards if ascending order or forwards if descending order\n+        if (ascending_order) {\n+            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n+                if (AccumulateTxns(it)) break;\n+            }\n+        } else {\n+            for (auto it = txOrdered.cbegin(); it != txOrdered.cend(); ++it) {\n+                if (AccumulateTxns(it)) break;\n+            }\n         }\n     }\n \n@@ -1508,7 +1527,11 @@ static RPCHelpMan listtransactions()\n \n     const std::vector<UniValue>& txs = ret.getValues();\n     UniValue result{UniValue::VARR};\n-    result.push_backV({ txs.rend() - nFrom - nCount, txs.rend() - nFrom }); // Return oldest to newest\n+    if (ascending_order) {\n+        result.push_backV({ txs.rend() - nFrom - nCount, txs.rend() - nFrom }); // Return oldest to newest\n+    } else {\n+        result.push_backV({ txs.cbegin() + nFrom, txs.cbegin() + nFrom + nCount }); // Return oldest to newest\n+    }\n     return result;\n },\n     };"
      },
      {
        "sha": "a39bf4e66c68f0243b80b9773fd56fc8cec3349b",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d07577b259aa1144e92e0572e4711e4d7c2fcdfe/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=d07577b259aa1144e92e0572e4711e4d7c2fcdfe",
        "patch": "@@ -103,6 +103,14 @@ def run_test(self):\n                                 {\"category\": \"receive\", \"amount\": Decimal(\"0.1\")},\n                                 {\"txid\": txid, \"label\": \"watchonly\"})\n \n+        self.log.info(\"Test 'ascending_order' feature\")\n+        # The first transaction counting from the oldest (descending order) should be the last transaction counting from the newest (ascending order)\n+        assert_equal(self.nodes[0].listtransactions(count=1, ascending_order=False),\n+                     self.nodes[0].listtransactions(count=1, skip=len(self.nodes[0].listtransactions(count=10000)) - 1, ascending_order=True))\n+        # The second and third transactions counting from the oldest (descending order) should be the 2 before the last transaction counting from the newest (ascending order)\n+        assert_equal(self.nodes[0].listtransactions(count=2, skip=1, ascending_order=False),\n+                     self.nodes[0].listtransactions(count=2, skip=len(self.nodes[0].listtransactions(count=10000)) - 3, ascending_order=True))\n+\n         self.run_rbf_opt_in_test()\n \n "
      }
    ]
  }
]