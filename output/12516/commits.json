[
  {
    "sha": "2736c9e05ebd71f2eeab490de7f9fba9ea8b4169",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzM2YzllMDVlYmQ3MWYyZWVhYjQ5MGRlN2Y5ZmJhOWVhOGI0MTY5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-23T07:10:42Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-23T07:10:42Z"
      },
      "message": "Avoid unintentional unsigned integer wraparounds in tests",
      "tree": {
        "sha": "2288814a29ae4c38f18fdd8e594e82541879db47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2288814a29ae4c38f18fdd8e594e82541879db47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aae64a21ba25ca86fe2bbb581681dc20d613fb44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aae64a21ba25ca86fe2bbb581681dc20d613fb44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aae64a21ba25ca86fe2bbb581681dc20d613fb44"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "01c3a6cedd1bc11a4c507187ae21c137df29dc3f",
        "filename": "src/test/prevector_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169/src/test/prevector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169/src/test/prevector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/prevector_tests.cpp?ref=2736c9e05ebd71f2eeab490de7f9fba9ea8b4169",
        "patch": "@@ -206,7 +206,7 @@ BOOST_AUTO_TEST_CASE(PrevectorTestInt)\n                 test.erase(InsecureRandRange(test.size()));\n             }\n             if (InsecureRandBits(3) == 2) {\n-                int new_size = std::max<int>(0, std::min<int>(30, test.size() + (InsecureRandRange(5)) - 2));\n+                int new_size = std::max(0, std::min(30, (int)test.size() + (int)InsecureRandRange(5) - 2));\n                 test.resize(new_size);\n             }\n             if (InsecureRandBits(3) == 3) {"
      },
      {
        "sha": "179df7dd3871faa2a6cdd23a13a49e9b5d893b0e",
        "filename": "src/test/scheduler_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169/src/test/scheduler_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169/src/test/scheduler_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/scheduler_tests.cpp?ref=2736c9e05ebd71f2eeab490de7f9fba9ea8b4169",
        "patch": "@@ -56,8 +56,8 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     int counter[10] = { 0 };\n     FastRandomContext rng(42);\n     auto zeroToNine = [](FastRandomContext& rc) -> int { return rc.randrange(10); }; // [0, 9]\n-    auto randomMsec = [](FastRandomContext& rc) -> int { return -11 + rc.randrange(1012); }; // [-11, 1000]\n-    auto randomDelta = [](FastRandomContext& rc) -> int { return -1000 + rc.randrange(2001); }; // [-1000, 1000]\n+    auto randomMsec = [](FastRandomContext& rc) -> int { return -11 + (int)rc.randrange(1012); }; // [-11, 1000]\n+    auto randomDelta = [](FastRandomContext& rc) -> int { return -1000 + (int)rc.randrange(2001); }; // [-1000, 1000]\n \n     boost::chrono::system_clock::time_point start = boost::chrono::system_clock::now();\n     boost::chrono::system_clock::time_point now = start;"
      },
      {
        "sha": "e6510cc214bb81221c256c63f1c98057e89b942c",
        "filename": "src/wallet/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169/src/wallet/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2736c9e05ebd71f2eeab490de7f9fba9ea8b4169/src/wallet/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/accounting_tests.cpp?ref=2736c9e05ebd71f2eeab490de7f9fba9ea8b4169",
        "patch": "@@ -82,7 +82,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     wtx.mapValue[\"comment\"] = \"y\";\n     {\n         CMutableTransaction tx(*wtx.tx);\n-        --tx.nLockTime;  // Just to change the hash :)\n+        ++tx.nLockTime;  // Just to change the hash :)\n         wtx.SetTx(MakeTransactionRef(std::move(tx)));\n     }\n     pwalletMain->AddToWallet(wtx);\n@@ -92,7 +92,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     wtx.mapValue[\"comment\"] = \"x\";\n     {\n         CMutableTransaction tx(*wtx.tx);\n-        --tx.nLockTime;  // Just to change the hash :)\n+        ++tx.nLockTime;  // Just to change the hash :)\n         wtx.SetTx(MakeTransactionRef(std::move(tx)));\n     }\n     pwalletMain->AddToWallet(wtx);"
      }
    ]
  }
]