luke-jr,2013-05-29T00:21:57Z,NACK. This design is intentional.\n,https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18588753,18588753,
paraboul,2013-05-29T00:22:36Z,"oh, @luke-jr can you elaborate?\nEdit:\nCan't we mix that intentional design and the one that check the balance by something like :\n- No [minconf] provided : no balance check\n- [minconf] provided : actually using it (and therefore check the balance accordingly)\n\nI see no reason why one would provide [minconf] and intentionally don't want to actually check the balance.\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18588781,18588781,
sipa,2013-05-29T01:11:50Z,"This is how it was originally implemented. However, as negative balances cannot be entirely prevented anyway (a crediting transaction gets reverted, for example; or you used a lower minconf value when spending), the responsability of checking for negative account balances was moved to the caller (f they desire that functionaliy).\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18590412,18590412,
BitcoinPullTester,2013-05-29T01:15:20Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/388ef407ca3722d050f5e16f00dfac00a2000156 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18590512,18590512,
sipa,2013-05-29T01:17:13Z,"I have no problem with optionally enabling balance checking, but it should be consistent... so send\* commands should have similar functionality in that case.\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18590561,18590561,
paraboul,2013-05-29T01:33:46Z,"I agree.\nThing is it's currently not consistent -- and worse, [minconf] despite being an argument supposed to prevent some damage, is not used.\n\nHowever I don't see why one would use send\* (that is : externally) without checking the balance. What happen to other accounts if one account become negative? A positive account will not be able to spend his funds because another is indebted? Family d",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18591065,18591065,
sipa,2013-05-29T01:35:20Z,"Account balances are just bean counters; they have nothing to do with the actual amount of coins available to the wallet. They can go negative without affecting your ability to spend, as long as the wallet itself has enough funds available.\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18591105,18591105,
paraboul,2013-05-29T01:38:42Z,"So it's possible (even counting the noname account (default)) that the sum of ""listaccounts"" is not equal to the wallet balance?\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18591232,18591232,
sipa,2013-05-29T02:13:51Z,"Well, in theory: no. The sum of all accounts should match what you have in your wallet. In practice, it may differ because there's some known small difference in how the balances are calculated in case of unconfirmed or immature transactions afaik.\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18592124,18592124,
BitcoinPullTester,2013-05-29T13:41:43Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c3fa3f9a1bdea9e76a535d583ce6f192730149fd for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18616813,18616813,
paraboul,2013-05-29T13:48:16Z,"What about this?\n- No [minconf] same behavior than before\n- [minconf] provided : using it.\n\nI know that it's still not consistent with send*, but it's IMHO still better than silent fail though.\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18617206,18617206,
gavinandresen,2013-05-29T13:51:59Z,@paraboul : what are you trying to do that you cannot do with the way it is implemented now?\n,https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18617461,18617461,
paraboul,2013-05-29T14:05:38Z,"@gavinandresen moving funds from one account to another without having to ""getbalance account minconf"" in order to check the sender balance. The current move command has a ""[minconf]"" argument which is not used.\n\nWIth the current implementation I would have to :\n- balance = getbalance accountA 6\n- if amount <= balance : move accountA accountB amount\n- else not enough funds\n\nWith this patch ",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18618401,18618401,
gavinandresen,2013-05-29T14:12:26Z,"@paraboul: confirmation tracking through 'moves' is non-trivial.\n\nE.g. lets say I send 11 BTC to an address associated with account A, and it gets 1 confirmation.\n\nThen I:\n  move accountA accountB 3\n  move accountB accountC 1 6  <-- does this succeed or fail ?\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18618846,18618846,
paraboul,2013-05-29T14:24:49Z,"If tracked correctly, it should indeed fails. It remains solid if you always use the same minconf though.\n",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18619699,18619699,
gavinandresen,2013-05-29T14:30:56Z,"... should fail until the original coins get 6 confirmations.  There is no code to track which inputs are 'moved' by a 'move'. And, actually, the code would have to track partial inputs. And what happens if you setaccount the address that originally received the coins away from accountA ?\n\nChanging this would require a ton of work and a long QA test plan to get it all correct. I don't think it i",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18620116,18620116,
paraboul,2013-05-29T14:32:51Z,You had me :)\nMulti-wallet would be great. Are there plans for this?\n,https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18620277,18620277,
sipa,2013-05-29T17:45:11Z,Yes! However note that multiwallet and accounts are completely separate solutions that aren't likely to solve the same problem...\n,https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18633717,18633717,
paraboul,2013-05-29T17:56:31Z,@sipa better coin control. I'm just looking for a solution to sandbox every accounts so that they can't interfere to each other (e.g. not using addr/funds/unspentoutput from AccountA when AccountB spends funds). Multi walltet would solve this problem if you consider one wallet per account.\n,https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18634447,18634447,
sipa,2013-05-29T18:19:39Z,@paraboul My point exactly. Accounts (as they currently) exist do NOT provide any coin control at all. That's why I say they solve a different problem.\n,https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18635859,18635859,
luke-jr,2013-05-29T20:24:18Z,"@paraboul Multi-wallet is planned, but I'm not sure it's really something targetting your use case. There should be no reason to isolate coins per-user. That just creates higher transaction fees for your users, prevents you from implementing proper security (an offline wallet), and propagates harmful myths about Bitcoin (such as that transactions have ""from"" or ""return"" addresses).\n\nWhat real pr",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18643499,18643499,
paraboul,2013-05-29T21:20:24Z,"@luke-jr My original idea was just to use ""account"" as a ledger.\nThat is : using the balance of each account in order to implement a simple exchange system.\nMy idea was : if two users are on the same wallet : do the transaction off-the-network (move) instead of a regular sendfrom(). For this I needed to check that the sender has enough funds confirmed by 6 blocks (hence the move [minconf]).\nBut",https://github.com/bitcoin/bitcoin/pull/2703#issuecomment-18647008,18647008,
