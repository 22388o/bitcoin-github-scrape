DrahtBot,2020-06-02 01:16:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16546 (External signer support - Wallet Box edition by Sjors)\n\nIf you consider this pull request important, please also",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-637210666,637210666,
jonasschnelli,2020-06-02 06:40:03,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-637311651,637311651,
Sjors,2020-06-08 11:24:06,Concept ACK. Can you add a sanity check to the test? E.g. a `getaddressinfo` call.,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-640543096,640543096,
achow101,2020-06-22 19:29:37,"> Maybe there should be a checksum at the end of the file to detect corruption.\n\nI'm not sure if that's really useful or practical. We are writing to the wallet file as we read the records so a checksum wouldn't be able to be computed until all records have been read and written to the file, at which point it's too late for a checksum to be useful.\n\n> Maybe there should be a magic string o",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-647727895,647727895,
achow101,2020-07-09 18:09:36,"Not sure about the path issue. I just use our fs module to try to get the absolute path.\n\nAlso updated the OP.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-656274176,656274176,
achow101,2020-08-31 23:14:23,"> I wonder if we should include a warning either in the output or in the dumpfile itself that the file should not be shared.\n\nI suppose we should. I would prefer to just output it on stdout rather than put it in the file.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684090845,684090845,
meshcollider,2020-08-31 23:33:24,@achow101 that sounds fine. Can you quickly add that in before I merge please.,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684101944,684101944,
meshcollider,2020-08-31 23:46:56,@promag do you have a proposed use-case for piping a wallet dump? That seems a little dangerous to me.,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684105921,684105921,
promag,2020-08-31 23:49:49,Compress or encrypt or grep ðŸ™‰ ,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684106734,684106734,
meshcollider,2020-09-01 00:04:41,"I think it should be left for a followup but in that case I think it should be done in a way that you have to explicitly choose to pass to stdout. I think many users may accidentally type ""dump"" without realizing they need to configure -dumpfile, and have their whole wallet just dumped to their terminal.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684111211,684111211,
promag,2020-09-01 00:09:33,"Yeah that's fine, like `-dumpfile -` or something.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684112844,684112844,
achow101,2020-09-01 02:38:38,Added the warning and a checksum to the dumpfile.,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684158119,684158119,
meshcollider,2020-09-01 10:44:39,Re-utACK 7e845b87c18719274c1db3c9d04fbf99407716c0,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684761162,684761162,
Sjors,2020-09-01 12:31:55,"Spurious Travis failure reported in #19853 and intentionally not restarted.\n\nAlso:\n```\nwallet/wallettool.cpp:134:33: warning: loop variable 'warning' of type 'const bilingual_str' creates a copy from type 'const bilingual_str' [-Wrange-loop-analysis]\n                for (const auto warning : warnings) {\n                                ^\nwallet/wallettool.cpp:134:22: note: use referen",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684818114,684818114,
achow101,2020-09-01 16:15:53,@sjors I don't think that was caused by this PR.,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-684973008,684973008,
promag,2020-09-03 00:26:39,"I wonder if the content should have the dump timestamp, at the end like `timestamp,...`?",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-686156813,686156813,
achow101,2020-09-03 15:51:38,"> I wonder if the content should have the dump timestamp, at the end like `timestamp,...`?\n\nI don't think that's necessary. The file itself will have a creation timestamp and I think that's good enough.\n\nIf we do want this, we can add it later. Records can be added after the checksum and `createfromdump` will ignore them.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-686585184,686585184,
achow101,2020-10-15 22:22:32,This will need to have a format option to specify bdb or sqlite. I'll work on that next week.,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-709620942,709620942,
Sjors,2020-10-16 09:14:25,"Great, I'll try migrating some BDB descriptor wallets to Sqlite once that's ready.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-709928840,709928840,
achow101,2020-10-18 18:49:23,Updated with a `-format` option added to `createfromdump`,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-711371247,711371247,
achow101,2020-10-21 16:12:34,"> Apparently this fails to dump/restore the wallet unique id.\n\nThe wallet id is not something we are actually using and supporting. It is a byproduct of BDB. Instead of forcing this wallet logic and database type agnostic tool to have to understand BDB, we should make the wallet id actually supported with #20205. I'm not adding BDB id stuff to this PR, it's out of scope and a layer violation.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-713689400,713689400,
S3RK,2020-10-23 03:49:17,"Code review ACK 225cfa9f0c44798ab42c27d161670c5ee74902a3\nCI failure seems unrelated",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-714891534,714891534,
Sjors,2020-10-26 11:07:40,tACK eff678b,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-716477601,716477601,
achow101,2020-11-03 18:12:31,Rebased and updated the tests.,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-721294197,721294197,
luke-jr,2020-11-19 22:33:56,Any reason to disallow dumping to stdout and creating from stdin?,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-730679352,730679352,
ryanofsky,2020-12-11 15:26:38,"This is a somewhat complicated change but it only affects wallet tool and has had ACKs at different points from me https://github.com/bitcoin/bitcoin/pull/19137#pullrequestreview-543253329, Sjors https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-716477601, Ivan https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-714891534, promag https://github.com/bitcoin/bitcoin/pull/19137#pullre",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-743258945,743258945,
Sjors,2020-12-15 12:18:40,"re-tACK 19b2f4d\n\nMore appropriate use of stdout and stderr would be nice, but can wait for a followup.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-745252814,745252814,
luke-jr,2020-12-15 17:18:24,NACK until this can handle dumping/restoring the wallet id. (Or alternatively simply refuse to dump/restore BDB wallets until this is fixed),https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-745437684,745437684,
ryanofsky,2020-12-15 18:58:09,"> NACK until this can handle dumping/restoring the wallet id. (Or alternatively simply refuse to dump/restore BDB wallets until this is fixed)\n\nWhat are the negative consequences of merging the PR without this feature? The [only place wallet ids are used](https://github.com/bitcoin/bitcoin/blob/8bb40d5f56c8e46f12786da0b6444cdde3b6f7c8/src/wallet/bdb.cpp#L356-L359) is to forbid opening an older",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-745497062,745497062,
luke-jr,2020-12-15 19:30:18,">What are the negative consequences of merging the PR without this feature?\n\nA user might think they've created an identical clone of a wallet that is in fact different.\n\n>an older type of wallet that we don't create anymore\n\nInteresting, I didn't realise the dedicated db environments fixed that. But ultimately not relevant.\n\n> I know there are future PRs and maybe forks that envis",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-745515785,745515785,
ryanofsky,2020-12-15 20:14:47,"> > What are the negative consequences of merging the PR without this feature?\n> \n> A user might think they've created an identical clone of a wallet that is in fact different.\n\nAs I explained, we don't have any code that treats these wallets as different. So the NACK above is based on other code which isn't part of the software and hasn't been described in any detail, which makes it not s",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-745540605,745540605,
MarcoFalke,2020-12-16 06:49:29,"It is already possible with RPCs to create an ""identical clone of a wallet that is in fact different"", so I think the NACK describes something unrelated to this pull and should thus be filed as an issue.\n\nEven if the NACK applied to this pull, instead of wholesale rejecting it, a simple documentation fixup can be applied to document the shortcomings and dangers, if there are any.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-745804532,745804532,
MarcoFalke,2020-12-16 09:46:22,"> More appropriate use of stdout and stderr would be nice, but can wait for a followup.\n\nSorry, this has been removed based on my feedback, because I missed that all strings written are hex-encoded (or ascii). See https://github.com/bitcoin/bitcoin/pull/19137#discussion_r443120133",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-746001910,746001910,
MarcoFalke,2020-12-16 09:46:51,@achow101 Let me know if you want this merged or want to address the style nits,https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-746002518,746002518,
achow101,2020-12-16 17:13:49,"Seeing as this now needs rebase, I guess I'll address the style nits.",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-746658980,746658980,
Sjors,2020-12-17 12:27:33,"In my experience treating wallets created from a dump as unique is a feature, not a bug. By definition the dump no longer gets updated, while the original does. And when you load from a dump, any rescan has to start where the dump left off, rather than whenever you closed the original wallet. In fact I like to keep both Sqlite and BDB versions around, and open, while testing these features (though",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-747409722,747409722,
MarcoFalke,2020-12-17 12:33:02,"re review ACK 23cac24dd3f2aaf88aab978e7ef4905772815cd2 only change is rebase and removing useless shared_ptr wrapper ðŸŽ¼\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre review ACK 23cac24dd3f2aaf88aab978e7ef4905772815cd2 only change is rebase and removing useless shared_ptr wrapper ðŸŽ¼\n-----BEGIN PGP S",https://github.com/bitcoin/bitcoin/pull/19137#issuecomment-747412246,747412246,
ryanofsky,2020-06-18 21:22:48,"In commit ""wallettool: Add createfromdump command"" (7ea3df8ccd13096088538fb4602208eae0831c13)\n\nWould suggest moving this to src/wallet/dump.cpp similar to src/wallet/salvage.cpp so the dump /load functionality be accessed other places outside the wallet tool, like by RPCs, the GUI, and c++ unit tests. Way arguments passed and errors are returned might have to change a little, though",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r442510191,442510191,src/wallet/wallettool.cpp
achow101,2020-06-19 00:46:50,I've moved it to a new file.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r442574059,442574059,src/wallet/wallettool.cpp
MarcoFalke,2020-06-20 10:27:10,"Is there any reason to support stdout?\n\nI'd find it easier to force this setting for both settings and it would simplify reasoning about arbitrary code execution. IIRC in bash simply catting a file can execute arbitrary commands.",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r443120133,443120133,src/bitcoin-wallet.cpp
achow101,2020-06-22 19:27:23,Removed the output to stdout.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r443777592,443777592,src/bitcoin-wallet.cpp
adamjonas,2020-06-29 18:02:14,Remove `;` at end of line.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r447154380,447154380,test/functional/tool_wallet.py
adamjonas,2020-06-29 18:04:28,"This is getting caught in lint-python-utf8-encoding for not specifying `encoding=""utf8""`.\n```suggestion\n        with open(wallet_dump, 'r', encoding=""utf8"") as f:\n```\n\nSame with the other `with open`s below (lines 244, 250, 255, and 260).",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r447155606,447155606,test/functional/tool_wallet.py
adamjonas,2020-06-29 18:24:52,"not your line but, s/wheter/whether/ if you have to touch-up",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r447166733,447166733,src/wallet/bdb.h
achow101,2020-06-29 20:56:38,Done,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r447249011,447249011,test/functional/tool_wallet.py
achow101,2020-06-29 20:56:46,Fixed,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r447249073,447249073,test/functional/tool_wallet.py
achow101,2020-06-29 20:57:20,I think that'd be better to fix in one of the prerequisite PRs or a followup to this whole PR stack.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r447249331,447249331,src/wallet/bdb.h
Sjors,2020-07-09 17:47:22,4d7d60a710f38a7bd2d9b8fb5da92186f2ad64ee: `ret` is already `false`,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r452388016,452388016,src/wallet/dump.cpp
achow101,2020-07-09 18:08:54,Hmm. That should be a break. Fixed.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r452399561,452399561,src/wallet/dump.cpp
Sjors,2020-08-31 18:08:38,Nit: `DUMP_VERSION`,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r480299273,480299273,src/wallet/dump.cpp
achow101,2020-09-01 02:38:26,Done,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r480632428,480632428,src/wallet/dump.cpp
promag,2020-09-02 11:52:09,Could check if open is successful and add corresponding test.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r482009780,482009780,src/wallet/dump.cpp
achow101,2020-09-02 17:07:30,"Not sure how that would be tested. The `open` occurs after file existence has been checked for, so the only thing it would error on is some system thing.",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r482228428,482228428,src/wallet/dump.cpp
achow101,2020-09-02 17:27:35,Added a check that `open` doesn't fail.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r482243457,482243457,src/wallet/dump.cpp
promag,2020-09-02 18:06:49,"You can test by creating a directory and removing write access, then try to create the dump there.",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r482266130,482266130,src/wallet/dump.cpp
promag,2020-09-03 00:24:09,"Like\n```py\nself.assert_raises_tool_error('Unable to open /root/cant_write for writing', '-wallet=todump', '-dumpfile=/root/cant_write', 'dump')\n```",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r482614513,482614513,src/wallet/dump.cpp
ryanofsky,2020-10-21 23:27:23,"In commit ""tests: Test bitcoin-wallet dump and createfromdump"" (35442fa568583c0da2c687966e49b3742f403870)\n\nLooking at the `CreateFromDump` implementation it seems like the wallet will be created but empty if there is a checksum error or other import error. It would be good if there was a check at this point to verify if the created wallets are loadable if they are supposed to be loadable or no",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509792246,509792246,test/functional/tool_wallet.py
ryanofsky,2020-10-21 23:28:58,"In commit ""wallettool: Add createfromdump command"" (6137750082dd28bf38bbb2922d6d040d4e854643)\n\n`ret` should be set to false if the Write call fails",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509792748,509792748,src/wallet/dump.cpp
ryanofsky,2020-10-21 23:33:22,"In commit ""wallettool: Add createfromdump command"" (6137750082dd28bf38bbb2922d6d040d4e854643)\n\nIdeally, it would probably be preferable to delete the half created wallet than to just leave it behind. \n\nI think you could add `if (!ret) wallet->Delete()` after `Wallet->Close()` below with Delete method implementations that just delete the main datafile after the database is closed.",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509794068,509794068,src/wallet/dump.cpp
achow101,2020-10-21 23:45:08,It would be preferable to do that but deleting things was non-trivial enough that I didn't want to spend the effort to figure it out.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509797552,509797552,src/wallet/dump.cpp
ryanofsky,2020-10-22 00:05:49,"> It would be preferable to do that but deleting things was non-trivial enough that I didn't want to spend the effort to figure it out.\n\nSure. I don't know, but I'd expect a simple implementation like the following to be adequate and safe:\n\n```c++\nassert(!m_db);\nfs::remove(m_file_path);\nfs::remove(m_dir_path);\n```",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509803825,509803825,src/wallet/dump.cpp
achow101,2020-10-22 03:13:00,I've added a check that the file exists (or doesn't for failure cases).,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509854140,509854140,test/functional/tool_wallet.py
achow101,2020-10-22 03:13:06,Done,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509854162,509854162,src/wallet/dump.cpp
achow101,2020-10-22 03:13:48,Added wallet removal.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509854321,509854321,src/wallet/dump.cpp
S3RK,2020-10-22 04:10:29,"1) Because `ret` overshadows another variable in the parent scope the function will return `true` and the error won't be shown to the user.\n\n2) even if we return `false` and show an error the dumpfile is still not complete, which could lead to broken backups if user misses an error. I suggest we remove the file if something goes wrong. So if the dumpfile exists it's always a complete dump.",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509868556,509868556,src/wallet/dump.cpp
S3RK,2020-10-22 04:14:06,"nit: What's similar about `info`, `salvage` and `dump`? Can we make it a one-level switch instead?\n",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509869271,509869271,src/wallet/wallettool.cpp
S3RK,2020-10-22 04:44:43,nit: not necessary as `MakeDatabase` with `options.require_create = true` will guarantee it doesn't exist.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509876468,509876468,src/wallet/dump.cpp
achow101,2020-10-22 05:26:02,"1. Stopped shadowing.\n2. Removing the dump file if `!ret`.",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509887594,509887594,src/wallet/dump.cpp
achow101,2020-10-22 05:26:35,Removed this `else if`. I think this is a left over of when `info` and `salvage` shared wallet opening code.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509887762,509887762,src/wallet/wallettool.cpp
achow101,2020-10-22 05:26:43,Removed.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r509887805,509887805,src/wallet/dump.cpp
MarcoFalke,2020-10-23 08:27:01,"This doesn't seem to affect the `create` command, but the `createfromdump` command? Should that be mentioned?",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r510719813,510719813,src/bitcoin-wallet.cpp
achow101,2020-10-23 16:39:52,Added a mention.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r511007422,511007422,src/bitcoin-wallet.cpp
ryanofsky,2020-11-03 16:03:57,"In commit ""wallettool: Add createfromdump command"" (fd1f2380cf736df25a27c2607f745ae248c73933)\n\nThis seems all right for now, but we should think about how to improve usability in the future because this is inconsistent with other ways wallets are created. Other ways to create wallets either default to BDB format or choose format based on a _descriptors/no descriptors_ option, not a _BDB/SQLite",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r516779603,516779603,src/wallet/dump.cpp
ryanofsky,2020-11-03 16:26:11,"In commit ""wallettool: Add createfromdump command"" (fd1f2380cf736df25a27c2607f745ae248c73933)\n\n- I think code probably should call wallet.reset() before this point. `wallet->Close` is called above, but it seems like Close for BDB only flushes the database, so the environment might not get freed until after fs::remove_all, and lead to later attempted writes.\n- Alternately this could use a dif",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r516795262,516795262,src/wallet/dump.cpp
achow101,2020-11-03 18:12:05,Added a reset.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r516863717,516863717,src/wallet/dump.cpp
luke-jr,2020-11-18 16:47:12,Maybe it should be included in the dump? (Can allow overriding still if user desires to do so),https://github.com/bitcoin/bitcoin/pull/19137#discussion_r526240887,526240887,src/wallet/dump.cpp
ryanofsky,2020-11-18 18:18:41,"re: https://github.com/bitcoin/bitcoin/pull/19137#discussion_r526240887\n\n> Maybe it should be included in the dump? (Can allow overriding still if user desires to do so)\n\n:+1:\n\nLike that idea",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r526319192,526319192,src/wallet/dump.cpp
achow101,2020-11-19 18:04:44,"Given that this tool is supposed to operate at the database level, I don't think it makes sense to have a `-descriptors`/`-nodescriptors` option for it. Additionally, because this tool doesn't have application level logic, I don't think it should be able to do any introspection of the wallet it creates in order to warn about unusual format and wallet type combinations.\n\nI would prefer that we ",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r527092004,527092004,src/wallet/dump.cpp
achow101,2020-11-19 20:11:23,I've limited `-format` to only `createfromdump`. I've also added a `format` line to the dump which is used to determine the database format if `-format` isn't provided. This required shuffling around some of the code in `createfromdump`. Tests have also been updated and partially refactored to make them a bit more readable.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r527167792,527167792,src/wallet/dump.cpp
luke-jr,2020-11-19 22:38:03,Warnings should typically go to stderr.,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r527251029,527251029,src/wallet/wallettool.cpp
luke-jr,2020-11-19 22:39:11,"Better to send this to stderr too, in case dumping to stdout (which can always be done with `-dumpfile /dev/stdout` even if not explicitly supported)",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r527251531,527251531,src/wallet/wallettool.cpp
MarcoFalke,2020-12-16 09:03:57,"```\n./wallet/dump.h:12:17: error: use of undeclared identifier 'std'\nbool DumpWallet(std::shared_ptr<CWallet> wallet, bilingual_str& error);\n                ^\n",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r544126240,544126240,src/wallet/dump.h
MarcoFalke,2020-12-16 09:13:54,"Also, is there any reason to pass a shared_ptr, when a reference suffices?\n\nSuggested diff for first commit:\n\n```diff\ndiff --git a/src/wallet/dump.cpp b/src/wallet/dump.cpp\nindex 242d8dc31c..2e366b2a19 100644\n--- a/src/wallet/dump.cpp\n+++ b/src/wallet/dump.cpp\n@@ -2,13 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r544132696,544132696,src/wallet/dump.h
achow101,2020-12-16 17:37:44,Done,https://github.com/bitcoin/bitcoin/pull/19137#discussion_r544492574,544492574,src/wallet/dump.h
ryanofsky,2020-12-17 13:32:17,"In commit ""wallettool: Add dump command"" (e1e7a90d5f0616a46ffadd62a9f1c65406cca6b4)\n\nFor a followup, it would be good to print an error in the `if (gArgs.IsArgSet(""-descriptors"") && command != ""create"")` case so there is an explicit error if someone tries to pass `-descriptors`/`-nodescriptors` to `createfromdump`. (Suggested originally in S3RK's PR https://github.com/bitcoin/bitcoin/pull/2036",https://github.com/bitcoin/bitcoin/pull/19137#discussion_r545091767,545091767,src/wallet/wallettool.cpp
