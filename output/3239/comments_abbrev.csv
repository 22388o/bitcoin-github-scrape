luke-jr,2013-11-12T02:04:02Z,The verbose flag seems needlessly redundant with getblocktemplate...\n,https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28261928,28261928,
jgarzik,2013-11-12T02:05:31Z,@luke-jr getblocktemplate always produces a subset of mempool\n,https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28261988,28261988,
luke-jr,2013-11-12T02:11:02Z,Not always...? Wouldn't the goal of a good mempool be to only keep transactions you'd be putting in templates?\n,https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28262223,28262223,
jgarzik,2013-11-12T02:27:33Z,"@luke-jr Yes, always.  Sometimes subset == set, but usually not.  The mempool will always store more than **one** block's worth of transactions.  getblocktemplate only returns up to 1MB, etc.\n",https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28262901,28262901,
luke-jr,2013-11-12T02:58:07Z,"Could just add some non-standard extensions to bitcoind getblocktemplate to request more, but meh.\n",https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28264035,28264035,
Diapolo,2013-11-12T07:21:37Z,Nit: CTxMemPoolEntrys should be CTxMemPoolEntries\n,https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28273393,28273393,
petertodd,2013-11-12T15:05:35Z,Remove EraseTransaction() while we're at it; only tx replacement uses that code. I don't see any way it could have gotten much if any testing in the past.\n,https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28300218,28300218,
petertodd,2013-11-12T15:11:20Z,It'd be better if ComputePriority() was not a part of CTransaction - priority calculations are node policy rather than consensus critical and we'd be better off if such code was kept out of the core data structures to make code review easier in the future.\n,https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28300759,28300759,
gavinandresen,2013-11-14T02:58:50Z,"Rebased, extended the help, and tweaked to rename verbose output 'dependson' to 'depends' to be more consistent with getblocktemplate, and to always output a 'depends' key (will be an empty array if no dependencies).\n\nRE: getblocktemplate: I seem to remember having the same argument when getrawmempool was pulled, and the decision remains getrawmempool is valuable.\n\nRE: removing EraseTransactio",https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28455681,28455681,
laanwj,2013-11-15T15:18:53Z,"ACK apart from that, appears to work as expected, and code changes look good\n",https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28576085,28576085,
gavinandresen,2013-11-20T05:19:20Z,"@laanwj: good catch, using ValueFromAmount to report fees now.\n",https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28864476,28864476,
gavinandresen,2013-11-20T05:50:03Z,"Testing on my smartfee branch (which save/restores the mempool), I noticed transactions with repeated txids in the depends array because they depends on multiple outputs from previous transactions.\n\nI decided to fix that by unique-ifying the depends array. The alternative would be to report ""txid:vout"" or something more complicated/verbose like  [ { ""txid: "" .... "", ""vout"" : 11 }, { ... } ]\n\nB",https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-28865423,28865423,
BitcoinPullTester,2013-11-29T06:02:19Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/702bb264d98874e1dc4dafa2aa17c60ba416ce19 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3239#issuecomment-29498153,29498153,
laanwj,2013-11-15T14:23:16Z,Any specific reason to specify the fee in satoshis here instead of using ValueFromAmount?\n,https://github.com/bitcoin/bitcoin/pull/3239#discussion_r7690661,7690661,src/rpcblockchain.cpp
rebroad,2021-09-07T22:18:21Z,"Do we need GetTime() and height()? Just thinking to save memory, it would be better if one could be derived quickly from the other.",https://github.com/bitcoin/bitcoin/pull/3239#discussion_r703891028,703891028,src/main.cpp
fanquake,2021-09-08T00:48:52Z,Stop commenting on 10 year old PRs. The code here likely doesn't even reflect the current codebase.,https://github.com/bitcoin/bitcoin/pull/3239#discussion_r703944492,703944492,src/main.cpp
