[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263048115",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263048115",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263048115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA0ODExNQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T06:54:44Z",
    "updated_at": "2016-11-26T06:54:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263048115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263051382",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263051382",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263051382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA1MTM4Mg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T08:29:04Z",
    "updated_at": "2016-11-26T08:29:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice. Concept ACK.\r\nNeeds test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263051382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263051967",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263051967",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263051967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA1MTk2Nw==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T08:45:41Z",
    "updated_at": "2016-11-26T08:45:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli I tried finding the fundrawtransaction tests but couldn't. Where are they?\r\n\r\nsrc/test/rpc_tests.cpp seems like the natural place for them, but I see no 'fund' in there at all.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263051967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263052532",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263052532",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263052532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA1MjUzMg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T09:01:56Z",
    "updated_at": "2016-11-26T09:01:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dooglus \r\nThere is one at `./qa/rpc-tests/fundrawtransaction.py`.\r\nThe tests should make sure that the `subtractFeeFromAmount` option work in conjunction with the custom feerate option (haven't look at your code so far).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263052532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263111374",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263111374",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263111374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzExMTM3NA==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-27T09:21:35Z",
    "updated_at": "2016-11-27T09:21:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli Thanks for pointing me at the `qa/` directory. I hadn't noticed it before.\r\n\r\nI have added tests for `subtractFeeFromAmount`, including checking that it works in combination with custom feerate.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263111374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263200387",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263200387",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263200387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzIwMDM4Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T07:23:40Z",
    "updated_at": "2016-11-28T07:23:40Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263200387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263202152",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263202152",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263202152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzIwMjE1Mg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T07:36:16Z",
    "updated_at": "2016-11-28T07:36:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code Review ACK a979010c80d5875ab26c9cdd5401e2b2905dd572.\r\nSquash required.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263202152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263203903",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263203903",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263203903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzIwMzkwMw==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T07:47:46Z",
    "updated_at": "2016-11-28T07:47:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "To 'squash' the commits do I just rewrite the same branch with a `push --force`? Or make a new branch and a new pull request?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263203903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263204233",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263204233",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263204233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzIwNDIzMw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T07:49:47Z",
    "updated_at": "2016-11-28T07:49:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dooglus: Yes. I normally do a `git rebase -I head~<amount-of-commits>`, find the commit you'd like to squash to and mark all later commits with a `s`. Then `git push --force`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263204233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263209117",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263209117",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263209117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzIwOTExNw==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T08:20:19Z",
    "updated_at": "2016-11-28T08:20:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli Thanks. The 'i' is lowercase and the 'HEAD' is uppercase but it was close enough.\r\n\r\nI used `git rebase -i HEAD~3` and it appears to have worked.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263209117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263387858",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263387858",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263387858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzM4Nzg1OA==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T20:41:39Z",
    "updated_at": "2016-11-28T20:41:39Z",
    "author_association": "MEMBER",
    "body": "utACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263387858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263710894",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263710894",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263710894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzcxMDg5NA==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T21:51:07Z",
    "updated_at": "2016-11-29T21:51:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Addressed @mrbandrews' nits. Should I re-squash now, or leave the 'nit' commit separate for a while?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263710894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263725673",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263725673",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263725673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzcyNTY3Mw==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T22:48:55Z",
    "updated_at": "2016-11-29T22:48:55Z",
    "author_association": "MEMBER",
    "body": "re-utACK 6a41954\r\n\r\n@dooglus good question, its not always clear.  I personally think that if the prior code is not broken , then its ok not to squash.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263725673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263808202",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-263808202",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 263808202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzgwODIwMg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-30T08:03:14Z",
    "updated_at": "2016-11-30T08:03:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 6a41954895460a033afc352af5c137418591cc6b\r\n@dooglus IMO squashing is not required when the commits has a reason to be separated. If it's just a trivial change/overhaul of the previous commit(s) in the PR, it should probably be squashed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263808202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265086138",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265086138",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265086138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA4NjEzOA==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T08:06:05Z",
    "updated_at": "2016-12-06T08:06:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've addressed all the review comments, rebased, squashed, and pushed the resulting commit.\r\n\r\nI'm wondering whether there's a potential issue with using integers to select which outputs to subtract the fee from, since the outputs are specified by a JSON dictionary, and dictionary keys are inherently unordered. Are we guaranteed when we `createrawtransaction '[]' '{\"a0\":1,\"a1\":1,\"a2\":1}'` that `a<n>` will be output `<n>`?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265086138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265147087",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265147087",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265147087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTE0NzA4Nw==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T13:16:53Z",
    "updated_at": "2016-12-06T13:16:53Z",
    "author_association": "MEMBER",
    "body": "@dooglus good point, I don't think so. Recently ran into this writing extended rpc tests for something.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265147087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265225116",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265225116",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265225116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTIyNTExNg==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T18:07:00Z",
    "updated_at": "2016-12-06T18:07:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@instagibbs me too:\r\n\r\n    $ python3\r\n    Python 3.4.2\r\n\r\n    >>> [k for k in {'a':1,'b':2,'c':3,'d':1,'e':1,'f':1}]\r\n    ['c', 'd', 'f', 'b', 'e', 'a']\r\n\r\nSince the input to `fundrawtransaction` is a raw transaction with its outputs already serialized this is less of an issue. But I tend to string my RPC calls together and expect the outputs to be serialized in the order I type them to `createrawtransaction`. They always do seem to be in the correct order except when using Python.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265225116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265226157",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265226157",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265226157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTIyNjE1Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T18:10:45Z",
    "updated_at": "2016-12-06T18:10:45Z",
    "author_association": "MEMBER",
    "body": "I don't think objects in JSON are assumed to have a meaningful ordering.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265226157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265231553",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265231553",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265231553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTIzMTU1Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T18:30:23Z",
    "updated_at": "2016-12-06T18:30:23Z",
    "author_association": "MEMBER",
    "body": "@dooglus For python you'd have to `import OrderedDict` (see #7980) but I don't think there is an ordered dict for json, so we should not rely on the order.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265231553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265252867",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265252867",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265252867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTI1Mjg2Nw==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T19:46:47Z",
    "updated_at": "2016-12-06T19:46:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "So we are saying that it's OK to use a list of integer indexes into the list of outputs because:\r\n\r\n1. by the time we're running `fundrawtransaction` the output list already has its order fixed (it's a raw transaction already, not a JSON object)\r\n2. we have no other way to refer to general outputs, since they can be arbitrary hex strings and may not even have a base58 address\r\n3. Bitcoin Core's use of univalue means that the JSON output list provided to `createrawtransaction` is always interpreted as an ordered dictionary anyway\r\n\r\nRight?\r\n\r\n(I tested point 3 as follows:\r\n\r\n    addr1=$(for x in {1..32}; do bitcoin-cli --testnet getnewaddress; done)\r\n    raw=$(bitcoin-cli --testnet createrawtransaction '[]' '{\"'$(echo $addr1 | sed 's/ /\":1,\"/g')'\":1}')\r\n    addr2=$(bitcoin-cli --testnet decoderawtransaction $raw | grep -E '^ {10}\"' | cut -d'\"' -f2)\r\n    echo $addr1 | sha1sum\r\n    echo $addr2 | sha1sum\r\n\r\nand found that the outputs appear in the raw transaction in the same order as listed in the input to `createrawtransaction`)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265252867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265255388",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265255388",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265255388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTI1NTM4OA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T19:55:40Z",
    "updated_at": "2016-12-06T19:55:40Z",
    "author_association": "MEMBER",
    "body": "I think reason (1) is enough to make position based indexing ok, and (2) strengthens it.\r\n\r\nI don't think (3) is a good reason or something we should ever rely on. The only reason this is brought up is because `createrawtransaction` accepts an object to list the outputs. If strict ordering is expected there, perhaps we should change that argument from `{\"addr1\":val1, \"addr2\":val2}` to `[[\"addr1\",val1],[\"addr2\",val2]]` instead (in another PR).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265255388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265362922",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265362922",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265362922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTM2MjkyMg==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T05:57:33Z",
    "updated_at": "2016-12-07T05:57:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa I'll look into making such a change in a separate PR. Using an object for the outputs not only means we cannot guarantee the order of the outputs but also having the addresses as dictionary keys means we can't have multiple outputs with the same address, which I sometimes like to do to ([example](https://blockchain.info/tx/48d6e58a8b60e69d121eab318712e27033cbe5a76953c9a428f57cf28fbc5f29)).\r\n\r\nI assume it would be best to allow the current object format in addition to the new array format for backwards compatibility.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265362922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265465902",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-265465902",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 265465902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTQ2NTkwMg==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T14:48:20Z",
    "updated_at": "2016-12-07T14:48:20Z",
    "author_association": "MEMBER",
    "body": "+1 on address reuse being a sometimes valuable tool",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265465902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266826063",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-266826063",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 266826063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgyNjA2Mw==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T18:49:00Z",
    "updated_at": "2016-12-13T18:49:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "What happens next? I addressed all the comments. Is there something else I need to do?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266826063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266870586",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-266870586",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 266870586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njg3MDU4Ng==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T21:41:14Z",
    "updated_at": "2016-12-13T21:41:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Addressed @ryanofsky nits, rebased, squashed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266870586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266880090",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-266880090",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 266880090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njg4MDA5MA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T22:18:38Z",
    "updated_at": "2016-12-13T22:18:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Lightly tested ACK 453bda63dd90986501ee61426e4d768a400bd371",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266880090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270022937",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-270022937",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 270022937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDAyMjkzNw==",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-02T21:37:37Z",
    "updated_at": "2017-01-02T21:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can this be merged now?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270022937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351837945",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-351837945",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 351837945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTgzNzk0NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-14T21:15:15Z",
    "updated_at": "2017-12-14T21:15:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'll look into making such a change in a separate PR. Using an object for the outputs not only means we cannot guarantee the order of the outputs but also having the addresses as dictionary keys means we can't have multiple outputs with the same address, which I sometimes like to do to ([example](https://blockchain.info/tx/48d6e58a8b60e69d121eab318712e27033cbe5a76953c9a428f57cf28fbc5f29)).\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/11872 was recently posted implementing this change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351837945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351846253",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#issuecomment-351846253",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9222",
    "id": 351846253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTg0NjI1Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-14T21:48:57Z",
    "updated_at": "2017-12-14T21:48:57Z",
    "author_association": "MEMBER",
    "body": "Indeed. Though, note that the rpc currently rejects duplicate addresses, and that specific case is not changed in #11872.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351846253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89728445",
    "pull_request_review_id": 10264915,
    "id": 89728445,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NzI4NDQ1",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "a979010c80d5875ab26c9cdd5401e2b2905dd572",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This will thrown an exception if one of the elements in the array is numeric. But I think this is okay.",
    "created_at": "2016-11-28T07:32:02Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r89728445",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89728445"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r89728445"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89728445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2568,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90076856",
    "pull_request_review_id": 10601899,
    "id": 90076856,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMDc2ODU2",
    "diff_hunk": "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 49,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: you can condense this to: \r\nassert(result[0]['fee']==result[1]['fee']== result[2]['fee']==result[3]['fee'])",
    "created_at": "2016-11-29T18:42:10Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90076856",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90076856"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90076856"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90076856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 691,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90077024",
    "pull_request_review_id": 10602066,
    "id": 90077024,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMDc3MDI0",
    "diff_hunk": "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1])\n+        assert(change[0] == change[2])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same",
    "created_at": "2016-11-29T18:42:47Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90077024",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90077024"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90077024"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90077024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 695,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90100155",
    "pull_request_review_id": 10624630,
    "id": 90100155,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMTAwMTU1",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should it throw an error if the given address is valid but is not among the outputs? (would have to check for this below, after retrieving the transaction).  It seems like in this case, the user is trying to pay the fee with one of the outputs but has made an error. ",
    "created_at": "2016-11-29T20:01:57Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90100155",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90100155"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90100155"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90100155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2574,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118751",
    "pull_request_review_id": 10643287,
    "id": 90118751,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMTE4NzUx",
    "diff_hunk": "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 49,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Interesting. I didn't know Python did that. I will do as you suggest.",
    "created_at": "2016-11-29T21:32:57Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118751",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118751"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118751"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 691,
    "side": "RIGHT",
    "in_reply_to_id": 90076856
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118788",
    "pull_request_review_id": 10643325,
    "id": 90118788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMTE4Nzg4",
    "diff_hunk": "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1])\n+        assert(change[0] == change[2])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. Addressed in 6a41954.",
    "created_at": "2016-11-29T21:33:07Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90118788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90118788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 695,
    "side": "RIGHT",
    "in_reply_to_id": 90077024
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90120089",
    "pull_request_review_id": 10644592,
    "id": 90120089,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMTIwMDg5",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wanted it to behave the same as it does [in `sendmany`](https://github.com/bitcoin/bitcoin/blob/v0.13.1/src/wallet/rpcwallet.cpp#L931), where it doesn't complain if you include an address that isn't a recipient at all.\r\n\r\nThe user could have a list of addresses which should pay fees when sent to, and use that same list as their `subtractFeeFromAmount` parameter whichever addresses they are sending to.",
    "created_at": "2016-11-29T21:39:23Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90120089",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90120089"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90120089"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90120089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2574,
    "side": "RIGHT",
    "in_reply_to_id": 90100155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90122153",
    "pull_request_review_id": 10646607,
    "id": 90122153,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMTIyMTUz",
    "diff_hunk": "@@ -643,5 +643,127 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'])\n+        assert(result[0]['fee'] == result[2]['fee'])\n+        assert(result[0]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 49,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Addressed in 6a41954.",
    "created_at": "2016-11-29T21:49:37Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90122153",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90122153"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90122153"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90122153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 691,
    "side": "RIGHT",
    "in_reply_to_id": 90076856
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90312311",
    "pull_request_review_id": 10833541,
    "id": 90312311,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzEyMzEx",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "One difference between this and `sendmany` is that `sendmany` requires transaction outputs to be base58 addresses, and takes `amounts` and `subtractfeefromamount` arguments in base58 form, while `fundrawtransaction` allows outputs to be arbitrary scripts. This means with the PR in its current form, there may be no way for the new `subtractFeeFromAmount` argument to refer to certain outputs.\r\n\r\nInstead of adding a `subtractFeeFromAmount` argument, I might suggest adding a `subtractFeeFromPositions` argument that takes a list of integer output indices. This would give callers the flexibility to refer to all outputs, be more consistent with the existing `changePosition` argument (which is also an integer output index), and also eliminate the need for `ExtractDestination` and `CBitcoinAddress::ToString` invocations in `CWallet::FundTransaction`.\r\n\r\n",
    "created_at": "2016-11-30T19:46:17Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90312311",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90312311"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90312311"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90312311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2574,
    "side": "RIGHT",
    "in_reply_to_id": 90100155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90314573",
    "pull_request_review_id": 10833541,
    "id": 90314573,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzE0NTcz",
    "diff_hunk": "@@ -2181,14 +2181,16 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, std::set<std::string>& setSubtractFeeFromAmount, const CTxDestination& destChange)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would suggest changing the new `set<string>` argument to `set<int>` to be consistent with the existing `nChangePosInOut` argument which refers to an output by integer index instead of base58 address string. This would give callers more flexibility in referring to outputs and also simplify handling of the new argument below.",
    "created_at": "2016-11-30T19:57:01Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90314573",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90314573"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90314573"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90314573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90316844",
    "pull_request_review_id": 10833541,
    "id": 90316844,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzE2ODQ0",
    "diff_hunk": "@@ -2476,11 +2476,16 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"1. \\\"hexstring\\\"           (string, required) The hex string of the raw transaction\\n\"\n                             \"2. options               (object, optional)\\n\"\n                             \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"     (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"    (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"includeWatching\\\"   (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"      (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"           (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"changeAddress\\\"         (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n+                            \"     \\\"changePosition\\\"        (numeric, optional, default random) The index of the change output\\n\"\n+                            \"     \\\"includeWatching\\\"       (boolean, optional, default false) Also select inputs which are watch only\\n\"\n+                            \"     \\\"lockUnspents\\\"          (boolean, optional, default false) Lock selected unspent outputs\\n\"\n+                            \"     \\\"feeRate\\\"               (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"subtractFeeFromAmount\\\" (array, optional) A json array with addresses.\\n\"\n+                            \"                             The fee will be equally deducted from the amount of each selected address.\\n\"\n+                            \"                             Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+                            \"                             If no addresses are specified here, the sender pays the fee.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe `s/If no addresses are specified here/If no addresses specified here are outputs in the transaction`",
    "created_at": "2016-11-30T20:08:34Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90316844",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90316844"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90316844"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90316844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2487,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317075",
    "pull_request_review_id": 10833541,
    "id": 90317075,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzE3MDc1",
    "diff_hunk": "@@ -2476,11 +2476,16 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"1. \\\"hexstring\\\"           (string, required) The hex string of the raw transaction\\n\"\n                             \"2. options               (object, optional)\\n\"\n                             \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"     (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"    (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"includeWatching\\\"   (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"      (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"           (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"changeAddress\\\"         (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n+                            \"     \\\"changePosition\\\"        (numeric, optional, default random) The index of the change output\\n\"\n+                            \"     \\\"includeWatching\\\"       (boolean, optional, default false) Also select inputs which are watch only\\n\"\n+                            \"     \\\"lockUnspents\\\"          (boolean, optional, default false) Lock selected unspent outputs\\n\"\n+                            \"     \\\"feeRate\\\"               (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"subtractFeeFromAmount\\\" (array, optional) A json array with addresses.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe mention after `This will not modify existing inputs, and will add one change output to the outputs` above that no existing outputs will be modified either unless subtractFeeFromAmount is specified.",
    "created_at": "2016-11-30T20:09:51Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317075",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317075"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317075"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2484,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317911",
    "pull_request_review_id": 10833541,
    "id": 90317911,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzE3OTEx",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 56,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Debug output will be a little better if you use `assert_equal` instead of assert here and below.",
    "created_at": "2016-11-30T20:14:19Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317911",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317911"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90317911"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90317911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 698,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90320482",
    "pull_request_review_id": 10833541,
    "id": 90320482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzIwNDgy",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 24,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use list comprehension:\r\n\r\n```\r\ndec_tx = [self.nodes[3].decoderawtransaction(tx['hex'] for tx in result]\r\n```",
    "created_at": "2016-11-30T20:28:10Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90320482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90320482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90320482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90320482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 666,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90321806",
    "pull_request_review_id": 10833541,
    "id": 90321806,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzIxODA2",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 3's change\n+        assert(change[0] + result[0]['fee'] == change[3])\n+\n+        # 4's output should be equal to 5's (output plus fee)\n+        assert(output[4] == output[5] + result[5]['fee'])\n+\n+        # 4's (change plus fee) should be equal to 5's change\n+        assert(change[4] + result[4]['fee'] == change[5])\n+\n+        inputs = []\n+        addr0 = self.nodes[2].getnewaddress()",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 68,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use dictionary comprehension:\r\n\r\n```\r\noutputs = {self.nodes[2].getnewaddress(): value for value in (1.0, 1.1, 1.2, 1.3)}\r\n```",
    "created_at": "2016-11-30T20:34:56Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90321806",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90321806"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90321806"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90321806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 710,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90323744",
    "pull_request_review_id": 10833541,
    "id": 90323744,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzIzNzQ0",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 3's change\n+        assert(change[0] + result[0]['fee'] == change[3])\n+\n+        # 4's output should be equal to 5's (output plus fee)\n+        assert(output[4] == output[5] + result[5]['fee'])\n+\n+        # 4's (change plus fee) should be equal to 5's change\n+        assert(change[4] + result[4]['fee'] == change[5])\n+\n+        inputs = []\n+        addr0 = self.nodes[2].getnewaddress()\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        addr3 = self.nodes[2].getnewaddress()\n+        outputs = {addr0: 1.0, addr1: 1.1, addr2: 1.2, addr3: 1.3}\n+        keys = list(outputs.keys())\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx),\n+                  # split the fee between outputs 0, 2, and 3, but not output 1\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [keys[0], keys[2], keys[3]]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex'])]\n+\n+        output = [[dec_tx[0]['vout'][0]['value'],\n+                   dec_tx[0]['vout'][1]['value'],\n+                   dec_tx[0]['vout'][2]['value'],\n+                   dec_tx[0]['vout'][3]['value'],\n+                   dec_tx[0]['vout'][4]['value']],\n+                  [dec_tx[1]['vout'][0]['value'],\n+                   dec_tx[1]['vout'][1]['value'],\n+                   dec_tx[1]['vout'][2]['value'],\n+                   dec_tx[1]['vout'][3]['value'],\n+                   dec_tx[1]['vout'][4]['value']]]\n+        del output[0][result[0]['changepos']]\n+        del output[1][result[1]['changepos']]",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 94,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use list comprehension:\r\n\r\n```\r\noutput = [[out[value] for i, out in enumerate(d['vout']) if i != r['changepos']]\r\n          for d, r in zip(dec_tx, result)]]\r\n```",
    "created_at": "2016-11-30T20:44:35Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90323744",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90323744"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90323744"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90323744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 736,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90324465",
    "pull_request_review_id": 10833541,
    "id": 90324465,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzI0NDY1",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 31,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use list comprehension (and similarly below): \r\n\r\n```\r\noutput = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\r\n```",
    "created_at": "2016-11-30T20:48:35Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90324465",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90324465"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90324465"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90324465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 673,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329419",
    "pull_request_review_id": 10850450,
    "id": 90329419,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzI5NDE5",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 56,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It appears that `assert_equal` can only compare two things. For cases like `assert(A == B == C == D)` would you prefer 3 separate `assert_equal()` calls instead?",
    "created_at": "2016-11-30T21:14:39Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329419",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329419"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329419"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 698,
    "side": "RIGHT",
    "in_reply_to_id": 90317911
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329459",
    "pull_request_review_id": 10850480,
    "id": 90329459,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzI5NDU5",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 3's change\n+        assert(change[0] + result[0]['fee'] == change[3])\n+\n+        # 4's output should be equal to 5's (output plus fee)\n+        assert(output[4] == output[5] + result[5]['fee'])\n+\n+        # 4's (change plus fee) should be equal to 5's change\n+        assert(change[4] + result[4]['fee'] == change[5])\n+\n+        inputs = []\n+        addr0 = self.nodes[2].getnewaddress()",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 68,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea, thanks.",
    "created_at": "2016-11-30T21:14:50Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329459",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329459"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90329459"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90329459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 710,
    "side": "RIGHT",
    "in_reply_to_id": 90321806
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330791",
    "pull_request_review_id": 10851766,
    "id": 90330791,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzMwNzkx",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 56,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense. In case something fails we have the verbose output.",
    "created_at": "2016-11-30T21:21:27Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90330791",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330791"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90330791"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90330791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 698,
    "side": "RIGHT",
    "in_reply_to_id": 90317911
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90344929",
    "pull_request_review_id": 10865387,
    "id": 90344929,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzQ0OTI5",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 56,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I actually only meant to suggest using assert_equal for binary comparisons like the one on line 698. But if you wanted to use it more broadly, you could extend the function (in util.py) to accept more arguments:\r\n\r\n```\r\ndef assert_equal(thing1, thing2, *args):\r\n    if thing1 != thing2 or any(thing1 != arg for arg in args):\r\n        raise AssertionError(\"!(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\n```",
    "created_at": "2016-11-30T22:36:44Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90344929",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90344929"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90344929"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90344929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 698,
    "side": "RIGHT",
    "in_reply_to_id": 90317911
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90349350",
    "pull_request_review_id": 10869787,
    "id": 90349350,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzQ5MzUw",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 56,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would it be better to extend `assert_equal()` to take an arbitrary number of parameters and have it compare them pairwise? Something like this would work:\r\n\r\n    def assert_equal(thing1, thing2, *other_things, depth=0):\r\n        if thing1 != thing2:\r\n            if depth or other_things:\r\n                raise AssertionError(\"%s != %s (positions %d and %d)\"%(str(thing1),str(thing2), depth, depth+1))\r\n            else:\r\n                raise AssertionError(\"%s != %s\"%(str(thing1),str(thing2)))\r\n        if other_things:\r\n            assert_equal(thing2, *other_things, depth = depth + 1)\r\n\r\n    >>> assert_equal(4, 4, 5)\r\n    AssertionError: 4 != 5 (positions 1 and 2)\r\n",
    "created_at": "2016-11-30T23:03:22Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90349350",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90349350"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90349350"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90349350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 698,
    "side": "RIGHT",
    "in_reply_to_id": 90317911
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350152",
    "pull_request_review_id": 10870569,
    "id": 90350152,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzUwMTUy",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 56,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I missed your last comment. Your solution is obviously much more elegant.\r\n\r\nIs it acceptable to include a change like that in this pull request or should it be separate?",
    "created_at": "2016-11-30T23:08:28Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350152",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350152"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350152"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 698,
    "side": "RIGHT",
    "in_reply_to_id": 90317911
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350993",
    "pull_request_review_id": 10871406,
    "id": 90350993,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwMzUwOTkz",
    "diff_hunk": "@@ -643,5 +643,123 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        #####################################\n+        # Test subtractFeeFromAmount option #\n+        #####################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        addr1 = self.nodes[2].getnewaddress()\n+        addr2 = self.nodes[2].getnewaddress()\n+        outputs = {addr1: 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr2]}), # addr2 isn't an output, so no subtraction\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromAmount\": [addr1]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromAmount\": [addr1]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[2]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[3]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[4]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[5]['hex'])]\n+\n+        output = [dec_tx[0]['vout'][1 - result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][1 - result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][1 - result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][1 - result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][1 - result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][1 - result[5]['changepos']]['value']]\n+\n+        change = [dec_tx[0]['vout'][result[0]['changepos']]['value'],\n+                  dec_tx[1]['vout'][result[1]['changepos']]['value'],\n+                  dec_tx[2]['vout'][result[2]['changepos']]['value'],\n+                  dec_tx[3]['vout'][result[3]['changepos']]['value'],\n+                  dec_tx[4]['vout'][result[4]['changepos']]['value'],\n+                  dec_tx[5]['vout'][result[5]['changepos']]['value']]\n+\n+        # total fee isn't affected by the subtractFeeFromAmount option\n+        assert(result[0]['fee'] == result[1]['fee'] == result[2]['fee'] == result[3]['fee'])\n+        assert(result[4]['fee'] == result[5]['fee'])\n+\n+        # change amounts in result 0, 1, and 2 are the same\n+        assert(change[0] == change[1] == change[2])\n+\n+        # outputs in result 0, 1, and 2 are the same\n+        assert(output[0] == output[1] == output[2])\n+\n+        # 0's output should be equal to 3's (output plus fee)\n+        assert(output[0] == output[3] + result[3]['fee'])",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 56,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "6a41954895460a033afc352af5c137418591cc6b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fine to include it here.",
    "created_at": "2016-11-30T23:14:43Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350993",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350993"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90350993"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90350993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 698,
    "side": "RIGHT",
    "in_reply_to_id": 90317911
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90481671",
    "pull_request_review_id": 11000420,
    "id": 90481671,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDgxNjcx",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@ryanofsky I like the idea but am a bit worried about the interaction of `subtractFeeFromPositions` and `changePosition`. It might not be clear to the user if the position marking is done before or after change output is added, or discount the wrong output by adding a `changePosition` argument.",
    "created_at": "2016-12-01T16:21:48Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90481671",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90481671"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90481671"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90481671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2574,
    "side": "RIGHT",
    "in_reply_to_id": 90100155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495987",
    "pull_request_review_id": 11015050,
    "id": 90495987,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDk1OTg3",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "At the time of running `fundrawtransaction` there is no change output, and the user wouldn't know where the change will be inserted, so the position marking must be done before the change output is added.\r\n\r\nI think since it is possible to add arbitrary hex output scripts which may not even have a corresponding address we need to be able to address the outputs by number rather than by address. It's also kind of ugly having to give the same address twice, once to createrawtransaction and then again to fundrawtransaction. I think using the output index (0 based) is cleaner.",
    "created_at": "2016-12-01T17:29:20Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90495987",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495987"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90495987"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90495987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2574,
    "side": "RIGHT",
    "in_reply_to_id": 90100155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90496821",
    "pull_request_review_id": 11015883,
    "id": 90496821,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDk2ODIx",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@dooglus the user will \"know\" where change is going if they attempt to set the change index they're setting in the option, which is my point. It's not plainly clear how this should interact, unless you spell it out.",
    "created_at": "2016-12-01T17:33:43Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90496821",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90496821"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90496821"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90496821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2574,
    "side": "RIGHT",
    "in_reply_to_id": 90100155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90516700",
    "pull_request_review_id": 11036078,
    "id": 90516700,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNTE2NzAw",
    "diff_hunk": "@@ -2553,6 +2561,19 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             overrideEstimatedFeerate = true;\n         }\n+\n+        if (options.exists(\"subtractFeeFromAmount\")) {\n+            subtractFeeFromAmount = options[\"subtractFeeFromAmount\"].get_array();\n+            for (unsigned int idx = 0; idx < subtractFeeFromAmount.size(); idx++) {\n+                string strAddress(subtractFeeFromAmount[idx].get_str());\n+                CBitcoinAddress address(strAddress);\n+                if (!address.IsValid())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+strAddress);\n+                if (setSubtractFeeFromAmount.count(strAddress))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+                setSubtractFeeFromAmount.insert(strAddress);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "64955cf43033ee93ea2462368270908bd2ab670a",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, I see. So I should spell it out...\r\n\r\nI think it makes sense to use the position indices before the change output is added.",
    "created_at": "2016-12-01T19:18:35Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90516700",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90516700"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r90516700"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90516700/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2574,
    "side": "RIGHT",
    "in_reply_to_id": 90100155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92249051",
    "pull_request_review_id": 12761130,
    "id": 92249051,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjQ5MDUx",
    "diff_hunk": "@@ -2181,14 +2181,15 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, std::set<int>& setSubtractFeeFromOutputs, const CTxDestination& destChange)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "New argument looks like it could be const reference",
    "created_at": "2016-12-13T19:39:11Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92249051",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92249051"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92249051"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92249051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92249276",
    "pull_request_review_id": 12761130,
    "id": 92249276,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjQ5Mjc2",
    "diff_hunk": "@@ -2181,14 +2181,15 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, std::set<int>& setSubtractFeeFromOutputs, const CTxDestination& destChange)\n {\n     vector<CRecipient> vecSend;\n \n     // Turn the txout set into a CRecipient vector\n-    BOOST_FOREACH(const CTxOut& txOut, tx.vout)\n+    for (unsigned int idx = 0; idx < tx.vout.size(); idx++)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Little better to use size_t here instead of unsigned int.",
    "created_at": "2016-12-13T19:40:07Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92249276",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92249276"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92249276"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92249276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2189,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92250462",
    "pull_request_review_id": 12761130,
    "id": 92250462,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjUwNDYy",
    "diff_hunk": "@@ -2567,10 +2580,21 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n     if (changePosition != -1 && (changePosition < 0 || (unsigned int)changePosition > tx.vout.size()))\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"changePosition out of bounds\");\n \n+    for (unsigned int idx = 0; idx < subtractFeeFromOutputs.size(); idx++) {\n+        int pos = subtractFeeFromOutputs[idx].get_int();\n+        if (setSubtractFeeFromOutputs.count(pos))\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s%d\", \"Invalid parameter, duplicated position: \", pos));",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Little unusual to use %s for the main string instead of `strprintf(\"Invalid parameter, duplicated position: %d\", pos)`",
    "created_at": "2016-12-13T19:45:47Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92250462",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92250462"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92250462"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92250462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2586,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92250945",
    "pull_request_review_id": 12761130,
    "id": 92250945,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjUwOTQ1",
    "diff_hunk": "@@ -2476,11 +2477,17 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"1. \\\"hexstring\\\"           (string, required) The hex string of the raw transaction\\n\"\n                             \"2. options               (object, optional)\\n\"\n                             \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"     (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"    (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"includeWatching\\\"   (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"      (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"           (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"changeAddress\\\"          (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n+                            \"     \\\"changePosition\\\"         (numeric, optional, default random) The index of the change output\\n\"\n+                            \"     \\\"includeWatching\\\"        (boolean, optional, default false) Also select inputs which are watch only\\n\"\n+                            \"     \\\"lockUnspents\\\"           (boolean, optional, default false) Lock selected unspent outputs\\n\"\n+                            \"     \\\"feeRate\\\"                (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"subtractFeeFromOutputs\\\" (array, optional) A json array of integers.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 24,
    "original_position": 24,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe just say an array instead of a json array, since the whole data structure is json.",
    "created_at": "2016-12-13T19:47:53Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92250945",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92250945"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92250945"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92250945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2485,
    "original_line": 2485,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92251733",
    "pull_request_review_id": 12761130,
    "id": 92251733,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjUxNzMz",
    "diff_hunk": "@@ -524,14 +524,18 @@ def assert_fee_amount(fee, tx_size, fee_per_kB):\n     if fee > (tx_size + 2) * fee_per_kB / 1000:\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n \n-def assert_equal(thing1, thing2):\n-    if thing1 != thing2:\n-        raise AssertionError(\"%s != %s\"%(str(thing1),str(thing2)))\n+def assert_equal(thing1, thing2, *args):\n+    if thing1 != thing2 or any(thing1 != arg for arg in args):\n+        raise AssertionError(\"!(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))",
    "path": "qa/rpc-tests/test_framework/util.py",
    "position": null,
    "original_position": 9,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since it is python not c, maybe replace `!` with `not`",
    "created_at": "2016-12-13T19:52:01Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92251733",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92251733"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92251733"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92251733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 529,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92255737",
    "pull_request_review_id": 12761130,
    "id": 92255737,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjU1NzM3",
    "diff_hunk": "@@ -643,5 +643,86 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        ######################################\n+        # Test subtractFeeFromOutputs option #\n+        ######################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromOutputs\": [0]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(tx['hex']) for tx in result]\n+        output = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+        change = [d['vout'][r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+\n+        # total fee isn't affected by the subtractFeeFromOutputs option\n+        assert_equal(result[0]['fee'], result[1]['fee'], result[2]['fee'])\n+        assert_equal(result[3]['fee'], result[4]['fee'])\n+\n+        # change amounts in result 0 and 1 are the same\n+        assert_equal(change[0], change[1])\n+\n+        # outputs in result 0 and 1 are the same\n+        assert_equal(output[0], output[1])\n+\n+        # 0's output should be equal to 2's (output plus fee)\n+        assert_equal(output[0], output[2] + result[2]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 2's change\n+        assert_equal(change[0] + result[0]['fee'], change[2])\n+\n+        # 3's output should be equal to 4's (output plus fee)\n+        assert_equal(output[3], output[4] + result[4]['fee'])\n+\n+        # 3's (change plus fee) should be equal to 4's change\n+        assert_equal(change[3] + result[3]['fee'], change[4])\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): value for value in (1.0, 1.1, 1.2, 1.3)}\n+        keys = list(outputs.keys())\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx),\n+                  # split the fee between outputs 0, 2, and 3, but not output 1\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0, 2, 3]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex'])]\n+",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": 45,
    "original_position": 58,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add comment describing output, could be `# Nested list of non-change output amounts for each transaction`",
    "created_at": "2016-12-13T20:11:39Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92255737",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92255737"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92255737"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92255737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 704,
    "original_line": 700,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92256125",
    "pull_request_review_id": 12761130,
    "id": 92256125,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjU2MTI1",
    "diff_hunk": "@@ -643,5 +643,86 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        ######################################\n+        # Test subtractFeeFromOutputs option #\n+        ######################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromOutputs\": [0]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(tx['hex']) for tx in result]\n+        output = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+        change = [d['vout'][r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+\n+        # total fee isn't affected by the subtractFeeFromOutputs option\n+        assert_equal(result[0]['fee'], result[1]['fee'], result[2]['fee'])\n+        assert_equal(result[3]['fee'], result[4]['fee'])\n+\n+        # change amounts in result 0 and 1 are the same\n+        assert_equal(change[0], change[1])\n+\n+        # outputs in result 0 and 1 are the same\n+        assert_equal(output[0], output[1])\n+\n+        # 0's output should be equal to 2's (output plus fee)\n+        assert_equal(output[0], output[2] + result[2]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 2's change\n+        assert_equal(change[0] + result[0]['fee'], change[2])\n+\n+        # 3's output should be equal to 4's (output plus fee)\n+        assert_equal(output[3], output[4] + result[4]['fee'])\n+\n+        # 3's (change plus fee) should be equal to 4's change\n+        assert_equal(change[3] + result[3]['fee'], change[4])\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): value for value in (1.0, 1.1, 1.2, 1.3)}\n+        keys = list(outputs.keys())\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx),\n+                  # split the fee between outputs 0, 2, and 3, but not output 1\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0, 2, 3]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex'])]\n+\n+        output = [[out['value'] for i, out in enumerate(d['vout']) if i != r['changepos']]\n+                  for d, r in zip(dec_tx, result)]\n+\n+        share = [o0 - o1 for o0, o1 in zip(output[0], output[1])]",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 62,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add comment like `# List of difference in output amounts between normal and subtractFee transactions.`",
    "created_at": "2016-12-13T20:13:42Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92256125",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92256125"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92256125"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92256125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 704,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92256786",
    "pull_request_review_id": 12761130,
    "id": 92256786,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjU2Nzg2",
    "diff_hunk": "@@ -643,5 +643,86 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        ######################################\n+        # Test subtractFeeFromOutputs option #\n+        ######################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromOutputs\": [0]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(tx['hex']) for tx in result]\n+        output = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+        change = [d['vout'][r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+\n+        # total fee isn't affected by the subtractFeeFromOutputs option\n+        assert_equal(result[0]['fee'], result[1]['fee'], result[2]['fee'])\n+        assert_equal(result[3]['fee'], result[4]['fee'])\n+\n+        # change amounts in result 0 and 1 are the same",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 29,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This and the 5 following comments are basically just describing the asserts without adding any information. Could maybe remove the comments and condense the asserts.",
    "created_at": "2016-12-13T20:16:56Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92256786",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92256786"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92256786"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92256786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 671,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268492",
    "pull_request_review_id": 12781141,
    "id": 92268492,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjY4NDky",
    "diff_hunk": "@@ -2181,14 +2181,15 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, std::set<int>& setSubtractFeeFromOutputs, const CTxDestination& destChange)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed.",
    "created_at": "2016-12-13T21:18:59Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92268492",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268492"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92268492"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2184,
    "side": "RIGHT",
    "in_reply_to_id": 92249051
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268510",
    "pull_request_review_id": 12781160,
    "id": 92268510,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjY4NTEw",
    "diff_hunk": "@@ -2181,14 +2181,15 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, std::set<int>& setSubtractFeeFromOutputs, const CTxDestination& destChange)\n {\n     vector<CRecipient> vecSend;\n \n     // Turn the txout set into a CRecipient vector\n-    BOOST_FOREACH(const CTxOut& txOut, tx.vout)\n+    for (unsigned int idx = 0; idx < tx.vout.size(); idx++)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK.",
    "created_at": "2016-12-13T21:19:04Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92268510",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268510"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92268510"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2189,
    "side": "RIGHT",
    "in_reply_to_id": 92249276
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268989",
    "pull_request_review_id": 12781600,
    "id": 92268989,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjY4OTg5",
    "diff_hunk": "@@ -2476,11 +2477,17 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"1. \\\"hexstring\\\"           (string, required) The hex string of the raw transaction\\n\"\n                             \"2. options               (object, optional)\\n\"\n                             \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"     (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"    (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"includeWatching\\\"   (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"      (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"           (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"changeAddress\\\"          (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n+                            \"     \\\"changePosition\\\"         (numeric, optional, default random) The index of the change output\\n\"\n+                            \"     \\\"includeWatching\\\"        (boolean, optional, default false) Also select inputs which are watch only\\n\"\n+                            \"     \\\"lockUnspents\\\"           (boolean, optional, default false) Lock selected unspent outputs\\n\"\n+                            \"     \\\"feeRate\\\"                (numeric, optional, default not set: makes wallet determine the fee) Set a specific feerate (\" + CURRENCY_UNIT + \" per KB)\\n\"\n+                            \"     \\\"subtractFeeFromOutputs\\\" (array, optional) A json array of integers.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 24,
    "original_position": 24,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree, but it appears that everywhere else we refer to 'json array' (see `sendmany`, `addmultisigaddress`, `lockunspent`, `listunspent`...). Nowhere (in rpcwallet.cpp at least) do we simply say 'an array'.\r\n\r\nWill leave as 'json array' for the sake of consistency.",
    "created_at": "2016-12-13T21:21:35Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92268989",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268989"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92268989"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92268989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2485,
    "original_line": 2485,
    "side": "RIGHT",
    "in_reply_to_id": 92250945
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269319",
    "pull_request_review_id": 12781918,
    "id": 92269319,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjY5MzE5",
    "diff_hunk": "@@ -2567,10 +2580,21 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n     if (changePosition != -1 && (changePosition < 0 || (unsigned int)changePosition > tx.vout.size()))\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"changePosition out of bounds\");\n \n+    for (unsigned int idx = 0; idx < subtractFeeFromOutputs.size(); idx++) {\n+        int pos = subtractFeeFromOutputs[idx].get_int();\n+        if (setSubtractFeeFromOutputs.count(pos))\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s%d\", \"Invalid parameter, duplicated position: \", pos));",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Absolutely.",
    "created_at": "2016-12-13T21:23:15Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92269319",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269319"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92269319"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2586,
    "side": "RIGHT",
    "in_reply_to_id": 92250462
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269408",
    "pull_request_review_id": 12782017,
    "id": 92269408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjY5NDA4",
    "diff_hunk": "@@ -524,14 +524,18 @@ def assert_fee_amount(fee, tx_size, fee_per_kB):\n     if fee > (tx_size + 2) * fee_per_kB / 1000:\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n \n-def assert_equal(thing1, thing2):\n-    if thing1 != thing2:\n-        raise AssertionError(\"%s != %s\"%(str(thing1),str(thing2)))\n+def assert_equal(thing1, thing2, *args):\n+    if thing1 != thing2 or any(thing1 != arg for arg in args):\n+        raise AssertionError(\"!(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))",
    "path": "qa/rpc-tests/test_framework/util.py",
    "position": null,
    "original_position": 9,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I can't imagine who might have written that! ;)\r\n\r\nWill change `!` to `not`.",
    "created_at": "2016-12-13T21:23:45Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92269408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92269408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 529,
    "side": "RIGHT",
    "in_reply_to_id": 92251733
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269744",
    "pull_request_review_id": 12782378,
    "id": 92269744,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjY5NzQ0",
    "diff_hunk": "@@ -643,5 +643,86 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        ######################################\n+        # Test subtractFeeFromOutputs option #\n+        ######################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromOutputs\": [0]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(tx['hex']) for tx in result]\n+        output = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+        change = [d['vout'][r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+\n+        # total fee isn't affected by the subtractFeeFromOutputs option\n+        assert_equal(result[0]['fee'], result[1]['fee'], result[2]['fee'])\n+        assert_equal(result[3]['fee'], result[4]['fee'])\n+\n+        # change amounts in result 0 and 1 are the same",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 29,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree.",
    "created_at": "2016-12-13T21:25:30Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92269744",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269744"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92269744"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92269744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 671,
    "side": "RIGHT",
    "in_reply_to_id": 92256786
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92270395",
    "pull_request_review_id": 12783049,
    "id": 92270395,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjcwMzk1",
    "diff_hunk": "@@ -643,5 +643,86 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        ######################################\n+        # Test subtractFeeFromOutputs option #\n+        ######################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromOutputs\": [0]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(tx['hex']) for tx in result]\n+        output = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+        change = [d['vout'][r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+\n+        # total fee isn't affected by the subtractFeeFromOutputs option\n+        assert_equal(result[0]['fee'], result[1]['fee'], result[2]['fee'])\n+        assert_equal(result[3]['fee'], result[4]['fee'])\n+\n+        # change amounts in result 0 and 1 are the same\n+        assert_equal(change[0], change[1])\n+\n+        # outputs in result 0 and 1 are the same\n+        assert_equal(output[0], output[1])\n+\n+        # 0's output should be equal to 2's (output plus fee)\n+        assert_equal(output[0], output[2] + result[2]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 2's change\n+        assert_equal(change[0] + result[0]['fee'], change[2])\n+\n+        # 3's output should be equal to 4's (output plus fee)\n+        assert_equal(output[3], output[4] + result[4]['fee'])\n+\n+        # 3's (change plus fee) should be equal to 4's change\n+        assert_equal(change[3] + result[3]['fee'], change[4])\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): value for value in (1.0, 1.1, 1.2, 1.3)}\n+        keys = list(outputs.keys())\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx),\n+                  # split the fee between outputs 0, 2, and 3, but not output 1\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0, 2, 3]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex'])]\n+",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": 45,
    "original_position": 58,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK.",
    "created_at": "2016-12-13T21:28:56Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92270395",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92270395"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92270395"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92270395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 704,
    "original_line": 700,
    "side": "RIGHT",
    "in_reply_to_id": 92255737
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92270410",
    "pull_request_review_id": 12783065,
    "id": 92270410,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMjcwNDEw",
    "diff_hunk": "@@ -643,5 +643,86 @@ def run_test(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+        ######################################\n+        # Test subtractFeeFromOutputs option #\n+        ######################################\n+\n+        # Make sure there is exactly one input so coin selection can't skew the result\n+        assert_equal(len(self.nodes[3].listunspent(1)), 1)\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}), # empty subtraction list\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}), # uses min_relay_tx_fee (set by settxfee)\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee}),\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2*min_relay_tx_fee, \"subtractFeeFromOutputs\": [0]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(tx['hex']) for tx in result]\n+        output = [d['vout'][1 - r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+        change = [d['vout'][r['changepos']]['value'] for d, r in zip(dec_tx, result)]\n+\n+        # total fee isn't affected by the subtractFeeFromOutputs option\n+        assert_equal(result[0]['fee'], result[1]['fee'], result[2]['fee'])\n+        assert_equal(result[3]['fee'], result[4]['fee'])\n+\n+        # change amounts in result 0 and 1 are the same\n+        assert_equal(change[0], change[1])\n+\n+        # outputs in result 0 and 1 are the same\n+        assert_equal(output[0], output[1])\n+\n+        # 0's output should be equal to 2's (output plus fee)\n+        assert_equal(output[0], output[2] + result[2]['fee'])\n+\n+        # 0's (change plus fee) should be equal to 2's change\n+        assert_equal(change[0] + result[0]['fee'], change[2])\n+\n+        # 3's output should be equal to 4's (output plus fee)\n+        assert_equal(output[3], output[4] + result[4]['fee'])\n+\n+        # 3's (change plus fee) should be equal to 4's change\n+        assert_equal(change[3] + result[3]['fee'], change[4])\n+\n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress(): value for value in (1.0, 1.1, 1.2, 1.3)}\n+        keys = list(outputs.keys())\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+\n+        result = [self.nodes[3].fundrawtransaction(rawtx),\n+                  # split the fee between outputs 0, 2, and 3, but not output 1\n+                  self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0, 2, 3]})]\n+\n+        dec_tx = [self.nodes[3].decoderawtransaction(result[0]['hex']),\n+                  self.nodes[3].decoderawtransaction(result[1]['hex'])]\n+\n+        output = [[out['value'] for i, out in enumerate(d['vout']) if i != r['changepos']]\n+                  for d, r in zip(dec_tx, result)]\n+\n+        share = [o0 - o1 for o0, o1 in zip(output[0], output[1])]",
    "path": "qa/rpc-tests/fundrawtransaction.py",
    "position": null,
    "original_position": 62,
    "commit_id": "453bda63dd90986501ee61426e4d768a400bd371",
    "original_commit_id": "56ea97409349baaf064c6c2a9da0ba8bbe207f27",
    "user": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK.",
    "created_at": "2016-12-13T21:29:01Z",
    "updated_at": "2016-12-13T21:38:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92270410",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92270410"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9222#discussion_r92270410"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9222"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92270410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 704,
    "side": "RIGHT",
    "in_reply_to_id": 92256125
  }
]