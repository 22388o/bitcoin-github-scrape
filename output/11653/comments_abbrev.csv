NicolasDorier,2017-11-10T10:14:36Z,Just refactored.,https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343433280,343433280,
luke-jr,2017-11-10T16:47:03Z,"(Light concept NACK because utilities should be in libraries, not RPC.)",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343525049,343525049,
promag,2017-11-10T21:20:13Z,"@luke-jr I understand that but there is no harm in having these utilities:\n - they don't block, just spend a thread handling the request;\n - make the source stronger by using core code and having test coverage;\n - always updated response, libraries can have bugs or be outdated.\n\nThat said, most `*rawtransactions` are also utilities, and they are supported.",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343589702,343589702,
NicolasDorier,2017-11-11T01:43:45Z,"@luke-jr When you start doing services which span multiple blockchain (cross chain swap), then library can't possibly know how to sign each and every of them. While if each expose `getsignaturehash` it becomes possible. I bumped into the need of that as I was trying to do a cross chain swap between bitcoin and elements.",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343630428,343630428,
sipa,2017-11-11T01:45:54Z,"@NicolasDorier I don't see how that is related. You need *some* code specific for each chain anyway, no? ",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343630625,343630625,
NicolasDorier,2017-11-11T01:48:09Z,"@sipa, not really. By using using `decoderawtransaction`, `decodescript`, `createrawtransaction` and all of those utilities, I can create transaction on two chains even if their binary representation of a transaction is completely different.\nBasically, this is one of the piece missing to have a generic code for all crypto forked from Bitcoin, which does not rely on a library knowing the details.",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343630803,343630803,
sipa,2017-11-11T02:00:22Z,"@NicolasDorier I don't understand, you can't just paste signature hashes into any other RPC, so it can't be a 'missing piece'. You still need to know what the chain's signatures look like (ECDSA, sighash flags, scripting system, ...) to use that information for anything. I expect that if not already, between any two interesting chains those things will differ significantly.\n\nA more useful thin",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343631851,343631851,
NicolasDorier,2017-11-11T02:09:31Z,"@sipa there is indeed the creation of script that the library need. But the scripts are most likely similar accross all chains.\nGood point for the ECDSA. I thought they were not different, but they are: Bitcoin Cash is using another sighash. I agree, having a RPC method `gettransactionsignature` where you pass the private key be more generic. Will work on another PR for this as well.",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343632622,343632622,
NicolasDorier,2017-11-11T03:14:50Z,"I addressed the nits, I keep this open while working on an alternative `gettransactionsignature` which accept a private key as well and returns the signature.",https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343636409,343636409,
NicolasDorier,2017-11-12T05:10:03Z,Alternative `signinput`: https://github.com/bitcoin/bitcoin/pull/11666 ,https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-343714087,343714087,
NicolasDorier,2018-03-06T17:04:38Z,supersede by #11666,https://github.com/bitcoin/bitcoin/pull/11653#issuecomment-370853167,370853167,
laanwj,2017-11-10T10:03:03Z,"This table is duplicated with signrawtransaction, which makes it harder to change later. Please factor it out.",https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150195288,150195288,src/rpc/misc.cpp
MarcoFalke,2017-11-10T15:48:13Z,"No trailing white space, please.",https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150268128,150268128,test/functional/getsignaturehash.py
promag,2017-11-10T16:26:34Z,`const std::string& hash_type`,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150278574,150278574,src/rpc/server.cpp
promag,2017-11-10T16:27:23Z,Avoid 2nd lookup by using `map::find`.,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150278783,150278783,src/rpc/server.cpp
promag,2017-11-10T16:28:18Z,For `getsignaturehash` the parameter name is `sighashtype`.,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150279016,150279016,src/rpc/server.cpp
promag,2017-11-10T16:30:40Z,"Nit, remove 2nd empty line.",https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150279772,150279772,test/functional/getsignaturehash.py
promag,2017-11-10T16:31:53Z,"Declare `tx` only once, and at the same time these 2 asserts will be more readable.",https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150280219,150280219,test/functional/getsignaturehash.py
promag,2017-11-10T16:32:07Z,Remove 2nd empty line.,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150280298,150280298,test/functional/getsignaturehash.py
promag,2017-11-10T16:35:26Z,Should `ANYONECANPAY|SINGLE` be possible?,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150281481,150281481,src/rpc/server.cpp
promag,2017-11-10T16:36:31Z,Wrong indentation?,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150281799,150281799,src/rpc/misc.cpp
promag,2017-11-10T16:38:44Z,"Nit, there are a couple of `{}` missing, as per developer notes.",https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150282336,150282336,src/rpc/misc.cpp
promag,2017-11-10T16:41:32Z,Please align the descriptions.,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150282967,150282967,src/rpc/misc.cpp
luke-jr,2017-11-10T16:43:12Z,"New RPCs should use satoshis, especially for low-level stuff.",https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150283491,150283491,src/rpc/misc.cpp
luke-jr,2017-11-10T16:43:57Z,This doesn't explain what it is.,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150283768,150283768,src/rpc/misc.cpp
NicolasDorier,2017-11-11T01:59:42Z,why not?,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150370695,150370695,src/rpc/server.cpp
promag,2017-11-11T02:05:43Z,Currently it's not.,https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150370911,150370911,src/rpc/server.cpp
NicolasDorier,2017-11-11T02:16:33Z,"the scriptCode is difficult to explain, it depends on `OP_CODESEPARATOR` and whether you are using Segwit/P2SH/Segwit-P2SH/Normal script. It will never fit in one line.",https://github.com/bitcoin/bitcoin/pull/11653#discussion_r150371275,150371275,src/rpc/misc.cpp
