MarcoFalke,2019-12-19 16:10:03,"Yeah, I wanted to do the same, but there was no rationale on why no_witness is tried first, so I didn't touch the code. Concept ACK.",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-567554319,567554319,
sipa,2019-12-19 16:29:39,"This is incorrect I think. If you swap the order, the ""!try_witness"" needs to turn into a ""!try_no_witness"" on the other side.",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-567562309,567562309,
practicalswift,2019-12-19 17:01:32,"While touching this file and `DecodeHexTx`: what about separating the tx decoding from the unrelated hex decoding?  Such as having say a `DecodeTx` do the decoding which `DecodeHexTx` would call.\n\nWhen fuzzing the tx decoding part of this code it would be nice to not having to waste CPU cycles on hex encoding followed by immediate hex decoding for no reason at all :)",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-567575185,567575185,
practicalswift,2019-12-19 20:25:51,"The interaction between the parameters `bool try_no_witness` and `bool try_witness` might surprise callers (both before and after this change). Can that be improved?\n\nFor the casual observer it is easy to think that:\n* `DecodeHexTx(mtx, tx_hex, false, true) == true` implies `DecodeHexTx(mtx, tx_hex, true, true) == true`, and\n* `DecodeHexTx(mtx, tx_hex, true, false) == true` implies `Decode",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-567649679,567649679,
instagibbs,2019-12-30 18:27:15,"@practicalswift trying to touch as little as possible for this change, but yes it's something that should certainly be made simpler",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-569756688,569756688,
ajtowns,2020-01-31 05:09:57,"Concept ACK; code looks right to me, and it fixes #18028.\n\n*But* in primitives/transaction.h SerializeTransaction we'll still do non-extended format for unfunded partial transactions with no inputs, which could still lead to us spitting out a hex representation that we misparse when reading it back in. So it might be sensible to also change:\n\n```diff\n--- a/src/primitives/transaction.h\n",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-580584699,580584699,
instagibbs,2020-08-10 18:54:49,@ajtowns I'd rather not touch serialization code for this if possible since it's already hard enough to get review :),https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-671528466,671528466,
ajtowns,2020-10-05 04:31:39,"I tried writing a fuzzer to see if reasonable partial txs with one output and no inputs would be incorrectly decoded as a witness tx. There are a few, but they seem reasonably unlikely (requiring the only output to pay to a non-compressed, non-hashed pubkey, or an OP_RETURN). One more plausible example is: `00000000000101000000000000002a5128030200000200000000000100000000040000030002280002000005000",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-703390110,703390110,
ajtowns,2020-10-05 09:09:38,"ACK 27fc6a38f813b65e5110c77925a335214aec756a\n\nA valid witness tx (on my regtest anyway) which decodes incorrectly as a 0-in 1-out non-witness tx is `020000000001013f4977dd2c309fac4339d4396fe269d6d2d111c8ac64a876e8ac7e18a2ea6f3d0000000000ffffffff0120e2e76153010000160014352067b30b49447ad453215ffa023e8e61f511f202473044022034bb381d70480932d8e13a20512b9be7f364187e083eb2583e0b5b128cbfba3c022047d593e",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-703505474,703505474,
achow101,2020-10-13 21:52:33,"ACK 27fc6a38f813b65e5110c77925a335214aec756a\n\nIf we dropped the `*rawtransaction` RPCs (except for `sendrawtransaction`) and had everyone use PSBTs, this problem would go away :)",https://github.com/bitcoin/bitcoin/pull/17775#issuecomment-708029609,708029609,
instagibbs,2019-12-19 16:32:44,@sipa you mean here? Why would that make sense? We're inside a `try_no_witness` block already,https://github.com/bitcoin/bitcoin/pull/17775#discussion_r359953272,359953272,src/core_read.cpp
sipa,2019-12-19 16:34:40,"No, in the other clause. It's supposed to bypass the sanity check when only one of try_witness and try_no_witness is set.",https://github.com/bitcoin/bitcoin/pull/17775#discussion_r359954178,359954178,src/core_read.cpp
instagibbs,2019-12-19 16:45:47,"ah I see, fixed it up(within my understanding) and put a quick comment there for future readers' comprehension ",https://github.com/bitcoin/bitcoin/pull/17775#discussion_r359959485,359959485,src/core_read.cpp
promag,2019-12-20 12:02:59,"nit, static.",https://github.com/bitcoin/bitcoin/pull/17775#discussion_r360345379,360345379,src/core_read.cpp
practicalswift,2019-12-20 13:57:01,@promag I want to be able to fuzz `DecodeTx` directly without going via `DecodeHexTx` :),https://github.com/bitcoin/bitcoin/pull/17775#discussion_r360382304,360382304,src/core_read.cpp
promag,2019-12-20 14:03:57,Oh in that case dismiss my suggestion!,https://github.com/bitcoin/bitcoin/pull/17775#discussion_r360384958,360384958,src/core_read.cpp
promag,2019-12-22 21:43:56,@instagibbs make `tx_data` reference.,https://github.com/bitcoin/bitcoin/pull/17775#discussion_r360730504,360730504,src/core_read.cpp
promag,2019-12-22 21:46:00,@practicalswift on a second though it could be `static` for now and then you remove it and maybe also declare it in the header.,https://github.com/bitcoin/bitcoin/pull/17775#discussion_r360730593,360730593,src/core_read.cpp
instagibbs,2019-12-30 18:24:48,done,https://github.com/bitcoin/bitcoin/pull/17775#discussion_r362060435,362060435,src/core_read.cpp
instagibbs,2019-12-30 18:24:55,done,https://github.com/bitcoin/bitcoin/pull/17775#discussion_r362060482,362060482,src/core_read.cpp
