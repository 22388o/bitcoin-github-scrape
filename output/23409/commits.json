[
  {
    "sha": "fa93ef5a8aeae36304c792697a78af2d07fd9f41",
    "node_id": "C_kwDOABII59oAKGZhOTNlZjVhOGFlYWUzNjMwNGM3OTI2OTdhNzhhZjJkMDdmZDlmNDE",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-01T12:59:15Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-01T13:20:56Z"
      },
      "message": "refactor: Take Span in SetSeed\n\nThis makes calling code less verbose and less fragile. Also, by adding\nthe CKey::data() member function, it is now possible to call HexStr()\nwith a CKey object.",
      "tree": {
        "sha": "15a20252f07a2c95b9fb52be37a0369a6f5c4c80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15a20252f07a2c95b9fb52be37a0369a6f5c4c80"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa93ef5a8aeae36304c792697a78af2d07fd9f41",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiYbQv9Fja8Tz33J5LJqb3d+Dfr7s06d1Jkj9nVQgif/fHpHJSVQxPHHDSTZaHm\ny05EHLhYfLXqrsB7T0K38rxiLjTweyafdQDSX50wJj/Dbc2dgKtqigENeLuFqUh3\nybZ3bat8cdCCsSgHVwWfprsA/Igp1Xncd4mC1d6Ofsseq9gOH11u5OrsRcxFjsZr\ns/ctZ29bD0YashcWfAc+H0e8lZ3DrFRaZOtHREsoli4oD1s7ePBts98e9jBo69Ph\n7hIrqvrhfrWzYrDbs1T/HJ93fnfGMafuYe81vescAuW3H6E14Pxlw/aVLTcFfwPY\nMFM5hqhwBftFvQLaUk0zXuqhaOVerldxdp+oLW0k48/jqdJGE77WnZMQvlxETIfL\ndfyfs6CFswk+eTgIy/M0u/c+jBf1Padziy6FsMSWzxyoIdyKWB3h3GQSJhEu22IA\nlfzR5cLcB4sYESTHvjT4OAd2QZagHnD1tiX/Yvn3pqXActpLLpISVOWKIfiIaLuw\n0xBhsK+5\n=ZlWz\n-----END PGP SIGNATURE-----",
        "payload": "tree 15a20252f07a2c95b9fb52be37a0369a6f5c4c80\nparent 5574881ce329f91cc5bbc2b9585860a45fde7c3c\nauthor MarcoFalke <falke.marco@gmail.com> 1635771555 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1635772856 +0100\n\nrefactor: Take Span in SetSeed\n\nThis makes calling code less verbose and less fragile. Also, by adding\nthe CKey::data() member function, it is now possible to call HexStr()\nwith a CKey object.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa93ef5a8aeae36304c792697a78af2d07fd9f41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa93ef5a8aeae36304c792697a78af2d07fd9f41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa93ef5a8aeae36304c792697a78af2d07fd9f41/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5574881ce329f91cc5bbc2b9585860a45fde7c3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5574881ce329f91cc5bbc2b9585860a45fde7c3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5574881ce329f91cc5bbc2b9585860a45fde7c3c"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2e42c0718d58248b1e91761e918b05df74b884f1",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=fa93ef5a8aeae36304c792697a78af2d07fd9f41",
        "patch": "@@ -319,10 +319,11 @@ bool CExtKey::Derive(CExtKey &out, unsigned int _nChild) const {\n     return key.Derive(out.key, out.chaincode, _nChild, chaincode);\n }\n \n-void CExtKey::SetSeed(const unsigned char *seed, unsigned int nSeedLen) {\n+void CExtKey::SetSeed(Span<const uint8_t> seed)\n+{\n     static const unsigned char hashkey[] = {'B','i','t','c','o','i','n',' ','s','e','e','d'};\n     std::vector<unsigned char, secure_allocator<unsigned char>> vout(64);\n-    CHMAC_SHA512(hashkey, sizeof(hashkey)).Write(seed, nSeedLen).Finalize(vout.data());\n+    CHMAC_SHA512{hashkey, sizeof(hashkey)}.Write(seed.data(), seed.size()).Finalize(vout.data());\n     key.Set(vout.data(), vout.data() + 32, true);\n     memcpy(chaincode.begin(), vout.data() + 32, 32);\n     nDepth = 0;"
      },
      {
        "sha": "af8d2e72d805a884e5ee44ba15572c1ac5903569",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=fa93ef5a8aeae36304c792697a78af2d07fd9f41",
        "patch": "@@ -85,6 +85,7 @@ class CKey\n \n     //! Simple read-only vector-like interface.\n     unsigned int size() const { return (fValid ? keydata.size() : 0); }\n+    const unsigned char* data() const { return keydata.data(); }\n     const unsigned char* begin() const { return keydata.data(); }\n     const unsigned char* end() const { return keydata.data() + size(); }\n \n@@ -177,7 +178,7 @@ struct CExtKey {\n     void Decode(const unsigned char code[BIP32_EXTKEY_SIZE]);\n     bool Derive(CExtKey& out, unsigned int nChild) const;\n     CExtPubKey Neuter() const;\n-    void SetSeed(const unsigned char* seed, unsigned int nSeedLen);\n+    void SetSeed(Span<const uint8_t> seed);\n };\n \n /** Initialize the elliptic curve support. May not be called twice without calling ECC_Stop first. */"
      },
      {
        "sha": "0fa6b7784f344dff359790b94b14cce549d64433",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=fa93ef5a8aeae36304c792697a78af2d07fd9f41",
        "patch": "@@ -124,7 +124,7 @@ void RunTest(const TestVector &test) {\n     std::vector<unsigned char> seed = ParseHex(test.strHexMaster);\n     CExtKey key;\n     CExtPubKey pubkey;\n-    key.SetSeed(seed.data(), seed.size());\n+    key.SetSeed(seed);\n     pubkey = key.Neuter();\n     for (const TestDerivation &derive : test.vDerive) {\n         unsigned char data[74];"
      },
      {
        "sha": "0361618c8241e70d834e69b0a5399d1297bb6822",
        "filename": "src/test/key_io_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/test/key_io_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/test/key_io_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_io_tests.cpp?ref=fa93ef5a8aeae36304c792697a78af2d07fd9f41",
        "patch": "@@ -46,7 +46,7 @@ BOOST_AUTO_TEST_CASE(key_io_valid_parse)\n             privkey = DecodeSecret(exp_base58string);\n             BOOST_CHECK_MESSAGE(privkey.IsValid(), \"!IsValid:\" + strTest);\n             BOOST_CHECK_MESSAGE(privkey.IsCompressed() == isCompressed, \"compressed mismatch:\" + strTest);\n-            BOOST_CHECK_MESSAGE(privkey.size() == exp_payload.size() && std::equal(privkey.begin(), privkey.end(), exp_payload.begin()), \"key mismatch:\" + strTest);\n+            BOOST_CHECK_MESSAGE(Span<const uint8_t>{privkey} == Span<const uint8_t>{exp_payload}, \"key mismatch:\" + strTest);\n \n             // Private key must be invalid public key\n             destination = DecodeDestination(exp_base58string);"
      },
      {
        "sha": "5edd9f8f6647826003bcb7541774d32fe8d6c89a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=fa93ef5a8aeae36304c792697a78af2d07fd9f41",
        "patch": "@@ -797,7 +797,7 @@ RPCHelpMan dumpwallet()\n         CKey seed;\n         if (spk_man.GetKey(seed_id, seed)) {\n             CExtKey masterKey;\n-            masterKey.SetSeed(seed.begin(), seed.size());\n+            masterKey.SetSeed(seed);\n \n             file << \"# extended private masterkey: \" << EncodeExtKey(masterKey) << \"\\n\\n\";\n         }"
      },
      {
        "sha": "9173c790d4f4a480c2b6332deaa11e33e7708677",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=fa93ef5a8aeae36304c792697a78af2d07fd9f41",
        "patch": "@@ -400,7 +400,7 @@ void LegacyScriptPubKeyMan::UpgradeKeyMetadata()\n             CKey key;\n             GetKey(meta.hd_seed_id, key);\n             CExtKey masterKey;\n-            masterKey.SetSeed(key.begin(), key.size());\n+            masterKey.SetSeed(key);\n             // Add to map\n             CKeyID master_id = masterKey.key.GetPubKey().GetID();\n             std::copy(master_id.begin(), master_id.begin() + 4, meta.key_origin.fingerprint);\n@@ -1085,7 +1085,7 @@ void LegacyScriptPubKeyMan::DeriveNewChildKey(WalletBatch &batch, CKeyMetadata&\n     if (!GetKey(hd_chain.seed_id, seed))\n         throw std::runtime_error(std::string(__func__) + \": seed not found\");\n \n-    masterKey.SetSeed(seed.begin(), seed.size());\n+    masterKey.SetSeed(seed);\n \n     // derive m/0'\n     // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)"
      },
      {
        "sha": "e917a15bcf10ff1437611ef2514b13523bde6472",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa93ef5a8aeae36304c792697a78af2d07fd9f41/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fa93ef5a8aeae36304c792697a78af2d07fd9f41",
        "patch": "@@ -3160,7 +3160,7 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n \n         // Get the extended key\n         CExtKey master_key;\n-        master_key.SetSeed(seed_key.begin(), seed_key.size());\n+        master_key.SetSeed(seed_key);\n \n         for (bool internal : {false, true}) {\n             for (OutputType t : OUTPUT_TYPES) {"
      }
    ]
  }
]