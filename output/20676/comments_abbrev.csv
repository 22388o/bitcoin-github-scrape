sdaftuar,2020-12-16 19:12:31,"This kind of refactor was requested in https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307.  While I think it's helpful for `net_processing` code to be using a more meaningful function name rather than check for nullptr in all these places, it's not entirely clear to me whether it would be best to have the helper function be checking the connection type, or just checking whether `",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-746854240,746854240,
laanwj,2020-12-16 19:47:52,"Code review ACK c80de7834ad59fba93548024fc96f541f02b60f7, this does not change behavior",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-746908028,746908028,
jnewbery,2020-12-16 21:31:58,Concept ACK. This seems much clearer to me.,https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747053900,747053900,
sipa,2020-12-16 21:35:38,utACK c80de7834ad59fba93548024fc96f541f02b60f7,https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747055543,747055543,
ajtowns,2020-12-16 22:11:45,"This idea was discussed in the original blocks only PR, https://github.com/bitcoin/bitcoin/pull/15759/files#r310366329 -- the reasoning was the explicit `== nullptr` checks makes it clear that the following dereferencing is safe. That still seems like it makes sense to me, so I'm -0.5 (or however we're writing weak-nack) on this.\n\nI tend to think `if (m_tx_relay != nullptr && pfrom.ShouldThisP",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747071735,747071735,
sdaftuar,2020-12-16 22:25:46,"> This idea was discussed in the original blocks only PR, https://github.com/bitcoin/bitcoin/pull/15759/files#r310366329 -- \nthe reasoning was the explicit `== nullptr` checks makes it clear that the following dereferencing is safe.\n\n@ajtowns Thanks for the reminder of that discussion, I had forgotten about it!  I guess my uneasiness about removing `nullptr` checks altogether has remained co",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747077499,747077499,
ajtowns,2020-12-16 22:40:43,"> But in fact we dive into the internals of `CNode` all the time in net_processing (eg grabbing locks and accessing data members directly),\n\nMaybe that will change as @jnewbery's net/net_processing separation stuff (#19398) progresses? It proposes moving all of `m_tx_relay` out of net/CNode into net_processing.",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747083947,747083947,
DrahtBot,2020-12-17 01:44:22,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20083 (p2p: Disconnect, not discourage, misbehaving NODE_BLOOM peers by MarcoFalke)\n* #18819 (net: Replace cs_feeFilter ",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747149653,747149653,
jnewbery,2020-12-17 08:35:02,"Code review ACK c80de7834ad59fba93548024fc96f541f02b60f7\n\n> Maybe that will change as @jnewbery's net/net_processing separation stuff (#19398) progresses? It proposes moving all of m_tx_relay out of net/CNode into net_processing.\n\nThat's the hope. Eventually there should be much less reaching across the net/net_processing divide. net_processing eventually will need to access almost nothing",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747293975,747293975,
sdaftuar,2020-12-17 16:02:11,"It occurs to me that moving `m_tx_relay` to net_processing might change the way we think about the abstraction.  I'm okay with closing this PR and deferring how we think about the relationship between the two until @jnewbery's work to move it lands...  It does seem like this PR may be near-sighted in thinking about how `net_processing` should understand the peer connection behavior, if there are b",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747532844,747532844,
jnewbery,2020-12-17 17:55:16,"I think that this is an improvement, but also agree that the same lines will need to be changed again when the tx inventory data is moved into net_processing, so it might make sense to just leave this for now.\n\nThe next PR in the net/net_processing split series is #19829 if you'd like to help with that work.",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747599415,747599415,
sdaftuar,2020-12-17 17:59:52,"@jnewbery Sounds good to me, will close.",https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747602007,747602007,
