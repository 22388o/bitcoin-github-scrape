sipa,2014-11-03T18:56:50Z,"utACK, apart from the above nits.\n",https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-61528402,61528402,
jtimon,2014-11-03T19:14:20Z,Added commit to correct nits (plus fix a missing include).\n,https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-61531157,61531157,
jtimon,2014-11-14T14:47:53Z,ping\n,https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-63073897,63073897,
jtimon,2014-11-21T14:56:02Z,Rebased for clarity after #5170 being merged.\nNit fixes squashed too.\n,https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-63980534,63980534,
jtimon,2014-11-26T11:37:22Z,Needed rebase.\n,https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-64579421,64579421,
jaromil,2014-12-15T13:02:08Z,"This definitely makes the code more readable, it rebases on 0.10 without problems and its the sort of change that helps to isolate and track pow related operations. It adds the following functions to pow.h:\n\n``` c++\nbool CheckChallenge(const CBlockHeader& block, const CBlockIndex& indexLast);\nvoid ResetChallenge(CBlockHeader& block, const CBlockIndex& indexLast);\n\n/** Avoid using these funct",https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-66990902,66990902,
petertodd,2014-12-15T13:28:11Z,"NACK\n\n""more readable"" is not a good justification to be messing around with this code. If anything, I'd argue it makes the code _less_ readable as what it's actually doing has been obscured by more layers of abstraction.\n",https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-66993607,66993607,
jaromil,2014-12-15T14:51:17Z,"Well, it introduces the `Challenge` term on check/reset block-index operations which seems more readable to me compared to the `if` checks. It also does so keeping `block` as first argument for all new functions, consistent with other existing calls like `CheckBlockHeader`. At last it introduces get/set function wrappers to operations accessing the `nonce`. I think this is an improvement and shoul",https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-67004368,67004368,
jtimon,2015-01-07T20:23:10Z,"Closing for now, at least until #5599 has been merged (if it gets merged) and I can propose something more complete.\nFor those interested, this is the patch I intend to maintain permanently (to make sure nNonce and nBits are not used directly out of pow.o): https://github.com/jtimon/bitcoin/tree/noproof\n",https://github.com/bitcoin/bitcoin/pull/5171#issuecomment-69085642,69085642,
sipa,2014-11-03T18:41:30Z,Nit: these\n,https://github.com/bitcoin/bitcoin/pull/5171#discussion_r19753767,19753767,src/pow.h
sipa,2014-11-03T18:42:01Z,Nit: call it GetChallengeDifficulty? It's a well-defined number.\n,https://github.com/bitcoin/bitcoin/pull/5171#discussion_r19753799,19753799,src/pow.h
jtimon,2014-11-03T19:05:01Z,"Ok, GetChallengeDifficulty it is.\n",https://github.com/bitcoin/bitcoin/pull/5171#discussion_r19756166,19756166,src/pow.h
jtimon,2014-11-03T19:05:25Z,Can you explain the nit a little bit more?\n,https://github.com/bitcoin/bitcoin/pull/5171#discussion_r19756188,19756188,src/pow.h
jtimon,2014-11-03T19:07:11Z,"ops, sorry, s/this/these, got it\n",https://github.com/bitcoin/bitcoin/pull/5171#discussion_r19756288,19756288,src/pow.h
