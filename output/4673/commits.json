[
  {
    "sha": "939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzllZDk3MzczZmRlYTBlOGVjYjE3M2YxYzIyZWI1M2I5ZjkwYmI2",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-07-26T19:05:11Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-08-11T16:47:02Z"
      },
      "message": "Add boolean HaveWatchonly and signal NotifyWatchonlyChanged",
      "tree": {
        "sha": "ce3d6651e29d593f422d4d199ba323e4b4ee5c10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce3d6651e29d593f422d4d199ba323e4b4ee5c10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b11d3de7aa4fc3f6c4e7bf292495850034ded2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b11d3de7aa4fc3f6c4e7bf292495850034ded2c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b11d3de7aa4fc3f6c4e7bf292495850034ded2c"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 66,
      "deletions": 10
    },
    "files": [
      {
        "sha": "81b7b076faff15531d6416638a7b9ebd85073877",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -71,3 +71,9 @@ bool CBasicKeyStore::HaveWatchOnly(const CScript &dest) const\n     LOCK(cs_KeyStore);\n     return setWatchOnly.count(dest) > 0;\n }\n+\n+bool CBasicKeyStore::HaveWatchOnly() const\n+{\n+    LOCK(cs_KeyStore);\n+    return (!setWatchOnly.empty());\n+}"
      },
      {
        "sha": "f10e24f36cfc95fc8f026713b5444d27d299853b",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -50,6 +50,7 @@ class CKeyStore\n     // Support for Watch-only addresses\n     virtual bool AddWatchOnly(const CScript &dest) =0;\n     virtual bool HaveWatchOnly(const CScript &dest) const =0;\n+    virtual bool HaveWatchOnly() const =0;\n };\n \n typedef std::map<CKeyID, CKey> KeyMap;\n@@ -107,6 +108,7 @@ class CBasicKeyStore : public CKeyStore\n \n     virtual bool AddWatchOnly(const CScript &dest);\n     virtual bool HaveWatchOnly(const CScript &dest) const;\n+    virtual bool HaveWatchOnly() const;\n };\n \n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;"
      },
      {
        "sha": "8eed0856e768e9d0cb38c0620a8f0b27a16d05b9",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 7,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -160,18 +160,25 @@ void OverviewPage::setBalance(qint64 balance, qint64 unconfirmedBalance, qint64\n     // for the non-mining users\n     bool showImmature = immatureBalance != 0;\n     bool showWatchOnlyImmature = watchImmatureBalance != 0;\n-    bool showWatchOnly = (watchOnlyBalance != 0 || watchUnconfBalance != 0 || showWatchOnlyImmature);\n \n     // for symmetry reasons also show immature label when the watch-only one is shown\n     ui->labelImmature->setVisible(showImmature || showWatchOnlyImmature);\n     ui->labelImmatureText->setVisible(showImmature || showWatchOnlyImmature);\n-    ui->labelSpendable->setVisible(showWatchOnly);              // show spendable label (only when watch-only is active)\n-    ui->labelWatchonly->setVisible(showWatchOnly);              // show watch-only label\n-    ui->lineWatchBalance->setVisible(showWatchOnly);            // show watch-only balance separator line\n-    ui->labelWatchAvailable->setVisible(showWatchOnly);         // show watch-only available balance\n     ui->labelWatchImmature->setVisible(showWatchOnlyImmature);  // show watch-only immature balance\n-    ui->labelWatchPending->setVisible(showWatchOnly);           // show watch-only pending balance\n-    ui->labelWatchTotal->setVisible(showWatchOnly);             // show watch-only total balance\n+}\n+\n+// show/hide watch-only labels\n+void OverviewPage::updateWatchOnlyLabels(bool showWatchOnly)\n+{\n+    ui->labelSpendable->setVisible(showWatchOnly);      // show spendable label (only when watch-only is active)\n+    ui->labelWatchonly->setVisible(showWatchOnly);      // show watch-only label\n+    ui->lineWatchBalance->setVisible(showWatchOnly);    // show watch-only balance separator line\n+    ui->labelWatchAvailable->setVisible(showWatchOnly); // show watch-only available balance\n+    ui->labelWatchPending->setVisible(showWatchOnly);   // show watch-only pending balance\n+    ui->labelWatchTotal->setVisible(showWatchOnly);     // show watch-only total balance\n+\n+    if (!showWatchOnly)\n+        ui->labelWatchImmature->hide();\n }\n \n void OverviewPage::setClientModel(ClientModel *model)\n@@ -208,6 +215,9 @@ void OverviewPage::setWalletModel(WalletModel *model)\n         connect(model, SIGNAL(balanceChanged(qint64, qint64, qint64, qint64, qint64, qint64)), this, SLOT(setBalance(qint64, qint64, qint64, qint64, qint64, qint64)));\n \n         connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+\n+        updateWatchOnlyLabels(model->haveWatchOnly());\n+        connect(model, SIGNAL(notifyWatchonlyChanged(bool)), this, SLOT(updateWatchOnlyLabels(bool)));\n     }\n \n     // update the display unit, to not use the default (\"BTC\")"
      },
      {
        "sha": "f46374efbac7ae168ffc49ddb97b7a947ccb438c",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -58,6 +58,7 @@ private slots:\n     void updateDisplayUnit();\n     void handleTransactionClicked(const QModelIndex &index);\n     void updateAlerts(const QString &warnings);\n+    void updateWatchOnlyLabels(bool showWatchOnly);\n };\n \n #endif // OVERVIEWPAGE_H"
      },
      {
        "sha": "30c9ecc96be7195513946521fb4d17c750c9d767",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 3,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -36,6 +36,7 @@ WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *p\n     cachedNumBlocks(0)\n {\n     fProcessingQueuedTransactions = false;\n+    fHaveWatchOnly = wallet->HaveWatchOnly();\n \n     addressTableModel = new AddressTableModel(wallet, this);\n     transactionTableModel = new TransactionTableModel(wallet, this);\n@@ -81,6 +82,11 @@ qint64 WalletModel::getImmatureBalance() const\n     return wallet->GetImmatureBalance();\n }\n \n+bool WalletModel::haveWatchOnly() const\n+{\n+    return fHaveWatchOnly;\n+}\n+\n qint64 WalletModel::getWatchBalance() const\n {\n     return wallet->GetWatchOnlyBalance();\n@@ -144,9 +150,15 @@ void WalletModel::checkBalanceChanged()\n     qint64 newBalance = getBalance();\n     qint64 newUnconfirmedBalance = getUnconfirmedBalance();\n     qint64 newImmatureBalance = getImmatureBalance();\n-    qint64 newWatchOnlyBalance = getWatchBalance();\n-    qint64 newWatchUnconfBalance = getWatchUnconfirmedBalance();\n-    qint64 newWatchImmatureBalance = getWatchImmatureBalance();\n+    qint64 newWatchOnlyBalance = 0;\n+    qint64 newWatchUnconfBalance = 0;\n+    qint64 newWatchImmatureBalance = 0;\n+    if (haveWatchOnly())\n+    {\n+        newWatchOnlyBalance = getWatchBalance();\n+        newWatchUnconfBalance = getWatchUnconfirmedBalance();\n+        newWatchImmatureBalance = getWatchImmatureBalance();\n+    }\n \n     if(cachedBalance != newBalance || cachedUnconfirmedBalance != newUnconfirmedBalance || cachedImmatureBalance != newImmatureBalance ||\n         cachedWatchOnlyBalance != newWatchOnlyBalance || cachedWatchUnconfBalance != newWatchUnconfBalance || cachedWatchImmatureBalance != newWatchImmatureBalance)\n@@ -185,6 +197,12 @@ void WalletModel::updateAddressBook(const QString &address, const QString &label\n         addressTableModel->updateEntry(address, label, isMine, purpose, status);\n }\n \n+void WalletModel::updateWatchOnlyFlag(bool fHaveWatchonly)\n+{\n+    fHaveWatchOnly = fHaveWatchonly;\n+    emit notifyWatchonlyChanged(fHaveWatchonly);\n+}\n+\n bool WalletModel::validateAddress(const QString &address)\n {\n     CBitcoinAddress addressParsed(address.toStdString());\n@@ -499,13 +517,20 @@ static void ShowProgress(WalletModel *walletmodel, const std::string &title, int\n     }\n }\n \n+static void NotifyWatchonlyChanged(WalletModel *walletmodel, bool fHaveWatchonly)\n+{\n+    QMetaObject::invokeMethod(walletmodel, \"updateWatchOnlyFlag\", Qt::QueuedConnection,\n+                              Q_ARG(bool, fHaveWatchonly));\n+}\n+\n void WalletModel::subscribeToCoreSignals()\n {\n     // Connect signals to wallet\n     wallet->NotifyStatusChanged.connect(boost::bind(&NotifyKeyStoreStatusChanged, this, _1));\n     wallet->NotifyAddressBookChanged.connect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));\n     wallet->NotifyTransactionChanged.connect(boost::bind(NotifyTransactionChanged, this, _1, _2, _3));\n     wallet->ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n+    wallet->NotifyWatchonlyChanged.connect(boost::bind(NotifyWatchonlyChanged, this, _1));\n }\n \n void WalletModel::unsubscribeFromCoreSignals()\n@@ -515,6 +540,7 @@ void WalletModel::unsubscribeFromCoreSignals()\n     wallet->NotifyAddressBookChanged.disconnect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));\n     wallet->NotifyTransactionChanged.disconnect(boost::bind(NotifyTransactionChanged, this, _1, _2, _3));\n     wallet->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n+    wallet->NotifyWatchonlyChanged.disconnect(boost::bind(NotifyWatchonlyChanged, this, _1));\n }\n \n // WalletModel::UnlockContext implementation"
      },
      {
        "sha": "1dad716061b114924bd8aff7fd51bc1b6a95bc86",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -128,6 +128,7 @@ class WalletModel : public QObject\n     qint64 getBalance(const CCoinControl *coinControl = NULL) const;\n     qint64 getUnconfirmedBalance() const;\n     qint64 getImmatureBalance() const;\n+    bool haveWatchOnly() const;\n     qint64 getWatchBalance() const;\n     qint64 getWatchUnconfirmedBalance() const;\n     qint64 getWatchImmatureBalance() const;\n@@ -198,6 +199,7 @@ class WalletModel : public QObject\n private:\n     CWallet *wallet;\n     bool fProcessingQueuedTransactions;\n+    bool fHaveWatchOnly;\n \n     // Wallet has an options model for wallet-specific options\n     // (transaction fee, for example)\n@@ -249,13 +251,18 @@ class WalletModel : public QObject\n     // Show progress dialog e.g. for rescan\n     void showProgress(const QString &title, int nProgress);\n \n+    // Watch-only address added\n+    void notifyWatchonlyChanged(bool fHaveWatchonly);\n+\n public slots:\n     /* Wallet status might have changed */\n     void updateStatus();\n     /* New transaction, or transaction changed status */\n     void updateTransaction(const QString &hash, int status);\n     /* New, updated or removed address book entry */\n     void updateAddressBook(const QString &address, const QString &label, bool isMine, const QString &purpose, int status);\n+    /* Watchonly added */\n+    void updateWatchOnlyFlag(bool fHaveWatchonly);\n     /* Current, immature or unconfirmed balance might have changed - emit 'balanceChanged' if so */\n     void pollBalanceChanged();\n     /* Needed to update fProcessingQueuedTransactions through a QueuedConnection */"
      },
      {
        "sha": "a293664f6dc0d85a97a830c1b41404f8fba485a1",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -153,6 +153,7 @@ bool CWallet::AddWatchOnly(const CScript &dest)\n     if (!CCryptoKeyStore::AddWatchOnly(dest))\n         return false;\n     nTimeFirstKey = 1; // No birthday information for watch-only keys.\n+    NotifyWatchonlyChanged(true);\n     if (!fFileBacked)\n         return true;\n     return CWalletDB(strWalletFile).WriteWatchOnly(dest);"
      },
      {
        "sha": "1f727aec0b971002b9951f4bf719b59bcc26aa43",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "patch": "@@ -408,6 +408,9 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n \n     /** Show progress e.g. for rescan */\n     boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;\n+\n+    /** Watch-only address added */\n+    boost::signals2::signal<void (bool fHaveWatchOnly)> NotifyWatchonlyChanged;\n };\n \n /** A key allocated from the key pool. */"
      }
    ]
  },
  {
    "sha": "1c5f0af0fd8b5630470d471d8319a7c979aa2587",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzVmMGFmMGZkOGI1NjMwNDcwZDQ3MWQ4MzE5YTdjOTc5YWEyNTg3",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-08-10T00:26:04Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-08-11T19:38:36Z"
      },
      "message": "[Qt] Add column Watch-only to transactions list",
      "tree": {
        "sha": "4eb6b12ba606e034284fb65ad7263515bf227d01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4eb6b12ba606e034284fb65ad7263515bf227d01"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c5f0af0fd8b5630470d471d8319a7c979aa2587",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c5f0af0fd8b5630470d471d8319a7c979aa2587",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c5f0af0fd8b5630470d471d8319a7c979aa2587",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c5f0af0fd8b5630470d471d8319a7c979aa2587/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/939ed97373fdea0e8ecb173f1c22eb53b9f90bb6"
      }
    ],
    "stats": {
      "total": 119,
      "additions": 106,
      "deletions": 13
    },
    "files": [
      {
        "sha": "eef0c317c6e486fe6bfb743e0dae0d0a8ec1dca0",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -233,6 +233,9 @@ RES_ICONS = \\\n   qt/res/icons/editcopy.png \\\n   qt/res/icons/editpaste.png \\\n   qt/res/icons/export.png \\\n+  qt/res/icons/eye.png \\\n+  qt/res/icons/eye_minus.png \\\n+  qt/res/icons/eye_plus.png \\\n   qt/res/icons/filesave.png \\\n   qt/res/icons/history.png \\\n   qt/res/icons/key.png \\"
      },
      {
        "sha": "9a7003938bdccced379f4d23d78a197245640726",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -18,6 +18,9 @@\n         <file alias=\"transaction_3\">res/icons/clock3.png</file>\n         <file alias=\"transaction_4\">res/icons/clock4.png</file>\n         <file alias=\"transaction_5\">res/icons/clock5.png</file>\n+        <file alias=\"eye\">res/icons/eye.png</file>\n+        <file alias=\"eye_minus\">res/icons/eye_minus.png</file>\n+        <file alias=\"eye_plus\">res/icons/eye_plus.png</file>\n         <file alias=\"options\">res/icons/configure.png</file>\n         <file alias=\"receiving_addresses\">res/icons/receive.png</file>\n         <file alias=\"editpaste\">res/icons/editpaste.png</file>"
      },
      {
        "sha": "15501b8a8af3093d30d9482f4ce9076ec3f06243",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -57,7 +57,15 @@ class TxViewDelegate : public QAbstractItemDelegate\n         }\n \n         painter->setPen(foreground);\n-        painter->drawText(addressRect, Qt::AlignLeft|Qt::AlignVCenter, address);\n+        QRect boundingRect;\n+        painter->drawText(addressRect, Qt::AlignLeft|Qt::AlignVCenter, address, &boundingRect);\n+\n+        if (index.data(TransactionTableModel::WatchonlyRole).toBool())\n+        {\n+            QIcon iconWatchonly = qvariant_cast<QIcon>(index.data(TransactionTableModel::WatchonlyDecorationRole));\n+            QRect watchonlyRect(boundingRect.right() + 5, mainRect.top()+ypad+halfheight, 16, halfheight);\n+            iconWatchonly.paint(painter, watchonlyRect);\n+        }\n \n         if(amount < 0)\n         {"
      },
      {
        "sha": "c4d182adbf4ed1140b7c715517e07802758ddeb5",
        "filename": "src/qt/res/icons/eye.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/res/icons/eye.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/res/icons/eye.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/eye.png?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587"
      },
      {
        "sha": "08b048eae310b10d71082f8edad7b081b79b98af",
        "filename": "src/qt/res/icons/eye_minus.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/res/icons/eye_minus.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/res/icons/eye_minus.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/eye_minus.png?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587"
      },
      {
        "sha": "4ad653156f77cba70a8ba328e2fbd8a0fe45cf89",
        "filename": "src/qt/res/icons/eye_plus.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/res/icons/eye_plus.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/res/icons/eye_plus.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/eye_plus.png?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587"
      },
      {
        "sha": "6ab029173b71e65e59552a752c1d0358475b7c6d",
        "filename": "src/qt/transactionfilterproxy.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionfilterproxy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionfilterproxy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.cpp?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -22,6 +22,7 @@ TransactionFilterProxy::TransactionFilterProxy(QObject *parent) :\n     dateTo(MAX_DATE),\n     addrPrefix(),\n     typeFilter(ALL_TYPES),\n+    watchOnlyFilter(WatchOnlyFilter_All),\n     minAmount(0),\n     limitRows(-1),\n     showInactive(true)\n@@ -34,6 +35,7 @@ bool TransactionFilterProxy::filterAcceptsRow(int sourceRow, const QModelIndex &\n \n     int type = index.data(TransactionTableModel::TypeRole).toInt();\n     QDateTime datetime = index.data(TransactionTableModel::DateRole).toDateTime();\n+    bool involvesWatchAddress = index.data(TransactionTableModel::WatchonlyRole).toBool();\n     QString address = index.data(TransactionTableModel::AddressRole).toString();\n     QString label = index.data(TransactionTableModel::LabelRole).toString();\n     qint64 amount = llabs(index.data(TransactionTableModel::AmountRole).toLongLong());\n@@ -43,6 +45,10 @@ bool TransactionFilterProxy::filterAcceptsRow(int sourceRow, const QModelIndex &\n         return false;\n     if(!(TYPE(type) & typeFilter))\n         return false;\n+    if (involvesWatchAddress && watchOnlyFilter == WatchOnlyFilter_No)\n+        return false;\n+    if (!involvesWatchAddress && watchOnlyFilter == WatchOnlyFilter_Yes)\n+        return false;\n     if(datetime < dateFrom || datetime > dateTo)\n         return false;\n     if (!address.contains(addrPrefix, Qt::CaseInsensitive) && !label.contains(addrPrefix, Qt::CaseInsensitive))\n@@ -78,6 +84,12 @@ void TransactionFilterProxy::setMinAmount(qint64 minimum)\n     invalidateFilter();\n }\n \n+void TransactionFilterProxy::setWatchOnlyFilter(WatchOnlyFilter filter)\n+{\n+    this->watchOnlyFilter = filter;\n+    invalidateFilter();\n+}\n+\n void TransactionFilterProxy::setLimit(int limit)\n {\n     this->limitRows = limit;"
      },
      {
        "sha": "f408317b53ce0220c98ccd8f21bebd7d0538218a",
        "filename": "src/qt/transactionfilterproxy.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionfilterproxy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionfilterproxy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.h?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -25,13 +25,21 @@ class TransactionFilterProxy : public QSortFilterProxyModel\n \n     static quint32 TYPE(int type) { return 1<<type; }\n \n+    enum WatchOnlyFilter\n+    {\n+        WatchOnlyFilter_All,\n+        WatchOnlyFilter_Yes,\n+        WatchOnlyFilter_No\n+    };\n+\n     void setDateRange(const QDateTime &from, const QDateTime &to);\n     void setAddressPrefix(const QString &addrPrefix);\n     /**\n       @note Type filter takes a bit field created with TYPE() or ALL_TYPES\n      */\n     void setTypeFilter(quint32 modes);\n     void setMinAmount(qint64 minimum);\n+    void setWatchOnlyFilter(WatchOnlyFilter filter);\n \n     /** Set maximum number of rows returned, -1 if unlimited. */\n     void setLimit(int limit);\n@@ -49,6 +57,7 @@ class TransactionFilterProxy : public QSortFilterProxyModel\n     QDateTime dateTo;\n     QString addrPrefix;\n     quint32 typeFilter;\n+    WatchOnlyFilter watchOnlyFilter;\n     qint64 minAmount;\n     int limitRows;\n     bool showInactive;"
      },
      {
        "sha": "1a1f726bf865a48626c84124a8c4eca0f860cc27",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 8,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -27,6 +27,7 @@\n // Amount column is right-aligned it contains numbers\n static int column_alignments[] = {\n         Qt::AlignLeft|Qt::AlignVCenter, /* status */\n+        Qt::AlignLeft|Qt::AlignVCenter, /* watchonly */\n         Qt::AlignLeft|Qt::AlignVCenter, /* date */\n         Qt::AlignLeft|Qt::AlignVCenter, /* type */\n         Qt::AlignLeft|Qt::AlignVCenter, /* address */\n@@ -234,7 +235,7 @@ TransactionTableModel::TransactionTableModel(CWallet* wallet, WalletModel *paren\n         walletModel(parent),\n         priv(new TransactionTablePriv(wallet, this))\n {\n-    columns << QString() << tr(\"Date\") << tr(\"Type\") << tr(\"Address\") << BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n+    columns << QString() << QString() << tr(\"Date\") << tr(\"Type\") << tr(\"Address\") << BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n     priv->refreshWallet();\n \n     connect(walletModel->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n@@ -393,22 +394,19 @@ QVariant TransactionTableModel::txAddressDecoration(const TransactionRecord *wtx\n \n QString TransactionTableModel::formatTxToAddress(const TransactionRecord *wtx, bool tooltip) const\n {\n-    // mark transactions involving watch-only addresses:\n-    QString watchAddress = wtx->involvesWatchAddress ? \" (w) \" : \"\";\n-\n     switch(wtx->type)\n     {\n     case TransactionRecord::RecvFromOther:\n-        return QString::fromStdString(wtx->address) + watchAddress;\n+        return QString::fromStdString(wtx->address);\n     case TransactionRecord::RecvWithAddress:\n     case TransactionRecord::SendToAddress:\n     case TransactionRecord::Generated:\n-        return lookupAddress(wtx->address, tooltip) + watchAddress;\n+        return lookupAddress(wtx->address, tooltip);\n     case TransactionRecord::SendToOther:\n-        return QString::fromStdString(wtx->address) + watchAddress;\n+        return QString::fromStdString(wtx->address);\n     case TransactionRecord::SendToSelf:\n     default:\n-        return tr(\"(n/a)\") + watchAddress;\n+        return tr(\"(n/a)\");\n     }\n }\n \n@@ -482,6 +480,14 @@ QVariant TransactionTableModel::txStatusDecoration(const TransactionRecord *wtx)\n     return QColor(0,0,0);\n }\n \n+QVariant TransactionTableModel::txWatchonlyDecoration(const TransactionRecord *wtx) const\n+{\n+    if (wtx->involvesWatchAddress)\n+        return QIcon(\":/icons/eye\");\n+    else\n+        return QVariant();\n+}\n+\n QString TransactionTableModel::formatTooltip(const TransactionRecord *rec) const\n {\n     QString tooltip = formatTxStatus(rec) + QString(\"\\n\") + formatTxType(rec);\n@@ -506,6 +512,8 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n         {\n         case Status:\n             return txStatusDecoration(rec);\n+        case Watchonly:\n+            return txWatchonlyDecoration(rec);\n         case ToAddress:\n             return txAddressDecoration(rec);\n         }\n@@ -533,6 +541,8 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n             return rec->time;\n         case Type:\n             return formatTxType(rec);\n+        case Watchonly:\n+            return (rec->involvesWatchAddress ? 1 : 0);\n         case ToAddress:\n             return formatTxToAddress(rec, true);\n         case Amount:\n@@ -562,6 +572,10 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n         return rec->type;\n     case DateRole:\n         return QDateTime::fromTime_t(static_cast<uint>(rec->time));\n+    case WatchonlyRole:\n+        return rec->involvesWatchAddress;\n+    case WatchonlyDecorationRole:\n+        return txWatchonlyDecoration(rec);\n     case LongDescriptionRole:\n         return priv->describe(rec, walletModel->getOptionsModel()->getDisplayUnit());\n     case AddressRole:\n@@ -606,6 +620,8 @@ QVariant TransactionTableModel::headerData(int section, Qt::Orientation orientat\n                 return tr(\"Date and time that the transaction was received.\");\n             case Type:\n                 return tr(\"Type of transaction.\");\n+            case Watchonly:\n+                return tr(\"Whether or not a watch-only address is involved in this transaction.\");\n             case ToAddress:\n                 return tr(\"Destination address of transaction.\");\n             case Amount:"
      },
      {
        "sha": "413f3f9bf1e8411f317b9c25feb80fe3a8b18edb",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -28,10 +28,11 @@ class TransactionTableModel : public QAbstractTableModel\n \n     enum ColumnIndex {\n         Status = 0,\n-        Date = 1,\n-        Type = 2,\n-        ToAddress = 3,\n-        Amount = 4\n+        Watchonly = 1,\n+        Date = 2,\n+        Type = 3,\n+        ToAddress = 4,\n+        Amount = 5\n     };\n \n     /** Roles to get specific information from a transaction row.\n@@ -42,6 +43,10 @@ class TransactionTableModel : public QAbstractTableModel\n         TypeRole = Qt::UserRole,\n         /** Date and time this transaction was created */\n         DateRole,\n+        /** Watch-only boolean */\n+        WatchonlyRole,\n+        /** Watch-only icon */\n+        WatchonlyDecorationRole,\n         /** Long description (HTML format) */\n         LongDescriptionRole,\n         /** Address of transaction */\n@@ -83,6 +88,7 @@ class TransactionTableModel : public QAbstractTableModel\n     QString formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed=true, BitcoinUnits::SeparatorStyle separators=BitcoinUnits::separatorStandard) const;\n     QString formatTooltip(const TransactionRecord *rec) const;\n     QVariant txStatusDecoration(const TransactionRecord *wtx) const;\n+    QVariant txWatchonlyDecoration(const TransactionRecord *wtx) const;\n     QVariant txAddressDecoration(const TransactionRecord *wtx) const;\n \n public slots:"
      },
      {
        "sha": "2d34d581298988d0d95b2c5fc57e4d4808684d09",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -51,6 +51,13 @@ TransactionView::TransactionView(QWidget *parent) :\n     hlayout->addSpacing(23);\n #endif\n \n+    watchOnlyWidget = new QComboBox(this);\n+    watchOnlyWidget->setFixedWidth(24);\n+    watchOnlyWidget->addItem(\"\", TransactionFilterProxy::WatchOnlyFilter_All);\n+    watchOnlyWidget->addItem(QIcon(\":/icons/eye_plus\"), \"\", TransactionFilterProxy::WatchOnlyFilter_Yes);\n+    watchOnlyWidget->addItem(QIcon(\":/icons/eye_minus\"), \"\", TransactionFilterProxy::WatchOnlyFilter_No);\n+    hlayout->addWidget(watchOnlyWidget);\n+\n     dateWidget = new QComboBox(this);\n #ifdef Q_OS_MAC\n     dateWidget->setFixedWidth(121);\n@@ -150,6 +157,7 @@ TransactionView::TransactionView(QWidget *parent) :\n \n     connect(dateWidget, SIGNAL(activated(int)), this, SLOT(chooseDate(int)));\n     connect(typeWidget, SIGNAL(activated(int)), this, SLOT(chooseType(int)));\n+    connect(watchOnlyWidget, SIGNAL(activated(int)), this, SLOT(chooseWatchonly(int)));\n     connect(addressWidget, SIGNAL(textChanged(QString)), this, SLOT(changedPrefix(QString)));\n     connect(amountWidget, SIGNAL(textChanged(QString)), this, SLOT(changedAmount(QString)));\n \n@@ -187,6 +195,7 @@ void TransactionView::setModel(WalletModel *model)\n         transactionView->verticalHeader()->hide();\n \n         transactionView->setColumnWidth(TransactionTableModel::Status, STATUS_COLUMN_WIDTH);\n+        transactionView->setColumnWidth(TransactionTableModel::Watchonly, WATCHONLY_COLUMN_WIDTH);\n         transactionView->setColumnWidth(TransactionTableModel::Date, DATE_COLUMN_WIDTH);\n         transactionView->setColumnWidth(TransactionTableModel::Type, TYPE_COLUMN_WIDTH);\n         transactionView->setColumnWidth(TransactionTableModel::Amount, AMOUNT_MINIMUM_COLUMN_WIDTH);\n@@ -211,6 +220,12 @@ void TransactionView::setModel(WalletModel *model)\n                 }\n             }\n         }\n+\n+        // show/hide column Watch-only\n+        updateWatchOnlyColumn(model->haveWatchOnly());\n+\n+        // Watch-only signal\n+        connect(model, SIGNAL(notifyWatchonlyChanged(bool)), this, SLOT(updateWatchOnlyColumn(bool)));\n     }\n }\n \n@@ -270,6 +285,14 @@ void TransactionView::chooseType(int idx)\n         typeWidget->itemData(idx).toInt());\n }\n \n+void TransactionView::chooseWatchonly(int idx)\n+{\n+    if(!transactionProxyModel)\n+        return;\n+    transactionProxyModel->setWatchOnlyFilter(\n+        (TransactionFilterProxy::WatchOnlyFilter)watchOnlyWidget->itemData(idx).toInt());\n+}\n+\n void TransactionView::changedPrefix(const QString &prefix)\n {\n     if(!transactionProxyModel)\n@@ -307,6 +330,8 @@ void TransactionView::exportClicked()\n     // name, column, role\n     writer.setModel(transactionProxyModel);\n     writer.addColumn(tr(\"Confirmed\"), 0, TransactionTableModel::ConfirmedRole);\n+    if (model && model->haveWatchOnly())\n+        writer.addColumn(tr(\"Watchonly\"), TransactionTableModel::Watchonly);\n     writer.addColumn(tr(\"Date\"), 0, TransactionTableModel::DateRole);\n     writer.addColumn(tr(\"Type\"), TransactionTableModel::Type, Qt::EditRole);\n     writer.addColumn(tr(\"Label\"), 0, TransactionTableModel::LabelRole);\n@@ -501,3 +526,10 @@ bool TransactionView::eventFilter(QObject *obj, QEvent *event)\n     }\n     return QWidget::eventFilter(obj, event);\n }\n+\n+// show/hide column Watch-only\n+void TransactionView::updateWatchOnlyColumn(bool fHaveWatchOnly)\n+{\n+    watchOnlyWidget->setVisible(fHaveWatchOnly);\n+    transactionView->setColumnHidden(TransactionTableModel::Watchonly, !fHaveWatchOnly);\n+}"
      },
      {
        "sha": "b249e004110257ff78fa1ea1b8216cc5aa03e247",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c5f0af0fd8b5630470d471d8319a7c979aa2587/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=1c5f0af0fd8b5630470d471d8319a7c979aa2587",
        "patch": "@@ -50,6 +50,7 @@ class TransactionView : public QWidget\n \n     enum ColumnWidths {\n         STATUS_COLUMN_WIDTH = 23,\n+        WATCHONLY_COLUMN_WIDTH = 23,\n         DATE_COLUMN_WIDTH = 120,\n         TYPE_COLUMN_WIDTH = 120,\n         AMOUNT_MINIMUM_COLUMN_WIDTH = 120,\n@@ -63,6 +64,7 @@ class TransactionView : public QWidget\n \n     QComboBox *dateWidget;\n     QComboBox *typeWidget;\n+    QComboBox *watchOnlyWidget;\n     QLineEdit *addressWidget;\n     QLineEdit *amountWidget;\n \n@@ -91,6 +93,7 @@ private slots:\n     void copyAmount();\n     void copyTxID();\n     void openThirdPartyTxUrl(QString url);\n+    void updateWatchOnlyColumn(bool fHaveWatchOnly);\n \n signals:\n     void doubleClicked(const QModelIndex&);\n@@ -101,6 +104,7 @@ private slots:\n public slots:\n     void chooseDate(int idx);\n     void chooseType(int idx);\n+    void chooseWatchonly(int idx);\n     void changedPrefix(const QString &prefix);\n     void changedAmount(const QString &amount);\n     void exportClicked();"
      }
    ]
  }
]