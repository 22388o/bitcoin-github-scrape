[
  {
    "sha": "86eb3b3f1ab594142b6baa9576717ff121f3b745",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NmViM2IzZjFhYjU5NDE0MmI2YmFhOTU3NjcxN2ZmMTIxZjNiNzQ1",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-08-04T13:27:38Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-26T00:47:42Z"
      },
      "message": "utils: Add fsbridge fstream function wrapper",
      "tree": {
        "sha": "6c95ca5128235530be1d376239b12e623ef465da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c95ca5128235530be1d376239b12e623ef465da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86eb3b3f1ab594142b6baa9576717ff121f3b745",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86eb3b3f1ab594142b6baa9576717ff121f3b745",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/86eb3b3f1ab594142b6baa9576717ff121f3b745",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86eb3b3f1ab594142b6baa9576717ff121f3b745/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc7258bdfb44c5b5f3498296d8c9e6791655e89f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc7258bdfb44c5b5f3498296d8c9e6791655e89f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc7258bdfb44c5b5f3498296d8c9e6791655e89f"
      }
    ],
    "stats": {
      "total": 153,
      "additions": 153,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a146107c4c926cbe31b297b400f33e01836058a7",
        "filename": "src/fs.cpp",
        "status": "modified",
        "additions": 102,
        "deletions": 0,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86eb3b3f1ab594142b6baa9576717ff121f3b745/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86eb3b3f1ab594142b6baa9576717ff121f3b745/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=86eb3b3f1ab594142b6baa9576717ff121f3b745",
        "patch": "@@ -113,4 +113,106 @@ std::string get_filesystem_error_message(const fs::filesystem_error& e)\n #endif\n }\n \n+#ifdef WIN32\n+#ifdef __GLIBCXX__\n+\n+// reference: https://github.com/gcc-mirror/gcc/blob/gcc-7_3_0-release/libstdc%2B%2B-v3/include/std/fstream#L270\n+\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    m_file = fsbridge::fopen(p, openmodeToStr(mode).c_str());\n+    if (m_file == nullptr) {\n+        return;\n+    }\n+    m_filebuf = __gnu_cxx::stdio_filebuf<char>(m_file, mode);\n+    rdbuf(&m_filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekg(0, std::ios_base::end);\n+    }\n+}\n+\n+void ifstream::close()\n+{\n+    if (m_file != nullptr) {\n+        m_filebuf.close();\n+        fclose(m_file);\n+    }\n+    m_file = nullptr;\n+}\n+\n+void ofstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    m_file = fsbridge::fopen(p, openmodeToStr(mode).c_str());\n+    if (m_file == nullptr) {\n+        return;\n+    }\n+    m_filebuf = __gnu_cxx::stdio_filebuf<char>(m_file, mode);\n+    rdbuf(&m_filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekp(0, std::ios_base::end);\n+    }\n+}\n+\n+void ofstream::close()\n+{\n+    if (m_file != nullptr) {\n+        m_filebuf.close();\n+        fclose(m_file);\n+    }\n+    m_file = nullptr;\n+}\n+#else // __GLIBCXX__\n+\n+static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n+    \"Warning: This build is using boost::filesystem ofstream and ifstream \"\n+    \"implementations which will fail to open paths containing multibyte \"\n+    \"characters. You should delete this static_assert to ignore this warning, \"\n+    \"or switch to a different C++ standard library like the Microsoft C++ \"\n+    \"Standard Library (where boost uses non-standard extensions to construct \"\n+    \"stream objects with wide filenames), or the GNU libstdc++ library (where \"\n+    \"a more complicated workaround has been implemented above).\");\n+\n+#endif // __GLIBCXX__\n+#endif // WIN32\n+\n } // fsbridge"
      },
      {
        "sha": "bdccb1523229077fad04c762dc3d9e7556b8acc2",
        "filename": "src/fs.h",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86eb3b3f1ab594142b6baa9576717ff121f3b745/src/fs.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86eb3b3f1ab594142b6baa9576717ff121f3b745/src/fs.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.h?ref=86eb3b3f1ab594142b6baa9576717ff121f3b745",
        "patch": "@@ -7,6 +7,9 @@\n \n #include <stdio.h>\n #include <string>\n+#if defined WIN32 && defined __GLIBCXX__\n+#include <ext/stdio_filebuf.h>\n+#endif\n \n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n@@ -39,6 +42,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` APIs, not `char` APIs. But because the C++ standard doesn't\n+    // require ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+    // provide them (in contrast to the Microsoft C++ library, see\n+    // https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+    // Boost is forced to fall back to `char` constructors which may not work properly.\n+    //\n+    // Work around this issue by creating stream objects with `_wfopen` in\n+    // combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\n+    // with an upgrade to C++17, where streams can be constructed directly from\n+    // `std::filesystem::path` objects.\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        explicit ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }\n+        ~ifstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in);\n+        bool is_open() { return m_filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n+        FILE* m_file = nullptr;\n+    };\n+    class ofstream : public std::ostream\n+    {\n+    public:\n+        ofstream() = default;\n+        explicit ofstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out) { open(p, mode); }\n+        ~ofstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out);\n+        bool is_open() { return m_filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n+        FILE* m_file = nullptr;\n+    };\n+#else  // !(WIN32 && __GLIBCXX__)\n+    typedef fs::ifstream ifstream;\n+    typedef fs::ofstream ofstream;\n+#endif // WIN32 && __GLIBCXX__\n };\n \n #endif // BITCOIN_FS_H"
      }
    ]
  },
  {
    "sha": "a554cc901a32f41162089d6b20ad39d5aeff0583",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTU0Y2M5MDFhMzJmNDExNjIwODlkNmIyMGFkMzlkNWFlZmYwNTgz",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-08-04T13:32:13Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-26T00:47:42Z"
      },
      "message": "Move boost/std fstream to fsbridge",
      "tree": {
        "sha": "8ec51478dcc3e88967091a1f2428cde28c5b7be2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ec51478dcc3e88967091a1f2428cde28c5b7be2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a554cc901a32f41162089d6b20ad39d5aeff0583",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a554cc901a32f41162089d6b20ad39d5aeff0583",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a554cc901a32f41162089d6b20ad39d5aeff0583",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a554cc901a32f41162089d6b20ad39d5aeff0583/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "86eb3b3f1ab594142b6baa9576717ff121f3b745",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86eb3b3f1ab594142b6baa9576717ff121f3b745",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/86eb3b3f1ab594142b6baa9576717ff121f3b745"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 13,
      "deletions": 16
    },
    "files": [
      {
        "sha": "5f6af61a70e2e54998ab51af9446be171aef11e8",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a554cc901a32f41162089d6b20ad39d5aeff0583/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a554cc901a32f41162089d6b20ad39d5aeff0583/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=a554cc901a32f41162089d6b20ad39d5aeff0583",
        "patch": "@@ -367,7 +367,7 @@ bool openBitcoinConf()\n     fs::path pathConfig = GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n \n     /* Create the file */\n-    fs::ofstream configFile(pathConfig, std::ios_base::app);\n+    fsbridge::ofstream configFile(pathConfig, std::ios_base::app);\n \n     if (!configFile.good())\n         return false;\n@@ -611,7 +611,7 @@ fs::path static GetAutostartFilePath()\n \n bool GetStartOnSystemStartup()\n {\n-    fs::ifstream optionFile(GetAutostartFilePath());\n+    fsbridge::ifstream optionFile(GetAutostartFilePath());\n     if (!optionFile.good())\n         return false;\n     // Scan through file for \"Hidden=true\":\n@@ -642,7 +642,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n \n         fs::create_directories(GetAutostartDir());\n \n-        fs::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n+        fsbridge::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out | std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n         std::string chain = gArgs.GetChainName();"
      },
      {
        "sha": "ee178f34cef2c7e1569360204e0b6f026d8149e7",
        "filename": "src/rpc/protocol.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a554cc901a32f41162089d6b20ad39d5aeff0583/src/rpc/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a554cc901a32f41162089d6b20ad39d5aeff0583/src/rpc/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.cpp?ref=a554cc901a32f41162089d6b20ad39d5aeff0583",
        "patch": "@@ -12,8 +12,6 @@\n #include <utiltime.h>\n #include <version.h>\n \n-#include <fstream>\n-\n /**\n  * JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n  * but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were\n@@ -85,9 +83,9 @@ bool GenerateAuthCookie(std::string *cookie_out)\n     /** the umask determines what permissions are used to create this file -\n      * these are set to 077 in init.cpp unless overridden with -sysperms.\n      */\n-    std::ofstream file;\n+    fsbridge::ofstream file;\n     fs::path filepath_tmp = GetAuthCookieFile(true);\n-    file.open(filepath_tmp.string().c_str());\n+    file.open(filepath_tmp);\n     if (!file.is_open()) {\n         LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath_tmp.string());\n         return false;\n@@ -109,10 +107,10 @@ bool GenerateAuthCookie(std::string *cookie_out)\n \n bool GetAuthCookie(std::string *cookie_out)\n {\n-    std::ifstream file;\n+    fsbridge::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n-    file.open(filepath.string().c_str());\n+    file.open(filepath);\n     if (!file.is_open())\n         return false;\n     std::getline(file, cookie);"
      },
      {
        "sha": "a8b67dfee4fc82410f193a3240761d5a0a2eda25",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a554cc901a32f41162089d6b20ad39d5aeff0583/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a554cc901a32f41162089d6b20ad39d5aeff0583/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=a554cc901a32f41162089d6b20ad39d5aeff0583",
        "patch": "@@ -891,7 +891,7 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     }\n \n     const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n-    fs::ifstream stream(GetConfigFile(confPath));\n+    fsbridge::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n@@ -924,7 +924,7 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n             }\n \n             for (const std::string& to_include : includeconf) {\n-                fs::ifstream include_config(GetConfigFile(to_include));\n+                fsbridge::ifstream include_config(GetConfigFile(to_include));\n                 if (include_config.good()) {\n                     if (!ReadConfigStream(include_config, error, ignore_invalid_keys)) {\n                         return false;"
      },
      {
        "sha": "92457c464409b79c9072a2e868f8d675de8240e5",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a554cc901a32f41162089d6b20ad39d5aeff0583/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a554cc901a32f41162089d6b20ad39d5aeff0583/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a554cc901a32f41162089d6b20ad39d5aeff0583",
        "patch": "@@ -17,7 +17,6 @@\n \n #include <wallet/rpcwallet.h>\n \n-#include <fstream>\n #include <stdint.h>\n \n #include <boost/algorithm/string.hpp>\n@@ -540,8 +539,8 @@ UniValue importwallet(const JSONRPCRequest& request)\n \n         EnsureWalletIsUnlocked(pwallet);\n \n-        std::ifstream file;\n-        file.open(request.params[0].get_str().c_str(), std::ios::in | std::ios::ate);\n+        fsbridge::ifstream file;\n+        file.open(request.params[0].get_str(), std::ios::in | std::ios::ate);\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n@@ -717,8 +716,8 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, filepath.string() + \" already exists. If you are sure this is what you want, move it out of the way first\");\n     }\n \n-    std::ofstream file;\n-    file.open(filepath.string().c_str());\n+    fsbridge::ofstream file;\n+    file.open(filepath);\n     if (!file.is_open())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n "
      }
    ]
  },
  {
    "sha": "f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODZhNTcxZWRiOTYyN2MxMjZiOWNjZDdkYTY4YmQ3ZDE2NTdiOGY4",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-07T13:12:24Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-26T00:47:42Z"
      },
      "message": "tests: Add test case for std::ios_base::ate",
      "tree": {
        "sha": "c9efa657972ff0c806c3cdaac9e5c09438ea08f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9efa657972ff0c806c3cdaac9e5c09438ea08f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f86a571edb9627c126b9ccd7da68bd7d1657b8f8/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a554cc901a32f41162089d6b20ad39d5aeff0583",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a554cc901a32f41162089d6b20ad39d5aeff0583",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a554cc901a32f41162089d6b20ad39d5aeff0583"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 57,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a82af8f15c6d924c4e497999423ae6a105821014",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f86a571edb9627c126b9ccd7da68bd7d1657b8f8/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f86a571edb9627c126b9ccd7da68bd7d1657b8f8/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
        "patch": "@@ -51,6 +51,7 @@ BITCOIN_TESTS =\\\n   test/cuckoocache_tests.cpp \\\n   test/denialofservice_tests.cpp \\\n   test/descriptor_tests.cpp \\\n+  test/fs_tests.cpp \\\n   test/getarg_tests.cpp \\\n   test/hash_tests.cpp \\\n   test/key_io_tests.cpp \\"
      },
      {
        "sha": "93aee10bb7bb2ac175c158dd2f711daf00506e65",
        "filename": "src/test/fs_tests.cpp",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f86a571edb9627c126b9ccd7da68bd7d1657b8f8/src/test/fs_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f86a571edb9627c126b9ccd7da68bd7d1657b8f8/src/test/fs_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fs_tests.cpp?ref=f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
        "patch": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <fs.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(fsbridge_fstream)\n+{\n+    fs::path tmpfolder = SetDataDir(\"fsbridge_fstream\");\n+    // tmpfile1 should be the same as tmpfile2\n+    fs::path tmpfile1 = tmpfolder / \"fs_tests_\u20bf_\ud83c\udfc3\";\n+    fs::path tmpfile2 = tmpfolder / L\"fs_tests_\u20bf_\ud83c\udfc3\";\n+    {\n+        fsbridge::ofstream file(tmpfile1);\n+        file << \"bitcoin\";\n+    }\n+    {\n+        fsbridge::ifstream file(tmpfile2);\n+        std::string input_buffer;\n+        file >> input_buffer;\n+        BOOST_CHECK_EQUAL(input_buffer, \"bitcoin\");\n+    }\n+    {\n+        fsbridge::ifstream file(tmpfile1, std::ios_base::in | std::ios_base::ate);\n+        std::string input_buffer;\n+        file >> input_buffer;\n+        BOOST_CHECK_EQUAL(input_buffer, \"\");\n+    }\n+    {\n+        fsbridge::ofstream file(tmpfile2, std::ios_base::out | std::ios_base::app);\n+        file << \"tests\";\n+    }\n+    {\n+        fsbridge::ifstream file(tmpfile1);\n+        std::string input_buffer;\n+        file >> input_buffer;\n+        BOOST_CHECK_EQUAL(input_buffer, \"bitcointests\");\n+    }\n+    {\n+        fsbridge::ofstream file(tmpfile2, std::ios_base::out | std::ios_base::trunc);\n+        file << \"bitcoin\";\n+    }\n+    {\n+        fsbridge::ifstream file(tmpfile1);\n+        std::string input_buffer;\n+        file >> input_buffer;\n+        BOOST_CHECK_EQUAL(input_buffer, \"bitcoin\");\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2M3ZmJiMWU3OWE0YTIyMTkzMDZiZjNkYTFhMmRmZGY5MjEzZjJj",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-14T20:36:18Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-26T00:47:42Z"
      },
      "message": "Make MSVC compiler read the source code using utf-8",
      "tree": {
        "sha": "71df75aa18900e141a97b7f7291ecf543121d969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71df75aa18900e141a97b7f7291ecf543121d969"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f86a571edb9627c126b9ccd7da68bd7d1657b8f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f86a571edb9627c126b9ccd7da68bd7d1657b8f8"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5c87026efe69468eeb11848ca0674165301e8470",
        "filename": "build_msvc/common.vcxproj",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
        "patch": "@@ -12,4 +12,9 @@\n           Outputs=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\">\n       <Copy SourceFiles=\"$(MSBuildThisFileDirectory)bitcoin_config.h\" DestinationFiles=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\" />\n   </Target>\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  }
]