[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410474732",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-410474732",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 410474732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ3NDczMg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-04T20:12:42Z",
    "updated_at": "2018-10-08T09:49:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14372 (msvc: build secp256k1 and leveldb locally by ken2812221)\n* #14303 (rpc: Early call once CWallet::MarkDirty in import calls by promag)\n* #14151 (windows: Fix remaining compiler warnings (MSVC) by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410474732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413267200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413267200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 413267200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzI2NzIwMA==",
    "user": {
      "login": "alexeyneu",
      "id": 31589671,
      "node_id": "MDQ6VXNlcjMxNTg5Njcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31589671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexeyneu",
      "html_url": "https://github.com/alexeyneu",
      "followers_url": "https://api.github.com/users/alexeyneu/followers",
      "following_url": "https://api.github.com/users/alexeyneu/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexeyneu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexeyneu/subscriptions",
      "organizations_url": "https://api.github.com/users/alexeyneu/orgs",
      "repos_url": "https://api.github.com/users/alexeyneu/repos",
      "events_url": "https://api.github.com/users/alexeyneu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexeyneu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T17:12:00Z",
    "updated_at": "2018-08-15T17:12:00Z",
    "author_association": "NONE",
    "body": "but there's override:  \r\n```c++\r\n#include <fstream>\r\nint main(int argc, char* argv[])\r\n{\t\r\n\tstd::fstream tr(L\"hk\");\r\n\treturn 0;\r\n}\r\n```\r\ncompiles fine.  \r\n( msys2 )\r\n```\r\nc++ json_c.cpp -lws2_32 -static-libgcc -static-libstdc++ -static-libgcc -static-libstdc++ -Wl,-Bstatic -lstdc++ -lpthread\r\n```\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413267200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413271640",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413271640",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 413271640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzI3MTY0MA==",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T17:26:20Z",
    "updated_at": "2018-08-15T17:26:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is for mingw",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413271640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413303458",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413303458",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 413303458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzMwMzQ1OA==",
    "user": {
      "login": "alexeyneu",
      "id": 31589671,
      "node_id": "MDQ6VXNlcjMxNTg5Njcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31589671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexeyneu",
      "html_url": "https://github.com/alexeyneu",
      "followers_url": "https://api.github.com/users/alexeyneu/followers",
      "following_url": "https://api.github.com/users/alexeyneu/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexeyneu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexeyneu/subscriptions",
      "organizations_url": "https://api.github.com/users/alexeyneu/orgs",
      "repos_url": "https://api.github.com/users/alexeyneu/repos",
      "events_url": "https://api.github.com/users/alexeyneu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexeyneu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T19:10:41Z",
    "updated_at": "2018-08-15T19:50:31Z",
    "author_association": "NONE",
    "body": "![untitled 1](https://user-images.githubusercontent.com/31589671/44167850-f85c2000-a0d7-11e8-9e9b-6a1f509fedac.jpg)  \r\n@ken2812221 unexpected statement\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413303458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413408212",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413408212",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 413408212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQwODIxMg==",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T02:55:27Z",
    "updated_at": "2018-08-16T02:55:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alexeyneu To be clear, this is for the mingw on Ubuntu 18.04 which is what we use for gitian to build release binaries. If you can test this on Ubuntu, that would be great.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413408212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413499968",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413499968",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 413499968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQ5OTk2OA==",
    "user": {
      "login": "alexeyneu",
      "id": 31589671,
      "node_id": "MDQ6VXNlcjMxNTg5Njcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31589671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexeyneu",
      "html_url": "https://github.com/alexeyneu",
      "followers_url": "https://api.github.com/users/alexeyneu/followers",
      "following_url": "https://api.github.com/users/alexeyneu/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexeyneu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexeyneu/subscriptions",
      "organizations_url": "https://api.github.com/users/alexeyneu/orgs",
      "repos_url": "https://api.github.com/users/alexeyneu/repos",
      "events_url": "https://api.github.com/users/alexeyneu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexeyneu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T10:32:25Z",
    "updated_at": "2018-08-16T17:19:37Z",
    "author_association": "NONE",
    "body": "msys2 `.h` files are nothing more then  msvc  copy-paste. it may not work but linux edition  has same headers .\r\ni've used it in msvc with np. this applies to constructor only.  this stuff isn't avaible for\r\n`.open()` and others. last time i've seen there smth own-written was windows edition of watcom c .",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413499968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413715859",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413715859",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 413715859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzcxNTg1OQ==",
    "user": {
      "login": "alexeyneu",
      "id": 31589671,
      "node_id": "MDQ6VXNlcjMxNTg5Njcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31589671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexeyneu",
      "html_url": "https://github.com/alexeyneu",
      "followers_url": "https://api.github.com/users/alexeyneu/followers",
      "following_url": "https://api.github.com/users/alexeyneu/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexeyneu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexeyneu/subscriptions",
      "organizations_url": "https://api.github.com/users/alexeyneu/orgs",
      "repos_url": "https://api.github.com/users/alexeyneu/repos",
      "events_url": "https://api.github.com/users/alexeyneu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexeyneu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T23:39:39Z",
    "updated_at": "2018-08-16T23:39:39Z",
    "author_association": "NONE",
    "body": "Which is to say, i dont see much sense in testing it coz it will work .   \r\nit's not my PR anyway.  \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413715859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418887343",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-418887343",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 418887343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODg4NzM0Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T21:27:48Z",
    "updated_at": "2018-09-05T21:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think I understand how this PR works (does it depend on #13866?), or why reimplementing fstream classes is a good solution compared to alternatives. If this is a bug in boost, wouldn't it be better to fix the bug upstream and maybe patch it locally? Or could we drop the use of boost here and instead use `std::ifstream` `and std::ofstream`?\r\n\r\nIt would be helpful to have a clear description of the bug and possible workarounds.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418887343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418911903",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-418911903",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 418911903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODkxMTkwMw==",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T23:18:32Z",
    "updated_at": "2018-09-06T01:57:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "`boost::filesystem::i/ofstream` calls `std::filebuf` internally. So if `std::filebuf(wchar_t*)` exist, boost will call that function (MSVC). Otherwise it will call `std::filebuf(char*)` which can lead to encoding issue. After c++17, we can use `std::i/ofstream(std::filesystem::path)`. But before then, we can't.\r\n\r\nIf building with libstdc++, we can use its extension stdio_filebuf by passing `FILE *`.\r\n\r\n> Will different workarounds be needed for MSVC and clang?\r\n\r\nI don't know about clang for Windows. But for MSVC, we can use `boost::filesystem::i/ofstream`.\r\n\r\n> does it depend on #13866?\r\n\r\nWithout #13866, it would work. But to solve the encoding issue, it requires #13866.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418911903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419587880",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-419587880",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 419587880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTU4Nzg4MA==",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T22:58:31Z",
    "updated_at": "2018-09-07T22:58:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ryanofsky requested change included and unit tests added.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419587880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424548339",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-424548339",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 424548339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDU0ODMzOQ==",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T00:49:29Z",
    "updated_at": "2018-09-26T00:49:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and fix all nits from the comment",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424548339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430923859",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-430923859",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
    "id": 430923859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDkyMzg1OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T08:35:52Z",
    "updated_at": "2018-10-18T08:35:52Z",
    "author_association": "MEMBER",
    "body": "utACK 86eb3b3f1ab594142b6baa9576717ff121f3b745",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430923859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215433595",
    "pull_request_review_id": 152698994,
    "id": 215433595,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTQzMzU5NQ==",
    "diff_hunk": "@@ -38,6 +42,41 @@ namespace fsbridge {\n         void* hFile = (void*)-1; // INVALID_HANDLE_VALUE\n #endif\n     };\n+\n+\n+#if defined WIN32 && defined __GNUC__",
    "path": "src/fs.h",
    "position": null,
    "original_position": 19,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "2e84c0b24abea37df6827e339a6cf5864d37fc9b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this be checking for `__GLIBCXX__` instead of `__GNUC__`? It looks like `__gnu_cxx::stdio_filebuf` might be present in libstdc++ but not libc++ (https://stackoverflow.com/questions/22624503/how-to-get-a-file-descriptor-from-a-stdbasic-ios-for-clang-on-os-x).\r\n\r\nWill different workarounds be needed for MSVC and clang?",
    "created_at": "2018-09-05T21:36:57Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215433595",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215433595"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215433595"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215433595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215776506",
    "pull_request_review_id": 153119357,
    "id": 215776506,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc3NjUwNg==",
    "diff_hunk": "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));\n+    rdbuf(&filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekg(0, std::ios_base::end);\n+    }\n+}\n+\n+void ifstream::close()\n+{\n+    if (file != nullptr) {\n+        filebuf.close();\n+        fclose(file);\n+    }\n+    file = nullptr;\n+}\n+\n+void ofstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));\n+    rdbuf(&filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekp(0, std::ios_base::end);\n+    }\n+}\n+\n+void ofstream::close()\n+{\n+    if (file != nullptr) {\n+        filebuf.close();\n+        fclose(file);\n+    }\n+    file = nullptr;\n+}",
    "path": "src/fs.cpp",
    "position": 91,
    "original_position": 119,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it would be good to add a static assert here to detect if this problem happens with other libraries or versions of libraries:\r\n\r\n```c++\r\n#if defined WIN32 && defined __GLIBCXX__\r\n...\r\n#elif WIN32\r\nstatic_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\r\n    \"Warning: This build is using boost::filesystem ofstream and ifstream \"\r\n    \"implementations which will fail to open paths containing multibyte \"\r\n    \"characters. You should delete this static_assert to ignore this warning, \"\r\n    \"or switch to a different C++ standard library like the Microsoft C++ \"\r\n    \"Standard Library (where boost uses non-standard extensions to construct \"\r\n    \"stream objects with wide filenames), or the GNU libstdc++ library (where \"\r\n    \"a more complicated workaround has been implemented above).\");\r\n#endif\r\n```",
    "created_at": "2018-09-06T20:59:13Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215776506",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215776506"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215776506"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215776506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 203,
    "original_line": 203,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215791815",
    "pull_request_review_id": 153119357,
    "id": 215791815,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5MTgxNQ==",
    "diff_hunk": "@@ -38,6 +42,41 @@ namespace fsbridge {\n         void* hFile = (void*)-1; // INVALID_HANDLE_VALUE\n #endif\n     };\n+\n+\n+#if defined WIN32 && defined __GLIBCXX__",
    "path": "src/fs.h",
    "position": 29,
    "original_position": 19,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can we add a comment to describe the bug and workaround? Suggestion:\r\n\r\n```c++\r\n// GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\r\n//\r\n// On Windows, it is only possible to reliably access multibyte file paths through\r\n// `wchar_t` APIs, not `char` APIs. But because the C++ standard doesn't require\r\n// ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\r\n// provide them (in contrast to the Microsoft C++ library, see\r\n// https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\r\n// Boost is forced to fall back to `char` APIs which may not work properly.\r\n//\r\n// Work around this issue by creating stream objects with `_wfopen` in\r\n// combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\r\n// with an upgrade to C++17, where streams can be constructed directly from\r\n// `std::filesystem::path` objects.\r\n```",
    "created_at": "2018-09-06T21:59:07Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215791815",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215791815"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215791815"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215791815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 60,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215794094",
    "pull_request_review_id": 153119357,
    "id": 215794094,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NDA5NA==",
    "diff_hunk": "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+",
    "path": "src/fs.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think I would drop this table but keep the URL link, since the table just duplicates information provided by the code below, and seems actually less readable than the code.\r\n\r\nFor reference, https://en.cppreference.com/w/cpp/io/basic_filebuf/open also has a similar table.",
    "created_at": "2018-09-06T22:09:57Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215794094",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215794094"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215794094"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215794094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 101,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795114",
    "pull_request_review_id": 153119357,
    "id": 215795114,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NTExNA==",
    "diff_hunk": "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());",
    "path": "src/fs.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it's obvious that this is intended to call the `fsbridge::fopen` function above rather than `::fopen`. Would suggesting adding a comment here or writing the namespace.\r\n\r\nCould also do the same in `ofstream::open` below.",
    "created_at": "2018-09-06T22:15:20Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795114",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795114"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795114"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795466",
    "pull_request_review_id": 153119357,
    "id": 215795466,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NTQ2Ng==",
    "diff_hunk": "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));",
    "path": "src/fs.cpp",
    "position": null,
    "original_position": 82,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`std::move` can be dropped here. Argument is already an rvalue so it has no effect.\r\n\r\nSame applies in `ofstream::open` below.",
    "created_at": "2018-09-06T22:16:50Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795466",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795466"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795466"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796062",
    "pull_request_review_id": 153119357,
    "id": 215796062,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NjA2Mg==",
    "diff_hunk": "@@ -38,6 +42,41 @@ namespace fsbridge {\n         void* hFile = (void*)-1; // INVALID_HANDLE_VALUE\n #endif\n     };\n+\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }\n+        ~ifstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in);\n+        bool is_open() { return filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> filebuf;\n+        FILE* file = nullptr;\n+    };\n+    class ofstream : public std::ostream\n+    {\n+    public:\n+        ofstream() = default;\n+        ofstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out) { open(p, mode); }\n+        ~ofstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out);\n+        bool is_open() { return filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> filebuf;",
    "path": "src/fs.h",
    "position": null,
    "original_position": 45,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you prefix these members with `m_` to match recommended style?",
    "created_at": "2018-09-06T22:19:47Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796062",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796062"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796062"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796524",
    "pull_request_review_id": 153119357,
    "id": 215796524,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NjUyNA==",
    "diff_hunk": "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));\n+    rdbuf(&filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekg(0, std::ios_base::end);",
    "path": "src/fs.cpp",
    "position": 57,
    "original_position": 85,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would be nice to have a unit test to make sure this logic works. I believe this code will actually run on travis through wine.",
    "created_at": "2018-09-06T22:21:49Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796524",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796524"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796524"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 169,
    "original_line": 169,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804441",
    "pull_request_review_id": 155612846,
    "id": 217804441,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzgwNDQ0MQ==",
    "diff_hunk": "@@ -40,6 +43,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+// GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+//\n+// On Windows, it is only possible to reliably access multibyte file paths through\n+// `wchar_t` APIs, not `char` APIs. But because the C++ standard doesn't require\n+// ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+// provide them (in contrast to the Microsoft C++ library, see\n+// https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+// Boost is forced to fall back to `char` APIs which may not work properly.",
    "path": "src/fs.h",
    "position": null,
    "original_position": 22,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "0548f48f19d33cb57b8279d7a647e91d375a916e",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"utils: Add fsbridge fstream function wrapper\" (0548f48f19d33cb57b8279d7a647e91d375a916e)\r\n\r\nI know this is my own comment, maybe replace \"APIs\" with \"constructors\" on this to make clearer this is referring to the same constructors previously mentioned above.",
    "created_at": "2018-09-14T18:32:17Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804441",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804441"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804441"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804938",
    "pull_request_review_id": 155612846,
    "id": 217804938,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzgwNDkzOA==",
    "diff_hunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <fs.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(fsbridge_fstream)",
    "path": "src/test/fs_tests.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "6b6c598ab55c60ed5050c0ba0a817dba899384c0",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"tests: Add test case for std::ios_base::ate\" (6b6c598ab55c60ed5050c0ba0a817dba899384c0)\r\n\r\nWould it be possible to add a test accessing a utf8 filesystem path now that #13866 is merged?",
    "created_at": "2018-09-14T18:34:03Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804938",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804938"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804938"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 12,
    "original_line": 12,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217841611",
    "pull_request_review_id": 155660982,
    "id": 217841611,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg0MTYxMQ==",
    "diff_hunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <fs.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(fsbridge_fstream)",
    "path": "src/test/fs_tests.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "6b6c598ab55c60ed5050c0ba0a817dba899384c0",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sure. But this seems only work if #13877 merged, so change this PR to based on it.",
    "created_at": "2018-09-14T21:02:17Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217841611",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217841611"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217841611"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217841611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 12,
    "original_line": 12,
    "side": "RIGHT",
    "in_reply_to_id": 217804938
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219592401",
    "pull_request_review_id": 157813396,
    "id": 219592401,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU5MjQwMQ==",
    "diff_hunk": "@@ -39,6 +42,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` constructors, not `char` APIs. But because the C++ standard doesn't",
    "path": "src/fs.h",
    "position": null,
    "original_position": 18,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "48373c3b202f81e8f6da58bda90540fcdfc2587a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Word \"constructors\" on this line should be changed back to \"APIs\", because this is just referring in general to how multibyte paths need to be accessed on windows, not to stream object constructors in particular.",
    "created_at": "2018-09-21T18:40:17Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219592401",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219592401"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219592401"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219592401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691462",
    "pull_request_review_id": 157932066,
    "id": 219691462,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQ2Mg==",
    "diff_hunk": "@@ -40,6 +42,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` constructors, not `char` APIs. But because the C++ standard doesn't\n+    // require ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+    // provide them (in contrast to the Microsoft C++ library, see\n+    // https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+    // Boost is forced to fall back to `char` constructors which may not work properly.\n+    //\n+    // Work around this issue by creating stream objects with `_wfopen` in\n+    // combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\n+    // with an upgrade to C++17, where streams can be constructed directly from\n+    // `std::filesystem::path` objects.\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }",
    "path": "src/fs.h",
    "position": null,
    "original_position": 38,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "b11cf20f8255bf20fc3c80117308fcf77424545a",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 21:43:16 cpplint(pr=13878): src/fs.h:65:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]\r\n```",
    "created_at": "2018-09-23T08:10:15Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691462",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691462"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691462"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691468",
    "pull_request_review_id": 157932072,
    "id": 219691468,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQ2OA==",
    "diff_hunk": "@@ -40,6 +42,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` constructors, not `char` APIs. But because the C++ standard doesn't\n+    // require ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+    // provide them (in contrast to the Microsoft C++ library, see\n+    // https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+    // Boost is forced to fall back to `char` constructors which may not work properly.\n+    //\n+    // Work around this issue by creating stream objects with `_wfopen` in\n+    // combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\n+    // with an upgrade to C++17, where streams can be constructed directly from\n+    // `std::filesystem::path` objects.\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }\n+        ~ifstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in);\n+        bool is_open() { return m_filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n+        FILE* m_file = nullptr;\n+    };\n+    class ofstream : public std::ostream\n+    {\n+    public:\n+        ofstream() = default;\n+        ofstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out) { open(p, mode); }",
    "path": "src/fs.h",
    "position": null,
    "original_position": 52,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "b11cf20f8255bf20fc3c80117308fcf77424545a",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 21:43:16 cpplint(pr=13878): src/fs.h:79:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]\r\n```",
    "created_at": "2018-09-23T08:10:27Z",
    "updated_at": "2018-09-26T00:47:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691468",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691468"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691468"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221827593",
    "pull_request_review_id": 160569184,
    "id": 221827593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTgyNzU5Mw==",
    "diff_hunk": "@@ -12,4 +12,9 @@\n           Outputs=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\">\n       <Copy SourceFiles=\"$(MSBuildThisFileDirectory)bitcoin_config.h\" DestinationFiles=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\" />\n   </Target>\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n </Project>",
    "path": "build_msvc/common.vcxproj",
    "position": 9,
    "original_position": 9,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add missing newline at end of file :-)",
    "created_at": "2018-10-02T05:18:49Z",
    "updated_at": "2018-10-02T05:19:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r221827593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221827593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r221827593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221827593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 20,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222178335",
    "pull_request_review_id": 161003104,
    "id": 222178335,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjE3ODMzNQ==",
    "diff_hunk": "@@ -12,4 +12,9 @@\n           Outputs=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\">\n       <Copy SourceFiles=\"$(MSBuildThisFileDirectory)bitcoin_config.h\" DestinationFiles=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\" />\n   </Target>\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n </Project>",
    "path": "build_msvc/common.vcxproj",
    "position": 9,
    "original_position": 9,
    "commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "original_commit_id": "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That seems unnecessary for MSVC project file, they can work without the extra newline. But you can add it in your PR. I don't have strong opinion.",
    "created_at": "2018-10-03T04:31:51Z",
    "updated_at": "2018-10-03T04:34:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r222178335",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222178335"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r222178335"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222178335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 20,
    "original_line": 20,
    "side": "RIGHT",
    "in_reply_to_id": 221827593
  }
]