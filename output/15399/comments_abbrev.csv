laanwj,2019-02-13T19:57:47Z,"Code review utACK fab15ff70e8db26942db83a9aab7ebf974e8b6b2\nHaven't tried what code paths are reached in a fuzzer.",https://github.com/bitcoin/bitcoin/pull/15399#issuecomment-463345038,463345038,
MarcoFalke,2019-02-13T20:08:58Z,"Great! Thanks for looking at this. If you find new coverage, don't forget to add them to https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus/script_flags, such that progress is accumulative over all machines that run the fuzzer and new fuzzers don't have to start from zero.\n\nRelated: #15295 (comes with instructions on how to build the fuzzer)",https://github.com/bitcoin/bitcoin/pull/15399#issuecomment-463348972,463348972,
practicalswift,2019-02-14T10:14:27Z,"Strong concept ACK\n\nThanks for adding more fuzzing targets! Very much needed!",https://github.com/bitcoin/bitcoin/pull/15399#issuecomment-463571386,463571386,
jamesob,2019-02-15T18:22:49Z,"Post-merge utACK https://github.com/bitcoin/bitcoin/commit/fab15ff70e8db26942db83a9aab7ebf974e8b6b2\n\nNice!",https://github.com/bitcoin/bitcoin/pull/15399#issuecomment-464149492,464149492,
practicalswift,2019-02-14T10:15:29Z,The dropped `int` here intentional? Same result but looks non-idiomatic :-),https://github.com/bitcoin/bitcoin/pull/15399#discussion_r256768430,256768430,src/test/fuzz/script_flags.cpp
