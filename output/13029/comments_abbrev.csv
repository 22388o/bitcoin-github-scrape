Sjors,2018-04-19T14:34:58Z,"I may have been a bit overzealous with `assert(fPruneMode != PruneMode::UNKNOWN`.\n\n`fHavePruned` is unknown during `ParameterInteraction` methods, because it is loaded from block index db, the location of which could be set by a parameter. It might be more elegant to split the `ParameterInteraction` methods into before and after databases have been loaded. That might also help to avoid various",https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-382760102,382760102,
laanwj,2018-04-24T07:04:33Z,"I'm not entirely sure about this. Guessing values for options according to context has the drawback that the system becomes less transparent, harder to troubleshoot. \n\nAlso it's good to avoid `IsArgSet` as much as possible as it's not possible to re-set an argument back to unset state, even by clearing it.\n\nIt also seems a large code change for what feels like a small argument handling cha",https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-383825875,383825875,
jonasschnelli,2018-04-24T08:12:02Z,"@Sjors: can you elaborate a little bit the use case this solves?\n\nAgree with @laanwj that other arguments would have the same problem (if we would agree it is a problem).\nIt seems that this adds unnecessary complexity.\nI think the current behaviour of refusing to run pruned blockchains where `prune=` is not set is correct.",https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-383843363,383843363,
Sjors,2018-04-25T10:39:03Z,"The problem I'm trying to solve here is being able to set `prune=` in QT (#13043) without causing errors if the user later launches `bitcoind`, or if the user resets their QT settings (at which point they'd get locked out).\n\nAnother approach could be to reinterpret `prune=0` to mean ""you can't prune now, but it's OK if things were pruned in the past (fHavePruned=true)"".\n\nA similar problem ",https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-384242859,384242859,
MarcoFalke,2018-05-09T18:39:56Z,Needs rebase if still relevant,https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-387835942,387835942,
Sjors,2018-05-15T11:08:12Z,"Rebased.\n\nI might make a separate PR with a different approach:\n1. interpret `prune=0` as not allowing manual pruning, but not failing if chain is already pruned\n2. if `-txindex` or `-rescan` are set, check if chain was actually pruned and fail if so\n\nI don't think that approach would require much less code, but it is perhaps more future proof, once `txindex` and `rescan` work (better)",https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-389129073,389129073,
MarcoFalke,2018-05-30T14:00:18Z,"Needs rebase due to merge of #13341\n",https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-393172913,393172913,
Sjors,2018-05-30T15:59:18Z,Rebased,https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-393217119,393217119,
Sjors,2018-07-06T10:03:13Z,Closing this because the rw_config approach in #11082 seems to have sufficient support.,https://github.com/bitcoin/bitcoin/pull/13029#issuecomment-402989632,402989632,
