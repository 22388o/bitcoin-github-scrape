[
  {
    "sha": "b1d66dc1d8c3135ad8cc63b4271f960fb864e63d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWQ2NmRjMWQ4YzMxMzVhZDhjYzYzYjQyNzFmOTYwZmI4NjRlNjNk",
    "commit": {
      "author": {
        "name": "BTaskaya",
        "email": "batuhanosmantaskaya@gmail.com",
        "date": "2018-01-03T16:54:13Z"
      },
      "committer": {
        "name": "BTaskaya",
        "email": "batuhanosmantaskaya@gmail.com",
        "date": "2018-01-03T16:54:13Z"
      },
      "message": "It doesnt a coin system it is a AI's algorithm",
      "tree": {
        "sha": "4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1d66dc1d8c3135ad8cc63b4271f960fb864e63d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1d66dc1d8c3135ad8cc63b4271f960fb864e63d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1d66dc1d8c3135ad8cc63b4271f960fb864e63d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1d66dc1d8c3135ad8cc63b4271f960fb864e63d/comments",
    "author": {
      "login": "isidentical",
      "id": 47358913,
      "node_id": "MDQ6VXNlcjQ3MzU4OTEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/47358913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isidentical",
      "html_url": "https://github.com/isidentical",
      "followers_url": "https://api.github.com/users/isidentical/followers",
      "following_url": "https://api.github.com/users/isidentical/following{/other_user}",
      "gists_url": "https://api.github.com/users/isidentical/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isidentical/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isidentical/subscriptions",
      "organizations_url": "https://api.github.com/users/isidentical/orgs",
      "repos_url": "https://api.github.com/users/isidentical/repos",
      "events_url": "https://api.github.com/users/isidentical/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isidentical/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "isidentical",
      "id": 47358913,
      "node_id": "MDQ6VXNlcjQ3MzU4OTEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/47358913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isidentical",
      "html_url": "https://github.com/isidentical",
      "followers_url": "https://api.github.com/users/isidentical/followers",
      "following_url": "https://api.github.com/users/isidentical/following{/other_user}",
      "gists_url": "https://api.github.com/users/isidentical/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isidentical/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isidentical/subscriptions",
      "organizations_url": "https://api.github.com/users/isidentical/orgs",
      "repos_url": "https://api.github.com/users/isidentical/repos",
      "events_url": "https://api.github.com/users/isidentical/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isidentical/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c991b304dee368f506cfee27ddaa333f1f82c518",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c991b304dee368f506cfee27ddaa333f1f82c518",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c991b304dee368f506cfee27ddaa333f1f82c518"
      }
    ],
    "stats": {
      "total": 420242,
      "additions": 0,
      "deletions": 420242
    },
    "files": [
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-src/clientversion.cpp export-subst"
      },
      {
        "sha": "55cebc008f5aa761847f4b701bc35abcc3956c48",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,21 +0,0 @@\n-<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n-\n-General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n-\n-For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n-\n-If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n-\n-<!-- Describe the issue -->\n-<!--- What behavior did you expect? -->\n-\n-<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n-\n-<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n-\n-<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n-\n-<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n-\n-<!-- Any extra information that might be useful in the debugging process. -->\n-<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "ff297fbeca511dc4988b2aeab25908e550dc559f",
        "filename": ".gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 112,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,112 +0,0 @@\n-*.tar.gz\n-\n-*.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/test/test_bitcoin_fuzzy\n-src/qt/test/test_bitcoin-qt\n-\n-# autoreconf\n-Makefile.in\n-aclocal.m4\n-autom4te.cache/\n-build-aux/config.guess\n-build-aux/config.sub\n-build-aux/depcomp\n-build-aux/install-sh\n-build-aux/ltmain.sh\n-build-aux/m4/libtool.m4\n-build-aux/m4/lt~obsolete.m4\n-build-aux/m4/ltoptions.m4\n-build-aux/m4/ltsugar.m4\n-build-aux/m4/ltversion.m4\n-build-aux/missing\n-build-aux/compile\n-build-aux/test-driver\n-config.log\n-config.status\n-configure\n-libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n-src/config/stamp-h1\n-share/setup.nsi\n-share/qt/Info.plist\n-\n-src/univalue/gen\n-\n-src/qt/*.moc\n-src/qt/moc_*.cpp\n-src/qt/forms/ui_*.h\n-\n-src/qt/test/moc*.cpp\n-\n-.deps\n-.dirstamp\n-.libs\n-.*.swp\n-*.*~*\n-*.bak\n-*.rej\n-*.orig\n-*.pyc\n-*.o\n-*.o-*\n-*.patch\n-*.a\n-*.pb.cc\n-*.pb.h\n-\n-*.log\n-*.trs\n-*.dmg\n-\n-*.json.h\n-*.raw.h\n-\n-#libtool object files\n-*.lo\n-*.la\n-\n-# Compilation and Qt preprocessor part\n-*.qm\n-Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n-background.tiff*\n-\n-# Unit-tests\n-Makefile.test\n-bitcoin-qt_test\n-\n-# Resources cpp\n-qrc_*.cpp\n-\n-# Mac specific\n-.DS_Store\n-build\n-\n-#lcov\n-*.gcno\n-*.gcda\n-/*.info\n-test_bitcoin.coverage/\n-total.coverage/\n-coverage_percent.txt\n-\n-#build tests\n-linux-coverage-build\n-linux-build\n-win32-build\n-test/config.ini\n-test/cache/*\n-\n-!src/leveldb*/Makefile\n-\n-/doc/doxygen/\n-\n-libbitcoinconsensus.pc\n-contrib/devtools/split-debug.sh"
      },
      {
        "sha": "ab002acc539d9ca0792cebcb4bbeb103f199a8a6",
        "filename": ".travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 85,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,85 +0,0 @@\n-sudo: required\n-dist: trusty\n-os: linux\n-language: minimal\n-cache:\n-  directories:\n-  - depends/built\n-  - depends/sdk-sources\n-  - $HOME/.ccache\n-env:\n-  global:\n-    - MAKEJOBS=-j3\n-    - RUN_TESTS=false\n-    - CHECK_DOC=0\n-    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n-    - CCACHE_SIZE=100M\n-    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n-    - CCACHE_COMPRESS=1\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - WINEDEBUG=fixme-all\n-  matrix:\n-# ARM\n-    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf python3-pip\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# Qt4 & system libs\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb\" NO_DEPENDS=1 NEED_XVFB=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n-# Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# x86_64 Linux, No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\" OSX_SDK=10.11 GOAL=\"deploy\"\n-\n-before_install:\n-    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n-install:\n-    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then travis_retry pip3 install flake8 --user; fi\n-before_script:\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/crypto/ctaes; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/secp256k1; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/univalue; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/leveldb; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-rpc-mappings.py .; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/lint-all.sh; fi\n-    - unset CC; unset CXX\n-    - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -z \"$NO_DEPENDS\" ]; then make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n-    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n-    - if [ \"$NEED_XVFB\" = 1 ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n-script:\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n-    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n-    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n-    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - if [ -z \"$NO_DEPENDS\" ]; then depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; fi\n-    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - mkdir build && cd build\n-    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make distdir VERSION=$HOST\n-    - cd bitcoin-$HOST\n-    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n-    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi\n-    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude pruning,dbcrash\"; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet ${extended}; fi\n-after_script:\n-    - echo $TRAVIS_COMMIT_RANGE\n-    - echo $TRAVIS_COMMIT_LOG"
      },
      {
        "sha": "c4eb6d831f31ae696f9b30a894068db35b74b8a0",
        "filename": ".tx/config",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,7 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-\n-[bitcoin.qt-translation-014x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n-source_lang = en"
      },
      {
        "sha": "8381bd2448959e37813821d30190c65e6806e356",
        "filename": "CONTRIBUTING.md",
        "status": "removed",
        "additions": 0,
        "deletions": 283,
        "changes": 283,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,283 +0,0 @@\n-Contributing to Bitcoin Core\n-============================\n-\n-The Bitcoin Core project operates an open contributor model where anyone is\n-welcome to contribute towards development in the form of peer review, testing\n-and patches. This document explains the practical process and guidelines for\n-contributing.\n-\n-Firstly in terms of structure, there is no particular concept of \"Core\n-developers\" in the sense of privileged people. Open source often naturally\n-revolves around meritocracy where longer term contributors gain more trust from\n-the developer community. However, some hierarchy is necessary for practical\n-purposes. As such there are repository \"maintainers\" who are responsible for\n-merging pull requests as well as a \"lead maintainer\" who is responsible for the\n-release cycle, overall merging, moderation and appointment of maintainers.\n-\n-\n-Contributor Workflow\n---------------------\n-\n-The codebase is maintained using the \"contributor workflow\" where everyone\n-without exception contributes patch proposals using \"pull requests\". This\n-facilitates social contribution, easy testing and peer review.\n-\n-To contribute a patch, the workflow is as follows:\n-\n-  1. Fork repository\n-  1. Create topic branch\n-  1. Commit patches\n-\n-The project coding conventions in the [developer notes](doc/developer-notes.md)\n-must be adhered to.\n-\n-In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n-and diffs should be easy to read. For this reason do not mix any formatting\n-fixes or code moves with actual code changes.\n-\n-Commit messages should be verbose by default consisting of a short subject line\n-(50 chars max), a blank line and detailed explanatory text as separate\n-paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n-in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n-helpful to people reading your code in the future, so explain the reasoning for\n-your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n-\n-If a particular commit references another issue, please add the reference. For\n-example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n-will cause the corresponding issue to be closed when the pull request is merged.\n-\n-Please refer to the [Git manual](https://git-scm.com/doc) for more information\n-about Git.\n-\n-  - Push changes to your fork\n-  - Create pull request\n-\n-The title of the pull request should be prefixed by the component or area that\n-the pull request affects. Valid areas as:\n-\n-  - *Consensus* for changes to consensus critical code\n-  - *Docs* for changes to the documentation\n-  - *Qt* for changes to bitcoin-qt\n-  - *Mining* for changes to the mining code\n-  - *Net* or *P2P* for changes to the peer-to-peer network code\n-  - *RPC/REST/ZMQ* for changes to the RPC, REST or ZMQ APIs\n-  - *Scripts and tools* for changes to the scripts and tools\n-  - *Tests* for changes to the bitcoin unit tests or QA tests\n-  - *Trivial* should **only** be used for PRs that do not change generated\n-    executable code. Notably, refactors (change of function arguments and code\n-    reorganization) and changes in behavior should **not** be marked as trivial.\n-    Examples of trivial PRs are changes to:\n-    - comments\n-    - whitespace\n-    - variable names\n-    - logging and messages\n-  - *Utils and libraries* for changes to the utils and libraries\n-  - *Wallet* for changes to the wallet code\n-\n-Examples:\n-\n-    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    Net: Automatically create hidden service, listen on Tor\n-    Qt: Add feed bump button\n-    Trivial: Fix typo in init.cpp\n-\n-Note that translations should not be submitted as pull requests, please see\n-[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md) \n-for more information on helping with translations.\n-\n-If a pull request is not to be considered for merging (yet), please\n-prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n-in the body of the pull request to indicate tasks are pending.\n-\n-The body of the pull request should contain enough description about what the\n-patch does together with any justification/reasoning. You should include\n-references to any discussions (for example other tickets or mailing list\n-discussions).\n-\n-At this stage one should expect comments and review from other contributors. You\n-can add more commits to your pull request by committing them locally and pushing\n-to your fork until you have satisfied all feedback.\n-\n-Squashing Commits\n----------------------------\n-If your pull request is accepted for merging, you may be asked by a maintainer\n-to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits\n-before it will be merged. The basic squashing workflow is shown below.\n-\n-    git checkout your_branch_name\n-    git rebase -i HEAD~n\n-    # n is normally the number of commits in the pull\n-    # set commits from 'pick' to 'squash', save and quit\n-    # on the next screen, edit/refine commit messages\n-    # save and quit\n-    git push -f # (force push to GitHub)\n-\n-If you have problems with squashing (or other workflows with `git`), you can\n-alternatively enable \"Allow edits from maintainers\" in the right GitHub\n-sidebar and ask for help in the pull request.\n-\n-Please refrain from creating several pull requests for the same change.\n-Use the pull request that is already open (or was created earlier) to amend\n-changes. This preserves the discussion and review that happened earlier for\n-the respective change set.\n-\n-The length of time required for peer review is unpredictable and will vary from\n-pull request to pull request.\n-\n-\n-Pull Request Philosophy\n------------------------\n-\n-Patchsets should always be focused. For example, a pull request could add a\n-feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n-pull requests which attempt to do too much, are overly large, or overly complex\n-as this makes review difficult.\n-\n-\n-### Features\n-\n-When adding a new feature, thought must be given to the long term technical debt\n-and maintenance that feature may require after inclusion. Before proposing a new\n-feature that will require maintenance, please consider if you are willing to\n-maintain it (including bug fixing). If features get orphaned with no maintainer\n-in the future, they may be removed by the Repository Maintainer.\n-\n-\n-### Refactoring\n-\n-Refactoring is a necessary part of any software project's evolution. The\n-following guidelines cover refactoring pull requests for the project.\n-\n-There are three categories of refactoring, code only moves, code style fixes,\n-code refactoring. In general refactoring pull requests should not mix these\n-three kinds of activity in order to make refactoring pull requests easy to\n-review and uncontroversial. In all cases, refactoring PRs must not change the\n-behaviour of code within the pull request (bugs must be preserved as is).\n-\n-Project maintainers aim for a quick turnaround on refactoring pull requests, so\n-where possible keep them short, uncomplex and easy to verify.\n-\n-Pull requests that refactor the code should not be made by new contributors. It\n-requires a certain level of experience to know where the code belongs to and to\n-understand the full ramification (including rebase effort of open pull requests).\n-\n-Trivial pull requests or pull requests that refactor the code with no clear\n-benefits may be immediately closed by the maintainers to reduce unnecessary\n-workload on reviewing.\n-\n-\n-\"Decision Making\" Process\n--------------------------\n-\n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n-Network Protocol consensus changes.\n-\n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n-maintainers and ultimately the project lead.\n-\n-Maintainers will take into consideration if a patch is in line with the general\n-principles of the project; meets the minimum standards for inclusion; and will\n-judge the general consensus of contributors.\n-\n-In general, all pull requests must:\n-\n-  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n-    the project (for example refactoring for modularisation);\n-  - Be well peer reviewed;\n-  - Have unit tests and functional tests where appropriate;\n-  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n-  - Not break the existing test suite;\n-  - Where bugs are fixed, where possible, there should be unit tests\n-    demonstrating the bug and also proving the fix. This helps prevent regression.\n-\n-Patches that change Bitcoin consensus rules are considerably more involved than\n-normal because they affect the entire ecosystem and so must be preceded by\n-extensive mailing list discussions and have a numbered BIP. While each case will\n-be different, one should be prepared to expend more time and effort than for\n-other kinds of patches because of increased peer review and consensus building\n-requirements.\n-\n-\n-### Peer Review\n-\n-Anyone may participate in peer review which is expressed by comments in the pull\n-request. Typically reviewers will review the code for obvious errors, as well as\n-test out the patch set and opine on the technical merits of the patch. Project\n-maintainers take into account the peer review when determining if there is\n-consensus to merge a pull request (remember that discussions may have been\n-spread out over GitHub, mailing list and IRC discussions). The following\n-language is used within pull-request comments:\n-\n-  - ACK means \"I have tested the code and I agree it should be merged\";\n-  - NACK means \"I disagree this should be merged\", and must be accompanied by\n-    sound technical justification (or in certain cases of copyright/patent/licensing\n-    issues, legal justification). NACKs without accompanying reasoning may be\n-    disregarded;\n-  - utACK means \"I have not tested the code, but I have reviewed it and it looks\n-    OK, I agree it can be merged\";\n-  - Concept ACK means \"I agree in the general principle of this pull request\";\n-  - Nit refers to trivial, often non-blocking issues.\n-\n-Reviewers should include the commit hash which they reviewed in their comments.\n-\n-Project maintainers reserve the right to weigh the opinions of peer reviewers\n-using common sense judgement and also may weight based on meritocracy: Those\n-that have demonstrated a deeper commitment and understanding towards the project\n-(over time) or have clear domain expertise may naturally have more weight, as\n-one would expect in all walks of life.\n-\n-Where a patch set affects consensus critical code, the bar will be set much\n-higher in terms of discussion and peer review requirements, keeping in mind that\n-mistakes could be very costly to the wider community. This includes refactoring\n-of consensus critical code.\n-\n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n-discussed extensively on the mailing list and IRC, be accompanied by a widely\n-discussed BIP and have a generally widely perceived technical consensus of being\n-a worthwhile change based on the judgement of the maintainers.\n-\n-### Finding Reviewers\n-\n-As most reviewers are themselves developers with their own projects, the review\n-process can be quite lengthy, and some amount of patience is required. If you find\n-that you've been waiting for a pull request to be given attention for several\n-months, there may be a number of reasons for this, some of which you can do something\n-about:\n-\n-  - It may be because of a feature freeze due to an upcoming release. During this time,\n-    only bug fixes are taken into consideration. If your pull request is a new feature,\n-    it will not be prioritized until the release is over. Wait for release.\n-  - It may be because the changes you are suggesting do not appeal to people. Rather than\n-    nits and critique, which require effort and means they care enough to spend time on your\n-    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n-    (because people don't assume *others* won't actually like the proposal). Don't take\n-    that personally, though! Instead, take another critical look at what you are suggesting\n-    and see if it: changes too much, is too broad, doesn't adhere to the\n-    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n-    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n-    their opinion on the concept itself.\n-  - It may be because your code is too complex for all but a few people. And those people\n-    may not have realized your pull request even exists. A great way to find people who\n-    are qualified and care about the code you are touching is the\n-    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n-    find the person touching the code you are touching before you and see if you can find\n-    them and give them a nudge. Don't be incessant about the nudging though.\n-  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n-    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n-    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n-    when someone else is asking for feedback on their code, and universe balances out.\n-\n-\n-Release Policy\n---------------\n-\n-The project leader is the release manager for each Bitcoin Core release.\n-\n-Copyright\n----------\n-\n-By contributing to this repository, you agree to license your work under the \n-MIT license unless specified otherwise in `contrib/debian/copyright` or at \n-the top of the file itself. Any work contributed where you are not the original \n-author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "45d51c3c7851ed2043b6b540f31fcd0d54dc861f",
        "filename": "COPYING",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,22 +0,0 @@\n-The MIT License (MIT)\n-\n-Copyright (c) 2009-2017 The Bitcoin Core developers\n-Copyright (c) 2009-2017 Bitcoin Developers\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in\n-all copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-THE SOFTWARE."
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,5 +0,0 @@\n-Building Bitcoin\n-================\n-\n-See doc/build-*.md for instructions on building the various\n-elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "b24daf99054c3a12cfffd16ef822dadb141d38f2",
        "filename": "Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 282,
        "changes": 282,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,282 +0,0 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-ACLOCAL_AMFLAGS = -I build-aux/m4\n-SUBDIRS = src\n-if ENABLE_MAN\n-SUBDIRS += doc/man\n-endif\n-.PHONY: deploy FORCE\n-\n-export PYTHONPATH\n-\n-if BUILD_BITCOIN_LIBS\n-pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n-endif\n-\n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n-\n-empty :=\n-space := $(empty) $(empty)\n-\n-OSX_APP=Bitcoin-Qt.app\n-OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n-OSX_DMG = $(OSX_VOLNAME).dmg\n-OSX_BACKGROUND_SVG=background.svg\n-OSX_BACKGROUND_IMAGE=background.tiff\n-OSX_BACKGROUND_IMAGE_DPIS=36 72\n-OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n-OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n-OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n-OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n-\n-DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n-DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n-\t       $(top_srcdir)/contrib/init \\\n-\t       $(top_srcdir)/contrib/install_db4.sh \\\n-\t       $(top_srcdir)/contrib/rpm\n-DIST_SHARE = \\\n-  $(top_srcdir)/share/genbuild.sh \\\n-  $(top_srcdir)/share/rpcauth\n-\n-BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n-           $(top_srcdir)/contrib/devtools/security-check.py\n-\n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n-  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n-  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n-  $(top_srcdir)/doc/README_windows.txt\n-\n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n-  $(OSX_DSSTORE_GEN) \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n-\n-COVERAGE_INFO = baseline.info \\\n-  test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  test_bitcoin_coverage.info test_bitcoin.info\n-\n-dist-hook:\n-\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n-\n-$(BITCOIN_WIN_INSTALLER): all-recursive\n-\t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n-\t  echo error: could not build $@\n-\t@echo built $@\n-\n-$(OSX_APP)/Contents/PkgInfo:\n-\t$(MKDIR_P) $(@D)\n-\t@echo \"APPL????\" > $@\n-\n-$(OSX_APP)/Contents/Resources/empty.lproj:\n-\t$(MKDIR_P) $(@D)\n-\t@touch $@ \n-\n-$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n-\t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n-\n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n-\t$(MKDIR_P) $(@D)\n-\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n-\n-OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n-\n-osx_volname:\n-\techo $(OSX_VOLNAME) >$@\n-\n-if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n-\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n-\n-$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n-$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n-$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n-\ttiffutil -cathidpicheck $^ -out $@\n-\n-deploydir: $(OSX_DMG)\n-else\n-APP_DIST_DIR=$(top_builddir)/dist\n-APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n-\n-$(APP_DIST_DIR)/Applications:\n-\t@rm -f $@\n-\t@cd $(@D); $(LN_S) /Applications $(@F)\n-\n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n-\n-$(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n-\n-dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n-OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n-\t$(MKDIR_P) $(@D)\n-\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n-\n-$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n-\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n-\n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n-\n-deploydir: $(APP_DIST_EXTRAS)\n-endif\n-\n-if TARGET_DARWIN\n-appbundle: $(OSX_APP_BUILT)\n-deploy: $(OSX_DMG)\n-endif\n-if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n-endif\n-\n-$(BITCOIN_QT_BIN): FORCE\n-\t$(MAKE) -C src qt/$(@F)\n-\n-$(BITCOIND_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_CLI_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-if USE_LCOV\n-LCOV_FILTER_PATTERN=-p \"/usr/include/\" -p \"src/leveldb/\" -p \"src/bench/\" -p \"src/univalue\" -p \"src/crypto/ctaes\" -p \"src/secp256k1\"\n-\n-baseline.info:\n-\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n-\n-baseline_filtered.info: baseline.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-test_bitcoin.info: baseline_filtered.info\n-\t$(MAKE) -C src/ check\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-functional_test.info: test_bitcoin_filtered.info\n-\t-@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-functional_test_filtered.info: functional_test.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n-\n-endif\n-\n-dist_noinst_SCRIPTS = autogen.sh\n-\n-EXTRA_DIST = $(DIST_SHARE) test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n-\n-EXTRA_DIST += \\\n-    test/util/bitcoin-util-test.py \\\n-    test/util/data/bitcoin-util-test.json \\\n-    test/util/data/blanktxv1.hex \\\n-    test/util/data/blanktxv1.json \\\n-    test/util/data/blanktxv2.hex \\\n-    test/util/data/blanktxv2.json \\\n-    test/util/data/tt-delin1-out.hex \\\n-    test/util/data/tt-delin1-out.json \\\n-    test/util/data/tt-delout1-out.hex \\\n-    test/util/data/tt-delout1-out.json \\\n-    test/util/data/tt-locktime317000-out.hex \\\n-    test/util/data/tt-locktime317000-out.json \\\n-    test/util/data/tx394b54bb.hex \\\n-    test/util/data/txcreate1.hex \\\n-    test/util/data/txcreate1.json \\\n-    test/util/data/txcreate2.hex \\\n-    test/util/data/txcreate2.json \\\n-    test/util/data/txcreatedata1.hex \\\n-    test/util/data/txcreatedata1.json \\\n-    test/util/data/txcreatedata2.hex \\\n-    test/util/data/txcreatedata2.json \\\n-    test/util/data/txcreatedata_seq0.hex \\\n-    test/util/data/txcreatedata_seq0.json \\\n-    test/util/data/txcreatedata_seq1.hex \\\n-    test/util/data/txcreatedata_seq1.json \\\n-    test/util/data/txcreatemultisig1.hex \\\n-    test/util/data/txcreatemultisig1.json \\\n-    test/util/data/txcreatemultisig2.hex \\\n-    test/util/data/txcreatemultisig2.json \\\n-    test/util/data/txcreatemultisig3.hex \\\n-    test/util/data/txcreatemultisig3.json \\\n-    test/util/data/txcreatemultisig4.hex \\\n-    test/util/data/txcreatemultisig4.json \\\n-    test/util/data/txcreatemultisig5.json \\\n-    test/util/data/txcreateoutpubkey1.hex \\\n-    test/util/data/txcreateoutpubkey1.json \\\n-    test/util/data/txcreateoutpubkey2.hex \\\n-    test/util/data/txcreateoutpubkey2.json \\\n-    test/util/data/txcreateoutpubkey3.hex \\\n-    test/util/data/txcreateoutpubkey3.json \\\n-    test/util/data/txcreatescript1.hex \\\n-    test/util/data/txcreatescript1.json \\\n-    test/util/data/txcreatescript2.hex \\\n-    test/util/data/txcreatescript2.json \\\n-    test/util/data/txcreatescript3.hex \\\n-    test/util/data/txcreatescript3.json \\\n-    test/util/data/txcreatescript4.hex \\\n-    test/util/data/txcreatescript4.json \\\n-    test/util/data/txcreatesignv1.hex \\\n-    test/util/data/txcreatesignv1.json \\\n-    test/util/data/txcreatesignv2.hex\n-\n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n-\n-.INTERMEDIATE: $(COVERAGE_INFO)\n-\n-DISTCHECK_CONFIGURE_FLAGS = --enable-man\n-\n-clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n-\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache"
      },
      {
        "sha": "5db9fc99282a9ca51c75ce14822b106b132de141",
        "filename": "README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,82 +0,0 @@\n-Bitcoin Core integration/staging tree\n-=====================================\n-\n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n-\n-https://bitcoincore.org\n-\n-What is Bitcoin?\n-----------------\n-\n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n-with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n-software which enables the use of this currency.\n-\n-For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n-\n-License\n--------\n-\n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see https://opensource.org/licenses/MIT.\n-\n-Development Process\n--------------------\n-\n-The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n-\n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n-\n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-should be used to discuss complicated or controversial changes before working\n-on a patch set.\n-\n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n-\n-Testing\n--------\n-\n-Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test on short notice. Please be patient and help out by testing\n-other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n-lots of money.\n-\n-### Automated Testing\n-\n-Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run\n-(assuming they weren't disabled in configure) with: `make check`. Further details on running\n-and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n-\n-There are also [regression and integration tests](/test), written\n-in Python, that are run automatically on the build server.\n-These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n-\n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n-\n-### Manual Quality Assurance (QA) Testing\n-\n-Changes should be tested by somebody other than the developer who wrote the\n-code. This is especially important for large or high-risk changes. It is useful\n-to add a test plan to the pull request description if testing the changes is\n-not straightforward.\n-\n-Translations\n-------------\n-\n-Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n-\n-Translations are periodically pulled from Transifex and merged into the git repository. See the\n-[translation process](doc/translation_process.md) for details on how this works.\n-\n-**Important**: We do not accept translation changes as GitHub pull requests because the next\n-pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "27417daf7691513da832eae5541b6c5bee091551",
        "filename": "autogen.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,15 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-srcdir=\"$(dirname $0)\"\n-cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n-  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n-  export LIBTOOLIZE\n-fi\n-which autoreconf >/dev/null || \\\n-  (echo \"configuration failed, please install autoconf first\" && exit 1)\n-autoreconf --install --force --warnings=all"
      },
      {
        "sha": "650c94fa64752a362a34eb6d489c194255ecfc51",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 291,
        "changes": 291,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,291 +0,0 @@\n-# ===========================================================================\n-#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-#\n-# DESCRIPTION\n-#\n-#   Test for the Boost C++ libraries of a particular version (or newer)\n-#\n-#   If no path to the installed boost library is given the macro searchs\n-#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n-#   $BOOST_ROOT environment variable. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Peter Adolphs\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 27\n-\n-AC_DEFUN([AX_BOOST_BASE],\n-[\n-AC_ARG_WITH([boost],\n-  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n-    [use Boost library from a standard location (ARG=yes),\n-     from the specified location (ARG=<path>),\n-     or disable it (ARG=no)\n-     @<:@ARG=yes@:>@ ])],\n-    [\n-    if test \"$withval\" = \"no\"; then\n-        want_boost=\"no\"\n-    elif test \"$withval\" = \"yes\"; then\n-        want_boost=\"yes\"\n-        ac_boost_path=\"\"\n-    else\n-        want_boost=\"yes\"\n-        ac_boost_path=\"$withval\"\n-    fi\n-    ],\n-    [want_boost=\"yes\"])\n-\n-\n-AC_ARG_WITH([boost-libdir],\n-        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n-        [\n-        if test -d \"$withval\"\n-        then\n-                ac_boost_lib_path=\"$withval\"\n-        else\n-                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n-        fi\n-        ],\n-        [ac_boost_lib_path=\"\"]\n-)\n-\n-if test \"x$want_boost\" = \"xyes\"; then\n-    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n-    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n-    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n-        boost_lib_version_req_sub_minor=\"0\"\n-        fi\n-    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n-    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n-    succeeded=no\n-\n-    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n-    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n-    dnl this (as it rises problems for generic multi-arch support).\n-    dnl The last entry in the list is chosen by default when no libraries\n-    dnl are found, e.g. when only header-only libraries are installed!\n-    libsubdirs=\"lib\"\n-    ax_arch=`uname -m`\n-    case $ax_arch in\n-      x86_64)\n-        libsubdirs=\"lib64 libx32 lib lib64\"\n-        ;;\n-      ppc64|s390x|sparc64|aarch64|ppc64le)\n-        libsubdirs=\"lib64 lib lib64\"\n-        ;;\n-    esac\n-\n-    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n-    dnl them priority over the other paths since, if libs are found there, they\n-    dnl are almost assuredly the ones desired.\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n-\n-    case ${host_cpu} in\n-      i?86)\n-        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n-        ;;\n-    esac\n-\n-    dnl some arches may advertise a cpu type that doesn't line up with their\n-    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n-    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n-    dnl value for an extra chance of finding the correct path.\n-    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n-\n-    dnl first we check the system location for boost libraries\n-    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n-    dnl or if you install boost with RPM\n-    if test \"$ac_boost_path\" != \"\"; then\n-        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n-        for ac_boost_path_tmp in $libsubdirs; do\n-                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n-                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n-                        break\n-                fi\n-        done\n-    elif test \"$cross_compiling\" != yes; then\n-        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n-                break;\n-            fi\n-        done\n-    fi\n-\n-    dnl overwrite ld flags if we have required special directory with\n-    dnl --with-boost-libdir parameter\n-    if test \"$ac_boost_lib_path\" != \"\"; then\n-       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n-    fi\n-\n-    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-    export CPPFLAGS\n-\n-    LDFLAGS_SAVED=\"$LDFLAGS\"\n-    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-    export LDFLAGS\n-\n-    AC_REQUIRE([AC_PROG_CXX])\n-    AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    @%:@include <boost/version.hpp>\n-    ]], [[\n-    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-    // Everything is okay\n-    #else\n-    #  error Boost version is too old\n-    #endif\n-    ]])],[\n-        AC_MSG_RESULT(yes)\n-    succeeded=yes\n-    found_system=yes\n-        ],[\n-        ])\n-    AC_LANG_POP([C++])\n-\n-\n-\n-    dnl if we found no boost with system layout we search for boost libraries\n-    dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\"; then\n-        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-        LDFLAGS=\"$LDFLAGS_SAVED\"\n-        BOOST_CPPFLAGS=\n-        BOOST_LDFLAGS=\n-        _version=0\n-        if test \"$ac_boost_path\" != \"\"; then\n-            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                    V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"$V_CHECK\" = \"1\" ; then\n-                        _version=$_version_tmp\n-                    fi\n-                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n-                done\n-                dnl if nothing found search for layout used in Windows distributions\n-                if test -z \"$BOOST_CPPFLAGS\"; then\n-                    if test -d \"$ac_boost_path/boost\" && test -r \"$ac_boost_path/boost\"; then\n-                        BOOST_CPPFLAGS=\"-I$ac_boost_path\"\n-                    fi\n-                fi\n-            fi\n-        else\n-            if test \"$cross_compiling\" != yes; then\n-                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                            V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"$V_CHECK\" = \"1\" ; then\n-                                _version=$_version_tmp\n-                                best_path=$ac_boost_path\n-                            fi\n-                        done\n-                    fi\n-                done\n-\n-                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test \"$ac_boost_lib_path\" = \"\"; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n-                fi\n-            fi\n-\n-            if test \"x$BOOST_ROOT\" != \"x\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n-                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n-                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n-                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n-                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n-                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n-                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n-                    fi\n-                fi\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        @%:@include <boost/version.hpp>\n-        ]], [[\n-        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-        // Everything is okay\n-        #else\n-        #  error Boost version is too old\n-        #endif\n-        ]])],[\n-            AC_MSG_RESULT(yes)\n-        succeeded=yes\n-        found_system=yes\n-            ],[\n-            ])\n-        AC_LANG_POP([C++])\n-    fi\n-\n-    if test \"$succeeded\" != \"yes\" ; then\n-        if test \"$_version\" = \"0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n-        else\n-            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n-        fi\n-        # execute ACTION-IF-NOT-FOUND (if present):\n-        ifelse([$3], , :, [$3])\n-    else\n-        AC_SUBST(BOOST_CPPFLAGS)\n-        AC_SUBST(BOOST_LDFLAGS)\n-        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n-        # execute ACTION-IF-FOUND (if present):\n-        ifelse([$2], , :, [$2])\n-    fi\n-\n-    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-    LDFLAGS=\"$LDFLAGS_SAVED\"\n-fi\n-\n-])"
      },
      {
        "sha": "318ecea17fab84b7bbc24ded70bcb27be749d603",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_CHRONO\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CHRONO_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_CHRONO\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 1\n-\n-AC_DEFUN([AX_BOOST_CHRONO],\n-[\n-\tAC_ARG_WITH([boost-chrono],\n-\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n-                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_chrono_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_chrono_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n-\t\t\t\t\t   ax_cv_boost_chrono,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n-                                   [[boost::chrono::system_clock::time_point time;]])],\n-                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_chrono\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                   [link_chrono=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n-            fi\n-\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "f5c9d56470bf9659b2c38c677c946d37c32be206",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_FILESYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for Filesystem library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_FILESYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 26\n-\n-AC_DEFUN([AX_BOOST_FILESYSTEM],\n-[\n-\tAC_ARG_WITH([boost-filesystem],\n-\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n-                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_filesystem_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_filesystem_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-\t\tLIBS_SAVED=$LIBS\n-\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n-\t\texport LIBS\n-\n-        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n-\t\t\t\t\t   ax_cv_boost_filesystem,\n-        [AC_LANG_PUSH([C++])\n-         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n-                                   [[using namespace boost::filesystem;\n-                                   path my_path( \"foo/bar/data.txt\" );\n-                                   return 0;]])],\n-\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n-            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_filesystem\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-\t\t    fi\n-            else\n-               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                   [link_filesystem=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n-            fi\n-\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\t\tLIBS=\"$LIBS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 108,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,108 +0,0 @@\n-# ============================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n-# ============================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROGRAM_OPTIONS\n-#\n-# DESCRIPTION\n-#\n-#   Test for program options library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROGRAM_OPTIONS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 24\n-\n-AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n-[\n-\tAC_ARG_WITH([boost-program-options],\n-\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n-                       [use the program options library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_program_options_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_program_options_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t    export want_boost\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n-\t\t\t\t\t   ax_cv_boost_program_options,\n-\t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n-                                                          ]],\n-                                  [[boost::program_options::error err(\"Error message\");\n-                                   return 0;]])],\n-                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n-\t\t\t\t\tAC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n-\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n-                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_program_options\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                fi\n-                else\n-                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n-                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                   [link_program_options=\"no\"])\n-                  done\n-                fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n-            fi\n-\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n-\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n-\t\t\t\tfi\n-\t\tfi\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "1c05450cbe1d5cc11a257f5c02284900890a973e",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 122,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,122 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_SYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_SYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_SYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 18\n-\n-AC_DEFUN([AX_BOOST_SYSTEM],\n-[\n-\tAC_ARG_WITH([boost-system],\n-\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n-                   [use the System library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_system_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_system_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::System library is available,\n-\t\t\t\t\t   ax_cv_boost_system,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n-                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_system\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                   [link_system=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n-            fi\n-\t\t\tif test \"x$link_system\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "9f0bd0b23c9b0caba987ba96080f7696643a8d5d",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 150,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,150 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_THREAD\n-#\n-# DESCRIPTION\n-#\n-#   Test for Thread library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_THREAD_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_THREAD\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 27\n-\n-AC_DEFUN([AX_BOOST_THREAD],\n-[\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n-           if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n-\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-                        case \"x$host_os\" in\n-                          *bsd* )\n-                               LDFLAGS=\"-pthread $LDFLAGS\"\n-                          break;\n-                          ;;\n-                        esac\n-            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_thread\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                   [link_thread=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n-            fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "4efd1e2f18be12e19176f772ad41f07a823a0c85",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,138 +0,0 @@\n-# ================================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# ================================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# DESCRIPTION\n-#\n-#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n-#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n-#   is available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 19\n-\n-AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n-[\n-\tAC_ARG_WITH([boost-unit-test-framework],\n-\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n-                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_unit_test_framework_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n-\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n-                                    [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n-                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                ax_lib=\n-                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n-                    if test -r $monitor_library ; then\n-                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t  break\n-\t\t\t\t    fi\n-                done\n-                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n-                                 [link_unit_test_framework=\"no\"])\n-\t\t\t\tdone\n-                fi\n-            else\n-                link_unit_test_framework=\"no\"\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n-                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      break;\n-                   fi\n-                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n-                   if test -r $unittest_library ; then\n-                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t    break\n-\t\t\t\t    fi\n-                  done\n-               done\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n-            fi\n-\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's compiler\n-#   or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the current language's default\n-#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n-#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n-#   force the compiler to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n-  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the linker or gives an error.\n-#   (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n-#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n-#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n-#   issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$LDFLAGS\n-  LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  LDFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's\n-#   preprocessor or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n-#   flags when the check is done.  The check is thus made with the flags:\n-#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n-#   preprocessor to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$CPPFLAGS\n-  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  CPPFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "f147cee3b117f80b22544976385e267b26f46dd9",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 568,
        "changes": 568,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,568 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n-#\n-# DESCRIPTION\n-#\n-#   Check for baseline language coverage in the compiler for the specified\n-#   version of the C++ standard.  If necessary, add switches to CXX and\n-#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n-#   or '14' (for the C++14 standard).\n-#\n-#   The second argument, if specified, indicates whether you insist on an\n-#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n-#   -std=c++11).  If neither is specified, you get whatever works, with\n-#   preference for an extended mode.\n-#\n-#   The third argument, if specified 'mandatory' or if left unspecified,\n-#   indicates that baseline support for the specified C++ standard is\n-#   required and that the macro should error out if no mode with that\n-#   support is found.  If specified 'optional', then configuration proceeds\n-#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n-#   supporting mode is found.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n-#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n-#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n-#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n-#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n-#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 4\n-\n-dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n-dnl  (serial version number 13).\n-\n-AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n-  m4_if([$1], [11], [],\n-        [$1], [14], [],\n-        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],\n-        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$2], [], [],\n-        [$2], [ext], [],\n-        [$2], [noext], [],\n-        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n-        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n-  m4_if([$4], [], [ax_cxx_compile_cxx$1_try_default=true],\n-        [$4], [default], [ax_cxx_compile_cxx$1_try_default=true],\n-        [$4], [nodefault], [ax_cxx_compile_cxx$1_try_default=false],\n-        [m4_fatal([invalid fourth argument `$4' to AX_CXX_COMPILE_STDCXX])])\n-  AC_LANG_PUSH([C++])dnl\n-  ac_success=no\n-\n-  m4_if([$4], [nodefault], [], [dnl\n-  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n-  ax_cv_cxx_compile_cxx$1,\n-  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-    [ax_cv_cxx_compile_cxx$1=yes],\n-    [ax_cv_cxx_compile_cxx$1=no])])\n-  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n-    ac_success=yes\n-  fi])\n-\n-  m4_if([$2], [noext], [], [dnl\n-  if test x$ac_success = xno; then\n-    for switch in -std=gnu++$1 -std=gnu++0x; do\n-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                     $cachevar,\n-        [ac_save_CXX=\"$CXX\"\n-         CXX=\"$CXX $switch\"\n-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-          [eval $cachevar=yes],\n-          [eval $cachevar=no])\n-         CXX=\"$ac_save_CXX\"])\n-      if eval test x\\$$cachevar = xyes; then\n-        CXX=\"$CXX $switch\"\n-        if test -n \"$CXXCPP\" ; then\n-          CXXCPP=\"$CXXCPP $switch\"\n-        fi\n-        ac_success=yes\n-        break\n-      fi\n-    done\n-  fi])\n-\n-  m4_if([$2], [ext], [], [dnl\n-  if test x$ac_success = xno; then\n-    dnl HP's aCC needs +std=c++11 according to:\n-    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n-    dnl Cray's crayCC needs \"-h std=c++11\"\n-    for switch in -std=c++$1 -std=c++0x +std=c++$1 \"-h std=c++$1\"; do\n-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                     $cachevar,\n-        [ac_save_CXX=\"$CXX\"\n-         CXX=\"$CXX $switch\"\n-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-          [eval $cachevar=yes],\n-          [eval $cachevar=no])\n-         CXX=\"$ac_save_CXX\"])\n-      if eval test x\\$$cachevar = xyes; then\n-        CXX=\"$CXX $switch\"\n-        if test -n \"$CXXCPP\" ; then\n-          CXXCPP=\"$CXXCPP $switch\"\n-        fi\n-        ac_success=yes\n-        break\n-      fi\n-    done\n-  fi])\n-  AC_LANG_POP([C++])\n-  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n-    if test x$ac_success = xno; then\n-      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n-    fi\n-  fi\n-  if test x$ac_success = xno; then\n-    HAVE_CXX$1=0\n-    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n-  else\n-    HAVE_CXX$1=1\n-    AC_DEFINE(HAVE_CXX$1,1,\n-              [define if the compiler supports basic C++$1 syntax])\n-  fi\n-  AC_SUBST(HAVE_CXX$1)\n-])\n-\n-\n-dnl  Test body for checking C++11 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-)\n-\n-\n-dnl  Test body for checking C++14 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n-)\n-\n-\n-dnl  Tests for new features in C++11\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n-\n-// If the compiler admits that it is not ready for C++11, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201103L\n-\n-#error \"This is not a C++11 compiler\"\n-\n-#else\n-\n-namespace cxx11\n-{\n-\n-  namespace test_static_assert\n-  {\n-\n-    template <typename T>\n-    struct check\n-    {\n-      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n-    };\n-\n-  }\n-\n-  namespace test_final_override\n-  {\n-\n-    struct Base\n-    {\n-      virtual void f() {}\n-    };\n-\n-    struct Derived : public Base\n-    {\n-      virtual void f() override {}\n-    };\n-\n-  }\n-\n-  namespace test_double_right_angle_brackets\n-  {\n-\n-    template < typename T >\n-    struct check {};\n-\n-    typedef check<void> single_type;\n-    typedef check<check<void>> double_type;\n-    typedef check<check<check<void>>> triple_type;\n-    typedef check<check<check<check<void>>>> quadruple_type;\n-\n-  }\n-\n-  namespace test_decltype\n-  {\n-\n-    int\n-    f()\n-    {\n-      int a = 1;\n-      decltype(a) b = 2;\n-      return a + b;\n-    }\n-\n-  }\n-\n-  namespace test_type_deduction\n-  {\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static const bool value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static const bool value = true;\n-    };\n-\n-    template < typename T1, typename T2 >\n-    auto\n-    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n-    {\n-      return a1 + a2;\n-    }\n-\n-    int\n-    test(const int c, volatile int v)\n-    {\n-      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n-      auto ac = c;\n-      auto av = v;\n-      auto sumi = ac + av + 'x';\n-      auto sumf = ac + av + 1.0;\n-      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n-      return (sumf > 0.0) ? sumi : add(c, v);\n-    }\n-\n-  }\n-\n-  namespace test_noexcept\n-  {\n-\n-    int f() { return 0; }\n-    int g() noexcept { return 0; }\n-\n-    static_assert(noexcept(f()) == false, \"\");\n-    static_assert(noexcept(g()) == true, \"\");\n-\n-  }\n-\n-  namespace test_constexpr\n-  {\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n-    {\n-      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n-    }\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      return strlen_c_r(s, 0UL);\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"1\") == 1UL, \"\");\n-    static_assert(strlen_c(\"example\") == 7UL, \"\");\n-    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_rvalue_references\n-  {\n-\n-    template < int N >\n-    struct answer\n-    {\n-      static constexpr int value = N;\n-    };\n-\n-    answer<1> f(int&)       { return answer<1>(); }\n-    answer<2> f(const int&) { return answer<2>(); }\n-    answer<3> f(int&&)      { return answer<3>(); }\n-\n-    void\n-    test()\n-    {\n-      int i = 0;\n-      const int c = 0;\n-      static_assert(decltype(f(i))::value == 1, \"\");\n-      static_assert(decltype(f(c))::value == 2, \"\");\n-      static_assert(decltype(f(0))::value == 3, \"\");\n-    }\n-\n-  }\n-\n-  namespace test_uniform_initialization\n-  {\n-\n-    struct test\n-    {\n-      static const int zero {};\n-      static const int one {1};\n-    };\n-\n-    static_assert(test::zero == 0, \"\");\n-    static_assert(test::one == 1, \"\");\n-\n-  }\n-\n-  namespace test_lambdas\n-  {\n-\n-    void\n-    test1()\n-    {\n-      auto lambda1 = [](){};\n-      auto lambda2 = lambda1;\n-      lambda1();\n-      lambda2();\n-    }\n-\n-    int\n-    test2()\n-    {\n-      auto a = [](int i, int j){ return i + j; }(1, 2);\n-      auto b = []() -> int { return '0'; }();\n-      auto c = [=](){ return a + b; }();\n-      auto d = [&](){ return c; }();\n-      auto e = [a, &b](int x) mutable {\n-        const auto identity = [](int y){ return y; };\n-        for (auto i = 0; i < a; ++i)\n-          a += b--;\n-        return x + identity(a + b);\n-      }(0);\n-      return a + b + c + d + e;\n-    }\n-\n-    int\n-    test3()\n-    {\n-      const auto nullary = [](){ return 0; };\n-      const auto unary = [](int x){ return x; };\n-      using nullary_t = decltype(nullary);\n-      using unary_t = decltype(unary);\n-      const auto higher1st = [](nullary_t f){ return f(); };\n-      const auto higher2nd = [unary](nullary_t f1){\n-        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n-      };\n-      return higher1st(nullary) + higher2nd(nullary)(unary);\n-    }\n-\n-  }\n-\n-  namespace test_variadic_templates\n-  {\n-\n-    template <int...>\n-    struct sum;\n-\n-    template <int N0, int... N1toN>\n-    struct sum<N0, N1toN...>\n-    {\n-      static constexpr auto value = N0 + sum<N1toN...>::value;\n-    };\n-\n-    template <>\n-    struct sum<>\n-    {\n-      static constexpr auto value = 0;\n-    };\n-\n-    static_assert(sum<>::value == 0, \"\");\n-    static_assert(sum<1>::value == 1, \"\");\n-    static_assert(sum<23>::value == 23, \"\");\n-    static_assert(sum<1, 2>::value == 3, \"\");\n-    static_assert(sum<5, 5, 11>::value == 21, \"\");\n-    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n-\n-  }\n-\n-  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n-  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n-  // because of this.\n-  namespace test_template_alias_sfinae\n-  {\n-\n-    struct foo {};\n-\n-    template<typename T>\n-    using member = typename T::member_type;\n-\n-    template<typename T>\n-    void func(...) {}\n-\n-    template<typename T>\n-    void func(member<T>*) {}\n-\n-    void test();\n-\n-    void test() { func<foo>(0); }\n-\n-  }\n-\n-}  // namespace cxx11\n-\n-#endif  // __cplusplus >= 201103L\n-\n-]])\n-\n-\n-dnl  Tests for new features in C++14\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n-\n-// If the compiler admits that it is not ready for C++14, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201402L\n-\n-#error \"This is not a C++14 compiler\"\n-\n-#else\n-\n-namespace cxx14\n-{\n-\n-  namespace test_polymorphic_lambdas\n-  {\n-\n-    int\n-    test()\n-    {\n-      const auto lambda = [](auto&&... args){\n-        const auto istiny = [](auto x){\n-          return (sizeof(x) == 1UL) ? 1 : 0;\n-        };\n-        const int aretiny[] = { istiny(args)... };\n-        return aretiny[0];\n-      };\n-      return lambda(1, 1L, 1.0f, '1');\n-    }\n-\n-  }\n-\n-  namespace test_binary_literals\n-  {\n-\n-    constexpr auto ivii = 0b0000000000101010;\n-    static_assert(ivii == 42, \"wrong value\");\n-\n-  }\n-\n-  namespace test_generalized_constexpr\n-  {\n-\n-    template < typename CharT >\n-    constexpr unsigned long\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      auto length = 0UL;\n-      for (auto p = s; *p; ++p)\n-        ++length;\n-      return length;\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"x\") == 1UL, \"\");\n-    static_assert(strlen_c(\"test\") == 4UL, \"\");\n-    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_lambda_init_capture\n-  {\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      const auto lambda1 = [a = x](int b){ return a + b; };\n-      const auto lambda2 = [a = lambda1(x)](){ return a; };\n-      return lambda2();\n-    }\n-\n-  }\n-\n-  namespace test_digit_seperators\n-  {\n-\n-    constexpr auto ten_million = 100'000'000;\n-    static_assert(ten_million == 100000000, \"\");\n-\n-  }\n-\n-  namespace test_return_type_deduction\n-  {\n-\n-    auto f(int& x) { return x; }\n-    decltype(auto) g(int& x) { return x; }\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static constexpr auto value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static constexpr auto value = true;\n-    };\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n-      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n-      return x;\n-    }\n-\n-  }\n-\n-}  // namespace cxx14\n-\n-#endif  // __cplusplus >= 201402L\n-\n-]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 223,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,223 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n-#\n-# DESCRIPTION\n-#\n-#   This macro checks if the compiler supports one of GCC's function\n-#   attributes; many other compilers also provide function attributes with\n-#   the same syntax. Compiler warnings are used to detect supported\n-#   attributes as unsupported ones are ignored by default so quieting\n-#   warnings when using this macro will yield false positives.\n-#\n-#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n-#\n-#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n-#\n-#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n-#   variable.\n-#\n-#   The macro currently supports the following function attributes:\n-#\n-#    alias\n-#    aligned\n-#    alloc_size\n-#    always_inline\n-#    artificial\n-#    cold\n-#    const\n-#    constructor\n-#    constructor_priority for constructor attribute with priority\n-#    deprecated\n-#    destructor\n-#    dllexport\n-#    dllimport\n-#    error\n-#    externally_visible\n-#    flatten\n-#    format\n-#    format_arg\n-#    gnu_inline\n-#    hot\n-#    ifunc\n-#    leaf\n-#    malloc\n-#    noclone\n-#    noinline\n-#    nonnull\n-#    noreturn\n-#    nothrow\n-#    optimize\n-#    pure\n-#    unused\n-#    used\n-#    visibility\n-#    warning\n-#    warn_unused_result\n-#    weak\n-#    weakref\n-#\n-#   Unsuppored function attributes will be tested with a prototype returning\n-#   an int and not accepting any arguments and the result of the check might\n-#   be wrong or meaningless so use with care.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 3\n-\n-AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n-    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n-\n-    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n-            m4_case([$1],\n-                [alias], [\n-                    int foo( void ) { return 0; }\n-                    int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [aligned], [\n-                    int foo( void ) __attribute__(($1(32)));\n-                ],\n-                [alloc_size], [\n-                    void *foo(int a) __attribute__(($1(1)));\n-                ],\n-                [always_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [artificial], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [cold], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [const], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [constructor_priority], [\n-                    int foo( void ) __attribute__((__constructor__(65535/2)));\n-                ],\n-                [constructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [deprecated], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [destructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [dllexport], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [dllimport], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [error], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [externally_visible], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [flatten], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [format], [\n-                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n-                ],\n-                [format_arg], [\n-                    char *foo(const char *p) __attribute__(($1(1)));\n-                ],\n-                [gnu_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [hot], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [ifunc], [\n-                    int my_foo( void ) { return 0; }\n-                    static int (*resolve_foo(void))(void) { return my_foo; }\n-                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n-                ],\n-                [leaf], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [malloc], [\n-                    void *foo( void ) __attribute__(($1));\n-                ],\n-                [noclone], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [noinline], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [nonnull], [\n-                    int foo(char *p) __attribute__(($1(1)));\n-                ],\n-                [noreturn], [\n-                    void foo( void ) __attribute__(($1));\n-                ],\n-                [nothrow], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [optimize], [\n-                    __attribute__(($1(3))) int foo( void ) { return 0; }\n-                ],\n-                [pure], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [unused], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [used], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [visibility], [\n-                    int foo_def( void ) __attribute__(($1(\"default\")));\n-                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                    int foo_int( void ) __attribute__(($1(\"internal\")));\n-                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n-                ],\n-                [warning], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [warn_unused_result], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weak], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weakref], [\n-                    static int foo( void ) { return 0; }\n-                    static int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [\n-                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n-                 int foo( void ) __attribute__(($1));\n-                ]\n-            )], [])\n-            ],\n-            dnl GCC doesn't exit with an error if an unknown attribute is\n-            dnl provided but only outputs a warning, so accept the attribute\n-            dnl only if no warning were issued.\n-            [AS_IF([test -s conftest.err],\n-                [AS_VAR_SET([ac_var], [no])],\n-                [AS_VAR_SET([ac_var], [yes])])],\n-            [AS_VAR_SET([ac_var], [no])])\n-    ])\n-\n-    AS_IF([test yes = AS_VAR_GET([ac_var])],\n-        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n-            [Define to 1 if the system has the `$1' function attribute])], [])\n-\n-    AS_VAR_POPDEF([ac_var])\n-])"
      },
      {
        "sha": "4c4051ea376f720faf21a4705c66604fe444c958",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 485,
        "changes": 485,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,485 +0,0 @@\n-# ===========================================================================\n-#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n-#\n-# DESCRIPTION\n-#\n-#   This macro figures out how to build C programs using POSIX threads. It\n-#   sets the PTHREAD_LIBS output variable to the threads library and linker\n-#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n-#   flags that are needed. (The user can also force certain compiler\n-#   flags/libs to be tested by setting these environment variables.)\n-#\n-#   Also sets PTHREAD_CC to any special C compiler that is needed for\n-#   multi-threaded programs (defaults to the value of CC otherwise). (This\n-#   is necessary on AIX to use the special cc_r compiler alias.)\n-#\n-#   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also to link with them as well. For example, you might link with\n-#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n-#\n-#   If you are only building threaded programs, you may wish to use these\n-#   variables in your default LIBS, CFLAGS, and CC:\n-#\n-#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n-#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-#     CC=\"$PTHREAD_CC\"\n-#\n-#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n-#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n-#\n-#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n-#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n-#   PTHREAD_CFLAGS.\n-#\n-#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n-#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n-#   is not found. If ACTION-IF-FOUND is not specified, the default action\n-#   will define HAVE_PTHREAD.\n-#\n-#   Please let the authors know if this macro fails on any platform, or if\n-#   you have any other suggestions or comments. This macro was based on work\n-#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n-#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n-#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n-#   grateful for the helpful feedback of numerous users.\n-#\n-#   Updated for Autoconf 2.68 by Daniel Richard G.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n-#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 23\n-\n-AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n-AC_DEFUN([AX_PTHREAD], [\n-AC_REQUIRE([AC_CANONICAL_HOST])\n-AC_REQUIRE([AC_PROG_CC])\n-AC_REQUIRE([AC_PROG_SED])\n-AC_LANG_PUSH([C])\n-ax_pthread_ok=no\n-\n-# We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on Tru64 or Sequent).\n-# It gets checked for in the link test anyway.\n-\n-# First of all, check if the user has set any of the PTHREAD_LIBS,\n-# etcetera environment variables, and if threads linking works using\n-# them:\n-if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n-        ax_pthread_save_CC=\"$CC\"\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n-        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = \"xno\"; then\n-                PTHREAD_LIBS=\"\"\n-                PTHREAD_CFLAGS=\"\"\n-        fi\n-        CC=\"$ax_pthread_save_CC\"\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-fi\n-\n-# We must check for the threads library under a number of different\n-# names; the ordering is very important because some systems\n-# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n-# libraries is broken (non-POSIX).\n-\n-# Create a list of thread flags to try.  Items starting with a \"-\" are\n-# C compiler flags, and other items are library names, except for \"none\"\n-# which indicates that we try without any flags at all, and \"pthread-config\"\n-# which is a program returning the flags for the Pth emulation library.\n-\n-ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n-\n-# The ordering *is* (sometimes) important.  Some notes on the\n-# individual items follow:\n-\n-# pthreads: AIX (must check this before -lpthread)\n-# none: in case threads are in libc; should be tried before -Kthread and\n-#       other compiler flags to prevent continual compiler warnings\n-# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n-#           (Note: HP C rejects this with \"bad form for `-t' option\")\n-# -pthreads: Solaris/gcc (Note: HP C also rejects)\n-# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads and\n-#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n-#      is present but should not be used directly; and before -mthreads,\n-#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n-# pthread: Linux, etcetera\n-# --thread-safe: KAI C++\n-# pthread-config: use pthread-config program (for GNU Pth library)\n-\n-case $host_os in\n-\n-        freebsd*)\n-\n-        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-\n-        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n-        ;;\n-\n-        hpux*)\n-\n-        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n-        # multi-threading and also sets -lpthread.\"\n-\n-        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n-        ;;\n-\n-        openedition*)\n-\n-        # IBM z/OS requires a feature-test macro to be defined in order to\n-        # enable POSIX threads at all, so give the user a hint if this is\n-        # not set. (We don't define these ourselves, as they can affect\n-        # other portions of the system API in unpredictable ways.)\n-\n-        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n-            [\n-#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n-             AX_PTHREAD_ZOS_MISSING\n-#            endif\n-            ],\n-            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n-        ;;\n-\n-        solaris*)\n-\n-        # On Solaris (at least, for some versions), libc contains stubbed\n-        # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed. (N.B.: The stubs are missing\n-        # pthread_cleanup_push, or rather a function called by this macro,\n-        # so we could check for that, but who knows whether they'll stub\n-        # that too in a future libc.)  So we'll check first for the\n-        # standard Solaris way of linking pthreads (-mt -lpthread).\n-\n-        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n-        ;;\n-esac\n-\n-# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n-\n-AS_IF([test \"x$GCC\" = \"xyes\"],\n-      [ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"])\n-\n-# The presence of a feature test macro requesting re-entrant function\n-# definitions is, on some systems, a strong hint that pthreads support is\n-# correctly enabled\n-\n-case $host_os in\n-        darwin* | hpux* | linux* | osf* | solaris*)\n-        ax_pthread_check_macro=\"_REENTRANT\"\n-        ;;\n-\n-        aix*)\n-        ax_pthread_check_macro=\"_THREAD_SAFE\"\n-        ;;\n-\n-        *)\n-        ax_pthread_check_macro=\"--\"\n-        ;;\n-esac\n-AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n-      [ax_pthread_check_cond=0],\n-      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n-\n-# Are we compiling with Clang?\n-\n-AC_CACHE_CHECK([whether $CC is Clang],\n-    [ax_cv_PTHREAD_CLANG],\n-    [ax_cv_PTHREAD_CLANG=no\n-     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n-     if test \"x$GCC\" = \"xyes\"; then\n-        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n-            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n-#            if defined(__clang__) && defined(__llvm__)\n-             AX_PTHREAD_CC_IS_CLANG\n-#            endif\n-            ],\n-            [ax_cv_PTHREAD_CLANG=yes])\n-     fi\n-    ])\n-ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n-\n-ax_pthread_clang_warning=no\n-\n-# Clang needs special handling, because older versions handle the -pthread\n-# option in a rather... idiosyncratic way\n-\n-if test \"x$ax_pthread_clang\" = \"xyes\"; then\n-\n-        # Clang takes -pthread; it has never supported any other flag\n-\n-        # (Note 1: This will need to be revisited if a system that Clang\n-        # supports has POSIX threads in a separate library.  This tends not\n-        # to be the way of modern systems, but it's conceivable.)\n-\n-        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n-        # to get POSIX threads support; the API is always present and\n-        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n-        # -pthread does define _REENTRANT, and while the Darwin headers\n-        # ignore this macro, third-party headers might not.)\n-\n-        PTHREAD_CFLAGS=\"-pthread\"\n-        PTHREAD_LIBS=\n-\n-        ax_pthread_ok=yes\n-\n-        # However, older versions of Clang make a point of warning the user\n-        # that, in an invocation where only linking and no compilation is\n-        # taking place, the -pthread option has no effect (\"argument unused\n-        # during compilation\").  They expect -pthread to be passed in only\n-        # when source code is being compiled.\n-        #\n-        # Problem is, this is at odds with the way Automake and most other\n-        # C build frameworks function, which is that the same flags used in\n-        # compilation (CFLAGS) are also used in linking.  Many systems\n-        # supported by AX_PTHREAD require exactly this for POSIX threads\n-        # support, and in fact it is often not straightforward to specify a\n-        # flag that is used only in the compilation phase and not in\n-        # linking.  Such a scenario is extremely rare in practice.\n-        #\n-        # Even though use of the -pthread flag in linking would only print\n-        # a warning, this can be a nuisance for well-run software projects\n-        # that build with -Werror.  So if the active version of Clang has\n-        # this misfeature, we search for an option to squash it.\n-\n-        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n-             # Create an alternate version of $ac_link that compiles and\n-             # links in two steps (.c -> .o, .o -> exe) instead of one\n-             # (.c -> exe), because the warning occurs only in the second\n-             # step\n-             ax_pthread_save_ac_link=\"$ac_link\"\n-             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n-             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n-             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n-             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n-                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n-                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n-                ac_link=\"$ax_pthread_save_ac_link\"\n-                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                    [ac_link=\"$ax_pthread_2step_ac_link\"\n-                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                         [break])\n-                    ])\n-             done\n-             ac_link=\"$ax_pthread_save_ac_link\"\n-             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n-             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n-            ])\n-\n-        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n-                no | unknown) ;;\n-                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n-        esac\n-\n-fi # $ax_pthread_clang = yes\n-\n-if test \"x$ax_pthread_ok\" = \"xno\"; then\n-for ax_pthread_try_flag in $ax_pthread_flags; do\n-\n-        case $ax_pthread_try_flag in\n-                none)\n-                AC_MSG_CHECKING([whether pthreads work without any flags])\n-                ;;\n-\n-                -mt,pthread)\n-                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])\n-                PTHREAD_CFLAGS=\"-mt\"\n-                PTHREAD_LIBS=\"-lpthread\"\n-                ;;\n-\n-                -*)\n-                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n-                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n-                ;;\n-\n-                pthread-config)\n-                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n-                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n-                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n-                ;;\n-\n-                *)\n-                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n-                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n-                ;;\n-        esac\n-\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Check for various functions.  We must include pthread.h,\n-        # since some functions may be macros.  (On the Sequent, we\n-        # need a special flag -Kthread to make this header compile.)\n-        # We check for pthread_join because it is in -lpthread on IRIX\n-        # while pthread_create is in libc.  We check for pthread_attr_init\n-        # due to DEC craziness with -lpthreads.  We check for\n-        # pthread_cleanup_push because it is one of the few pthread\n-        # functions on Solaris that doesn't have a non-functional libc stub.\n-        # We try pthread_create on general principles.\n-\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n-#                       if $ax_pthread_check_cond\n-#                        error \"$ax_pthread_check_macro must be defined\"\n-#                       endif\n-                        static void routine(void *a) { a = 0; }\n-                        static void *start_routine(void *a) { return a; }],\n-                       [pthread_t th; pthread_attr_t attr;\n-                        pthread_create(&th, 0, start_routine, 0);\n-                        pthread_join(th, 0);\n-                        pthread_attr_init(&attr);\n-                        pthread_cleanup_push(routine, 0);\n-                        pthread_cleanup_pop(0) /* ; */])],\n-            [ax_pthread_ok=yes],\n-            [])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n-\n-        PTHREAD_LIBS=\"\"\n-        PTHREAD_CFLAGS=\"\"\n-done\n-fi\n-\n-# Various other checks:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_CACHE_CHECK([for joinable pthread attribute],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n-             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n-                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n-                                [])\n-             done\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n-               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n-               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n-              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n-                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n-                                  [Define to necessary symbol if this constant\n-                                   uses a non-standard name on your system.])\n-               ax_pthread_joinable_attr_defined=yes\n-              ])\n-\n-        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n-             case $host_os in\n-             solaris*)\n-             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n-             ;;\n-             esac\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n-               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n-              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n-               ax_pthread_special_flags_added=yes])\n-\n-        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT],\n-            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                             [[int i = PTHREAD_PRIO_INHERIT;]])],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n-               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n-              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n-               ax_pthread_prio_inherit_defined=yes\n-              ])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != \"xyes\"; then\n-            case $host_os in\n-                aix*)\n-                AS_CASE([\"x/$CC\"],\n-                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                    [#handle absolute path differently from PATH based program lookup\n-                     AS_CASE([\"x$CC\"],\n-                         [x/*],\n-                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n-                ;;\n-            esac\n-        fi\n-fi\n-\n-test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n-\n-AC_SUBST([PTHREAD_LIBS])\n-AC_SUBST([PTHREAD_CFLAGS])\n-AC_SUBST([PTHREAD_CC])\n-\n-# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n-        :\n-else\n-        ax_pthread_ok=no\n-        $2\n-fi\n-AC_LANG_POP\n-])dnl AX_PTHREAD"
      },
      {
        "sha": "b9bf7bf46e54971d3f0f3b9353a707fce3ddb4a3",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,78 +0,0 @@\n-dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n-  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n-\n-  if test \"x$BDB_CFLAGS\" = \"x\"; then\n-    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-    BDB_CPPFLAGS=\n-    bdbpath=X\n-    bdb48path=X\n-    bdbdirlist=\n-    for _vn in 4.8 48 4 5 5.3 ''; do\n-      for _pfx in b lib ''; do\n-        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n-      done\n-    done\n-    for searchpath in $bdbdirlist ''; do\n-      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-          #error \"failed to find bdb 4.8+\"\n-        #endif\n-      ]])],[\n-        if test \"x$bdbpath\" = \"xX\"; then\n-          bdbpath=\"${searchpath}\"\n-        fi\n-      ],[\n-        continue\n-      ])\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-          #error \"failed to find bdb 4.8\"\n-        #endif\n-      ]])],[\n-        bdb48path=\"${searchpath}\"\n-        break\n-      ],[])\n-    done\n-    if test \"x$bdbpath\" = \"xX\"; then\n-      AC_MSG_RESULT([no])\n-      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    elif test \"x$bdb48path\" = \"xX\"; then\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-      ],[\n-        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-      ])\n-    else\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-      bdbpath=\"${bdb48path}\"\n-    fi\n-  else\n-    BDB_CPPFLAGS=${BDB_CFLAGS}\n-  fi\n-  AC_SUBST(BDB_CPPFLAGS)\n-  \n-  if test \"x$BDB_LIBS\" = \"x\"; then\n-    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-    for searchlib in db_cxx-4.8 db_cxx; do\n-      AC_CHECK_LIB([$searchlib],[main],[\n-        BDB_LIBS=\"-l${searchlib}\"\n-        break\n-      ])\n-    done\n-    if test \"x$BDB_LIBS\" = \"x\"; then\n-        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    fi\n-  fi\n-  AC_SUBST(BDB_LIBS)\n-])"
      },
      {
        "sha": "f83dba076fd132df578edfb1ec9f94715cb42317",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 513,
        "changes": 513,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,513 +0,0 @@\n-dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-\n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n-dnl Helper for finding the path of programs needed for Qt.\n-dnl Inputs: $1: Variable to be set\n-dnl Inputs: $2: List of programs to search for\n-dnl Inputs: $3: Look for $2 here before $PATH\n-dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n-dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    if test \"x$3\" != \"x\"; then\n-      AC_PATH_PROGS($1,$2,,$3)\n-    else\n-      AC_PATH_PROGS($1,$2)\n-    fi\n-    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n-dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n-dnl input variables are set correctly.\n-dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n-  dnl enable qt support\n-  AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n-    [\n-     bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n-     fi\n-    ],\n-    [bitcoin_qt_want_version=auto])\n-\n-  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n-  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n-  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-\n-  AC_ARG_WITH([qtdbus],\n-    [AS_HELP_STRING([--with-qtdbus],\n-    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-    [use_dbus=$withval],\n-    [use_dbus=auto])\n-\n-  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n-])\n-\n-dnl Find the appropriate version of Qt libraries and includes.\n-dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n-dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n-dnl         tried first.\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n-dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n-  use_pkgconfig=$1\n-\n-  if test x$use_pkgconfig = x; then\n-    use_pkgconfig=yes\n-  fi\n-\n-  if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n-  else\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n-  fi\n-\n-  dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n-  dnl assumed for windows builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n-  TEMP_CPPFLAGS=$CPPFLAGS\n-  TEMP_CXXFLAGS=$CXXFLAGS\n-  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-          [[#include <QtCore>]],[[\n-          #if QT_VERSION >= 0x050400\n-          choke;\n-          #endif\n-          ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n-      ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-      fi\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n-      if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test x$TARGET_OS = xdarwin; then\n-        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-      fi\n-    fi\n-  else\n-    if test x$TARGET_OS = xwindows; then\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n-    fi\n-  fi\n-  CPPFLAGS=$TEMP_CPPFLAGS\n-  CXXFLAGS=$TEMP_CXXFLAGS\n-  ])\n-\n-  if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n-      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-    fi\n-  fi\n-\n-  if test x$use_hardening != xno; then\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    TEMP_CXXFLAGS=$CXXFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n-      [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n-      ]])],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n-      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    CXXFLAGS=$TEMP_CXXFLAGS\n-    ])\n-  else\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n-      [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n-      ]])],\n-      [ AC_MSG_RESULT(no)],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    ])\n-  fi\n-\n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n-\n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n-  case $host in\n-    *darwin*)\n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-    ;;\n-    *mingw*)\n-       BITCOIN_QT_CHECK([\n-         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n-       ])\n-  esac\n-\n-\n-  dnl enable qt support\n-  AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n-    if test x$have_qt_test = xno; then\n-      bitcoin_enable_qt_test=no\n-    fi\n-    bitcoin_enable_qt_dbus=no\n-    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n-    fi\n-    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n-    fi\n-    if test x$LUPDATE = x; then\n-      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n-    fi\n-  ],[\n-    bitcoin_enable_qt=no\n-  ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n-\n-  AC_SUBST(QT_PIE_FLAGS)\n-  AC_SUBST(QT_INCLUDES)\n-  AC_SUBST(QT_LIBS)\n-  AC_SUBST(QT_LDFLAGS)\n-  AC_SUBST(QT_DBUS_INCLUDES)\n-  AC_SUBST(QT_DBUS_LIBS)\n-  AC_SUBST(QT_TEST_INCLUDES)\n-  AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n-  AC_SUBST(MOC_DEFS)\n-])\n-\n-dnl All macros below are internal and should _not_ be used from the main\n-dnl configure.ac.\n-dnl ----\n-\n-dnl Internal. Check if the included version of Qt is Qt5.\n-dnl Requires: INCLUDES must be populated as necessary.\n-dnl Output: bitcoin_cv_qt5=yes|no\n-AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n-  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if QT_VERSION < 0x050000\n-      choke me\n-      #else\n-      return 0;\n-      #endif\n-    ]])],\n-    [bitcoin_cv_qt5=yes],\n-    [bitcoin_cv_qt5=no])\n-])])\n-\n-dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n-dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if defined(QT_STATIC)\n-      return 0;\n-      #else\n-      choke me\n-      #endif\n-    ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n-  ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n-    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n-  fi\n-])\n-\n-dnl Internal. Check if the link-requirements for static plugins are met.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n-dnl Inputs: $2: The libraries that resolve $1.\n-dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n-  AC_MSG_CHECKING(for static Qt plugins: $2)\n-  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-    #define QT_STATICPLUGIN\n-    #include <QtPlugin>\n-    $1]],\n-    [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n-  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n-])\n-\n-dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n-dnl Inputs: qt_plugin_path. optional.\n-dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-        if test -d \"$qt_plugin_path/accessible\"; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n-      fi\n-     if test x$use_pkgconfig = xyes; then\n-     : dnl\n-     m4_ifdef([PKG_CHECK_MODULES],[\n-       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test x$TARGET_OS = xlinux; then\n-         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n-         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n-           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-         fi\n-       elif test x$TARGET_OS = xdarwin; then\n-         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n-       fi\n-     ])\n-     else\n-       if test x$TARGET_OS = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-             [[#include <QtCore>]],[[\n-             #if QT_VERSION < 0x050600\n-             choke;\n-             #endif\n-             ]])],\n-           [bitcoin_cv_need_platformsupport=yes],\n-           [bitcoin_cv_need_platformsupport=no])\n-         ])\n-         if test x$bitcoin_cv_need_platformsupport = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n-         fi\n-       fi\n-     fi\n-  else\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-    fi\n-  fi\n-])\n-\n-dnl Internal. Find Qt libraries using pkg-config.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n-dnl         first.\n-dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n-dnl         first.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n-  m4_ifdef([PKG_CHECK_MODULES],[\n-  auto_priority_version=$1\n-  if test x$auto_priority_version = x; then\n-    auto_priority_version=qt5\n-  fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n-    qt4_modules=\"QtCore QtGui QtNetwork\"\n-    BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-        PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n-        PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes], [have_qt=no])\n-      fi\n-\n-      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = xqt5; then\n-          PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n-        else\n-          PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n-        fi\n-      fi\n-      if test x$have_qt != xyes; then\n-        have_qt=no\n-        BITCOIN_QT_FAIL([Qt dependencies not found])\n-      fi\n-    ])\n-    BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-      if test x$use_dbus != xno; then\n-        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-      fi\n-    ])\n-  ])\n-  true; dnl\n-])\n-\n-dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n-dnl from the discovered headers.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n-dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  TEMP_LIBS=\"$LIBS\"\n-  BITCOIN_QT_CHECK([\n-    if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n-\n-  BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n-      _BITCOIN_QT_CHECK_QT5\n-    fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      LIBS=\"$LIBS -L$qt_lib_path\"\n-    fi\n-\n-    if test x$TARGET_OS = xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n-  fi\n-  QT_LIBS=\"$LIBS\"\n-  LIBS=\"$TEMP_LIBS\"\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      LIBS=\"-L$qt_lib_path\"\n-    fi\n-    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n-    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-    QT_TEST_LIBS=\"$LIBS\"\n-    if test x$use_dbus != xno; then\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-    fi\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-  LIBS=\"$TEMP_LIBS\"\n-])\n-"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,18 +0,0 @@\n-dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n-dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n-  if test \"x$2\" = \"x\"; then\n-    AC_MSG_RESULT([default])\n-  else\n-    echo \"#include <$2$3.h>\" >conftest.cpp\n-    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n-    AC_MSG_RESULT([${newinclpath}])\n-    if test \"x${newinclpath}\" != \"x\"; then\n-      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n-    fi\n-  fi\n-])"
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,46 +0,0 @@\n-dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n-dnl Copying and distribution of this file, with or without modification, are\n-dnl permitted in any medium without royalty provided the copyright notice\n-dnl and this notice are preserved. This file is offered as-is, without any\n-dnl warranty.\n-\n-# Some versions of gcc/libstdc++ require linking with -latomic if\n-# using the C++ atomic library.\n-#\n-# Sourced from http://bugs.debian.org/797228\n-\n-m4_define([_CHECK_ATOMIC_testbody], [[\n-  #include <atomic>\n-  #include <cstdint>\n-\n-  int main() {\n-    std::atomic<int64_t> a{};\n-\n-    int64_t v = 5;\n-    int64_t r = a.fetch_add(v);\n-    return static_cast<int>(r);\n-  }\n-]])\n-\n-AC_DEFUN([CHECK_ATOMIC], [\n-\n-  AC_LANG_PUSH(C++)\n-\n-  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n-\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-      AC_MSG_RESULT([yes])\n-    ],[\n-      AC_MSG_RESULT([no])\n-      LIBS=\"$LIBS -latomic\"\n-      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n-      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-          AC_MSG_RESULT([yes])\n-        ],[\n-          AC_MSG_RESULT([no])\n-          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n-        ])\n-    ])\n-\n-  AC_LANG_POP\n-])"
      },
      {
        "sha": "f7de4c9f9a35d2d40ea5871a1b8f366333067dc1",
        "filename": "configure.ac",
        "status": "removed",
        "additions": 0,
        "deletions": 1342,
        "changes": 1342,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,1342 +0,0 @@\n-dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n-AC_PREREQ([2.60])\n-define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 15)\n-define(_CLIENT_VERSION_REVISION, 99)\n-define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2017)\n-define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n-AC_CONFIG_SRCDIR([src/validation.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n-AC_CONFIG_AUX_DIR([build-aux])\n-AC_CONFIG_MACRO_DIR([build-aux/m4])\n-\n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n-\n-dnl Unless the user specified ARFLAGS, force it to be cr\n-AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n-if test \"x${ARFLAGS+set}\" != \"xset\"; then\n-  ARFLAGS=\"cr\"\n-fi\n-\n-AC_CANONICAL_HOST\n-\n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n-\n-dnl faketime breaks configure and is only needed for make. Disable it here.\n-unset FAKETIME\n-\n-dnl Automake init set-up and checks\n-AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n-\n-dnl faketime messes with timestamps and causes configure to be re-run.\n-dnl --disable-maintainer-mode can be used to bypass this.\n-AM_MAINTAINER_MODE([enable])\n-\n-dnl make the compilation flags quiet unless V=1 is used\n-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n-\n-dnl Compiler checks (here before libtool).\n-if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n-  CXXFLAGS_overridden=yes\n-else\n-  CXXFLAGS_overridden=no\n-fi\n-AC_PROG_CXX\n-\n-dnl By default, libtool for mingw refuses to link static libs into a dll for\n-dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n-dnl we have those under control, re-enable that functionality.\n-case $host in\n-  *mingw*)\n-     lt_cv_deplibs_check_method=\"pass_all\"\n-  ;;\n-esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n-dnl Check if -latomic is required for <std::atomic>\n-CHECK_ATOMIC\n-\n-dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n-dnl that we get the same -std flags for both.\n-m4_ifdef([AC_PROG_OBJCXX],[\n-if test \"x${OBJCXX+set}\" = \"x\"; then\n-  OBJCXX=\"${CXX}\"\n-fi\n-AC_PROG_OBJCXX\n-])\n-\n-dnl Libtool init checks.\n-LT_INIT([pic-only])\n-\n-dnl Check/return PATH for base programs.\n-AC_PATH_TOOL(AR, ar)\n-AC_PATH_TOOL(RANLIB, ranlib)\n-AC_PATH_TOOL(STRIP, strip)\n-AC_PATH_TOOL(GCOV, gcov)\n-AC_PATH_PROG(LCOV, lcov)\n-dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)\n-AC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\n-AC_PATH_PROG(GENHTML, genhtml)\n-AC_PATH_PROG([GIT], [git])\n-AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROG(XGETTEXT,xgettext)\n-AC_PATH_PROG(HEXDUMP,hexdump)\n-AC_PATH_TOOL(READELF, readelf)\n-AC_PATH_TOOL(CPPFILT, c++filt)\n-AC_PATH_TOOL(OBJCOPY, objcopy)\n-\n-AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n-\n-# Enable wallet\n-AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--disable-wallet],\n-  [disable wallet (enabled by default)])],\n-  [enable_wallet=$enableval],\n-  [enable_wallet=yes])\n-\n-AC_ARG_WITH([miniupnpc],\n-  [AS_HELP_STRING([--with-miniupnpc],\n-  [enable UPNP (default is yes if libminiupnpc is found)])],\n-  [use_upnp=$withval],\n-  [use_upnp=auto])\n-\n-AC_ARG_ENABLE([upnp-default],\n-  [AS_HELP_STRING([--enable-upnp-default],\n-  [if UPNP is enabled, turn it on at startup (default is no)])],\n-  [use_upnp_default=$enableval],\n-  [use_upnp_default=no])\n-\n-AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n-    [use_tests=$enableval],\n-    [use_tests=yes])\n-\n-AC_ARG_ENABLE(gui-tests,\n-    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n-    [use_gui_tests=$enableval],\n-    [use_gui_tests=$use_tests])\n-\n-AC_ARG_ENABLE(bench,\n-    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n-    [use_bench=$enableval],\n-    [use_bench=yes])\n-\n-AC_ARG_ENABLE([extended-functional-tests],\n-    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n-    [use_extended_functional_tests=$enableval],\n-    [use_extended_functional_tests=no])\n-\n-AC_ARG_WITH([qrencode],\n-  [AS_HELP_STRING([--with-qrencode],\n-  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n-  [use_qr=$withval],\n-  [use_qr=auto])\n-\n-AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--disable-hardening],\n-  [do not attempt to harden the resulting executables (default is to harden)])],\n-  [use_hardening=$enableval],\n-  [use_hardening=yes])\n-\n-AC_ARG_ENABLE([reduce-exports],\n-  [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n-  [use_reduce_exports=$enableval],\n-  [use_reduce_exports=no])\n-\n-AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--disable-ccache],\n-  [do not use ccache for building (default is to use if found)])],\n-  [use_ccache=$enableval],\n-  [use_ccache=auto])\n-\n-AC_ARG_ENABLE([lcov],\n-  [AS_HELP_STRING([--enable-lcov],\n-  [enable lcov testing (default is no)])],\n-  [use_lcov=$enableval],\n-  [use_lcov=no])\n-  \n-AC_ARG_ENABLE([lcov-branch-coverage],\n-  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n-  [enable lcov testing branch coverage (default is no)])],\n-  [use_lcov_branch=yes],\n-  [use_lcov_branch=no])\n-\n-AC_ARG_ENABLE([glibc-back-compat],\n-  [AS_HELP_STRING([--enable-glibc-back-compat],\n-  [enable backwards compatibility with glibc])],\n-  [use_glibc_compat=$enableval],\n-  [use_glibc_compat=no])\n-\n-AC_ARG_ENABLE([asm],\n-  [AS_HELP_STRING([--enable-asm],\n-  [Enable assembly routines (default is yes)])],\n-  [use_asm=$enableval],\n-  [use_asm=yes])\n-\n-if test \"x$use_asm\" = xyes; then\n-  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n-fi\n-\n-AC_ARG_WITH([system-univalue],\n-  [AS_HELP_STRING([--with-system-univalue],\n-  [Build with system UniValue (default is no)])],\n-  [system_univalue=$withval],\n-  [system_univalue=no]\n-)\n-AC_ARG_ENABLE([zmq],\n-  [AS_HELP_STRING([--disable-zmq],\n-  [disable ZMQ notifications])],\n-  [use_zmq=$enableval],\n-  [use_zmq=yes])\n-\n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n-\n-AC_ARG_ENABLE(man,\n-    [AS_HELP_STRING([--disable-man],\n-                    [do not install man pages (default is to install)])],,\n-    enable_man=yes)\n-AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n-\n-# Enable debug\n-AC_ARG_ENABLE([debug],\n-    [AS_HELP_STRING([--enable-debug],\n-                    [use debug compiler flags and macros (default is no)])],\n-    [enable_debug=$enableval],\n-    [enable_debug=no])\n-\n-# Turn warnings into errors\n-AC_ARG_ENABLE([werror],\n-    [AS_HELP_STRING([--enable-werror],\n-                    [Treat certain compiler warnings as errors (default is no)])],\n-    [enable_werror=$enableval],\n-    [enable_werror=no])\n-\n-AC_LANG_PUSH([C++])\n-AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n-\n-if test \"x$enable_debug\" = xyes; then\n-    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n-    if test \"x$GCC\" = xyes; then\n-        CFLAGS=\"$CFLAGS -g3 -O0\"\n-    fi\n-\n-    if test \"x$GXX\" = xyes; then\n-        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n-    fi\n-fi\n-\n-ERROR_CXXFLAGS=\n-if test \"x$enable_werror\" = \"xyes\"; then\n-  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n-    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n-  fi\n-  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wvla],[CXXFLAGS=\"$CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[CXXFLAGS=\"$CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n-\n-  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n-  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n-  ## set the -Wno-foo case if it works.\n-  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[CXXFLAGS=\"$CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n-# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n-# compatibility.\n-AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n-AC_MSG_CHECKING(for assembler crc32 support)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #if defined(_MSC_VER)\n-    #include <intrin.h>\n-    #elif defined(__GNUC__) && defined(__SSE4_2__)\n-    #include <nmmintrin.h>\n-    #endif\n-  ]],[[\n-    uint64_t l = 0;\n-    l = _mm_crc32_u8(l, 0);\n-    l = _mm_crc32_u32(l, 0);\n-    l = _mm_crc32_u64(l, 0);\n-    return l;\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n-\n-AC_ARG_WITH([utils],\n-  [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n-\n-AC_ARG_WITH([libs],\n-  [AS_HELP_STRING([--with-libs],\n-  [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n-\n-AC_ARG_WITH([daemon],\n-  [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n-\n-use_pkgconfig=yes\n-case $host in\n-  *mingw*)\n-\n-     #pkgconfig does more harm than good with MinGW\n-     use_pkgconfig=no\n-\n-     TARGET_OS=windows\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n-\n-     # -static is interpreted by libtool, where it has a different meaning.\n-     # In libtool-speak, it's -all-static.\n-     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n-\n-     AC_PATH_PROG([MAKENSIS], [makensis], none)\n-     if test x$MAKENSIS = xnone; then\n-       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n-     fi\n-\n-     AC_PATH_TOOL(WINDRES, windres, none)\n-     if test x$WINDRES = xnone; then\n-       AC_MSG_ERROR(\"windres not found\")\n-     fi\n-\n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n-     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n-     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-       CXXFLAGS=\"$CXXFLAGS -w\"\n-     fi\n-     case $host in\n-       i?86-*) WINDOWS_BITS=32 ;;\n-       x86_64-*) WINDOWS_BITS=64 ;;\n-       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n-     esac\n-     AC_SUBST(WINDOWS_BITS)\n-\n-     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n-     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n-     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n-     dnl also overridden to prevent their insertion later.\n-     dnl This should only affect dll's.\n-     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n-     postdeps_CXX=\n-\n-     ;;\n-  *darwin*)\n-     TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n-     if  test x$cross_compiling != xyes; then\n-       BUILD_OS=darwin\n-       AC_CHECK_PROG([PORT],port, port)\n-       if test x$PORT = xport; then\n-         dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n-         LIBS=\"$LIBS -L/opt/local/lib\"\n-         if test -d /opt/local/include/db48; then\n-           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\n-           LIBS=\"$LIBS -L/opt/local/lib/db48\"\n-         fi\n-       fi\n-\n-       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-       AC_CHECK_PROG([BREW],brew, brew)\n-       if test x$BREW = xbrew; then\n-         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n-         dnl in expected paths because they may conflict with system files. Ask\n-         dnl Homebrew where each one is located, then adjust paths accordingly.\n-         dnl It's safe to add these paths even if the functionality is disabled by\n-         dnl the user (--without-wallet or --without-gui for example).\n-\n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n-         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n-         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n-         if test x$openssl_prefix != x; then\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-         if test x$bdb_prefix != x; then\n-           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n-           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n-         fi\n-         if test x$qt5_prefix != x; then\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-       fi\n-     else\n-       case $build_os in\n-         *darwin*)\n-           BUILD_OS=darwin\n-           ;;\n-         *)\n-           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n-           AC_PATH_TOOL([OTOOL], [otool], otool)\n-           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n-           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n-           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n-\n-           dnl libtool will try to strip the static lib, which is a problem for\n-           dnl cross-builds because strip attempts to call a hard-coded ld,\n-           dnl which may not exist in the path. Stripping the .a is not\n-           dnl necessary, so just disable it.\n-           old_striplib=\n-           ;;\n-       esac\n-     fi\n-\n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n-     OBJCXXFLAGS=\"$CXXFLAGS\"\n-     ;;\n-   *linux*)\n-     TARGET_OS=linux\n-     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n-     ;;\n-   *freebsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_FREEBSD\"\n-     ;;\n-   *openbsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_OPENBSD\"\n-     ;;\n-   *)\n-     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n-     AC_MSG_WARN([Guessing LevelDB OS as OS_${OTHER_OS}, please check whether this is correct, if not add an entry to configure.ac.])\n-     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n-     ;;\n-esac\n-\n-if test x$use_pkgconfig = xyes; then\n-  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])\n-  m4_ifdef([PKG_PROG_PKG_CONFIG], [\n-  PKG_PROG_PKG_CONFIG\n-  if test x\"$PKG_CONFIG\" = \"x\"; then\n-    AC_MSG_ERROR(pkg-config not found.)\n-  fi\n-  ])\n-fi\n-\n-if test x$use_extended_functional_tests != xno; then\n-  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n-fi\n-\n-if test x$use_lcov = xyes; then\n-  if test x$LCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n-  fi\n-  if test x$GCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n-  fi\n-  if test x$PYTHON = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n-  fi\n-  if test x$GENHTML = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n-  fi\n-  LCOV=\"$LCOV --gcov-tool=$GCOV\"\n-  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n-  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n-  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])\n-  CXXFLAGS=\"$CXXFLAGS -Og\"\n-fi\n-\n-if test x$use_lcov_branch != xno; then\n-  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n-fi\n-\n-dnl Check for endianness\n-AC_C_BIGENDIAN\n-\n-dnl Check for pthread compile/link requirements\n-AX_PTHREAD\n-\n-# The following macro will add the necessary defines to bitcoin-config.h, but\n-# they also need to be passed down to any subprojects. Pull the results out of\n-# the cache and add them to CPPFLAGS.\n-AC_SYS_LARGEFILE\n-# detect POSIX or GNU variant of strerror_r\n-AC_FUNC_STRERROR_R\n-\n-if test x$ac_cv_sys_file_offset_bits != x &&\n-   test x$ac_cv_sys_file_offset_bits != xno &&\n-   test x$ac_cv_sys_file_offset_bits != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n-fi\n-\n-if test x$ac_cv_sys_large_files != x &&\n-   test x$ac_cv_sys_large_files != xno &&\n-   test x$ac_cv_sys_large_files != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n-fi\n-\n-AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n-\n-AX_GCC_FUNC_ATTRIBUTE([visibility])\n-AX_GCC_FUNC_ATTRIBUTE([dllexport])\n-AX_GCC_FUNC_ATTRIBUTE([dllimport])\n-\n-if test x$use_glibc_compat != xno; then\n-\n-  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n-  #in anyway for back-compat.\n-  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n-\n-  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n-  # See which one is present here.\n-  AC_MSG_CHECKING(__fdelt_chk type)\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n-                    #undef _FORTIFY_SOURCE\n-                  #endif\n-                  #define _FORTIFY_SOURCE 2\n-                  #include <sys/select.h>\n-     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n-    [ fdelt_type=\"long unsigned int\"],\n-    [ fdelt_type=\"long int\"])\n-  AC_MSG_RESULT($fdelt_type)\n-  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n-else\n-  AC_SEARCH_LIBS([clock_gettime],[rt])\n-fi\n-\n-if test x$TARGET_OS != xwindows; then\n-  # All windows code is PIC, forcing it on just adds useless compile warnings\n-  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n-fi\n-\n-if test x$use_hardening != xno; then\n-  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n-  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n-\n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n-    ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n-\n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n-\n-  if test x$TARGET_OS != xwindows; then\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n-    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n-  fi\n-\n-  case $host in\n-    *mingw*)\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n-    ;;\n-  esac\n-fi\n-\n-dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n-if test x$TARGET_OS = xdarwin; then\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n-fi\n-\n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n-\n-AC_CHECK_DECLS([strnlen])\n-\n-# Check for daemon(3), unrelated to --with-daemon (although used by it)\n-AC_CHECK_DECLS([daemon])\n-\n-AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n-\t\t[#if HAVE_ENDIAN_H\n-                 #include <endian.h>\n-                 #elif HAVE_SYS_ENDIAN_H\n-                 #include <sys/endian.h>\n-                 #endif])\n-\n-AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n-\t\t[#if HAVE_BYTESWAP_H\n-                 #include <byteswap.h>\n-                 #endif])\n-\n-AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n-\n-dnl Check for MSG_NOSIGNAL\n-AC_MSG_CHECKING(for MSG_NOSIGNAL)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n- [[ int f = MSG_NOSIGNAL; ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for MSG_DONTWAIT\n-AC_MSG_CHECKING(for MSG_DONTWAIT)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n- [[ int f = MSG_DONTWAIT; ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_DONTWAIT, 1,[Define this symbol if you have MSG_DONTWAIT]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n-AC_MSG_CHECKING(for getmemoryinfo)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ int f = malloc_info(0, NULL); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n-AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ mallopt(M_ARENA_MAX, 1); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING([for visibility attribute])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\n-  int main(){}\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n-    fi\n-  ]\n-)\n-\n-TEMP_LDFLAGS=\"$LDFLAGS\"\n-LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n-AC_MSG_CHECKING([for thread_local support])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  #include <thread>\n-  static thread_local int foo = 0;\n-  static void run_thread() { foo++;}\n-  int main(){\n-  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n-  return foo;\n-  }\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-  ]\n-)\n-LDFLAGS=\"$TEMP_LDFLAGS\"\n-\n-# Check for different ways of gathering OS randomness\n-AC_MSG_CHECKING(for Linux getrandom syscall)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n-  #include <sys/syscall.h>\n-  #include <linux/random.h>]],\n- [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy via random.h)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n- #include <sys/random.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for sysctl KERN_ARND)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n-  #include <sys/sysctl.h>]],\n- [[ static const int name[2] = {CTL_KERN, KERN_ARND};\n-    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-# Check for reduced exports\n-if test x$use_reduce_exports = xyes; then\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n-fi\n-\n-LEVELDB_CPPFLAGS=\n-LIBLEVELDB=\n-LIBMEMENV=\n-AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n-AC_SUBST(LEVELDB_CPPFLAGS)\n-AC_SUBST(LIBLEVELDB)\n-AC_SUBST(LIBMEMENV)\n-\n-if test x$enable_wallet != xno; then\n-    dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n-fi\n-\n-dnl Check for libminiupnpc (optional)\n-if test x$use_upnp != xno; then\n-  AC_CHECK_HEADERS(\n-    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n-    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n-    [have_miniupnpc=no]\n-  )\n-fi\n-\n-BITCOIN_QT_INIT\n-\n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n-\n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n-    use_boost=no\n-else\n-    use_boost=yes\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-dnl Minimum required Boost version\n-define(MINIMUM_REQUIRED_BOOST, 1.47.0)\n-\n-dnl Check for boost libs\n-AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n-if test x$want_boost = xno; then\n-    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n-fi\n-AX_BOOST_SYSTEM\n-AX_BOOST_FILESYSTEM\n-AX_BOOST_PROGRAM_OPTIONS\n-AX_BOOST_THREAD\n-AX_BOOST_CHRONO\n-\n-dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n-dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n-m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n-BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n-\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_CHECKING([for working boost reduced exports])\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n-      @%:@include <boost/version.hpp>\n-    ]], [[\n-      #if BOOST_VERSION >= 104900\n-      // Everything is okay\n-      #else\n-      #  error Boost version is too old\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT(yes)\n-    ],[\n-    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-fi\n-\n-if test x$use_reduce_exports = xyes; then\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n-fi\n-\n-if test x$use_tests = xyes; then\n-\n-  if test x$HEXDUMP = x; then\n-    AC_MSG_ERROR(hexdump is required for tests)\n-  fi\n-\n-\n-  if test x$use_boost = xyes; then\n-\n-  AX_BOOST_UNIT_TEST_FRAMEWORK\n-\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n-  AC_MSG_CHECKING([for dynamic linked boost test])\n-  TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-       #define BOOST_TEST_DYN_LINK\n-       #define BOOST_TEST_MAIN\n-        #include <boost/test/unit_test.hpp>\n-\n-       ])],\n-    [AC_MSG_RESULT(yes)]\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n-    [AC_MSG_RESULT(no)])\n-  LIBS=\"$TEMP_LIBS\"\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-  fi\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n-\n-\n-dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n-dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n-dnl the abi. This was fixed in 1.57.\n-\n-dnl When building against that installed version using c++11, the headers pick up\n-dnl on the native c++11 scoped enum support and enable it, however it will fail to\n-dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n-dnl fail.\n-dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n-\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/config.hpp>\n-  #include <boost/version.hpp>\n-  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n-  #define BOOST_NO_SCOPED_ENUMS\n-  #define BOOST_NO_CXX11_SCOPED_ENUMS\n-  #define CHECK\n-  #endif\n-  #include <boost/filesystem.hpp>\n-  ]],[[\n-  #if defined(CHECK)\n-    boost::filesystem::copy_file(\"foo\", \"bar\");\n-  #else\n-    choke;\n-  #endif\n-  ]])],\n-  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n-dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n-dnl a working version is available, else fall back to sleep. sleep was removed\n-dnl after 1.56.\n-dnl If neither is available, abort.\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/thread/thread.hpp>\n-  #include <boost/version.hpp>\n-  ]],[[\n-  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n-      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes;\n-     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-if test x$boost_sleep != xyes; then\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/version.hpp>\n-  #include <boost/thread.hpp>\n-  #include <boost/date_time/posix_time/posix_time_types.hpp>\n-  ]],[[\n-  #if BOOST_VERSION <= 105600\n-      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-\n-if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found.)\n-fi\n-\n-fi\n-\n-if test x$use_pkgconfig = xyes; then\n-  : dnl\n-  m4_ifdef(\n-    [PKG_CHECK_MODULES],\n-    [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n-      if test x$use_qr != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n-      fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n-        if test x$TARGET_OS != xwindows; then\n-          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n-        fi\n-      fi\n-\n-      if test \"x$use_zmq\" = \"xyes\"; then\n-        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n-          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n-           use_zmq=no])\n-      else\n-          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-      fi\n-    ]\n-  )\n-else\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n-\n-  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n-  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n-\n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n-    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n-    if test x$TARGET_OS != xwindows; then\n-      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n-    fi\n-  fi\n-\n-  if test \"x$use_zmq\" = \"xyes\"; then\n-     AC_CHECK_HEADER([zmq.h],\n-       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n-        use_zmq=no\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n-     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n-       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n-        use_zmq=no\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n-  else\n-    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-  fi\n-\n-  if test \"x$use_zmq\" = \"xyes\"; then\n-    dnl Assume libzmq was built for static linking\n-    case $host in\n-      *mingw*)\n-        ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n-      ;;\n-    esac\n-  fi\n-\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n-  if test x$use_qr != xno; then\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n-  fi\n-fi\n-\n-save_CXXFLAGS=\"${CXXFLAGS}\"\n-CXXFLAGS=\"${CXXFLAGS} ${CRYPTO_CFLAGS} ${SSL_CFLAGS}\"\n-AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT\n-#include <openssl/x509_vfy.h>\n-])\n-CXXFLAGS=\"${save_CXXFLAGS}\"\n-\n-dnl univalue check\n-\n-need_bundled_univalue=yes\n-\n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n-  need_bundled_univalue=no\n-else\n-\n-if test x$system_univalue != xno ; then\n-  found_univalue=no\n-  if test x$use_pkgconfig = xyes; then\n-    : #NOP\n-    m4_ifdef(\n-      [PKG_CHECK_MODULES],\n-      [\n-        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n-      ]\n-    )\n-  else\n-    AC_CHECK_HEADER([univalue.h],[\n-      AC_CHECK_LIB([univalue],  [main],[\n-        UNIVALUE_LIBS=-lunivalue\n-        found_univalue=yes\n-      ],[true])\n-    ],[true])\n-  fi\n-\n-  if test x$found_univalue = xyes ; then\n-    system_univalue=yes\n-    need_bundled_univalue=no\n-  elif test x$system_univalue = xyes ; then\n-    AC_MSG_ERROR([univalue not found])\n-  else\n-    system_univalue=no\n-  fi\n-fi\n-\n-if test x$need_bundled_univalue = xyes ; then\n-  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n-  UNIVALUE_LIBS='univalue/libunivalue.la'\n-fi\n-\n-fi\n-\n-AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n-AC_SUBST(UNIVALUE_CFLAGS)\n-AC_SUBST(UNIVALUE_LIBS)\n-\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n-\n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n-\n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n-\n-AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n-  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n-fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n-\n-AC_LANG_POP\n-\n-if test \"x$use_ccache\" != \"xno\"; then\n-  AC_MSG_CHECKING(if ccache should be used)\n-  if test x$CCACHE = x; then\n-    if test \"x$use_ccache\" = \"xyes\"; then\n-      AC_MSG_ERROR([ccache not found.]);\n-    else\n-      use_ccache=no\n-    fi\n-  else\n-    use_ccache=yes\n-    CC=\"$ac_cv_path_CCACHE $CC\"\n-    CXX=\"$ac_cv_path_CCACHE $CXX\"\n-  fi\n-  AC_MSG_RESULT($use_ccache)\n-fi\n-if test \"x$use_ccache\" = \"xyes\"; then\n-    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\n-fi\n-\n-dnl enable wallet\n-AC_MSG_CHECKING([if wallet should be enabled])\n-if test x$enable_wallet != xno; then\n-  AC_MSG_RESULT(yes)\n-  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n-\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-\n-dnl enable upnp support\n-AC_MSG_CHECKING([whether to build with support for UPnP])\n-if test x$have_miniupnpc = xno; then\n-  if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n-  fi\n-  AC_MSG_RESULT(no)\n-else\n-  if test x$use_upnp != xno; then\n-    AC_MSG_RESULT(yes)\n-    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n-    use_upnp=yes\n-    upnp_setting=0\n-    if test x$use_upnp_default != xno; then\n-      use_upnp_default=yes\n-      upnp_setting=1\n-    fi\n-    AC_MSG_RESULT($use_upnp_default)\n-    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n-    if test x$TARGET_OS = xwindows; then\n-      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n-    fi\n-  else\n-    AC_MSG_RESULT(no)\n-  fi\n-fi\n-\n-dnl these are only used when qt is enabled\n-BUILD_TEST_QT=\"\"\n-if test x$bitcoin_enable_qt != xno; then\n-  dnl enable dbus support\n-  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n-    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n-\n-  dnl enable qr support\n-  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n-  if test x$have_qrencode = xno; then\n-    if test x$use_qr = xyes; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n-    fi\n-    AC_MSG_RESULT(no)\n-  else\n-    if test x$use_qr != xno; then\n-      AC_MSG_RESULT(yes)\n-      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n-      use_qr=yes\n-    else\n-      AC_MSG_RESULT(no)\n-    fi\n-  fi\n-\n-  if test x$XGETTEXT = x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-\n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n-    AC_MSG_RESULT([yes])\n-    BUILD_TEST_QT=\"yes\"\n-  else\n-    AC_MSG_RESULT([no])\n-  fi\n-fi\n-\n-AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n-\n-AC_MSG_CHECKING([whether to build test_bitcoin])\n-if test x$use_tests = xyes; then\n-  AC_MSG_RESULT([yes])\n-  BUILD_TEST=\"yes\"\n-else\n-  AC_MSG_RESULT([no])\n-  BUILD_TEST=\"\"\n-fi\n-\n-AC_MSG_CHECKING([whether to reduce exports])\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_RESULT([yes])\n-else\n-  AC_MSG_RESULT([no])\n-fi\n-\n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n-fi\n-\n-AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n-AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n-AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n-AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n-AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n-AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n-AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n-AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n-AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n-AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n-\n-AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n-AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n-AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n-AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n-AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n-AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n-AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n-define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n-AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n-AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n-AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n-AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n-AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n-AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n-AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n-AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n-AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n-AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-AC_SUBST(BITCOIN_DAEMON_NAME)\n-AC_SUBST(BITCOIN_GUI_NAME)\n-AC_SUBST(BITCOIN_CLI_NAME)\n-AC_SUBST(BITCOIN_TX_NAME)\n-\n-AC_SUBST(RELDFLAGS)\n-AC_SUBST(ERROR_CXXFLAGS)\n-AC_SUBST(HARDENED_CXXFLAGS)\n-AC_SUBST(HARDENED_CPPFLAGS)\n-AC_SUBST(HARDENED_LDFLAGS)\n-AC_SUBST(PIC_FLAGS)\n-AC_SUBST(PIE_FLAGS)\n-AC_SUBST(SSE42_CXXFLAGS)\n-AC_SUBST(LIBTOOL_APP_LDFLAGS)\n-AC_SUBST(USE_UPNP)\n-AC_SUBST(USE_QRCODE)\n-AC_SUBST(BOOST_LIBS)\n-AC_SUBST(TESTDEFS)\n-AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(MINIUPNPC_CPPFLAGS)\n-AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(CRYPTO_LIBS)\n-AC_SUBST(SSL_LIBS)\n-AC_SUBST(EVENT_LIBS)\n-AC_SUBST(EVENT_PTHREADS_LIBS)\n-AC_SUBST(ZMQ_LIBS)\n-AC_SUBST(PROTOBUF_LIBS)\n-AC_SUBST(QR_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n-AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n-AC_CONFIG_FILES([doc/Doxyfile])\n-AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n-AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n-AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n-\n-dnl boost's m4 checks do something really nasty: they export these vars. As a\n-dnl result, they leak into secp256k1's configure and crazy things happen.\n-dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n-CPPFLAGS_TEMP=\"$CPPFLAGS\"\n-unset CPPFLAGS\n-CPPFLAGS=\"$CPPFLAGS_TEMP\"\n-\n-LDFLAGS_TEMP=\"$LDFLAGS\"\n-unset LDFLAGS\n-LDFLAGS=\"$LDFLAGS_TEMP\"\n-\n-LIBS_TEMP=\"$LIBS\"\n-unset LIBS\n-LIBS=\"$LIBS_TEMP\"\n-\n-PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n-unset PKG_CONFIG_PATH\n-PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n-\n-PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n-unset PKG_CONFIG_LIBDIR\n-PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n-\n-if test x$need_bundled_univalue = xyes; then\n-  AC_CONFIG_SUBDIRS([src/univalue])\n-fi\n-\n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n-\n-AC_OUTPUT\n-\n-dnl Taken from https://wiki.debian.org/RpathIssue\n-case $host in\n-   *-*-linux-gnu)\n-     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n-     sed < libtool > libtool-2 \\\n-     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n-     mv libtool-2 libtool\n-     chmod 755 libtool\n-   ;;\n-esac\n-\n-dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n-case ${OS} in\n-   *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n-     mv test/config-2.ini test/config.ini\n-   ;;\n-esac\n-\n-echo \n-echo \"Options used to compile and link:\"\n-echo \"  with wallet   = $enable_wallet\"\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n-if test x$bitcoin_enable_qt != xno; then\n-    echo \"    qt version  = $bitcoin_qt_got_major_vers\"\n-    echo \"    with qr     = $use_qr\"\n-fi\n-echo \"  with zmq      = $use_zmq\"\n-echo \"  with test     = $use_tests\"\n-echo \"  with bench    = $use_bench\"\n-echo \"  with upnp     = $use_upnp\"\n-echo \"  use asm       = $use_asm\"\n-echo \"  debug enabled = $enable_debug\"\n-echo \"  werror        = $enable_werror\"\n-echo \n-echo \"  target os     = $TARGET_OS\"\n-echo \"  build os      = $BUILD_OS\"\n-echo\n-echo \"  CC            = $CC\"\n-echo \"  CFLAGS        = $CFLAGS\"\n-echo \"  CPPFLAGS      = $CPPFLAGS\"\n-echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $CXXFLAGS\"\n-echo \"  LDFLAGS       = $LDFLAGS\"\n-echo \"  ARFLAGS       = $ARFLAGS\"\n-echo "
      },
      {
        "sha": "a582a724f75ae59e6a1c1f19fbde10d7f0834462",
        "filename": "contrib/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,50 +0,0 @@\n-Repository Tools\n----------------------\n-\n-### [Developer tools](/contrib/devtools) ###\n-Specific tools for developers working on this repository.\n-Contains the script `github-merge.py` for merging GitHub pull requests securely and signing them using GPG.\n-\n-### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n-\n-### [Linearize](/contrib/linearize) ###\n-Construct a linear, no-fork, best version of the blockchain.\n-\n-### [Qos](/contrib/qos) ###\n-\n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n-\n-### [Seeds](/contrib/seeds) ###\n-Utility to generate the pnSeed[] array that is compiled into the client.\n-\n-Build Tools and Keys\n----------------------\n-\n-### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n-\n-### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n-\n-### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds. \n-\n-### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions.\n-\n-### [Gitian-build](/contrib/gitian-build.sh) ###\n-Script for running full Gitian builds.\n-\n-Test and Verify Tools \n----------------------\n-\n-### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "732981fe7c5d1cb447ee90aac1c8ffb96ab24636",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 154,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,154 +0,0 @@\n-# bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# call $bitcoin-cli for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-# Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n-_bitcoin_cli() {\n-    local cur prev words=() cword\n-    local bitcoin_cli\n-\n-    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n-    # as bitcoin-cli might not be in $PATH\n-    bitcoin_cli=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    if ((cword > 5)); then\n-        case ${words[cword-5]} in\n-            sendtoaddress)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            importaddress|listtransactions|setban)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransaction)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            setban)\n-                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n-            return 0\n-            ;;\n-    esac\n-\n-    case \"$cur\" in\n-        -conf=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-            local helpopts commands\n-\n-            # only parse -help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-            fi\n-\n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoin_cli bitcoin-cli\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "b8133bf78914be68a33d881223da861820fdb05e",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,21 +0,0 @@\n-FORMS += \\\n-    ../src/qt/forms/aboutdialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/coincontroldialog.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/helpmessagedialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/openuridialog.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/receivecoinsdialog.ui \\\n-    ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/debugwindow.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-\n-RESOURCES += \\\n-    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,57 +0,0 @@\n-# bash programmable completion for bitcoin-tx(1)\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoin_tx() {\n-    local cur prev words=() cword\n-    local bitcoin_tx\n-\n-    # save and use original argument to invoke bitcoin-tx for -help\n-    # it might not be in $PATH\n-    bitcoin_tx=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n =: cur prev words cword\n-\n-    case \"$cur\" in\n-        load=*:*)\n-            cur=\"${cur#load=*:}\"\n-            _filedir\n-            return 0\n-            ;;\n-        *=*)\t# prevent attempts to complete other arguments\n-            return 0\n-            ;;\n-    esac\n-\n-    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n-        # only options (or an uncompletable hex-string) allowed\n-        # parse bitcoin-tx -help for options\n-        local helpopts\n-        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-    else\n-        # only commands are allowed\n-        # parse -help for commands\n-        local helpcmds\n-        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n-    fi\n-\n-    # Prevent space if an argument is desired\n-    if [[ $COMPREPLY == *= ]]; then\n-        compopt -o nospace\n-    fi\n-\n-    return 0\n-} &&\n-complete -F _bitcoin_tx bitcoin-tx\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "cccd4bde0d33d9dae39a23b53e2816ae5f1c5464",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,56 +0,0 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoind() {\n-    local cur prev words=() cword\n-    local bitcoind\n-\n-    # save and use original argument to invoke bitcoind for -help\n-    # it might not be in $PATH\n-    bitcoind=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-\n-            # only parse -help if sensible\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                local helpopts\n-                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-            fi\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoind bitcoind bitcoin-qt\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "fab9cc238156789c96e4b908fbe1e4d863ecebf9",
        "filename": "contrib/debian/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,21 +0,0 @@\n-\n-Debian\n-====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-## bitcoin: URI support ##\n-\n-\n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n-To install:\n-\n-\tsudo desktop-file-install bitcoin-qt.desktop\n-\tsudo update-desktop-database\n-\n-If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n-\n-bitcoin-qt.protocol (KDE)\n-"
      },
      {
        "sha": "204cdf99d0562d14fed229ab7cd14c048bf15be5",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Version=1.0\n-Name=Bitcoin Core\n-Comment=Connect to the Bitcoin P2P Network\n-Comment[de]=Verbinde mit dem Bitcoin peer-to-peer Netzwerk\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;\n-StartupWMClass=Bitcoin-qt"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "7fb230eca8921cf3f2756a2e1fa3ea6ab808dca5",
        "filename": "contrib/debian/bitcoin-qt.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.lintian-overrides?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "9a3cc31c09a8fb719315a546fb2144d423ade038",
        "filename": "contrib/debian/bitcoin-qt.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.manpages?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-qt.1"
      },
      {
        "sha": "014588d53679baf51055d70b8a621a99217eb160",
        "filename": "contrib/debian/bitcoin-qt.protocol",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.protocol?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,11 +0,0 @@\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "861d49d07022e2468fca7c747d91b7fe4322e1c7",
        "filename": "contrib/debian/bitcoin-tx.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-tx.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoin-tx.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.manpages?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-tx.1"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,2 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind\n-contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "3f9f140bd827a1491ba6a0c46c1df16e428548bd",
        "filename": "contrib/debian/bitcoind.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.lintian-overrides?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "bab644ece1369ba4d8896ef507add76aae617d8e",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,2 +0,0 @@\n-doc/man/bitcoind.1\n-doc/man/bitcoin-cli.1"
      },
      {
        "sha": "33dab9b6388890a5ba10e47fcd3b833bb0875dc4",
        "filename": "contrib/debian/changelog",
        "status": "removed",
        "additions": 0,
        "deletions": 578,
        "changes": 578,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,578 +0,0 @@\n-bitcoin (0.14.1-trusty4) trusty; urgency=medium\n-\n-  * Re-enable UPnP support.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 05 May 2017 13:28:00 -0400\n-\n-bitcoin (0.14.1-trusty3) trusty; urgency=medium\n-\n-  * Build with qt5 if we are on a non-Ubuntu (ie non-Unity) distro.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:13:00 -0400\n-\n-bitcoin (0.14.1-trusty2) trusty; urgency=medium\n-\n-  * Bump minimum boost version in deps.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:12:00 -0400\n-\n-bitcoin (0.14.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sat, 22 Apr 2017 17:10:00 -0400\n-\n-bitcoin (0.14.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 08 Mar 2017 10:30:00 -0500\n-\n-bitcoin (0.13.2-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 05 Jan 2017 09:59:00 -0500\n-\n-bitcoin (0.13.1-trusty2) trusty; urgency=medium\n-\n-  * Revert to Qt4, due to https://github.com/bitcoin/bitcoin/issues/9038\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 31 Oct 2016 11:16:00 -0400\n-\n-bitcoin (0.13.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-  * Backport updated bitcoin-qt.desktop from upstream master\n-  * Add zmq dependency\n-  * Switch to Qt5 (breaks precise, but that was already broken by C++11)\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 27 Oct 2016 17:32:00 -0400\n-\n-bitcoin (0.13.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sun, 04 Sep 2016 22:09:00 -0400\n-\n-bitcoin (0.12.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n-\n-bitcoin (0.12.0-trusty6) trusty; urgency=medium\n-\n-  * Fix program-options dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n-\n-bitcoin (0.12.0-trusty5) trusty; urgency=medium\n-\n-  * Test explicit --with-gui\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n-\n-bitcoin (0.12.0-trusty4) trusty; urgency=medium\n-\n-  * Fix libevent-dev dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n-\n-bitcoin (0.12.0-trusty3) trusty; urgency=medium\n-\n-  * Fix precise boost dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n-\n-bitcoin (0.12.0-trusty2) trusty; urgency=medium\n-\n-  * Fix libevent dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n-\n-bitcoin (0.12.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release\n-  * Various updates to contrib/debian were merged, a few were not\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n-\n-bitcoin (0.11.2-trusty1) trusty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n-\n-bitcoin (0.11.1-trusty2) trusty; urgency=low\n-\n-  * Remove minupnpc builddep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n-\n-bitcoin (0.11.1-trusty1) trusty; urgency=high\n-\n-  * New upstream release.\n-  * Disable all UPnP support.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n-\n-bitcoin (0.11.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n-\n-bitcoin (0.10.2-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n-\n-bitcoin (0.10.1-precise3) precise; urgency=medium\n-\n-  * Fix build dep (include python).\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n-\n-bitcoin (0.10.1-precise2) precise; urgency=medium\n-\n-  * Fix miniupnpc dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n-\n-bitcoin (0.10.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n-\n-bitcoin (0.10.0-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n-\n-bitcoin (0.9.4-precise1) precise; urgency=high\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n-\n-bitcoin (0.9.3-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n-\n-bitcoin (0.9.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Backport pull #4019\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n-\n-bitcoin (0.9.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n-\n-bitcoin (0.8.6-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Make .desktop paths non-fixed (suggested by prusnak@github)\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n-\n-bitcoin (0.8.5-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n-\n-bitcoin (0.8.4-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n-\n-bitcoin (0.8.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n-\n-bitcoin (0.8.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n-\n-bitcoin (0.8.1-natty3) natty; urgency=low\n-\n-  * New pixmaps\n-\n- -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n-\n-bitcoin (0.8.1-natty2) natty; urgency=low\n-\n-  * Remove dumb broken launcher script\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n-\n-bitcoin (0.8.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n-\n-bitcoin (0.8.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n-\n-bitcoin (0.7.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n-\n-bitcoin (0.7.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n-\n-bitcoin (0.7.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n-\n-bitcoin (0.6.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n-\n-bitcoin (0.6.2-natty1) natty; urgency=low\n-\n-  * Update package description and launch scripts.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n-\n-bitcoin (0.6.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n-\n-bitcoin (0.6.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n-\n-bitcoin (0.6.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n-    Thanks to luke-jr for the KDE .protocol file.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n-\n-bitcoin (0.5.3-natty1) natty; urgency=low\n-\n-  * Mark for upload to PPA.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n-\n-bitcoin (0.5.3-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n-\n-bitcoin (0.5.2-natty1) natty; urgency=low\n-\n-  * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n-    a ton of work that virtually no users will ever be willing and\n-    capable of doing\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n-\n-bitcoin (0.5.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n-\n-bitcoin (0.5.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n-\n-bitcoin (0.5.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n-\n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n-\n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n-\n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n-\n-  * Add test_bitcoin to build test\n-  * Fix clean\n-  * Remove uneccessary build-dependancies\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n-\n-  * Mark for natty\n-  * Fix broken build\n-  * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n-\n-  * Add bitcoin-qt\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n-\n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n-\n-  * New upstream prerelease.\n-  * Add Github as alternate upstream source in watch file.\n-  * Stop build-depending on libcrypto++-dev, and drop patch 1000:\n-    Upstream no longer use crypto++.\n-  * Drop patch 1003: Upstream builds dynamic by default now.\n-  * Update copyright file: Drop notes on longer included sources.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n-\n-bitcoin (0.4.0-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Stop repackaging source tarballs: No DFSG-violating stripping left.\n-  * Update copyright file:\n-    + Add Github URL to Source.\n-  * Drop dpkg-source local-options hint: Declared options are default\n-    since dpkg-source 1.16.1.\n-    + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n-    + Add Files sections for newly readded src/cryptopp/* (new custom\n-      BSD-like license), and newly added doc/build-osx.txt and\n-      src/makefile.osx (Expat).\n-  * Bump debhelper compatibility level to 7.\n-  * Suppress binary icns and gpg files.\n-  * Enable regression tests:\n-    + Build-depend on libboost-test-dev.\n-    + Extend patch 1003 to also dynamically link test binary.\n-    + Build and invoke test binary unless tests are disabled.\n-  * Tighten build-dependency on cdbs: Recent version needed to support\n-    debhelper 7.\n-  * Relax build-depend unversioned on debhelper: needed version\n-    satisfied even in oldstable.\n-  * Stop suppress optional build-dependencies: Satisfied in stable.\n-    Build-depend on devscripts (enabling copyright-check).\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n-\n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Jonas Smedegaard ]\n-  * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n-      daemon and command-line interface.\n-    + Extend README.Debian with section on lack of GUI, and add primary\n-      headline.\n-    + Avoid installing upstream README: contains no parts relevant for\n-      Debian usage.\n-    Thanks to richard for suggestions (see bug#629443).\n-  * Favor final releases over prereleases in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Track -src (not -linux) tarballs in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Drop patches 1004 and 1005 (integrated upstream) and simplify\n-    CXXFLAGS in rules file.\n-  * Stop stripping no longer included source-less binaries from upstream\n-    tarballs.\n-\n-  [ Jan Dittberner ]\n-  * refresh debian/patches/1000_use_system_crypto++.patch\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n-\n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n-\n-  * Enable UPNP support:\n-    + Drop patch 1006.\n-    + Build-depend on libminiupnpc-dev.\n-    Thanks to Matt Corallo.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n-\n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Refresh patches.\n-  * Drop patch 1002: no longer needed, as upstream use pkgconfig now.\n-  * Add patch 1006 to really unset USE_UPNP as aparently intended.\n-  * Adjust cleanup rule to preserve .gitignore files.\n-  * Update copyright file:\n-    + Bump format to draft 174 of DEP-5.\n-    + Shorten comments.\n-  * Bump policy compliance to standards-version 3.9.2.\n-  * Shorten Vcs-Browser paragraph in control file.\n-  * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n-    longer needed.\n-  * Link against unversioned berkeleydb. Update NEWS and README.Debian\n-    accordingly (and improve wording while at it).\n-    Closes: Bug#621425. Thanks to Ond\u0159ej Sur\u00fd.\n-  * This release also implicitly updates linkage against libcrypto++,\n-    which closes: bug#626953, #627024.\n-  * Disable linkage against not yet Debian packaged MiniUPnP.\n-  * Silence seemingly harmless noise about unused variables.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n-\n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n-\n-  * Fix have wrapper script execute real binary (not loop executing\n-    itself).\n-    Closes: bug#617290. Thanks to Philippe Gauthier and Etienne Laurin.\n-  * Set urgency=medium as the only (user-exposed) binary is useless\n-    without this fix and has been for some time.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n-\n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n-    Closes: bug#618439. Thanks to Shane Wegner.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n-\n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Micah Anderson ]\n-  * Add myself as uploader.\n-\n-  [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n-  * Update patches:\n-    + Drop patch 2002: Applied upstream.\n-    + Add patch 1005 to add phtread linker option.\n-      Closes: bug#615619. Thanks to Shane Wegner.\n-    + Refresh patches.\n-  * Extend copyright years in rules file header.\n-  * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n-    Closes: bug#614025. Thanks to Luke-Jr.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n-\n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n-\n-  * Fix override agressive optimizations.\n-  * Fix tighten build-dependencies to really fit backporting to Lenny:\n-    + Add fallback build-dependency on libdb4.6++-dev.\n-    + Tighten unversioned Boost build-dependencies to recent versions,\n-      To force use of versioned Boost when backporting to Lenny.\n-    ...needs more love, though: actual build fails.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n-\n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n-\n-  * Fix lower Boost fallback-build-dependencies to 1.35, really\n-    available in Lenny.\n-  * Correct comment in rules file regarding reason for versioned Boost\n-    fallback-build-dependency.\n-  * Add patch 2002 adding -mt decoration to Boost flags, to ease\n-    backporting to Lenny.\n-  * Respect DEB_BUILD_OPTIONS, and suppress arch-specific optimizations:\n-    + Add patch 1004 to allow overriding optimization flags.\n-    + Set optimization flags conditionally at build time.\n-    + Drop patch 2002 unconditionally suppressing arch-optimizations.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n-\n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n-\n-  [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n-\n-  [ Jonas Smedegaard ]\n-  * Ease backporting:\n-    + Suppress optional build-dependencies.\n-    + Add fallback build-dependencies on the most recent Boost libs\n-    available in Lenny (where unversioned Boost libs are missing).\n-  * Add Micah as copyright holder for manpages, licensed as GPL-3+.\n-  * Bump copyright format to Subversion candidate draft 162 of DEP5.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n-\n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n-\n-  * Document in copyright file files excluded from repackaged source.\n-  * Update copyright file:\n-    + Bump DEP5 format hint to Subversion draft rev. 153.\n-    + Consistently wrap at 72 chars.\n-    + Refer to GPL-2 file (not GPL symlink).\n-  * Link against Berkeley DB 4.8 (not 4.7):\n-    + Build-depend on libdb4.8++-dev (and on on libdb4.7++-dev).\n-    + Suggest libdb4.8-util and db4.7-util.\n-    + Add README.Debian note on (untested) upgrade routine.\n-    + Add NEWS entry on changed db version, referring to README.Debian.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n-\n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n-\n-  * Adjust build options to use optimized miner only for amd64. Fixes\n-    FTBFS on i386 (and other archs, if compiling anywhere else at all).\n-  * Avoid static linking.\n-  * Adjust patch 2001 to avoid only arch-specific optimizations (keep\n-    -O3).\n-  * Extend long description to mention disk consumption and initial use\n-    of IRC.\n-  All of above changes thanks to Helmuth Grohne.\n-  * Add lintian override regarding OpenSSL and GPL: Linked code is Expat\n-    - only Debian packaging is GPL-2+.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n-\n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n-\n-  [ Jonas Smedegaard ]\n-  * Initial release.\n-    Closes: bug#578157.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 28 Dec 2010 15:49:22 +0100"
      },
      {
        "sha": "7f8f011eb73d6043d2e6db9d2c101195ae2801f2",
        "filename": "contrib/debian/compat",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/compat",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/compat",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/compat?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-7"
      },
      {
        "sha": "0d6ad25e249fe9b7b89a738aba89c2ca1d495587",
        "filename": "contrib/debian/control",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,70 +0,0 @@\n-Source: bitcoin\n-Section: utils\n-Priority: optional\n-Maintainer: Matt Corallo <matt@mattcorallo.com>\n-Uploaders: Matt Corallo <matt@mattcorallo.com>\n-Build-Depends: debhelper,\n- devscripts,\n- automake,\n- libtool,\n- bash-completion,\n- libdb4.8++-dev,\n- libssl-dev,\n- pkg-config,\n- libevent-dev,\n- libboost-system1.48-dev | libboost-system-dev (>> 1.47),\n- libboost-filesystem1.48-dev | libboost-filesystem-dev (>> 1.47),\n- libboost-program-options1.48-dev | libboost-program-options-dev (>> 1.47),\n- libboost-thread1.48-dev | libboost-thread-dev (>> 1.47),\n- libboost-test1.48-dev | libboost-test-dev (>> 1.47),\n- libboost-chrono1.48-dev | libboost-chrono-dev (>> 1.47),\n- libminiupnpc8-dev | libminiupnpc-dev,\n- qt4-qmake, libqt4-dev,\n- qttools5-dev-tools, qttools5-dev,\n- libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler,\n- python,\n- libzmq3-dev\n-Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n-\n-Package: bitcoind\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n-\n-Package: bitcoin-qt\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n-\n-Package: bitcoin-tx\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n- exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "8e715bd9d80dafbd6d60c80014a4ff5bbfe1da9e",
        "filename": "contrib/debian/copyright",
        "status": "removed",
        "additions": 0,
        "deletions": 152,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,152 +0,0 @@\n-Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n-Upstream-Name: Bitcoin\n-Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n-\n-Files: *\n-Copyright: 2009-2017, Bitcoin Core Developers\n-License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n-         as well as the numerous contributors to the project.\n-\n-Files: debian/*\n-Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n-           2011, Matt Corallo <matt@bluematt.me>\n-License: GPL-2+\n-\n-Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n-Copyright: 2008 Don Anderson <dda@sleepycat.com>\n-License: GNU-All-permissive-License\n-\n-Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n-Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n-License: GNU-All-permissive-License\n-\n-Files: src/qt/res/icons/add.png\n-       src/qt/res/icons/address-book.png\n-       src/qt/res/icons/chevron.png\n-       src/qt/res/icons/configure.png\n-       src/qt/res/icons/debugwindow.png\n-       src/qt/res/icons/edit.png\n-       src/qt/res/icons/editcopy.png\n-       src/qt/res/icons/editpaste.png\n-       src/qt/res/icons/export.png\n-       src/qt/res/icons/eye.png\n-       src/qt/res/icons/filesave.png\n-       src/qt/res/icons/history.png\n-       src/qt/res/icons/info.png\n-       src/qt/res/icons/key.png\n-       src/qt/res/icons/lock_*.png\n-       src/qt/res/icons/open.png\n-       src/qt/res/icons/overview.png\n-       src/qt/res/icons/quit.png\n-       src/qt/res/icons/receive.png\n-       src/qt/res/icons/remove.png\n-       src/qt/res/icons/send.png\n-       src/qt/res/icons/synced.png\n-       src/qt/res/icons/transaction*.png\n-       src/qt/res/icons/tx_output.png\n-       src/qt/res/icons/warning.png\n-Copyright: Stephen Hutchings (and more)\n-           http://typicons.com\n-License: Expat\n-Comment: Site: https://github.com/stephenhutchings/typicons.font\n-\n-Files: src/qt/res/icons/connect*.png\n-       src/qt/res/src/connect-*.svg\n-       src/qt/res/icons/network_disabled.png\n-       src/qt/res/src/network_disabled.svg\n-Copyright: Marco Falke\n-           Luke Dashjr\n-License: Expat\n-Comment: Inspired by Stephan Hutchings Typicons\n-\n-Files: src/qt/res/icons/tx_mined.png\n-       src/qt/res/src/mine.svg\n-       src/qt/res/icons/fontbigger.png\n-       src/qt/res/icons/fontsmaller.png\n-       src/qt/res/icons/hd_disabled.png\n-       src/qt/res/src/hd_disabled.svg\n-       src/qt/res/icons/hd_enabled.png\n-       src/qt/res/src/hd_enabled.svg\n-Copyright: Jonas Schnelli\n-License: Expat\n-Comment:\n-\n-Files: src/qt/res/icons/clock*.png\n-       src/qt/res/icons/eye_*.png\n-       src/qt/res/icons/verify.png\n-       src/qt/res/icons/tx_in*.png\n-       src/qt/res/src/clock_*.svg\n-       src/qt/res/src/tx_*.svg\n-       src/qt/res/src/verify.svg\n-Copyright: Stephan Hutching, Jonas Schnelli\n-License: Expat\n-Comment: Modifications of Stephan Hutchings Typicons\n-\n-Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n-Copyright: Bitboy, Jonas Schnelli\n-License: public-domain\n-Comment: Site: https://bitcointalk.org/?topic=1756.0\n-\n-\n-License: Expat\n- Permission is hereby granted, free of charge, to any person obtaining a\n- copy of this software and associated documentation files (the\n- \"Software\"), to deal in the Software without restriction, including\n- without limitation the rights to use, copy, modify, merge, publish,\n- distribute, sublicense, and/or sell copies of the Software, and to\n- permit persons to whom the Software is furnished to do so, subject to\n- the following conditions:\n- .\n- The above copyright notice and this permission notice shall be included\n- in all copies or substantial portions of the Software.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n- OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n- CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n- SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-\n-License: GNU-All-permissive-License\n- Copying and distribution of this file, with or without modification, are\n- permitted in any medium without royalty provided the copyright notice\n- and this notice are preserved. This file is offered as-is, without any\n- warranty.\n-\n-License: GPL-2+\n- This program is free software; you can redistribute it and/or modify it\n- under the terms of the GNU General Public License as published by the\n- Free Software Foundation; either version 2, or (at your option) any\n- later version.\n- .\n- This program is distributed in the hope that it will be useful, but\n- WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- General Public License for more details.\n-Comment:\n- On Debian systems the GNU General Public License (GPL) version 2 is\n- located in '/usr/share/common-licenses/GPL-2'.\n- .\n- You should have received a copy of the GNU General Public License along\n- with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: GPL-3+\n- Permission is granted to copy, distribute and/or modify this document\n- under the terms of the GNU General Public License, Version 3 or any\n- later version published by the Free Software Foundation.\n-Comment:\n- On Debian systems the GNU General Public License (GPL) version 3 is\n- located in '/usr/share/common-licenses/GPL-3'.\n- .\n- You should have received a copy of the GNU General Public License along\n- with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: public-domain\n- This work is in the public domain."
      },
      {
        "sha": "4dd73162a238b848c1d6ccf1b35540256b3b7d15",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,147 +0,0 @@\n-##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n-##\n- \n-# Network-related settings:\n-\n-# Run on the test network instead of the real bitcoin network.\n-#testnet=0\n-\n-# Run a regression test network\n-#regtest=0\n-\n-# Connect via a SOCKS5 proxy\n-#proxy=127.0.0.1:9050\n-\n-# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-#bind=<addr>\n-\n-# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n-#whitebind=<addr>\n-\n-##############################################################\n-##            Quick Primer on addnode vs connect            ##\n-##  Let's say for instance you use addnode=4.2.2.4          ##\n-##  addnode will connect you to and tell you about the      ##\n-##    nodes connected to 4.2.2.4.  In addition it will tell ##\n-##    the other nodes connected to it that you exist so     ##\n-##    they can connect to you.                              ##\n-##  connect will not do the above when you 'connect' to it. ##\n-##    It will *only* connect you to 4.2.2.4 and no one else.##\n-##                                                          ##\n-##  So if you're behind a firewall, or have other problems  ##\n-##  finding nodes, add some using 'addnode'.                ##\n-##                                                          ##\n-##  If you want to stay private, use 'connect' to only      ##\n-##  connect to \"trusted\" nodes.                             ##\n-##                                                          ##\n-##  If you run multiple nodes on a LAN, there's no need for ##\n-##  all of them to open lots of connections.  Instead       ##\n-##  'connect' them all to one node that is port forwarded   ##\n-##  and has lots of connections.                            ##\n-##       Thanks goes to [Noodle] on Freenode.               ##\n-##############################################################\n-\n-# Use as many addnode= settings as you like to connect to specific peers\n-#addnode=69.164.218.197\n-#addnode=10.0.0.2:8333\n-\n-# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n-#connect=69.164.218.197\n-#connect=10.0.0.1:8333\n-\n-# Listening mode, enabled by default except when 'connect' is being used\n-#listen=1\n-\n-# Maximum number of inbound+outbound connections.\n-#maxconnections=\n-\n-#\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n-#\n-\n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n-#server=0\n-\n-# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n-# This option can be specified multiple times (default: bind to all interfaces)\n-#rpcbind=<addr>\n-\n-# If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n-# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n-# when the server and client are run as the same user.\n-#\n-# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n-# method(DEPRECATED) is to set this pair for the server and client:\n-#rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n-#\n-# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n-# using the output from the script in share/rpcauth/rpcauth.py after providing a username:\n-#\n-# ./share/rpcauth/rpcauth.py alice\n-# String to be appended to bitcoin.conf:\n-# rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n-# Your password:\n-# DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n-#\n-# On client-side, you add the normal user/password pair to send commands:\n-#rpcuser=alice\n-#rpcpassword=DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n-#\n-# You can even add multiple entries of these to the server conf file, and client can use any of them:\n-# rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n-\n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n-# after the HTTP connection is established. \n-#rpcclienttimeout=30\n-\n-# By default, only RPC connections from localhost are allowed.\n-# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n-# either as a single IPv4/IPv6 or with a subnet specification.\n-\n-# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n-# because the rpcpassword is transmitted over the network unencrypted.\n-\n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n-#rpcallowip=10.1.1.34/255.255.255.0\n-#rpcallowip=1.2.3.4/24\n-#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n-\n-# Listen for RPC connections on this TCP port:\n-#rpcport=8332\n-\n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n-# running on another host using this option:\n-#rpcconnect=127.0.0.1\n-\n-# Create transactions that have enough fees so they are likely to begin confirmation within n blocks (default: 6).\n-# This setting is over-ridden by the -paytxfee option.\n-#txconfirmtarget=n\n-\n-# Miscellaneous options\n-\n-# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n-# both prior transactions and several dozen future transactions.\n-#keypool=100\n-\n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n-# are more likely than free transactions to be included in generated blocks, so may\n-# be validated sooner.\n-#paytxfee=0.00\n-\n-# Enable pruning to reduce storage requirements by deleting old blocks. \n-# This mode is incompatible with -txindex and -rescan.\n-# 0 = default (no pruning).\n-# 1 = allows manual pruning via RPC.\n-# >=550 = target to stay under in MiB. \n-#prune=550\n-\n-# User interface options\n-\n-# Start Bitcoin minimized\n-#min=1\n-\n-# Minimize to the system tray\n-#minimizetotray=1"
      },
      {
        "sha": "a7281f94b2b532a1b8b07631ce0fc5d598e27ecc",
        "filename": "contrib/debian/gbp.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/gbp.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/gbp.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/gbp.conf?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,5 +0,0 @@\n-# Configuration file for git-buildpackage and friends\n-\n-[DEFAULT]\n-pristine-tar = True\n-sign-tags = True"
      },
      {
        "sha": "80c1584376a9798f816d904a07f9288adbde225d",
        "filename": "contrib/debian/patches/README",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/patches/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/patches/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/patches/README?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,3 +0,0 @@\n-0xxx: Grabbed from upstream development.\n-1xxx: Possibly relevant for upstream adoption.\n-2xxx: Only relevant for official Debian release."
      },
      {
        "sha": "8b137891791fe96927ad78e64b0aad7bded08bdc",
        "filename": "contrib/debian/patches/series",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/patches/series",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/patches/series",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/patches/series?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-"
      },
      {
        "sha": "6885e3852126f17e910cbe4236b4f773a1fd8de6",
        "filename": "contrib/debian/rules",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,23 +0,0 @@\n-#!/usr/bin/make -f\n-# -*- mode: makefile; coding: utf-8 -*-\n-\n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n-\n-%:\n-\tdh --with bash-completion $@\n-\n-override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n-\n-QT=$(shell dpkg-vendor --derives-from Ubuntu && echo qt4 || echo qt5)\n-\n-# Yea, autogen should be run on the source archive, but I like doing git archive\n-override_dh_auto_configure:\n-\t./autogen.sh\n-\t./configure --with-gui=$(QT)\n-\n-override_dh_auto_test:\n-\tmake check"
      },
      {
        "sha": "163aaf8d82b6c54f23c45f32895dbdfdcc27b047",
        "filename": "contrib/debian/source/format",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/source/format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/source/format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/source/format?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-3.0 (quilt)"
      },
      {
        "sha": "4d9e0cfa577b6d8acac28a1e005f42388b7255c0",
        "filename": "contrib/debian/watch",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,5 +0,0 @@\n-# Run the \"uscan\" command to check for upstream updates and more.\n-version=3\n-# use qa.debian.org redirector; see man uscan\n-opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz"
      },
      {
        "sha": "67c5e15a15041f77122a8d0745a3164abde9e8d0",
        "filename": "contrib/devtools/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 180,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,180 +0,0 @@\n-Contents\n-========\n-This directory contains tools for developers working on this repository.\n-\n-check-doc.py\n-============\n-\n-Check if all command line args are documented. The return value indicates the\n-number of undocumented args.\n-\n-clang-format-diff.py\n-===================\n-\n-A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n-\n-For instance, to format the last commit with 0 lines of context,\n-the script should be called from the git root folder as follows.\n-\n-```\n-git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n-```\n-\n-copyright\\_header.py\n-====================\n-\n-Provides utilities for managing copyright headers of `The Bitcoin Core\n-developers` in repository source files. It has three subcommands:\n-\n-```\n-$ ./copyright_header.py report <base_directory> [verbose]\n-$ ./copyright_header.py update <base_directory>\n-$ ./copyright_header.py insert <file>\n-```\n-Running these subcommands without arguments displays a usage string.\n-\n-copyright\\_header.py report \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-\n-Produces a report of all copyright header notices found inside the source files\n-of a repository. Useful to quickly visualize the state of the headers.\n-Specifying `verbose` will list the full filenames of files of each category.\n-\n-copyright\\_header.py update \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-Updates all the copyright headers of `The Bitcoin Core developers` which were\n-changed in a year more recent than is listed. For example:\n-```\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where `<lastModifiedYear>` is obtained from the `git log` history.\n-\n-This subcommand also handles copyright headers that have only a single year. In\n-those cases:\n-```\n-// Copyright (c) <year> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where the update is appropriate.\n-\n-copyright\\_header.py insert \\<file\\>\n-------------------------------------\n-Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has  `#!` starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be `<year_introduced>-<current_year>` where\n-`<year_introduced>` is according to the `git log` history. If\n-`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n-year rather than two hyphenated years.\n-\n-If the file already has a copyright for `The Bitcoin Core developers`, the\n-script will exit.\n-\n-gen-manpages.sh\n-===============\n-\n-A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n-This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n-\n-git-subtree-check.sh\n-====================\n-\n-Run this script from the root of the repository to verify that a subtree matches the contents of\n-the commit it claims to have been updated to.\n-\n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n-maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n-* for `src/crypto/ctaes`: https://github.com/bitcoin-core/ctaes.git (branch master)\n-\n-Usage: `git-subtree-check.sh DIR (COMMIT)`\n-\n-`COMMIT` may be omitted, in which case `HEAD` is used.\n-\n-github-merge.py\n-===============\n-\n-A small script to automate merging pull-requests securely and sign them with GPG.\n-\n-For example:\n-\n-  ./github-merge.py 3077\n-\n-(in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n-\n-What it does:\n-* Fetch master and the pull request.\n-* Locally construct a merge commit.\n-* Show the diff that merge results in.\n-* Ask you to verify the resulting source tree (so you can do a make\n-check or whatever).\n-* Ask you whether to GPG sign the merge commit.\n-* Ask you whether to push the result upstream.\n-\n-This means that there are no potential race conditions (where a\n-pullreq gets updated while you're reviewing it, but before you click\n-merge), and when using GPG signatures, that even a compromised GitHub\n-couldn't mess with the sources.\n-\n-Setup\n----------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n-\n-    git config githubmerge.repository bitcoin/bitcoin\n-    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n-    git config --global user.signingkey mykeyid (if you want to GPG sign)\n-\n-optimize-pngs.py\n-================\n-\n-A script to optimize png files in the bitcoin\n-repository (requires pngcrush).\n-\n-security-check.py and test-security-check.py\n-============================================\n-\n-Perform basic ELF security checks on a series of executables.\n-\n-symbol-check.py\n-===============\n-\n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n-\n-Example usage after a gitian build:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py \n-\n-If only supported symbols are used the return value will be 0 and the output will be empty.\n-\n-If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n-\n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n-\n-update-translations.py\n-======================\n-\n-Run this script from the root of the repository to update all translations from transifex.\n-It will do the following automatically:\n-\n-- fetch all translations\n-- post-process them into valid and committable format\n-- add missing translations to the build system (TODO)\n-\n-See doc/translation-process.md for more information."
      },
      {
        "sha": "f164ea932295135cfc8519c5bd8dabdfdb3afbc8",
        "filename": "contrib/devtools/check-doc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,46 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2015-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-'''\n-This checks if all command line args are documented.\n-Return value is 0 to indicate no error.\n-\n-Author: @MarcoFalke\n-'''\n-\n-from subprocess import check_output\n-import re\n-import sys\n-\n-FOLDER_GREP = 'src'\n-FOLDER_TEST = 'src/test/'\n-CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n-CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n-CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n-REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n-REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n-# list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio', '-forcecompactdb', '-usehd'])\n-\n-def main():\n-  used = check_output(CMD_GREP_ARGS, shell=True)\n-  docd = check_output(CMD_GREP_DOCS, shell=True)\n-\n-  args_used = set(re.findall(REGEX_ARG,used))\n-  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n-  args_need_doc = args_used.difference(args_docd)\n-  args_unknown = args_docd.difference(args_used)\n-\n-  print \"Args used        : %s\" % len(args_used)\n-  print \"Args documented  : %s\" % len(args_docd)\n-  print \"Args undocumented: %s\" % len(args_need_doc)\n-  print args_need_doc\n-  print \"Args unknown     : %s\" % len(args_unknown)\n-  print args_unknown\n-\n-  sys.exit(len(args_need_doc))\n-\n-if __name__ == \"__main__\":\n-    main()"
      },
      {
        "sha": "7e96852c5c26c78040ec173c2a14f5869218e35c",
        "filename": "contrib/devtools/check-rpc-mappings.py",
        "status": "removed",
        "additions": 0,
        "deletions": 158,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-rpc-mappings.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,158 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Check RPC argument consistency.\"\"\"\n-\n-from collections import defaultdict\n-import os\n-import re\n-import sys\n-\n-# Source files (relative to root) to scan for dispatch tables\n-SOURCES = [\n-    \"src/rpc/server.cpp\",\n-    \"src/rpc/blockchain.cpp\",\n-    \"src/rpc/mining.cpp\",\n-    \"src/rpc/misc.cpp\",\n-    \"src/rpc/net.cpp\",\n-    \"src/rpc/rawtransaction.cpp\",\n-    \"src/wallet/rpcwallet.cpp\",\n-]\n-# Source file (relative to root) containing conversion mapping\n-SOURCE_CLIENT = 'src/rpc/client.cpp'\n-# Argument names that should be ignored in consistency checks\n-IGNORE_DUMMY_ARGS = {'dummy', 'arg0', 'arg1', 'arg2', 'arg3', 'arg4', 'arg5', 'arg6', 'arg7', 'arg8', 'arg9'}\n-\n-class RPCCommand:\n-    def __init__(self, name, args):\n-        self.name = name\n-        self.args = args\n-\n-class RPCArgument:\n-    def __init__(self, names, idx):\n-        self.names = names\n-        self.idx = idx\n-        self.convert = False\n-\n-def parse_string(s):\n-    assert s[0] == '\"'\n-    assert s[-1] == '\"'\n-    return s[1:-1]\n-\n-def process_commands(fname):\n-    \"\"\"Find and parse dispatch table in implementation file `fname`.\"\"\"\n-    cmds = []\n-    in_rpcs = False\n-    with open(fname, \"r\") as f:\n-        for line in f:\n-            line = line.rstrip()\n-            if not in_rpcs:\n-                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n-                    in_rpcs = True\n-            else:\n-                if line.startswith('};'):\n-                    in_rpcs = False\n-                elif '{' in line and '\"' in line:\n-                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n-                    assert m, 'No match to table expression: %s' % line\n-                    name = parse_string(m.group(2))\n-                    args_str = m.group(4).strip()\n-                    if args_str:\n-                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx, x in enumerate(args_str.split(','))]\n-                    else:\n-                        args = []\n-                    cmds.append(RPCCommand(name, args))\n-    assert not in_rpcs and cmds, \"Something went wrong with parsing the C++ file: update the regexps\"\n-    return cmds\n-\n-def process_mapping(fname):\n-    \"\"\"Find and parse conversion table in implementation file `fname`.\"\"\"\n-    cmds = []\n-    in_rpcs = False\n-    with open(fname, \"r\") as f:\n-        for line in f:\n-            line = line.rstrip()\n-            if not in_rpcs:\n-                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n-                    in_rpcs = True\n-            else:\n-                if line.startswith('};'):\n-                    in_rpcs = False\n-                elif '{' in line and '\"' in line:\n-                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n-                    assert m, 'No match to table expression: %s' % line\n-                    name = parse_string(m.group(1))\n-                    idx = int(m.group(2))\n-                    argname = parse_string(m.group(3))\n-                    cmds.append((name, idx, argname))\n-    assert not in_rpcs and cmds\n-    return cmds\n-\n-def main():\n-    root = sys.argv[1]\n-\n-    # Get all commands from dispatch tables\n-    cmds = []\n-    for fname in SOURCES:\n-        cmds += process_commands(os.path.join(root, fname))\n-\n-    cmds_by_name = {}\n-    for cmd in cmds:\n-        cmds_by_name[cmd.name] = cmd\n-\n-    # Get current convert mapping for client\n-    client = SOURCE_CLIENT\n-    mapping = set(process_mapping(os.path.join(root, client)))\n-\n-    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n-\n-    # Check mapping consistency\n-    errors = 0\n-    for (cmdname, argidx, argname) in mapping:\n-        try:\n-            rargnames = cmds_by_name[cmdname].args[argidx].names\n-        except IndexError:\n-            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n-            errors += 1\n-            continue\n-        if argname not in rargnames:\n-            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n-            errors += 1\n-\n-    # Check for conflicts in vRPCConvertParams conversion\n-    # All aliases for an argument must either be present in the\n-    # conversion table, or not. Anything in between means an oversight\n-    # and some aliases won't work.\n-    for cmd in cmds:\n-        for arg in cmd.args:\n-            convert = [((cmd.name, arg.idx, argname) in mapping) for argname in arg.names]\n-            if any(convert) != all(convert):\n-                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n-                errors += 1\n-            arg.convert = all(convert)\n-\n-    # Check for conversion difference by argument name.\n-    # It is preferable for API consistency that arguments with the same name\n-    # have the same conversion, so bin by argument name.\n-    all_methods_by_argname = defaultdict(list)\n-    converts_by_argname = defaultdict(list)\n-    for cmd in cmds:\n-        for arg in cmd.args:\n-            for argname in arg.names:\n-                all_methods_by_argname[argname].append(cmd.name)\n-                converts_by_argname[argname].append(arg.convert)\n-\n-    for argname, convert in converts_by_argname.items():\n-        if all(convert) != any(convert):\n-            if argname in IGNORE_DUMMY_ARGS:\n-                # these are testing or dummy, don't warn for them\n-                continue\n-            print('WARNING: conversion mismatch for argument named %s (%s)' %\n-                  (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n-\n-    sys.exit(errors > 0)\n-\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "7ea49b65e1776a00084375c5271a7d1d7ec4d477",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "removed",
        "additions": 0,
        "deletions": 164,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,164 +0,0 @@\n-#!/usr/bin/env python\n-#\n-#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n-#\n-#                     The LLVM Compiler Infrastructure\n-#\n-# This file is distributed under the University of Illinois Open Source\n-# License.\n-#\n-#           ============================================================\n-#\n-# University of Illinois/NCSA\n-# Open Source License\n-#\n-# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n-# All rights reserved.\n-#\n-# Developed by:\n-#\n-#     LLVM Team\n-#\n-#     University of Illinois at Urbana-Champaign\n-#\n-#     http://llvm.org\n-#\n-# Permission is hereby granted, free of charge, to any person obtaining a copy of\n-# this software and associated documentation files (the \"Software\"), to deal with\n-# the Software without restriction, including without limitation the rights to\n-# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n-# of the Software, and to permit persons to whom the Software is furnished to do\n-# so, subject to the following conditions:\n-#\n-#     * Redistributions of source code must retain the above copyright notice,\n-#       this list of conditions and the following disclaimers.\n-#\n-#     * Redistributions in binary form must reproduce the above copyright notice,\n-#       this list of conditions and the following disclaimers in the\n-#       documentation and/or other materials provided with the distribution.\n-#\n-#     * Neither the names of the LLVM Team, University of Illinois at\n-#       Urbana-Champaign, nor the names of its contributors may be used to\n-#       endorse or promote products derived from this Software without specific\n-#       prior written permission.\n-#\n-# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n-# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n-# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n-# SOFTWARE.\n-#\n-#           ============================================================\n-#\n-#===------------------------------------------------------------------------===#\n-\n-r\"\"\"\n-ClangFormat Diff Reformatter\n-============================\n-\n-This script reads input from a unified diff and reformats all the changed\n-lines. This is useful to reformat all the lines touched by a specific patch.\n-Example usage for git/svn users:\n-\n-  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n-  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n-\n-\"\"\"\n-\n-import argparse\n-import difflib\n-import re\n-import string\n-import subprocess\n-import StringIO\n-import sys\n-\n-\n-# Change this to the full path if clang-format is not on the path.\n-binary = 'clang-format'\n-\n-\n-def main():\n-  parser = argparse.ArgumentParser(description=\n-                                   'Reformat changed lines in diff. Without -i '\n-                                   'option just output the diff that would be '\n-                                   'introduced.')\n-  parser.add_argument('-i', action='store_true', default=False,\n-                      help='apply edits to files instead of displaying a diff')\n-  parser.add_argument('-p', metavar='NUM', default=0,\n-                      help='strip the smallest prefix containing P slashes')\n-  parser.add_argument('-regex', metavar='PATTERN', default=None,\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case sensitive, overrides -iregex)')\n-  parser.add_argument('-iregex', metavar='PATTERN', default=\n-                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n-                      r'|protodevel|java)',\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case insensitive, overridden by -regex)')\n-  parser.add_argument('-sort-includes', action='store_true', default=False,\n-                      help='let clang-format sort include blocks')\n-  parser.add_argument('-v', '--verbose', action='store_true',\n-                      help='be more verbose, ineffective without -i')\n-  args = parser.parse_args()\n-\n-  # Extract changed lines for each file.\n-  filename = None\n-  lines_by_file = {}\n-  for line in sys.stdin:\n-    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n-    if match:\n-      filename = match.group(2)\n-    if filename == None:\n-      continue\n-\n-    if args.regex is not None:\n-      if not re.match('^%s$' % args.regex, filename):\n-        continue\n-    else:\n-      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n-        continue\n-\n-    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n-    if match:\n-      start_line = int(match.group(1))\n-      line_count = 1\n-      if match.group(3):\n-        line_count = int(match.group(3))\n-      if line_count == 0:\n-        continue\n-      end_line = start_line + line_count - 1\n-      lines_by_file.setdefault(filename, []).extend(\n-          ['-lines', str(start_line) + ':' + str(end_line)])\n-\n-  # Reformat files containing changes in place.\n-  for filename, lines in lines_by_file.iteritems():\n-    if args.i and args.verbose:\n-      print 'Formatting', filename\n-    command = [binary, filename]\n-    if args.i:\n-      command.append('-i')\n-    if args.sort_includes:\n-      command.append('-sort-includes')\n-    command.extend(lines)\n-    command.extend(['-style=file', '-fallback-style=none'])\n-    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n-                         stderr=None, stdin=subprocess.PIPE)\n-    stdout, stderr = p.communicate()\n-    if p.returncode != 0:\n-      sys.exit(p.returncode)\n-\n-    if not args.i:\n-      with open(filename) as f:\n-        code = f.readlines()\n-      formatted_code = StringIO.StringIO(stdout).readlines()\n-      diff = difflib.unified_diff(code, formatted_code,\n-                                  filename, filename,\n-                                  '(before formatting)', '(after formatting)')\n-      diff_string = string.join(diff, '')\n-      if len(diff_string) > 0:\n-        sys.stdout.write(diff_string)\n-\n-if __name__ == '__main__':\n-  main()"
      },
      {
        "sha": "1c9dbc7f68ff5355fa02848dd6c85d659cf8d409",
        "filename": "contrib/devtools/commit-script-check.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/commit-script-check.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,46 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This simple script checks for commits beginning with: scripted-diff:\n-# If found, looks for a script between the lines -BEGIN VERIFY SCRIPT- and\n-# -END VERIFY SCRIPT-. If no ending is found, it reads until the end of the\n-# commit message.\n-\n-# The resulting script should exactly transform the previous commit into the current\n-# one. Any remaining diff signals an error.\n-\n-if test \"x$1\" = \"x\"; then\n-    echo \"Usage: $0 <commit>...\"\n-    exit 1\n-fi\n-\n-RET=0\n-PREV_BRANCH=`git name-rev --name-only HEAD`\n-PREV_HEAD=`git rev-parse HEAD`\n-for i in `git rev-list --reverse $1`; do\n-    if git rev-list -n 1 --pretty=\"%s\" $i | grep -q \"^scripted-diff:\"; then\n-        git checkout --quiet $i^ || exit\n-        SCRIPT=\"`git rev-list --format=%b -n1 $i | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d'`\"\n-        if test \"x$SCRIPT\" = \"x\"; then\n-            echo \"Error: missing script for: $i\"\n-            echo \"Failed\"\n-            RET=1\n-        else\n-            echo \"Running script for: $i\"\n-            echo \"$SCRIPT\"\n-            eval \"$SCRIPT\"\n-            git --no-pager diff --exit-code $i && echo \"OK\" || (echo \"Failed\"; false) || RET=1\n-        fi\n-        git reset --quiet --hard HEAD\n-     else\n-        if git rev-list \"--format=%b\" -n1 $i | grep -q '^-\\(BEGIN\\|END\\)[ a-zA-Z]*-$'; then\n-            echo \"Error: script block marker but no scripted-diff in title\"\n-            echo \"Failed\"\n-            RET=1\n-        fi\n-    fi\n-done\n-git checkout --quiet $PREV_BRANCH 2>/dev/null || git checkout --quiet $PREV_HEAD\n-exit $RET"
      },
      {
        "sha": "c817e794b91bdada6c4111435ba6190f23723344",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "removed",
        "additions": 0,
        "deletions": 612,
        "changes": 612,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,612 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import re\n-import fnmatch\n-import sys\n-import subprocess\n-import datetime\n-import os\n-\n-################################################################################\n-# file filtering\n-################################################################################\n-\n-EXCLUDE = [\n-    # libsecp256k1:\n-    'src/secp256k1/include/secp256k1.h',\n-    'src/secp256k1/include/secp256k1_ecdh.h',\n-    'src/secp256k1/include/secp256k1_recovery.h',\n-    'src/secp256k1/include/secp256k1_schnorr.h',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h',\n-    # univalue:\n-    'src/univalue/test/object.cpp',\n-    'src/univalue/lib/univalue_escapes.h',\n-    # auto generated:\n-    'src/qt/bitcoinstrings.cpp',\n-    'src/chainparamsseeds.h',\n-    # other external copyrights:\n-    'src/tinyformat.h',\n-    'src/leveldb/util/env_win.cc',\n-    'src/crypto/ctaes/bench.c',\n-    'test/functional/test_framework/bignum.py',\n-    # python init:\n-    '*__init__.py',\n-]\n-EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n-\n-INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.py']\n-INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n-\n-def applies_to_file(filename):\n-    return ((EXCLUDE_COMPILED.match(filename) is None) and\n-            (INCLUDE_COMPILED.match(filename) is not None))\n-\n-################################################################################\n-# obtain list of files in repo according to INCLUDE and EXCLUDE\n-################################################################################\n-\n-GIT_LS_CMD = 'git ls-files'\n-\n-def call_git_ls():\n-    out = subprocess.check_output(GIT_LS_CMD.split(' '))\n-    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n-\n-def get_filenames_to_examine():\n-    filenames = call_git_ls()\n-    return sorted([filename for filename in filenames if\n-                   applies_to_file(filename)])\n-\n-################################################################################\n-# define and compile regexes for the patterns we are looking for\n-################################################################################\n-\n-\n-COPYRIGHT_WITH_C = 'Copyright \\(c\\)'\n-COPYRIGHT_WITHOUT_C = 'Copyright'\n-ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n-\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n-ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n-ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n-                                                ANY_YEAR_STYLE))\n-\n-ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n-\n-def compile_copyright_regex(copyright_style, year_style, name):\n-    return re.compile('%s %s %s' % (copyright_style, year_style, name))\n-\n-EXPECTED_HOLDER_NAMES = [\n-    \"Satoshi Nakamoto\\n\",\n-    \"The Bitcoin Core developers\\n\",\n-    \"The Bitcoin Core developers \\n\",\n-    \"Bitcoin Core Developers\\n\",\n-    \"the Bitcoin Core developers\\n\",\n-    \"The Bitcoin developers\\n\",\n-    \"The LevelDB Authors\\. All rights reserved\\.\\n\",\n-    \"BitPay Inc\\.\\n\",\n-    \"BitPay, Inc\\.\\n\",\n-    \"University of Illinois at Urbana-Champaign\\.\\n\",\n-    \"MarcoFalke\\n\",\n-    \"Pieter Wuille\\n\",\n-    \"Pieter Wuille +\\*\\n\",\n-    \"Pieter Wuille, Gregory Maxwell +\\*\\n\",\n-    \"Pieter Wuille, Andrew Poelstra +\\*\\n\",\n-    \"Andrew Poelstra +\\*\\n\",\n-    \"Wladimir J. van der Laan\\n\",\n-    \"Jeff Garzik\\n\",\n-    \"Diederik Huys, Pieter Wuille +\\*\\n\",\n-    \"Thomas Daede, Cory Fields +\\*\\n\",\n-    \"Jan-Klaas Kollhof\\n\",\n-    \"Sam Rushing\\n\",\n-    \"ArtForz -- public domain half-a-node\\n\",\n-]\n-\n-DOMINANT_STYLE_COMPILED = {}\n-YEAR_LIST_STYLE_COMPILED = {}\n-WITHOUT_C_STYLE_COMPILED = {}\n-\n-for holder_name in EXPECTED_HOLDER_NAMES:\n-    DOMINANT_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n-    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n-    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n-                                holder_name))\n-\n-################################################################################\n-# search file contents for copyright message of particular category\n-################################################################################\n-\n-def get_count_of_copyrights_of_any_style_any_holder(contents):\n-    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n-\n-def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n-    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n-    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n-    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-################################################################################\n-# get file info\n-################################################################################\n-\n-def read_file(filename):\n-    return open(os.path.abspath(filename), 'r').read()\n-\n-def gather_file_info(filename):\n-    info = {}\n-    info['filename'] = filename\n-    c = read_file(filename)\n-    info['contents'] = c\n-\n-    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n-\n-    info['classified_copyrights'] = 0\n-    info['dominant_style'] = {}\n-    info['year_list_style'] = {}\n-    info['without_c_style'] = {}\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        has_dominant_style = (\n-            file_has_dominant_style_copyright_for_holder(c, holder_name))\n-        has_year_list_style = (\n-            file_has_year_list_style_copyright_for_holder(c, holder_name))\n-        has_without_c_style = (\n-            file_has_without_c_style_copyright_for_holder(c, holder_name))\n-        info['dominant_style'][holder_name] = has_dominant_style\n-        info['year_list_style'][holder_name] = has_year_list_style\n-        info['without_c_style'][holder_name] = has_without_c_style\n-        if has_dominant_style or has_year_list_style or has_without_c_style:\n-            info['classified_copyrights'] = info['classified_copyrights'] + 1\n-    return info\n-\n-################################################################################\n-# report execution\n-################################################################################\n-\n-SEPARATOR = '-'.join(['' for _ in range(80)])\n-\n-def print_filenames(filenames, verbose):\n-    if not verbose:\n-        return\n-    for filename in filenames:\n-        print(\"\\t%s\" % filename)\n-\n-def print_report(file_infos, verbose):\n-    print(SEPARATOR)\n-    examined = [i['filename'] for i in file_infos]\n-    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n-          len(examined))\n-    print_filenames(examined, verbose)\n-\n-    print(SEPARATOR)\n-    print('')\n-    zero_copyrights = [i['filename'] for i in file_infos if\n-                       i['all_copyrights'] == 0]\n-    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n-    print_filenames(zero_copyrights, verbose)\n-    one_copyright = [i['filename'] for i in file_infos if\n-                     i['all_copyrights'] == 1]\n-    print(\"%4d with one copyright\" % len(one_copyright))\n-    print_filenames(one_copyright, verbose)\n-    two_copyrights = [i['filename'] for i in file_infos if\n-                      i['all_copyrights'] == 2]\n-    print(\"%4d with two copyrights\" % len(two_copyrights))\n-    print_filenames(two_copyrights, verbose)\n-    three_copyrights = [i['filename'] for i in file_infos if\n-                        i['all_copyrights'] == 3]\n-    print(\"%4d with three copyrights\" % len(three_copyrights))\n-    print_filenames(three_copyrights, verbose)\n-    four_or_more_copyrights = [i['filename'] for i in file_infos if\n-                               i['all_copyrights'] >= 4]\n-    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n-    print_filenames(four_or_more_copyrights, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        dominant_style = [i['filename'] for i in file_infos if\n-                          i['dominant_style'][holder_name]]\n-        if len(dominant_style) > 0:\n-            print(\"%4d with '%s'\" % (len(dominant_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(dominant_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year1>, <year2>, ...\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        year_list_style = [i['filename'] for i in file_infos if\n-                           i['year_list_style'][holder_name]]\n-        if len(year_list_style) > 0:\n-            print(\"%4d with '%s'\" % (len(year_list_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(year_list_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n-          '\"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        without_c_style = [i['filename'] for i in file_infos if\n-                           i['without_c_style'][holder_name]]\n-        if len(without_c_style) > 0:\n-            print(\"%4d with '%s'\" % (len(without_c_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(without_c_style, verbose)\n-\n-    print('')\n-    print(SEPARATOR)\n-\n-    unclassified_copyrights = [i['filename'] for i in file_infos if\n-                               i['classified_copyrights'] < i['all_copyrights']]\n-    print(\"%d with unexpected copyright holder names\" %\n-          len(unclassified_copyrights))\n-    print_filenames(unclassified_copyrights, verbose)\n-    print(SEPARATOR)\n-\n-def exec_report(base_directory, verbose):\n-    original_cwd = os.getcwd()\n-    os.chdir(base_directory)\n-    filenames = get_filenames_to_examine()\n-    file_infos = [gather_file_info(f) for f in filenames]\n-    print_report(file_infos, verbose)\n-    os.chdir(original_cwd)\n-\n-################################################################################\n-# report cmd\n-################################################################################\n-\n-REPORT_USAGE = \"\"\"\n-Produces a report of all copyright header notices found inside the source files\n-of a repository.\n-\n-Usage:\n-    $ ./copyright_header.py report <base_directory> [verbose]\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-    [verbose] - Includes a list of every file of each subcategory in the report.\n-\"\"\"\n-\n-def report_cmd(argv):\n-    if len(argv) == 2:\n-        sys.exit(REPORT_USAGE)\n-        \n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n-\n-    if len(argv) == 3:\n-        verbose = False\n-    elif argv[3] == 'verbose':\n-        verbose = True\n-    else:\n-        sys.exit(\"*** unknown argument: %s\" % argv[2])\n-\n-    exec_report(base_directory, verbose)\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n-\n-def call_git_log(filename):\n-    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n-    return out.decode(\"utf-8\").split('\\n')\n-\n-def get_git_change_years(filename):\n-    git_log_lines = call_git_log(filename)\n-    if len(git_log_lines) == 0:\n-        return [datetime.date.today().year]\n-    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n-    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n-\n-def get_most_recent_git_change_year(filename):\n-    return max(get_git_change_years(filename))\n-\n-################################################################################\n-# read and write to file\n-################################################################################\n-\n-def read_file_lines(filename):\n-    f = open(os.path.abspath(filename), 'r')\n-    file_lines = f.readlines()\n-    f.close()\n-    return file_lines\n-\n-def write_file_lines(filename, file_lines):\n-    f = open(os.path.abspath(filename), 'w')\n-    f.write(''.join(file_lines))\n-    f.close()\n-\n-################################################################################\n-# update header years execution\n-################################################################################\n-\n-COPYRIGHT = 'Copyright \\(c\\)'\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-HOLDER = 'The Bitcoin Core developers'\n-UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n-\n-def get_updatable_copyright_line(file_lines):\n-    index = 0\n-    for line in file_lines:\n-        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n-            return index, line\n-        index = index + 1\n-    return None, None\n-\n-def parse_year_range(year_range):\n-    year_split = year_range.split('-')\n-    start_year = year_split[0]\n-    if len(year_split) == 1:\n-        return start_year, start_year\n-    return start_year, year_split[1]\n-\n-def year_range_to_str(start_year, end_year):\n-    if start_year == end_year:\n-        return start_year\n-    return \"%s-%s\" % (start_year, end_year)\n-\n-def create_updated_copyright_line(line, last_git_change_year):\n-    copyright_splitter = 'Copyright (c) '\n-    copyright_split = line.split(copyright_splitter)\n-    # Preserve characters on line that are ahead of the start of the copyright\n-    # notice - they are part of the comment block and vary from file-to-file.\n-    before_copyright = copyright_split[0]\n-    after_copyright = copyright_split[1]\n-\n-    space_split = after_copyright.split(' ')\n-    year_range = space_split[0]\n-    start_year, end_year = parse_year_range(year_range)\n-    if end_year == last_git_change_year:\n-        return line\n-    return (before_copyright + copyright_splitter +\n-            year_range_to_str(start_year, last_git_change_year) + ' ' +\n-            ' '.join(space_split[1:]))\n-\n-def update_updatable_copyright(filename):\n-    file_lines = read_file_lines(filename)\n-    index, line = get_updatable_copyright_line(file_lines)\n-    if not line:\n-        print_file_action_message(filename, \"No updatable copyright.\")\n-        return\n-    last_git_change_year = get_most_recent_git_change_year(filename)\n-    new_line = create_updated_copyright_line(line, last_git_change_year)\n-    if line == new_line:\n-        print_file_action_message(filename, \"Copyright up-to-date.\")\n-        return\n-    file_lines[index] = new_line\n-    write_file_lines(filename, file_lines)\n-    print_file_action_message(filename,\n-                              \"Copyright updated! -> %s\" % last_git_change_year)\n-\n-def exec_update_header_year(base_directory):\n-    original_cwd = os.getcwd()\n-    os.chdir(base_directory)\n-    for filename in get_filenames_to_examine():\n-        update_updatable_copyright(filename)\n-    os.chdir(original_cwd)\n-\n-################################################################################\n-# update cmd\n-################################################################################\n-\n-UPDATE_USAGE = \"\"\"\n-Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n-changed in a year more recent than is listed. For example:\n-\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where <lastModifiedYear> is obtained from the 'git log' history.\n-\n-This subcommand also handles copyright headers that have only a single year. In those cases:\n-\n-// Copyright (c) <year> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where the update is appropriate.\n-\n-Usage:\n-    $ ./copyright_header.py update <base_directory>\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-\"\"\"\n-\n-def print_file_action_message(filename, action):\n-    print(\"%-52s %s\" % (filename, action))\n-\n-def update_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(UPDATE_USAGE)\n-    \n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n-    exec_update_header_year(base_directory)\n-\n-################################################################################\n-# inserted copyright header format\n-################################################################################\n-\n-def get_header_lines(header, start_year, end_year):\n-    lines = header.split('\\n')[1:-1]\n-    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n-    return [line + '\\n' for line in lines]\n-\n-CPP_HEADER = '''\n-// Copyright (c) %s The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_cpp_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n-\n-PYTHON_HEADER = '''\n-# Copyright (c) %s The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_python_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(PYTHON_HEADER, start_year, end_year))\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-def get_git_change_year_range(filename):\n-    years = get_git_change_years(filename)\n-    return min(years), max(years)\n-\n-################################################################################\n-# check for existing core copyright\n-################################################################################\n-\n-def file_already_has_core_copyright(file_lines):\n-    index, _ = get_updatable_copyright_line(file_lines)\n-    return index != None\n-\n-################################################################################\n-# insert header execution\n-################################################################################\n-\n-def file_has_hashbang(file_lines):\n-    if len(file_lines) < 1:\n-        return False\n-    if len(file_lines[0]) <= 2:\n-        return False\n-    return file_lines[0][:2] == '#!'\n-\n-def insert_python_header(filename, file_lines, start_year, end_year):\n-    if file_has_hashbang(file_lines):\n-        insert_idx = 1 \n-    else:\n-        insert_idx = 0\n-    header_lines = get_python_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(insert_idx, line)\n-    write_file_lines(filename, file_lines)\n-\n-def insert_cpp_header(filename, file_lines, start_year, end_year):\n-    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(0, line)\n-    write_file_lines(filename, file_lines)\n-\n-def exec_insert_header(filename, style):\n-    file_lines = read_file_lines(filename)\n-    if file_already_has_core_copyright(file_lines):\n-        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n-                 % (filename))\n-    start_year, end_year = get_git_change_year_range(filename)\n-    if style == 'python':\n-        insert_python_header(filename, file_lines, start_year, end_year)\n-    else:\n-        insert_cpp_header(filename, file_lines, start_year, end_year)\n-\n-################################################################################\n-# insert cmd\n-################################################################################\n-\n-INSERT_USAGE = \"\"\"\n-Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has a '#!' starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be:\n-\n-\"<year_introduced>-<current_year>\"\n-\n-where <year_introduced> is according to the 'git log' history. If\n-<year_introduced> is equal to <current_year>, the date will be set to be:\n-\n-\"<current_year>\"\n-\n-If the file already has a copyright for \"The Bitcoin Core developers\", the\n-script will exit.\n-\n-Usage:\n-    $ ./copyright_header.py insert <file>\n-\n-Arguments:\n-    <file> - A source file in the bitcoin repository.\n-\"\"\"\n-\n-def insert_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(INSERT_USAGE)\n-\n-    filename = argv[2]\n-    if not os.path.isfile(filename):\n-        sys.exit(\"*** bad filename: %s\" % filename)\n-    _, extension = os.path.splitext(filename)\n-    if extension not in ['.h', '.cpp', '.cc', '.c', '.py']:\n-        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n-   \n-    if extension == '.py': \n-        style = 'python'\n-    else:\n-        style = 'cpp'\n-    exec_insert_header(filename, style)\n-         \n-################################################################################\n-# UI\n-################################################################################\n-\n-USAGE = \"\"\"\n-copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n-Core developers' in repository source files.\n-\n-Usage:\n-    $ ./copyright_header <subcommand>\n-\n-Subcommands:\n-    report\n-    update\n-    insert\n-\n-To see subcommand usage, run them without arguments.\n-\"\"\"\n-\n-SUBCOMMANDS = ['report', 'update', 'insert']\n-\n-if __name__ == \"__main__\":\n-    if len(sys.argv) == 1:\n-        sys.exit(USAGE)\n-    subcommand = sys.argv[1]\n-    if subcommand not in SUBCOMMANDS:\n-        sys.exit(USAGE)\n-    if subcommand == 'report':\n-        report_cmd(sys.argv)\n-    elif subcommand == 'update':\n-        update_cmd(sys.argv)\n-    elif subcommand == 'insert':\n-        insert_cmd(sys.argv)"
      },
      {
        "sha": "925d6a6252a5c06b59468233cd018ff3be204b2b",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,29 +0,0 @@\n-#!/bin/bash\n-\n-TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n-SRCDIR=${SRCDIR:-$TOPDIR/src}\n-MANDIR=${MANDIR:-$TOPDIR/doc/man}\n-\n-BITCOIND=${BITCOIND:-$SRCDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$SRCDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$SRCDIR/bitcoin-tx}\n-BITCOINQT=${BITCOINQT:-$SRCDIR/qt/bitcoin-qt}\n-\n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n-\n-# The autodetected version git tag can screw up manpage output a little bit\n-BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n-\n-# Create a footer file with copyright content.\n-# This gets autodetected fine for bitcoind if --version-string is not set,\n-# but has different outcomes for bitcoin-qt and bitcoin-cli.\n-echo \"[COPYRIGHT]\" > footer.h2m\n-$BITCOIND --version | sed -n '1!p' >> footer.h2m\n-\n-for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $BITCOINQT; do\n-  cmdname=\"${cmd##*/}\"\n-  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n-  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n-done\n-\n-rm -f footer.h2m"
      },
      {
        "sha": "184951715e99ee051cea0f73535330f5033ee80f",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 94,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,94 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-DIR=\"$1\"\n-COMMIT=\"$2\"\n-if [ -z \"$COMMIT\" ]; then\n-    COMMIT=HEAD\n-fi\n-\n-# Taken from git-subtree (Copyright (C) 2009 Avery Pennarun <apenwarr@gmail.com>)\n-find_latest_squash()\n-{\n-\tdir=\"$1\"\n-\tsq=\n-\tmain=\n-\tsub=\n-\tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n-\t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n-\twhile read a b _; do\n-\t\tcase \"$a\" in\n-\t\t\tSTART) sq=\"$b\" ;;\n-\t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n-\t\t\tgit-subtree-split:) sub=\"$b\" ;;\n-\t\t\tEND)\n-\t\t\t\tif [ -n \"$sub\" ]; then\n-\t\t\t\t\tif [ -n \"$main\" ]; then\n-\t\t\t\t\t\t# a rejoin commit?\n-\t\t\t\t\t\t# Pretend its sub was a squash.\n-\t\t\t\t\t\tsq=\"$sub\"\n-\t\t\t\t\tfi\n-\t\t\t\t\techo \"$sq\" \"$sub\"\n-\t\t\t\t\tbreak\n-\t\t\t\tfi\n-\t\t\t\tsq=\n-\t\t\t\tmain=\n-\t\t\t\tsub=\n-\t\t\t\t;;\n-\t\tesac\n-\tdone\n-}\n-\n-# find latest subtree update\n-latest_squash=\"$(find_latest_squash \"$DIR\")\"\n-if [ -z \"$latest_squash\" ]; then\n-    echo \"ERROR: $DIR is not a subtree\" >&2\n-    exit 2\n-fi\n-set $latest_squash\n-old=$1\n-rev=$2\n-\n-# get the tree in the current commit\n-tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n-if [ -z \"$tree_actual\" ]; then\n-    echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n-    exit 1\n-fi\n-set $tree_actual\n-tree_actual_type=$2\n-tree_actual_tree=$3\n-echo \"$DIR in $COMMIT currently refers to $tree_actual_type $tree_actual_tree\"\n-if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n-    echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n-    exit 1\n-fi\n-\n-# get the tree at the time of the last subtree update\n-tree_commit=$(git show -s --format=\"%T\" $old)\n-echo \"$DIR in $COMMIT was last updated in commit $old (tree $tree_commit)\"\n-\n-# ... and compare the actual tree with it\n-if [ \"$tree_actual_tree\" != \"$tree_commit\" ]; then\n-    git diff $tree_commit $tree_actual_tree >&2\n-    echo \"FAIL: subtree directory was touched without subtree merge\" >&2\n-    exit 1\n-fi\n-\n-# get the tree in the subtree commit referred to\n-if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n-    echo \"subtree commit $rev unavailable: cannot compare\" >&2\n-    exit\n-fi\n-tree_subtree=$(git show -s --format=\"%T\" $rev)\n-echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n-\n-# ... and compare the actual tree with it\n-if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n-    echo \"FAIL: subtree update commit differs from upstream tree!\" >&2\n-    exit 1\n-fi\n-\n-echo \"GOOD\""
      },
      {
        "sha": "2941d2cb6d7e783dd480711567238438fa2bc24c",
        "filename": "contrib/devtools/github-merge.py",
        "status": "removed",
        "additions": 0,
        "deletions": 330,
        "changes": 330,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,330 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2017 Bitcoin Core Developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-from __future__ import division,print_function,unicode_literals\n-import os\n-from sys import stdin,stdout,stderr\n-import argparse\n-import hashlib\n-import subprocess\n-import sys\n-import json,codecs\n-try:\n-    from urllib.request import Request,urlopen\n-except:\n-    from urllib2 import Request,urlopen\n-\n-# External tools (can be overridden using environment)\n-GIT = os.getenv('GIT','git')\n-BASH = os.getenv('BASH','bash')\n-\n-# OS specific configuration for terminal attributes\n-ATTR_RESET = ''\n-ATTR_PR = ''\n-COMMIT_FORMAT = '%h %s (%an)%d'\n-if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n-    ATTR_RESET = '\\033[0m'\n-    ATTR_PR = '\\033[1;36m'\n-    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n-\n-def git_config_get(option, default=None):\n-    '''\n-    Get named configuration option from git repository.\n-    '''\n-    try:\n-        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n-    except subprocess.CalledProcessError as e:\n-        return default\n-\n-def retrieve_pr_info(repo,pull):\n-    '''\n-    Retrieve pull request information from github.\n-    Return None if no title can be found, or an error happens.\n-    '''\n-    try:\n-        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n-        result = urlopen(req)\n-        reader = codecs.getreader('utf-8')\n-        obj = json.load(reader(result))\n-        return obj\n-    except Exception as e:\n-        print('Warning: unable to retrieve pull information from github: %s' % e)\n-        return None\n-\n-def ask_prompt(text):\n-    print(text,end=\" \",file=stderr)\n-    stderr.flush()\n-    reply = stdin.readline().rstrip()\n-    print(\"\",file=stderr)\n-    return reply\n-\n-def get_symlink_files():\n-    files = sorted(subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', 'HEAD']).splitlines())\n-    ret = []\n-    for f in files:\n-        if (int(f.decode('utf-8').split(\" \")[0], 8) & 0o170000) == 0o120000:\n-            ret.append(f.decode('utf-8').split(\"\\t\")[1])\n-    return ret\n-\n-def tree_sha512sum(commit='HEAD'):\n-    # request metadata for entire tree, recursively\n-    files = []\n-    blob_by_name = {}\n-    for line in subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', commit]).splitlines():\n-        name_sep = line.index(b'\\t')\n-        metadata = line[:name_sep].split() # perms, 'blob', blobid\n-        assert(metadata[1] == b'blob')\n-        name = line[name_sep+1:]\n-        files.append(name)\n-        blob_by_name[name] = metadata[2]\n-\n-    files.sort()\n-    # open connection to git-cat-file in batch mode to request data for all blobs\n-    # this is much faster than launching it per file\n-    p = subprocess.Popen([GIT, 'cat-file', '--batch'], stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n-    overall = hashlib.sha512()\n-    for f in files:\n-        blob = blob_by_name[f]\n-        # request blob\n-        p.stdin.write(blob + b'\\n')\n-        p.stdin.flush()\n-        # read header: blob, \"blob\", size\n-        reply = p.stdout.readline().split()\n-        assert(reply[0] == blob and reply[1] == b'blob')\n-        size = int(reply[2])\n-        # hash the blob data\n-        intern = hashlib.sha512()\n-        ptr = 0\n-        while ptr < size:\n-            bs = min(65536, size - ptr)\n-            piece = p.stdout.read(bs)\n-            if len(piece) == bs:\n-                intern.update(piece)\n-            else:\n-                raise IOError('Premature EOF reading git cat-file output')\n-            ptr += bs\n-        dig = intern.hexdigest()\n-        assert(p.stdout.read(1) == b'\\n') # ignore LF that follows blob data\n-        # update overall hash with file hash\n-        overall.update(dig.encode(\"utf-8\"))\n-        overall.update(\"  \".encode(\"utf-8\"))\n-        overall.update(f)\n-        overall.update(\"\\n\".encode(\"utf-8\"))\n-    p.stdin.close()\n-    if p.wait():\n-        raise IOError('Non-zero return value executing git cat-file')\n-    return overall.hexdigest()\n-\n-def print_merge_details(pull, title, branch, base_branch, head_branch):\n-    print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n-    subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n-\n-def parse_arguments():\n-    epilog = '''\n-        In addition, you can set the following git configuration variables:\n-        githubmerge.repository (mandatory),\n-        user.signingkey (mandatory),\n-        githubmerge.host (default: git@github.com),\n-        githubmerge.branch (no default),\n-        githubmerge.testcmd (default: none).\n-    '''\n-    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n-            epilog=epilog)\n-    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n-        help='Pull request ID to merge')\n-    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n-        default=None, help='Branch to merge against (default: githubmerge.branch setting, or base branch for pull, or \\'master\\')')\n-    return parser.parse_args()\n-\n-def main():\n-    # Extract settings from git repo\n-    repo = git_config_get('githubmerge.repository')\n-    host = git_config_get('githubmerge.host','git@github.com')\n-    opt_branch = git_config_get('githubmerge.branch',None)\n-    testcmd = git_config_get('githubmerge.testcmd')\n-    signingkey = git_config_get('user.signingkey')\n-    if repo is None:\n-        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n-        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        sys.exit(1)\n-    if signingkey is None:\n-        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n-        print(\"git config --global user.signingkey <key>\",file=stderr)\n-        sys.exit(1)\n-\n-    host_repo = host+\":\"+repo # shortcut for push/pull target\n-\n-    # Extract settings from command line\n-    args = parse_arguments()\n-    pull = str(args.pull[0])\n-\n-    # Receive pull information from github\n-    info = retrieve_pr_info(repo,pull)\n-    if info is None:\n-        sys.exit(1)\n-    title = info['title'].strip()\n-    body = info['body'].strip()\n-    # precedence order for destination branch argument:\n-    #   - command line argument\n-    #   - githubmerge.branch setting\n-    #   - base branch for pull (as retrieved from github)\n-    #   - 'master'\n-    branch = args.branch or opt_branch or info['base']['ref'] or 'master'\n-\n-    # Initialize source branches\n-    head_branch = 'pull/'+pull+'/head'\n-    base_branch = 'pull/'+pull+'/base'\n-    merge_branch = 'pull/'+pull+'/merge'\n-    local_merge_branch = 'pull/'+pull+'/local-merge'\n-\n-    devnull = open(os.devnull,'w')\n-    try:\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n-                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n-    subprocess.check_call([GIT,'checkout','-q',base_branch])\n-    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n-    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n-\n-    try:\n-        # Go up to the repository's root.\n-        toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n-        os.chdir(toplevel)\n-        # Create unsigned merge commit.\n-        if title:\n-            firstline = 'Merge #%s: %s' % (pull,title)\n-        else:\n-            firstline = 'Merge #%s' % (pull,)\n-        message = firstline + '\\n\\n'\n-        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n-        message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n-        try:\n-            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n-        except subprocess.CalledProcessError as e:\n-            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n-            subprocess.check_call([GIT,'merge','--abort'])\n-            sys.exit(4)\n-        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n-        if logmsg.rstrip() != firstline.rstrip():\n-            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            sys.exit(4)\n-\n-        symlink_files = get_symlink_files()\n-        for f in symlink_files:\n-            print(\"ERROR: File %s was a symlink\" % f)\n-        if len(symlink_files) > 0:\n-            sys.exit(4)\n-\n-        # Put tree SHA512 into the message\n-        try:\n-            first_sha512 = tree_sha512sum()\n-            message += '\\n\\nTree-SHA512: ' + first_sha512\n-        except subprocess.CalledProcessError as e:\n-            print(\"ERROR: Unable to compute tree hash\")\n-            sys.exit(4)\n-        try:\n-            subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n-        except subprocess.CalledProcessError as e:\n-            print(\"ERROR: Cannot update message.\", file=stderr)\n-            sys.exit(4)\n-\n-        print_merge_details(pull, title, branch, base_branch, head_branch)\n-        print()\n-\n-        # Run test command if configured.\n-        if testcmd:\n-            if subprocess.call(testcmd,shell=True):\n-                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                sys.exit(5)\n-\n-            # Show the created merge.\n-            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n-            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n-            if diff:\n-                print(\"WARNING: merge differs from github!\",file=stderr)\n-                reply = ask_prompt(\"Type 'ignore' to continue.\")\n-                if reply.lower() == 'ignore':\n-                    print(\"Difference with github ignored.\",file=stderr)\n-                else:\n-                    sys.exit(6)\n-        else:\n-            # Verify the result manually.\n-            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n-            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n-            print(\"Type 'exit' when done.\",file=stderr)\n-            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n-                os.putenv('debian_chroot',pull)\n-            subprocess.call([BASH,'-i'])\n-\n-        second_sha512 = tree_sha512sum()\n-        if first_sha512 != second_sha512:\n-            print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n-            sys.exit(8)\n-\n-        # Sign the merge commit.\n-        print_merge_details(pull, title, branch, base_branch, head_branch)\n-        while True:\n-            reply = ask_prompt(\"Type 's' to sign off on the above merge, or 'x' to reject and exit.\").lower()\n-            if reply == 's':\n-                try:\n-                    subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n-                    break\n-                except subprocess.CalledProcessError as e:\n-                    print(\"Error while signing, asking again.\",file=stderr)\n-            elif reply == 'x':\n-                print(\"Not signing off on merge, exiting.\",file=stderr)\n-                sys.exit(1)\n-\n-        # Put the result in branch.\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n-    finally:\n-        # Clean up temporary branches.\n-        subprocess.call([GIT,'checkout','-q',branch])\n-        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n-\n-    # Push the result.\n-    while True:\n-        reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s, or 'x' to exit without pushing.\" % (host_repo,branch)).lower()\n-        if reply == 'push':\n-            subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n-            break\n-        elif reply == 'x':\n-            sys.exit(1)\n-\n-if __name__ == '__main__':\n-    main()\n-"
      },
      {
        "sha": "b6d86959c669c60919a738cd74674a40c4e89118",
        "filename": "contrib/devtools/lint-all.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/lint-all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/lint-all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-all.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,22 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# This script runs all contrib/devtools/lint-*.sh files, and fails if any exit\n-# with a non-zero status code.\n-\n-set -u\n-\n-SCRIPTDIR=$(dirname \"${BASH_SOURCE[0]}\")\n-LINTALL=$(basename \"${BASH_SOURCE[0]}\")\n-\n-for f in \"${SCRIPTDIR}\"/lint-*.sh; do\n-  if [ \"$(basename \"$f\")\" != \"$LINTALL\" ]; then\n-    if ! \"$f\"; then\n-      echo \"^---- failure generated from $f\"\n-      exit 1\n-    fi\n-  fi\n-done"
      },
      {
        "sha": "9303fcc8efeee238308a634722446b34e2225259",
        "filename": "contrib/devtools/lint-python.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/lint-python.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/lint-python.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-python.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,10 +0,0 @@\n-#!/bin/sh\n-#\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check for specified flake8 warnings in python files.\n-\n-# F401: module imported but unused\n-flake8 --ignore=B,C,E,F,I,N,W --select=F401 ."
      },
      {
        "sha": "989923f31a656bd73ece41f30daeac1b70462821",
        "filename": "contrib/devtools/lint-whitespace.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 88,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/lint-whitespace.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/lint-whitespace.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-whitespace.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,88 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check for new lines in diff that introduce trailing whitespace.\n-\n-# We can't run this check unless we know the commit range for the PR.\n-if [ -z \"${TRAVIS_COMMIT_RANGE}\" ]; then\n-  echo \"Cannot run lint-whitespace.sh without commit range. To run locally, use:\"\n-  echo \"TRAVIS_COMMIT_RANGE='<commit range>' .lint-whitespace.sh\"\n-  echo \"For example:\"\n-  echo \"TRAVIS_COMMIT_RANGE='47ba2c3...ee50c9e' .lint-whitespace.sh\"\n-  exit 1\n-fi\n-\n-showdiff() {\n-  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- \".\" \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n-    echo \"Failed to get a diff\"\n-    exit 1\n-  fi\n-}\n-\n-showcodediff() {\n-  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- *.cpp *.h *.md *.py *.sh \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n-    echo \"Failed to get a diff\"\n-    exit 1\n-  fi\n-}\n-\n-RET=0\n-\n-# Check if trailing whitespace was found in the diff.\n-if showdiff | grep -E -q '^\\+.*\\s+$'; then\n-  echo \"This diff appears to have added new lines with trailing whitespace.\"\n-  echo \"The following changes were suspected:\"\n-  FILENAME=\"\"\n-  SEEN=0\n-  while read -r line; do\n-    if [[ \"$line\" =~ ^diff ]]; then\n-      FILENAME=\"$line\"\n-      SEEN=0\n-    elif [[ \"$line\" =~ ^@@ ]]; then\n-      LINENUMBER=\"$line\"\n-    else\n-      if [ \"$SEEN\" -eq 0 ]; then\n-        # The first time a file is seen with trailing whitespace, we print the\n-        # filename (preceded by a newline).\n-        echo\n-        echo \"$FILENAME\"\n-        echo \"$LINENUMBER\"\n-        SEEN=1\n-      fi\n-      echo \"$line\"\n-    fi\n-  done < <(showdiff | grep -E '^(diff --git |@@|\\+.*\\s+$)')\n-  RET=1\n-fi\n-\n-# Check if tab characters were found in the diff.\n-if showcodediff | grep -P -q '^\\+.*\\t'; then\n-  echo \"This diff appears to have added new lines with tab characters instead of spaces.\"\n-  echo \"The following changes were suspected:\"\n-  FILENAME=\"\"\n-  SEEN=0\n-  while read -r line; do\n-    if [[ \"$line\" =~ ^diff ]]; then\n-      FILENAME=\"$line\"\n-      SEEN=0\n-    elif [[ \"$line\" =~ ^@@ ]]; then\n-      LINENUMBER=\"$line\"\n-    else\n-      if [ \"$SEEN\" -eq 0 ]; then\n-        # The first time a file is seen with a tab character, we print the\n-        # filename (preceded by a newline).\n-        echo\n-        echo \"$FILENAME\"\n-        echo \"$LINENUMBER\"\n-        SEEN=1\n-      fi\n-      echo \"$line\"\n-    fi\n-  done < <(showcodediff | grep -P '^(diff --git |@@|\\+.*\\t)')\n-  RET=1\n-fi\n-\n-exit $RET"
      },
      {
        "sha": "5cb3bb6f7566565b5eb1a0cfdda6c03087ffcc70",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "removed",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,78 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2014-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n-#pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n-'''\n-import os\n-import sys\n-import subprocess\n-import hashlib\n-from PIL import Image\n-\n-def file_hash(filename):\n-    '''Return hash of raw file contents'''\n-    with open(filename, 'rb') as f:\n-        return hashlib.sha256(f.read()).hexdigest()\n-\n-def content_hash(filename):\n-    '''Return hash of RGBA contents of image'''\n-    i = Image.open(filename)\n-    i = i.convert('RGBA')\n-    data = i.tobytes()\n-    return hashlib.sha256(data).hexdigest()\n-\n-pngcrush = 'pngcrush'\n-git = 'git'\n-folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n-totalSaveBytes = 0\n-noHashChange = True\n-\n-outputArray = []\n-for folder in folders:\n-    absFolder=os.path.join(basePath, folder)\n-    for file in os.listdir(absFolder):\n-        extension = os.path.splitext(file)[1]\n-        if extension.lower() == '.png':\n-            print(\"optimizing \"+file+\"...\"),\n-            file_path = os.path.join(absFolder, file)\n-            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)}\n-            fileMetaMap['contentHashPre'] = content_hash(file_path)\n-        \n-            pngCrushOutput = \"\"\n-            try:\n-                pngCrushOutput = subprocess.check_output(\n-                        [pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n-                        stderr=subprocess.STDOUT).rstrip('\\n')\n-            except:\n-                print \"pngcrush is not installed, aborting...\"\n-                sys.exit(0)\n-        \n-            #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT):\n-                print \"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\"\n-                sys.exit(1)\n-            \n-            fileMetaMap['sha256New'] = file_hash(file_path)\n-            fileMetaMap['contentHashPost'] = content_hash(file_path)\n-\n-            if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n-                print \"Image contents of PNG file \"+file+\" before and after crushing don't match\"\n-                sys.exit(1)\n-\n-            fileMetaMap['psize'] = os.path.getsize(file_path)\n-            outputArray.append(fileMetaMap)\n-            print(\"done\\n\"),\n-\n-print \"summary:\\n+++++++++++++++++\"\n-for fileDict in outputArray:\n-    oldHash = fileDict['sha256Old']\n-    newHash = fileDict['sha256New']\n-    totalSaveBytes += fileDict['osize'] - fileDict['psize']\n-    noHashChange = noHashChange and (oldHash == newHash)\n-    print fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\"\n-    \n-print \"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\""
      },
      {
        "sha": "1613f704dfe0b1aae4c52e478bed7f63e4765271",
        "filename": "contrib/devtools/security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 216,
        "changes": 216,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,216 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2015-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Perform basic ELF security checks on a series of executables.\n-Exit status will be 0 if successful, and the program will be silent.\n-Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `readelf` (for ELF) and `objdump` (for PE).\n-'''\n-from __future__ import division,print_function,unicode_literals\n-import subprocess\n-import sys\n-import os\n-\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-NONFATAL = {'HIGH_ENTROPY_VA'} # checks which are non-fatal for now but only generate a warning\n-\n-def check_ELF_PIE(executable):\n-    '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-\n-    ok = False\n-    for line in stdout.split(b'\\n'):\n-        line = line.split()\n-        if len(line)>=2 and line[0] == b'Type:' and line[1] == b'DYN':\n-            ok = True\n-    return ok\n-\n-def get_ELF_program_headers(executable):\n-    '''Return type and flags for ELF program headers'''\n-    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    in_headers = False\n-    count = 0\n-    headers = []\n-    for line in stdout.split(b'\\n'):\n-        if line.startswith(b'Program Headers:'):\n-            in_headers = True\n-        if line == b'':\n-            in_headers = False\n-        if in_headers:\n-            if count == 1: # header line\n-                ofs_typ = line.find(b'Type')\n-                ofs_offset = line.find(b'Offset')\n-                ofs_flags = line.find(b'Flg')\n-                ofs_align = line.find(b'Align')\n-                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n-                    raise ValueError('Cannot parse elfread -lW output')\n-            elif count > 1:\n-                typ = line[ofs_typ:ofs_offset].rstrip()\n-                flags = line[ofs_flags:ofs_align].rstrip()\n-                headers.append((typ, flags))\n-            count += 1\n-    return headers\n-\n-def check_ELF_NX(executable):\n-    '''\n-    Check that no sections are writable and executable (including the stack)\n-    '''\n-    have_wx = False\n-    have_gnu_stack = False\n-    for (typ, flags) in get_ELF_program_headers(executable):\n-        if typ == b'GNU_STACK':\n-            have_gnu_stack = True\n-        if b'W' in flags and b'E' in flags: # section is both writable and executable\n-            have_wx = True\n-    return have_gnu_stack and not have_wx\n-\n-def check_ELF_RELRO(executable):\n-    '''\n-    Check for read-only relocations.\n-    GNU_RELRO program header must exist\n-    Dynamic section must have BIND_NOW flag\n-    '''\n-    have_gnu_relro = False\n-    for (typ, flags) in get_ELF_program_headers(executable):\n-        # Note: not checking flags == 'R': here as linkers set the permission differently\n-        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n-        # However, the dynamic linker need to write to this area so these are RW.\n-        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n-        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n-        if typ == b'GNU_RELRO':\n-            have_gnu_relro = True\n-\n-    have_bindnow = False\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    for line in stdout.split(b'\\n'):\n-        tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == b'(BIND_NOW)' or (len(tokens)>2 and tokens[1] == b'(FLAGS)' and b'BIND_NOW' in tokens[2]):\n-            have_bindnow = True\n-    return have_gnu_relro and have_bindnow\n-\n-def check_ELF_Canary(executable):\n-    '''\n-    Check for use of stack canary\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    ok = False\n-    for line in stdout.split(b'\\n'):\n-        if b'__stack_chk_fail' in line:\n-            ok = True\n-    return ok\n-\n-def get_PE_dll_characteristics(executable):\n-    '''\n-    Get PE DllCharacteristics bits.\n-    Returns a tuple (arch,bits) where arch is 'i386:x86-64' or 'i386'\n-    and bits is the DllCharacteristics value.\n-    '''\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    arch = ''\n-    bits = 0\n-    for line in stdout.split('\\n'):\n-        tokens = line.split()\n-        if len(tokens)>=2 and tokens[0] == 'architecture:':\n-            arch = tokens[1].rstrip(',')\n-        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            bits = int(tokens[1],16)\n-    return (arch,bits)\n-\n-IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n-IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n-IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n-\n-def check_PE_DYNAMIC_BASE(executable):\n-    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    (arch,bits) = get_PE_dll_characteristics(executable)\n-    reqbits = IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n-    return (bits & reqbits) == reqbits\n-\n-# On 64 bit, must support high-entropy 64-bit address space layout randomization in addition to DYNAMIC_BASE\n-# to have secure ASLR.\n-def check_PE_HIGH_ENTROPY_VA(executable):\n-    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n-    (arch,bits) = get_PE_dll_characteristics(executable)\n-    if arch == 'i386:x86-64': \n-        reqbits = IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n-    else: # Unnecessary on 32-bit\n-        assert(arch == 'i386')\n-        reqbits = 0\n-    return (bits & reqbits) == reqbits\n-\n-def check_PE_NX(executable):\n-    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    (arch,bits) = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n-\n-CHECKS = {\n-'ELF': [\n-    ('PIE', check_ELF_PIE),\n-    ('NX', check_ELF_NX),\n-    ('RELRO', check_ELF_RELRO),\n-    ('Canary', check_ELF_Canary)\n-],\n-'PE': [\n-    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n-    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n-    ('NX', check_PE_NX)\n-]\n-}\n-\n-def identify_executable(executable):\n-    with open(filename, 'rb') as f:\n-        magic = f.read(4)\n-    if magic.startswith(b'MZ'):\n-        return 'PE'\n-    elif magic.startswith(b'\\x7fELF'):\n-        return 'ELF'\n-    return None\n-\n-if __name__ == '__main__':\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        try:\n-            etype = identify_executable(filename)\n-            if etype is None:\n-                print('%s: unknown format' % filename)\n-                retval = 1\n-                continue\n-\n-            failed = []\n-            warning = []\n-            for (name, func) in CHECKS[etype]:\n-                if not func(filename):\n-                    if name in NONFATAL:\n-                        warning.append(name)\n-                    else:\n-                        failed.append(name)\n-            if failed:\n-                print('%s: failed %s' % (filename, ' '.join(failed)))\n-                retval = 1\n-            if warning:\n-                print('%s: warning %s' % (filename, ' '.join(warning)))\n-        except IOError:\n-            print('%s: cannot open' % filename)\n-            retval = 1\n-    sys.exit(retval)\n-"
      },
      {
        "sha": "deda49cc541043d0a05aee05038c69ee1dee51b3",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,10 +0,0 @@\n-#!/bin/sh\n-\n-if [ $# -ne 3 ];\n-    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n-fi\n-\n-@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n-@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n-@STRIP@ --enable-deterministic-archives -p -s $2\n-@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "98daa1bd76f94a76f85df6fc3d2f7d4f0ed37fe8",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 164,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,164 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n-\n-Example usage:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n-'''\n-from __future__ import division, print_function, unicode_literals\n-import subprocess\n-import re\n-import sys\n-import os\n-\n-# Debian 6.0.9 (Squeeze) has:\n-#\n-# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n-# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n-#\n-# Ubuntu 10.04.4 (Lucid Lynx) has:\n-#\n-# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n-# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n-# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n-#\n-# Taking the minimum of these as our target.\n-#\n-# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.4.0: GCC_4.4.0\n-#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n-#   (glibc)    GLIBC_2_11\n-#\n-MAX_VERSIONS = {\n-'GCC':     (4,4,0),\n-'CXXABI':  (1,3,3),\n-'GLIBCXX': (3,4,13),\n-'GLIBC':   (2,11)\n-}\n-# See here for a description of _IO_stdin_used:\n-# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n-\n-# Ignore symbols that are exported as part of every executable\n-IGNORE_EXPORTS = {\n-b'_edata', b'_end', b'_init', b'__bss_start', b'_fini', b'_IO_stdin_used'\n-}\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n-# Allowed NEEDED libraries\n-ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n-b'libgcc_s.so.1', # GCC base support\n-b'libc.so.6', # C library\n-b'libpthread.so.0', # threading\n-b'libanl.so.1', # DNS resolve\n-b'libm.so.6', # math library\n-b'librt.so.1', # real-time (clock)\n-b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-b'ld-linux.so.2', # 32-bit dynamic linker\n-# bitcoin-qt only\n-b'libX11-xcb.so.1', # part of X11\n-b'libX11.so.6', # part of X11\n-b'libxcb.so.1', # part of X11\n-b'libfontconfig.so.1', # font support\n-b'libfreetype.so.6', # font parsing\n-b'libdl.so.2' # programming interface to dynamic linker\n-}\n-\n-class CPPFilt(object):\n-    '''\n-    Demangle C++ symbol names.\n-\n-    Use a pipe to the 'c++filt' command.\n-    '''\n-    def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n-\n-    def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + b'\\n')\n-        self.proc.stdin.flush()\n-        return self.proc.stdout.readline().rstrip()\n-\n-    def close(self):\n-        self.proc.stdin.close()\n-        self.proc.stdout.close()\n-        self.proc.wait()\n-\n-def read_symbols(executable, imports=True):\n-    '''\n-    Parse an ELF executable and return a list of (symbol,version) tuples\n-    for dynamic, imported symbols.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n-    syms = []\n-    for line in stdout.split(b'\\n'):\n-        line = line.split()\n-        if len(line)>7 and re.match(b'[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition(b'@')\n-            is_import = line[6] == b'UND'\n-            if version.startswith(b'@'):\n-                version = version[1:]\n-            if is_import == imports:\n-                syms.append((sym, version))\n-    return syms\n-\n-def check_version(max_versions, version):\n-    if b'_' in version:\n-        (lib, _, ver) = version.rpartition(b'_')\n-    else:\n-        lib = version\n-        ver = '0'\n-    ver = tuple([int(x) for x in ver.split(b'.')])\n-    if not lib in max_versions:\n-        return False\n-    return ver <= max_versions[lib]\n-\n-def read_libraries(filename):\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.split(b'\\n'):\n-        tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == b'(NEEDED)':\n-            match = re.match(b'^Shared library: \\[(.*)\\]$', b' '.join(tokens[2:]))\n-            if match:\n-                libraries.append(match.group(1))\n-            else:\n-                raise ValueError('Unparseable (NEEDED) specification')\n-    return libraries\n-\n-if __name__ == '__main__':\n-    cppfilt = CPPFilt()\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        # Check imported symbols\n-        for sym,version in read_symbols(filename, True):\n-            if version and not check_version(MAX_VERSIONS, version):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym).decode('utf-8'), version.decode('utf-8')))\n-                retval = 1\n-        # Check exported symbols\n-        for sym,version in read_symbols(filename, False):\n-            if sym in IGNORE_EXPORTS:\n-                continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym).decode('utf-8')))\n-            retval = 1\n-        # Check dependency libraries\n-        for library_name in read_libraries(filename):\n-            if library_name not in ALLOWED_LIBRARIES:\n-                print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n-                retval = 1\n-\n-    sys.exit(retval)\n-\n-"
      },
      {
        "sha": "22f5ee20f7873e538216716898d2c5480ceb7fa2",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,62 +0,0 @@\n-#!/usr/bin/env python2\n-# Copyright (c) 2015-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Test script for security-check.py\n-'''\n-from __future__ import division,print_function\n-import subprocess\n-import unittest\n-\n-def write_testcode(filename):\n-    with open(filename, 'w') as f:\n-        f.write('''\n-    #include <stdio.h>\n-    int main()\n-    {\n-        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n-        return 0;\n-    }\n-    ''')\n-\n-def call_security_check(cc, source, executable, options):\n-    subprocess.check_call([cc,source,'-o',executable] + options)\n-    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    return (p.returncode, stdout.rstrip())\n-\n-class TestSecurityChecks(unittest.TestCase):\n-    def test_ELF(self):\n-        source = 'test1.c'\n-        executable = 'test1'\n-        cc = 'gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n-                (1, executable+': failed PIE NX RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n-                (1, executable+': failed PIE RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n-                (1, executable+': failed PIE RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n-                (1, executable+': failed RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n-                (0, ''))\n-\n-    def test_PE(self):\n-        source = 'test1.c'\n-        executable = 'test1.exe'\n-        cc = 'i686-w64-mingw32-gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, []), \n-                (1, executable+': failed PIE NX'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n-                (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n-                (0, ''))\n-\n-if __name__ == '__main__':\n-    unittest.main()\n-"
      },
      {
        "sha": "e1924749d21f192c30af1902e98fafadcf14576f",
        "filename": "contrib/devtools/update-translations.py",
        "status": "removed",
        "additions": 0,
        "deletions": 208,
        "changes": 208,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,208 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script from the root of the repository to update all translations from\n-transifex.\n-It will do the following automatically:\n-\n-- fetch all translations using the tx tool\n-- post-process them into valid and committable format\n-  - remove invalid control characters\n-  - remove location tags (makes diffs less noisy)\n-\n-TODO:\n-- auto-add new translations to the build system according to the translation process\n-'''\n-from __future__ import division, print_function\n-import subprocess\n-import re\n-import sys\n-import os\n-import io\n-import xml.etree.ElementTree as ET\n-\n-# Name of transifex tool\n-TX = 'tx'\n-# Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n-# Directory with locale files\n-LOCALE_DIR = 'src/qt/locale'\n-# Minimum number of messages for translation to be considered at all\n-MIN_NUM_MESSAGES = 10\n-\n-def check_at_repository_root():\n-    if not os.path.exists('.git'):\n-        print('No .git directory found')\n-        print('Execute this script at the root of the repository', file=sys.stderr)\n-        sys.exit(1)\n-\n-def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f', '-a']):\n-        print('Error while fetching translations', file=sys.stderr)\n-        sys.exit(1)\n-\n-def find_format_specifiers(s):\n-    '''Find all format specifiers in a string.'''\n-    pos = 0\n-    specifiers = []\n-    while True:\n-        percent = s.find('%', pos)\n-        if percent < 0:\n-            break\n-        specifiers.append(s[percent+1])\n-        pos = percent+2\n-    return specifiers\n-\n-def split_format_specifiers(specifiers):\n-    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n-    numeric = []\n-    other = []\n-    for s in specifiers:\n-        if s in {'1','2','3','4','5','6','7','8','9'}:\n-            numeric.append(s)\n-        else:\n-            other.append(s)\n-\n-    # If both numeric format specifiers and \"others\" are used, assume we're dealing\n-    # with a Qt-formatted message. In the case of Qt formatting (see https://doc.qt.io/qt-5/qstring.html#arg)\n-    # only numeric formats are replaced at all. This means \"(percentage: %1%)\" is valid, without needing\n-    # any kind of escaping that would be necessary for strprintf. Without this, this function\n-    # would wrongly detect '%)' as a printf format specifier.\n-    if numeric:\n-        other = []\n-\n-    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n-    return set(numeric),other\n-\n-def sanitize_string(s):\n-    '''Sanitize string for printing'''\n-    return s.replace('\\n',' ')\n-\n-def check_format_specifiers(source, translation, errors, numerus):\n-    source_f = split_format_specifiers(find_format_specifiers(source))\n-    # assert that no source messages contain both Qt and strprintf format specifiers\n-    # if this fails, go change the source as this is hacky and confusing!\n-    assert(not(source_f[0] and source_f[1]))\n-    try:\n-        translation_f = split_format_specifiers(find_format_specifiers(translation))\n-    except IndexError:\n-        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-        return False\n-    else:\n-        if source_f != translation_f:\n-            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n-                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n-                return True\n-            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-            return False\n-    return True\n-\n-def all_ts_files(suffix=''):\n-    for filename in os.listdir(LOCALE_DIR):\n-        # process only language files, and do not process source language\n-        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n-            continue\n-        if suffix: # remove provided suffix\n-            filename = filename[0:-len(suffix)]\n-        filepath = os.path.join(LOCALE_DIR, filename)\n-        yield(filename, filepath)\n-\n-FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n-def remove_invalid_characters(s):\n-    '''Remove invalid characters from translation string'''\n-    return FIX_RE.sub(b'', s)\n-\n-# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n-# comparison, disable by default)\n-_orig_escape_cdata = None\n-def escape_cdata(text):\n-    text = _orig_escape_cdata(text)\n-    text = text.replace(\"'\", '&apos;')\n-    text = text.replace('\"', '&quot;')\n-    return text\n-\n-def postprocess_translations(reduce_diff_hacks=False):\n-    print('Checking and postprocessing...')\n-\n-    if reduce_diff_hacks:\n-        global _orig_escape_cdata\n-        _orig_escape_cdata = ET._escape_cdata\n-        ET._escape_cdata = escape_cdata\n-\n-    for (filename,filepath) in all_ts_files():\n-        os.rename(filepath, filepath+'.orig')\n-\n-    have_errors = False\n-    for (filename,filepath) in all_ts_files('.orig'):\n-        # pre-fixups to cope with transifex output\n-        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n-        with open(filepath + '.orig', 'rb') as f:\n-            data = f.read()\n-        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n-        data = remove_invalid_characters(data)\n-        tree = ET.parse(io.BytesIO(data), parser=parser)\n-\n-        # iterate over all messages in file\n-        root = tree.getroot()\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                numerus = message.get('numerus') == 'yes'\n-                source = message.find('source').text\n-                translation_node = message.find('translation')\n-                # pick all numerusforms\n-                if numerus:\n-                    translations = [i.text for i in translation_node.findall('numerusform')]\n-                else:\n-                    translations = [translation_node.text]\n-\n-                for translation in translations:\n-                    if translation is None:\n-                        continue\n-                    errors = []\n-                    valid = check_format_specifiers(source, translation, errors, numerus)\n-\n-                    for error in errors:\n-                        print('%s: %s' % (filename, error))\n-\n-                    if not valid: # set type to unfinished and clear string if invalid\n-                        translation_node.clear()\n-                        translation_node.set('type', 'unfinished')\n-                        have_errors = True\n-\n-                # Remove location tags\n-                for location in message.findall('location'):\n-                    message.remove(location)\n-\n-                # Remove entire message if it is an unfinished translation\n-                if translation_node.get('type') == 'unfinished':\n-                    context.remove(message)\n-\n-        # check if document is (virtually) empty, and remove it if so\n-        num_messages = 0\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                num_messages += 1\n-        if num_messages < MIN_NUM_MESSAGES:\n-            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n-            continue\n-\n-        # write fixed-up tree\n-        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n-        if reduce_diff_hacks:\n-            out = io.BytesIO()\n-            tree.write(out, encoding='utf-8')\n-            out = out.getvalue()\n-            out = out.replace(b' />', b'/>')\n-            with open(filepath, 'wb') as f:\n-                f.write(out)\n-        else:\n-            tree.write(filepath, encoding='utf-8')\n-    return have_errors\n-\n-if __name__ == '__main__':\n-    check_at_repository_root()\n-    fetch_all_translations()\n-    postprocess_translations()\n-"
      },
      {
        "sha": "299377d691155308875fb95fe5b7f49f9e8d50dc",
        "filename": "contrib/filter-lcov.py",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,25 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import argparse\n-\n-parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n-parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n-parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n-parser.add_argument('outfile', help='filename for the output to be written to')\n-\n-args = parser.parse_args()\n-tracefile = args.tracefile\n-pattern = args.pattern\n-outfile = args.outfile\n-\n-in_remove = False\n-with open(tracefile, 'r') as f:\n-    with open(outfile, 'w') as wf:\n-        for line in f:\n-            for p in pattern:\n-                if line.startswith(\"SF:\") and p in line:\n-                    in_remove = True\n-            if not in_remove:\n-                wf.write(line)\n-            if line == 'end_of_record\\n':\n-                in_remove = False"
      },
      {
        "sha": "631fba9089cd9617c596965f9209195cf1a253c3",
        "filename": "contrib/gitian-build.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 389,
        "changes": 389,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,389 +0,0 @@\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# What to do\n-sign=false\n-verify=false\n-build=false\n-\n-# Systems to build\n-linux=true\n-windows=true\n-osx=true\n-\n-# Other Basic variables\n-SIGNER=\n-VERSION=\n-commit=false\n-url=https://github.com/bitcoin/bitcoin\n-proc=2\n-mem=2000\n-lxc=true\n-osslTarUrl=http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n-osslPatchUrl=https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n-scriptName=$(basename -- \"$0\")\n-signProg=\"gpg --detach-sign\"\n-commitFiles=true\n-\n-# Help Message\n-read -d '' usage <<- EOF\n-Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n-\n-Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n-\n-Arguments:\n-signer          GPG signer to sign each build assert file\n-version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n-\n-Options:\n--c|--commit\tIndicate that the version argument is for a commit or branch\n--u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n--v|--verify \tVerify the Gitian build\n--b|--build\tDo a Gitian build\n--s|--sign\tMake signed binaries for Windows and Mac OSX\n--B|--buildsign\tBuild both signed and unsigned binaries\n--o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n--j\t\tNumber of processes to use. Default 2\n--m\t\tMemory to allocate in MiB. Default 2000\n---kvm           Use KVM instead of LXC\n---setup         Set up the Gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n---detach-sign   Create the assert file for detached signing. Will not commit anything.\n---no-commit     Do not commit anything to git\n--h|--help\tPrint this help message\n-EOF\n-\n-# Get options and arguments\n-while :; do\n-    case $1 in\n-        # Verify\n-        -v|--verify)\n-\t    verify=true\n-            ;;\n-        # Build\n-        -b|--build)\n-\t    build=true\n-            ;;\n-        # Sign binaries\n-        -s|--sign)\n-\t    sign=true\n-            ;;\n-        # Build then Sign\n-        -B|--buildsign)\n-\t    sign=true\n-\t    build=true\n-            ;;\n-        # PGP Signer\n-        -S|--signer)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tSIGNER=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--signer\" requires a non-empty argument.'\n-\t\texit 1\n-\t    fi\n-           ;;\n-        # Operating Systems\n-        -o|--os)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tlinux=false\n-\t\twindows=false\n-\t\tosx=false\n-\t\tif [[ \"$2\" = *\"l\"* ]]\n-\t\tthen\n-\t\t    linux=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"w\"* ]]\n-\t\tthen\n-\t\t    windows=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"x\"* ]]\n-\t\tthen\n-\t\t    osx=true\n-\t\tfi\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Help message\n-\t-h|--help)\n-\t    echo \"$usage\"\n-\t    exit 0\n-\t    ;;\n-\t# Commit or branch\n-\t-c|--commit)\n-\t    commit=true\n-\t    ;;\n-\t# Number of Processes\n-\t-j)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tproc=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-j\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Memory to allocate\n-\t-m)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tmem=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-m\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# URL\n-\t-u)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\turl=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-u\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-        # kvm\n-        --kvm)\n-            lxc=false\n-            ;;\n-        # Detach sign\n-        --detach-sign)\n-            signProg=\"true\"\n-            commitFiles=false\n-            ;;\n-        # Commit files\n-        --no-commit)\n-            commitFiles=false\n-            ;;\n-        # Setup\n-        --setup)\n-            setup=true\n-            ;;\n-\t*)               # Default case: If no more options then break out of the loop.\n-             break\n-    esac\n-    shift\n-done\n-\n-# Set up LXC\n-if [[ $lxc = true ]]\n-then\n-    export USE_LXC=1\n-fi\n-\n-# Check for OSX SDK\n-if [[ ! -e \"gitian-builder/inputs/MacOSX10.11.sdk.tar.gz\" && $osx == true ]]\n-then\n-    echo \"Cannot build for OSX, SDK does not exist. Will build for other OSes\"\n-    osx=false\n-fi\n-\n-# Get signer\n-if [[ -n \"$1\" ]]\n-then\n-    SIGNER=$1\n-    shift\n-fi\n-\n-# Get version\n-if [[ -n \"$1\" ]]\n-then\n-    VERSION=$1\n-    COMMIT=$VERSION\n-    shift\n-fi\n-\n-# Check that a signer is specified\n-if [[ $SIGNER == \"\" ]]\n-then\n-    echo \"$scriptName: Missing signer.\"\n-    echo \"Try $scriptName --help for more information\"\n-    exit 1\n-fi\n-\n-# Check that a version is specified\n-if [[ $VERSION == \"\" ]]\n-then\n-    echo \"$scriptName: Missing version.\"\n-    echo \"Try $scriptName --help for more information\"\n-    exit 1\n-fi\n-\n-# Add a \"v\" if no -c\n-if [[ $commit = false ]]\n-then\n-\tCOMMIT=\"v${VERSION}\"\n-fi\n-echo ${COMMIT}\n-\n-# Setup build environment\n-if [[ $setup = true ]]\n-then\n-    sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n-    git clone https://github.com/devrandom/gitian-builder.git\n-    pushd ./gitian-builder\n-    if [[ -n \"$USE_LXC\" ]]\n-    then\n-        sudo apt-get install lxc\n-        bin/make-base-vm --suite trusty --arch amd64 --lxc\n-    else\n-        bin/make-base-vm --suite trusty --arch amd64\n-    fi\n-    popd\n-fi\n-\n-# Set up build\n-pushd ./bitcoin\n-git fetch\n-git checkout ${COMMIT}\n-popd\n-\n-# Build\n-if [[ $build = true ]]\n-then\n-\t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n-\t\n-\t# Build Dependencies\n-\techo \"\"\n-\techo \"Building Dependencies\"\n-\techo \"\"\n-\tpushd ./gitian-builder\t\n-\tmkdir -p inputs\n-\twget -N -P inputs $osslPatchUrl\n-\twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n-\n-\t# Linux\n-\tif [[ $linux = true ]]\n-\tthen\n-            echo \"\"\n-\t    echo \"Compiling ${VERSION} Linux\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n-\tfi\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-\t    # Commit to gitian.sigs repo\n-            echo \"\"\n-            echo \"Committing ${VERSION} Unsigned Sigs\"\n-            echo \"\"\n-            pushd gitian.sigs\n-            git add ${VERSION}-linux/${SIGNER}\n-            git add ${VERSION}-win-unsigned/${SIGNER}\n-            git add ${VERSION}-osx-unsigned/${SIGNER}\n-            git commit -a -m \"Add ${VERSION} unsigned sigs for ${SIGNER}\"\n-            popd\n-        fi\n-fi\n-\n-# Verify the build\n-if [[ $verify = true ]]\n-then\n-\t# Linux\n-\tpushd ./gitian-builder\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Linux\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t# Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t# Mac OSX\t\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Mac OSX\"\n-\techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t# Signed Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t# Signed Mac OSX\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Mac OSX\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n-\tpopd\n-fi\n-\n-# Sign binaries\n-if [[ $sign = true ]]\n-then\n-\t\n-        pushd ./gitian-builder\n-\t# Sign Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Sign Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n-\tfi\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-            # Commit Sigs\n-            pushd gitian.sigs\n-            echo \"\"\n-            echo \"Committing ${VERSION} Signed Sigs\"\n-            echo \"\"\n-            git add ${VERSION}-win-signed/${SIGNER}\n-            git add ${VERSION}-osx-signed/${SIGNER}\n-            git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n-            popd\n-        fi\n-fi"
      },
      {
        "sha": "c80e19edbb2212d1e9ed821e75f1baf9261de951",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 192,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,192 +0,0 @@\n----\n-name: \"bitcoin-linux-0.16\"\n-enable_cache: true\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"curl\"\n-- \"g++-aarch64-linux-gnu\"\n-- \"g++-4.8-aarch64-linux-gnu\"\n-- \"gcc-4.8-aarch64-linux-gnu\"\n-- \"binutils-aarch64-linux-gnu\"\n-- \"g++-arm-linux-gnueabihf\"\n-- \"g++-4.8-arm-linux-gnueabihf\"\n-- \"gcc-4.8-arm-linux-gnueabihf\"\n-- \"binutils-arm-linux-gnueabihf\"\n-- \"g++-4.8-multilib\"\n-- \"gcc-4.8-multilib\"\n-- \"binutils-gold\"\n-- \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"ca-certificates\"\n-- \"python\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"date ar ranlib nm\"\n-  HOST_CFLAGS=\"-O2 -g\"\n-  HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS=-static-libstdc++\n-\n-  export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  EXTRA_INCLUDES_BASE=$WRAP_DIR/extra_includes\n-  mkdir -p $EXTRA_INCLUDES_BASE\n-\n-  # x86 needs /usr/include/i386-linux-gnu/asm pointed to /usr/include/x86_64-linux-gnu/asm,\n-  # but we can't write there. Instead, create a link here and force it to be included in the\n-  # search paths by wrapping gcc/g++.\n-\n-  mkdir -p $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\n-  rm -f $WRAP_DIR/extra_includes/i686-pc-linux-gnu/asm\n-  ln -s /usr/include/x86_64-linux-gnu/asm $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu/asm\n-\n-  for prog in gcc g++; do\n-  rm -f ${WRAP_DIR}/${prog}\n-  cat << EOF > ${WRAP_DIR}/${prog}\n-  #!/bin/bash\n-  REAL=\"`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n-  for var in \"\\$@\"\n-  do\n-    if [ \"\\$var\" = \"-m32\" ]; then\n-      export C_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n-      export CPLUS_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n-      break\n-    fi\n-  done\n-  \\$REAL \\$@\n-  EOF\n-  chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n-    if [ -d \"$EXTRA_INCLUDES\" ]; then\n-      export HOST_ID_SALT=\"$EXTRA_INCLUDES\"\n-    fi\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-    unset HOST_ID_SALT\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n-\n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n-\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-\n-    #TODO: This is a quick hack that disables symbol checking for arm.\n-    #      Instead, we should investigate why these are popping up.\n-    #      For aarch64, we'll need to bump up the min GLIBC version, as the abi\n-    #      support wasn't introduced until 2.17.\n-    case $i in\n-       aarch64-*) : ;;\n-       arm-*) : ;;\n-       *) make ${MAKEOPTS} -C src check-symbols ;;\n-    esac\n-\n-    make install DESTDIR=${INSTALLPATH}\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n-    find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n-    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done\n-  mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src"
      },
      {
        "sha": "f6e9414ab1bf2ec0fa0f098fa62972bb06281f43",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,37 +0,0 @@\n----\n-name: \"bitcoin-dmg-signer\"\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"faketime\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n-script: |\n-  WRAP_DIR=$HOME/wrapped\n-  mkdir -p ${WRAP_DIR}\n-  export PATH=`pwd`:$PATH\n-  FAKETIME_PROGS=\"dmg genisoimage\"\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n-\n-  tar -xf ${UNSIGNED}\n-  OSX_VOLNAME=\"$(cat osx_volname)\"\n-  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n-  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "cbf286d2cde28ffaedb545bf7f1e82c339578b1c",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 166,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,166 +0,0 @@\n----\n-name: \"bitcoin-osx-0.16\"\n-enable_cache: true\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"ca-certificates\"\n-- \"curl\"\n-- \"g++\"\n-- \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"librsvg2-bin\"\n-- \"libtiff-tools\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"cmake\"\n-- \"imagemagick\"\n-- \"libcap-dev\"\n-- \"libz-dev\"\n-- \"libbz2-dev\"\n-- \"python\"\n-- \"python-dev\"\n-- \"python-setuptools\"\n-- \"fonts-tuffy\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"MacOSX10.11.sdk.tar.gz\"\n-script: |\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin11\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n-\n-  export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  export ZERO_AR_DATE=1\n-\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-\n-  mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n-\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n-\n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n-\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n-    make ${MAKEOPTS}\n-    make install-strip DESTDIR=${INSTALLPATH}\n-\n-    make osx_volname\n-    make deploydir\n-    OSX_VOLNAME=\"$(cat osx_volname)\"\n-    mkdir -p unsigned-app-${i}\n-    cp osx_volname unsigned-app-${i}/\n-    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n-    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n-    mv dist unsigned-app-${i}\n-    pushd unsigned-app-${i}\n-    find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n-    popd\n-\n-    make deploy\n-    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n-\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    cd ../../\n-  done\n-  mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "3c1e0214a0aa6bfd31c54fabfdc444aad705c0b0",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,38 +0,0 @@\n----\n-name: \"bitcoin-win-signer\"\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"libssl-dev\"\n-- \"autoconf\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"osslsigncode-1.7.1.tar.gz\"\n-- \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n-script: |\n-  BUILD_DIR=`pwd`\n-  SIGDIR=${BUILD_DIR}/signature/win\n-  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n-\n-  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n-  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n-\n-  mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n-\n-  tar xf osslsigncode-1.7.1.tar.gz\n-  cd osslsigncode-1.7.1\n-  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n-\n-  ./configure --without-gsf --without-curl --disable-dependency-tracking\n-  make\n-  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"`basename \"${i}\"`\"\n-    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n-    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n-  done"
      },
      {
        "sha": "95ff9759c7bfe1fee77c0123b37c53c6417d5dfb",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 179,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,179 +0,0 @@\n----\n-name: \"bitcoin-win-0.16\"\n-enable_cache: true\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"curl\"\n-- \"g++\"\n-- \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"nsis\"\n-- \"zip\"\n-- \"ca-certificates\"\n-- \"python\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-w64-mingw32 x86_64-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n-  FAKETIME_PROGS=\"date makensis zip\"\n-  HOST_CFLAGS=\"-O2 -g\"\n-  HOST_CXXFLAGS=\"-O2 -g\"\n-\n-  export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  function create_per-host_linker_wrapper {\n-  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n-  for i in $HOSTS; do\n-    mkdir -p ${WRAP_DIR}/${i}\n-    for prog in collect2; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n-        REAL=$(${i}-gcc -print-prog-name=${prog})\n-        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n-        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n-        chmod +x ${WRAP_DIR}/${i}/${prog}\n-    done\n-    for prog in gcc g++; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  mkdir -p $OUTDIR/src\n-  cp ../$SOURCEDIST $OUTDIR/src\n-  popd\n-\n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n-\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make deploy\n-    make install DESTDIR=${INSTALLPATH}\n-    rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n-    cd installed\n-    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done\n-  cp -rf contrib/windeploy $BUILD_DIR\n-  cd $BUILD_DIR/windeploy\n-  mkdir unsigned\n-  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n-  find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip"
      },
      {
        "sha": "4b0b7a261579c9c0bc8e20af373a1060c5981977",
        "filename": "contrib/gitian-keys/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,16 +0,0 @@\n-PGP keys\n-========\n-\n-This folder contains the public keys of developers and active contributors.\n-\n-The keys are mainly used to sign git commits or the build results of Gitian\n-builds.\n-\n-You can import the keys into gpg as follows. Also, make sure to fetch the\n-latest version from the key server to see if any key was revoked in the\n-meantime.\n-\n-```sh\n-gpg --import ./*.pgp\n-gpg --refresh-keys\n-```"
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-keys/achow101-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/achow101-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-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\n-Khvd4+XHE/ecjLOPvLweAg==\n-=+hz7\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-keys/aschildbach-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/aschildbach-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-keys/bluematt-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/bluematt-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "f00dc729d57a2e7b7848324177c605dac9dc8e45",
        "filename": "contrib/gitian-keys/btcdrak-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/btcdrak-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-keys/cdecker-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cdecker-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-keys/centaur1-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/centaur1-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,30 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFTjy20BCAC7q/tpPQ9tdEALpDqe8kpVAT5ysOJDLDeFEE1J5O8NuDFuibiN\n-XYkb2nAt4Vdr23in9z0LAiTSgr7znndnab/rOSn6pXbXQfLTHrSnAeClTHVQVPSq\n-m5kNg1vWvNxFtIpZ/fGsc6LLmIHxdgeLn+NOpvNx7RzF/N5ctX51vMxMUeDq3daZ\n-tLneJVRj5tXHRJcjW62cyiNFasYAZ3JC8wjwzr0SOndc7kygbEVCTWNkTAGd1Lax\n-KSJW6TjhBPK7j+RljS5nfx/Tf+OG4AoA7/53593YL7Shfx8rwWVIeF4nS6efFnuf\n-eIj+aS5haGyFvNgw8DE7QUCrPiUxeA8wuXu7ABEBAAG0H2NlbnRhdXIgPGNlbnRh\n-dXJAcGhvbmVib29rLmNvbT6JATgEEwECACIFAlTjy20CGwMGCwkIBwMCBhUIAgkK\n-CwQWAgMBAh4BAheAAAoJEP+V+qlxaXQF8r4IAKnE8D9AOTdM/YvYxpCeI6ndEUUs\n-8NcotpbIBJ67vr1Dsot7Ee0PrmIYOiInA+T81lPUDecJYrnemVefhquiyJ5VJ4/d\n-z2zUKBfxjeOsj/PHgcowVxMco8fNEWQa2fZX6X8RVADIsUnIIwpRFVUcbssK/3xJ\n-k46vjWwYNQywht/ZgFBesOgywyz5GozmwrK6TixJxKk8M69GFz2fHhJjp1bxDZuk\n-Rs3YmWeOcCasoJ6GbvIboKQSPHGyEOCqIuiBL63YMa0n1FU0ooDteNZ04eRinIhc\n-fo9JC66fQrUFn8CmmRTtdZOrZ/efYjQtfLAunCkzSM3p6DE9u4Y7d8E5Ar65AQ0E\n-VOPLbQEIANhxtouZuQmw+k89toBWXw75s+csxKHKZuhw8QntaFyFYq3IOnIeV1sK\n-PRENkWsqDInjEM8k9eZ6pnS11EQ1rrFffss+mprTbL3I4S489tJETYZKHrmmox7h\n-ustRi5eXBEmGeKW0mqpb/9r4okpTaIfs+EJ4C9jj0ghWkqU0acyzanJiUY/0R46F\n-vPfGfHnhZ5TAl3eiL0H2JkF6taG8K1XOLemahdZHE9wJh0ZFWnDDkA1l6j2rtYga\n-jEi/ucOp5GkmumxbFiVgponDBqBpsscRrCV6SbZs9gz3dQNgqe5A3CKGZRuVCY6s\n-djRJelgqCF5+dV0fAT0oF3C/3E5KAgcAEQEAAYkBHwQYAQIACQUCVOPLbQIbDAAK\n-CRD/lfqpcWl0BUSxCACjEFwQSHcfZINWD+KdNMayxyHQlBwsEDX+xQkgnn+/Q3hW\n-9VI3SSSfFV3ustlUa3IaNHwuWzsrSqG6mLG47LAQ6vPAWVh723gVCpyJf42Oms/e\n-qeyn0f/PT/6RuNMXQeHbfddmRp4PFjyKOms5Bmf3oi4t4JSvOS4yABBBKzhDQYC9\n-e+qv6Y1sDYpSiCxstQLzIHKiB5bfZ8Szfk09EyyLdqLGkiB0MFhHoXWwQxKiLVc+\n-xNFj2a/jw0rQVgN5DZgHBWU5WqvS5CWIczi+2S9MFI26iBhCn3urZToaaQ/DObqC\n-qmekFrJ/GOj5vB1Mm014lWjG2X3EovLZ1XkgWI7W\n-=vtNZ\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-keys/cfields-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cfields-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-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\n-MrD0ofsytfy1LQ==\n-=DE4h\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "71898127ba0d6c9976ab7225d8c71ffc6380b0a2",
        "filename": "contrib/gitian-keys/devrandom-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/devrandom-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/devrandom-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/devrandom-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-keys/erkmos.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/erkmos.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-keys/fanquake-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/fanquake-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,63 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG/MacGPG2 v2.0.26\n-\n-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\n-XwbdK0Zpx/oDtRHpuDMGKJBV2LWAZYkEbFsmtg==\n-=3o2I\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f81f44e874707837c13446858db2fed14ad5c501",
        "filename": "contrib/gitian-keys/gavinandresen-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/gavinandresen-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/gavinandresen-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/gavinandresen-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "b8aad7fd88b42770c4aaab3ca97a115694bcb9c7",
        "filename": "contrib/gitian-keys/jl2012-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 105,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/jl2012-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/jl2012-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jl2012-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,105 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Comment: GPGTools - https://gpgtools.org\n-\n-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\n-yj9YmZZSRRQ2dujg81sLQ9CrO7WB3IGpwh+4lHQ=\n-=1irw\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "3831eaea114f77f30f9638e6772f446055f3c68d",
        "filename": "contrib/gitian-keys/jonasschnelli-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jonasschnelli-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,110 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\r\n-Version: GnuPG v1\r\n-\r\n-mQINBFSBrDIBEACrZEqObmtlTf7fOKttE39qqisFfMg0VeEPS37uETMGYsgTEvzv\r\n-kfMsXCGsGFLQ78XsHqUeW4uQrtpJH3nUP/Sua1Q12K3lNKTSvVQyEpKoPJwXZahp\r\n-jm6GA1ApDxZ/KlmxyobR3X0urnMYNZobl5IKJXlxoKGl4OkGNeFlh42pCXZDnR9n\r\n-1Y17ZcDdybkWcqPbDAz8ilOQcFMhDBFg3Di3IVMAaDZP1uwWFb5vx60YB5NhkOpF\r\n-nZUH09NJx/7u7QdGPSHOdzW4Xo1HUYtYNDkdOvgZtxpbYEFIaBtVBURMUGwAFagA\r\n-3a6qaGnCBWEQftyISLiqcKqKqXudOg/cLa1CAiQFkz+IBhY9BCGDRnB8Dcae6EGI\r\n-Djt2lqZTuMSiheTWeNFMGBioHfPLedcwae8KflrIBC+hNS4ay6HJdIc03WMQ4JKK\r\n-At8Y8CRLym30/RlqZ2v8CHYqg9Ddlz3+g5JkRKaJTQwFRcX46/tAX+I2NZ8Ra1ea\r\n-rF5cRHuCk/oaw5ZXYhj4zJO74rjAoSewAARlrTMSM541atJU1u6aWT7rNiF9QKIj\r\n-i8vEufUxN0YfdmvDD3OXwbO7GnfWXS4sPklFIRACp+Y4ib+QnRY0/qGE0yh3RAG4\r\n-r/dyIQ1m3z7Pc9eyPKAhE4S7SxAwoR4yOqQ5NAfZXgFuqWzkW51gkQgGzQARAQAB\r\n-tCtKb25hcyBTY2huZWxsaSA8am9uYXMuc2NobmVsbGlAaW5jbHVkZTcuY2g+iQI+\r\n-BBMBAgAoBQJUgawyAhsDBQkDwmcABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\r\n-CRAicOMMUic59iKUD/93DF04C3lptLjtrhyd4wgpBMJV8yzagGyG+Wk0UR7elQw4\r\n-F1MIvEtIFpuGrcnNfKcqeGGmnnKFTeBjkmgcYvej2fW9XlRA1HgIS0t0ttDv8uVX\r\n-vy1xVj1qISB+17EiftxJjCOl2pZFEVpLQ7sSgqnVRMsCS45ag6rioGxtq1j3ifQN\r\n-TENnJWhzOXvwzZhLgsyWLjeYvTDbzfAQLpZFowAMibOwu6ObCkn4dhaW+lI3AnPu\r\n-76pLsrOljqGvXes6o2d28vjqMrlmsz2xVEJ4bnRPUbLv3bUl6t+19XpiMj94ZCZX\r\n-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\r\n-S5rowLE=\r\n-=ZVPf\r\n------END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "88d0de1503bb6a6bed7710b68b5526e85a855812",
        "filename": "contrib/gitian-keys/jtimon-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/jtimon-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/jtimon-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jtimon-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "eed232a8722de569dc75dc97fc926e18b060898a",
        "filename": "contrib/gitian-keys/laanwj-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/laanwj-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "a2d34e75e1c16c17cb721633038813800dbe45b3",
        "filename": "contrib/gitian-keys/luke-jr-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/luke-jr-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ee626500a482448cb2c7717ba352260262a3422f",
        "filename": "contrib/gitian-keys/marcofalke-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/marcofalke-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/marcofalke-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/marcofalke-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,69 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-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\n-=GC3s\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "20963e7e259d30d399be1f84a7e4246ff12ea61c",
        "filename": "contrib/gitian-keys/meshcollider-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/meshcollider-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/meshcollider-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/meshcollider-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,51 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-\n-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\n-gb52/WPhR6CJQ2/7y3Uj7u8sPNpb7BGI\n-=as33\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-keys/michagogo-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/michagogo-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,59 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFGeqJ4BCADb7SI3/+q93gIvN0AGRg9Mtz73OLIOzCHeeoyn+tp7JcYNzxkQ\n-9lfeXiEfn72Sh8gHkLtLIqr7HlIMo8DxSS8JPRVjlJGkNyAW4SeEwN2wNa5OV8k0\n-N4jBa9a1csFyCyrEkPKvkUpBkQDvNXjNxyEhHwyZqPanKxy6NXIHOJji8ObOMQXI\n-T9HwJrpjRth3u4uKG968JBTEyAXAmkt0Zidl1Ykgzcedk4mJSE9uZCW8DjSv2wML\n-XcQz8+dYsoskT3KRdkowLHxAfj1BNyNc1+rKLghliM5vSQWi+Lbhi1Bxh4sY1UwA\n-lKnAGqrnAGyIvCtkwTq5QI6ufF2ZY44bvVgpABEBAAG0IU1pY2hhZ29nbyA8bWlj\n-aGFnb2dvQHNlcnZlci5mYWtlPokBOAQTAQIAIgUCUZ6ongIbAwYLCQgHAwIGFQgC\n-CQoLBBYCAwECHgECF4AACgkQgsXACWKOzwzMUAgAuqUmK10xE5C3lUym2f72z0t6\n-a2NM5Wfjr9//Y1/okC36C5XAMEtN2UwckPzzJ5p5D5y5yzwfZq5Jd8Py29VQIMsV\n-7FbC1a0H3D+bCyX+JJ6FAmUbnWOQ/+mydYc74RvD8iwjePNT6kziZNv6dMGctJTl\n-0alwjtQYgyGkeYKnIxbcyjHX/IawLUrunb/6mSKun87T8+NM/omfFCTc3l8TakpM\n-0wyNYRiUkIfUBvB8sDUU3A80qKN/hqRKvlFu3+/kMiAc9ZYQrbmsB+sYWdmM+4zw\n-8NBw3yuYzWyPuoa4PR5ZmS9F11WLMR5vTRCdLudAqYsWu3LtV6vAIvlOUa2LMLRg\n-TWljaGFnb2dvIChSZWdpc3RlcmVkIG5pY2sgbWljaGFnb2dvIG9uIGZyZWVub2Rl\n-IGFzIG9mIE9jdG9iZXIgMTIsIDIwMTMpIDxtaWNoYWdvZ29Ac2VydmVyLmZha2U+\n-iQE4BBMBAgAiBQJSWarzAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCC\n-xcAJYo7PDA7nB/91wAiaMlU5nHLUu0anhNQbGvUdFgKK1zO90S5KzUdJcY438jcS\n-UJW1az8l9U9JBRIfPRYVhz/Z1TAJ+dCzD7D8BXHFeGEr0zNOh87ly9aB5du7dpN2\n-oSBD6wLcJpqxt4h+XjSS2CX98/2ZIJxXENE2KySaTXP39Xl3eNwvJTUBA4XlcMey\n-J8KMp/IERli4H0O7vRyLgu3yYpUArTqAonzG1g2lfB35PQJfeInrRSniQ336otnZ\n-A8qwJ63kfUtWVDRz0g1fnvtiLGPivDJaI5hyIaUeJPaXU1+sg7YNroDu60o2NGZh\n-F+0IjHlvRfzzA+F9Vw38rpSqR3BmCdjf6Sv3iQEcBBABAgAGBQJSWa9/AAoJEH+r\n-EUJn5PoE/hgH/1T2dAthVucA/hzY0nl4SMjbg+dzNlYBq00Qwx8DRKVjk5et8+kY\n-oPI3DGILcr+ELnxNekeMv9WQBBtJanUh1K5ohZ6ohoR7lG18LXf5HCdspflB5Me6\n-LMA6iMryEP6gIs9GFuoGe2YQavm58YrkqhcPu34dGN7kdurfEXLvDfVlh5ZbKCsP\n-Gyd7Pbz04SpqykgK1udiTsLVjc70Xhv+jAMqeaCugDX6TLEwjVmZH/xsyKk2Uh3V\n-Oib5FXADAtKH+vSqqhFpXrw7R/NaBzvCbas8l61DFHiUg1/bo8vsV8MtGcyZmzXJ\n-C5Gm0njtGOil/g7JF9siUrpxs9Yyt/h+T2W0W01pY2hhZ29nbyAoVXNlciBhY2Nv\n-dW50IG1pY2hhZ29nbyBvbiBHaXRodWIgYXMgb2YgT2N0b2JlciAxMiwgMjAxMykg\n-PG1pY2hhZ29nb0BzZXJ2ZXIuZmFrZT6JATcEEwECACIFAlJZqxkCGwMGCwkIBwMC\n-BhUIAgkKCwQWAgMBAh4BAheAAAoJEILFwAlijs8M+1AH+IU78ARblqTnJeSl0iWH\n-mEsg4IBK30Q6/exDAcqOEm1Yc171uw2WnGmIvPYOQqxrRTvj3LoQ816dU6jrj6vY\n-s+XX0R2hxy7ILh17D/3UKnHcddu7rmc7pNEqZeBXaMughqQaPOWkAIe52+qK5tsl\n-sWllzTYE4jo29uZ3dAtDcKEJjBo/pIXnu1GOslE1+V4X1H9WDlwrS/JXHzyDQAjt\n-maPR+3gNesDanhrRmrnT3ZXW2ZVd3vGBibhia8PWUhU1uwOH23ySWXncgsHH0Zad\n-UMjd4w3YliZP/mLn2ghAxHB70IO7lgAgN3HYZeFoufP3pcK440A+CezfQiRcjHl/\n-oIkBHAQQAQIABgUCUlmvfwAKCRB/qxFCZ+T6BOq9CACItsrUZPKGeWSTkMHknMrV\n-K5vxIXJVCBb+Tppc0Q/J5p4EkW/RFhTwIP2zw8NLDKMh5oO9md4LXhvfIZkqQJFo\n-6ZtLa3Vf+Kj7uyxezBo4QHA+G7tDsRGaMKVrEMiyLCwS1+hg9VaNzsf7zmQW7mYE\n-vTLMHp3cVaSU7Mh2Dl8rnAaM/DpTUZQwZ+32Qrb/Z4HSa4f278iqoFpjEbBE2KCr\n-vT5yEVvpCZ4lwSgA2a+uTlRTvVV6NA/kpsxU64tmhuEOjy+ToDqJ8wv4mqvWZxMv\n-C6OhfVaXBy3U9gG8aQV0ffXGs+TbCtv8ApHd6E1/AVk0oyZGJaBVrEl688bBIWd/\n-uQENBFGeqJ4BCADFmgR7oEGkFFB5qXnuNYFq1nUGDAh0dLNtAD3J6EMxUZEXdmp+\n-DQHJw6/eDRQaG9EbjNZheycbVUoI8K2Y/Z268HQueGuIEIJv6cZYXoXdWCbDD4fn\n-HMNUX2wNlpDqWxb7PNUEtfU9hI3gmHGlr5OiEh3iV06uiZg4n2rbWPbj45m5LJzv\n-wpCrUA+pLcl9Xjw2cajaSTjdXHk9gvXTCo6s2ZS3/3Q4l+xuzZp1MGNzPQHASMKs\n-wecSJKkYg6W8I5WsVlPd9a8oQCc/Nfz7BPw31MRVR/SF5FAMqaXx5uLwghVdHB2i\n-cLURsOtJlCfP8W06gB7yS+MH45Jq/oxBRiJBABEBAAGJAR8EGAECAAkFAlGeqJ4C\n-GwwACgkQgsXACWKOzwwT4wgAy6ICcnBZ9l2jSu+ldy57F6jf5kpKZgB9NV8V2mMA\n-NeY1wMQ4VTVpU4t3s4E2LYtGNJNkPQVHbt1Pf4dGPasvMPaHMamgwgyqgYixqs0x\n-D5PdKzVrfnjwTTr/ZAFdccSPmvy5/hbY0geQ/+mzdbL07+xaT58JIoG5nySDKhmC\n-VeOvhDZtXMVAhEWBDPEgh/H9sEuBgMgZrzfE1j3q802qiXeQs6WtadWlQ1RN9Iq1\n-ZzIi6u9/BifEIRI0pO/WwKOZdXLTemFUoakoe7uT3A74N96t0G9LZVihYbEoO+Pc\n-5IaHPBV5VLeR3TB1LnnjHVf/Fwi8cnGy50kNWjcbMyEDag==\n-=jyQ4\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "5ee82a6f7ea42f0f4ecacbfc0b2541b3d98a48d7",
        "filename": "contrib/gitian-keys/petertodd-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 1901,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/petertodd-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-keys/prab-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/prab-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,81 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v2\n-\n-mQINBFYHMLQBEADLpvMbTQZ28jaV/tEcHpt/a2YiIqBdNreh6rE2MkTTjdkZJ5Mp\n-RAFOTrRYRWyBL9jmCjvjt4TToiV4quv9ubRWdTKn0cKaqcl8kwZ5rtoX6EEhcLJO\n-CAL13kDzkBrG3OqRxM7VWn/0IGf++Eq0yT2eqBi7Ae3FvC4m64TKLI2NK7GB/MQD\n-JqcXuh/0yMsPiCNZrTDBX+3SzTuSLjWt2Le1Ap2nWXf68cWqP6nhT+f76epZyA4D\n-NI48/KeylUzPSJtqBmBM+YLg/XGcxDpbIotnr7D27ThJQIXDzut9O9f7RjdlKaeh\n-G73W/hDqTqLpkR5LMa7K3unUuvlyQqYGXfHINjJibNUTLCi7YcJtuDv/DJwQxu45\n-/UUYS2xH6HpgOTdWs6VjHRCDzeAoKzkdDB+8Mvi2lZXxY0iFQeQtRNkmN9D3M4oT\n-voG0cZWjPGeKSalGVSRS3TGhdf+IqOPhOl9yrwEArlZ8HtsTUFdx/jAsWHsycCVb\n-LjkD8Mdgit39UZCln3e0bY862wF7Gm7P3ITMnTofO9w6Pqffh9WWQBtLrxIXrgII\n-vstC8H9ajIl1FDuYs1Mf8u7iq1zHh6GNzoxkm+FEvYc3mkSfx6KJD3STWqSrJcQK\n-q/1SsjBb+RiuqeFdY8krWfm2xkuUoGLEQnr14UQz1hQTTLEgSoHBSHxuHwARAQAB\n-tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI5BBMBCAAjBQJWBzC0\n-AhsDBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQvNBNjpzMrCp8dA//Yaob\n-cnFuzLjIeWyz996DPJvU62WmAE4GkZot/wk+dtIAnOCxO9YbhWVU/b1WG2PjGdqt\n-LiB6COG28/HzJoUh2zjG0lDcjvu060Bdw9rQ/kJWW22ylNAoKiY9jd3Abde5nBGK\n-0wwJ8+aMMDrO6euwgcJymJ+yZ6ZiWyG4TXXCbSdCDSsBtaaAugMlzZWeyEBEgUK4\n-nX3ZCoNiF3s2bYojr6VcgG2clM9gsSBW03XLW3lRLOvDFmdEAFp8KSJNSkGBlcOS\n-iba6zAKTY80W/+D3soBP6Lr2uP0AOFr+ZnfxvaH9YvXIFDq/jT3CH2RxiZLd1m59\n-ehUbU878ebOMlJCJYiUBY6H+vChytqy51o1np+KTQtpxKzigWiPbtyJ9zYoVVczI\n-Ds8APCqL729BPMhhTDm8I9jeEhjXNmmiJjGVJGVB5X/3w+7jQrEz6f1Ebi+cCrgN\n-tfN22bMs9hh5KkQ4JhRVfDM0DOXCvokXjdo9yXUf+Doc96ruCJKH0qR9L7qIASiD\n-hSEK3CNGY1G05Bb4wCS+FrexL11whAxlX7HCwbgjgHu07QJBYITdn3J4fUFYGsyS\n-G/2D5aLASiKGfq2TL1G9e/qI49/TksDQ6Xy4ue4cQYbf6JigfYjDcSDOZmkHPuXG\n-kSd60WPWJT6OqLrhq2c7exYCUGZaKrWBoie5yoGJAhwEEAEIAAYFAlYHcWAACgkQ\n-0cuiohvNiPY3BQ//TVOxm3UncyGyXOs+ss3fBSPE5q3lR71H4uo4CxE5pi9Y10tK\n-Qf0ULe0gRpnF2FMUkCCE5hu2oG+kPpqKON8/jwcnRCO9h2AndIZ3NRPAOXO2pn9f\n-bkDHMlInhPUxDk5zCHMTOdCONDvhocZ69gYHJdgt4w3Joji1YxTkHr2n8dFyNY7Q\n-LgqT1tpuXgopjKsUcYRhDCRN/iFsMa4D+XZR+rflvX5hkee19DzUIWmaHitfHZlo\n-VsJ7uVZKqUevS3rbBr3i+tpvvlrqDXAGksGWOdK7QFD6GtRgOD91IB82K0NvyX6t\n-M0TMh/aAAslxfH3YeTIGnETuBkp9QBCa1c966ipoHyzItmK9sF/ONPEfYR/ad3gB\n-Nc4G5w0UEROX0v4AWMfYc2CD+un3beH6rkWnopsIRJcQ71XvufqweWsPFALuBBzR\n-PTiugTi0SSSr/ayA543s90Ko2Fxrg20UYJZj1u/DEukpNJwjRSS/yyjk0hMWtzW8\n-rY1Br4Djbq3uQQj8EQojHgg3vlpHcbO77kXIJAlWYIzfHY69RGXCQG6Y7tavIiXm\n-vveP54CPFCs8Kl9t8Pq0IrWKnBGklE/KwfMzkzvrKFmi+nk9yRgwyN9G/geQt4Vo\n-W2mHmO1lvY8Zu2zpzLkvkYGXpL1VkIefmBYV/SWgyYGhLOJIFodJcMrrnje5AQ0E\n-Vgc1VQEIALsxaGYOnwWdgE2e7zX4uFz7jY5fZh0+RqGOe+Sk2g/QVKEDSLDgVF/V\n-tneG8AFgYukHPFCm0IZdKrewrkzdQOwxjyxiyFxOV/LYPesElVe8OWIs0lrMrWlL\n-ZLDguF63wnxWhjolfBzQAG29UTXYaJt6onEB59R2l426LBl3W9wvq19jolOECISw\n-r9z2IRUJ3poqBckT9j11p8yuPjGyht90dvg4htGPBV7nHDIijUnqLfk9mnAj8NwW\n-2Gf7TwW2uNA2rHV6riFzYVe2t1sB5Gdlx5ostJzo67yIc5Dffca901VhmpJTUPox\n-W2KmTpl3ObvaS0U0mkAyVObVHSuT6UsAEQEAAYkDRAQYAQgADwUCVgc1VQIbAgUJ\n-A8JnAAEpCRC80E2OnMysKsBdIAQZAQgABgUCVgc1VQAKCRAyXl7AXCempkrrB/9H\n-tOAstawkJ1IflUztgknEDE7MWuNR5XGqN7ROJAZvL8YfB5J7a4HJxTzCWft2QQUu\n-x3uwSfBpm+hRftBjm4aACrhDS6OOH4eFOUIdDASb2lgnhLmygKhAO9LW2z8jSrRs\n-tKNj9nyCo56mtd2awFESgpskavv/ilc9wU830C82FFdyBqgy5OBdWBurnb3SV5F7\n-23uD1t1n8b9gseIxNdF6Q//szAeHa4VRzzqykExXqHCEFCtH2gs9EjiZ3YeCyygK\n-cPbe6/+FP6UD810PBqnWaCShOIeT56JsOu2gMZ5+epWB+piUTn38N2Znu3EA3Q64\n-Gc7P8AtrNUCv56bof5NoTuwP/0rP4n1bsTy7siBuPqc9YvYkVCxNsGmg1Qs5h2Jr\n-ZmQlAnz8JXfi/TRxarUNQTZEsXVQzq+4C9eEMey440kXvDE2sd3p4MKnbtkDmahJ\n-XcMG5lsMMAQTpmyBf1EBEIFOwjZBqUqEkHl4FGRpEx/Q2p9/pVlogGW7SE5Ck6W/\n-A63ClJUJLsHaWiv9zJ23tzT+ooNy/iO1Y+GfV6MY1tBfLd4ZHHd2n1urFB362sgY\n-2x1TfvfXN0Myw7m1X0l9bYFycuuWfSo6qK+LCU/4P3jm21+i9lWBYX5l+NLz5mlC\n-V5aN57zmtGK7QMSp+6VY8mwG1TuhUt91S2fEScLax6qEASiEChB8m3YJOjKycP27\n-Sq9WactijiVTPslHjCNfyM4BbE9crAbDWGkIbzbka8ix3t4uBWt0YO0Ug9S3eZBt\n-w1OVxUI+LWjF5XlkfXn8W+pZ/C+M9Cs6QsAXEbfHXVZKwlAGZfvYE25UTr11RRnY\n-pl8JZglq0Z2Gip3YzJewC1pjjQTnnPoPT79elBuPmiGwNm5L8HsKUZ1IMf1k5mQB\n-FX0CilHMF/JAO+r8Obs1l7FHXvO0a95tStcjpFodZjHARi5B3VGghcypy2J9hWfH\n-YF23EcE4GzpqqSEO/SJoxuLNNtj5ZVJOxmeRz2CKCe1sI8xO7wY7ckjRaGmrvK+c\n-dAxeuQENBFYHOocBCACxVJwkGbqcgKTrg6APMxWO77ielcac8FOVpd0ns1h4TGZM\n-iCwwTR5WPRiIA6zuS3VTuPAntnK3VF9fQsLBORHIb4CzMeU3F/64SPt8NFajEQ+P\n-vPsZlyv29RSVmvhIRDTDry3Z/KQxnZ3rzazrBqGVuLBgsG45n97MQ8Xq0gkY42jU\n-VDldULYGMco5zHj/MFSQ6L3z0j1lL+aiX2xIdRyDNzOhRqaA1ByZvsRSsqW2JWox\n-78c6AbclWw0QLdQd4Pxk8k5hpeN/EtneVnFDX3hOq/C9fZs6f5aAKn81WXqPPPk6\n-G0b7KzlUoCWGlO7M5LzEzWmWvGPs7W8y2Uil99CVABEBAAGJAiUEGAEIAA8FAlYH\n-OocCGwwFCQPCZwAACgkQvNBNjpzMrCr50BAApY22DRYqmtALFieREu78BvjQT/DY\n-f9Smkga1YVr9/Ph9NJ5iSVeM8mrVkwZnGRK1UCjk16rsmB70IqlnJnyJGXqPMj7M\n-3ioOWY8fCL8fmLI2g0TbXXKl3e0nGByGXW4pwyLYa/hR7XJMco/PxqIGhEKcCIRP\n-dxq/6U9T9SYe2IkfXBYZAxfUTE2FkRpw1zSfZN3z32LM7ICZ26NRHRWo4Kv5sij4\n-0mYYecFmWdf6ib5pPCI0HmPGpblbmZgR1LoJNmuNxfpgEnPe8BbxtO4mueNW5A39\n-y7gLCmDZ8MaOGxvjGByBoXxXP62BiU910iZZZurjSD+3FD+NUX0m4yxVIZCkuInY\n-QzLxFACr26IYpcsPHIYGnEjDBFw9hHdP6tzKbjzgVSZESheQf2zwit0YYSjwHQN/\n-XGnBy8+p66As61jg8mcAN2Zd8vwFKZOvfEnSsaoK5ssAh8jixhPj+Ujgs0/PB8t/\n-ON20yr+YRAwU+RVnC/vfvrM83mjoz4mbmSLapFz/xWNhoS0ZczYEI5CyxE8peGPX\n-gd/7tim2OqUuZ3SlH5TZP3pdJcqxTNN7iNaWy1wAY/sb8As3Pge/Vv5hSYmHNjQy\n-h/62SSbTf6OZCuUGjy8fvVj51SclVKqGNprmAqVrIy0J+VeTKj4r7PGesPWJavRc\n-RFdDYRHByRDDL1I=\n-=dOwX\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-keys/sipa-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/sipa-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "2b5acc82aa47c6804a0b89ad426e26f9bad751a5",
        "filename": "contrib/gitian-keys/sjors-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 76,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/sjors-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/sjors-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/sjors-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,76 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-\n-mQINBFWSwMoBEADG31O8+ex+xpgzVKQgF4iVRE5uBPT0+GM6FnwqIIhXVKiBLQh8\n-YDhhgk6joh+vsLrFzKZ9kXwoiHN8y/AiNCQ0xjAUdpznD5xvHAaGIAlT/sodRNT+\n-869WgT9G1uiVp0P4ucEeilmhCn9o51LqkS3roXkj0ec52b1pslUl2WKdu1ZD+Bj4\n-3/oVZm7mmjkDwl0RHJQmqlK0bunq0jlVlgH5sdQfmLbCZaq3LhVPf73zt5qHH+J6\n-ZbU7A4cqm2eN5SyH+Nno+cq3+vXmvVI+x/jPe/dPDCXaGWf5fWI/Lbk/mMP7JAl1\n-6X44CN+hZHUnNuzeZt2/ROWZ0s0JJcjQkSe9noUQedjBAHX82s886vsFzOHvDtul\n-EuV/XAjUlkhMbhZkZaIq9ucqHmUBI4+OcFEIbbKc9TrKtJe+CYuWTNlomVk/iFr8\n-zSm/S64NiqKi/BeQGgcsDZIaJDYfDP83esOOaaxFswHnJNtHnU1PwntrJtXft0dK\n-ydtlQZ6r96SYxLDTeGfC2SNk0zbnKAGvjj04vzQeN+JSRZ75tNKmgdbJdNL8wvPh\n-879TpCwMhNDvSRG+YqCe6whaJV76a+Doxg48HCJYaj6bnRn41/QGJEyL31I8l/7S\n-YsLLmAEbqwG7erYi7WZS3cRrGJI8RwohGMZf7yraqoaOgMKmtE/Sq0tLtwARAQAB\n-tCNTam9ycyBQcm92b29zdCA8c2pvcnNAc3Byb3Zvb3N0Lm5sPokCQAQTAQoAKgIb\n-AwUJB4YfgAULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAUCWWXcoAIZAQAKCRBX/5vb\n-zDAQCeYJD/47XDMfEMg4g4spo7k92XsNkvjlAhWvvxd+kxow/V8c64WQXody32FZ\n-HRSmK8dVjf9mIJMKkX4lpKpim7cQxsdTcorcdu+yk4TK+Wah61vsMhbSSllfHs1U\n-+q8jYMGnXTD+CY0aeTMrTfJcR2yN98jmNSWIL1qWmJ51RSTL6BQKb6eYtR7pWRkW\n-uMR6oFC09Db4fiKa4zhH81+/t0g+6pMY391gSluaS+OfNqGORCo+/IdG5IDzh5Vp\n-f19qXjd5oMsZQf6/P4b4XUktgl8RVRcNzdYGoXpcd8LpeHtEOh5I93ODmCwqd67b\n-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\n-N5Ug\n-=80Es\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "baaec76b8c656a04beb4a91155dff40658c87bd7",
        "filename": "contrib/gitian-keys/tcatm-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/tcatm-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/tcatm-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/tcatm-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "a3b58ad9940200a4f9157a5b4dc10357b284dc29",
        "filename": "contrib/gitian-keys/willyko-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 85,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/willyko-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/willyko-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/willyko-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,85 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-mQINBFgs/RoBEADFxycJTUvwqzBZZ0aBZXbmr8Ppd3EPrgBRd47k7uwanf7UFmvY\n-Xt4gMEI+EdV0GuoQ0SeoAmQqc5Fxu3AQe2XFbiF+ZNNYT3+V/5GAzWsAH22ncQr0\n-AuK95pPi+PZ+M2h669cq/RzFUXZDew0NobR2oBS5h6g3rgmmejVLRqnUpWkkSrqi\n-aNgD2GSn8g820wM6LpdxcjTqmMpHHT5owAbv0UP3IcdtpBaS5McoUXK+OAdKK/Zw\n-JQ0J1kx4vIyNwuPD3klziGQw8Izb/gFpWg8XaJmMhD5BxNuXJC58Bj9/sFTc0GDQ\n-VKMFpYpNi8a6hLPFb4hMjYF77awoz57HtyOOsS03KO/57QE1htx+2NeDm4XkZSBk\n-+wrU3zgbtmOBcfzEHS/HrROksYDi+Qw3HZL98nfDEWNfsDzfhMZ9wHdM3NsR2xk6\n-oNtX0CprS1n2Xr2AY9X1oNgiZCJaSftU67j3lr+9gHOH61ktxt3cUCDodUFjkpKn\n-r1CQ2LB63AoUbwGMAeozdXZWzbXJAJbcH9G77zEi9rW0WA2yMSxTXHlpE9MS0UcE\n-BVkIMv2b9iQzlhiS8jh8AiKFO1PuT26Cw52N/lSPhA81zw79pZfSYwKFICGHYfvw\n-ozZeN9Q+PPl5tqi/3SExxlZKe8EmaveTrUfKMBS4lQO2gWe0bCFgLOIzIwARAQAB\n-tB1XaWxseSBLbyA8d2lsbHlrQHN5c2NvaW4ub3JnPokCOAQTAQIAIgUCWCz9GgIb\n-AwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQjjqPMkfby7+0wA//cX7Tc3Nz\n-19ApwSbGfC8pJA/nSybcVivroJRftpzeOmYrVM084T9REvYwugl89djvxn6m96iQ\n-kqoUGWhBVBtDReVCL7z53G42lHjemaFcxBhIazKxO0qvcc/UXUVOs2OdUbzObDFL\n-dHO5xBVqEnW3sq+r4blsXR8U79B9IIri4+2hy4OoEjYv9DzBaaoaqU+F3mudXbmo\n-R+hsWc+mklV++TX/kuw6EWT8tusFjXrfqqKcKPRPhbn48OSGWsEPc7yELf7pYFR8\n-uDU40faJqkvQ83h5WMTDAhLxd/918ZitqBhjSP+7Humf2YhSto7YmtEWlbeAW+qy\n-TcBYkK6SJh8Do3xZd/prFBKEu395n5VQKuLjXaOjqMc1oDHQyPJJjXSN5thLHvan\n-z7nNLt2QZO/kxXITDdbWlktVe/WSoive7TuY4dGuX4Si2z9wyhFYxtZDsqE0qmqN\n-jIDAZ7u8Qq/LGqpdjOmYr2fEwHe1yVIS+BtVGvtShkX+J+QPb8qBl1d7Ii5i5Afl\n-GJoLLIUFkPcIRTYPZpppGSuqfyWdNnaasbLH44lxJisSMMw+fxZabt2bykYN/ZXa\n-RP/ItDj81vklg+n6r4f/nZTF1r0UUy4LbSbBY15B4Xm0Tdvh1PMfj/w2q10l7bZB\n-XLi9Z/QPaW7TyzaBuLkVckbVFn2nYnXfzHG5Ag0EWCz9GgEQALCgTibFnw+Q3PEL\n-G5/peQcQqHxrPAB37HV39B1DedGhVUa6aGSUaLoNMyUjUX1HWN3mWFKTYVB4CH5Y\n-xjaXUwxdwCZgBNe4TDglKFPuc+frlSTZxDVE9/fjArmrUP6TPU447ujspyngGLa5\n-et5Uig/LxIX/+Mm0ZiYJxb1rMJwK998U1Ev1aHxgNjwTI2ehcKu8CAGOyflzh6a2\n-iTBUmLfnQMv5248P2d4P8WDiPq61CWTYTMCFqHqkYKy7h9BYIuMajw3KsgOUNfL2\n-1e9Ue8yv5UchZ+GDlBjidIkoK1nd2uJ0kPJkafLGWbcliJfvXxKliZnSbz1Cd4A0\n-HDKKCwiuwSLy2aYbs7IRtAOyDER4+fjBcqtf0QTIvoAdNZ9gL64DKVaB58vuSixj\n-K1i83XbTOt3q821HxxBrX9u6HP2E5kFdxT2KHDbisAWNP0rFnHVpjugehKFfZb6q\n-jbDt3nQL5uCQ8gTNCd4fsoSK6KhCDjamDXlKmaGlxqwOV4W8ZwihoeGt690h7NIH\n-h4eiSmMOej3or32lcDETEwrjA2PxvcFsikFc56hRkTaSyyBEH2xhkRrjXMqiQfH0\n-j7iOY2PWpFEuu2HVzqe5dBXzn9sMIwxeNCxR/P+xHMqPUlgD1SXEYCNLvvzD6p0+\n-kqSe7PiJoEIv351T3hnBhQ6rK0ChABEBAAGJAh8EGAECAAkFAlgs/RoCGwwACgkQ\n-jjqPMkfby7/mQA//YsAOdDBl0GscB1PBNXi8VMlI7yG9cqiGrYnZX7h4wUoGEbPI\n-jap/PixIsxBCf1BqBRDJdFyvzH9amLlcaVNdCyh6Yt1Pi8kassmz/kbIYgpbFkIL\n-ES9N24N7BZ94P77OQy5wic+B4WqJnVrtKr9JBalgBSOMqtccYCma5Ew00mqp+FXM\n-suDyBk2HXyl+u6/rRmqZ+BoU8iRpus9F80LFKGEsAgjLjKv68KmApzjunzsBotKk\n-g9AsBk4ygbp+nECAtsxpbLMo4hPr4qWm7G4mU5g4xOK2chpAPeqyf0857RWgsXaO\n-kjrUu/M5Hme2eIlXwBF14ac4QPnY1rlAIaulvXzmQnMYQFZiw9vaTOdqBFHjkh7T\n-XYRAr589Woo25PfMJCbC+Rop6ku6sCFMorbBwojyRhFJnk9xsy5kP5D9IhkPAKu/\n-/ABlei0xPOl/gCUUJP7aIikZgS5lAk1TSe/R+yV6ExNwudtLw1G0K2/sY3B4Xo3X\n-Q1lTAQPlnAIeK/vlbttLZNIBWquw4cPAkPpIyjmE1dd6jGQdUyZE22uPBx+gpq1w\n-AacmVLwvPMe1De0ilJOzj6KpXWBCwt0DWXWztovpBVcAC+qbTrZF9H5dllpqyzKt\n-OvxzGssjrX4rDkOx7MyVa2tnXmeCuSN/RvlOUwPvf5zYM8Wh9g7fc6jcDQu5Ag0E\n-WfkOfAEQAMNkzAQqSenpXtHsnuCqM1oMMF2kRzny/Jqh3q3BxZ8MHLDhoRRaTENu\n-lA4APRXMNM/wlZJUSLX8wWBhufnsPtMf6OOVMZ4AVbXHjUgyJ7lO1zHdj0u6PpYP\n-9gmHthIz7FF+cxHj4ziC4CmtRctrn+/U4MwYtNPhxkTnS26oOZes/HXMYSvQBMgT\n-AP27GNOBiJRthjIEITvSvS0YZOxgLtWgGiks/pGUw5wm1rguuQVyZ1/LfXBooYJo\n-u/v21AEjpuTg7JlwbqXr2k5LojAGq7AxDyWy21IW0E45Gog38zg/hwNll+hjRbSu\n-pipf74WXR6xMMlW6A+XWUvElkicfDx8e9LJUnqWbZ+FL7X4SB54ZHNCvfo/8Ug1V\n-2tiY9WbUZL9n5ZQHNlk3J+UK/KDvwey1VzKPFjpQNlfahhnppDGiCey+mERjI+75\n-gPbk0ctOAEYXgLJjoonGX+iByAfY0YyJF281CtaK/sXQU+TzLLT15WET+gYGsJdY\n-xh1PdPscNdSgYudvbKZoFnqUwEGEfD8dT5bjOphfY5+LvGUR2GuLNZpMidcduTYf\n-SWAY/vQHQIJArXu29BKscm3tg6tzXu3l9p/bGIQUQB7obN91y3xD3BLICIPRGhKE\n-924wxxCuH1vLKmxWDdAAxKo+rEdLJ/rbZnjWQENEFiJ114fBk2NVABEBAAGJBEQE\n-GAEIAA8FAln5DnwCGwIFCQPCZwACKQkQjjqPMkfby7/BXSAEGQEIAAYFAln5DnwA\n-CgkQYFGSo/6YSmANoQ//SbcKxkop2zA2HrWS4THcEJQwSJ0KGAN/VB83JQhoWThX\n-CWxsFNJjBy7+rsoXd3wQG1/aN42nTuj+eh+R6WJJaqqnMqd52l4Kc1kJA6z4DGsy\n-3azCDvyzibM0AkJyMJyYi6HRKjzA4M+xKR1HoT/NdQUP5CBUVfvMblSaOWiw4rja\n-IhWcbgbQ+Zam/VaV5l1O90eaD9tL3twSfPLYZ/wkeO63jJKHBpI8fpMql/bLg9WD\n-Au3h/lU63NWe5lZO1z/jIdfiTSvg8nu162vcOgmUCWo9spkybjJd0Mx6ZId79rVo\n-58lwZ4QoaMgPGoVP67LyLOxJTIXeyG5xr1LxhMPMGbnBhlnMQrboLV9kPEL3raHE\n-EEKDTtZimVK3ZxmfyBd6MDmwcL/K73xu/R8be9TgdwD8/BZJSOTkO87qZ82G9T7E\n-oY5IHU+qd41/Yjbut7AVtAlCr5Lor31EYvZh3gI/H8uZFddOu37Ij7e9Fw2ywv3A\n-wPks89tfOvahkfCOJ29znB+uQYpJ461jjhdkB7EHG4ae07M5rRtkNbIc3dqbnMhz\n-VA3JpRJN77xPXV7uITHo1s+b50RvWmfYW91zvipaSZxbMLuGBMhn/1QaM1djLOYN\n-JordDBwEr2bi5a063yUbZrk6ddECuyxndDHWDNr+Tqx6o7lmAT48UJ199zA4scbf\n-2g/9EiRPGcRovsn1tUdjzfmWDxhrRV6F3rYJB1+i6Mqeg2iHHYxxiNDXcuWYXHQ/\n-WPWLk5+lgh0rQbrE7InzEejoM0FIHzLTm0lSQpau50/PT2FiH6sOEEDyT2IhBtXX\n-eOnKAi1IfGNMzEaPEY8PXH78dEGv0iXIgy4l8Bc57q09Z9R/OUi+Yb1p+S5F/aOi\n-7Jd53GGE1bfBIlsMos092XoiMdvKmAczyCUIempKHUBPoqfJge77qk7zJKkyM3Dk\n-VX0lXLdhj0PfslFrNf2uRF4uZkmfUV7peeD023c0/SVp3ILUAVds52yawi6Exv4a\n-bbvhIw72fc31frCRBqc9HVsBraoozzE9bksG1MdNI3GgKxecOu9lldedlIqi4lO4\n-7kTVDLEmcsQO+sSxkXQz2sMSD01CQndpPuhFNlqvVnfK+Kv8pSG37VzSSQz1nt5K\n-w/fJBo4T/ztR7D9RzbSDxBP8Jjaa+UYabjab5HcE0JI4CpgmzIOB7qPVbYCn+LNX\n-c8Xw5/9iTw+ayawl7PCGRfd14/OPRzI8vS0I9bF8AG84XM46yxAtYieH/9RI3b6/\n-GiQYDkBNi6Kb1LfSzx8oKAkbMgiy4y3vWxLQnE34bAoXjGiYdAMliOsyGcvmnObD\n-GmSTIlIqunq60CyhaUSIkl2VRhjzz0igfS9751XEvnjeXDc=\n-=PVBi\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-keys/wtogami-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 131,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/gitian-keys/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/wtogami-key.pgp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,131 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.13 (GNU/Linux)\n-\n-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\n-=icdI\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "1a949f3c078bec11afeb991ccc28dac640481082",
        "filename": "contrib/init/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,12 +0,0 @@\n-Sample configuration files for:\n-```\n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n-```\n-have been made available to assist packagers in creating node packages here.\n-\n-See doc/init.md for more information."
      },
      {
        "sha": "de4ea0ed522d1c6d764e5e05a5939e097b420e86",
        "filename": "contrib/init/bitcoind.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,65 +0,0 @@\n-description \"Bitcoin Core Daemon\"\n-\n-start on runlevel [2345]\n-stop on starting rc RUNLEVEL=[016]\n-\n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-# upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-expect fork\n-\n-respawn\n-respawn limit 5 120\n-kill timeout 60\n-\n-pre-start script\n-    # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n-    # long after forking, leaving upstart to think everything started fine.\n-    # since this is a commonly encountered case on install, just check and\n-    # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n-        echo\n-        echo \"This password is security critical to securing wallets \"\n-        echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following \"\n-        echo \"command from the shell:\"\n-        echo\n-        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-        echo\n-        echo \"It is recommended that you also set alertnotify so you are \"\n-        echo \"notified of problems:\"\n-        echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-            \"admin@foo.com\"\n-        echo\n-        exit 1\n-    fi\n-\n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n-end script\n-\n-exec start-stop-daemon \\\n-    --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n-    -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n-    -disablewallet \\\n-    -daemon\n-"
      },
      {
        "sha": "db5061874b3a923278fa11d4f3117fca19da1bcc",
        "filename": "contrib/init/bitcoind.init",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,67 +0,0 @@\n-#!/bin/bash\n-#\n-#  bitcoind The bitcoin core server.\n-#\n-#\n-# chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n-#\n-\n-# Source function library.\n-. /etc/init.d/functions\n-\n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n-fi\n-\n-RETVAL=0\n-\n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n-\n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n-\n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n-\n-start() {\n-    echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && touch $lockfile\n-    return $RETVAL\n-}\n-\n-stop() {\n-    echo -n $\"Stopping $prog: \"\n-    killproc $prog\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && rm -f $lockfile\n-    return $RETVAL\n-}\n-\n-case \"$1\" in\n-    start)\n-        start\n-        ;;\n-    stop)\n-        stop\n-        ;;\n-    status)\n-        status $prog\n-        ;;\n-    restart)\n-        stop\n-        start\n-        ;;\n-    *)\n-        echo \"Usage: service $prog {start|stop|status|restart}\"\n-        exit 1\n-        ;;\n-esac"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/openrc-run\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following \"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "f70e25cb5fdd29e49de2c89b81bd92633e5b93df",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-#BITCOIND_OPTS=\"\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "ee113d7615c2625ac49429d473127bc992e05dfc",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,25 +0,0 @@\n-# It is not recommended to modify this file in-place, because it will\n-# be overwritten during package upgrades. If you want to add further\n-# options or overwrite existing ones then use\n-# $ systemctl edit bitcoind.service\n-# See \"man systemd.service\" for details.\n-\n-# Note that almost all daemon options could be specified in\n-# /etc/bitcoin/bitcoin.conf\n-\n-[Unit]\n-Description=Bitcoin daemon\n-After=network.target\n-\n-[Service]\n-ExecStart=/usr/bin/bitcoind -daemon -conf=/etc/bitcoin/bitcoin.conf -pid=/run/bitcoind/bitcoind.pid\n-# Creates /run/bitcoind owned by bitcoin\n-RuntimeDirectory=bitcoind\n-User=bitcoin\n-Type=forking\n-PIDFile=/run/bitcoind/bitcoind.pid\n-Restart=on-failure\n-PrivateTmp=true\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "95b5342f1ef9dc9b9bb66538d0cc842d02951d62",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n-\t<key>ProgramArguments</key>\n-\t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n-\t</array>\n-\t<key>RunAtLoad</key>\n-\t<true/>\n-</dict>\n-</plist>"
      },
      {
        "sha": "b57ade139dd8c5c32d31281bbb7f25f41d08bd08",
        "filename": "contrib/install_db4.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,86 +0,0 @@\n-#!/bin/sh\n-\n-# Install libdb4.8 (Berkeley DB).\n-\n-set -e\n-\n-if [ -z \"${1}\" ]; then\n-  echo \"Usage: ./install_db4.sh <base-dir> [<extra-bdb-configure-flag> ...]\"\n-  echo\n-  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n-  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n-  exit 1\n-fi\n-\n-expand_path() {\n-  echo \"$(cd \"${1}\" && pwd -P)\"\n-}\n-\n-BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n-BDB_VERSION='db-4.8.30.NC'\n-BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n-BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n-\n-check_exists() {\n-  which \"$1\" >/dev/null 2>&1\n-}\n-\n-sha256_check() {\n-  # Args: <sha256_hash> <filename>\n-  #\n-  if check_exists sha256sum; then\n-    echo \"${1}  ${2}\" | sha256sum -c\n-  elif check_exists sha256; then\n-    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n-      sha256 -c \"${1}\" \"${2}\"\n-    else\n-      echo \"${1}  ${2}\" | sha256 -c\n-    fi\n-  else\n-    echo \"${1}  ${2}\" | shasum -a 256 -c\n-  fi\n-}\n-\n-http_get() {\n-  # Args: <url> <filename> <sha256_hash>\n-  #\n-  # It's acceptable that we don't require SSL here because we manually verify\n-  # content hashes below.\n-  #\n-  if [ -f \"${2}\" ]; then\n-    echo \"File ${2} already exists; not downloading again\"\n-  elif check_exists curl; then\n-    curl --insecure \"${1}\" -o \"${2}\"\n-  else\n-    wget --no-check-certificate \"${1}\" -O \"${2}\"\n-  fi\n-\n-  sha256_check \"${3}\" \"${2}\"\n-}\n-\n-mkdir -p \"${BDB_PREFIX}\"\n-http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n-tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n-cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n-\n-# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n-CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n-CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n-http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n-patch -p2 < clang.patch\n-\n-cd build_unix/\n-\n-\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n-  --enable-cxx --disable-shared --with-pic --prefix=\"${BDB_PREFIX}\" \\\n-  \"${@}\"\n-\n-make install\n-\n-echo\n-echo \"db4 build complete.\"\n-echo\n-echo 'When compiling bitcoind, run `./configure` in the following way:'\n-echo\n-echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n-echo '  ./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" ...'"
      },
      {
        "sha": "2985106982788c8bfa31ee077b05e8e77ba19e72",
        "filename": "contrib/linearize/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,55 +0,0 @@\n-# Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain. The scripts\n-run using Python 3 but are compatible with Python 2.\n-\n-## Step 1: Download hash list\n-\n-    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n-\n-Required configuration file settings for linearize-hashes:\n-* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n-* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n-\n-Optional config file setting for linearize-hashes:\n-* RPC: `host`  (Default: `127.0.0.1`)\n-* RPC: `port`  (Default: `8332`)\n-* Blockchain: `min_height`, `max_height`\n-* `rev_hash_bytes`: If true, the written block hash list will be\n-byte-reversed. (In other words, the hash returned by getblockhash will have its\n-bytes reversed.) False by default. Intended for generation of\n-standalone hash lists but safe to use with linearize-data.py, which will output\n-the same data no matter which byte format is chosen.\n-\n-The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n-\n-## Step 2: Copy local block data\n-\n-    $ ./linearize-data.py linearize.cfg\n-\n-Required configuration file settings:\n-* `output_file`: The file that will contain the final blockchain.\n-      or\n-* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n-\n-Optional config file setting for linearize-data:\n-* `debug_output`: Some printouts may not always be desired. If true, such output\n-will be printed.\n-* `file_timestamp`: Set each file's last-accessed and last-modified times,\n-respectively, to the current time and to the timestamp of the most recent block\n-written to the script's blockchain.\n-* `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n-* `hashlist`: text file containing list of block hashes created by\n-linearize-hashes.py.\n-* `max_out_sz`: Maximum size for files created by the `output_file` option.\n-(Default: `1000*1000*1000 bytes`)\n-* `netmagic`: Network magic number.\n-* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be sought again.\n-This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n-* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n-will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n-entry for more information.\n-* `split_timestamp`: Split blockchain files when a new month is first seen, in\n-addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "2315898bf1d7561260fe3a3b5c1dd21c09ca0d9b",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,50 +0,0 @@\n-# bitcoind RPC settings (linearize-hashes)\n-rpcuser=someuser\n-rpcpassword=somepassword\n-#datadir=~/.bitcoin\n-host=127.0.0.1\n-\n-#mainnet default\n-port=8332\n-\n-#testnet default\n-#port=18332\n-\n-#regtest default\n-#port=18443\n-\n-# bootstrap.dat hashlist settings (linearize-hashes)\n-max_height=313000\n-\n-# bootstrap.dat input/output settings (linearize-data)\n-\n-# mainnet\n-netmagic=f9beb4d9\n-genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n-\n-# testnet\n-#netmagic=0b110907\n-#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n-\n-# \"output\" option causes blockchain files to be written to the given location,\n-# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n-# output=/home/example/blockchain_directory\n-output_file=/home/example/Downloads/bootstrap.dat\n-hashlist=hashlist.txt\n-\n-# Maximum size in bytes of out-of-order blocks cache in memory\n-out_of_order_cache_sz = 100000000\n-\n-# Do we want the reverse the hash bytes coming from getblockhash?\n-rev_hash_bytes = False\n-\n-# On a new month, do we want to set the access and modify times of the new\n-# blockchain file?\n-file_timestamp = 0\n-# Do we want to split the blockchain files given a new month or specific height?\n-split_timestamp = 0\n-\n-# Do we want debug printouts?\n-debug_output = False"
      },
      {
        "sha": "4969e968278f7857798be54dd704bab7365addc1",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "removed",
        "additions": 0,
        "deletions": 322,
        "changes": 322,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,322 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-data.py: Construct a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from __future__ import print_function, division\n-import struct\n-import re\n-import os\n-import os.path\n-import sys\n-import hashlib\n-import datetime\n-import time\n-from collections import namedtuple\n-from binascii import hexlify, unhexlify\n-\n-settings = {}\n-\n-##### Switch endian-ness #####\n-def hex_switchEndian(s):\n-\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-\treturn b''.join(pairList[::-1]).decode()\n-\n-def uint32(x):\n-\treturn x & 0xffffffff\n-\n-def bytereverse(x):\n-\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n-\n-def bufreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n-\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn b''.join(out_words)\n-\n-def wordreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tout_words.append(in_buf[i:i+4])\n-\tout_words.reverse()\n-\treturn b''.join(out_words)\n-\n-def calc_hdr_hash(blk_hdr):\n-\thash1 = hashlib.sha256()\n-\thash1.update(blk_hdr)\n-\thash1_o = hash1.digest()\n-\n-\thash2 = hashlib.sha256()\n-\thash2.update(hash1_o)\n-\thash2_o = hash2.digest()\n-\n-\treturn hash2_o\n-\n-def calc_hash_str(blk_hdr):\n-\thash = calc_hdr_hash(blk_hdr)\n-\thash = bufreverse(hash)\n-\thash = wordreverse(hash)\n-\thash_str = hexlify(hash).decode('utf-8')\n-\treturn hash_str\n-\n-def get_blk_dt(blk_hdr):\n-\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n-\tnTime = members[0]\n-\tdt = datetime.datetime.fromtimestamp(nTime)\n-\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n-\treturn (dt_ym, nTime)\n-\n-# When getting the list of block hashes, undo any byte reversals.\n-def get_block_hashes(settings):\n-\tblkindex = []\n-\tf = open(settings['hashlist'], \"r\")\n-\tfor line in f:\n-\t\tline = line.rstrip()\n-\t\tif settings['rev_hash_bytes'] == 'true':\n-\t\t\tline = hex_switchEndian(line)\n-\t\tblkindex.append(line)\n-\n-\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n-\n-\treturn blkindex\n-\n-# The block map shouldn't give or receive byte-reversed hashes.\n-def mkblockmap(blkindex):\n-\tblkmap = {}\n-\tfor height,hash in enumerate(blkindex):\n-\t\tblkmap[hash] = height\n-\treturn blkmap\n-\n-# Block header and extent on disk\n-BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n-\n-class BlockDataCopier:\n-\tdef __init__(self, settings, blkindex, blkmap):\n-\t\tself.settings = settings\n-\t\tself.blkindex = blkindex\n-\t\tself.blkmap = blkmap\n-\n-\t\tself.inFn = 0\n-\t\tself.inF = None\n-\t\tself.outFn = 0\n-\t\tself.outsz = 0\n-\t\tself.outF = None\n-\t\tself.outFname = None\n-\t\tself.blkCountIn = 0\n-\t\tself.blkCountOut = 0\n-\n-\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n-\t\tself.highTS = 1408893517 - 315360000\n-\t\tself.timestampSplit = False\n-\t\tself.fileOutput = True\n-\t\tself.setFileTime = False\n-\t\tself.maxOutSz = settings['max_out_sz']\n-\t\tif 'output' in settings:\n-\t\t\tself.fileOutput = False\n-\t\tif settings['file_timestamp'] != 0:\n-\t\t\tself.setFileTime = True\n-\t\tif settings['split_timestamp'] != 0:\n-\t\t\tself.timestampSplit = True\n-\t\t# Extents and cache for out-of-order blocks\n-\t\tself.blockExtents = {}\n-\t\tself.outOfOrderData = {}\n-\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n-\n-\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n-\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n-\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n-\t\t\tself.outF.close()\n-\t\t\tif self.setFileTime:\n-\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n-\t\t\tself.outF = None\n-\t\t\tself.outFname = None\n-\t\t\tself.outFn = self.outFn + 1\n-\t\t\tself.outsz = 0\n-\n-\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n-\t\tif self.timestampSplit and (blkDate > self.lastDate):\n-\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n-\t\t\tself.lastDate = blkDate\n-\t\t\tif self.outF:\n-\t\t\t\tself.outF.close()\n-\t\t\t\tif self.setFileTime:\n-\t\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n-\t\t\t\tself.outF = None\n-\t\t\t\tself.outFname = None\n-\t\t\t\tself.outFn = self.outFn + 1\n-\t\t\t\tself.outsz = 0\n-\n-\t\tif not self.outF:\n-\t\t\tif self.fileOutput:\n-\t\t\t\tself.outFname = self.settings['output_file']\n-\t\t\telse:\n-\t\t\t\tself.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-\t\t\tprint(\"Output file \" + self.outFname)\n-\t\t\tself.outF = open(self.outFname, \"wb\")\n-\n-\t\tself.outF.write(inhdr)\n-\t\tself.outF.write(blk_hdr)\n-\t\tself.outF.write(rawblock)\n-\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n-\n-\t\tself.blkCountOut = self.blkCountOut + 1\n-\t\tif blkTS > self.highTS:\n-\t\t\tself.highTS = blkTS\n-\n-\t\tif (self.blkCountOut % 1000) == 0:\n-\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n-\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n-\n-\tdef inFileName(self, fn):\n-\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n-\n-\tdef fetchBlock(self, extent):\n-\t\t'''Fetch block contents from disk given extents'''\n-\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n-\t\t\tf.seek(extent.offset)\n-\t\t\treturn f.read(extent.size)\n-\n-\tdef copyOneBlock(self):\n-\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n-\t\textent = self.blockExtents.pop(self.blkCountOut)\n-\t\tif self.blkCountOut in self.outOfOrderData:\n-\t\t\t# If the data is cached, use it from memory and remove from the cache\n-\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n-\t\t\tself.outOfOrderSize -= len(rawblock)\n-\t\telse: # Otherwise look up data on disk\n-\t\t\trawblock = self.fetchBlock(extent)\n-\n-\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n-\n-\tdef run(self):\n-\t\twhile self.blkCountOut < len(self.blkindex):\n-\t\t\tif not self.inF:\n-\t\t\t\tfname = self.inFileName(self.inFn)\n-\t\t\t\tprint(\"Input file \" + fname)\n-\t\t\t\ttry:\n-\t\t\t\t\tself.inF = open(fname, \"rb\")\n-\t\t\t\texcept IOError:\n-\t\t\t\t\tprint(\"Premature end of block data\")\n-\t\t\t\t\treturn\n-\n-\t\t\tinhdr = self.inF.read(8)\n-\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n-\t\t\t\tself.inF.close()\n-\t\t\t\tself.inF = None\n-\t\t\t\tself.inFn = self.inFn + 1\n-\t\t\t\tcontinue\n-\n-\t\t\tinMagic = inhdr[:4]\n-\t\t\tif (inMagic != self.settings['netmagic']):\n-\t\t\t\tprint(\"Invalid magic: \" + hexlify(inMagic).decode('utf-8'))\n-\t\t\t\treturn\n-\t\t\tinLenLE = inhdr[4:]\n-\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n-\t\t\tinLen = su[0] - 80 # length without header\n-\t\t\tblk_hdr = self.inF.read(80)\n-\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n-\n-\t\t\tself.hash_str = calc_hash_str(blk_hdr)\n-\t\t\tif not self.hash_str in blkmap:\n-\t\t\t\t# Because blocks can be written to files out-of-order as of 0.10, the script\n-\t\t\t\t# may encounter blocks it doesn't know about. Treat as debug output.\n-\t\t\t\tif settings['debug_output'] == 'true':\n-\t\t\t\t\tprint(\"Skipping unknown block \" + self.hash_str)\n-\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\t\t\t\tcontinue\n-\n-\t\t\tblkHeight = self.blkmap[self.hash_str]\n-\t\t\tself.blkCountIn += 1\n-\n-\t\t\tif self.blkCountOut == blkHeight:\n-\t\t\t\t# If in-order block, just copy\n-\t\t\t\trawblock = self.inF.read(inLen)\n-\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n-\n-\t\t\t\t# See if we can catch up to prior out-of-order blocks\n-\t\t\t\twhile self.blkCountOut in self.blockExtents:\n-\t\t\t\t\tself.copyOneBlock()\n-\n-\t\t\telse: # If out-of-order, skip over block data for now\n-\t\t\t\tself.blockExtents[blkHeight] = inExtent\n-\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n-\t\t\t\t\t# If there is space in the cache, read the data\n-\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n-\t\t\t\t\t# but we don't want to fill up memory\n-\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n-\t\t\t\t\tself.outOfOrderSize += inLen\n-\t\t\t\telse: # If no space in cache, seek forward\n-\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\n-\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\t# Force hash byte format setting to be lowercase to make comparisons easier.\n-\t# Also place upfront in case any settings need to know about it.\n-\tif 'rev_hash_bytes' not in settings:\n-\t\tsettings['rev_hash_bytes'] = 'false'\n-\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-\tif 'netmagic' not in settings:\n-\t\tsettings['netmagic'] = 'f9beb4d9'\n-\tif 'genesis' not in settings:\n-\t\tsettings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n-\tif 'input' not in settings:\n-\t\tsettings['input'] = 'input'\n-\tif 'hashlist' not in settings:\n-\t\tsettings['hashlist'] = 'hashlist.txt'\n-\tif 'file_timestamp' not in settings:\n-\t\tsettings['file_timestamp'] = 0\n-\tif 'split_timestamp' not in settings:\n-\t\tsettings['split_timestamp'] = 0\n-\tif 'max_out_sz' not in settings:\n-\t\tsettings['max_out_sz'] = 1000 * 1000 * 1000\n-\tif 'out_of_order_cache_sz' not in settings:\n-\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n-\tif 'debug_output' not in settings:\n-\t\tsettings['debug_output'] = 'false'\n-\n-\tsettings['max_out_sz'] = int(settings['max_out_sz'])\n-\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n-\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n-\tsettings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n-\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n-\tsettings['debug_output'] = settings['debug_output'].lower()\n-\n-\tif 'output_file' not in settings and 'output' not in settings:\n-\t\tprint(\"Missing output file / directory\")\n-\t\tsys.exit(1)\n-\n-\tblkindex = get_block_hashes(settings)\n-\tblkmap = mkblockmap(blkindex)\n-\n-\t# Block hash map won't be byte-reversed. Neither should the genesis hash.\n-\tif not settings['genesis'] in blkmap:\n-\t\tprint(\"Genesis block not found in hashlist\")\n-\telse:\n-\t\tBlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "6b69c5b3a379df7277e31f7a30ffb0f17a021897",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "removed",
        "additions": 0,
        "deletions": 157,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,157 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from __future__ import print_function\n-try: # Python 3\n-    import http.client as httplib\n-except ImportError: # Python 2\n-    import httplib\n-import json\n-import re\n-import base64\n-import sys\n-import os\n-import os.path\n-\n-settings = {}\n-\n-##### Switch endian-ness #####\n-def hex_switchEndian(s):\n-\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-\treturn b''.join(pairList[::-1]).decode()\n-\n-class BitcoinRPC:\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tauthpair = authpair.encode('utf-8')\n-\t\tself.authhdr = b\"Basic \" + base64.b64encode(authpair)\n-\t\tself.conn = httplib.HTTPConnection(host, port=port, timeout=30)\n-\n-\tdef execute(self, obj):\n-\t\ttry:\n-\t\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t\t  'Content-type' : 'application/json' })\n-\t\texcept ConnectionRefusedError:\n-\t\t\tprint('RPC connection refused. Check RPC settings and the server status.',\n-\t\t\t      file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tbody = resp.read().decode('utf-8')\n-\t\tresp_obj = json.loads(body)\n-\t\treturn resp_obj\n-\n-\t@staticmethod\n-\tdef build_request(idx, method, params):\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : idx }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\treturn obj\n-\n-\t@staticmethod\n-\tdef response_is_error(resp_obj):\n-\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n-\n-def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t settings['rpcuser'], settings['rpcpassword'])\n-\n-\theight = settings['min_height']\n-\twhile height < settings['max_height']+1:\n-\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n-\t\tbatch = []\n-\t\tfor x in range(num_blocks):\n-\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n-\n-\t\treply = rpc.execute(batch)\n-\t\tif reply is None:\n-\t\t\tprint('Cannot continue. Program will halt.')\n-\t\t\treturn None\n-\n-\t\tfor x,resp_obj in enumerate(reply):\n-\t\t\tif rpc.response_is_error(resp_obj):\n-\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\tsys.exit(1)\n-\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n-\t\t\tif settings['rev_hash_bytes'] == 'true':\n-\t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n-\t\t\tprint(resp_obj['result'])\n-\n-\t\theight += num_blocks\n-\n-def get_rpc_cookie():\n-\t# Open the cookie file\n-\twith open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r') as f:\n-\t\tcombined = f.readline()\n-\t\tcombined_split = combined.split(\":\")\n-\t\tsettings['rpcuser'] = combined_split[0]\n-\t\tsettings['rpcpassword'] = combined_split[1]\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'min_height' not in settings:\n-\t\tsettings['min_height'] = 0\n-\tif 'max_height' not in settings:\n-\t\tsettings['max_height'] = 313000\n-\tif 'rev_hash_bytes' not in settings:\n-\t\tsettings['rev_hash_bytes'] = 'false'\n-\n-\tuse_userpass = True\n-\tuse_datadir = False\n-\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tuse_userpass = False\n-\tif 'datadir' in settings and not use_userpass:\n-\t\tuse_datadir = True\n-\tif not use_userpass and not use_datadir:\n-\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n-\t\tsys.exit(1)\n-\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['min_height'] = int(settings['min_height'])\n-\tsettings['max_height'] = int(settings['max_height'])\n-\n-\t# Force hash byte format setting to be lowercase to make comparisons easier.\n-\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-\t# Get the rpc user and pass from the cookie if the datadir is set\n-\tif use_datadir:\n-\t\tget_rpc_cookie()\n-\n-\tget_block_hashes(settings)"
      },
      {
        "sha": "94a9ed024d3859793618152ea559a168bbcbb5e2",
        "filename": "contrib/macdeploy/LICENSE",
        "status": "removed",
        "additions": 0,
        "deletions": 674,
        "changes": 674,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/LICENSE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/LICENSE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/LICENSE?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,674 +0,0 @@\n-                    GNU GENERAL PUBLIC LICENSE\n-                       Version 3, 29 June 2007\n-\n- Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n- Everyone is permitted to copy and distribute verbatim copies\n- of this license document, but changing it is not allowed.\n-\n-                            Preamble\n-\n-  The GNU General Public License is a free, copyleft license for\n-software and other kinds of works.\n-\n-  The licenses for most software and other practical works are designed\n-to take away your freedom to share and change the works.  By contrast,\n-the GNU General Public License is intended to guarantee your freedom to\n-share and change all versions of a program--to make sure it remains free\n-software for all its users.  We, the Free Software Foundation, use the\n-GNU General Public License for most of our software; it applies also to\n-any other work released this way by its authors.  You can apply it to\n-your programs, too.\n-\n-  When we speak of free software, we are referring to freedom, not\n-price.  Our General Public Licenses are designed to make sure that you\n-have the freedom to distribute copies of free software (and charge for\n-them if you wish), that you receive source code or can get it if you\n-want it, that you can change the software or use pieces of it in new\n-free programs, and that you know you can do these things.\n-\n-  To protect your rights, we need to prevent others from denying you\n-these rights or asking you to surrender the rights.  Therefore, you have\n-certain responsibilities if you distribute copies of the software, or if\n-you modify it: responsibilities to respect the freedom of others.\n-\n-  For example, if you distribute copies of such a program, whether\n-gratis or for a fee, you must pass on to the recipients the same\n-freedoms that you received.  You must make sure that they, too, receive\n-or can get the source code.  And you must show them these terms so they\n-know their rights.\n-\n-  Developers that use the GNU GPL protect your rights with two steps:\n-(1) assert copyright on the software, and (2) offer you this License\n-giving you legal permission to copy, distribute and/or modify it.\n-\n-  For the developers' and authors' protection, the GPL clearly explains\n-that there is no warranty for this free software.  For both users' and\n-authors' sake, the GPL requires that modified versions be marked as\n-changed, so that their problems will not be attributed erroneously to\n-authors of previous versions.\n-\n-  Some devices are designed to deny users access to install or run\n-modified versions of the software inside them, although the manufacturer\n-can do so.  This is fundamentally incompatible with the aim of\n-protecting users' freedom to change the software.  The systematic\n-pattern of such abuse occurs in the area of products for individuals to\n-use, which is precisely where it is most unacceptable.  Therefore, we\n-have designed this version of the GPL to prohibit the practice for those\n-products.  If such problems arise substantially in other domains, we\n-stand ready to extend this provision to those domains in future versions\n-of the GPL, as needed to protect the freedom of users.\n-\n-  Finally, every program is threatened constantly by software patents.\n-States should not allow patents to restrict development and use of\n-software on general-purpose computers, but in those that do, we wish to\n-avoid the special danger that patents applied to a free program could\n-make it effectively proprietary.  To prevent this, the GPL assures that\n-patents cannot be used to render the program non-free.\n-\n-  The precise terms and conditions for copying, distribution and\n-modification follow.\n-\n-                       TERMS AND CONDITIONS\n-\n-  0. Definitions.\n-\n-  \"This License\" refers to version 3 of the GNU General Public License.\n-\n-  \"Copyright\" also means copyright-like laws that apply to other kinds of\n-works, such as semiconductor masks.\n-\n-  \"The Program\" refers to any copyrightable work licensed under this\n-License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n-\"recipients\" may be individuals or organizations.\n-\n-  To \"modify\" a work means to copy from or adapt all or part of the work\n-in a fashion requiring copyright permission, other than the making of an\n-exact copy.  The resulting work is called a \"modified version\" of the\n-earlier work or a work \"based on\" the earlier work.\n-\n-  A \"covered work\" means either the unmodified Program or a work based\n-on the Program.\n-\n-  To \"propagate\" a work means to do anything with it that, without\n-permission, would make you directly or secondarily liable for\n-infringement under applicable copyright law, except executing it on a\n-computer or modifying a private copy.  Propagation includes copying,\n-distribution (with or without modification), making available to the\n-public, and in some countries other activities as well.\n-\n-  To \"convey\" a work means any kind of propagation that enables other\n-parties to make or receive copies.  Mere interaction with a user through\n-a computer network, with no transfer of a copy, is not conveying.\n-\n-  An interactive user interface displays \"Appropriate Legal Notices\"\n-to the extent that it includes a convenient and prominently visible\n-feature that (1) displays an appropriate copyright notice, and (2)\n-tells the user that there is no warranty for the work (except to the\n-extent that warranties are provided), that licensees may convey the\n-work under this License, and how to view a copy of this License.  If\n-the interface presents a list of user commands or options, such as a\n-menu, a prominent item in the list meets this criterion.\n-\n-  1. Source Code.\n-\n-  The \"source code\" for a work means the preferred form of the work\n-for making modifications to it.  \"Object code\" means any non-source\n-form of a work.\n-\n-  A \"Standard Interface\" means an interface that either is an official\n-standard defined by a recognized standards body, or, in the case of\n-interfaces specified for a particular programming language, one that\n-is widely used among developers working in that language.\n-\n-  The \"System Libraries\" of an executable work include anything, other\n-than the work as a whole, that (a) is included in the normal form of\n-packaging a Major Component, but which is not part of that Major\n-Component, and (b) serves only to enable use of the work with that\n-Major Component, or to implement a Standard Interface for which an\n-implementation is available to the public in source code form.  A\n-\"Major Component\", in this context, means a major essential component\n-(kernel, window system, and so on) of the specific operating system\n-(if any) on which the executable work runs, or a compiler used to\n-produce the work, or an object code interpreter used to run it.\n-\n-  The \"Corresponding Source\" for a work in object code form means all\n-the source code needed to generate, install, and (for an executable\n-work) run the object code and to modify the work, including scripts to\n-control those activities.  However, it does not include the work's\n-System Libraries, or general-purpose tools or generally available free\n-programs which are used unmodified in performing those activities but\n-which are not part of the work.  For example, Corresponding Source\n-includes interface definition files associated with source files for\n-the work, and the source code for shared libraries and dynamically\n-linked subprograms that the work is specifically designed to require,\n-such as by intimate data communication or control flow between those\n-subprograms and other parts of the work.\n-\n-  The Corresponding Source need not include anything that users\n-can regenerate automatically from other parts of the Corresponding\n-Source.\n-\n-  The Corresponding Source for a work in source code form is that\n-same work.\n-\n-  2. Basic Permissions.\n-\n-  All rights granted under this License are granted for the term of\n-copyright on the Program, and are irrevocable provided the stated\n-conditions are met.  This License explicitly affirms your unlimited\n-permission to run the unmodified Program.  The output from running a\n-covered work is covered by this License only if the output, given its\n-content, constitutes a covered work.  This License acknowledges your\n-rights of fair use or other equivalent, as provided by copyright law.\n-\n-  You may make, run and propagate covered works that you do not\n-convey, without conditions so long as your license otherwise remains\n-in force.  You may convey covered works to others for the sole purpose\n-of having them make modifications exclusively for you, or provide you\n-with facilities for running those works, provided that you comply with\n-the terms of this License in conveying all material for which you do\n-not control copyright.  Those thus making or running the covered works\n-for you must do so exclusively on your behalf, under your direction\n-and control, on terms that prohibit them from making any copies of\n-your copyrighted material outside their relationship with you.\n-\n-  Conveying under any other circumstances is permitted solely under\n-the conditions stated below.  Sublicensing is not allowed; section 10\n-makes it unnecessary.\n-\n-  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n-\n-  No covered work shall be deemed part of an effective technological\n-measure under any applicable law fulfilling obligations under article\n-11 of the WIPO copyright treaty adopted on 20 December 1996, or\n-similar laws prohibiting or restricting circumvention of such\n-measures.\n-\n-  When you convey a covered work, you waive any legal power to forbid\n-circumvention of technological measures to the extent such circumvention\n-is effected by exercising rights under this License with respect to\n-the covered work, and you disclaim any intention to limit operation or\n-modification of the work as a means of enforcing, against the work's\n-users, your or third parties' legal rights to forbid circumvention of\n-technological measures.\n-\n-  4. Conveying Verbatim Copies.\n-\n-  You may convey verbatim copies of the Program's source code as you\n-receive it, in any medium, provided that you conspicuously and\n-appropriately publish on each copy an appropriate copyright notice;\n-keep intact all notices stating that this License and any\n-non-permissive terms added in accord with section 7 apply to the code;\n-keep intact all notices of the absence of any warranty; and give all\n-recipients a copy of this License along with the Program.\n-\n-  You may charge any price or no price for each copy that you convey,\n-and you may offer support or warranty protection for a fee.\n-\n-  5. Conveying Modified Source Versions.\n-\n-  You may convey a work based on the Program, or the modifications to\n-produce it from the Program, in the form of source code under the\n-terms of section 4, provided that you also meet all of these conditions:\n-\n-    a) The work must carry prominent notices stating that you modified\n-    it, and giving a relevant date.\n-\n-    b) The work must carry prominent notices stating that it is\n-    released under this License and any conditions added under section\n-    7.  This requirement modifies the requirement in section 4 to\n-    \"keep intact all notices\".\n-\n-    c) You must license the entire work, as a whole, under this\n-    License to anyone who comes into possession of a copy.  This\n-    License will therefore apply, along with any applicable section 7\n-    additional terms, to the whole of the work, and all its parts,\n-    regardless of how they are packaged.  This License gives no\n-    permission to license the work in any other way, but it does not\n-    invalidate such permission if you have separately received it.\n-\n-    d) If the work has interactive user interfaces, each must display\n-    Appropriate Legal Notices; however, if the Program has interactive\n-    interfaces that do not display Appropriate Legal Notices, your\n-    work need not make them do so.\n-\n-  A compilation of a covered work with other separate and independent\n-works, which are not by their nature extensions of the covered work,\n-and which are not combined with it such as to form a larger program,\n-in or on a volume of a storage or distribution medium, is called an\n-\"aggregate\" if the compilation and its resulting copyright are not\n-used to limit the access or legal rights of the compilation's users\n-beyond what the individual works permit.  Inclusion of a covered work\n-in an aggregate does not cause this License to apply to the other\n-parts of the aggregate.\n-\n-  6. Conveying Non-Source Forms.\n-\n-  You may convey a covered work in object code form under the terms\n-of sections 4 and 5, provided that you also convey the\n-machine-readable Corresponding Source under the terms of this License,\n-in one of these ways:\n-\n-    a) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by the\n-    Corresponding Source fixed on a durable physical medium\n-    customarily used for software interchange.\n-\n-    b) Convey the object code in, or embodied in, a physical product\n-    (including a physical distribution medium), accompanied by a\n-    written offer, valid for at least three years and valid for as\n-    long as you offer spare parts or customer support for that product\n-    model, to give anyone who possesses the object code either (1) a\n-    copy of the Corresponding Source for all the software in the\n-    product that is covered by this License, on a durable physical\n-    medium customarily used for software interchange, for a price no\n-    more than your reasonable cost of physically performing this\n-    conveying of source, or (2) access to copy the\n-    Corresponding Source from a network server at no charge.\n-\n-    c) Convey individual copies of the object code with a copy of the\n-    written offer to provide the Corresponding Source.  This\n-    alternative is allowed only occasionally and noncommercially, and\n-    only if you received the object code with such an offer, in accord\n-    with subsection 6b.\n-\n-    d) Convey the object code by offering access from a designated\n-    place (gratis or for a charge), and offer equivalent access to the\n-    Corresponding Source in the same way through the same place at no\n-    further charge.  You need not require recipients to copy the\n-    Corresponding Source along with the object code.  If the place to\n-    copy the object code is a network server, the Corresponding Source\n-    may be on a different server (operated by you or a third party)\n-    that supports equivalent copying facilities, provided you maintain\n-    clear directions next to the object code saying where to find the\n-    Corresponding Source.  Regardless of what server hosts the\n-    Corresponding Source, you remain obligated to ensure that it is\n-    available for as long as needed to satisfy these requirements.\n-\n-    e) Convey the object code using peer-to-peer transmission, provided\n-    you inform other peers where the object code and Corresponding\n-    Source of the work are being offered to the general public at no\n-    charge under subsection 6d.\n-\n-  A separable portion of the object code, whose source code is excluded\n-from the Corresponding Source as a System Library, need not be\n-included in conveying the object code work.\n-\n-  A \"User Product\" is either (1) a \"consumer product\", which means any\n-tangible personal property which is normally used for personal, family,\n-or household purposes, or (2) anything designed or sold for incorporation\n-into a dwelling.  In determining whether a product is a consumer product,\n-doubtful cases shall be resolved in favor of coverage.  For a particular\n-product received by a particular user, \"normally used\" refers to a\n-typical or common use of that class of product, regardless of the status\n-of the particular user or of the way in which the particular user\n-actually uses, or expects or is expected to use, the product.  A product\n-is a consumer product regardless of whether the product has substantial\n-commercial, industrial or non-consumer uses, unless such uses represent\n-the only significant mode of use of the product.\n-\n-  \"Installation Information\" for a User Product means any methods,\n-procedures, authorization keys, or other information required to install\n-and execute modified versions of a covered work in that User Product from\n-a modified version of its Corresponding Source.  The information must\n-suffice to ensure that the continued functioning of the modified object\n-code is in no case prevented or interfered with solely because\n-modification has been made.\n-\n-  If you convey an object code work under this section in, or with, or\n-specifically for use in, a User Product, and the conveying occurs as\n-part of a transaction in which the right of possession and use of the\n-User Product is transferred to the recipient in perpetuity or for a\n-fixed term (regardless of how the transaction is characterized), the\n-Corresponding Source conveyed under this section must be accompanied\n-by the Installation Information.  But this requirement does not apply\n-if neither you nor any third party retains the ability to install\n-modified object code on the User Product (for example, the work has\n-been installed in ROM).\n-\n-  The requirement to provide Installation Information does not include a\n-requirement to continue to provide support service, warranty, or updates\n-for a work that has been modified or installed by the recipient, or for\n-the User Product in which it has been modified or installed.  Access to a\n-network may be denied when the modification itself materially and\n-adversely affects the operation of the network or violates the rules and\n-protocols for communication across the network.\n-\n-  Corresponding Source conveyed, and Installation Information provided,\n-in accord with this section must be in a format that is publicly\n-documented (and with an implementation available to the public in\n-source code form), and must require no special password or key for\n-unpacking, reading or copying.\n-\n-  7. Additional Terms.\n-\n-  \"Additional permissions\" are terms that supplement the terms of this\n-License by making exceptions from one or more of its conditions.\n-Additional permissions that are applicable to the entire Program shall\n-be treated as though they were included in this License, to the extent\n-that they are valid under applicable law.  If additional permissions\n-apply only to part of the Program, that part may be used separately\n-under those permissions, but the entire Program remains governed by\n-this License without regard to the additional permissions.\n-\n-  When you convey a copy of a covered work, you may at your option\n-remove any additional permissions from that copy, or from any part of\n-it.  (Additional permissions may be written to require their own\n-removal in certain cases when you modify the work.)  You may place\n-additional permissions on material, added by you to a covered work,\n-for which you have or can give appropriate copyright permission.\n-\n-  Notwithstanding any other provision of this License, for material you\n-add to a covered work, you may (if authorized by the copyright holders of\n-that material) supplement the terms of this License with terms:\n-\n-    a) Disclaiming warranty or limiting liability differently from the\n-    terms of sections 15 and 16 of this License; or\n-\n-    b) Requiring preservation of specified reasonable legal notices or\n-    author attributions in that material or in the Appropriate Legal\n-    Notices displayed by works containing it; or\n-\n-    c) Prohibiting misrepresentation of the origin of that material, or\n-    requiring that modified versions of such material be marked in\n-    reasonable ways as different from the original version; or\n-\n-    d) Limiting the use for publicity purposes of names of licensors or\n-    authors of the material; or\n-\n-    e) Declining to grant rights under trademark law for use of some\n-    trade names, trademarks, or service marks; or\n-\n-    f) Requiring indemnification of licensors and authors of that\n-    material by anyone who conveys the material (or modified versions of\n-    it) with contractual assumptions of liability to the recipient, for\n-    any liability that these contractual assumptions directly impose on\n-    those licensors and authors.\n-\n-  All other non-permissive additional terms are considered \"further\n-restrictions\" within the meaning of section 10.  If the Program as you\n-received it, or any part of it, contains a notice stating that it is\n-governed by this License along with a term that is a further\n-restriction, you may remove that term.  If a license document contains\n-a further restriction but permits relicensing or conveying under this\n-License, you may add to a covered work material governed by the terms\n-of that license document, provided that the further restriction does\n-not survive such relicensing or conveying.\n-\n-  If you add terms to a covered work in accord with this section, you\n-must place, in the relevant source files, a statement of the\n-additional terms that apply to those files, or a notice indicating\n-where to find the applicable terms.\n-\n-  Additional terms, permissive or non-permissive, may be stated in the\n-form of a separately written license, or stated as exceptions;\n-the above requirements apply either way.\n-\n-  8. Termination.\n-\n-  You may not propagate or modify a covered work except as expressly\n-provided under this License.  Any attempt otherwise to propagate or\n-modify it is void, and will automatically terminate your rights under\n-this License (including any patent licenses granted under the third\n-paragraph of section 11).\n-\n-  However, if you cease all violation of this License, then your\n-license from a particular copyright holder is reinstated (a)\n-provisionally, unless and until the copyright holder explicitly and\n-finally terminates your license, and (b) permanently, if the copyright\n-holder fails to notify you of the violation by some reasonable means\n-prior to 60 days after the cessation.\n-\n-  Moreover, your license from a particular copyright holder is\n-reinstated permanently if the copyright holder notifies you of the\n-violation by some reasonable means, this is the first time you have\n-received notice of violation of this License (for any work) from that\n-copyright holder, and you cure the violation prior to 30 days after\n-your receipt of the notice.\n-\n-  Termination of your rights under this section does not terminate the\n-licenses of parties who have received copies or rights from you under\n-this License.  If your rights have been terminated and not permanently\n-reinstated, you do not qualify to receive new licenses for the same\n-material under section 10.\n-\n-  9. Acceptance Not Required for Having Copies.\n-\n-  You are not required to accept this License in order to receive or\n-run a copy of the Program.  Ancillary propagation of a covered work\n-occurring solely as a consequence of using peer-to-peer transmission\n-to receive a copy likewise does not require acceptance.  However,\n-nothing other than this License grants you permission to propagate or\n-modify any covered work.  These actions infringe copyright if you do\n-not accept this License.  Therefore, by modifying or propagating a\n-covered work, you indicate your acceptance of this License to do so.\n-\n-  10. Automatic Licensing of Downstream Recipients.\n-\n-  Each time you convey a covered work, the recipient automatically\n-receives a license from the original licensors, to run, modify and\n-propagate that work, subject to this License.  You are not responsible\n-for enforcing compliance by third parties with this License.\n-\n-  An \"entity transaction\" is a transaction transferring control of an\n-organization, or substantially all assets of one, or subdividing an\n-organization, or merging organizations.  If propagation of a covered\n-work results from an entity transaction, each party to that\n-transaction who receives a copy of the work also receives whatever\n-licenses to the work the party's predecessor in interest had or could\n-give under the previous paragraph, plus a right to possession of the\n-Corresponding Source of the work from the predecessor in interest, if\n-the predecessor has it or can get it with reasonable efforts.\n-\n-  You may not impose any further restrictions on the exercise of the\n-rights granted or affirmed under this License.  For example, you may\n-not impose a license fee, royalty, or other charge for exercise of\n-rights granted under this License, and you may not initiate litigation\n-(including a cross-claim or counterclaim in a lawsuit) alleging that\n-any patent claim is infringed by making, using, selling, offering for\n-sale, or importing the Program or any portion of it.\n-\n-  11. Patents.\n-\n-  A \"contributor\" is a copyright holder who authorizes use under this\n-License of the Program or a work on which the Program is based.  The\n-work thus licensed is called the contributor's \"contributor version\".\n-\n-  A contributor's \"essential patent claims\" are all patent claims\n-owned or controlled by the contributor, whether already acquired or\n-hereafter acquired, that would be infringed by some manner, permitted\n-by this License, of making, using, or selling its contributor version,\n-but do not include claims that would be infringed only as a\n-consequence of further modification of the contributor version.  For\n-purposes of this definition, \"control\" includes the right to grant\n-patent sublicenses in a manner consistent with the requirements of\n-this License.\n-\n-  Each contributor grants you a non-exclusive, worldwide, royalty-free\n-patent license under the contributor's essential patent claims, to\n-make, use, sell, offer for sale, import and otherwise run, modify and\n-propagate the contents of its contributor version.\n-\n-  In the following three paragraphs, a \"patent license\" is any express\n-agreement or commitment, however denominated, not to enforce a patent\n-(such as an express permission to practice a patent or covenant not to\n-sue for patent infringement).  To \"grant\" such a patent license to a\n-party means to make such an agreement or commitment not to enforce a\n-patent against the party.\n-\n-  If you convey a covered work, knowingly relying on a patent license,\n-and the Corresponding Source of the work is not available for anyone\n-to copy, free of charge and under the terms of this License, through a\n-publicly available network server or other readily accessible means,\n-then you must either (1) cause the Corresponding Source to be so\n-available, or (2) arrange to deprive yourself of the benefit of the\n-patent license for this particular work, or (3) arrange, in a manner\n-consistent with the requirements of this License, to extend the patent\n-license to downstream recipients.  \"Knowingly relying\" means you have\n-actual knowledge that, but for the patent license, your conveying the\n-covered work in a country, or your recipient's use of the covered work\n-in a country, would infringe one or more identifiable patents in that\n-country that you have reason to believe are valid.\n-\n-  If, pursuant to or in connection with a single transaction or\n-arrangement, you convey, or propagate by procuring conveyance of, a\n-covered work, and grant a patent license to some of the parties\n-receiving the covered work authorizing them to use, propagate, modify\n-or convey a specific copy of the covered work, then the patent license\n-you grant is automatically extended to all recipients of the covered\n-work and works based on it.\n-\n-  A patent license is \"discriminatory\" if it does not include within\n-the scope of its coverage, prohibits the exercise of, or is\n-conditioned on the non-exercise of one or more of the rights that are\n-specifically granted under this License.  You may not convey a covered\n-work if you are a party to an arrangement with a third party that is\n-in the business of distributing software, under which you make payment\n-to the third party based on the extent of your activity of conveying\n-the work, and under which the third party grants, to any of the\n-parties who would receive the covered work from you, a discriminatory\n-patent license (a) in connection with copies of the covered work\n-conveyed by you (or copies made from those copies), or (b) primarily\n-for and in connection with specific products or compilations that\n-contain the covered work, unless you entered into that arrangement,\n-or that patent license was granted, prior to 28 March 2007.\n-\n-  Nothing in this License shall be construed as excluding or limiting\n-any implied license or other defenses to infringement that may\n-otherwise be available to you under applicable patent law.\n-\n-  12. No Surrender of Others' Freedom.\n-\n-  If conditions are imposed on you (whether by court order, agreement or\n-otherwise) that contradict the conditions of this License, they do not\n-excuse you from the conditions of this License.  If you cannot convey a\n-covered work so as to satisfy simultaneously your obligations under this\n-License and any other pertinent obligations, then as a consequence you may\n-not convey it at all.  For example, if you agree to terms that obligate you\n-to collect a royalty for further conveying from those to whom you convey\n-the Program, the only way you could satisfy both those terms and this\n-License would be to refrain entirely from conveying the Program.\n-\n-  13. Use with the GNU Affero General Public License.\n-\n-  Notwithstanding any other provision of this License, you have\n-permission to link or combine any covered work with a work licensed\n-under version 3 of the GNU Affero General Public License into a single\n-combined work, and to convey the resulting work.  The terms of this\n-License will continue to apply to the part which is the covered work,\n-but the special requirements of the GNU Affero General Public License,\n-section 13, concerning interaction through a network will apply to the\n-combination as such.\n-\n-  14. Revised Versions of this License.\n-\n-  The Free Software Foundation may publish revised and/or new versions of\n-the GNU General Public License from time to time.  Such new versions will\n-be similar in spirit to the present version, but may differ in detail to\n-address new problems or concerns.\n-\n-  Each version is given a distinguishing version number.  If the\n-Program specifies that a certain numbered version of the GNU General\n-Public License \"or any later version\" applies to it, you have the\n-option of following the terms and conditions either of that numbered\n-version or of any later version published by the Free Software\n-Foundation.  If the Program does not specify a version number of the\n-GNU General Public License, you may choose any version ever published\n-by the Free Software Foundation.\n-\n-  If the Program specifies that a proxy can decide which future\n-versions of the GNU General Public License can be used, that proxy's\n-public statement of acceptance of a version permanently authorizes you\n-to choose that version for the Program.\n-\n-  Later license versions may give you additional or different\n-permissions.  However, no additional obligations are imposed on any\n-author or copyright holder as a result of your choosing to follow a\n-later version.\n-\n-  15. Disclaimer of Warranty.\n-\n-  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n-APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n-HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n-OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n-THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n-PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n-IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n-ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n-\n-  16. Limitation of Liability.\n-\n-  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n-THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n-GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n-USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n-DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n-PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n-EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n-SUCH DAMAGES.\n-\n-  17. Interpretation of Sections 15 and 16.\n-\n-  If the disclaimer of warranty and limitation of liability provided\n-above cannot be given local legal effect according to their terms,\n-reviewing courts shall apply local law that most closely approximates\n-an absolute waiver of all civil liability in connection with the\n-Program, unless a warranty or assumption of liability accompanies a\n-copy of the Program in return for a fee.\n-\n-                     END OF TERMS AND CONDITIONS\n-\n-            How to Apply These Terms to Your New Programs\n-\n-  If you develop a new program, and you want it to be of the greatest\n-possible use to the public, the best way to achieve this is to make it\n-free software which everyone can redistribute and change under these terms.\n-\n-  To do so, attach the following notices to the program.  It is safest\n-to attach them to the start of each source file to most effectively\n-state the exclusion of warranty; and each file should have at least\n-the \"copyright\" line and a pointer to where the full notice is found.\n-\n-    <one line to give the program's name and a brief idea of what it does.>\n-    Copyright (C) <year>  <name of author>\n-\n-    This program is free software: you can redistribute it and/or modify\n-    it under the terms of the GNU General Public License as published by\n-    the Free Software Foundation, either version 3 of the License, or\n-    (at your option) any later version.\n-\n-    This program is distributed in the hope that it will be useful,\n-    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-    GNU General Public License for more details.\n-\n-    You should have received a copy of the GNU General Public License\n-    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-Also add information on how to contact you by electronic and paper mail.\n-\n-  If the program does terminal interaction, make it output a short\n-notice like this when it starts in an interactive mode:\n-\n-    <program>  Copyright (C) <year>  <name of author>\n-    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n-    This is free software, and you are welcome to redistribute it\n-    under certain conditions; type `show c' for details.\n-\n-The hypothetical commands `show w' and `show c' should show the appropriate\n-parts of the General Public License.  Of course, your program's commands\n-might be different; for a GUI interface, you would use an \"about box\".\n-\n-  You should also get your employer (if you work as a programmer) or school,\n-if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n-For more information on this, and how to apply and follow the GNU GPL, see\n-<http://www.gnu.org/licenses/>.\n-\n-  The GNU General Public License does not permit incorporating your program\n-into proprietary programs.  If your program is a subroutine library, you\n-may consider it more useful to permit linking proprietary applications with\n-the library.  If this is what you want to do, use the GNU Lesser General\n-Public License instead of this License.  But first, please read\n-<http://www.gnu.org/philosophy/why-not-lgpl.html>."
      },
      {
        "sha": "6163734e623bd3a21ac5e1ef83a42dd45febe746",
        "filename": "contrib/macdeploy/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,15 +0,0 @@\n-### MacDeploy ###\n-\n-For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n-\t\n-\tsudo easy_install argparse\n-\n-This script should not be run manually, instead, after building as usual:\n-\n-\tmake deploy\n-\n-During the process, the disk image window will pop up briefly where the fancy\n-settings are applied. This is normal, please do not interfere.\n-\n-When finished, it will produce `Bitcoin-Core.dmg`.\n-"
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n- \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n-<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n-\t<!-- kate: space-indent off;\n-\tCopyright (c) 2015 The Bitcoin Core developers\n-\tDistributed under the MIT software license, see the accompanying\n-\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\t-->\n-\t<style type=\"text/css\"><![CDATA[\n-\t\ttext {\n-\t\t\tfont-family: \"Tuffy\";\n-\t\t\tfont-size: 86px;\n-\t\t\tfill: gray;\n-\t\t\ttext-anchor: middle;\n-\t\t}\n-\t]]></style>\n-\t<defs>\n-\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n-\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n-\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n-\t\t</linearGradient>\n-\t</defs>\n-\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n-\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n-\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n-\t</g>\n-\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n-\tfill=\"#000000\" stroke=\"none\">\n-\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n-\t</g>\n-</svg>"
      },
      {
        "sha": "e6ecabace1a429b85af0551b9c4622118450c221",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "removed",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,60 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-from __future__ import division,print_function,unicode_literals\n-import biplist\n-from ds_store import DSStore\n-from mac_alias import Alias\n-import sys\n-\n-output_file = sys.argv[1]\n-package_name_ns = sys.argv[2]\n-\n-ds = DSStore.open(output_file, 'w+')\n-ds['.']['bwsp'] = {\n-    'ShowStatusBar': False,\n-    'WindowBounds': b'{{300, 280}, {500, 343}}',\n-    'ContainerShowSidebar': False,\n-    'SidebarWidth': 0,\n-    'ShowTabView': False,\n-    'PreviewPaneVisibility': False,\n-    'ShowToolbar': False,\n-    'ShowSidebar': False,\n-    'ShowPathbar': True\n-}\n-\n-icvp = {\n-    'gridOffsetX': 0.0,\n-    'textSize': 12.0,\n-    'viewOptionsVersion': 1,\n-    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n-    'backgroundColorBlue': 1.0,\n-    'iconSize': 96.0,\n-    'backgroundColorGreen': 1.0,\n-    'arrangeBy': 'none',\n-    'showIconPreview': True,\n-    'gridSpacing': 100.0,\n-    'gridOffsetY': 0.0,\n-    'showItemInfo': False,\n-    'labelOnBottom': True,\n-    'backgroundType': 2,\n-    'backgroundColorRed': 1.0\n-}\n-alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n-alias.volume.name = package_name_ns\n-alias.volume.posix_path = '/Volumes/' + package_name_ns\n-alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n-alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n-icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n-ds['.']['icvp'] = icvp\n-\n-ds['.']['vSrn'] = ('long', 1)\n-\n-ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n-\n-ds.flush()\n-ds.close()"
      },
      {
        "sha": "91674a92e6fa6196c0190b6bf42fcdf32cf7d42f",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,56 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-\n-UNSIGNED=\"$1\"\n-SIGNATURE=\"$2\"\n-ARCH=x86_64\n-ROOTDIR=dist\n-TEMPDIR=signed.temp\n-OUTDIR=signed-app\n-\n-if [ -z \"$UNSIGNED\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-if [ -z \"$SIGNATURE\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n-tar -C ${TEMPDIR} -xf ${UNSIGNED}\n-cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n-\n-if [ -z \"${PAGESTUFF}\" ]; then\n-  PAGESTUFF=${TEMPDIR}/pagestuff\n-fi\n-\n-if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n-  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n-fi\n-\n-find ${TEMPDIR} -name \"*.sign\" | while read i; do\n-  SIZE=`stat -c %s \"${i}\"`\n-  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n-\n-  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n-  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n-\n-  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n-  if [ -z ${QUIET} ]; then\n-    echo \"Attaching signature at offset ${OFFSET}\"\n-  fi\n-\n-  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n-  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n-  rm \"${i}\"\n-  echo \"Success.\"\n-done\n-mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n-rm -rf ${TEMPDIR}\n-echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "3379a4599c7036870e1de876d31e063a78aac0f7",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,51 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-\n-ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n-CODESIGN=codesign\n-TEMPDIR=sign.temp\n-TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature-osx.tar.gz\n-OUTROOT=osx\n-\n-if [ ! -n \"$1\" ]; then\n-  echo \"usage: $0 <codesign args>\"\n-  echo \"example: $0 -s MyIdentity\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} ${TEMPLIST}\n-mkdir -p ${TEMPDIR}\n-\n-${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n-\n-grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n-  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n-  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n-  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n-  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n-done\n-\n-grep CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n-  DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n-  cp \"${i}\" \"${RESOURCE}\"\n-done\n-\n-rm ${TEMPLIST}\n-\n-tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n-rm -rf \"${TEMPDIR}\"\n-echo \"Created ${OUT}\""
      },
      {
        "sha": "ff9fbd58df0718d5bb123c927a6488ef5eef2ce0",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,33 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-\n-INPUTFILE=\"Xcode_7.3.1.dmg\"\n-HFSFILENAME=\"5.hfs\"\n-SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n-\n-7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n-SDKNAME=\"$(basename \"${SDKDIR}\")\"\n-SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n-fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n- while read type inode filename; do\n-\tinode=\"${inode::-1}\"\n-\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n-\t\tcontinue\n-\tfi\n-\tfilename=\"${SDKNAME}/$filename\"\n-\techo \"Extracting $filename ...\"\n-\tmkdir -p \"$(dirname \"$filename\")\"\n-\tif [ \"$type\" = \"l/l\" ]; then\n-\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n-\telse\n-\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n-\tfi\n-done\n-echo \"Building ${SDKNAME}.tar.gz ...\"\n-MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n-find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n-echo 'All done!'"
      },
      {
        "sha": "ef277a7f14ad66ecdb8597a865a54b9506fd0ff9",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,32 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>window_bounds</key>\n-\t<array>\n-\t\t<integer>300</integer>\n-\t\t<integer>300</integer>\n-\t\t<integer>800</integer>\n-\t\t<integer>620</integer>\n-\t</array>\n-\t<key>background_picture</key>\n-\t<string>background.tiff</string>\n-\t<key>icon_size</key>\n-\t<integer>96</integer>\n-\t<key>applications_symlink</key>\n-\t<true/>\n-\t<key>items_position</key>\n-\t<dict>\n-\t\t<key>Applications</key>\n-\t\t<array>\n-\t\t\t<integer>370</integer>\n-\t\t\t<integer>156</integer>\n-\t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n-\t\t<array>\n-\t\t\t<integer>128</integer>\n-\t\t\t<integer>156</integer>\n-\t\t</array>\n-\t</dict>\n-</dict>\n-</plist>"
      },
      {
        "sha": "23a568ad13aeb91d79e51de4283b0959c4baf027",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "removed",
        "additions": 0,
        "deletions": 889,
        "changes": 889,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,889 +0,0 @@\n-#!/usr/bin/env python\n-from __future__ import division, print_function, unicode_literals\n-#\n-# Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n-#\n-# This program is free software: you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation, either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-#\n-\n-import subprocess, sys, re, os, shutil, stat, os.path, time\n-from string import Template\n-from argparse import ArgumentParser\n-\n-# This is ported from the original macdeployqt with modifications\n-\n-class FrameworkInfo(object):\n-    def __init__(self):\n-        self.frameworkDirectory = \"\"\n-        self.frameworkName = \"\"\n-        self.frameworkPath = \"\"\n-        self.binaryDirectory = \"\"\n-        self.binaryName = \"\"\n-        self.binaryPath = \"\"\n-        self.version = \"\"\n-        self.installName = \"\"\n-        self.deployedInstallName = \"\"\n-        self.sourceFilePath = \"\"\n-        self.destinationDirectory = \"\"\n-        self.sourceResourcesDirectory = \"\"\n-        self.sourceVersionContentsDirectory = \"\"\n-        self.sourceContentsDirectory = \"\"\n-        self.destinationResourcesDirectory = \"\"\n-        self.destinationVersionContentsDirectory = \"\"\n-    \n-    def __eq__(self, other):\n-        if self.__class__ == other.__class__:\n-            return self.__dict__ == other.__dict__\n-        else:\n-            return False\n-    \n-    def __str__(self):\n-        return \"\"\" Framework name: %s\n- Framework directory: %s\n- Framework path: %s\n- Binary name: %s\n- Binary directory: %s\n- Binary path: %s\n- Version: %s\n- Install name: %s\n- Deployed install name: %s\n- Source file Path: %s\n- Deployed Directory (relative to bundle): %s\n-\"\"\" % (self.frameworkName,\n-       self.frameworkDirectory,\n-       self.frameworkPath,\n-       self.binaryName,\n-       self.binaryDirectory,\n-       self.binaryPath,\n-       self.version,\n-       self.installName,\n-       self.deployedInstallName,\n-       self.sourceFilePath,\n-       self.destinationDirectory)\n-    \n-    def isDylib(self):\n-        return self.frameworkName.endswith(\".dylib\")\n-    \n-    def isQtFramework(self):\n-        if self.isDylib():\n-            return self.frameworkName.startswith(\"libQt\")\n-        else:\n-            return self.frameworkName.startswith(\"Qt\")\n-    \n-    reOLine = re.compile(r'^(.+) \\(compatibility version [0-9.]+, current version [0-9.]+\\)$')\n-    bundleFrameworkDirectory = \"Contents/Frameworks\"\n-    bundleBinaryDirectory = \"Contents/MacOS\"\n-    \n-    @classmethod\n-    def fromOtoolLibraryLine(cls, line):\n-        # Note: line must be trimmed\n-        if line == \"\":\n-            return None\n-        \n-        # Don't deploy system libraries (exception for libQtuitools and libQtlucene).\n-        if line.startswith(\"/System/Library/\") or line.startswith(\"@executable_path\") or (line.startswith(\"/usr/lib/\") and \"libQt\" not in line):\n-            return None\n-        \n-        m = cls.reOLine.match(line)\n-        if m is None:\n-            raise RuntimeError(\"otool line could not be parsed: \" + line)\n-        \n-        path = m.group(1)\n-        \n-        info = cls()\n-        info.sourceFilePath = path\n-        info.installName = path\n-        \n-        if path.endswith(\".dylib\"):\n-            dirname, filename = os.path.split(path)\n-            info.frameworkName = filename\n-            info.frameworkDirectory = dirname\n-            info.frameworkPath = path\n-            \n-            info.binaryDirectory = dirname\n-            info.binaryName = filename\n-            info.binaryPath = path\n-            info.version = \"-\"\n-            \n-            info.installName = path\n-            info.deployedInstallName = \"@executable_path/../Frameworks/\" + info.binaryName\n-            info.sourceFilePath = path\n-            info.destinationDirectory = cls.bundleFrameworkDirectory\n-        else:\n-            parts = path.split(\"/\")\n-            i = 0\n-            # Search for the .framework directory\n-            for part in parts:\n-                if part.endswith(\".framework\"):\n-                    break\n-                i += 1\n-            if i == len(parts):\n-                raise RuntimeError(\"Could not find .framework or .dylib in otool line: \" + line)\n-            \n-            info.frameworkName = parts[i]\n-            info.frameworkDirectory = \"/\".join(parts[:i])\n-            info.frameworkPath = os.path.join(info.frameworkDirectory, info.frameworkName)\n-            \n-            info.binaryName = parts[i+3]\n-            info.binaryDirectory = \"/\".join(parts[i+1:i+3])\n-            info.binaryPath = os.path.join(info.binaryDirectory, info.binaryName)\n-            info.version = parts[i+2]\n-            \n-            info.deployedInstallName = \"@executable_path/../Frameworks/\" + os.path.join(info.frameworkName, info.binaryPath)\n-            info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n-            \n-            info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n-            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n-            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n-            info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n-            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n-        \n-        return info\n-\n-class ApplicationBundleInfo(object):\n-    def __init__(self, path):\n-        self.path = path\n-        appName = \"Bitcoin-Qt\"\n-        self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n-        if not os.path.exists(self.binaryPath):\n-            raise RuntimeError(\"Could not find bundle binary for \" + path)\n-        self.resourcesPath = os.path.join(path, \"Contents\", \"Resources\")\n-        self.pluginPath = os.path.join(path, \"Contents\", \"PlugIns\")\n-\n-class DeploymentInfo(object):\n-    def __init__(self):\n-        self.qtPath = None\n-        self.pluginPath = None\n-        self.deployedFrameworks = []\n-    \n-    def detectQtPath(self, frameworkDirectory):\n-        parentDir = os.path.dirname(frameworkDirectory)\n-        if os.path.exists(os.path.join(parentDir, \"translations\")):\n-            # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n-            self.qtPath = parentDir\n-        elif os.path.exists(os.path.join(parentDir, \"share\", \"qt4\", \"translations\")):\n-            # MacPorts layout, e.g. \"/opt/local/share/qt4\"\n-            self.qtPath = os.path.join(parentDir, \"share\", \"qt4\")\n-        elif os.path.exists(os.path.join(os.path.dirname(parentDir), \"share\", \"qt4\", \"translations\")):\n-            # Newer Macports layout\n-            self.qtPath = os.path.join(os.path.dirname(parentDir), \"share\", \"qt4\")\n-        else:\n-            self.qtPath = os.getenv(\"QTDIR\", None)\n-\n-        if self.qtPath is not None:\n-            pluginPath = os.path.join(self.qtPath, \"plugins\")\n-            if os.path.exists(pluginPath):\n-                self.pluginPath = pluginPath\n-    \n-    def usesFramework(self, name):\n-        nameDot = \"%s.\" % name\n-        libNameDot = \"lib%s.\" % name\n-        for framework in self.deployedFrameworks:\n-            if framework.endswith(\".framework\"):\n-                if framework.startswith(nameDot):\n-                    return True\n-            elif framework.endswith(\".dylib\"):\n-                if framework.startswith(libNameDot):\n-                    return True\n-        return False\n-\n-def getFrameworks(binaryPath, verbose):\n-    if verbose >= 3:\n-        print(\"Inspecting with otool: \" + binaryPath)\n-    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n-    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n-    o_stdout, o_stderr = otool.communicate()\n-    if otool.returncode != 0:\n-        if verbose >= 1:\n-            sys.stderr.write(o_stderr)\n-            sys.stderr.flush()\n-            raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n-\n-    otoolLines = o_stdout.decode().split(\"\\n\")\n-    otoolLines.pop(0) # First line is the inspected binary\n-    if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n-        otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n-    \n-    libraries = []\n-    for line in otoolLines:\n-        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n-        info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n-        if info is not None:\n-            if verbose >= 3:\n-                print(\"Found framework:\")\n-                print(info)\n-            libraries.append(info)\n-    \n-    return libraries\n-\n-def runInstallNameTool(action, *args):\n-    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n-    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n-\n-def changeInstallName(oldName, newName, binaryPath, verbose):\n-    if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" in\", binaryPath)\n-        print(\" change reference\", oldName)\n-        print(\" to\", newName)\n-    runInstallNameTool(\"change\", oldName, newName, binaryPath)\n-\n-def changeIdentification(id, binaryPath, verbose):\n-    if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" change identification in\", binaryPath)\n-        print(\" to\", id)\n-    runInstallNameTool(\"id\", id, binaryPath)\n-\n-def runStrip(binaryPath, verbose):\n-    stripbin=os.getenv(\"STRIP\", \"strip\")\n-    if verbose >= 3:\n-        print(\"Using strip:\")\n-        print(\" stripped\", binaryPath)\n-    subprocess.check_call([stripbin, \"-x\", binaryPath])\n-\n-def copyFramework(framework, path, verbose):\n-    if framework.sourceFilePath.startswith(\"Qt\"):\n-        #standard place for Nokia Qt installer's frameworks\n-        fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n-    else:\n-        fromPath = framework.sourceFilePath\n-    toDir = os.path.join(path, framework.destinationDirectory)\n-    toPath = os.path.join(toDir, framework.binaryName)\n-    \n-    if not os.path.exists(fromPath):\n-        raise RuntimeError(\"No file at \" + fromPath)\n-    \n-    if os.path.exists(toPath):\n-        return None # Already there\n-    \n-    if not os.path.exists(toDir):\n-        os.makedirs(toDir)\n-    \n-    shutil.copy2(fromPath, toPath)\n-    if verbose >= 3:\n-        print(\"Copied:\", fromPath)\n-        print(\" to:\", toPath)\n-\n-    permissions = os.stat(toPath)\n-    if not permissions.st_mode & stat.S_IWRITE:\n-      os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n-\n-    if not framework.isDylib(): # Copy resources for real frameworks\n-\n-        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n-        linkto = framework.version\n-        if not os.path.exists(linkfrom):\n-            os.symlink(linkto, linkfrom)\n-            if verbose >= 2:\n-                print(\"Linked:\", linkfrom, \"->\", linkto)\n-        fromResourcesDir = framework.sourceResourcesDirectory\n-        if os.path.exists(fromResourcesDir):\n-            toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied resources:\", fromResourcesDir)\n-                print(\" to:\", toResourcesDir)\n-        fromContentsDir = framework.sourceVersionContentsDirectory\n-        if not os.path.exists(fromContentsDir):\n-            fromContentsDir = framework.sourceContentsDirectory\n-        if os.path.exists(fromContentsDir):\n-            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n-            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied Contents:\", fromContentsDir)\n-                print(\" to:\", toContentsDir)\n-    elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n-        qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n-        qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n-        if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n-                print(\" to:\", qtMenuNibDestinationPath)\n-    \n-    return toPath\n-\n-def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploymentInfo=None):\n-    if deploymentInfo is None:\n-        deploymentInfo = DeploymentInfo()\n-    \n-    while len(frameworks) > 0:\n-        framework = frameworks.pop(0)\n-        deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n-        \n-        if verbose >= 2:\n-            print(\"Processing\", framework.frameworkName, \"...\")\n-        \n-        # Get the Qt path from one of the Qt frameworks\n-        if deploymentInfo.qtPath is None and framework.isQtFramework():\n-            deploymentInfo.detectQtPath(framework.frameworkDirectory)\n-        \n-        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n-            if verbose >= 2:\n-                print(framework.frameworkName, \"already deployed, skipping.\")\n-            continue\n-        \n-        # install_name_tool the new id into the binary\n-        changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n-        \n-        # Copy framework to app bundle.\n-        deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n-        # Skip the rest if already was deployed.\n-        if deployedBinaryPath is None:\n-            continue\n-        \n-        if strip:\n-            runStrip(deployedBinaryPath, verbose)\n-        \n-        # install_name_tool it a new id.\n-        changeIdentification(framework.deployedInstallName, deployedBinaryPath, verbose)\n-        # Check for framework dependencies\n-        dependencies = getFrameworks(deployedBinaryPath, verbose)\n-        \n-        for dependency in dependencies:\n-            changeInstallName(dependency.installName, dependency.deployedInstallName, deployedBinaryPath, verbose)\n-            \n-            # Deploy framework if necessary.\n-            if dependency.frameworkName not in deploymentInfo.deployedFrameworks and dependency not in frameworks:\n-                frameworks.append(dependency)\n-    \n-    return deploymentInfo\n-\n-def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n-    frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n-    if len(frameworks) == 0 and verbose >= 1:\n-        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n-        return DeploymentInfo()\n-    else:\n-        return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n-\n-def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n-    # Lookup available plugins, exclude unneeded\n-    plugins = []\n-    if deploymentInfo.pluginPath is None:\n-        return\n-    for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n-        pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n-        if pluginDirectory == \"designer\":\n-            # Skip designer plugins\n-            continue\n-        elif pluginDirectory == \"phonon\" or pluginDirectory == \"phonon_backend\":\n-            # Deploy the phonon plugins only if phonon is in use\n-            if not deploymentInfo.usesFramework(\"phonon\"):\n-                continue\n-        elif pluginDirectory == \"sqldrivers\":\n-            # Deploy the sql plugins only if QtSql is in use\n-            if not deploymentInfo.usesFramework(\"QtSql\"):\n-                continue\n-        elif pluginDirectory == \"script\":\n-            # Deploy the script plugins only if QtScript is in use\n-            if not deploymentInfo.usesFramework(\"QtScript\"):\n-                continue\n-        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n-            # Deploy the qml plugins only if QtDeclarative is in use\n-            if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n-                continue\n-        elif pluginDirectory == \"bearer\":\n-            # Deploy the bearer plugins only if QtNetwork is in use\n-            if not deploymentInfo.usesFramework(\"QtNetwork\"):\n-                continue\n-        elif pluginDirectory == \"position\":\n-            # Deploy the position plugins only if QtPositioning is in use\n-            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n-                continue\n-        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n-            # Deploy the sensor plugins only if QtSensors is in use\n-            if not deploymentInfo.usesFramework(\"QtSensors\"):\n-                continue\n-        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n-            # Deploy the audio plugins only if QtMultimedia is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n-                continue\n-        elif pluginDirectory == \"mediaservice\":\n-            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n-                continue\n-\n-        for pluginName in filenames:\n-            pluginPath = os.path.join(pluginDirectory, pluginName)\n-            if pluginName.endswith(\"_debug.dylib\"):\n-                # Skip debug plugins\n-                continue\n-            elif pluginPath == \"imageformats/libqsvg.dylib\" or pluginPath == \"iconengines/libqsvgicon.dylib\":\n-                # Deploy the svg plugins only if QtSvg is in use\n-                if not deploymentInfo.usesFramework(\"QtSvg\"):\n-                    continue\n-            elif pluginPath == \"accessible/libqtaccessiblecompatwidgets.dylib\":\n-                # Deploy accessibility for Qt3Support only if the Qt3Support is in use\n-                if not deploymentInfo.usesFramework(\"Qt3Support\"):\n-                    continue\n-            elif pluginPath == \"graphicssystems/libqglgraphicssystem.dylib\":\n-                # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n-                if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n-                    continue\n-            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n-                # Deploy the accessible qtquick plugin only if QtQuick is in use\n-                if not deploymentInfo.usesFramework(\"QtQuick\"):\n-                    continue\n-\n-            plugins.append((pluginDirectory, pluginName))\n-    \n-    for pluginDirectory, pluginName in plugins:\n-        if verbose >= 2:\n-            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n-        \n-        sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n-        destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n-        if not os.path.exists(destinationDirectory):\n-            os.makedirs(destinationDirectory)\n-        \n-        destinationPath = os.path.join(destinationDirectory, pluginName)\n-        shutil.copy2(sourcePath, destinationPath)\n-        if verbose >= 3:\n-            print(\"Copied:\", sourcePath)\n-            print(\" to:\", destinationPath)\n-        \n-        if strip:\n-            runStrip(destinationPath, verbose)\n-        \n-        dependencies = getFrameworks(destinationPath, verbose)\n-        \n-        for dependency in dependencies:\n-            changeInstallName(dependency.installName, dependency.deployedInstallName, destinationPath, verbose)\n-            \n-            # Deploy framework if necessary.\n-            if dependency.frameworkName not in deploymentInfo.deployedFrameworks:\n-                deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n-\n-qt_conf=\"\"\"[Paths]\n-Translations=Resources\n-Plugins=PlugIns\n-\"\"\"\n-\n-ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n-\n-Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n-Note, that the \"dist\" folder will be deleted before deploying on each run.\n-\n-Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n-\n-Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n-to the codesign tool.\n-E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n-\n-ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n-ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n-ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n-ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n-ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n-ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n-ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n-ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n-ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n-ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n-ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n-\n-config = ap.parse_args()\n-\n-verbose = config.verbose[0]\n-\n-# ------------------------------------------------\n-\n-app_bundle = config.app_bundle[0]\n-\n-if not os.path.exists(app_bundle):\n-    if verbose >= 1:\n-        sys.stderr.write(\"Error: Could not find app bundle \\\"%s\\\"\\n\" % (app_bundle))\n-    sys.exit(1)\n-\n-app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n-\n-# ------------------------------------------------\n-translations_dir = None\n-if config.translations_dir and config.translations_dir[0]:\n-    if os.path.exists(config.translations_dir[0]):\n-        translations_dir = config.translations_dir[0]\n-    else:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n-        sys.exit(1)\n-# ------------------------------------------------\n-\n-for p in config.add_resources:\n-    if verbose >= 3:\n-        print(\"Checking for \\\"%s\\\"...\" % p)\n-    if not os.path.exists(p):\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n-        sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if len(config.fancy) == 1:\n-    if verbose >= 3:\n-        print(\"Fancy: Importing plistlib...\")\n-    try:\n-        import plistlib\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n-        sys.exit(1)\n-    \n-    p = config.fancy[0]\n-    if verbose >= 3:\n-        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n-    if not os.path.exists(p):\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n-        sys.exit(1)\n-    \n-    try:\n-        fancy = plistlib.readPlist(p)\n-    except:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n-        sys.exit(1)\n-    \n-    try:\n-        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n-        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n-        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n-        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n-        if \"items_position\" in fancy:\n-            assert isinstance(fancy[\"items_position\"], dict)\n-            for key, value in fancy[\"items_position\"].items():\n-                assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n-    except:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n-        sys.exit(1)\n-    \n-    if \"background_picture\" in fancy:\n-        bp = fancy[\"background_picture\"]\n-        if verbose >= 3:\n-            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n-        if not os.path.exists(bp):\n-            bp = os.path.join(os.path.dirname(p), bp)\n-            if not os.path.exists(bp):\n-                if verbose >= 1:\n-                    sys.stderr.write(\"Error: Could not find background picture at \\\"%s\\\" or \\\"%s\\\"\\n\" % (fancy[\"background_picture\"], bp))\n-                sys.exit(1)\n-            else:\n-                fancy[\"background_picture\"] = bp\n-else:\n-    fancy = None\n-\n-# ------------------------------------------------\n-\n-if os.path.exists(\"dist\"):\n-    if verbose >= 2:\n-        print(\"+ Removing old dist folder +\")\n-    \n-    shutil.rmtree(\"dist\")\n-\n-# ------------------------------------------------\n-\n-if len(config.volname) == 1:\n-    volname = config.volname[0]\n-else:\n-    volname = app_bundle_name\n-\n-# ------------------------------------------------\n-\n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n-\n-if verbose >= 2:\n-    print(\"+ Copying source bundle +\")\n-if verbose >= 3:\n-    print(app_bundle, \"->\", target)\n-\n-os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target, symlinks=True)\n-\n-applicationBundle = ApplicationBundleInfo(target)\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Deploying frameworks +\")\n-\n-try:\n-    deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n-    if deploymentInfo.qtPath is None:\n-        deploymentInfo.qtPath = os.getenv(\"QTDIR\", None)\n-        if deploymentInfo.qtPath is None:\n-            if verbose >= 1:\n-                sys.stderr.write(\"Warning: Could not detect Qt's path, skipping plugin deployment!\\n\")\n-            config.plugins = False\n-except RuntimeError as e:\n-    if verbose >= 1:\n-        sys.stderr.write(\"Error: %s\\n\" % str(e))\n-    sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if config.plugins:\n-    if verbose >= 2:\n-        print(\"+ Deploying plugins +\")\n-    \n-    try:\n-        deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n-    except RuntimeError as e:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: %s\\n\" % str(e))\n-        sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if len(config.add_qt_tr) == 0:\n-    add_qt_tr = []\n-else:\n-    if translations_dir is not None:\n-        qt_tr_dir = translations_dir\n-    else:\n-        if deploymentInfo.qtPath is not None:\n-            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n-        else:\n-            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n-            sys.exit(1)\n-    add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n-    for lng_file in add_qt_tr:\n-        p = os.path.join(qt_tr_dir, lng_file)\n-        if verbose >= 3:\n-            print(\"Checking for \\\"%s\\\"...\" % p)\n-        if not os.path.exists(p):\n-            if verbose >= 1:\n-                sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n-                sys.exit(1)\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Installing qt.conf +\")\n-\n-with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n-    f.write(qt_conf.encode())\n-\n-# ------------------------------------------------\n-\n-if len(add_qt_tr) > 0 and verbose >= 2:\n-    print(\"+ Adding Qt translations +\")\n-\n-for lng_file in add_qt_tr:\n-    if verbose >= 3:\n-        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n-    shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n-\n-# ------------------------------------------------\n-\n-if len(config.add_resources) > 0 and verbose >= 2:\n-    print(\"+ Adding additional resources +\")\n-\n-for p in config.add_resources:\n-    t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n-    if verbose >= 3:\n-        print(p, \"->\", t)\n-    if os.path.isdir(p):\n-        shutil.copytree(p, t, symlinks=True)\n-    else:\n-        shutil.copy2(p, t)\n-\n-# ------------------------------------------------\n-\n-if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n-elif config.sign:\n-    if verbose >= 1:\n-        print(\"Code-signing app bundle %s\"%(target,))\n-    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n-\n-# ------------------------------------------------\n-\n-if config.dmg is not None:\n-\n-    #Patch in check_output for Python 2.6\n-    if \"check_output\" not in dir( subprocess ):\n-        def f(*popenargs, **kwargs):\n-            if 'stdout' in kwargs:\n-                raise ValueError('stdout argument not allowed, it will be overridden.')\n-            process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)\n-            output, unused_err = process.communicate()\n-            retcode = process.poll()\n-            if retcode:\n-                cmd = kwargs.get(\"args\")\n-                if cmd is None:\n-                    cmd = popenargs[0]\n-                raise CalledProcessError(retcode, cmd)\n-            return output\n-        subprocess.check_output = f\n-\n-    def runHDIUtil(verb, image_basename, **kwargs):\n-        hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n-        if \"capture_stdout\" in kwargs:\n-            del kwargs[\"capture_stdout\"]\n-            run = subprocess.check_output\n-        else:\n-            if verbose < 2:\n-                hdiutil_args.append(\"-quiet\")\n-            elif verbose >= 3:\n-                hdiutil_args.append(\"-verbose\")\n-            run = subprocess.check_call\n-        \n-        for key, value in kwargs.items():\n-            hdiutil_args.append(\"-\" + key)\n-            if not value is True:\n-                hdiutil_args.append(str(value))\n-        \n-        return run(hdiutil_args)\n-    \n-    if verbose >= 2:\n-        if fancy is None:\n-            print(\"+ Creating .dmg disk image +\")\n-        else:\n-            print(\"+ Preparing .dmg disk image +\")\n-    \n-    if config.dmg != \"\":\n-        dmg_name = config.dmg\n-    else:\n-        spl = app_bundle_name.split(\" \")\n-        dmg_name = spl[0] + \"\".join(p.capitalize() for p in spl[1:])\n-    \n-    if fancy is None:\n-        try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-    else:\n-        if verbose >= 3:\n-            print(\"Determining size of \\\"dist\\\"...\")\n-        size = 0\n-        for path, dirs, files in os.walk(\"dist\"):\n-            for file in files:\n-                size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.15)\n-        \n-        if verbose >= 3:\n-            print(\"Creating temp image for modification...\")\n-        try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-        \n-        if verbose >= 3:\n-            print(\"Attaching temp image...\")\n-        try:\n-            output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-        \n-        m = re.search(\"/Volumes/(.+$)\", output.decode())\n-        disk_root = m.group(0)\n-        disk_name = m.group(1)\n-        \n-        if verbose >= 2:\n-            print(\"+ Applying fancy settings +\")\n-        \n-        if \"background_picture\" in fancy:\n-            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n-            os.mkdir(os.path.dirname(bg_path))\n-            if verbose >= 3:\n-                print(fancy[\"background_picture\"], \"->\", bg_path)\n-            shutil.copy2(fancy[\"background_picture\"], bg_path)\n-        else:\n-            bg_path = None\n-        \n-        if fancy.get(\"applications_symlink\", False):\n-            os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n-        \n-        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n-        # So we now build up an AppleScript string and use the osascript command\n-        # to make the .dmg file pretty:\n-        appscript = Template( \"\"\"\n-        on run argv\n-           tell application \"Finder\"\n-             tell disk \"$disk\"\n-                   open\n-                   set current view of container window to icon view\n-                   set toolbar visible of container window to false\n-                   set statusbar visible of container window to false\n-                   set the bounds of container window to {$window_bounds}\n-                   set theViewOptions to the icon view options of container window\n-                   set arrangement of theViewOptions to not arranged\n-                   set icon size of theViewOptions to $icon_size\n-                   $background_commands\n-                   $items_positions\n-                   close -- close/reopen works around a bug...\n-                   open\n-                   update without registering applications\n-                   delay 5\n-                   eject\n-             end tell\n-           end tell\n-        end run\n-        \"\"\")\n-\n-        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n-        items_positions = []\n-        if \"items_position\" in fancy:\n-            for name, position in fancy[\"items_position\"].items():\n-                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n-                items_positions.append(itemscript.substitute(params))\n-\n-        params = {\n-            \"disk\" : volname,\n-            \"window_bounds\" : \"300,300,800,620\",\n-            \"icon_size\" : \"96\",\n-            \"background_commands\" : \"\",\n-            \"items_positions\" : \"\\n                   \".join(items_positions)\n-            }\n-        if \"window_bounds\" in fancy:\n-            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n-        if \"icon_size\" in fancy:\n-            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n-        if bg_path is not None:\n-            # Set background file, then call SetFile to make it invisible.\n-            # (note: making it invisible first makes set background picture fail)\n-            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n-                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n-            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n-\n-        s = appscript.substitute(params)\n-        if verbose >= 2:\n-            print(\"Running AppleScript:\")\n-            print(s)\n-\n-        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n-        p.communicate(input=s.encode('utf-8'))\n-        if p.returncode:\n-            print(\"Error running osascript.\")\n-\n-        if verbose >= 2:\n-            print(\"+ Finalizing .dmg disk image +\")\n-            time.sleep(5)\n-        \n-        try:\n-            runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n-        except subprocess.CalledProcessError as e:\n-            sys.exit(e.returncode)\n-        \n-        os.unlink(dmg_name + \".temp.dmg\")\n-\n-# ------------------------------------------------\n-\n-if verbose >= 2:\n-    print(\"+ Done +\")\n-\n-sys.exit(0)"
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,5 +0,0 @@\n-### QoS (Quality of service) ###\n-\n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n-\n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "0d1dd65b4f58f1fdd57c268c508938f6287e8311",
        "filename": "contrib/qos/tc.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,59 +0,0 @@\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#network interface on which to limit traffic\n-IF=\"eth0\"\n-#limit of the network interface in question\n-LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n-LIMIT=\"160kbit\"\n-#defines the IPv4 address space for which you wish to disable rate limiting\n-LOCALNET_V4=\"192.168.0.0/16\"\n-#defines the IPv6 address space for which you wish to disable rate limiting\n-LOCALNET_V6=\"fe80::/10\"\n-\n-#delete existing rules\n-tc qdisc del dev ${IF} root\n-\n-#add root class\n-tc qdisc add dev ${IF} root handle 1: htb default 10\n-\n-#add parent class\n-tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n-\n-#add our two classes. one unlimited, another limited\n-tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n-tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n-\n-#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n-tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n-tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n-\n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n-\t# v6 cannot have the same priority value as v4\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n-fi\n-\n-#delete any existing rules\n-#disable for now\n-#ret=0\n-#while [ $ret -eq 0 ]; do\n-#\tiptables -t mangle -D OUTPUT 1\n-#\tret=$?\n-#done\n-\n-#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n-#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n-#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n-#\tthese packets are filtered by the tc filter with \"handle 2\"\n-#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-\n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-fi"
      },
      {
        "sha": "e1e0745fd636d7240a6eb6a20775c9d043eac826",
        "filename": "contrib/rpm/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 185,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,185 +0,0 @@\n-RPM Spec File Notes\n--------------------\n-\n-The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n-7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n-at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n-difficult to port the RPM spec file to most RPM based Linux distributions.\n-\n-When porting the spec file to build for a particular distribution, there are\n-some important notes.\n-\n-## Sources\n-\n-It is considered good form for all sources to reference a URL where the source\n-can be downloaded.\n-\n-Sources 0-9 should be reserved for source code tarballs. `Source0` should\n-reference the release tarball available from https://bitcoin.org/bin/ and\n-`Source1` should reference the BerkeleyDB source.\n-\n-Sources 10-99 are for source files that are maintained in the\n-[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n-the release tarball. Most of these will reside in the `contrib` sub-directory.\n-\n-Sources 10-19 should be reserved for miscellaneous configuration files.\n-Currently only `Source10` is used, for the example `bitcoin.conf` file.\n-\n-Sources 20-29 should be reserved for man pages. Currently only `Source20`\n-through `Source23` are used.\n-\n-Sources 30-39 should be reserved for SELinux related files. Currently only\n-`Source30` through `Source32` are used. Until those files are in a tagged\n-release, the full URL specified in the RPM spec file will not work. You can get\n-them from the git repository where you retrieved this file.\n-\n-Sources 100+ are for files that are not source tarballs and are not maintained\n-in the bitcoin git repository. At present only an SVG version of the Bitcoin\n-icon is used.\n-\n-## Patches\n-\n-In general, patches should be avoided. When a packager feels a patch is\n-necessary, the packager should bring the problem to the attention of the bitcoin\n-developers so that an official fix to the issue can make it into the next\n-release.\n-\n-### Patch0 bitcoin-0.12.0-libressl.patch\n-\n-This patch is only needed if building against LibreSSL. LibreSSL is not the\n-standard TLS library on most Linux distributions. The patch will likely not be\n-needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n-master branch.\n-\n-## BuildRequires\n-\n-The packages specified in the `BuildRequires` are specified according to the\n-package naming convention currently used in CentOS 7 and EPEL for CentOS 7. You\n-may need to change some of the package names for other distributions. This is\n-most likely to be the case with the Qt packages.\n-\n-## BerkeleyDB\n-\n-The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n-that is the version your Linux distribution ships with, it probably is a good\n-idea to build Bitcoin Core against a static version of that library compiled\n-according to the instructions in the `build-unix.md` file so that any changes\n-the distribution may make in the future will not result in a problem for users.\n-\n-The problem that can exist, clients built against different versions of\n-BerkeleyDB may not be able read each other's `wallet.dat` file which can make it\n-difficult for a user to recover from backup in the event of a system failure.\n-\n-## Graphical User Interface and Qt Version\n-\n-The RPM spec file will by default build the GUI client linked against the Qt5\n-libraries. If you wish instead to link against the Qt4 libraries you need to\n-pass the switch `-D '_use_qt4 1'` at build time to the `rpmbuild` or `mock`\n-command used to build the packages.\n-\n-If you would prefer not to build the GUI at all, you can pass the switch\n-`-D '_no_gui 1'` to the `rpmbuild` or `mock` build command.\n-\n-## Desktop and KDE Files\n-\n-The desktop and KDE meta files are created in the spec file itself with the\n-`cat` command. This is done to allow easy distribution specific changes without\n-needing to use any patches. A specific timestamp is given to the files so that\n-it does not they do not appear to have been updated every time the package is\n-built. If you do make changes to them, you probably should update timestamp\n-assigned to them in the `touch` command that specifies the timestamp.\n-\n-## SVG, PNG, and XPM Icons\n-\n-The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n-the source for the PNG and XPM files. The generated PNG and XPM files are given\n-the same timestamp as the source SVG file as a means of indicating they are\n-derived from it.\n-\n-## Systemd\n-\n-This spec file assumes the target distribution uses systemd. That really only\n-matters for the `bitcoin-server` package. At this point, most RPM based\n-distributions that still receive vendor updates do in fact use systemd.\n-\n-The files to control the service are created in the RPM spec file itself using\n-the `cat` command. This is done to make it easy to modify for other\n-distributions that may implement things differently without needing to patch\n-source. A specific timestamp is given to the files so that they do not appear\n-to have been updated every time the package is built. If you do make changes to\n-them, you probably should update the timestamp assigned to them in the `touch`\n-command that specifies the timestamp.\n-\n-## SELinux\n-\n-The `bitcoin-server` package should have SELinux support. How to properly do\n-that *may* vary by distribution and version of distribution.\n-\n-The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n-and Fedora but it would be a good idea to review it before building the package\n-on other distributions.\n-\n-## Tests\n-\n-The `%check` section takes a very long time to run. If your build system has a\n-time limit for package build, you may need to make an exception for this\n-package. On CentOS 7 the `%check` section completes successfully with both\n-OpenSSL and LibreSSL, a failure really does mean something is wrong.\n-\n-## LibreSSL Build Notes\n-\n-To build against LibreSSL you will need to pass the switch\n-`-D '_use_libressl 1'` to the `rpmbuild` or `mock` command or the spec file will\n-want the OpenSSL development files.\n-\n-### LibreSSL and Boost\n-\n-LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n-can cause issues with the Boost package if the Boost package has not been\n-patched accordingly. On those distributions, you will either need to build\n-Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n-system.\n-\n-As SSLv3 is no longer safe, distributions that have not patched Boost to work\n-with TLS libraries that do not support SSLv3 should have bug reports filed\n-against the Boost package. This bug report has already been filed for RHEL 7 but\n-it may need to be filed for other distributions.\n-\n-A patch for Boost: https://github.com/boostorg/asio/pull/23/files\n-\n-## ZeroMQ\n-\n-At this time, this RPM spec file does not support the ZeroMQ build options. A\n-suitable version of ZeroMQ is not available for the platform this spec file was\n-developed on (CentOS 7).\n-\n-## Legacy Credit\n-\n-This RPM spec file is largely based upon the work of Michael Hampton at\n-[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n-packaging Bitcoin for Fedora at least since 2012.\n-\n-Most of the differences between his packaging and this package are stylistic in\n-nature. The major differences:\n-\n-1. He builds from a github tagged release rather than a release tarball. This\n-should not result in different source code.\n-\n-2. He does not build BerkeleyDB but instead uses the BerkeleyDB provided by the\n-Linux distribution. For the distributions he packages for, they currently all\n-use the same version of BerkeleyDB so that difference is *probably* just\n-academic.\n-\n-3. As of his 10.11.2 package he did not allow for building against LibreSSL,\n-specifying a build without the Qt GUI, or specifying which version of the Qt\n-libraries to use.\n-\n-4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n-that appears to be how the general population refers to it, in contrast to\n-`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n-knows what they are getting when installing the GUI package.\n-\n-As far as minor differences, I generally prefer to assign the file permissions\n-in the `%files` portion of an RPM spec file rather than specifying the\n-permissions of a file during `%install` and other minor things like that\n-are largely just cosmetic."
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,24 +0,0 @@\n-diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n---- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n-@@ -1075,7 +1075,7 @@\n-     if (fPrintToDebugLog)\n-         OpenDebugLog();\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n- #else\n-     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n-diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n---- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n-@@ -264,7 +264,7 @@\n- \n-     // set library version labels\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n- #else\n-     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,8 +0,0 @@\n-/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-\n-/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n-/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n-\n-(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "b206866cc5eb4abc3075f8692637a7096d7f0b0e",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "removed",
        "additions": 0,
        "deletions": 157,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,157 +0,0 @@\n-\n-## <summary>policy for bitcoin</summary>\n-\n-\n-########################################\n-## <summary>\n-##\tTransition to bitcoin.\n-## </summary>\n-## <param name=\"domain\">\n-## <summary>\n-##\tDomain allowed to transition.\n-## </summary>\n-## </param>\n-#\n-interface(`bitcoin_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_t, bitcoin_exec_t;\n-\t')\n-\n-\tcorecmd_search_bin($1)\n-\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tExecute bitcoin server in the bitcoin domain.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_initrc_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_initrc_exec_t;\n-\t')\n-\n-\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tSearch bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_search_lib',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n-\tfiles_search_var_lib($1)\n-')\n-\n-########################################\n-## <summary>\n-##\tRead bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_read_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_dirs',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tAll of the rules required to administrate\n-##\ta bitcoin environment\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-## <param name=\"role\">\n-##\t<summary>\n-##\tRole allowed access.\n-##\t</summary>\n-## </param>\n-## <rolecap/>\n-#\n-interface(`bitcoin_admin',`\n-\tgen_require(`\n-\t\ttype bitcoin_t;\n-\t\ttype bitcoin_initrc_exec_t;\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_t:process { ptrace signal_perms };\n-\tps_process_pattern($1, bitcoin_t)\n-\n-\tbitcoin_initrc_domtrans($1)\n-\tdomain_system_change_exemption($1)\n-\trole_transition $2 bitcoin_initrc_exec_t system_r;\n-\tallow $2 system_r;\n-\n-\tfiles_search_var_lib($1)\n-\tadmin_pattern($1, bitcoin_var_lib_t)\n-\n-')\n-"
      },
      {
        "sha": "7c4d933ee05a41ea41d02a358c9b0f4ba3f638e9",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "removed",
        "additions": 0,
        "deletions": 442,
        "changes": 442,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,442 +0,0 @@\n-%define bdbv 4.8.30\n-%global selinux_variants mls strict targeted\n-\n-%if 0%{?_no_gui:1}\n-%define _buildqt 0\n-%define buildargs --with-gui=no\n-%else\n-%define _buildqt 1\n-%if 0%{?_use_qt4}\n-%define buildargs --with-qrencode --with-gui=qt4\n-%else\n-%define buildargs --with-qrencode --with-gui=qt5\n-%endif\n-%endif\n-\n-Name:\t\tbitcoin\n-Version:\t0.12.0\n-Release:\t2%{?dist}\n-Summary:\tPeer to Peer Cryptographic Currency\n-\n-Group:\t\tApplications/System\n-License:\tMIT\n-URL:\t\thttps://bitcoin.org/\n-Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n-Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n-\n-Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n-\n-#man pages\n-Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoind.1\n-Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-cli.1\n-Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-qt.1\n-\n-#selinux\n-Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n-# Source31 - what about bitcoin-tx and bench_bitcoin ???\n-Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n-Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n-\n-Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n-\n-%if 0%{?_use_libressl:1}\n-BuildRequires:\tlibressl-devel\n-%else\n-BuildRequires:\topenssl-devel\n-%endif\n-BuildRequires:\tboost-devel\n-BuildRequires:\tminiupnpc-devel\n-BuildRequires:\tautoconf automake libtool\n-BuildRequires:\tlibevent-devel\n-\n-\n-Patch0:\t\tbitcoin-0.12.0-libressl.patch\n-\n-\n-%description\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-%if %{_buildqt}\n-%package core\n-Summary:\tPeer to Peer Cryptographic Currency\n-Group:\t\tApplications/System\n-Obsoletes:\t%{name} < %{version}-%{release}\n-Provides:\t%{name} = %{version}-%{release}\n-%if 0%{?_use_qt4}\n-BuildRequires:\tqt-devel\n-%else\n-BuildRequires:\tqt5-qtbase-devel\n-# for /usr/bin/lrelease-qt5\n-BuildRequires:\tqt5-linguist\n-%endif\n-BuildRequires:\tprotobuf-devel\n-BuildRequires:\tqrencode-devel\n-BuildRequires:\t%{_bindir}/desktop-file-validate\n-# for icon generation from SVG\n-BuildRequires:\t%{_bindir}/inkscape\n-BuildRequires:\t%{_bindir}/convert\n-\n-%description core\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-This package contains the Qt based graphical client and node. If you are looking\n-to run a Bitcoin wallet, this is probably the package you want.\n-%endif\n-\n-\n-%package libs\n-Summary:\tBitcoin shared libraries\n-Group:\t\tSystem Environment/Libraries\n-\n-%description libs\n-This package provides the bitcoinconsensus shared libraries. These libraries\n-may be used by third party software to provide consensus verification\n-functionality.\n-\n-Unless you know need this package, you probably do not.\n-\n-%package devel\n-Summary:\tDevelopment files for bitcoin\n-Group:\t\tDevelopment/Libraries\n-Requires:\t%{name}-libs = %{version}-%{release}\n-\n-%description devel\n-This package contains the header files and static library for the\n-bitcoinconsensus shared library. If you are developing or compiling software\n-that wants to link against that library, then you need this package installed.\n-\n-Most people do not need this package installed.\n-\n-%package server\n-Summary:\tThe bitcoin daemon\n-Group:\t\tSystem Environment/Daemons\n-Requires:\tbitcoin-utils = %{version}-%{release}\n-Requires:\tselinux-policy policycoreutils-python\n-Requires(pre):\tshadow-utils\n-Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-Requires(postun):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-BuildRequires:\tsystemd\n-BuildRequires:\tcheckpolicy\n-BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n-\n-%description server\n-This package provides a stand-alone bitcoin-core daemon. For most users, this\n-package is only needed if they need a full-node without the graphical client.\n-\n-Some third party wallet software will want this package to provide the actual\n-bitcoin-core node they use to connect to the network.\n-\n-If you use the graphical bitcoin-core client then you almost certainly do not\n-need this package.\n-\n-%package utils\n-Summary:\tBitcoin utilities\n-Group:\t\tApplications/System\n-\n-%description utils\n-This package provides several command line utilities for interacting with a\n-bitcoin-core daemon.\n-\n-The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n-over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n-the bench_bitcoin utility can be used to perform some benchmarks.\n-\n-This package contains utilities needed by the bitcoin-server package.\n-\n-\n-%prep\n-%setup -q\n-%patch0 -p1 -b .libressl\n-cp -p %{SOURCE10} ./bitcoin.conf.example\n-tar -zxf %{SOURCE1}\n-cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n-mkdir db4 SELinux\n-cp -p %{SOURCE30} %{SOURCE31} %{SOURCE32} SELinux/\n-\n-\n-%build\n-CWD=`pwd`\n-cd db-%{bdbv}.NC/build_unix/\n-../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${CWD}/db4\n-make install\n-cd ../..\n-\n-./autogen.sh\n-%configure LDFLAGS=\"-L${CWD}/db4/lib/\" CPPFLAGS=\"-I${CWD}/db4/include/\" --with-miniupnpc --enable-glibc-back-compat %{buildargs}\n-make %{?_smp_mflags}\n-\n-pushd SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n-\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n-done\n-popd\n-\n-\n-%install\n-make install DESTDIR=%{buildroot}\n-\n-mkdir -p -m755 %{buildroot}%{_sbindir}\n-mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n-\n-# systemd stuff\n-mkdir -p %{buildroot}%{_tmpfilesdir}\n-cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-d /run/bitcoind 0750 bitcoin bitcoin -\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-\n-mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n-cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-# Provide options to the bitcoin daemon here, for example\n-# OPTIONS=\"-testnet -disable-wallet\"\n-\n-OPTIONS=\"\"\n-\n-# System service defaults.\n-# Don't change these unless you know what you're doing.\n-CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n-DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n-PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-\n-mkdir -p %{buildroot}%{_unitdir}\n-cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n-[Unit]\n-Description=Bitcoin daemon\n-After=syslog.target network.target\n-\n-[Service]\n-Type=forking\n-ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n-EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n-User=bitcoin\n-Group=bitcoin\n-\n-Restart=on-failure\n-PrivateTmp=true\n-TimeoutStopSec=120\n-TimeoutStartSec=60\n-StartLimitInterval=240\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n-#end systemd stuff\n-\n-mkdir %{buildroot}%{_sysconfdir}/bitcoin\n-mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n-\n-#SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n-\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n-done\n-\n-%if %{_buildqt}\n-# qt icons\n-install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n-install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n-%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n-%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n-%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n-%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n-%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n-touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n-touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n-\n-# Desktop File - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/applications\n-cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;\n-EOF\n-# change touch date when modifying desktop\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-\n-# KDE protocol - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/kde4/services\n-cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false\n-EOF\n-# change touch date when modifying protocol\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-%endif\n-\n-# man pages\n-install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n-install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n-%if %{_buildqt}\n-install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n-%endif\n-\n-# nuke these, we do extensive testing of binaries in %%check before packaging\n-rm -f %{buildroot}%{_bindir}/test_*\n-\n-%check\n-make check\n-srcdir=src test/bitcoin-util-test.py\n-test/functional/test_runner.py --extended\n-\n-%post libs -p /sbin/ldconfig\n-\n-%postun libs -p /sbin/ldconfig\n-\n-%pre server\n-getent group bitcoin >/dev/null || groupadd -r bitcoin\n-getent passwd bitcoin >/dev/null ||\n-\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n-\t-c \"Bitcoin wallet server\" bitcoin\n-exit 0\n-\n-%post server\n-%systemd_post bitcoin.service\n-# SELinux\n-if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-for selinuxvariant in %{selinux_variants}; do\n-\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n-done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18443\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18444\n-%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n-fi\n-\n-%posttrans server\n-%{_bindir}/systemd-tmpfiles --create\n-\n-%preun server\n-%systemd_preun bitcoin.service\n-\n-%postun server\n-%systemd_postun bitcoin.service\n-# SELinux\n-if [ $1 -eq 0 ]; then\n-\tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-\t%{_sbindir}/semanage port -d -p tcp 8332\n-\t%{_sbindir}/semanage port -d -p tcp 8333\n-\t%{_sbindir}/semanage port -d -p tcp 18332\n-\t%{_sbindir}/semanage port -d -p tcp 18333\n-\t%{_sbindir}/semanage port -d -p tcp 18443\n-\t%{_sbindir}/semanage port -d -p tcp 18444\n-\tfor selinuxvariant in %{selinux_variants}; do\n-\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n-\tdone\n-\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n-\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n-\tfi\n-fi\n-\n-%clean\n-rm -rf %{buildroot}\n-\n-%if %{_buildqt}\n-%files core\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-qt\n-%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n-%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.png\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n-%endif\n-\n-%files libs\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/shared-libraries.md\n-%{_libdir}/lib*.so.*\n-\n-%files devel\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/developer-notes.md doc/shared-libraries.md\n-%attr(0644,root,root) %{_includedir}/*.h\n-%{_libdir}/*.so\n-%{_libdir}/*.a\n-%{_libdir}/*.la\n-%attr(0644,root,root) %{_libdir}/pkgconfig/*.pc\n-\n-%files server\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_sbindir}/bitcoind\n-%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n-%attr(0644,root,root) %{_unitdir}/bitcoin.service\n-%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n-%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n-%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n-%attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n-%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n-\n-%files utils\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING bitcoin.conf.example doc/README.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-cli\n-%attr(0755,root,root) %{_bindir}/bitcoin-tx\n-%attr(0755,root,root) %{_bindir}/bench_bitcoin\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n-\n-\n-\n-%changelog\n-* Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n-- Rename Qt package from bitcoin to bitcoin-core\n-- Make building of the Qt package optional\n-- When building the Qt package, default to Qt5 but allow building\n--  against Qt4\n-- Only run SELinux stuff in post scripts if it is not set to disabled\n-\n-* Wed Feb 24 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-1\n-- Initial spec file for 0.12.0 release\n-\n-# This spec file is written from scratch but a lot of the packaging decisions are directly\n-# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,81 +0,0 @@\n-policy_module(bitcoin, 1.100.1)\n-\n-########################################\n-#\n-# Declarations\n-#\n-\n-type bitcoin_t;\n-type bitcoin_exec_t;\n-init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n-\n-permissive bitcoin_t;\n-\n-type bitcoin_initrc_exec_t;\n-init_script_file(bitcoin_initrc_exec_t)\n-\n-type bitcoin_conf_t;\n-files_type(bitcoin_conf_t)\n-\n-type bitcoin_var_lib_t;\n-files_type(bitcoin_var_lib_t)\n-\n-type bitcoin_var_run_t;\n-files_type(bitcoin_var_run_t)\n-\n-type bitcoin_port_t;\n-corenet_port(bitcoin_port_t)\n-\n-########################################\n-#\n-# bitcoin local policy\n-#\n-allow bitcoin_t self:process { fork };\n-\n-allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n-allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-corenet_all_recvfrom_unlabeled(bitcoin_t)\n-\n-allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n-corenet_tcp_sendrecv_generic_if(bitcoin_t)\n-corenet_tcp_sendrecv_generic_node(bitcoin_t)\n-corenet_tcp_sendrecv_all_ports(bitcoin_t)\n-corenet_tcp_bind_generic_node(bitcoin_t)\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n-\n-domain_use_interactive_fds(bitcoin_t)\n-\n-files_read_etc_files(bitcoin_t)\n-\n-miscfiles_read_localization(bitcoin_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-\n-allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n-allow bitcoin_t self:process setsched;\n-corecmd_exec_ls(bitcoin_t)\n-corenet_tcp_connect_http_port(bitcoin_t)\n-dev_read_urand(bitcoin_t)\n-fs_getattr_xattr_fs(bitcoin_t)\n-kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "139c03181fc806a9854a3ad307146883df0e47cf",
        "filename": "contrib/seeds/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,19 +0,0 @@\n-# Seeds\n-\n-Utility to generate the seeds.txt list that is compiled into the client\n-(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n-\n-Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n-and remove old versions as necessary.\n-\n-The seeds compiled into the release are created from sipa's DNS seed data, like this:\n-\n-    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n-    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n-    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n-\n-## Dependencies\n-\n-Ubuntu:\n-\n-    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "28068a752333f6ebd08b7051ed64d996241b8d83",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,138 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Script to generate list of seed nodes for chainparams.cpp.\n-\n-This script expects two text files in the directory that is passed as an\n-argument:\n-\n-    nodes_main.txt\n-    nodes_test.txt\n-\n-These files must consist of lines in the format \n-\n-    <ip>\n-    <ip>:<port>\n-    [<ipv6>]\n-    [<ipv6>]:<port>\n-    <onion>.onion\n-    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n-\n-The output will be two data structures with the peers in binary format:\n-\n-   static SeedSpec6 pnSeed6_main[]={\n-   ...\n-   }\n-   static SeedSpec6 pnSeed6_test[]={\n-   ...\n-   }\n-\n-These should be pasted into `src/chainparamsseeds.h`.\n-'''\n-\n-from base64 import b32decode\n-from binascii import a2b_hex\n-import sys, os\n-import re\n-\n-# ipv4 in ipv6 prefix\n-pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n-# tor-specific ipv6 prefix\n-pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n-\n-def name_to_ipv6(addr):\n-    if len(addr)>6 and addr.endswith('.onion'):\n-        vchAddr = b32decode(addr[0:-6], True)\n-        if len(vchAddr) != 16-len(pchOnionCat):\n-            raise ValueError('Invalid onion %s' % s)\n-        return pchOnionCat + vchAddr\n-    elif '.' in addr: # IPv4\n-        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n-    elif ':' in addr: # IPv6\n-        sub = [[], []] # prefix, suffix\n-        x = 0\n-        addr = addr.split(':')\n-        for i,comp in enumerate(addr):\n-            if comp == '':\n-                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n-                    continue\n-                x += 1 # :: skips to suffix\n-                assert(x < 2)\n-            else: # two bytes per component\n-                val = int(comp, 16)\n-                sub[x].append(val >> 8)\n-                sub[x].append(val & 0xff)\n-        nullbytes = 16 - len(sub[0]) - len(sub[1])\n-        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n-        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n-    elif addr.startswith('0x'): # IPv4-in-little-endian\n-        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n-    else:\n-        raise ValueError('Could not parse address %s' % addr)\n-\n-def parse_spec(s, defaultport):\n-    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n-    if match: # ipv6\n-        host = match.group(1)\n-        port = match.group(2)\n-    elif s.count(':') > 1: # ipv6, no port\n-        host = s\n-        port = ''\n-    else:\n-        (host,_,port) = s.partition(':')\n-\n-    if not port:\n-        port = defaultport\n-    else:\n-        port = int(port)\n-\n-    host = name_to_ipv6(host)\n-\n-    return (host,port)\n-\n-def process_nodes(g, f, structname, defaultport):\n-    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n-    first = True\n-    for line in f:\n-        comment = line.find('#')\n-        if comment != -1:\n-            line = line[0:comment]\n-        line = line.strip()\n-        if not line:\n-            continue\n-        if not first:\n-            g.write(',\\n')\n-        first = False\n-\n-        (host,port) = parse_spec(line, defaultport)\n-        hoststr = ','.join(('0x%02x' % b) for b in host)\n-        g.write('    {{%s}, %i}' % (hoststr, port))\n-    g.write('\\n};\\n')\n-\n-def main():\n-    if len(sys.argv)<2:\n-        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        sys.exit(1)\n-    g = sys.stdout\n-    indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n-    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n-    g.write(' *\\n')\n-    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n-    g.write(' */\\n')\n-    with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n-    g.write('\\n')\n-    with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-            \n-if __name__ == '__main__':\n-    main()\n-"
      },
      {
        "sha": "877a7836ef74a8a382cc76d7407179b108329af5",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,172 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Generate seeds.txt from Pieter's DNS seeder\n-#\n-\n-NSEEDS=512\n-\n-MAX_SEEDS_PER_ASN=2\n-\n-MIN_BLOCKS = 337600\n-\n-# These are hosts that have been observed to be behaving strangely (e.g.\n-# aggressively connecting to every node).\n-SUSPICIOUS_HOSTS = {\n-    \"130.211.129.106\", \"178.63.107.226\",\n-    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n-    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n-    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n-    \"54.94.195.96\", \"54.94.200.247\"\n-}\n-\n-import re\n-import sys\n-import dns.resolver\n-import collections\n-\n-PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n-PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n-PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.13.(1|2|99)/|/Satoshi:0.14.(0|1|2|99)/)$\")\n-\n-def parseline(line):\n-    sline = line.split()\n-    if len(sline) < 11:\n-       return None\n-    m = PATTERN_IPV4.match(sline[0])\n-    sortkey = None\n-    ip = None\n-    if m is None:\n-        m = PATTERN_IPV6.match(sline[0])\n-        if m is None:\n-            m = PATTERN_ONION.match(sline[0])\n-            if m is None:\n-                return None\n-            else:\n-                net = 'onion'\n-                ipstr = sortkey = m.group(1)\n-                port = int(m.group(2))\n-        else:\n-            net = 'ipv6'\n-            if m.group(1) in ['::']: # Not interested in localhost\n-                return None\n-            ipstr = m.group(1)\n-            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n-            port = int(m.group(2))\n-    else:\n-        # Do IPv4 sanity check\n-        ip = 0\n-        for i in range(0,4):\n-            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n-                return None\n-            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n-        if ip == 0:\n-            return None\n-        net = 'ipv4'\n-        sortkey = ip\n-        ipstr = m.group(1)\n-        port = int(m.group(6))\n-    # Skip bad results.\n-    if sline[1] == 0:\n-        return None\n-    # Extract uptime %.\n-    uptime30 = float(sline[7][:-1])\n-    # Extract Unix timestamp of last success.\n-    lastsuccess = int(sline[2])\n-    # Extract protocol version.\n-    version = int(sline[10])\n-    # Extract user agent.\n-    agent = sline[11][1:-1]\n-    # Extract service flags.\n-    service = int(sline[9], 16)\n-    # Extract blocks.\n-    blocks = int(sline[8])\n-    # Construct result.\n-    return {\n-        'net': net,\n-        'ip': ipstr,\n-        'port': port,\n-        'ipnum': ip,\n-        'uptime': uptime30,\n-        'lastsuccess': lastsuccess,\n-        'version': version,\n-        'agent': agent,\n-        'service': service,\n-        'blocks': blocks,\n-        'sortkey': sortkey,\n-    }\n-\n-def filtermultiport(ips):\n-    '''Filter out hosts with more nodes per IP'''\n-    hist = collections.defaultdict(list)\n-    for ip in ips:\n-        hist[ip['sortkey']].append(ip)\n-    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n-\n-# Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_total):\n-    # Sift out ips by type\n-    ips_ipv4 = [ip for ip in ips if ip['net'] == 'ipv4']\n-    ips_ipv6 = [ip for ip in ips if ip['net'] == 'ipv6']\n-    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n-\n-    # Filter IPv4 by ASN\n-    result = []\n-    asn_count = {}\n-    for ip in ips_ipv4:\n-        if len(result) == max_total:\n-            break\n-        try:\n-            asn = int([x.to_text() for x in dns.resolver.query('.'.join(reversed(ip['ip'].split('.'))) + '.origin.asn.cymru.com', 'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-            if asn not in asn_count:\n-                asn_count[asn] = 0\n-            if asn_count[asn] == max_per_asn:\n-                continue\n-            asn_count[asn] += 1\n-            result.append(ip)\n-        except:\n-            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n-\n-    # TODO: filter IPv6 by ASN\n-\n-    # Add back non-IPv4\n-    result.extend(ips_ipv6)\n-    result.extend(ips_onion)\n-    return result\n-\n-def main():\n-    lines = sys.stdin.readlines()\n-    ips = [parseline(line) for line in lines]\n-\n-    # Skip entries with valid address.\n-    ips = [ip for ip in ips if ip is not None]\n-    # Skip entries from suspicious hosts.\n-    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n-    # Enforce minimal number of blocks.\n-    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n-    # Require service bit 1.\n-    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    # Require at least 50% 30-day uptime.\n-    ips = [ip for ip in ips if ip['uptime'] > 50]\n-    # Require a known and recent user agent.\n-    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n-    # Sort by availability (and use last success as tie breaker)\n-    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n-    ips = filtermultiport(ips)\n-    # Look up ASNs and limit results, both per ASN and globally.\n-    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n-    # Sort the results by IP address (for deterministic output).\n-    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-\n-    for ip in ips:\n-        if ip['net'] == 'ipv6':\n-            print('[%s]:%i' % (ip['ip'], ip['port']))\n-        else:\n-            print('%s:%i' % (ip['ip'], ip['port']))\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "60b34216cd634388e2bd697077616c1075aad204",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 1450,
        "changes": 1450,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,1450 +0,0 @@\n-2.228.70.198:8333\n-4.15.180.29:8333\n-4.15.180.30:8333\n-5.2.67.110:8333\n-5.39.224.103:8333\n-5.43.124.154:8333\n-5.189.165.102:8333\n-5.226.149.145:8333\n-5.228.7.146:8333\n-5.228.64.71:8333\n-5.249.152.101:8333\n-5.254.124.55:8333\n-5.255.64.231:8333\n-5.255.90.234:8333\n-14.192.8.27:21301\n-18.62.3.86:8333\n-18.85.35.80:8333\n-23.28.128.65:8333\n-23.108.83.12:8333\n-23.233.2.238:8333\n-24.27.65.168:8333\n-24.56.241.219:8333\n-24.64.75.132:8333\n-24.73.70.26:8333\n-24.121.154.140:8333\n-24.203.96.72:8333\n-24.225.34.62:8333\n-24.227.69.146:8333\n-24.232.136.119:8333\n-31.16.123.235:8333\n-31.19.205.53:8333\n-31.132.136.35:8333\n-31.184.234.85:8333\n-31.211.102.161:8333\n-37.48.64.140:8333\n-37.97.141.116:8333\n-37.120.160.12:8333\n-37.120.164.16:8333\n-37.134.226.181:8333\n-37.147.110.43:8333\n-37.194.10.30:8333\n-37.247.22.53:8333\n-38.27.65.158:8333\n-38.133.141.34:8333\n-43.248.160.151:8333\n-45.32.130.19:8333\n-45.32.193.157:8333\n-45.46.161.121:8333\n-45.56.97.63:8333\n-45.116.178.79:8188\n-46.16.240.98:8333\n-46.20.246.100:8333\n-46.21.97.135:8333\n-46.59.10.237:8333\n-46.59.13.59:8333\n-46.148.16.210:8333\n-46.166.160.96:8333\n-46.188.44.20:8333\n-46.229.238.187:8333\n-46.231.16.149:8333\n-47.88.35.181:8333\n-47.88.100.130:8333\n-47.184.129.94:8333\n-47.199.68.204:8333\n-50.30.38.203:8333\n-50.63.162.242:8333\n-50.97.133.208:8333\n-50.114.227.224:8333\n-51.15.0.17:8333\n-51.174.69.239:8333\n-52.7.135.69:8333\n-52.14.64.82:8333\n-52.204.105.25:8333\n-54.255.160.87:8333\n-61.47.2.20:8333\n-61.125.131.55:8333\n-62.43.130.178:8333\n-62.106.16.111:8333\n-62.107.200.30:8333\n-62.109.20.99:8333\n-62.133.194.2:8333\n-62.133.194.156:8333\n-62.176.6.94:8333\n-62.182.169.222:8333\n-62.205.132.245:8333\n-62.216.238.133:8333\n-63.231.239.212:8333\n-64.34.231.140:8333\n-64.203.102.86:8333\n-64.233.245.39:8333\n-65.183.76.73:8333\n-66.96.199.166:8333\n-66.194.38.250:8333\n-66.194.38.253:8333\n-66.196.12.63:8333\n-67.215.6.34:8333\n-67.221.193.55:8333\n-68.66.193.192:8333\n-68.69.235.230:8333\n-68.111.10.219:8333\n-68.119.138.175:8333\n-68.132.193.222:8333\n-68.194.42.76:8333\n-68.235.41.204:8333\n-69.11.97.43:8333\n-69.41.3.212:8333\n-69.41.171.35:8333\n-69.41.171.36:8333\n-69.55.64.216:8333\n-69.84.42.56:8333\n-70.48.48.250:8333\n-70.112.32.29:8333\n-70.250.74.20:8333\n-71.93.161.162:8333\n-71.198.0.126:8333\n-72.5.167.41:8333\n-72.224.11.103:8333\n-73.72.160.213:8333\n-74.122.237.124:8333\n-75.86.137.34:8333\n-75.165.99.144:8333\n-76.64.74.193:8333\n-76.76.227.136:8333\n-76.173.161.44:8333\n-76.178.22.44:8333\n-77.47.137.27:8333\n-77.77.46.250:8333\n-77.91.193.152:8333\n-77.95.226.194:8333\n-77.120.246.254:8333\n-77.163.136.136:8333\n-77.203.13.57:8333\n-77.236.37.214:8333\n-77.239.37.12:8333\n-77.247.179.44:8333\n-78.34.14.52:8333\n-78.109.163.153:8333\n-78.196.172.45:8333\n-79.132.230.144:8333\n-79.160.2.105:8333\n-80.82.77.138:8333\n-80.100.203.151:8333\n-80.147.68.237:8333\n-80.237.240.102:8333\n-81.2.246.127:8333\n-81.7.7.86:8333\n-81.7.10.238:8333\n-81.27.96.37:8333\n-81.83.96.5:8333\n-81.228.194.187:8333\n-82.45.69.216:8333\n-82.69.44.183:8333\n-82.72.198.68:8333\n-82.95.204.10:8333\n-82.118.236.127:8333\n-82.118.242.4:8333\n-82.134.66.146:8333\n-82.193.109.199:8333\n-82.197.210.65:8333\n-82.199.102.10:8333\n-82.200.205.30:8333\n-82.221.108.27:8333\n-82.221.128.81:8333\n-82.221.139.97:8333\n-82.232.202.246:8333\n-83.60.64.252:8333\n-83.61.8.228:8333\n-83.128.41.48:8333\n-83.128.111.69:8333\n-83.137.41.10:8333\n-83.150.43.17:8333\n-83.169.2.43:8333\n-83.174.209.87:8333\n-83.255.43.163:8333\n-84.42.193.6:8333\n-84.52.145.231:8333\n-84.52.234.70:8333\n-84.85.102.113:8333\n-84.92.92.247:8333\n-84.146.35.123:8333\n-84.212.198.222:8333\n-84.217.163.135:8333\n-84.245.27.185:8333\n-84.251.203.5:8333\n-85.21.144.226:8333\n-85.25.194.12:8333\n-85.25.194.28:8333\n-85.144.119.222:8333\n-85.183.140.62:8333\n-85.214.228.203:8333\n-85.214.234.254:8333\n-85.218.150.1:8333\n-85.228.196.10:8333\n-86.15.2.235:8333\n-86.61.6.210:8333\n-87.92.115.194:8333\n-87.120.8.5:8333\n-87.120.37.230:8333\n-87.233.181.146:8333\n-87.239.101.102:8333\n-88.87.78.126:8333\n-88.98.198.130:8333\n-88.98.225.214:8333\n-88.99.58.194:8333\n-88.150.192.17:8333\n-88.196.136.31:17556\n-88.208.58.193:8333\n-88.208.58.194:8333\n-89.22.96.132:8333\n-89.22.104.48:8333\n-89.25.80.98:8333\n-89.34.99.41:8333\n-89.142.195.112:8333\n-89.163.224.187:8333\n-89.163.224.195:8333\n-89.238.79.235:8333\n-90.46.240.214:8333\n-90.65.232.129:8333\n-90.71.117.90:8333\n-90.149.38.172:8333\n-90.156.97.145:8333\n-90.177.48.104:8333\n-91.106.194.97:8333\n-91.135.0.187:8333\n-91.150.189.155:8333\n-91.185.198.216:8333\n-91.196.11.45:8333\n-91.197.44.133:8333\n-91.224.0.227:8333\n-91.226.10.90:8333\n-91.228.45.130:8333\n-91.229.77.239:8333\n-91.238.100.249:8333\n-91.240.141.169:8333\n-92.27.7.209:8333\n-92.54.16.135:8333\n-93.89.84.93:8333\n-93.100.51.48:8333\n-93.100.76.151:8333\n-93.104.214.235:8333\n-93.115.86.246:8333\n-93.123.80.47:8333\n-93.174.88.211:8333\n-93.188.224.253:8333\n-93.190.69.242:8333\n-94.74.81.93:8333\n-94.156.35.8:8333\n-94.176.237.241:8333\n-94.181.44.104:8333\n-94.227.43.171:8333\n-95.79.102.208:8333\n-95.79.102.209:8333\n-95.154.237.24:8333\n-95.183.48.62:8333\n-95.183.48.71:8333\n-95.213.161.2:8333\n-95.213.201.94:8333\n-96.20.227.39:8333\n-96.28.41.91:8333\n-98.127.130.17:8333\n-100.36.48.101:8333\n-101.0.81.42:8333\n-101.0.81.43:8333\n-103.11.64.46:8333\n-103.24.244.69:8333\n-103.47.210.50:8333\n-103.76.41.169:8333\n-103.80.168.57:8333\n-103.203.51.186:8333\n-103.224.118.79:8333\n-103.250.4.74:8333\n-104.192.170.202:8333\n-104.196.0.99:8333\n-104.199.192.85:8333\n-104.219.251.46:8333\n-104.223.108.33:8333\n-104.237.2.189:8333\n-104.247.230.28:8333\n-107.150.45.210:8333\n-107.174.34.77:8333\n-107.174.34.78:8333\n-107.180.71.47:8333\n-108.59.12.163:8333\n-108.168.37.13:8333\n-108.175.3.18:8333\n-108.234.193.106:8333\n-109.9.173.13:8333\n-109.101.220.151:8333\n-109.172.104.119:8333\n-109.195.193.138:8333\n-109.206.177.21:8333\n-109.226.35.28:8333\n-109.255.0.107:8333\n-113.29.183.143:8333\n-114.145.97.73:8333\n-115.66.205.171:8333\n-118.67.201.40:8333\n-118.194.226.168:8333\n-119.28.70.144:8333\n-120.24.166.73:9998\n-120.76.244.201:10022\n-121.82.4.232:8333\n-121.254.173.40:8333\n-123.203.163.128:8333\n-124.171.70.45:8333\n-125.63.57.7:8333\n-125.128.35.41:8333\n-128.208.244.124:8333\n-128.230.208.73:8333\n-131.114.10.233:8333\n-131.114.10.235:8333\n-132.239.36.105:8333\n-134.213.214.233:8333\n-136.61.238.121:8333\n-136.62.86.140:8333\n-136.144.128.49:8333\n-137.48.144.52:8333\n-137.116.160.176:8333\n-137.117.193.113:8333\n-138.19.79.208:8333\n-138.68.64.19:8333\n-139.59.96.16:8333\n-139.162.160.232:8333\n-141.136.115.230:8333\n-142.59.232.111:8333\n-142.111.2.74:8333\n-142.162.128.23:8333\n-143.107.116.5:8333\n-143.229.22.74:8333\n-143.229.36.71:8333\n-144.2.105.60:8333\n-144.76.224.214:8333\n-146.185.19.30:8333\n-147.32.30.25:8333\n-147.229.13.210:8333\n-148.103.7.119:8333\n-150.101.114.194:8333\n-150.229.0.143:8333\n-154.66.207.126:8333\n-158.129.212.236:8333\n-158.129.212.251:8333\n-160.16.206.31:8333\n-162.209.1.233:8333\n-162.209.4.125:8333\n-162.220.246.225:8333\n-163.172.218.186:8333\n-166.230.70.145:8333\n-168.235.74.45:8333\n-169.44.34.88:8333\n-170.75.195.168:8333\n-172.112.2.67:8333\n-173.94.164.38:8333\n-173.183.232.109:8333\n-173.208.176.122:8333\n-173.212.194.114:8333\n-173.232.228.146:8333\n-175.126.124.92:8333\n-175.145.109.51:8333\n-176.24.198.205:8333\n-176.36.37.62:8333\n-176.36.99.222:8333\n-176.106.144.183:8333\n-177.33.1.40:8333\n-178.162.214.225:8333\n-178.164.109.83:8333\n-178.170.138.202:8333\n-178.175.136.122:8333\n-178.218.209.162:8333\n-178.254.2.64:8333\n-178.254.34.144:8333\n-178.255.41.21:8333\n-178.255.144.163:8333\n-180.181.208.42:8333\n-180.200.128.58:8333\n-180.235.50.14:8333\n-181.215.148.154:8333\n-184.64.13.43:8333\n-184.94.164.170:8333\n-184.152.107.251:8333\n-184.182.233.206:8333\n-185.4.24.199:8333\n-185.20.99.49:8333\n-185.24.97.11:8333\n-185.25.48.27:8333\n-185.25.48.71:8333\n-185.26.196.249:8333\n-185.28.76.179:8333\n-185.35.139.250:8333\n-185.41.113.69:8333\n-185.50.213.123:8333\n-185.50.213.124:8333\n-185.50.232.114:8333\n-185.51.192.40:8333\n-185.53.129.244:8333\n-185.71.177.100:8333\n-185.77.129.176:8333\n-185.82.201.51:8333\n-185.121.173.223:8333\n-185.140.252.253:8333\n-185.145.129.184:8333\n-185.145.130.163:8333\n-185.154.156.50:8333\n-185.162.124.69:8333\n-185.170.42.2:8333\n-186.149.197.96:8333\n-188.65.212.138:8333\n-188.65.213.48:8333\n-188.93.209.192:8333\n-188.113.79.45:8333\n-188.113.84.116:8333\n-188.113.164.231:8333\n-188.122.16.153:8333\n-188.165.224.28:8333\n-188.175.239.227:8333\n-188.214.128.18:8333\n-188.227.64.19:8333\n-188.253.2.125:8333\n-189.45.203.166:8333\n-190.184.198.34:8333\n-192.151.145.250:8333\n-192.206.202.6:8333\n-192.228.101.157:8333\n-193.2.76.41:8333\n-193.27.209.100:8333\n-193.33.237.187:8333\n-193.46.83.17:8333\n-193.49.43.219:8333\n-194.24.182.27:8333\n-194.28.206.201:8333\n-194.63.143.197:8333\n-194.71.109.91:8333\n-194.79.8.36:8333\n-194.135.93.38:8333\n-194.186.160.253:8333\n-195.9.140.134:8333\n-195.39.206.29:8333\n-195.67.36.89:8333\n-195.169.99.82:8333\n-195.214.214.253:8333\n-195.223.71.147:8333\n-198.37.118.11:8333\n-198.54.113.125:8333\n-198.101.12.139:8333\n-198.143.12.105:8333\n-198.251.83.19:8333\n-199.127.224.50:8333\n-200.12.138.146:8333\n-200.116.98.185:8333\n-200.122.128.130:8333\n-202.29.6.48:8333\n-202.133.115.115:8333\n-203.59.17.160:8333\n-204.15.11.4:8333\n-204.111.241.195:8333\n-205.251.85.151:8333\n-207.244.70.40:8333\n-207.254.50.72:8333\n-208.76.93.83:8333\n-208.107.97.242:8333\n-208.110.73.107:8333\n-208.118.235.190:8333\n-209.73.142.226:8333\n-209.81.9.223:8333\n-209.126.107.166:8333\n-209.177.86.19:8333\n-209.250.6.190:8333\n-210.1.219.155:8333\n-210.211.109.165:8333\n-210.223.3.44:8333\n-211.21.129.69:8333\n-212.50.98.161:8333\n-212.51.140.183:8333\n-212.56.108.81:8333\n-212.83.35.173:8333\n-212.90.179.206:8333\n-212.93.226.90:8333\n-212.110.171.118:8333\n-213.5.36.58:8333\n-213.5.181.205:8333\n-213.17.16.251:8333\n-213.91.205.134:8333\n-213.91.211.17:8333\n-213.155.3.216:8333\n-213.168.13.151:8333\n-213.186.170.109:8334\n-213.222.208.150:8333\n-216.32.213.112:8333\n-216.59.4.212:8333\n-216.126.193.163:8333\n-216.197.79.74:8333\n-216.218.147.140:8333\n-216.227.39.84:8333\n-216.245.206.181:8333\n-216.249.92.230:8333\n-217.12.199.207:8333\n-217.23.2.177:8333\n-217.23.5.68:8333\n-217.28.194.2:8333\n-217.35.130.42:8333\n-217.64.47.138:8333\n-217.101.72.242:8333\n-217.145.81.229:8333\n-217.168.143.169:8333\n-217.169.7.111:8333\n-217.182.192.7:8333\n-219.88.232.229:8333\n-219.113.244.52:8333\n-220.130.128.58:8333\n-220.244.225.239:8333\n-221.141.3.12:8333\n-222.166.176.99:8333\n-223.252.173.147:8333\n-[2001:0:4137:9e76:1025:4e5:acb0:22cd]:8333\n-[2001:0:4137:9e76:1078:18a6:5d2c:2461]:8333\n-[2001:0:4137:9e76:10ec:236a:bd3b:f3c0]:8333\n-[2001:0:4137:9e76:186d:3f17:b7ad:95cf]:8333\n-[2001:0:4137:9e76:1870:242:ac03:aaf9]:8333\n-[2001:0:4137:9e76:18a6:1102:2abf:eb70]:8333\n-[2001:0:4137:9e76:1ce5:248c:4ff5:2b1d]:8333\n-[2001:0:4137:9e76:200f:156a:bc77:3acd]:8333\n-[2001:0:4137:9e76:2418:19d1:cddc:b1af]:8333\n-[2001:0:4137:9e76:2857:3d78:aaf8:eb28]:8333\n-[2001:0:4137:9e76:28b2:1b84:64fb:2d6a]:8333\n-[2001:0:4137:9e76:2c70:d51:d046:1209]:8333\n-[2001:0:4137:9e76:2cac:2fcf:46bb:be0d]:8333\n-[2001:0:4137:9e76:305e:20ee:a94f:6f69]:8333\n-[2001:0:4137:9e76:30cd:849:adfe:6e67]:8333\n-[2001:0:4137:9e76:345b:f12:ae1e:2948]:8333\n-[2001:0:4137:9e76:3c40:146e:9741:5a3a]:8333\n-[2001:0:4137:9e76:3c9e:3c3e:9d6e:7340]:8333\n-[2001:0:4137:9e76:499:29a8:d047:7ea1]:8333\n-[2001:0:4137:9e76:51:24:81b2:59e3]:8333\n-[2001:0:4137:9e76:889:2d7c:b61b:bf0d]:8333\n-[2001:0:4137:9e76:c9f:379c:add2:c938]:8333\n-[2001:0:4137:9e76:cd6:2eb4:b82b:addb]:8333\n-[2001:0:4137:9e76:cf0:2e3a:b29d:6207]:8333\n-[2001:0:53aa:64c:1485:fbf9:a798:1ffe]:8333\n-[2001:0:53aa:64c:59:617f:a10d:e0]:8333\n-[2001:0:5ef5:79fb:1020:2cd0:4750:eb12]:8333\n-[2001:0:5ef5:79fb:1036:1d50:3881:6930]:8333\n-[2001:0:5ef5:79fb:10a4:27d8:9c0a:cfa9]:8333\n-[2001:0:5ef5:79fb:10ae:5a8:524b:dcc4]:8333\n-[2001:0:5ef5:79fb:1892:3e3a:3f74:affa]:8333\n-[2001:0:5ef5:79fb:1c95:1a60:d1f5:215b]:8333\n-[2001:0:5ef5:79fb:200b:16ef:b9cf:9860]:8333\n-[2001:0:5ef5:79fb:28e4:fbff:3237:992]:8333\n-[2001:0:5ef5:79fb:2ce8:1d9e:b3bf:b53e]:8333\n-[2001:0:5ef5:79fb:300a:2e20:4750:eb12]:8333\n-[2001:0:5ef5:79fb:30a2:1ad9:5324:836a]:8333\n-[2001:0:5ef5:79fb:3409:1996:bcac:241f]:8333\n-[2001:0:5ef5:79fb:344b:2bd4:bb3e:e26]:8333\n-[2001:0:5ef5:79fb:34b3:11db:e7da:d461]:8333\n-[2001:0:5ef5:79fb:3839:2e0c:ba30:288e]:8333\n-[2001:0:5ef5:79fb:3880:ef4:b5f0:ee4d]:8333\n-[2001:0:5ef5:79fb:389f:52:9c0c:1f41]:8333\n-[2001:0:5ef5:79fb:3c73:304a:9d8b:99d5]:8333\n-[2001:0:5ef5:79fb:3cac:33e4:39ca:38c]:8333\n-[2001:0:5ef5:79fb:6f:3667:5398:538f]:8333\n-[2001:0:5ef5:79fb:88c:3e6:9454:3331]:8333\n-[2001:0:5ef5:79fb:89:3b55:9fcc:8e66]:8333\n-[2001:0:5ef5:79fb:c9b:3d65:bdf4:5d58]:8333\n-[2001:0:5ef5:79fb:cb7:8cc:b8ee:6806]:8333\n-[2001:0:5ef5:79fd:24f6:37b5:b9d2:2aa7]:8333\n-[2001:0:5ef5:79fd:3c63:82e:aabc:bd39]:8333\n-[2001:0:5ef5:79fd:3cf5:2eb7:c966:561d]:8333\n-[2001:0:5ef5:79fd:cf4:28e2:aabd:b766]:8333\n-[2001:0:9d38:6ab8:10f6:453:3ca4:1a8e]:8333\n-[2001:0:9d38:6ab8:14dd:298b:431c:bfec]:8333\n-[2001:0:9d38:6ab8:3051:1561:b62d:73a5]:8333\n-[2001:0:9d38:6ab8:3467:ffa:b612:e9c6]:8333\n-[2001:0:9d38:6ab8:8e8:1e26:e8e3:eed7]:8333\n-[2001:0:9d38:6ab8:c82:37b3:47ee:3ae2]:8333\n-[2001:0:9d38:6abd:1052:3cd8:a89b:e67]:8333\n-[2001:0:9d38:6abd:144d:23f3:abcb:8bcb]:8333\n-[2001:0:9d38:6abd:1c2e:31df:adf1:e616]:8333\n-[2001:0:9d38:6abd:1c41:213b:facc:9c6b]:8333\n-[2001:0:9d38:6abd:2093:12b5:8cbf:4f57]:8333\n-[2001:0:9d38:6abd:243a:2394:fd91:712c]:8333\n-[2001:0:9d38:6abd:2833:9f8:c94c:6881]:8333\n-[2001:0:9d38:6abd:2c84:29d3:ae5a:f6f0]:8333\n-[2001:0:9d38:6abd:2ce4:d50:cb22:3672]:8333\n-[2001:0:9d38:6abd:3824:816:c30d:e9d4]:8333\n-[2001:0:9d38:6abd:389a:24e9:cb5c:a1cd]:8333\n-[2001:0:9d38:6abd:38bd:88f:2193:4932]:8333\n-[2001:0:9d38:6abd:3c4f:cb1:d65b:d775]:8333\n-[2001:0:9d38:6abd:3c51:280b:b1e9:ffd]:8333\n-[2001:0:9d38:6abd:3c5a:2e2:2193:4932]:8333\n-[2001:0:9d38:6abd:3c5e:3ebf:3dc0:703a]:8333\n-[2001:0:9d38:6abd:4c9:12fc:d1d9:dc21]:8333\n-[2001:0:9d38:6abd:6e:34e7:d0a7:6772]:8333\n-[2001:0:9d38:6abd:8de:1f29:2aea:f96f]:8333\n-[2001:0:9d38:6abd:c5f:2674:a467:787c]:8333\n-[2001:0:9d38:6abd:cc0:23a4:ad7c:c998]:8333\n-[2001:0:9d38:78cf:20c0:2097:d188:9c3b]:8333\n-[2001:0:9d38:78cf:2420:dda:4ff6:8794]:8333\n-[2001:0:9d38:78cf:2892:fcb:26b2:22ac]:8333\n-[2001:0:9d38:78cf:3020:1ad7:26b2:22ac]:8333\n-[2001:0:9d38:78cf:30ae:211b:e717:7788]:8333\n-[2001:0:9d38:78cf:30d0:6edd:a418:a9e9]:8333\n-[2001:0:9d38:78cf:30d9:3278:b004:65a7]:8333\n-[2001:0:9d38:78cf:387a:17d5:dacb:bdf1]:8333\n-[2001:0:9d38:78cf:3c38:c41:433c:7b87]:8333\n-[2001:0:9d38:78cf:467:193:a8b0:a122]:8333\n-[2001:0:9d38:78cf:c65:fb96:97d2:a9b0]:8333\n-[2001:0:9d38:78cf:c9f:2633:d169:9999]:8333\n-[2001:0:9d38:78cf:ce2:aba:d120:90db]:8333\n-[2001:0:9d38:90d7:105d:26f2:a241:7339]:8333\n-[2001:0:9d38:90d7:1062:3f95:e065:fc21]:8333\n-[2001:0:9d38:90d7:10a6:19f6:ab95:ebcb]:8333\n-[2001:0:9d38:90d7:14e2:22cb:738f:9489]:8333\n-[2001:0:9d38:90d7:18fb:3da9:893d:1d57]:8333\n-[2001:0:9d38:90d7:1cc3:2534:e020:53fa]:8333\n-[2001:0:9d38:90d7:206d:2b34:d0cb:9de8]:8333\n-[2001:0:9d38:90d7:20cb:2cb:b9a7:ca5e]:8333\n-[2001:0:9d38:90d7:245c:2753:4382:704b]:8333\n-[2001:0:9d38:90d7:24d6:225f:793b:bf5]:8333\n-[2001:0:9d38:90d7:24da:8f0:bbf9:9c93]:8333\n-[2001:0:9d38:90d7:28a2:107b:438e:b08d]:8333\n-[2001:0:9d38:90d7:2c16:d58:b381:b61]:8333\n-[2001:0:9d38:90d7:2c68:3068:cb59:3be7]:8333\n-[2001:0:9d38:90d7:2c90:3855:b94f:c926]:8333\n-[2001:0:9d38:90d7:2ca2:3592:c111:dd82]:8333\n-[2001:0:9d38:90d7:2cce:1f6e:b381:8605]:8333\n-[2001:0:9d38:90d7:3435:3915:2bcc:6cc7]:8333\n-[2001:0:9d38:90d7:3438:2b9f:ad57:a721]:8333\n-[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n-[2001:0:9d38:90d7:38c4:37af:ab0a:f5ef]:8333\n-[2001:0:9d38:90d7:3a:39fd:a43b:5591]:8333\n-[2001:0:9d38:90d7:3c9d:2a45:d537:3bd6]:8333\n-[2001:0:9d38:90d7:3cfb:2cf5:5254:4d1e]:8333\n-[2001:0:9d38:90d7:43f:337:adb4:6310]:8333\n-[2001:0:9d38:90d7:493:995:d2e9:39be]:8333\n-[2001:0:9d38:90d7:5b:ce3:b275:92ab]:8333\n-[2001:0:9d38:90d7:8a8:59d:d0cb:d585]:8333\n-[2001:0:9d38:90d7:c8e:1ba0:c5a9:dace]:8333\n-[2001:0:9d38:90d7:cdb:365f:2302:f729]:8333\n-[2001:0:9d38:90d7:cf5:222e:893e:716c]:8333\n-[2001:0:9d38:90d7:d6:1085:b8dd:41c2]:8333\n-[2001:0:9d38:953c:101a:23b3:6b98:f888]:8333\n-[2001:0:9d38:953c:1805:f38:3eb2:2121]:8333\n-[2001:0:9d38:953c:1858:16f9:3833:da19]:8333\n-[2001:0:9d38:953c:18ea:2735:e73d:adc5]:8333\n-[2001:0:9d38:953c:1c44:2b70:9de7:a7cc]:8333\n-[2001:0:9d38:953c:200a:3f95:bb7c:c09f]:8333\n-[2001:0:9d38:953c:200c:3473:b85d:ddd]:8333\n-[2001:0:9d38:953c:200f:5a0:47c6:5507]:8333\n-[2001:0:9d38:953c:2097:204a:47c5:5881]:8333\n-[2001:0:9d38:953c:248f:24cd:aaf5:dee3]:8333\n-[2001:0:9d38:953c:287d:168e:3caf:47af]:8333\n-[2001:0:9d38:953c:28c1:58d:b721:94c1]:8333\n-[2001:0:9d38:953c:2c31:30a3:39d3:528]:8188\n-[2001:0:9d38:953c:2c3d:309b:d2db:8288]:8333\n-[2001:0:9d38:953c:2c47:1b36:52c1:3c73]:8333\n-[2001:0:9d38:953c:304a:10e1:b739:822a]:8333\n-[2001:0:9d38:953c:30a3:29fd:33f6:eaab]:8333\n-[2001:0:9d38:953c:3427:859b:b525:1069]:8333\n-[2001:0:9d38:953c:3459:2541:3651:d675]:8333\n-[2001:0:9d38:953c:4f5:9c88:af91:d3d3]:8333\n-[2001:0:9d38:953c:cd1:1d54:b80a:42f4]:8333\n-[2001:0:9d38:953c:cfa:37e6:9d8e:7474]:8333\n-[2001:13d8:1c01:2000:2470::1]:8333\n-[2001:1470:fffd:202c:225:90ff:fe8f:5f62]:8333\n-[2001:14ba:200:0:543c:42ce:a48b:b0d0]:8333\n-[2001:14ba:2fc:700:41b2:df51:efd8:f581]:8333\n-[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n-[2001:19f0:5:749:5400:ff:fe71:c3fc]:8333\n-[2001:19f0:5:bc:5400:ff:fe3b:9339]:8333\n-[2001:19f0:7402:42c:5400:ff:fe6c:b9b8]:8333\n-[2001:1af8:4010:a08f:f811:e5f0:3f63:e753]:8333\n-[2001:1af8:4010:a094:3333::8c38]:8333\n-[2001:1af8:4070:a016:3333::5afb]:8333\n-[2001:1af8:4700:a071:4444::e26e]:8333\n-[2001:1bc8:1a0:590e:2e0:f4ff:fe16:3a39]:8333\n-[2001:2040:77::89]:8333\n-[2001:288:1001:107:294e:5581:74bd:42f9]:8333\n-[2001:3c8:c103:a001::48]:8333\n-[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n-[2001:4178:6:1427:62:116:188:85]:8333\n-[2001:41d0:1004:20f0::]:8333\n-[2001:41d0:1008:2752::]:8333\n-[2001:41d0:1:4722::1]:8333\n-[2001:41d0:1:6f57::1]:8333\n-[2001:41d0:1:7353::1]:8333\n-[2001:41d0:1:7469::1]:8333\n-[2001:41d0:1:7d09::1]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:c129::1]:8333\n-[2001:41d0:1:d227::]:8333\n-[2001:41d0:1:e13b::1]:8333\n-[2001:41d0:1:e623::1]:8333\n-[2001:41d0:2:16be::1]:8333\n-[2001:41d0:2:203c::1]:8333\n-[2001:41d0:2:3242::]:8333\n-[2001:41d0:2:8a0f::]:8333\n-[2001:41d0:2:8c65::]:8333\n-[2001:41d0:2:8d13::]:8333\n-[2001:41d0:2:9459::]:8333\n-[2001:41d0:2:950a:ffff:ffff:0:3]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:a212::]:8333\n-[2001:41d0:2:a232::]:8333\n-[2001:41d0:2:ab1c::]:8333\n-[2001:41d0:2:bf2a::]:8333\n-[2001:41d0:2:c793::]:8333\n-[2001:41d0:302:1000::fa25]:8333\n-[2001:41d0:303:1907::]:8333\n-[2001:41d0:52:d00::6e2]:8333\n-[2001:41d0:52:d00::6e3]:8333\n-[2001:41d0:8:1b29::]:8333\n-[2001:41d0:8:3d4b::1]:8333\n-[2001:41d0:8:4d4d::1]:8333\n-[2001:41d0:8:7a38::1]:8333\n-[2001:41d0:8:8f46::1]:8333\n-[2001:41d0:8:ba87::1]:8333\n-[2001:41d0:8:bd45::1]:8333\n-[2001:41d0:8:bed3::]:8333\n-[2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:d844:1337::1017]:8333\n-[2001:41d0:8:ddb::1]:8333\n-[2001:41d0:8:ddf::1]:8333\n-[2001:41d0:8:de3d::1]:8333\n-[2001:41d0:8:e3e4::1]:8333\n-[2001:41d0:a:4e3f::1c7d:6b01]:8333\n-[2001:41d0:a:635b::1]:8333\n-[2001:41d0:a:6810::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:6fd0::]:8333\n-[2001:41d0:a:fac7::1]:8333\n-[2001:41d0:d:111c::]:8333\n-[2001:41d0:d:2ac8::]:8333\n-[2001:41d0:e:1388::1]:8333\n-[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n-[2001:41f0:61::7]:8333\n-[2001:470:1f07:151c:baac:6fff:feb7:3ba9]:8333\n-[2001:470:1f0b:8c4::5]:8333\n-[2001:470:1f0b:967::11]:8333\n-[2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n-[2001:470:1f15:f28::3]:8333\n-[2001:470:1f1a:172::2]:8333\n-[2001:470:1f1c:b07::2]:8333\n-[2001:470:1f1d:3a9::10]:8333\n-[2001:470:25:482::2]:8333\n-[2001:470:28:365::4]:8333\n-[2001:470:754f:42::17a]:8333\n-[2001:470:7:b74::2]:8333\n-[2001:470:7dda:1::1]:8333\n-[2001:470:8:c70:20c:29ff:fe6a:8fdc]:8333\n-[2001:470:8:c70::54]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n-[2001:470:dbf2:aaaa::b17:c01c]:8333\n-[2001:470:f457:8000::a6]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n-[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4ba0:cafe:13c0::1]:8333\n-[2001:4ba0:cafe:418::1]:8333\n-[2001:558:6045:23:1830:896c:d901:190d]:8333\n-[2001:67c:1220:80c::93e5:dd2]:8333\n-[2001:67c:2128:ffff:6062:36ff:fe30:6532]:8333\n-[2001:8d8:923:8400::87:ebd]:8333\n-[2001:981:4452:1::100]:8333\n-[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:981:bdbd:1:c506:7d38:4b47:da15]:8333\n-[2001:985:79af:20::35]:8333\n-[2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n-[2001:bc8:323c:100::53]:8333\n-[2001:bc8:323c:100::80:4]:8333\n-[2001:bc8:323c:100::cafe]:8333\n-[2001:bc8:3680:4242::1]:8333\n-[2001:bc8:399f:f000::1]:8333\n-[2002:1e2:5587::1e2:5587]:8333\n-[2002:1e2:5588::1e2:5588]:8333\n-[2002:2a33:21c4::2a33:21c4]:8333\n-[2002:2e04:784b::2e04:784b]:8333\n-[2002:2ebc:2c14::16]:8333\n-[2002:2f5a:3c1c::2f5a:3c1c]:10011\n-[2002:2f5a:562a::2f5a:562a]:8333\n-[2002:2f5b:a5f9::2f5b:a5f9]:8333\n-[2002:3141:28c::3141:28c]:8333\n-[2002:323f:a2f2::323f:a2f2]:8333\n-[2002:323f:fbd::323f:fbd]:8333\n-[2002:33ff:69a0::1]:8333\n-[2002:3e6a:106f::3e6a:106f]:8333\n-[2002:3e70:bbc::3e70:bbc]:8333\n-[2002:3e7a:6727::3e7a:6727]:8333\n-[2002:3f62:e6bb::3f62:e6bb]:8333\n-[2002:4540:4b30::4540:4b30]:8333\n-[2002:4e6b:c745::1]:8333\n-[2002:5052:4d8a::5052:4d8a]:8333\n-[2002:51a9:9cc9::51a9:9cc9]:8333\n-[2002:54fb:cb05::1]:8333\n-[2002:5bc2:5428::5bc2:5428]:8333\n-[2002:5bce:1253::5bce:1253]:8333\n-[2002:5bdb:19e8::5bdb:19e8]:8333\n-[2002:5c3f:3912::5c3f:3912]:8333\n-[2002:5dbd:91a9::5dbd:91a9]:8333\n-[2002:5dbe:8cc6::5dbe:8cc6]:8333\n-[2002:5fd3:8944::5fd3:8944]:8333\n-[2002:65c8:a018::65c8:a018]:8333\n-[2002:6750:a839::6750:a839]:8333\n-[2002:67fa:44b::67fa:44b]:8333\n-[2002:6a0e:3ea8::6a0e:3ea8]:10011\n-[2002:6a0f:2497::6a0f:2497]:8333\n-[2002:6dec:5ac7::6dec:5ac7]:8333\n-[2002:704a:d6d4::704a:d6d4]:9997\n-[2002:7237:fcf6::7237:fcf6]:20188\n-[2002:76b2:7f40::76b2:7f40]:8333\n-[2002:7819:7e80::7819:7e80]:7743\n-[2002:781b:8db8::781b:8db8]:8333\n-[2002:7b38:cd00::7b38:cd00]:8333\n-[2002:ac52:b854::ac52:b854]:8333\n-[2002:b610:1ca3::b610:1ca3]:8333\n-[2002:b946:694a::b946:694a]:8339\n-[2002:b994:9167::b994:9167]:8333\n-[2002:bc28:6b92::bc28:6b92]:8333\n-[2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:c338:3f0a::c338:3f0a]:8333\n-[2002:d1b1:5615::d1b1:5615]:8333\n-[2002:d2d3:6da5::d2d3:6da5]:8333\n-[2002:d917:2b1::d917:2b1]:8333\n-[2002:db71:f434::db71:f434]:8333\n-[2003:a:36f:4f01::1]:8333\n-[2003:a:37f:ef4f:dead:babe:b00b:beef]:8333\n-[2400:8901::f03c:91ff:fe2c:63d8]:8333\n-[2400:8902::f03c:91ff:fed5:9d8d]:8333\n-[2401:2500:203:10:153:120:156:83]:8333\n-[2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n-[2402:1f00:8100:36::]:8333\n-[2403:4200:403:2::ff]:8333\n-[2405:9800:b440:947f:59a5:f379:1876:858c]:8333\n-[2405:aa00:2::40]:8333\n-[2406:da14:445:5201::4]:8333\n-[2406:da18:f7c:4351:1a58:81fe:6ed0:1103]:8333\n-[2406:da18:f7c:4351:22aa:2585:fe88:7d58]:8333\n-[2406:da18:f7c:4351:2674:33bb:25d6:cbba]:8333\n-[2406:da18:f7c:4351:2e19:a8c7:a36a:bde0]:8333\n-[2406:da18:f7c:4351:3cc8:43d:fbcc:5067]:8333\n-[2406:da18:f7c:4351:5228:2b53:bb9a:edf5]:8333\n-[2406:da18:f7c:4351:5729:102:998c:d41a]:8333\n-[2406:da18:f7c:4351:591b:4881:3986:3703]:8333\n-[2406:da18:f7c:4351:59b9:b50:f47f:b560]:8333\n-[2406:da18:f7c:4351:61f2:cfb0:8c45:5fdd]:8333\n-[2406:da18:f7c:4351:6356:68e0:73fc:ac0b]:8333\n-[2406:da18:f7c:4351:660e:f6bc:3563:ba8e]:8333\n-[2406:da18:f7c:4351:691:9e:f2df:227d]:8333\n-[2406:da18:f7c:4351:721c:83d2:6765:4300]:8333\n-[2406:da18:f7c:4351:7237:9be:4601:bc15]:8333\n-[2406:da18:f7c:4351:7a3b:c203:fd11:6c7d]:8333\n-[2406:da18:f7c:4351:7a74:a80e:889a:ba42]:8333\n-[2406:da18:f7c:4351:7ee3:a181:f25c:fa79]:8333\n-[2406:da18:f7c:4351:8a25:9084:140:4549]:8333\n-[2406:da18:f7c:4351:8bc0:c6fd:ecfb:f074]:8333\n-[2406:da18:f7c:4351:91ce:d0ba:1b9e:c27b]:8333\n-[2406:da18:f7c:4351:9336:44e7:84b4:85b9]:8333\n-[2406:da18:f7c:4351:936c:c3b9:a1d0:848]:8333\n-[2406:da18:f7c:4351:93ef:1eef:65c8:766d]:8333\n-[2406:da18:f7c:4351:94e0:5b27:78c2:5111]:8333\n-[2406:da18:f7c:4351:9815:a202:18a3:2a36]:8333\n-[2406:da18:f7c:4351:9e1b:135c:7472:9d9]:8333\n-[2406:da18:f7c:4351:9f84:278:68f5:b8ea]:8333\n-[2406:da18:f7c:4351:a062:493f:a6f8:ca75]:8333\n-[2406:da18:f7c:4351:a192:b98:3066:8f11]:8333\n-[2406:da18:f7c:4351:a1cb:2f19:4a54:38c9]:8333\n-[2406:da18:f7c:4351:a4a2:4c9:c43a:98ae]:8333\n-[2406:da18:f7c:4351:a7e9:cd48:fa90:46d3]:8333\n-[2406:da18:f7c:4351:a88:99:6671:fce4]:8333\n-[2406:da18:f7c:4351:abe1:2e48:eb97:2ab5]:8333\n-[2406:da18:f7c:4351:acf5:2b21:5d2a:6b31]:8333\n-[2406:da18:f7c:4351:b51f:8966:74a5:6c53]:8333\n-[2406:da18:f7c:4351:b8e3:f3ca:e412:daa5]:8333\n-[2406:da18:f7c:4351:ba7c:6da8:da59:b1b6]:8333\n-[2406:da18:f7c:4351:be04:6f8e:8f93:c555]:8333\n-[2406:da18:f7c:4351:c82d:2a0b:31a5:e28d]:8333\n-[2406:da18:f7c:4351:c993:eb06:bd2c:1e65]:8333\n-[2406:da18:f7c:4351:d4b9:bff8:c4d4:1e05]:8333\n-[2406:da18:f7c:4351:d70d:a73d:1ddd:439e]:8333\n-[2406:da18:f7c:4351:e103:f456:b296:9f29]:8333\n-[2406:da18:f7c:4351:ea3b:27ec:7c2:aebc]:8333\n-[2406:da18:f7c:4351:f62c:5013:379b:363e]:8333\n-[240b:10:ca20:f0:224:e8ff:fe1f:60d9]:8333\n-[240b:250:1e0:2400:b9ef:8fe3:a69a:7378]:8333\n-[2600:1f14:34a:fe00:13f4:ceb6:a9db:4f47]:8333\n-[2600:1f14:34a:fe00:2550:9366:a5d9:78a5]:8333\n-[2600:1f14:34a:fe00:27d:6ed:7c8d:7bee]:8333\n-[2600:1f14:34a:fe00:2ed6:8a19:4eb:36c1]:8333\n-[2600:1f14:34a:fe00:34c7:2e9e:e60e:f823]:8333\n-[2600:1f14:34a:fe00:38de:442:72df:6346]:8333\n-[2600:1f14:34a:fe00:3a1e:878f:991a:9582]:8333\n-[2600:1f14:34a:fe00:3d88:1805:54e3:f4c8]:8333\n-[2600:1f14:34a:fe00:3f3e:58bd:ec82:5dac]:8333\n-[2600:1f14:34a:fe00:449a:9515:8436:f407]:8333\n-[2600:1f14:34a:fe00:4f84:277f:e64d:1f06]:8333\n-[2600:1f14:34a:fe00:5229:de84:8226:7257]:8333\n-[2600:1f14:34a:fe00:5743:42c3:951b:e97a]:8333\n-[2600:1f14:34a:fe00:5a29:85b:86b5:fa0e]:8333\n-[2600:1f14:34a:fe00:5de8:81e:6d79:330b]:8333\n-[2600:1f14:34a:fe00:5fca:ad1e:5b9c:5265]:8333\n-[2600:1f14:34a:fe00:68c4:ca1b:813e:1bce]:8333\n-[2600:1f14:34a:fe00:6:de9e:7b5e:a558]:8333\n-[2600:1f14:34a:fe00:6c72:1fcd:433:dc97]:8333\n-[2600:1f14:34a:fe00:77ee:629f:bc13:fb4f]:8333\n-[2600:1f14:34a:fe00:79d0:85d6:516f:3293]:8333\n-[2600:1f14:34a:fe00:81:422f:9ef3:4579]:8333\n-[2600:1f14:34a:fe00:822b:5f05:ec8d:48c6]:8333\n-[2600:1f14:34a:fe00:82a:76a2:fdc9:845e]:8333\n-[2600:1f14:34a:fe00:83ca:cef6:e04c:50c0]:8333\n-[2600:1f14:34a:fe00:8ba2:a36c:8687:d5aa]:8333\n-[2600:1f14:34a:fe00:8c80:5c67:3b47:90b3]:8333\n-[2600:1f14:34a:fe00:8eb8:f47f:6d53:e3ae]:8333\n-[2600:1f14:34a:fe00:989c:f8f8:a922:1b9a]:8333\n-[2600:1f14:34a:fe00:98c9:1eb3:ea12:a8f0]:8333\n-[2600:1f14:34a:fe00:9ee5:a8f6:6b2a:866e]:8333\n-[2600:1f14:34a:fe00:a46b:7bd5:629f:f75c]:8333\n-[2600:1f14:34a:fe00:a627:8299:8784:d439]:8333\n-[2600:1f14:34a:fe00:ad0b:955e:b4e5:d97d]:8333\n-[2600:1f14:34a:fe00:ae82:7117:9d69:7c86]:8333\n-[2600:1f14:34a:fe00:ccee:365a:43f8:b871]:8333\n-[2600:1f14:34a:fe00:d5ee:a3e2:2f85:e593]:8333\n-[2600:1f14:34a:fe00:d5f0:1fe0:6bd5:18a8]:8333\n-[2600:1f14:34a:fe00:e4a7:5aba:af87:4cdb]:8333\n-[2600:1f14:34a:fe00:e8e5:2d0:fb6f:2f5]:8333\n-[2600:1f14:34a:fe00:e9ef:4690:a5ac:92be]:8333\n-[2600:1f14:34a:fe00:efba:2260:6997:fcf7]:8333\n-[2600:1f14:34a:fe00:f107:2d08:c67:e5dd]:8333\n-[2600:1f14:34a:fe00:f1b9:88fb:f3db:a86e]:8333\n-[2600:1f14:34a:fe00:f79c:17b7:6f75:95b7]:8333\n-[2600:1f14:6ae:d900:6550:3fc5:e074:a72c]:8333\n-[2600:1f16:625:e00:1243:38b3:caa:d62e]:8333\n-[2600:1f16:625:e00:166d:a956:1041:f97d]:8333\n-[2600:1f16:625:e00:35f2:2428:fc57:d638]:8333\n-[2600:1f16:625:e00:3c75:333e:b7f:8cc0]:8333\n-[2600:1f16:625:e00:3fbf:31f:1b57:8b18]:8333\n-[2600:1f16:625:e00:5617:7575:379:a8cc]:8333\n-[2600:1f16:625:e00:58fa:fce6:30:a5dc]:8333\n-[2600:1f16:625:e00:5e74:70dc:af78:6b77]:8333\n-[2600:1f16:625:e00:7036:f651:2ee:39cd]:8333\n-[2600:1f16:625:e00:7fc:9004:e7be:ffe2]:8333\n-[2600:1f16:625:e00:814a:23f6:e996:5e64]:8333\n-[2600:1f16:625:e00:822c:a88b:f9c:57e3]:8333\n-[2600:1f16:625:e00:8314:b91e:a7ba:702]:8333\n-[2600:1f16:625:e00:88bb:ee9a:10de:12]:8333\n-[2600:1f16:625:e00:8c30:56f5:a29a:91de]:8333\n-[2600:1f16:625:e00:8fdf:6517:7718:8c42]:8333\n-[2600:1f16:625:e00:91fd:78b1:62a3:193]:8333\n-[2600:1f16:625:e00:930d:93ed:76a6:3285]:8333\n-[2600:1f16:625:e00:93c2:615f:a79a:c11f]:8333\n-[2600:1f16:625:e00:a780:8bc8:a1f6:d417]:8333\n-[2600:1f16:625:e00:a951:e663:4046:8c3a]:8333\n-[2600:1f16:625:e00:ab19:5fe3:f155:1371]:8333\n-[2600:1f16:625:e00:aefd:9cc7:d3:6e86]:8333\n-[2600:1f16:625:e00:b031:e86e:8604:324a]:8333\n-[2600:1f16:625:e00:b6e:4399:9dc2:6b45]:8333\n-[2600:1f16:625:e00:b7c7:58c6:21a1:fd41]:8333\n-[2600:1f16:625:e00:c169:6282:178c:27d6]:8333\n-[2600:1f16:625:e00:c94e:58b:bd35:d815]:8333\n-[2600:1f16:625:e00:caa5:7369:73a4:5711]:8333\n-[2600:1f16:625:e00:cd15:b9f2:6e3e:6fd1]:8333\n-[2600:1f16:625:e00:d6f3:775:66b7:3e92]:8333\n-[2600:1f16:625:e00:dbec:f7d9:e15:f8e0]:8333\n-[2600:1f16:625:e00:dbf4:4d41:594e:bc20]:8333\n-[2600:1f16:625:e00:e11b:4589:a0c3:9cc7]:8333\n-[2600:1f16:625:e00:ed68:15b0:3a97:be0c]:8333\n-[2600:1f16:625:e00:eef3:bce0:84ee:a98b]:8333\n-[2600:1f16:625:e00:ef3a:f66e:f059:d03f]:8333\n-[2600:1f16:625:e00:f67c:d398:5b6:d34f]:8333\n-[2600:1f16:625:e00:fe35:5099:3a8e:d123]:8333\n-[2600:1f18:64d9:1603:6f6f:eef9:b595:1958]:8333\n-[2600:3c00::f03c:91ff:fe84:d650]:8333\n-[2600:3c00::f03c:91ff:fe89:7438]:8333\n-[2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:febb:981e]:8333\n-[2600:3c01::f03c:91ff:fe69:89e9]:8333\n-[2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2600:3c03::f03c:91ff:fee0:233e]:8333\n-[2600:6c55:7200:24d:cf4:811c:7cb3:f7a7]:8333\n-[2600:8805:2400:14e:226:4aff:fe02:2ba4]:8333\n-[2601:18d:4600:3cc2:20e7:b3ff:fecf:a99]:8333\n-[2601:1c2:1702:5241:47d:4016:ec42:6705]:8333\n-[2601:441:4101:70cd:4e3:8e81:3250:1f0b]:8333\n-[2601:602:9980:f78:211:11ff:fec5:1ae]:8333\n-[2601:646:4103:179f:5809:1bff:fe55:6678]:8333\n-[2602:4c:323:b101:35a3:9de8:6984:ef56]:8333\n-[2602:ff62:104:ac1:8000::]:8333\n-[2602:ffc5:40::1:711e]:8333\n-[2602:ffc5::c30:1c75]:8333\n-[2604:a880:2:d0::17e9:2001]:8333\n-[2604:a880:2:d0::22f8:f001]:8333\n-[2604:a880:2:d0::22f9:1]:8333\n-[2604:a880:2:d0::22f9:c001]:8333\n-[2604:a880:2:d0::22f9:d001]:8333\n-[2604:a880:2:d0::22f9:e001]:8333\n-[2604:a880:2:d0::22fa:2001]:8333\n-[2604:a880:2:d0::22fa:3001]:8333\n-[2604:a880:400:d0::1684:5001]:8333\n-[2604:a880:400:d0::1ac4:b001]:8333\n-[2604:a880:400:d0::2004:4001]:8333\n-[2604:a880:400:d0::2004:5001]:8333\n-[2604:a880:400:d0::2004:6001]:8333\n-[2604:a880:400:d0::2004:c001]:8333\n-[2604:a880:400:d0::2004:d001]:8333\n-[2604:a880:400:d0::2004:e001]:8333\n-[2604:a880:400:d0::2004:f001]:8333\n-[2604:a880:400:d0::2005:1]:8333\n-[2604:a880:400:d0::2005:3001]:8333\n-[2604:a880:400:d0::261f:6001]:8333\n-[2604:a880:400:d0::28b8:5001]:8333\n-[2604:a880:400:d0::ad7:e001]:8333\n-[2605:4d00::50]:8333\n-[2605:5d80:2002::245]:8333\n-[2605:9880:0:953:225:90ff:fed2:c0b4]:8333\n-[2606:c380::215:17ff:feb3:3ec]:8333\n-[2607:1c00:a:6:3c1c:1b0d:ba4:8ea9]:8333\n-[2607:1c00:a:6::1000]:8333\n-[2607:4480:2:2000:250:56ff:fe86:6449]:8333\n-[2607:5300:120:671::]:8333\n-[2607:5300:120:962::]:8333\n-[2607:5300:201:2000::1:556]:8333\n-[2607:5300:203:118:3733::1414]:8333\n-[2607:5300:60:10aa::1]:8333\n-[2607:5300:60:1e83::]:8333\n-[2607:5300:60:1e83::1000]:8333\n-[2607:5300:60:1e83::2000]:8333\n-[2607:5300:60:2d0::1]:8333\n-[2607:5300:60:3ddf::]:8333\n-[2607:5300:60:3f3c::]:8333\n-[2607:5300:60:5428::]:8333\n-[2607:5300:60:ac0::1]:8333\n-[2607:5300:61:f4b::1]:8333\n-[2607:9000:0:1:5054:ff:fe5d:264e]:8333\n-[2607:f1c0:846:9a00::87:d00e]:8333\n-[2607:f2d8:4005:d:a8a2:eeff:fee0:a859]:8333\n-[2607:f948:0:1::1:40]:8333\n-[2607:fa18:3a01::50]:8333\n-[2607:fea8:3ca0:926::2]:8333\n-[2607:fea8:4da0:3b0::2]:8333\n-[2607:ff10:c5:502:225:90ff:fe32:d446]:8333\n-[2607:ff28:9005:1::2567:57e0]:8333\n-[2620:71:4000:0:192:30:120:110]:8333\n-[2620:b8:4000:1000::93:1]:8333\n-[2800:1a0::9]:8333\n-[2801:84:0:1034:76d4:35ff:fe7f:5033]:8333\n-[2a00:16d8:c::5b6a:c261]:8333\n-[2a00:1768:2001:24::148:218]:8333\n-[2a00:19e0:1:1:225:90ff:fea5:fc0]:8333\n-[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n-[2a00:6340:2004:0:5054:ff:fe54:38c]:8333\n-[2a00:7b80:477:21::1c8c:83a6]:8333\n-[2a00:7c80:0:71::8]:8333\n-[2a00:7c80:0:97::7]:8333\n-[2a01:238:4363:4900:d85e:c1d9:2b32:61d0]:8333\n-[2a01:488:66:1000:53a9:22b:0:1]:8333\n-[2a01:488:67:1000:5bfa:5526:0:1]:8333\n-[2a01:488:67:1000:b01c:3379:0:1]:8333\n-[2a01:4d60:3:1:5::1]:8333\n-[2a01:4f8:10a:1d8f::2]:8333\n-[2a01:4f8:10a:1e81::2]:8333\n-[2a01:4f8:10a:2261::2]:8833\n-[2a01:4f8:10a:239c::2]:9002\n-[2a01:4f8:10a:294a::2]:8333\n-[2a01:4f8:10a:31d3::2]:8333\n-[2a01:4f8:10a:3fe6::2]:8333\n-[2a01:4f8:10a:b2e::2]:8333\n-[2a01:4f8:10b:12d7::2]:8333\n-[2a01:4f8:10b:d50::2]:8333\n-[2a01:4f8:10b:e2d::2]:8333\n-[2a01:4f8:10b:ee1::2]:8333\n-[2a01:4f8:110:5107::2]:8333\n-[2a01:4f8:110:5292::2]:8333\n-[2a01:4f8:110:536e::2]:8333\n-[2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:130:3332::2]:8333\n-[2a01:4f8:130:430b::2]:8333\n-[2a01:4f8:130:618e::2]:8333\n-[2a01:4f8:130:71d2::2]:8333\n-[2a01:4f8:130:7422::2]:8333\n-[2a01:4f8:131:33ad::2]:8333\n-[2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:131:3428::2]:8333\n-[2a01:4f8:140:1326::2]:8333\n-[2a01:4f8:140:524a::2]:8333\n-[2a01:4f8:140:6055::2]:8333\n-[2a01:4f8:140:7410::2]:8333\n-[2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:141:2254::2]:8333\n-[2a01:4f8:141:22ae::2]:8333\n-[2a01:4f8:150:11d4::2]:8333\n-[2a01:4f8:150:70a4::2]:8333\n-[2a01:4f8:150:726b::2]:8333\n-[2a01:4f8:150:72ee::4202]:8333\n-[2a01:4f8:150:90ca::2]:8333\n-[2a01:4f8:151:30c9::2]:8333\n-[2a01:4f8:151:334d::3]:8333\n-[2a01:4f8:151:7175::2]:8333\n-[2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:636e::2]:8333\n-[2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:162:2108::2]:8333\n-[2a01:4f8:162:3121::50]:8333\n-[2a01:4f8:162:424c::2]:8333\n-[2a01:4f8:171:1c1b::2]:8333\n-[2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:2258::2]:8333\n-[2a01:4f8:171:27d6::2]:8333\n-[2a01:4f8:171:2f28::2]:8333\n-[2a01:4f8:171:d23::2]:8333\n-[2a01:4f8:172:10da::2]:8333\n-[2a01:4f8:172:504::2]:8333\n-[2a01:4f8:173:1622::2]:8333\n-[2a01:4f8:173:42::2]:8333\n-[2a01:4f8:190:24eb::2]:8333\n-[2a01:4f8:190:528d::2]:8333\n-[2a01:4f8:190:61f3::2]:8333\n-[2a01:4f8:191:418f::2]:3333\n-[2a01:4f8:191:63b4:5000::1]:8333\n-[2a01:4f8:191:81b7::2]:8333\n-[2a01:4f8:191:8328::3]:8333\n-[2a01:4f8:192:4a5::2]:8333\n-[2a01:4f8:192:5230::2]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:32a6::2]:8333\n-[2a01:4f8:200:414e::2]:8333\n-[2a01:4f8:200:416a::2]:8333\n-[2a01:4f8:200:90c3::2]:8333\n-[2a01:4f8:201:148d::2]:8333\n-[2a01:4f8:201:2cc::2]:8333\n-[2a01:4f8:201:3e3::2]:8333\n-[2a01:4f8:201:53cc::2]:8333\n-[2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:202:3030::2]:8333\n-[2a01:4f8:202:31e3::2]:8333\n-[2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:202:6035::2]:8333\n-[2a01:4f8:210:5488::2]:8333\n-[2a01:4f8:211:1e17::2]:8333\n-[2a01:4f8:211:1ec5::2]:8333\n-[2a01:4f8:212:1826::2]:8333\n-[2a01:4f8:221:f59::2]:8333\n-[2a01:4f8:c0c:1026::2]:8333\n-[2a01:4f8:c0c:1028::2]:8333\n-[2a01:4f8:c0c:1029::2]:8333\n-[2a01:4f8:c0c:105f::2]:8333\n-[2a01:4f8:c0c:1064::2]:8333\n-[2a01:4f8:c0c:106b::2]:8333\n-[2a01:4f8:c0c:106d::2]:8333\n-[2a01:4f8:c0c:1070::2]:8333\n-[2a01:4f8:c0c:1105::2]:8333\n-[2a01:4f8:c0c:1106::2]:8333\n-[2a01:4f8:c0c:1134::2]:8333\n-[2a01:4f8:c0c:1135::2]:8333\n-[2a01:4f8:c0c:113c::2]:8333\n-[2a01:4f8:c0c:115c::2]:8333\n-[2a01:4f8:c0c:115e::2]:8333\n-[2a01:4f8:c0c:1170::2]:8333\n-[2a01:4f8:c0c:1172::2]:8333\n-[2a01:4f8:c0c:117b::2]:8333\n-[2a01:4f8:c0c:117c::2]:8333\n-[2a01:4f8:c0c:1180::2]:8333\n-[2a01:4f8:c0c:1181::2]:8333\n-[2a01:4f8:c0c:1185::2]:8333\n-[2a01:4f8:c0c:1186::2]:8333\n-[2a01:4f8:c0c:1187::2]:8333\n-[2a01:4f8:c0c:1188::2]:8333\n-[2a01:4f8:c0c:1189::2]:8333\n-[2a01:4f8:c0c:121::2]:8333\n-[2a01:4f8:c0c:122::2]:8333\n-[2a01:4f8:c0c:15a8::2]:8333\n-[2a01:4f8:c0c:1da4::2]:8333\n-[2a01:4f8:c0c:1ff7::2]:8333\n-[2a01:4f8:c0c:2262::2]:8333\n-[2a01:4f8:c0c:73d::2]:8333\n-[2a01:4f8:c0c:790::2]:8333\n-[2a01:4f8:c0c:7a8::2]:8333\n-[2a01:4f8:c0c:7a9::2]:8333\n-[2a01:4f8:c0c:7e9::2]:8333\n-[2a01:4f8:c0c:816::2]:8333\n-[2a01:4f8:c0c:817::2]:8333\n-[2a01:4f8:c0c:818::2]:8333\n-[2a01:4f8:c0c:820::2]:8333\n-[2a01:4f8:c0c:821::2]:8333\n-[2a01:4f8:c0c:822::2]:8333\n-[2a01:4f8:c0c:896::2]:8333\n-[2a01:4f8:c0c:8c6::2]:8333\n-[2a01:4f8:c0c:8c9::2]:8333\n-[2a01:4f8:c0c:8d1::2]:8333\n-[2a01:4f8:c0c:8d2::2]:8333\n-[2a01:4f8:c0c:8d9::2]:8333\n-[2a01:4f8:c0c:8da::2]:8333\n-[2a01:4f8:c0c:8dc::2]:8333\n-[2a01:4f8:c0c:8f1::2]:8333\n-[2a01:4f8:c0c:91e::2]:8333\n-[2a01:4f8:c0c:927::2]:8333\n-[2a01:4f8:c0c:939::2]:8333\n-[2a01:4f8:c0c:944::2]:8333\n-[2a01:4f8:c0c:951::2]:8333\n-[2a01:4f8:c0c:967::2]:8333\n-[2a01:4f8:c0c:96f::2]:8333\n-[2a01:4f8:c0c:97d::2]:8333\n-[2a01:4f8:c0c:982::2]:8333\n-[2a01:4f8:c0c:9fc::2]:8333\n-[2a01:4f8:c0c:b35::2]:8333\n-[2a01:4f8:c0c:b4c::2]:8333\n-[2a01:4f8:c0c:bfe::2]:8333\n-[2a01:4f8:c0c:c08::2]:8333\n-[2a01:4f8:c0c:c13::2]:8333\n-[2a01:4f8:c0c:c14::2]:8333\n-[2a01:4f8:c0c:c16::2]:8333\n-[2a01:4f8:c0c:c19::2]:8333\n-[2a01:4f8:c0c:c32::2]:8333\n-[2a01:4f8:c0c:c36::2]:8333\n-[2a01:4f8:c0c:c39::2]:8333\n-[2a01:4f8:c0c:c58::2]:8333\n-[2a01:4f8:c0c:c5e::2]:8333\n-[2a01:4f8:c0c:c70::2]:8333\n-[2a01:4f8:c0c:c72::2]:8333\n-[2a01:4f8:c0c:c79::2]:8333\n-[2a01:4f8:c0c:cb1::2]:8333\n-[2a01:4f8:c0c:cf5::2]:8333\n-[2a01:4f8:c0c:cff::2]:8333\n-[2a01:4f8:c0c:d0e::2]:8333\n-[2a01:4f8:c0c:d1b::2]:8333\n-[2a01:4f8:c0c:d67::2]:8333\n-[2a01:4f8:c0c:d68::2]:8333\n-[2a01:4f8:c0c:d81::2]:8333\n-[2a01:4f8:c0c:e2d::2]:8333\n-[2a01:4f8:c0c:e30::2]:8333\n-[2a01:4f8:c0c:e4f::2]:8333\n-[2a01:4f8:c0c:e5b::2]:8333\n-[2a01:4f8:c0c:e88::2]:8333\n-[2a01:4f8:c0c:f69::2]:8333\n-[2a01:4f8:c0c:f76::2]:8333\n-[2a01:4f8:c0c:f77::2]:8333\n-[2a01:4f8:c0c:f78::2]:8333\n-[2a01:4f8:c0c:f89::2]:8333\n-[2a01:4f8:c0c:f8a::2]:8333\n-[2a01:4f8:c0c:fd6::2]:8333\n-[2a01:4f8:c0c:fea::2]:8333\n-[2a01:4f8:c17:24ee::2]:8333\n-[2a01:4f8:c17:2c16::2]:8333\n-[2a01:4f8:c17:330f::2]:8333\n-[2a01:4f8:c17:34f0::2]:8333\n-[2a01:4f8:c17:3986::2]:8333\n-[2a01:4f8:c17:3b02::2]:8333\n-[2a01:4f8:c17:3d85::2]:8333\n-[2a01:4f8:c17:4271::2]:8333\n-[2a01:4f8:c17:5dc0::2]:8333\n-[2a01:4f8:c17:63a0::2]:8333\n-[2a01:4f8:c17:67f8::2]:8333\n-[2a01:4f8:c17:710b::2]:8333\n-[2a01:4f8:c17:e00::2]:8333\n-[2a01:680:10:10::1]:8333\n-[2a01:6f0:ffff:120::8dcb]:8333\n-[2a01:79d:b7dd:ffb4:5d86:70b8:fc7f:f253]:8333\n-[2a01:7a0:2:1374::4]:8333\n-[2a01:7a0:2:1374::5]:8333\n-[2a01:7a0:2:137c::3]:8333\n-[2a01:7c8:aaaa:373:5054:ff:feb3:2947]:8333\n-[2a01:7c8:aaaa:3a0:5054:ff:fe8c:974c]:8333\n-[2a01:7c8:aab0:4b7:910d:625e:a13e:c342]:8333\n-[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n-[2a01:7c8:aab5:41e:5054:ff:fe38:f4fb]:8333\n-[2a01:7c8:aaba:343::8333]:8333\n-[2a01:7c8:aabc:18c:5054:ff:fefd:3b49]:8333\n-[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n-[2a01:7e00::f03c:91ff:fe50:94b8]:8333\n-[2a01:8e01:b943:3a63:d250:99ff:fe1f:4fb2]:8333\n-[2a01:b2e0:2::40]:8333\n-[2a01:d0:0:1c::245]:8333\n-[2a01:d0:8fc3::2]:8333\n-[2a01:e34:ec29:e8d0:25c7:c1ce:b7a3:d238]:8333\n-[2a01:e34:ec4a:c2d0:1cf3:40d2:a79f:3901]:8333\n-[2a01:e34:eed7:6670:ec1b:bf7c:b012:6069]:8333\n-[2a01:e35:2433:e320:9c8e:6ff0:990f:f06e]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a02:1205:5051:a640:d6ae:52ff:fea3:ac]:8333\n-[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n-[2a02:168:6273::614]:8333\n-[2a02:180:6:1::18]:8333\n-[2a02:180:6:1::ed]:8333\n-[2a02:1811:b707:116:8c1f:c5be:bf3a:54df]:8333\n-[2a02:20c8:1422:1::a3]:8333\n-[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n-[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n-[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n-[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:7aa0:1201::bd4e:1219]:8333\n-[2a02:7aa0:1619::590:eba2]:8333\n-[2a02:7aa0:1619::a7a2:7e86]:8333\n-[2a02:c200:1:10:2:5:800:1]:8333\n-[2a02:c205:2002:2550::17]:8333\n-[2a02:c205:2008:272::1]:8333\n-[2a02:c205:2010:5484::1]:8333\n-[2a02:c205:3001:6710::1]:8333\n-[2a02:c205:3001:7714::2]:8333\n-[2a02:c205:3002:888::1]:8333\n-[2a02:c207:2002:9013::1]:8333\n-[2a02:c207:2008:3392::1]:8333\n-[2a02:c207:2008:8337::1]:8333\n-[2a02:c207:2009:213::1]:8333\n-[2a02:c207:2010:7751::1]:8333\n-[2a02:c207:2010:7986::1]:8333\n-[2a02:c207:2011:7829::1]:8333\n-[2a02:c207:2011:8299::1]:8333\n-[2a02:c207:2012:2133::1]:8333\n-[2a02:c207:2012:263::1]:8333\n-[2a02:c207:2012:2682::1]:8333\n-[2a02:c207:2012:3635::1]:8333\n-[2a02:c207:2012:4826::1]:8333\n-[2a02:c207:2012:5668::1]:8333\n-[2a02:c207:3001:5824::1]:8333\n-[2a02:c207:3001:7776::1]:8333\n-[2a02:c207:3002:621::1]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a03:2260:11e:301::8]:8333\n-[2a03:2260:11e:302::3]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:4000:6:12e7::1]:8333\n-[2a03:4000:6:416c::53]:8333\n-[2a03:b0c0:3:d0::1219:6001]:8333\n-[2a03:b0c0:3:d0::1b99:c001]:8333\n-[2a03:b0c0:3:d0::1b99:e001]:8333\n-[2a03:b0c0:3:d0::1b9a:3001]:8333\n-[2a03:b0c0:3:d0::23f7:1001]:8333\n-[2a03:b0c0:3:d0::23f7:2001]:8333\n-[2a03:b0c0:3:d0::23f7:4001]:8333\n-[2a03:b0c0:3:d0::23f7:5001]:8333\n-[2a03:b0c0:3:d0::23f7:7001]:8333\n-[2a03:b0c0:3:d0::23f7:9001]:8333\n-[2a03:b0c0:3:d0::23fb:1001]:8333\n-[2a03:b0c0:3:d0::23fb:2001]:8333\n-[2a03:b0c0:3:d0::23fb:3001]:8333\n-[2a03:b0c0:3:d0::23fb:5001]:8333\n-[2a03:b0c0:3:d0::23fb:6001]:8333\n-[2a03:b0c0:3:d0::23fb:8001]:8333\n-[2a03:b0c0:3:d0::23ff:b001]:8333\n-[2a03:b0c0:3:d0::2400:1]:8333\n-[2a03:b0c0:3:d0::2400:3001]:8333\n-[2a03:b0c0:3:d0::2400:4001]:8333\n-[2a03:b0c0:3:d0::2400:e001]:8333\n-[2a03:b0c0:3:d0::2400:f001]:8333\n-[2a03:b0c0:3:d0::2401:e001]:8333\n-[2a03:b0c0:3:d0::2402:1]:8333\n-[2a03:b0c0:3:d0::2402:2001]:8333\n-[2a03:b0c0:3:d0::2402:8001]:8333\n-[2a03:b0c0:3:d0::2402:9001]:8333\n-[2a03:b0c0:3:d0::2402:b001]:8333\n-[2a03:b0c0:3:d0::2402:d001]:8333\n-[2a03:b0c0:3:d0::2402:e001]:8333\n-[2a03:b0c0:3:d0::2403:1001]:8333\n-[2a03:b0c0:3:d0::2403:2001]:8333\n-[2a03:b0c0:3:d0::2403:3001]:8333\n-[2a03:b0c0:3:d0::2403:4001]:8333\n-[2a03:b0c0:3:d0::2403:6001]:8333\n-[2a03:b0c0:3:d0::2403:a001]:8333\n-[2a03:b0c0:3:d0::2403:b001]:8333\n-[2a03:b0c0:3:d0::2403:e001]:8333\n-[2a03:b0c0:3:d0::2403:f001]:8333\n-[2a03:b0c0:3:d0::2404:1]:8333\n-[2a03:b0c0:3:d0::2404:3001]:8333\n-[2a03:b0c0:3:d0::2404:4001]:8333\n-[2a03:b0c0:3:d0::2404:6001]:8333\n-[2a03:b0c0:3:d0::2404:8001]:8333\n-[2a03:b0c0:3:d0::2404:9001]:8333\n-[2a03:b0c0:3:d0::2404:b001]:8333\n-[2a03:b0c0:3:d0::2405:2001]:8333\n-[2a03:b0c0:3:d0::2405:3001]:8333\n-[2a03:b0c0:3:d0::2405:8001]:8333\n-[2a03:b0c0:3:d0::2405:9001]:8333\n-[2a03:b0c0:3:d0::2405:a001]:8333\n-[2a03:b0c0:3:d0::44b8:9001]:8333\n-[2a03:b0c0:3:d0::44b8:e001]:8333\n-[2a03:b0c0:3:d0::44b8:f001]:8333\n-[2a03:b0c0:3:d0::44b9:1]:8333\n-[2a03:b0c0:3:d0::44b9:1001]:8333\n-[2a03:b0c0:3:d0::44b9:2001]:8333\n-[2a03:b0c0:3:d0::44b9:4001]:8333\n-[2a04:2180:0:2::94]:8333\n-[2a04:3542:1000:910:8492:b8ff:fe91:711d]:8333\n-[2a04:52c0:101:122::ba8e]:8333\n-[2a05:3580:d400:140d:da6e:826e:e771:4100]:8333\n-[2a06:9fc0:2a06:9fc0:2a06:9fc1:67c:e706]:8333\n-226eupdnaouu4h2v.onion:8333\n-2frgxpe5mheghyom.onion:8333\n-3ihjnsvwc3x6dp2o.onion:8333\n-3w77hrilg6q64opl.onion:8333\n-4ls4o6iszcd7mkfw.onion:8333\n-4p3abjxqppzxi7qi.onion:8333\n-546esc6botbjfbxb.onion:8333\n-5msftytzlsskr4ut.onion:8333\n-5ty6rxpgrkmdnk4a.onion:8333\n-akmqyuidrf56ip26.onion:8333\n-alhlegtjkdmbqsvt.onion:8333\n-bafk5ioatlgt7dgl.onion:8333\n-bup5n5e3kurvjzf3.onion:8333\n-cjygd7pu5lqkky5j.onion:8333\n-cyvpgt25274i5b7c.onion:8333\n-dekj4wacywpqsad3.onion:8333\n-dqpxwlpnv3z3hznl.onion:8333\n-drarzpycbtxwbcld.onion:8333\n-drp4pvejybx2ejdr.onion:8333\n-dxkmtmwiq7ddtgul.onion:8333\n-e6j57zkyibu2smad.onion:8333\n-ejcqevujcqltqn7d.onion:8333\n-eqgbt2ghfvsshbvo.onion:8333\n-fgizgkdnndilo6ka.onion:8333\n-fqxup4oev33eeidg.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-ggdy2pb2avlbtjwq.onion:8333\n-hahhloezyfqh3hci.onion:8333\n-ihdv6bzz2gx72fs7.onion:8333\n-in7r5ieo7ogkxbne.onion:8333\n-kvd44sw7skb5folw.onion:8333\n-mn744hbioayn3ojs.onion:8333\n-ms4ntrrisfxzpvmy.onion:8333\n-n5lqwpjabqg62ihx.onion:8333\n-o4sl5na6jeqgi3l6.onion:8333\n-omjv24nbck4k5ud6.onion:8333\n-po3j2hfkmf7sh36o.onion:8333\n-psco6bxjewljrczx.onion:8333\n-qi5yr6lvlckzffor.onion:8333\n-qlv6py6hdtzipntn.onion:8333\n-qynmpgdbp23xyfnj.onion:8333\n-rhtawcs7xak4gi3t.onion:8333\n-rjacws757ai66lre.onion:8333\n-rjlnp3hwvrsmap6e.onion:8333\n-rkdvqcrtfv6yt4oy.onion:8333\n-rlafimkctvz63llg.onion:8333\n-rlj4ppok4dnsdu5n.onion:8333\n-seoskudzk6vn6mqz.onion:8333\n-tayqi57tfiy7x3vk.onion:8333\n-tchop676j6yppwwm.onion:8333\n-trrtyp3sirmwttyu.onion:8333\n-tx4zd7d5exonnblh.onion:8333\n-u4ecb7txxi6l3gix.onion:8333\n-umcxcmfycvejw264.onion:8333\n-v7xqd42ocemalurd.onion:8333\n-vb267mt3lnwfdmdb.onion:8333\n-vev3n5fxfrtqj6e5.onion:8333\n-visevrizz3quyagj.onion:8333\n-vpg6p5e5ln33dqtp.onion:8333\n-vr2ruasinafoy3fl.onion:8333\n-x6pthvd5x6abyfo7.onion:8333\n-xbwbzrspvav7u5ie.onion:8333\n-xfcevnql2chnawko.onion:8333\n-ycivnom44dmxx4ob.onion:8333\n-yzdvlv5daitafekn.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,11 +0,0 @@\n-# List of fixed seed nodes for testnet\n-\n-# Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n-"
      },
      {
        "sha": "83624f443a7f9f71ba2a1f1c2dbc3d3a8297bc7d",
        "filename": "contrib/testgen/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,8 +0,0 @@\n-### TestGen ###\n-\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-Usage: \n-\n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file"
      },
      {
        "sha": "816d40b49c59cf3986a864eb63d82a8d88272c80",
        "filename": "contrib/testgen/base58.py",
        "status": "removed",
        "additions": 0,
        "deletions": 106,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,106 +0,0 @@\n-# Copyright (c) 2012-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Bitcoin base58 encoding and decoding.\n-\n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n-'''\n-import hashlib\n-\n-# for compatibility with following code...\n-class SHA256:\n-    new = hashlib.sha256\n-\n-if str != bytes:\n-    # Python 3.x\n-    def ord(c):\n-        return c\n-    def chr(n):\n-        return bytes( (n,) )\n-\n-__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n-__b58base = len(__b58chars)\n-b58chars = __b58chars\n-\n-def b58encode(v):\n-    \"\"\" encode v, which is a string of bytes, to base58.\n-    \"\"\"\n-    long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        long_value += (256**i) * ord(c)\n-\n-    result = ''\n-    while long_value >= __b58base:\n-        div, mod = divmod(long_value, __b58base)\n-        result = __b58chars[mod] + result\n-        long_value = div\n-    result = __b58chars[long_value] + result\n-\n-    # Bitcoin does a little leading-zero-compression:\n-    # leading 0-bytes in the input become leading-1s\n-    nPad = 0\n-    for c in v:\n-        if c == '\\0': nPad += 1\n-        else: break\n-\n-    return (__b58chars[0]*nPad) + result\n-\n-def b58decode(v, length = None):\n-    \"\"\" decode v into a string of len bytes\n-    \"\"\"\n-    long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        long_value += __b58chars.find(c) * (__b58base**i)\n-\n-    result = bytes()\n-    while long_value >= 256:\n-        div, mod = divmod(long_value, 256)\n-        result = chr(mod) + result\n-        long_value = div\n-    result = chr(long_value) + result\n-\n-    nPad = 0\n-    for c in v:\n-        if c == __b58chars[0]: nPad += 1\n-        else: break\n-\n-    result = chr(0)*nPad + result\n-    if length is not None and len(result) != length:\n-        return None\n-\n-    return result\n-\n-def checksum(v):\n-    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n-    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n-\n-def b58encode_chk(v):\n-    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n-    return b58encode(v + checksum(v))\n-\n-def b58decode_chk(v):\n-    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n-    result = b58decode(v)\n-    if result is None:\n-        return None\n-    if result[-4:] == checksum(result[:-4]):\n-        return result[:-4]\n-    else:\n-        return None\n-\n-def get_bcaddress_version(strAddress):\n-    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n-    addr = b58decode_chk(strAddress)\n-    if addr is None or len(addr)!=21: return None\n-    version = addr[0]\n-    return ord(version)\n-\n-if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n-    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n-    _ohai = 'o hai'.encode('ascii')\n-    _tmp = b58encode(_ohai)\n-    assert _tmp == 'DYB3oMS'\n-    assert b58decode(_tmp, 5) == _ohai\n-    print(\"Tests passed\")"
      },
      {
        "sha": "8e6a5d5819f4f3dfcf59911bda883bf1ce70419b",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "removed",
        "additions": 0,
        "deletions": 128,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,128 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2012-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Generate valid and invalid base58 address and private key test vectors.\n-\n-Usage: \n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n-'''\n-# 2012 Wladimir J. van der Laan\n-# Released under MIT License\n-import os\n-from itertools import islice\n-from base58 import b58encode_chk, b58decode_chk, b58chars\n-import random\n-from binascii import b2a_hex\n-\n-# key types\n-PUBKEY_ADDRESS = 0\n-SCRIPT_ADDRESS = 5\n-PUBKEY_ADDRESS_TEST = 111\n-SCRIPT_ADDRESS_TEST = 196\n-PRIVKEY = 128\n-PRIVKEY_TEST = 239\n-\n-metadata_keys = ['isPrivkey', 'isTestnet', 'addrType', 'isCompressed']\n-# templates for valid sequences\n-templates = [\n-  # prefix, payload_size, suffix, metadata\n-  #                                  None = N/A\n-  ((PUBKEY_ADDRESS,),      20, (),   (False, False, 'pubkey', None)),\n-  ((SCRIPT_ADDRESS,),      20, (),   (False, False, 'script',  None)),\n-  ((PUBKEY_ADDRESS_TEST,), 20, (),   (False, True,  'pubkey', None)),\n-  ((SCRIPT_ADDRESS_TEST,), 20, (),   (False, True,  'script',  None)),\n-  ((PRIVKEY,),             32, (),   (True,  False, None,  False)),\n-  ((PRIVKEY,),             32, (1,), (True,  False, None,  True)),\n-  ((PRIVKEY_TEST,),        32, (),   (True,  True,  None,  False)),\n-  ((PRIVKEY_TEST,),        32, (1,), (True,  True,  None,  True))\n-]\n-\n-def is_valid(v):\n-    '''Check vector v for validity'''\n-    result = b58decode_chk(v)\n-    if result is None:\n-        return False\n-    for template in templates:\n-        prefix = str(bytearray(template[0]))\n-        suffix = str(bytearray(template[2]))\n-        if result.startswith(prefix) and result.endswith(suffix):\n-            if (len(result) - len(prefix) - len(suffix)) == template[1]:\n-                return True\n-    return False\n-\n-def gen_valid_vectors():\n-    '''Generate valid test vectors'''\n-    while True:\n-        for template in templates:\n-            prefix = str(bytearray(template[0]))\n-            payload = os.urandom(template[1]) \n-            suffix = str(bytearray(template[2]))\n-            rv = b58encode_chk(prefix + payload + suffix)\n-            assert is_valid(rv)\n-            metadata = dict([(x,y) for (x,y) in zip(metadata_keys,template[3]) if y is not None])\n-            yield (rv, b2a_hex(payload), metadata)\n-\n-def gen_invalid_vector(template, corrupt_prefix, randomize_payload_size, corrupt_suffix):\n-    '''Generate possibly invalid vector'''\n-    if corrupt_prefix:\n-        prefix = os.urandom(1)\n-    else:\n-        prefix = str(bytearray(template[0]))\n-    \n-    if randomize_payload_size:\n-        payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n-    else:\n-        payload = os.urandom(template[1])\n-    \n-    if corrupt_suffix:\n-        suffix = os.urandom(len(template[2]))\n-    else:\n-        suffix = str(bytearray(template[2]))\n-\n-    return b58encode_chk(prefix + payload + suffix)\n-\n-def randbool(p = 0.5):\n-    '''Return True with P(p)'''\n-    return random.random() < p\n-\n-def gen_invalid_vectors():\n-    '''Generate invalid test vectors'''\n-    # start with some manual edge-cases\n-    yield \"\",\n-    yield \"x\",\n-    while True:\n-        # kinds of invalid vectors:\n-        #   invalid prefix\n-        #   invalid payload length\n-        #   invalid (randomized) suffix (add random data)\n-        #   corrupt checksum\n-        for template in templates:\n-            val = gen_invalid_vector(template, randbool(0.2), randbool(0.2), randbool(0.2))\n-            if random.randint(0,10)<1: # line corruption\n-                if randbool(): # add random character to end\n-                    val += random.choice(b58chars)\n-                else: # replace random character in the middle\n-                    n = random.randint(0, len(val))\n-                    val = val[0:n] + random.choice(b58chars) + val[n+1:]\n-            if not is_valid(val):\n-                yield val,\n-\n-if __name__ == '__main__':\n-    import sys, json\n-    iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n-    try:\n-        uiter = iters[sys.argv[1]]\n-    except IndexError:\n-        uiter = gen_valid_vectors\n-    try:\n-        count = int(sys.argv[2])\n-    except IndexError:\n-        count = 0\n-   \n-    data = list(islice(uiter(), count))\n-    json.dump(data, sys.stdout, sort_keys=True, indent=4)\n-    sys.stdout.write('\\n')\n-"
      },
      {
        "sha": "b845b34e41044f19adc35b36ab8fec45d74dc5a3",
        "filename": "contrib/tidy_datadir.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,62 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2013 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-if [ -d \"$1\" ]; then\n-  cd \"$1\" || exit 1\n-else\n-  echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n-  exit 1\n-fi\n-\n-LEVEL=0\n-if [ -f wallet.dat -a -f addr.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=1; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=2; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f coins/CURRENT -a -f blktree/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=3; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=4; fi\n-\n-case $LEVEL in\n-  0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n-    exit 1\n-    ;;\n-  1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n-    echo \"Nothing to do.\"\n-    exit 0\n-    ;;\n-  2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n-    ;;\n-  3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n-    ;;\n-  4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n-    ;;\n-esac\n-\n-FILES=\"\"\n-DIRS=\"\"\n-\n-if [ $LEVEL -ge 3 ]; then FILES=$(echo $FILES blk????.dat blkindex.dat); fi\n-if [ $LEVEL -ge 2 ]; then FILES=$(echo $FILES addr.dat); fi\n-if [ $LEVEL -ge 4 ]; then DIRS=$(echo $DIRS coins blktree); fi\n-\n-for FILE in $FILES; do\n-  if [ -f $FILE ]; then\n-    echo \"Deleting: $FILE\"\n-    rm -f $FILE\n-  fi\n-done\n-\n-for DIR in $DIRS; do\n-  if [ -d $DIR ]; then\n-    echo \"Deleting: $DIR/\"\n-    rm -rf $DIR\n-  fi\n-done\n-\n-echo \"Done.\""
      },
      {
        "sha": "0f6d993fd2b4ad45ec10b9324d40edfb96afa9d8",
        "filename": "contrib/valgrind.supp",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,43 +0,0 @@\n-# Valgrind suppressions file for Bitcoin.\n-#\n-# Includes known Valgrind warnings in our dependencies that cannot be fixed\n-# in-tree.\n-#\n-# Example use:\n-# $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n-# $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n-#       --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n-{\n-   Suppress libstdc++ warning - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434\n-   Memcheck:Leak\n-   match-leak-kinds: reachable\n-   fun:malloc\n-   obj:*/libstdc++.*\n-   fun:call_init.part.0\n-   fun:call_init\n-   fun:_dl_init\n-   obj:*/ld-*.so\n-}\n-{\n-   Suppress libdb warning - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=662917\n-   Memcheck:Cond\n-   obj:*/libdb_cxx-*.so\n-   fun:__log_put\n-   obj:*/libdb_cxx-*.so\n-   fun:__log_put_record\n-}\n-{\n-   Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113\n-   Memcheck:Leak\n-   match-leak-kinds: reachable\n-   fun:_Znwm\n-   fun:_ZN7leveldbL10InitModuleEv\n-}\n-{\n-   Suppress leveldb warning (leveldb::Env::Default()) - https://github.com/google/leveldb/issues/113\n-   Memcheck:Leak\n-   match-leak-kinds: reachable\n-   fun:_Znwm\n-   ...\n-   fun:_ZN7leveldbL14InitDefaultEnvEv\n-}"
      },
      {
        "sha": "e9e3f65da292a5bd80377f43cbc21cdb9e7f2c37",
        "filename": "contrib/verify-commits/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,26 +0,0 @@\n-Tooling for verification of PGP signed commits\n-----------------------------------------------\n-\n-This is an incomplete work in progress, but currently includes a pre-push hook\n-script (`pre-push-hook.sh`) for maintainers to ensure that their own commits\n-are PGP signed (nearly always merge commits), as well as a script to verify\n-commits against a trusted keys list.\n-\n-\n-Using verify-commits.sh safely\n-------------------------------\n-\n-Remember that you can't use an untrusted script to verify itself. This means\n-that checking out code, then running `verify-commits.sh` against `HEAD` is\n-_not_ safe, because the version of `verify-commits.sh` that you just ran could\n-be backdoored. Instead, you need to use a trusted version of verify-commits\n-prior to checkout to make sure you're checking out only code signed by trusted\n-keys:\n-\n-    git fetch origin && \\\n-      ./contrib/verify-commits/verify-commits.sh origin/master && \\\n-      git checkout origin/master\n-\n-Note that the above isn't a good UI/UX yet, and needs significant improvements\n-to make it more convenient and reduce the chance of errors; pull-reqs\n-improving this process would be much appreciated."
      },
      {
        "sha": "f0088cdca4af8e96c9c53ba6d68e6a8ea44df181",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 104,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,104 +0,0 @@\n-a06ede9a138d0fb86b0de17c42b936d9fe6e2158\n-923dc447eaa8e017985b2afbbb12dd1283fbea0e\n-71148b8947fe8b4d756822420a7f31c380159425\n-6696b4635ceb9b47aaa63244bff9032fa7b08354\n-812714fd80e96e28cd288c553c83838cecbfc2d9\n-8a445c5651edb9a1f51497055b7ddf4402be9188\n-e126d0c12ca66278d9e7b12187c5ff4fc02a7e6c\n-3908fc4728059719bed0e1c7b1c8b388c2d4a8da\n-8b66bf74e2a349e71eaa183af81fa63eaee76ad2\n-05950427d310654774031764a7141a1a4fd9c6e4\n-07fd147b9f12e9205afd66a624edce357977d615\n-12e31127948fa4bb01c3bddc1b8c85b432f7465b\n-8c87f175d335e9d9e93f987d871ae9f05f6a10a7\n-46b249e578e8a3dfbe85bc7253a12e82ef4b658b\n-a55716abe5662ec74c2f8af93023f1e7cca901fc\n-f646275b90b1de93bc62b4c4d045d75ac0b96eee\n-c252685aa5867631e9a5ef07ccae7c7c25cae8ff\n-a7d55c93385359952d85decd5037843ac70ba3d4\n-7dac1e5e9e887f5f6ff146e812a05bd3bf281eae\n-2a524b8e8fe69ef487fd8ea1b4f7a03f473ed201\n-ce5c1f4acae43477989cdf9a82ed33703919cda2\n-2db4cbcc437f51f5dac82cc4de46f383b92e6f11\n-7aa700424cbda387536373d8dfec88aee43f950e\n-b99a093afed880f23fb279c443cc6ae5e379cc43\n-b83264d9c7a8ddb79f64bd9540caddc8632ef31f\n-57e337d40e94ba33d8cd265c134d6ef857b32b59\n-a1dcf2e1087beaf3981739fd2bb74f35ecad630a\n-d38b0d7a6b6056cba26999b702815775e2437d87\n-815640ec6af9a38d6a2da4a4400056e2f4105080\n-09c4fd157c5b88df2d97fad4826c79b094db90c9\n-2efcfa5acfacb958973d9e8125e1d81f102e2dfd\n-dc6dee41f7cf2ba93fcd0fea7c157e4b2775d439\n-ad826b3df9f763b49f1e3e3d50c4efdd438c7547\n-c1a52276848d8caa9a9789dff176408c1aa6b1ed\n-3bf06e9bac57b5b5a746677b75e297a7b154bdbd\n-72ae6f8cf0224370e8121d6769b21e612ca15d6f\n-a143b88dbd4971ecfdd1d39a494489c8f2db0344\n-76fec09d878d6dbf214bdb6228d480bd9195db4c\n-93566e0c37c5ae104095474fea89f00dcb40f551\n-407d9232ef5cb1ebf6cff21f3d13e07ea4158eeb\n-9346f8429957e356d21c665bab59fe45bcf1f74e\n-6eeac6e30d65f9a972067c1ea8c49978c8e631ac\n-dc6b9406bdfab2af8c86cb080cb3e6cf8f2385d8\n-9f554e03ebe5701c1b75ff03b3d6152095c0cad3\n-05009935f9ac070197113954d680bc2c9150b9b3\n-508404de98a8a5435f52916cef8f328e82651961\n-ed0cc50afed146c27f6d8129c683c225fb940093\n-6429cfa8a70308241c576aeb92ffe3db5203b2ef\n-6898213409811b140843c3d89af43328c3b22fad\n-5b2ea29cf4fd298346437bb16a54407f8c1f9dca\n-e2a1a1ee895149c544d4ae295466611f0cec3094\n-e82fb872ff5cc8fd22d43327c1ee3e755f61c562\n-19b0f33de0efd9da788e8e4f3fdc2a9e159abdb1\n-89de1538ce1f8c00f80e8d11f43e1b77e24d7dea\n-de07fdcf77e97b8613091285e4d0a734f5de7492\n-01680195f8aa586c55c44767397380def3a23b54\n-05e1c85fb687c82ae477c72d4a7e2d6b0c692167\n-c072b8fd95cd4fa84f08189a0cd8b173ea2dbb8e\n-9a0ed08b40b15ae2b791aa8549b53e69934b4ea7\n-53f8f226bd1d627c4a6dec5862a1d4ea5a933e45\n-9d0f43b7ca7241d8a018fd35dd3bc01555235ec6\n-f12d2b5a8ac397e4bcaefcc19898f8ff5705dea5\n-8250de13587ed05ca45df3e12c5dc9bcb1500e2c\n-d727f77e390426e9e463336bda08d50c451c7086\n-484312bda2d43e3ea60047be076332299463adf8\n-c7e05b35ab0a791c7a8e2d863e716fdec6f3f671\n-b9c1cd81848da9de1baf9c2f29c19c50e549de13\n-8ea7d31e384975019733b5778feabbd9955c79d8\n-f798b891bcecea9548eedacae70eeb9906c1ddbf\n-ebefe7a00b46579cdd1e033a8c7fd8ce9aa578e4\n-ad087638ee4864d6244ec9381ff764bfa6ee5086\n-66db2d62d59817320c9182fc18e75a93b76828ea\n-7ce9ac5c83b1844a518ef2e12e87aae3cacdfe58\n-4286f43025149cf44207c3ad98e4a1f068520ada\n-cd0c5135ab2291aaa5410ac919bad3fc87249a4a\n-66ed450d771a8fc01c159a8402648ebd1c35eb4c\n-a82f03393a32842d49236e8666ee57805ca701f8\n-f972b04d63eb8af79ff3cec1dc561ed13dfa6053\n-ec45cc5e27668171b55271b0c735194c70e7da41\n-715e9fd7454f7a48d7adba7d42f662c20a3e3367\n-2e0a99037dcc35bc63ba0d54371bc678af737c8e\n-7fa8d758598407f3bf0beb0118dc122ea5340736\n-6a22373771edbc3c7513cacb9355f880c73c2cbf\n-b89ef131147f71a96152a7b5c4374266cdf539b2\n-01d8359983e2f77b5118fede3ffa947072c666c8\n-58f0c929a3d70a4bff79cc200f1c186f71ef1675\n-950be19727a581970591d8f8138dfe4725750382\n-425278d17bd0edf8a3a7cc81e55016f7fd8e7726\n-c028c7b7557da2baff7af8840108e8be4db8e0c6\n-47a7cfb0aa2498f6801026d258a59f9de48f60b0\n-f6b7df3155ddb4cedfbcf5d3eb3383d4614b3a85\n-d72098038f3b55a714ed8adb34fab547b15eb0d5\n-c49c825bd9f4764536b45df5a684d97173673fc7\n-33799afe83eec4200ff140e9bf5eae83701a4d7f\n-5c3f8ddcaa1164079105c452429fccf8127b01b6\n-1f01443567b03ac75a91c810f1733f5c21b5699d\n-b3e42b6d02e8d19658a9135e427ebceab5367779\n-69b3a6dd9d9a0adf5506c8b9fde42187356bd4a8\n-bafd075c5e6a1088ef0f1aa0b0b224e026a3d3e0\n-7daa3adb242d9c8728fdb15c6af6596aaad5502f\n-514993554c370f4cf30a109ac28d5d64893dbf0a\n-c8d2473e6cb042e7275a10c49d3f6a4a91bf0166\n-386f4385ab04b0b2c3d47bddc0dc0f2de7354964\n-9f33dba05c01ecc5c56eb1284ab7d64d42f55171"
      },
      {
        "sha": "8f3e4b8063288e451c97ac166dd1cb2853d2463b",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 64,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,64 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-INPUT=$(cat /dev/stdin)\n-VALID=false\n-REVSIG=false\n-IFS='\n-'\n-if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n-\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n-else\n-\t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n-\t# signatures - including selfsigs - that use SHA1. While you might think that\n-\t# collision attacks shouldn't be an issue as they'd be an attack on yourself,\n-\t# in fact because what's being signed is a commit object that's\n-\t# semi-deterministically generated by untrusted input (the pull-req) in theory\n-\t# an attacker could construct a pull-req that results in a commit object that\n-\t# they've created a collision for. Not the most likely attack, but preventing\n-\t# it is pretty easy so we do so as a \"belt-and-suspenders\" measure.\n-\tGPG_RES=\"\"\n-\tfor LINE in \"$(gpg --version)\"; do\n-\t\tcase \"$LINE\" in\n-\t\t\t\"gpg (GnuPG) 1.4.1\"*|\"gpg (GnuPG) 2.0.\"*)\n-\t\t\t\techo \"Please upgrade to at least gpg 2.1.10 to check for weak signatures\" > /dev/stderr\n-\t\t\t\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n-\t\t\t\t;;\n-\t\t\t# We assume if you're running 2.1+, you're probably running 2.1.10+\n-\t\t\t# gpg will fail otherwise\n-\t\t\t# We assume if you're running 1.X, it is either 1.4.1X or 1.4.20+\n-\t\t\t# gpg will fail otherwise\n-\t\tesac\n-\tdone\n-\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n-fi\n-for LINE in $(echo \"$GPG_RES\"); do\n-\tcase \"$LINE\" in\n-\t\"[GNUPG:] VALIDSIG \"*)\n-\t\twhile read KEY; do\n-\t\t\t[ \"${LINE#?GNUPG:? VALIDSIG * * * * * * * * * }\" = \"$KEY\" ] && VALID=true\n-\t\tdone < ./contrib/verify-commits/trusted-keys\n-\t\t;;\n-\t\"[GNUPG:] REVKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\tREVSIG=true\n-\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n-\t\t;;\n-\t\"[GNUPG:] EXPKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\tREVSIG=true\n-\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n-\t\t;;\n-\tesac\n-done\n-if ! $VALID; then\n-\texit 1\n-fi\n-if $VALID && $REVSIG; then\n-\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n-\techo \"$GOODREVSIG\"\n-else\n-\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n-fi"
      },
      {
        "sha": "c21febb9e9249958fa72ba240e6040a61d927565",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,20 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n-    exit 0\n-fi\n-\n-while read LINE; do\n-    set -- A $LINE\n-    if [ \"$4\" != \"refs/heads/master\" ]; then\n-        continue\n-    fi\n-    if ! ./contrib/verify-commits/verify-commits.sh $3 > /dev/null 2>&1; then\n-        echo \"ERROR: A commit is not signed, can't push\"\n-        ./contrib/verify-commits/verify-commits.sh\n-        exit 1\n-    fi\n-done < /dev/stdin"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-82bcf405f6db1d55b684a1f63a4aabad376cdad7"
      },
      {
        "sha": "5610692616e1dd228252f4abc58f3d1a66cefaa0",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,4 +0,0 @@\n-71A3B16735405025D447E8F274810B012346C9A6\n-133EAC179436F14A5CF1B794860FEB804E669320\n-32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC\n-B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1 +0,0 @@\n-309bf16257b2395ce502017be627186b749ee749"
      },
      {
        "sha": "532b97a438f6d39e857afe27ab034c8deaa9c826",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 131,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,131 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-DIR=$(dirname \"$0\")\n-[ \"/${DIR#/}\" != \"$DIR\" ] && DIR=$(dirname \"$(pwd)/$0\")\n-\n-echo \"Using verify-commits data from ${DIR}\"\n-\n-VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n-VERIFIED_SHA512_ROOT=$(cat \"${DIR}/trusted-sha512-root-commit\")\n-REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n-\n-HAVE_GNU_SHA512=1\n-[ ! -x \"$(which sha512sum)\" ] && HAVE_GNU_SHA512=0\n-\n-if [ x\"$1\" = \"x\" ]; then\n-\tCURRENT_COMMIT=\"HEAD\"\n-else\n-\tCURRENT_COMMIT=\"$1\"\n-fi\n-\n-if [ \"${CURRENT_COMMIT#* }\" != \"$CURRENT_COMMIT\" ]; then\n-\techo \"Commit must not contain spaces?\" > /dev/stderr\n-\texit 1\n-fi\n-\n-VERIFY_TREE=0\n-if [ x\"$2\" = \"x--tree-checks\" ]; then\n-\tVERIFY_TREE=1\n-fi\n-\n-NO_SHA1=1\n-PREV_COMMIT=\"\"\n-INITIAL_COMMIT=\"${CURRENT_COMMIT}\"\n-\n-while true; do\n-\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_ROOT ]; then\n-\t\techo \"There is a valid path from \\\"$INITIAL_COMMIT\\\" to $VERIFIED_ROOT where all commits are signed!\"\n-\t\texit 0\n-\tfi\n-\n-\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_SHA512_ROOT ]; then\n-\t\tif [ \"$VERIFY_TREE\" = \"1\" ]; then\n-\t\t\techo \"All Tree-SHA512s matched up to $VERIFIED_SHA512_ROOT\" > /dev/stderr\n-\t\tfi\n-\t\tVERIFY_TREE=0\n-\t\tNO_SHA1=0\n-\tfi\n-\n-\tif [ \"$NO_SHA1\" = \"1\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=0\n-\telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=1\n-\tfi\n-\n-\tif [ \"${REVSIG_ALLOWED#*$CURRENT_COMMIT}\" != \"$REVSIG_ALLOWED\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n-\telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n-\tfi\n-\n-\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit \"$CURRENT_COMMIT\" > /dev/null; then\n-\t\tif [ \"$PREV_COMMIT\" != \"\" ]; then\n-\t\t\techo \"No parent of $PREV_COMMIT was signed with a trusted key!\" > /dev/stderr\n-\t\t\techo \"Parents are:\" > /dev/stderr\n-\t\t\tPARENTS=$(git show -s --format=format:%P $PREV_COMMIT)\n-\t\t\tfor PARENT in $PARENTS; do\n-\t\t\t\tgit show -s $PARENT > /dev/stderr\n-\t\t\tdone\n-\t\telse\n-\t\t\techo \"$CURRENT_COMMIT was not signed with a trusted key!\" > /dev/stderr\n-\t\tfi\n-\t\texit 1\n-\tfi\n-\n-\t# We always verify the top of the tree\n-\tif [ \"$VERIFY_TREE\" = 1 -o \"$PREV_COMMIT\" = \"\" ]; then\n-\t\tIFS_CACHE=\"$IFS\"\n-\t\tIFS='\n-'\n-\t\tfor LINE in $(git ls-tree --full-tree -r \"$CURRENT_COMMIT\"); do\n-\t\t\tcase \"$LINE\" in\n-\t\t\t\t\"12\"*)\n-\t\t\t\t\techo \"Repo contains symlinks\" > /dev/stderr\n-\t\t\t\t\tIFS=\"$IFS_CACHE\"\n-\t\t\t\t\texit 1\n-\t\t\t\t\t;;\n-\t\t\tesac\n-\t\tdone\n-\t\tIFS=\"$IFS_CACHE\"\n-\n-\t\tFILE_HASHES=\"\"\n-\t\tfor FILE in $(git ls-tree --full-tree -r --name-only \"$CURRENT_COMMIT\" | LC_ALL=C sort); do\n-\t\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | sha512sum | { read FIRST _; echo $FIRST; } )\n-\t\t\telse\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | shasum -a 512 | { read FIRST _; echo $FIRST; } )\n-\t\t\tfi\n-\t\t\t[ \"$FILE_HASHES\" != \"\" ] && FILE_HASHES=\"$FILE_HASHES\"'\n-'\n-\t\t\tFILE_HASHES=\"$FILE_HASHES$HASH  $FILE\"\n-\t\tdone\n-\n-\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n-\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | sha512sum)\"\n-\t\telse\n-\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | shasum -a 512)\"\n-\t\tfi\n-\t\tHASH_MATCHES=0\n-\t\tMSG=\"$(git show -s --format=format:%B \"$CURRENT_COMMIT\" | tail -n1)\"\n-\n-\t\tcase \"$MSG  -\" in\n-\t\t\t\"Tree-SHA512: $TREE_HASH\")\n-\t\t\t\tHASH_MATCHES=1;;\n-\t\tesac\n-\n-\t\tif [ \"$HASH_MATCHES\" = \"0\" ]; then\n-\t\t\techo \"Tree-SHA512 did not match for commit $CURRENT_COMMIT\" > /dev/stderr\n-\t\t\texit 1\n-\t\tfi\n-\tfi\n-\n-\tPARENTS=$(git show -s --format=format:%P \"$CURRENT_COMMIT\")\n-\tfor PARENT in $PARENTS; do\n-\t\tPREV_COMMIT=\"$CURRENT_COMMIT\"\n-\t\tCURRENT_COMMIT=\"$PARENT\"\n-\t\tbreak\n-\tdone\n-done"
      },
      {
        "sha": "3ffe0a2f289556d40fab4f5ed82ddefaab645ea9",
        "filename": "contrib/verifybinaries/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,41 +0,0 @@\n-### Verify Binaries\n-\n-#### Preparation:\n-\n-Make sure you obtain the proper release signing key and verify the fingerprint with several independent sources.\n-\n-```sh\n-$ gpg --fingerprint \"Bitcoin Core binary release signing key\"\n-pub   4096R/36C2E964 2015-06-24 [expires: 2017-02-13]\n-      Key fingerprint = 01EA 5486 DE18 A882 D4C2  6845 90C8 019E 36C2 E964\n-uid                  Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj@gmail.com>\n-```\n-\n-#### Usage:\n-\n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n-\n-It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n-\n-The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n-\n-\n-```sh\n-./verify.sh bitcoin-core-0.11.2\n-./verify.sh bitcoin-core-0.12.0\n-./verify.sh bitcoin-core-0.13.0-rc3\n-```\n-\n-If you only want to download the binaries of certain platform, add the corresponding suffix, e.g.:\n-\n-```sh\n-./verify.sh bitcoin-core-0.11.2-osx\n-./verify.sh 0.12.0-linux\n-./verify.sh bitcoin-core-0.13.0-rc3-win64\n-```\n-\n-If you do not want to keep the downloaded binaries, specify anything as the second parameter.\n-\n-```sh\n-./verify.sh bitcoin-core-0.13.0 delete\n-```"
      },
      {
        "sha": "e0266bf08afb64401212a8f553a386a456e81adb",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 177,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,177 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-###   This script attempts to download the signature file SHA256SUMS.asc from\n-###   bitcoincore.org and bitcoin.org and compares them.\n-###   It first checks if the signature passes, and then downloads the files specified in\n-###   the file, and checks if the hashes of these files match those that are specified\n-###   in the signature file.\n-###   The script returns 0 if everything passes the checks. It returns 1 if either the\n-###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n-\n-function clean_up {\n-   for file in $*\n-   do\n-      rm \"$file\" 2> /dev/null\n-   done\n-}\n-\n-WORKINGDIR=\"/tmp/bitcoin_verify_binaries\"\n-TMPFILE=\"hashes.tmp\"\n-\n-SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n-RCSUBDIR=\"test\"\n-HOST1=\"https://bitcoincore.org\"\n-HOST2=\"https://bitcoin.org\"\n-BASEDIR=\"/bin/\"\n-VERSIONPREFIX=\"bitcoin-core-\"\n-RCVERSIONSTRING=\"rc\"\n-\n-if [ ! -d \"$WORKINGDIR\" ]; then\n-   mkdir \"$WORKINGDIR\"\n-fi\n-\n-cd \"$WORKINGDIR\" || exit 1\n-\n-#test if a version number has been passed as an argument\n-if [ -n \"$1\" ]; then\n-   #let's also check if the version number includes the prefix 'bitcoin-',\n-   #  and add this prefix if it doesn't\n-   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n-      VERSION=\"$1\"\n-   else\n-      VERSION=\"$VERSIONPREFIX$1\"\n-   fi\n-\n-   STRIPPEDLAST=\"${VERSION%-*}\"\n-\n-   #now let's see if the version string contains \"rc\" or a platform name (e.g. \"osx\")\n-   if [[ \"$STRIPPEDLAST-\" == \"$VERSIONPREFIX\" ]]; then\n-      BASEDIR=\"$BASEDIR$VERSION/\"\n-   else\n-      # let's examine the last part to see if it's rc and/or platform name\n-      STRIPPEDNEXTTOLAST=\"${STRIPPEDLAST%-*}\"\n-      if [[ \"$STRIPPEDNEXTTOLAST-\" == \"$VERSIONPREFIX\" ]]; then\n-\n-         LASTSUFFIX=\"${VERSION##*-}\"\n-         VERSION=\"$STRIPPEDLAST\"\n-\n-         if [[ $LASTSUFFIX == *\"$RCVERSIONSTRING\"* ]]; then\n-            RCVERSION=\"$LASTSUFFIX\"\n-         else\n-            PLATFORM=\"$LASTSUFFIX\"\n-         fi\n-\n-      else\n-         RCVERSION=\"${STRIPPEDLAST##*-}\"\n-         PLATFORM=\"${VERSION##*-}\"\n-\n-         VERSION=\"$STRIPPEDNEXTTOLAST\"\n-      fi\n-\n-      BASEDIR=\"$BASEDIR$VERSION/\"\n-      if [[ $RCVERSION == *\"$RCVERSIONSTRING\"* ]]; then\n-         BASEDIR=\"$BASEDIR$RCSUBDIR.$RCVERSION/\"\n-      fi\n-   fi\n-else\n-   echo \"Error: need to specify a version on the command line\"\n-   exit 2\n-fi\n-\n-#first we fetch the file containing the signature\n-WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n-\n-#and then see if wget completed successfully\n-if [ $? -ne 0 ]; then\n-   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: ${VERSIONPREFIX}0.10.4-${RCVERSIONSTRING}1)\"\n-   echo \"wget output:\"\n-   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n-   exit 2\n-fi\n-\n-WGETOUT=$(wget -N -O \"$SIGNATUREFILENAME.2\" \"$HOST2$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n-if [ $? -ne 0 ]; then\n-   echo \"bitcoin.org failed to provide signature file, but bitcoincore.org did?\"\n-   echo \"wget output:\"\n-   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME\n-   exit 3\n-fi\n-\n-SIGFILEDIFFS=\"$(diff $SIGNATUREFILENAME $SIGNATUREFILENAME.2)\"\n-if [ \"$SIGFILEDIFFS\" != \"\" ]; then\n-   echo \"bitcoin.org and bitcoincore.org signature files were not equal?\"\n-   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2\n-   exit 4\n-fi\n-\n-#then we check it\n-GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n-\n-#return value 0: good signature\n-#return value 1: bad signature\n-#return value 2: gpg error\n-\n-RET=\"$?\"\n-if [ $RET -ne 0 ]; then\n-   if [ $RET -eq 1 ]; then\n-      #and notify the user if it's bad\n-      echo \"Bad signature.\"\n-   elif [ $RET -eq 2 ]; then\n-      #or if a gpg error has occurred\n-      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n-   fi\n-\n-   echo \"gpg output:\"\n-   echo \"$GPGOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n-   exit \"$RET\"\n-fi\n-\n-if [ -n \"$PLATFORM\" ]; then\n-   grep $PLATFORM $TMPFILE > \"$TMPFILE-plat\"\n-   TMPFILESIZE=$(stat -c%s \"$TMPFILE-plat\")\n-   if [ $TMPFILESIZE -eq 0 ]; then\n-      echo \"error: no files matched the platform specified\" && exit 3\n-   fi\n-   mv \"$TMPFILE-plat\" $TMPFILE\n-fi\n-\n-#here we extract the filenames from the signature file\n-FILES=$(awk '{print $2}' \"$TMPFILE\")\n-\n-#and download these one by one\n-for file in $FILES\n-do\n-   echo \"Downloading $file\"\n-   wget --quiet -N \"$HOST1$BASEDIR$file\"\n-done\n-\n-#check hashes\n-DIFF=$(diff <(sha256sum $FILES) \"$TMPFILE\")\n-\n-if [ $? -eq 1 ]; then\n-   echo \"Hashes don't match.\"\n-   echo \"Offending files:\"\n-   echo \"$DIFF\"|grep \"^<\"|awk '{print \"\\t\"$3}'\n-   exit 1\n-elif [ $? -gt 1 ]; then\n-   echo \"Error executing 'diff'\"\n-   exit 2\n-fi\n-\n-if [ -n \"$2\" ]; then\n-   echo \"Clean up the binaries\"\n-   clean_up $FILES $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n-else\n-   echo \"Keep the binaries in $WORKINGDIR\"\n-   clean_up $TMPFILE\n-fi\n-\n-echo -e \"Verified hashes of \\n$FILES\"\n-\n-exit 0"
      },
      {
        "sha": "bf4978d1430149b4ed3572a484c01e6bb40f22c0",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,34 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-if [ -z \"$OSSLSIGNCODE\" ]; then\n-  OSSLSIGNCODE=osslsigncode\n-fi\n-\n-if [ ! -n \"$1\" ]; then\n-  echo \"usage: $0 <osslcodesign args>\"\n-  echo \"example: $0 -key codesign.key\"\n-  exit 1\n-fi\n-\n-OUT=signature-win.tar.gz\n-SRCDIR=unsigned\n-WORKDIR=./.tmp\n-OUTDIR=\"${WORKDIR}/out\"\n-OUTSUBDIR=\"${OUTDIR}/win\"\n-TIMESERVER=http://timestamp.comodoca.com\n-CERTFILE=\"win-codesign.cert\"\n-\n-mkdir -p \"${OUTSUBDIR}\"\n-basename -a `ls -1 \"${SRCDIR}\"/*-unsigned.exe` | while read UNSIGNED; do\n-  echo Signing \"${UNSIGNED}\"\n-  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n-  \"${OSSLSIGNCODE}\" extract-signature -pem -in \"${WORKDIR}/${UNSIGNED}\" -out \"${OUTSUBDIR}/${UNSIGNED}.pem\" && rm \"${WORKDIR}/${UNSIGNED}\"\n-done\n-\n-rm -f \"${OUT}\"\n-tar -C \"${OUTDIR}\" -czf \"${OUT}\" .\n-rm -rf \"${WORKDIR}\"\n-echo \"Created ${OUT}\""
      },
      {
        "sha": "200b30a3f0d2fd4c537d97baac79f22e81dd8a65",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "removed",
        "additions": 0,
        "deletions": 99,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,99 +0,0 @@\n------BEGIN CERTIFICATE-----\n-MIIFTTCCBDWgAwIBAgIRALlW05RLwG2hMQMX5d/o5J8wDQYJKoZIhvcNAQELBQAw\n-fTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxIzAhBgNV\n-BAMTGkNPTU9ETyBSU0EgQ29kZSBTaWduaW5nIENBMB4XDTE2MDIwMzAwMDAwMFoX\n-DTE5MDMwNTIzNTk1OVowgbUxCzAJBgNVBAYTAlVTMQ4wDAYDVQQRDAU5ODEwNDEL\n-MAkGA1UECAwCV0ExEDAOBgNVBAcMB1NlYXR0bGUxEDAOBgNVBAkMB1N0ZSAzMDAx\n-FzAVBgNVBAkMDjcxIENvbHVtYmlhIFN0MSUwIwYDVQQKDBxUaGUgQml0Y29pbiBG\n-b3VuZGF0aW9uLCBJbmMuMSUwIwYDVQQDDBxUaGUgQml0Y29pbiBGb3VuZGF0aW9u\n-LCBJbmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw37Vrv9Gbku0\n-+kuV0t89TuyxtAcmT7QE4GcwESKKjmkxfzD9a0qlhqk8GfQ+fw4DHNN+nLKNv7xB\n-bk6aS7J2v2DcXkOjrP99P9jqgTkp7MC04VtG3OqVRGB+gum0pptRovYZUQXIdkY7\n-GJOok/NDagwKiiUe2V2meZ7UctsZNvYeilQdTgKIIhrMB9NowCOhT8ocVL4Ki55/\n-l7hukJn3fueCM3fHTwY2/1gaGsOHoCkFRsD7vokjAVpiY+8rUgvHjb0gxgojiVGd\n-6a6/F5XJwKJacvUyN4Hfc2K5lRMQjTTmo4aWNWIa0iJ3TK9BHpdSLJBqerMPvmnM\n-kkapS+ZTNQIDAQABo4IBjTCCAYkwHwYDVR0jBBgwFoAUKZFg/4pN+uv5pmq4z/nm\n-S71JzhIwHQYDVR0OBBYEFONpQ+cV82URVe+V8G57377KxxexMA4GA1UdDwEB/wQE\n-AwIHgDAMBgNVHRMBAf8EAjAAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMBEGCWCGSAGG\n-+EIBAQQEAwIEEDBGBgNVHSAEPzA9MDsGDCsGAQQBsjEBAgEDAjArMCkGCCsGAQUF\n-BwIBFh1odHRwczovL3NlY3VyZS5jb21vZG8ubmV0L0NQUzBDBgNVHR8EPDA6MDig\n-NqA0hjJodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9SU0FDb2RlU2lnbmlu\n-Z0NBLmNybDB0BggrBgEFBQcBAQRoMGYwPgYIKwYBBQUHMAKGMmh0dHA6Ly9jcnQu\n-Y29tb2RvY2EuY29tL0NPTU9ET1JTQUNvZGVTaWduaW5nQ0EuY3J0MCQGCCsGAQUF\n-BzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJKoZIhvcNAQELBQADggEB\n-AGnBSi9K/9rgTAyKFKrfGWSfNOwAghmsnsvpZSQ7QyoGWBFKSgCs/70kErl18oHA\n-g7Y8loQB1yukZmJaCa3OvGud7smn45TCh0TMf4EpP20Wxf4rMQTxwAatasHL3+vi\n-I+Nl5bsRZ09kWjvayqLII5upjS/yq0JfpmyGl5k2C/fIpztq0iOLvqWlXcL4+51r\n-cMUAfX6E6EaZQm//ikp+w2+7MEXTKguOuV3gwsrTy0DsvkZl4YDgx/FA4ImzXopv\n-d+3KJPLvO+OSBqUD3JPwXHnuJqGAbLBFyyCa/feGUjLlR8cxcNWLWdp4qxtoIUPG\n-3wTsC9YgrglS0F7FKMXlNRY=\n------END CERTIFICATE-----\n------BEGIN CERTIFICATE-----\n-MIIF4DCCA8igAwIBAgIQLnyHzA6TSlL+lP0ct800rzANBgkqhkiG9w0BAQwFADCB\n-hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n-BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTMwNTA5\n-MDAwMDAwWhcNMjgwNTA4MjM1OTU5WjB9MQswCQYDVQQGEwJHQjEbMBkGA1UECBMS\n-R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFD\n-T01PRE8gQ0EgTGltaXRlZDEjMCEGA1UEAxMaQ09NT0RPIFJTQSBDb2RlIFNpZ25p\n-bmcgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmmJBjd5E0f4rR\n-3elnMRHrzB79MR2zuWJXP5O8W+OfHiQyESdrvFGRp8+eniWzX4GoGA8dHiAwDvth\n-e4YJs+P9omidHCydv3Lj5HWg5TUjjsmK7hoMZMfYQqF7tVIDSzqwjiNLS2PgIpQ3\n-e9V5kAoUGFEs5v7BEvAcP2FhCoyi3PbDMKrNKBh1SMF5WgjNu4xVjPfUdpA6M0ZQ\n-c5hc9IVKaw+A3V7Wvf2pL8Al9fl4141fEMJEVTyQPDFGy3CuB6kK46/BAW+QGiPi\n-XzjbxghdR7ODQfAuADcUuRKqeZJSzYcPe9hiKaR+ML0btYxytEjy4+gh+V5MYnmL\n-Agaff9ULAgMBAAGjggFRMIIBTTAfBgNVHSMEGDAWgBS7r34CPfqm8TyEjq3uOJjs\n-2TIy1DAdBgNVHQ4EFgQUKZFg/4pN+uv5pmq4z/nmS71JzhIwDgYDVR0PAQH/BAQD\n-AgGGMBIGA1UdEwEB/wQIMAYBAf8CAQAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYD\n-VR0gBAowCDAGBgRVHSAAMEwGA1UdHwRFMEMwQaA/oD2GO2h0dHA6Ly9jcmwuY29t\n-b2RvY2EuY29tL0NPTU9ET1JTQUNlcnRpZmljYXRpb25BdXRob3JpdHkuY3JsMHEG\n-CCsGAQUFBwEBBGUwYzA7BggrBgEFBQcwAoYvaHR0cDovL2NydC5jb21vZG9jYS5j\n-b20vQ09NT0RPUlNBQWRkVHJ1c3RDQS5jcnQwJAYIKwYBBQUHMAGGGGh0dHA6Ly9v\n-Y3NwLmNvbW9kb2NhLmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAAj8COcPu+Mo7id4M\n-bU2x8U6ST6/COCwEzMVjEasJY6+rotcCP8xvGcM91hoIlP8l2KmIpysQGuCbsQci\n-GlEcOtTh6Qm/5iR0rx57FjFuI+9UUS1SAuJ1CAVM8bdR4VEAxof2bO4QRHZXavHf\n-WGshqknUfDdOvf+2dVRAGDZXZxHNTwLk/vPa/HUX2+y392UJI0kfQ1eD6n4gd2HI\n-TfK7ZU2o94VFB696aSdlkClAi997OlE5jKgfcHmtbUIgos8MbAOMTM1zB5TnWo46\n-BLqioXwfy2M6FafUFRunUkcyqfS/ZEfRqh9TTjIwc8Jvt3iCnVz/RrtrIh2IC/gb\n-qjSm/Iz13X9ljIwxVzHQNuxHoc/Li6jvHBhYxQZ3ykubUa9MCEp6j+KjUuKOjswm\n-5LLY5TjCqO3GgZw1a6lYYUoKl7RLQrZVnb6Z53BtWfhtKgx/GWBfDJqIbDCsUgmQ\n-Fhv/K53b0CDKieoofjKOGd97SDMe12X4rsn4gxSTdn1k0I7OvjV9/3IxTZ+evR5s\n-L6iPDAZQ+4wns3bJ9ObXwzTijIchhmH+v1V04SF3AwpobLvkyanmz1kl63zsRQ55\n-ZmjoIs2475iFTZYRPAmK0H+8KCgT+2rKVI2SXM3CZZgGns5IW9S1N5NGQXwH3c/6\n-Q++6Z2H/fUnguzB9XIDj5hY5S6c=\n------END CERTIFICATE-----\n------BEGIN CERTIFICATE-----\n-MIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCB\n-hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n-BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMTE5\n-MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgT\n-EkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR\n-Q09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNh\n-dGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCR\n-6FSS0gpWsawNJN3Fz0RndJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8X\n-pz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC\n-9BR++b7Epi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+5eNu/Nio5JIk2kNrYrhV\n-/erBvGy2i/MOjZrkm2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pGx8cgoLEf\n-Zd5ICLqkTqnyg0Y3hOvozIFIQ2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z\n-+pUX2nwzV0E8jVHtC7ZcryxjGt9XyD+86V3Em69FmeKjWiS0uqlWPc9vqv9JWL7w\n-qP/0uK3pN/u6uPQLOvnoQ0IeidiEyxPx2bvhiWC4jChWrBQdnArncevPDt09qZah\n-SL0896+1DSJMwBGB7FY79tOi4lu3sgQiUpWAk2nojkxl8ZEDLXB0AuqLZxUpaVIC\n-u9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+CGCe01a60y1Dma/RMhnEw6abf\n-Fobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5WdYgGq/yapiq\n-crxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4E\n-FgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n-/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvl\n-wFTPoCWOAvn9sKIN9SCYPBMtrFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM\n-4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA1sj+nq6PK7o9mfjYcwlYRm6mnPTXJ9OV\n-2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4sjn8OoSgtZx8jb8uk2Intzna\n-FxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrrkguhxuhoqEwWsRqZ\n-CuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpjIXUDgIiK\n-boHGhfKppC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmcke\n-jkk9u+UJueBPSZI9FoJAzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yL\n-S0Zj/gA0QHDBw7mh3aZw4gSzQbzpgJHqZJx64SIDqZxubw5lT2yHh17zbqD5daWb\n-QOhTsiedSrnAdyGN/4fy3ryM7xfft0kL0fJuMAsaDk527RH89elWsn2/x20Kk4yl\n-0MC2Hb46TpSi125sC8KKfPog88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7ILaZRfyHB\n-NVOFBkpdn627G190\n------END CERTIFICATE-----"
      },
      {
        "sha": "6e44c56f527d4bcaacaa3d21a0ecde17e9927076",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "removed",
        "additions": 0,
        "deletions": 84,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,84 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-\"\"\"\n-    ZMQ example using python3's asyncio\n-\n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n-                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332\n-\n-    We use the asyncio library here.  `self.handle()` installs itself as a\n-    future at the end of the function.  Since it never returns with the event\n-    loop having an empty stack of futures, this creates an infinite loop.  An\n-    alternative is to wrap the contents of `handle` inside `while True`.\n-\n-    A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n-\"\"\"\n-\n-import binascii\n-import asyncio\n-import zmq\n-import zmq.asyncio\n-import signal\n-import struct\n-import sys\n-\n-if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n-    print(\"This example only works with Python 3.5 and greater\")\n-    sys.exit(1)\n-\n-port = 28332\n-\n-class ZMQHandler():\n-    def __init__(self):\n-        self.loop = zmq.asyncio.install()\n-        self.zmqContext = zmq.asyncio.Context()\n-\n-        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n-        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n-\n-    async def handle(self) :\n-        msg = await self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n-        sequence = \"Unknown\"\n-        if len(msg[-1]) == 4:\n-          msgSequence = struct.unpack('<I', msg[-1])[-1]\n-          sequence = str(msgSequence)\n-        if topic == b\"hashblock\":\n-            print('- HASH BLOCK ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"hashtx\":\n-            print('- HASH TX  ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"rawblock\":\n-            print('- RAW BLOCK HEADER ('+sequence+') -')\n-            print(binascii.hexlify(body[:80]))\n-        elif topic == b\"rawtx\":\n-            print('- RAW TX ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        # schedule ourselves to receive the next message\n-        asyncio.ensure_future(self.handle())\n-\n-    def start(self):\n-        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n-        self.loop.create_task(self.handle())\n-        self.loop.run_forever()\n-\n-    def stop(self):\n-        self.loop.stop()\n-        self.zmqContext.destroy()\n-\n-daemon = ZMQHandler()\n-daemon.start()"
      },
      {
        "sha": "536352d5ff785ef2659e4e7b3125a099bc4f767c",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,89 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-\"\"\"\n-    ZMQ example using python3's asyncio\n-\n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n-                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332\n-\n-    We use the asyncio library here.  `self.handle()` installs itself as a\n-    future at the end of the function.  Since it never returns with the event\n-    loop having an empty stack of futures, this creates an infinite loop.  An\n-    alternative is to wrap the contents of `handle` inside `while True`.\n-\n-    The `@asyncio.coroutine` decorator and the `yield from` syntax found here\n-    was introduced in python 3.4 and has been deprecated in favor of the `async`\n-    and `await` keywords respectively.\n-\n-    A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n-\"\"\"\n-\n-import binascii\n-import asyncio\n-import zmq\n-import zmq.asyncio\n-import signal\n-import struct\n-import sys\n-\n-if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n-    print(\"This example only works with Python 3.4 and greater\")\n-    sys.exit(1)\n-\n-port = 28332\n-\n-class ZMQHandler():\n-    def __init__(self):\n-        self.loop = zmq.asyncio.install()\n-        self.zmqContext = zmq.asyncio.Context()\n-\n-        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n-        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n-\n-    @asyncio.coroutine\n-    def handle(self) :\n-        msg = yield from self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n-        sequence = \"Unknown\"\n-        if len(msg[-1]) == 4:\n-          msgSequence = struct.unpack('<I', msg[-1])[-1]\n-          sequence = str(msgSequence)\n-        if topic == b\"hashblock\":\n-            print('- HASH BLOCK ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"hashtx\":\n-            print('- HASH TX  ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"rawblock\":\n-            print('- RAW BLOCK HEADER ('+sequence+') -')\n-            print(binascii.hexlify(body[:80]))\n-        elif topic == b\"rawtx\":\n-            print('- RAW TX ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        # schedule ourselves to receive the next message\n-        asyncio.ensure_future(self.handle())\n-\n-    def start(self):\n-        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n-        self.loop.create_task(self.handle())\n-        self.loop.run_forever()\n-\n-    def stop(self):\n-        self.loop.stop()\n-        self.zmqContext.destroy()\n-\n-daemon = ZMQHandler()\n-daemon.start()"
      },
      {
        "sha": "3cb4b9ac15557906446b56ab75eb2d23ec0187e9",
        "filename": "depends/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,10 +0,0 @@\n-SDKs/\n-work/\n-built/\n-sources/\n-config.site\n-x86_64*\n-i686*\n-mips*\n-arm*\n-aarch64*"
      },
      {
        "sha": "0ddd348e53edabc9069317ab52d5f99ac429781a",
        "filename": "depends/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 182,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,182 +0,0 @@\n-.NOTPARALLEL :\n-\n-SOURCES_PATH ?= $(BASEDIR)/sources\n-BASE_CACHE ?= $(BASEDIR)/built\n-SDK_PATH ?= $(BASEDIR)/SDKs\n-NO_QT ?=\n-NO_WALLET ?=\n-NO_UPNP ?=\n-FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n-\n-BUILD = $(shell ./config.guess)\n-HOST ?= $(BUILD)\n-PATCHES_PATH = $(BASEDIR)/patches\n-BASEDIR = $(CURDIR)\n-HASH_LENGTH:=11\n-DOWNLOAD_CONNECT_TIMEOUT:=10\n-DOWNLOAD_RETRIES:=3\n-HOST_ID_SALT ?= salt\n-BUILD_ID_SALT ?= salt\n-\n-host:=$(BUILD)\n-ifneq ($(HOST),)\n-host:=$(HOST)\n-host_toolchain:=$(HOST)-\n-endif\n-\n-ifneq ($(DEBUG),)\n-release_type=debug\n-else\n-release_type=release\n-endif\n-\n-base_build_dir=$(BASEDIR)/work/build\n-base_staging_dir=$(BASEDIR)/work/staging\n-base_download_dir=$(BASEDIR)/work/download\n-canonical_host:=$(shell ./config.sub $(HOST))\n-build:=$(shell ./config.sub $(BUILD))\n-\n-build_arch =$(firstword $(subst -, ,$(build)))\n-build_vendor=$(word 2,$(subst -, ,$(build)))\n-full_build_os:=$(subst $(build_arch)-$(build_vendor)-,,$(build))\n-build_os:=$(findstring linux,$(full_build_os))\n-build_os+=$(findstring darwin,$(full_build_os))\n-build_os:=$(strip $(build_os))\n-ifeq ($(build_os),)\n-build_os=$(full_build_os)\n-endif\n-\n-host_arch=$(firstword $(subst -, ,$(canonical_host)))\n-host_vendor=$(word 2,$(subst -, ,$(canonical_host)))\n-full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n-host_os:=$(findstring linux,$(full_host_os))\n-host_os+=$(findstring darwin,$(full_host_os))\n-host_os+=$(findstring mingw32,$(full_host_os))\n-host_os:=$(strip $(host_os))\n-ifeq ($(host_os),)\n-host_os=$(full_host_os)\n-endif\n-\n-$(host_arch)_$(host_os)_prefix=$(BASEDIR)/$(host)\n-$(host_arch)_$(host_os)_host=$(host)\n-host_prefix=$($(host_arch)_$(host_os)_prefix)\n-build_prefix=$(host_prefix)/native\n-build_host=$(build)\n-\n-AT_$(V):=\n-AT_:=@\n-AT:=$(AT_$(V))\n-\n-all: install\n-\n-include hosts/$(host_os).mk\n-include hosts/default.mk\n-include builders/$(build_os).mk\n-include builders/default.mk\n-include packages/packages.mk\n-\n-build_id_string:=$(BUILD_ID_SALT)\n-build_id_string+=$(shell $(build_CC) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_AR) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_CXX) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_RANLIB) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_STRIP) --version 2>/dev/null)\n-\n-$(host_arch)_$(host_os)_id_string:=$(HOST_ID_SALT)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_CC) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_AR) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n-\n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n-wallet_packages_$(NO_WALLET) = $(wallet_packages)\n-upnp_packages_$(NO_UPNP) = $(upnp_packages)\n-\n-packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n-native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n-\n-ifneq ($(qt_packages_),)\n-native_packages += $(qt_native_packages)\n-endif\n-\n-all_packages = $(packages) $(native_packages)\n-\n-meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n-\n-$(host_arch)_$(host_os)_native_toolchain?=$($(host_os)_native_toolchain)\n-\n-include funcs.mk\n-\n-toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n-final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n-final_build_id+=$(shell echo -n \"$(final_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n-$(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)\n-\t$(AT)rm -rf $(@D)\n-\t$(AT)mkdir -p $(@D)\n-\t$(AT)echo copying packages: $^\n-\t$(AT)echo to: $(@D)\n-\t$(AT)cd $(@D); $(foreach package,$^, tar xf $($(package)_cached); )\n-\t$(AT)touch $@\n-\n-$(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_build_id)\n-\t$(AT)@mkdir -p $(@D)\n-\t$(AT)sed -e 's|@HOST@|$(host)|' \\\n-            -e 's|@CC@|$(toolchain_path)$(host_CC)|' \\\n-            -e 's|@CXX@|$(toolchain_path)$(host_CXX)|' \\\n-            -e 's|@AR@|$(toolchain_path)$(host_AR)|' \\\n-            -e 's|@RANLIB@|$(toolchain_path)$(host_RANLIB)|' \\\n-            -e 's|@NM@|$(toolchain_path)$(host_NM)|' \\\n-            -e 's|@STRIP@|$(toolchain_path)$(host_STRIP)|' \\\n-            -e 's|@build_os@|$(build_os)|' \\\n-            -e 's|@host_os@|$(host_os)|' \\\n-            -e 's|@CFLAGS@|$(strip $(host_CFLAGS) $(host_$(release_type)_CFLAGS))|' \\\n-            -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n-            -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n-            -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n-            -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n-            -e 's|@no_qt@|$(NO_QT)|' \\\n-            -e 's|@no_wallet@|$(NO_WALLET)|' \\\n-            -e 's|@no_upnp@|$(NO_UPNP)|' \\\n-            -e 's|@debug@|$(DEBUG)|' \\\n-            $< > $@\n-\t$(AT)touch $@\n-\n-\n-define check_or_remove_cached\n-  mkdir -p $(BASE_CACHE)/$(host)/$(package) && cd $(BASE_CACHE)/$(host)/$(package); \\\n-  $(build_SHA256SUM) -c $($(package)_cached_checksum) >/dev/null 2>/dev/null || \\\n-  ( rm -f $($(package)_cached_checksum); \\\n-    if test -f \"$($(package)_cached)\"; then echo \"Checksum mismatch for $(package). Forcing rebuild..\"; rm -f $($(package)_cached_checksum) $($(package)_cached); fi )\n-endef\n-\n-define check_or_remove_sources\n-  mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \\\n-  test -f $($(package)_fetched) && ( $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n-    ( echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; \\\n-      rm -f $($(package)_all_sources) $($(1)_fetched))) || true\n-endef\n-\n-check-packages:\n-\t@$(foreach package,$(all_packages),$(call check_or_remove_cached,$(package));)\n-check-sources:\n-\t@$(foreach package,$(all_packages),$(call check_or_remove_sources,$(package));)\n-\n-$(host_prefix)/share/config.site: check-packages\n-\n-check-packages: check-sources\n-\n-install: check-packages $(host_prefix)/share/config.site\n-\n-\n-download-one: check-sources $(all_sources)\n-\n-download-osx:\n-\t@$(MAKE) -s HOST=x86_64-apple-darwin11 download-one\n-download-linux:\n-\t@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one\n-download-win:\n-\t@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one\n-download: download-osx download-linux download-win\n-\n-.PHONY: install cached download-one download-osx download-linux download-win download check-packages check-sources"
      },
      {
        "sha": "99eef1952c6d896f6b2215141c3e7b05cbdfa0e9",
        "filename": "depends/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,75 +0,0 @@\n-### Usage\n-\n-To build dependencies for the current arch+OS:\n-\n-    make\n-\n-To build for another arch/OS:\n-\n-    make HOST=host-platform-triplet\n-\n-For example:\n-\n-    make HOST=x86_64-w64-mingw32 -j4\n-\n-A prefix will be generated that's suitable for plugging into Bitcoin's\n-configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n-\n-    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n-\n-Common `host-platform-triplets` for cross compilation are:\n-\n-- `i686-w64-mingw32` for Win32\n-- `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin11` for MacOSX\n-- `arm-linux-gnueabihf` for Linux ARM 32 bit\n-- `aarch64-linux-gnu` for Linux ARM 64 bit\n-\n-No other options are needed, the paths are automatically configured.\n-\n-Install the required dependencies: Ubuntu & Debian\n---------------------------------------------------\n-\n-For macOS cross compilation:\n-\n-    sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python-setuptools\n-\n-For Win32/Win64 cross compilation:\n-\n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n-\n-For linux (including i386, ARM) cross compilation:\n-\n-    sudo apt-get install curl g++-aarch64-linux-gnu g++-4.8-aarch64-linux-gnu gcc-4.8-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-arm-linux-gnueabihf g++-4.8-arm-linux-gnueabihf gcc-4.8-arm-linux-gnueabihf binutils-arm-linux-gnueabihf g++-4.8-multilib gcc-4.8-multilib binutils-gold bsdmainutils\n-\n-\n-Dependency Options:\n-The following can be set when running make: make FOO=bar\n-\n-    SOURCES_PATH: downloaded sources will be placed here\n-    BASE_CACHE: built packages will be placed here\n-    SDK_PATH: Path where sdk's can be found (used by OSX)\n-    FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n-    NO_QT: Don't download/build/cache qt and its dependencies\n-    NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n-    NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n-    DEBUG: disable some optimizations and enable more runtime checking\n-    HOST_ID_SALT: Optional salt to use when generating host package ids\n-    BUILD_ID_SALT: Optional salt to use when generating build package ids\n-\n-If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n-\n-Additional targets:\n-\n-    download: run 'make download' to fetch all sources without building them\n-    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n-    download-win: run 'make download-win' to fetch all sources needed for win builds\n-    download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n-\n-### Other documentation\n-\n-- [description.md](description.md): General description of the depends system\n-- [packages.md](packages.md): Steps for adding packages\n-"
      },
      {
        "sha": "27f550ab036aeea9ced0a003d40aceaff5e3dc9c",
        "filename": "depends/builders/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,22 +0,0 @@\n-build_darwin_CC: = $(shell xcrun -f clang)\n-build_darwin_CXX: = $(shell xcrun -f clang++)\n-build_darwin_AR: = $(shell xcrun -f ar)\n-build_darwin_RANLIB: = $(shell xcrun -f ranlib)\n-build_darwin_STRIP: = $(shell xcrun -f strip)\n-build_darwin_OTOOL: = $(shell xcrun -f otool)\n-build_darwin_NM: = $(shell xcrun -f nm)\n-build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n-build_darwin_SHA256SUM = shasum -a 256\n-build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n-\n-#darwin host on darwin builder. overrides darwin host preferences.\n-darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++\n-darwin_AR:=$(shell xcrun -f ar)\n-darwin_RANLIB:=$(shell xcrun -f ranlib)\n-darwin_STRIP:=$(shell xcrun -f strip)\n-darwin_LIBTOOL:=$(shell xcrun -f libtool)\n-darwin_OTOOL:=$(shell xcrun -f otool)\n-darwin_NM:=$(shell xcrun -f nm)\n-darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n-darwin_native_toolchain="
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,20 +0,0 @@\n-default_build_CC = gcc\n-default_build_CXX = g++\n-default_build_AR = ar\n-default_build_RANLIB = ranlib\n-default_build_STRIP = strip\n-default_build_NM = nm\n-default_build_OTOOL = otool\n-default_build_INSTALL_NAME_TOOL = install_name_tool\n-\n-define add_build_tool_func\n-build_$(build_os)_$1 ?= $$(default_build_$1)\n-build_$(build_arch)_$(build_os)_$1 ?= $$(build_$(build_os)_$1)\n-build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n-endef\n-$(foreach var,CC CXX AR RANLIB NM STRIP SHA256SUM DOWNLOAD OTOOL INSTALL_NAME_TOOL,$(eval $(call add_build_tool_func,$(var))))\n-define add_build_flags_func\n-build_$(build_arch)_$(build_os)_$1 += $(build_$(build_os)_$1)\n-build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n-endef\n-$(foreach flags, CFLAGS CXXFLAGS LDFLAGS, $(eval $(call add_build_flags_func,$(flags))))"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518",
        "patch": "@@ -1,2 +0,0 @@\n-build_linux_SHA256SUM = sha256sum\n-build_linux_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o"
      },
      {
        "sha": "69ed3e573bb3fa14476b0b539805850159eb23e0",
        "filename": "depends/config.guess",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "0a4a9c327e2e73e55d226c4cdc8a543bcf0da1f5",
        "filename": "depends/config.site.in",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "40ea5dfe1152f0fc5160879bb71bfe1fae2595f6",
        "filename": "depends/config.sub",
        "status": "removed",
        "additions": 0,
        "deletions": 1836,
        "changes": 1836,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "74f9ef3f205ec0e12f6ac9e75f03da81dd7d96e7",
        "filename": "depends/description.md",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "15e404e42dcf372e8d75f9c3945cf4bad9a21837",
        "filename": "depends/funcs.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 245,
        "changes": 245,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "4e58bec74e395b108c965843d05dd957bf7d5f60",
        "filename": "depends/hosts/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "6f60d6b3fd004e9317db4717bf7dcb68b9dd43eb",
        "filename": "depends/hosts/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "b13a0f1ad714ae19ec7fc4b68d162095b9c62255",
        "filename": "depends/hosts/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "dbfb62fdcf98695d515e56897ee488703e002054",
        "filename": "depends/hosts/mingw32.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "7c80362509e989e975e499e0242009e7e098ddf4",
        "filename": "depends/packages.md",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "6c9876c2c7c7c0d884f49dd00de58b5a12d42a31",
        "filename": "depends/packages/bdb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "bf773ccd147d43228815200029dbddd9920fa09d",
        "filename": "depends/packages/boost.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "bbe03754099f53b6fe404876af8cbc68722fc216",
        "filename": "depends/packages/dbus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "7f484724a49097b4ed403f16141ad1f2f2ec7b92",
        "filename": "depends/packages/expat.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "12695db4b9f781c9ce8aa9a62dab0ae36a0a1ce4",
        "filename": "depends/packages/fontconfig.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "76b025c463189870a0865d7b22a3ede02d839b79",
        "filename": "depends/packages/freetype.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "178d592ee63ff9d0f74de6029b4c7becdc850367",
        "filename": "depends/packages/libX11.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "e87df2e4de6760ace30d169b24c83ee0b7cfc7dd",
        "filename": "depends/packages/libXau.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "4db836066f96e37cf7834fcf10de4da331b1fbe1",
        "filename": "depends/packages/libXext.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "5f622f8e6e80694386fef45917b84b97ee1d2223",
        "filename": "depends/packages/libevent.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "28f2bd6f25343de809c9b2c568bd88b778bb26ec",
        "filename": "depends/packages/libxcb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "1bb8cb5d2664746b943756a9efa0db8d8a9d385d",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "3c6e8900f66465976a26b77a14683d8b9859c63e",
        "filename": "depends/packages/native_biplist.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "966804ce8bbf677fae5446219420532b86fdb800",
        "filename": "depends/packages/native_ccache.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "44d238cc4c2a686231c167942c63ae4ec08154c1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "cf694edb30e92ecf7a54a4ccdfba172a3eed44b6",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "116fa25d38197b8add2c601ab7cd7b91c384f268",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "a4ffb6046ccc4b50d7bded21207337a718ba70df",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "488ec8b59c977346818e8294dc9064fc49e15ec4",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ce50b366fa74f3fbed838624f9d7ec58396ace02",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "5ee9f17a63235a9d68f74389566f1f257c182d3c",
        "filename": "depends/packages/openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "088723ebd0d56d6bc2ca2eba20597d52e142ac02",
        "filename": "depends/packages/packages.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "54d3fd924519be2ed612830e24c3baf25629c7fa",
        "filename": "depends/packages/protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "44fdf1c2952b6188b25ddfe56d2b4f1c71d1c07f",
        "filename": "depends/packages/qrencode.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "bbfdb766ed694025c0124140c00b3044ca362d02",
        "filename": "depends/packages/qt.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 183,
        "changes": 183,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "0c7c958d62d42e52fa5cb694a026ea9f36ccabfa",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "98a11eb4974f8b25bf0f8c75ca1b0f0de4d5d1b9",
        "filename": "depends/packages/xextproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "50a90b26850ac87de0c74d2822a6590d9a9b9e8e",
        "filename": "depends/packages/xproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "99eefa6d5ea24b2d2f4e5ecf38b07390432a8549",
        "filename": "depends/packages/xtrans.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "3f97221e10ee847ab16c12088616e8bf5c51f93f",
        "filename": "depends/packages/zeromq.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "589490800f8bd894538aef4ce19366d0bf78d2ca",
        "filename": "depends/packages/zlib.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "89abdb1b71ff81ffdcab8b138ae86d53b4a07442",
        "filename": "depends/patches/native_biplist/sorted_list.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/native_biplist/sorted_list.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/native_biplist/sorted_list.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_biplist/sorted_list.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "6f2f5534a275d57d3dcb8287823b85e663152904",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ec2bc17d9bd9e032acfec9e34ea6afbbbb7e79f2",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 49,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "34302a9f2d2eb61117a274a53c8cfe1877c61246",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ca70d30b15e9c4115f1e7c2ac885858244fd123b",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "fb21923c8c36b60c337c20a9e8002fc593f5716d",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "c792824179056473fe97fa8f876f36ca950a6c80",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "a6c508fb8a1e6c14e61c28ac2299fdcf7823d181",
        "filename": "depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "58c65fb7e25514043bef4caad82a668aabca4914",
        "filename": "doc/Doxyfile.in",
        "status": "removed",
        "additions": 0,
        "deletions": 2460,
        "changes": 2460,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "988019869e4387fe11362e29480761d827dcf85a",
        "filename": "doc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "2a4460478c9d6a90105d95f3997065225d0e4ddd",
        "filename": "doc/README_osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 97,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "07d61b3bda13acb5ac4775db4d23a97586aed646",
        "filename": "doc/README_windows.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "f3dc124ece94bf82e50005d294098fc058a91509",
        "filename": "doc/REST-interface.md",
        "status": "removed",
        "additions": 0,
        "deletions": 103,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "0ba75afcda3cbcef4c024c9acec21e35f40017c9",
        "filename": "doc/benchmarking.md",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "fbff94a329a316417de4bd374c38f95f607d70ff",
        "filename": "doc/bips.md",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "0817821221d3a5079a9c39d4cbe3b402e27781b5",
        "filename": "doc/build-openbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "3e243933c80ac418311c83466578bf29b95a4e62",
        "filename": "doc/build-osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "af567cadeb648efcf5ee663a0674a917e6de70a6",
        "filename": "doc/build-unix.md",
        "status": "removed",
        "additions": 0,
        "deletions": 326,
        "changes": 326,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "9e0e66e522e49aaa8874499f38644d4337ad45c4",
        "filename": "doc/build-windows.md",
        "status": "removed",
        "additions": 0,
        "deletions": 180,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "5c5645de9785d69de90f220422a911224f5c5164",
        "filename": "doc/dependencies.md",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "9dc63a1e4b65094ef4b8b416d45cf5ebdf9dcee3",
        "filename": "doc/developer-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 698,
        "changes": 698,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "2eac7ed6641b1db4bc5f4778eb68daa3bf89a0ec",
        "filename": "doc/files.md",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "5dedcb51c895e612c6953b99ca3bb532899cb4aa",
        "filename": "doc/fuzzing.md",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "75f9013f296b9ee0ffc79e19fdf43819eab5007b",
        "filename": "doc/init.md",
        "status": "removed",
        "additions": 0,
        "deletions": 125,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "08ff4d6ac1d5cc1135ee6c38d54d17fcfd7252eb",
        "filename": "doc/man/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "67876384439fc4f5a9ca2aebcc8f2dcfb312a8ca",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 103,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ae35d50ac3475a4caf8a909740f0c9ecfdee3b1f",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 557,
        "changes": 557,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "8b72fbde0505d54f3403ca14484e0d180a6319ec",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "removed",
        "additions": 0,
        "deletions": 127,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "baf747436f82a3ca8d2e10f922a62a4c2b0e1b95",
        "filename": "doc/man/bitcoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 536,
        "changes": 536,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "697099beabe96ee7eb15032e557fea652fe98901",
        "filename": "doc/reduce-traffic.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "d92666da7260c030a8f5c189d8434646fb0b9724",
        "filename": "doc/release-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 762,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 505,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "cf74a1797520713b405da0ac47e54fb978e344da",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 894,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "610cd481de4855f3d0d05e5d7d089f9c41ee9f06",
        "filename": "doc/release-notes/release-notes-0.12.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.12.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.12.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "4c3cb97df34cf5e13939e538bd8af50759cc92f6",
        "filename": "doc/release-notes/release-notes-0.13.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 868,
        "changes": 868,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.13.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.13.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "75c2d61be8d3c1b3c85bf9a89df1821b39d42e56",
        "filename": "doc/release-notes/release-notes-0.13.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 410,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.13.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.13.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "45fff5c8bbdc1bb2834e204412164f8b34140bde",
        "filename": "doc/release-notes/release-notes-0.13.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 178,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.13.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.13.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "c41f22979b581f3ba6af58b73b578c8d138fa966",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 873,
        "changes": 873,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "0ad554b7738c17a4017b57234fce1132f9a9ed45",
        "filename": "doc/release-notes/release-notes-0.14.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 102,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.14.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.14.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "53ab02cbb0242957ba3697655d848a9461ab7455",
        "filename": "doc/release-notes/release-notes-0.15.0.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 87,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.15.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.15.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "29816cacf73024538d20e24a261fa9565b05801f",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 878,
        "changes": 878,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "75d2e097142499137a07a65bd35c2a4b91d9cd33",
        "filename": "doc/release-notes/release-notes-0.15.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 277,
        "changes": 277,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.15.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.15.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "38715bc75fe27a48c253ee43474f926df7065593",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "2b95ff233d4c2810f9a2fd58b63d528ba65bd108",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "e73052ed9bf0ba3b9dc59f8218d2eb69ea950cac",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "b98052ef5934de489f2f527d50abb51be95244d6",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "743f84f30e9c2ad96251f433cad3468f3e591662",
        "filename": "doc/release-notes/release-notes-0.3.16.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.16.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.16.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.16.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "d3604b8f8867f1a2629d9daf971f463b291f0a5c",
        "filename": "doc/release-notes/release-notes-0.3.17.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.17.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.17.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.17.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ab1c2e0692ffba94d66a5201ac2675c83cc60f11",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "fcd867561d62341eef06d84cee4edec1e1894fed",
        "filename": "doc/release-notes/release-notes-0.3.19.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.19.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.19.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.19.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.3.20.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.20.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.20.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "09ecb736bdb3f808a5d59ce3bf851c6c159ca6ce",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "9ae21802ee89b6587f006c73838ccbd34deb882e",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "f3b6bc426470d4137edc1b477ef9c3b400e0073e",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "4c05e3e5e78e309770aed4974be1707a8d44d255",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "c1d520e4925d6c57ed72f0c8a34f29a250f71efe",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "d35ac66f2c8a07e8912426c10e2e4c158680ad21",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "145072a369d85a83b312100cf4d7089a591c1bfc",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ac471a8d7feddfd3235a1a1b7973cb06f2e768ed",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "fea1ae75b5e829cf38271ad529262d806d314303",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "f435ba71604df49ca4cc6dbcd67fcd512498f186",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.5.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "07c5e4b6948a5da619c6e82277d9aa4e0a629109",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "baa409b5f2fc97464ffb2087a12bbd77e67f6e01",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "d56bff6d956bc65b55a13da46d3525dc4cefd26f",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "f79816668d8ccd9e379a8e98713e298d86c7079d",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "7c84c53325c8f638b309771c3c6df1dfa79743d1",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "fcde3ac4e3a1b1e09fa6c3a72cf17c923cfa20b3",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "75ebc3e6b62269aff03d48828913807eabca071a",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "1963a362591566d6aadd24b8634dbfe589e68eb9",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "ef7966ecd6809ec3a0805bfca30b9a52ab8e33c7",
        "filename": "doc/release-notes/release-notes-0.6.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.6.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.6.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.1.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      },
      {
        "sha": "bb85fb23a0414b84a75bec16cf8f26b06f8d3777",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c991b304dee368f506cfee27ddaa333f1f82c518/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=c991b304dee368f506cfee27ddaa333f1f82c518"
      }
    ]
  }
]