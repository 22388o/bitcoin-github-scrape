[
  {
    "sha": "50f7bbfbe69e604f0874cedf446b1f357bb0c9b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGY3YmJmYmU2OWU2MDRmMDg3NGNlZGY0NDZiMWYzNTdiYjBjOWI5",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-22T11:22:56Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-29T09:25:39Z"
      },
      "message": "Sometimes nodes send many duplicate blocks. This patch disconnects the peer that's running\nbehind. This shouldn't happen, but it can and does sometimes, so this code caters for that.\n\nThis code also becomes more important as the block download algorithm is changed in future,\nsuch as concurrent block downloads from multiple peers, and retries are sent to other peers\nwhen peers seem unresponsive, only to become responsive again later, by which time\nthey are sending duplicate blocks.",
      "tree": {
        "sha": "3dff0a19dd4db36da4c20c6a73b1649ae119b041",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3dff0a19dd4db36da4c20c6a73b1649ae119b041"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6521b66f7d4e7c3d55e0fd1d006fd6311afc18f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6521b66f7d4e7c3d55e0fd1d006fd6311afc18f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6521b66f7d4e7c3d55e0fd1d006fd6311afc18f"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 21,
      "deletions": 4
    },
    "files": [
      {
        "sha": "09677f04c663b50f9590cbe46564642baecd63b7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=50f7bbfbe69e604f0874cedf446b1f357bb0c9b9",
        "patch": "@@ -1782,10 +1782,25 @@ bool ProcessBlock(CNode* pfrom, CBlock* pblock)\n {\n     // Check for duplicate\n     uint256 hash = pblock->GetHash();\n-    if (mapBlockIndex.count(hash))\n-        return error(\"ProcessBlock() : already have block %d %s\", mapBlockIndex[hash]->nHeight, hash.ToString().substr(0,20).c_str());\n-    if (mapOrphanBlocks.count(hash))\n-        return error(\"ProcessBlock() : already have block (orphan) %s\", hash.ToString().substr(0,20).c_str());\n+    if (mapBlockIndex.count(hash)) {\n+        if (pfrom) {\n+            pfrom->nDupBlocks++;\n+            if (pfrom->nDupBlocks > 3) pfrom->fDisconnect = true;\n+            printf(\"ProcessBlock() : already(%d) have block %d %s\", pfrom->nDupBlocks, mapBlockIndex[hash]->nHeight, hash.ToString().substr(0,20).c_str());\n+        } else\n+            printf(\"ProcessBlock() : already have block %d %s\", mapBlockIndex[hash]->nHeight, hash.ToString().substr(0,20).c_str());\n+        return false;\n+    }\n+    if (mapOrphanBlocks.count(hash)) {\n+        if (pfrom) {\n+            pfrom->nDupBlocks++;\n+            if (pfrom->nDupBlocks > 3) pfrom->fDisconnect = true;\n+            printf(\"ProcessBlock() : already(%d) have block (orphan) %s\", pfrom->nDupBlocks, hash.ToString().substr(0,20).c_str());\n+        } else\n+            printf(\"ProcessBlock() : already have block (orphan) %s\", hash.ToString().substr(0,20).c_str());\n+        return false;\n+    }\n+    if (pfrom) pfrom->nDupBlocks = 0; // reset the counter\n \n     // Preliminary checks\n     if (!pblock->CheckBlock())"
      },
      {
        "sha": "715cd2526d336b732f319613bd4ef4b1f57437b1",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f7bbfbe69e604f0874cedf446b1f357bb0c9b9/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=50f7bbfbe69e604f0874cedf446b1f357bb0c9b9",
        "patch": "@@ -148,6 +148,7 @@ class CNode\n     std::string addrName;\n     CService addrLocal;\n     int nVersion;\n+    int nDupBlocks;\n     std::string strSubVer;\n     bool fOneShot;\n     bool fClient;\n@@ -199,6 +200,7 @@ class CNode\n         addr = addrIn;\n         addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n         nVersion = 0;\n+        nDupBlocks = 0;\n         strSubVer = \"\";\n         fOneShot = false;\n         fClient = false; // set by version message"
      }
    ]
  }
]