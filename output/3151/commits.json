[
  {
    "sha": "7d16bb387459de0fbf0cda3a5b97d6032cab1799",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDE2YmIzODc0NTlkZTBmYmYwY2RhM2E1Yjk3ZDYwMzJjYWIxNzk5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-10-25T14:10:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-10-27T07:45:54Z"
      },
      "message": "qt: clean up signal handling in walletframe/walletview\n\nUse proper signals everywhere.\nRemoves the need to store a pointer to the BitcoinGUI object in\nthe walletview.\nAlso removes the interdependence between setWalletModel / setBitcoinGUI.",
      "tree": {
        "sha": "7f6c0fe692033ca98835c92a9988a3972ab02e6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f6c0fe692033ca98835c92a9988a3972ab02e6d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d16bb387459de0fbf0cda3a5b97d6032cab1799",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d16bb387459de0fbf0cda3a5b97d6032cab1799",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d16bb387459de0fbf0cda3a5b97d6032cab1799",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d16bb387459de0fbf0cda3a5b97d6032cab1799/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d09b3e8b0218169ab7ad2aa787c43ea11bc7060",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d09b3e8b0218169ab7ad2aa787c43ea11bc7060",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d09b3e8b0218169ab7ad2aa787c43ea11bc7060"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 37,
      "deletions": 43
    },
    "files": [
      {
        "sha": "d2807f465a633e5982692e97d9fdeb509d6ef4f3",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=7d16bb387459de0fbf0cda3a5b97d6032cab1799",
        "patch": "@@ -62,7 +62,7 @@ bool WalletFrame::setCurrentWallet(const QString& name)\n \n     WalletView *walletView = mapWalletViews.value(name);\n     walletStack->setCurrentWidget(walletView);\n-    walletView->setEncryptionStatus();\n+    walletView->updateEncryptionStatus();\n     return true;\n }\n \n@@ -171,13 +171,6 @@ void WalletFrame::unlockWallet()\n         walletView->unlockWallet();\n }\n \n-void WalletFrame::setEncryptionStatus()\n-{\n-    WalletView *walletView = (WalletView*)walletStack->currentWidget();\n-    if (walletView)\n-        walletView->setEncryptionStatus();\n-}\n-\n void WalletFrame::usedSendingAddresses()\n {\n     WalletView *walletView = (WalletView*)walletStack->currentWidget();"
      },
      {
        "sha": "edf2390dbc4285a51c99d842908a154247a712d9",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=7d16bb387459de0fbf0cda3a5b97d6032cab1799",
        "patch": "@@ -75,12 +75,6 @@ public slots:\n     void usedSendingAddresses();\n     /** Show used receiving addresses */\n     void usedReceivingAddresses();\n-\n-    /** Set the encryption status as shown in the UI.\n-     @param[in] status            current encryption status\n-     @see WalletModel::EncryptionStatus\n-     */\n-    void setEncryptionStatus();\n };\n \n #endif // WALLETFRAME_H"
      },
      {
        "sha": "982041c64af0a3cb51ce4151100993f92e3dbfb5",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 24,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=7d16bb387459de0fbf0cda3a5b97d6032cab1799",
        "patch": "@@ -32,7 +32,6 @@\n \n WalletView::WalletView(QWidget *parent):\n     QStackedWidget(parent),\n-    gui(0),\n     clientModel(0),\n     walletModel(0)\n {\n@@ -70,6 +69,9 @@ WalletView::WalletView(QWidget *parent):\n \n     // Clicking on \"Export\" allows to export the transaction list\n     connect(exportButton, SIGNAL(clicked()), transactionView, SLOT(exportClicked()));\n+\n+    // Pass through messages from sendCoinsPage\n+    connect(sendCoinsPage, SIGNAL(message(QString,QString,unsigned int)), this, SIGNAL(message(QString,QString,unsigned int)));\n }\n \n WalletView::~WalletView()\n@@ -78,55 +80,58 @@ WalletView::~WalletView()\n \n void WalletView::setBitcoinGUI(BitcoinGUI *gui)\n {\n-    this->gui = gui;\n-\n     if (gui)\n     {\n         // Clicking on a transaction on the overview page sends you to the transactions tab\n         connect(overviewPage, SIGNAL(transactionClicked(QModelIndex)), gui, SLOT(gotoHistoryPage()));\n \n         // Receive and report messages\n         connect(this, SIGNAL(message(QString,QString,unsigned int)), gui, SLOT(message(QString,QString,unsigned int)));\n-        connect(sendCoinsPage, SIGNAL(message(QString,QString,unsigned int)), gui, SLOT(message(QString,QString,unsigned int)));\n+\n+        // Pass through encryption status changed signals\n+        connect(this, SIGNAL(encryptionStatusChanged(int)), gui, SLOT(setEncryptionStatus(int)));\n+\n+        // Pass through transaction notifications\n+        connect(this, SIGNAL(incomingTransaction(QString,int,qint64,QString,QString)), gui, SLOT(incomingTransaction(QString,int,qint64,QString,QString)));\n     }\n }\n \n void WalletView::setClientModel(ClientModel *clientModel)\n {\n     this->clientModel = clientModel;\n-    if (clientModel)\n-    {\n-        overviewPage->setClientModel(clientModel);\n-    }\n+\n+    overviewPage->setClientModel(clientModel);\n }\n \n void WalletView::setWalletModel(WalletModel *walletModel)\n {\n     this->walletModel = walletModel;\n-    if (walletModel && gui)\n+\n+    // Put transaction list in tabs\n+    transactionView->setModel(walletModel);\n+    overviewPage->setWalletModel(walletModel);\n+    receiveCoinsPage->setModel(walletModel);\n+    sendCoinsPage->setModel(walletModel);\n+\n+    if (walletModel)\n     {\n         // Receive and report messages from wallet thread\n-        connect(walletModel, SIGNAL(message(QString,QString,unsigned int)), gui, SLOT(message(QString,QString,unsigned int)));\n-\n-        // Put transaction list in tabs\n-        transactionView->setModel(walletModel);\n-        overviewPage->setWalletModel(walletModel);\n-        receiveCoinsPage->setModel(walletModel);\n-        sendCoinsPage->setModel(walletModel);\n+        connect(walletModel, SIGNAL(message(QString,QString,unsigned int)), this, SIGNAL(message(QString,QString,unsigned int)));\n \n-        setEncryptionStatus();\n-        connect(walletModel, SIGNAL(encryptionStatusChanged(int)), gui, SLOT(setEncryptionStatus(int)));\n+        // Handle changes in encryption status\n+        connect(walletModel, SIGNAL(encryptionStatusChanged(int)), this, SIGNAL(encryptionStatusChanged(int)));\n+        updateEncryptionStatus();\n \n         // Balloon pop-up for new transaction\n         connect(walletModel->getTransactionTableModel(), SIGNAL(rowsInserted(QModelIndex,int,int)),\n-                this, SLOT(incomingTransaction(QModelIndex,int,int)));\n+                this, SLOT(processNewTransaction(QModelIndex,int,int)));\n \n         // Ask for passphrase if needed\n         connect(walletModel, SIGNAL(requireUnlock()), this, SLOT(unlockWallet()));\n     }\n }\n \n-void WalletView::incomingTransaction(const QModelIndex& parent, int start, int /*end*/)\n+void WalletView::processNewTransaction(const QModelIndex& parent, int start, int /*end*/)\n {\n     // Prevent balloon-spam when initial block download is in progress\n     if (!walletModel || !clientModel || clientModel->inInitialBlockDownload())\n@@ -139,7 +144,7 @@ void WalletView::incomingTransaction(const QModelIndex& parent, int start, int /\n     QString type = ttm->index(start, TransactionTableModel::Type, parent).data().toString();\n     QString address = ttm->index(start, TransactionTableModel::ToAddress, parent).data().toString();\n \n-    gui->incomingTransaction(date, walletModel->getOptionsModel()->getDisplayUnit(), amount, type, address);\n+    emit incomingTransaction(date, walletModel->getOptionsModel()->getDisplayUnit(), amount, type, address);\n }\n \n void WalletView::gotoOverviewPage()\n@@ -199,9 +204,9 @@ void WalletView::showOutOfSyncWarning(bool fShow)\n     overviewPage->showOutOfSyncWarning(fShow);\n }\n \n-void WalletView::setEncryptionStatus()\n+void WalletView::updateEncryptionStatus()\n {\n-    gui->setEncryptionStatus(walletModel->getEncryptionStatus());\n+    emit encryptionStatusChanged(walletModel->getEncryptionStatus());\n }\n \n void WalletView::encryptWallet(bool status)\n@@ -212,7 +217,7 @@ void WalletView::encryptWallet(bool status)\n     dlg.setModel(walletModel);\n     dlg.exec();\n \n-    setEncryptionStatus();\n+    updateEncryptionStatus();\n }\n \n void WalletView::backupWallet()"
      },
      {
        "sha": "61515047ca8d8070d72a868b23d06bef2f4170c3",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d16bb387459de0fbf0cda3a5b97d6032cab1799/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=7d16bb387459de0fbf0cda3a5b97d6032cab1799",
        "patch": "@@ -55,7 +55,6 @@ class WalletView : public QStackedWidget\n     void showOutOfSyncWarning(bool fShow);\n \n private:\n-    BitcoinGUI *gui;\n     ClientModel *clientModel;\n     WalletModel *walletModel;\n \n@@ -85,7 +84,7 @@ public slots:\n \n         The new items are those between start and end inclusive, under the given parent item.\n     */\n-    void incomingTransaction(const QModelIndex& parent, int start, int /*end*/);\n+    void processNewTransaction(const QModelIndex& parent, int start, int /*end*/);\n     /** Encrypt the wallet */\n     void encryptWallet(bool status);\n     /** Backup the wallet */\n@@ -100,14 +99,17 @@ public slots:\n     /** Show used receiving addresses */\n     void usedReceivingAddresses();\n \n-    void setEncryptionStatus();\n-\n+    /** Re-emit encryption status signal */\n+    void updateEncryptionStatus();\n signals:\n     /** Signal that we want to show the main window */\n     void showNormalIfMinimized();\n-\n     /**  Fired when a message should be reported to the user */\n     void message(const QString &title, const QString &message, unsigned int style);\n+    /** Encryption status of wallet changed */\n+    void encryptionStatusChanged(int status);\n+    /** Notify that a new transaction appeared */\n+    void incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address);\n };\n \n #endif // WALLETVIEW_H"
      }
    ]
  }
]