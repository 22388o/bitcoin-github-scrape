[
  {
    "sha": "608bbccfb97e5ecb9083ac203642524a6e556e48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDhiYmNjZmI5N2U1ZWNiOTA4M2FjMjAzNjQyNTI0YTZlNTU2ZTQ4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-04-17T14:16:21Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-04-17T14:16:21Z"
      },
      "message": "[qt] Stop treating coinbase outputs differently: show them at 1conf",
      "tree": {
        "sha": "ac08cbddfda17f0bc37085e29a4016110ee56a98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac08cbddfda17f0bc37085e29a4016110ee56a98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/608bbccfb97e5ecb9083ac203642524a6e556e48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/608bbccfb97e5ecb9083ac203642524a6e556e48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/608bbccfb97e5ecb9083ac203642524a6e556e48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/608bbccfb97e5ecb9083ac203642524a6e556e48/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2584925077f9658b3953ad931b74779006e59807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2584925077f9658b3953ad931b74779006e59807",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2584925077f9658b3953ad931b74779006e59807"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 2,
      "deletions": 39
    },
    "files": [
      {
        "sha": "4bb260aa588ae2c5eeb6b5e723de43455f404aef",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/608bbccfb97e5ecb9083ac203642524a6e556e48/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/608bbccfb97e5ecb9083ac203642524a6e556e48/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=608bbccfb97e5ecb9083ac203642524a6e556e48",
        "patch": "@@ -18,14 +18,8 @@\n  */\n bool TransactionRecord::showTransaction(const CWalletTx &wtx)\n {\n-    if (wtx.IsCoinBase())\n-    {\n-        // Ensures we show generated coins / mined transactions at depth 1\n-        if (!wtx.IsInMainChain())\n-        {\n-            return false;\n-        }\n-    }\n+    // There are currently no cases where we hide transactions, but\n+    // we may want to use this in the future for things like RBF.\n     return true;\n }\n "
      },
      {
        "sha": "6acf4502ff3b2a45a1d9abc157efbe76b381d399",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/608bbccfb97e5ecb9083ac203642524a6e556e48/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/608bbccfb97e5ecb9083ac203642524a6e556e48/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=608bbccfb97e5ecb9083ac203642524a6e556e48",
        "patch": "@@ -1155,33 +1155,6 @@ void CWallet::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const\n     for (size_t i = 0; i < pblock->vtx.size(); i++) {\n         SyncTransaction(pblock->vtx[i], pindex, i);\n     }\n-\n-    // The GUI expects a NotifyTransactionChanged when a coinbase tx\n-    // which is in our wallet moves from in-the-best-block to\n-    // 2-confirmations (as it only displays them at that time).\n-    // We do that here.\n-    if (hashPrevBestCoinbase.IsNull()) {\n-        // Immediately after restart we have no idea what the coinbase\n-        // transaction from the previous block is.\n-        // For correctness we scan over the entire wallet, looking for\n-        // the previous block's coinbase, just in case it is ours, so\n-        // that we can notify the UI that it should now be displayed.\n-        if (pindex->pprev) {\n-            for (const std::pair<uint256, CWalletTx>& p : mapWallet) {\n-                if (p.second.IsCoinBase() && p.second.hashBlock == pindex->pprev->GetBlockHash()) {\n-                    NotifyTransactionChanged(this, p.first, CT_UPDATED);\n-                    break;\n-                }\n-            }\n-        }\n-    } else {\n-        std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(hashPrevBestCoinbase);\n-        if (mi != mapWallet.end()) {\n-            NotifyTransactionChanged(this, hashPrevBestCoinbase, CT_UPDATED);\n-        }\n-    }\n-\n-    hashPrevBestCoinbase = pblock->vtx[0]->GetHash();\n }\n \n void CWallet::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) {"
      },
      {
        "sha": "f38fc9efb5d71f2404acb795f97d6e254791bfda",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/608bbccfb97e5ecb9083ac203642524a6e556e48/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/608bbccfb97e5ecb9083ac203642524a6e556e48/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=608bbccfb97e5ecb9083ac203642524a6e556e48",
        "patch": "@@ -713,10 +713,6 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      */\n     bool AddWatchOnly(const CScript& dest) override;\n \n-    // Used to NotifyTransactionChanged of the previous block's coinbase when\n-    // the next block comes in\n-    uint256 hashPrevBestCoinbase;\n-\n public:\n     /*\n      * Main wallet lock."
      }
    ]
  }
]