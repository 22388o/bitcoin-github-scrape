[
  {
    "sha": "cf60e3a0d30b6da20b6f2e49191328f188d951a7",
    "node_id": "C_kwDOABII59oAKGNmNjBlM2EwZDMwYjZkYTIwYjZmMmU0OTE5MTMyOGYxODhkOTUxYTc",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-10-24T21:28:29Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-10-25T19:23:11Z"
      },
      "message": "util: Use FEATURE_LATEST for wallets created with bitcoin-wallet",
      "tree": {
        "sha": "97ebada0bc7a444c47606d7bfe715dffc1a1dcf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97ebada0bc7a444c47606d7bfe715dffc1a1dcf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf60e3a0d30b6da20b6f2e49191328f188d951a7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmF3BB8ACgkQQQEIES5+\nqB+4jw//cIL7LLfWOWJ5GxH2ZBDnGdbjY+sIpIe1sxRF+2mI2IY0CEBTjBUlCFe3\nygVazUkqd6QgwZXMYUxspHiLURgeBYsPKp9BH7FTuO3UUQ/B1NHKcVfsIvOmh1t2\nkLYCIIQYsvPLzkRhNT+JaqKmoZxS9z03Ke5nUElwDwtw0Jo3GUNLJdS8r/MqWLM2\nDBMQEcWTULH5n9H5/iK5JsD8fTW2JcGt5cCavbqhBnV2YknpNQzCZj/t6SRK8sMj\nyXXPQQse8coGTAhW3b/OXGtsI3AyMbq56twoHLQp9aKtt3osKb76o1IlbQcE83VA\nO1w7wCnsMIffikwOOGPWcoynfsRIuOgMb7+Bm6syVYcWQIlVjSLWqQFdez9YCBaX\nZHO3yhiqTgA3x3U8+I7/UG9zwdOJ3eFRjXpcQ2jHuJbx09YaPqNbcF5rdNiFXpit\n7RTKZq0NT8F2OLMQuKsL/bhrm8bC9IoQhKQy2rkl/AvQ91DKFwfZMosmH/PrT9GS\ncNkyXuwwMeyQ7cFZPn9B800KD4zHHluSRRYTsPycJVvOZERYWWKKg5PlBF2GLV54\nlV46dwB8pTLYO9RkRW9vznZpDCxUj/1k3dxkxFbIHxgcHltS8UnPt7sQezjRo8db\n11Zq3ARzLV1DmStG0HI9m4M3mlcdsXBead01gYsF7Dru+z+miio=\n=KLjL\n-----END PGP SIGNATURE-----",
        "payload": "tree 97ebada0bc7a444c47606d7bfe715dffc1a1dcf3\nparent 22a90186496aea8025316bc5616905ffcf1aeb29\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1635110909 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1635189791 +0300\n\nutil: Use FEATURE_LATEST for wallets created with bitcoin-wallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf60e3a0d30b6da20b6f2e49191328f188d951a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf60e3a0d30b6da20b6f2e49191328f188d951a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf60e3a0d30b6da20b6f2e49191328f188d951a7/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22a90186496aea8025316bc5616905ffcf1aeb29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22a90186496aea8025316bc5616905ffcf1aeb29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22a90186496aea8025316bc5616905ffcf1aeb29"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d8dbbbfdd597942fee16d6635e9637bfc7a88efe",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf60e3a0d30b6da20b6f2e49191328f188d951a7/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf60e3a0d30b6da20b6f2e49191328f188d951a7/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=cf60e3a0d30b6da20b6f2e49191328f188d951a7",
        "patch": "@@ -26,7 +26,7 @@ static void WalletCreate(CWallet* wallet_instance, uint64_t wallet_creation_flag\n {\n     LOCK(wallet_instance->cs_wallet);\n \n-    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+    wallet_instance->SetMinVersion(FEATURE_LATEST);\n     wallet_instance->AddWalletFlags(wallet_creation_flags);\n \n     if (!wallet_instance->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {"
      }
    ]
  },
  {
    "sha": "8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1",
    "node_id": "C_kwDOABII59oAKDgwNzZmOGQ0YzJhYmFmNzRhYjdlYWFjZjljZDQ3MDI3YjlmYWRkZDE",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-10-24T20:04:11Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-10-26T11:37:53Z"
      },
      "message": "util: Add \"importfromcoldcard\" command to bitcoin-wallet tool\n\nColdcard firmware v4.1.3+ supports wallet export via descriptors.",
      "tree": {
        "sha": "57fedb74847125c01c6890991ced3b1be39cca3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57fedb74847125c01c6890991ced3b1be39cca3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmF36JEACgkQQQEIES5+\nqB9sTA/+Pv9Ku1ZTH/1ylNZQ2brF56TtE/hRo4Ag/cy7UqQECxBXLiZU4Q1NxjLs\n7FczJy8SZLWDQAiqwQeUonD+ZRLhCFIb++mKo0DDw2pcbPRAmJDtdKrXlH5OOBYm\n2nqKvqpBwZXbH6avFJ4Ma9bMyWtdBq8cF4Gzzhf1uAaUP2Rc+Ika7q8cyLm57oOO\n+VvYt+tmUGvdejjqvCWq7Vq0UZX1a02z9BawreC5sYOBHRmqo+93RV4/e+1lCdih\nkFLqCRS2qKM+2MZiLo/jIeGyDYlBDCTedGN2IRoO+UQ2ggn2JTqEKRc49+m8PeBp\n42W7bTDlwuV9Y4nmeAz9TX0PoXBsZFD8xG3VMxJgOz7vq/yrQufoOJZtcRRJaysd\n2WtCXZ3SbuVn+hpL9ncO1PSVvrR+YthY5e+rVAdJreRMjJyoKMcENxME2wzfk28y\nk2FaNJe4MCtUbULZ/SG1whIR7fYzPLt56q9eaYHNwDFc02lheJw18jt9q9UsxYKG\nYb0Uh2wYak7mj+Om5LU/grjimspArE6ijsosjxxJzifQZYbIavuGfMrzF3sJYzrZ\np6YLO5sCnsgpWiVYFw2i3cr0qaxn2VjeKveLCOgoVv6sm81w62SD790ATHxDt0CB\n4uRRLg5TvUjhIqG/X7EcpMYoloK1OAWMlYDK1HQnbmpTtEtiCpQ=\n=nNaa\n-----END PGP SIGNATURE-----",
        "payload": "tree 57fedb74847125c01c6890991ced3b1be39cca3f\nparent cf60e3a0d30b6da20b6f2e49191328f188d951a7\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1635105851 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1635248273 +0300\n\nutil: Add \"importfromcoldcard\" command to bitcoin-wallet tool\n\nColdcard firmware v4.1.3+ supports wallet export via descriptors.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf60e3a0d30b6da20b6f2e49191328f188d951a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf60e3a0d30b6da20b6f2e49191328f188d951a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf60e3a0d30b6da20b6f2e49191328f188d951a7"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 79,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8d3795dc3cf169bbb54064a0a6489ee30d1ffcf6",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1",
        "patch": "@@ -39,6 +39,7 @@ static void SetupWalletToolArgs(ArgsManager& argsman)\n     argsman.AddCommand(\"salvage\", \"Attempt to recover private keys from a corrupt wallet. Warning: 'salvage' is experimental.\");\n     argsman.AddCommand(\"dump\", \"Print out all of the wallet key-value records\");\n     argsman.AddCommand(\"createfromdump\", \"Create new wallet file from dumped records\");\n+    argsman.AddCommand(\"importfromcoldcard\", \"Create new wallet file and import descriptors from Coldcard wallet\");\n }\n \n static bool WalletAppInit(ArgsManager& args, int argc, char* argv[])"
      },
      {
        "sha": "5655e4aff09d4e3e33ff159bc02a64fb25a70d32",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1",
        "patch": "@@ -1453,7 +1453,7 @@ RPCHelpMan importmulti()\n     };\n }\n \n-static UniValue ProcessDescriptorImport(CWallet& wallet, const UniValue& data, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n+UniValue ProcessDescriptorImport(CWallet& wallet, const UniValue& data, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n {\n     UniValue warnings(UniValue::VARR);\n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "b7163774b38ef7ca6b99ffa5ddd25788646c710e",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 77,
        "deletions": 2,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=8076f8d4c2abaf74ab7eaacf9cd47027b9faddd1",
        "patch": "@@ -3,13 +3,21 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <fs.h>\n+#include <tinyformat.h>\n+#include <univalue.h>\n #include <util/system.h>\n #include <util/translation.h>\n #include <wallet/dump.h>\n #include <wallet/salvage.h>\n #include <wallet/wallet.h>\n #include <wallet/walletutil.h>\n \n+#include <cassert>\n+#include <string>\n+\n+UniValue ProcessDescriptorImport(CWallet& wallet, const UniValue& data, const int64_t timestamp)\n+    EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet);\n+\n namespace WalletTool {\n \n // The standard wallet deleter function blocks on the validation interface\n@@ -29,6 +37,10 @@ static void WalletCreate(CWallet* wallet_instance, uint64_t wallet_creation_flag\n     wallet_instance->SetMinVersion(FEATURE_LATEST);\n     wallet_instance->AddWalletFlags(wallet_creation_flags);\n \n+    if (wallet_instance->IsWalletFlagSet(WALLET_FLAG_BLANK_WALLET)) {\n+        return;\n+    }\n+\n     if (!wallet_instance->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n         auto spk_man = wallet_instance->GetOrCreateLegacyScriptPubKeyMan();\n         spk_man->SetupGeneration(false);\n@@ -106,14 +118,40 @@ static void WalletShowInfo(CWallet* wallet_instance)\n     tfm::format(std::cout, \"Address Book: %zu\\n\", wallet_instance->m_address_book.size());\n }\n \n+static bool ReadAndParseColdcardFile(const fs::path& path, UniValue& decriptors)\n+{\n+    fsbridge::ifstream file;\n+    file.open(path);\n+    if (!file.is_open()) {\n+        tfm::format(std::cerr, \"%s. Please check permissions.\\n\", fs::PathToString(path));\n+        return false;\n+    }\n+\n+    std::string line;\n+    while (std::getline(file, line)) {\n+        if (line.substr(0, 22) == \"importdescriptors \\'[{\\\"\") break;\n+    }\n+\n+    file.close();\n+\n+    decriptors.clear();\n+    if (!decriptors.read(line.substr(19, line.size() - 20))) {\n+        tfm::format(std::cerr, \"Unable to parse %s\\n\", fs::PathToString(path));\n+        return false;\n+    }\n+\n+    assert(decriptors.isArray());\n+    return true;\n+}\n+\n bool ExecuteWalletToolFunc(const ArgsManager& args, const std::string& command)\n {\n     if (args.IsArgSet(\"-format\") && command != \"createfromdump\") {\n         tfm::format(std::cerr, \"The -format option can only be used with the \\\"createfromdump\\\" command.\\n\");\n         return false;\n     }\n-    if (args.IsArgSet(\"-dumpfile\") && command != \"dump\" && command != \"createfromdump\") {\n-        tfm::format(std::cerr, \"The -dumpfile option can only be used with the \\\"dump\\\" and \\\"createfromdump\\\" commands.\\n\");\n+    if (args.IsArgSet(\"-dumpfile\") && command != \"dump\" && command != \"createfromdump\" && command != \"importfromcoldcard\") {\n+        tfm::format(std::cerr, \"The -dumpfile option can only be used with the \\\"dump\\\", \\\"createfromdump\\\" and \\\"importfromcoldcard\\\" commands.\\n\");\n         return false;\n     }\n     if (args.IsArgSet(\"-descriptors\") && command != \"create\") {\n@@ -205,6 +243,43 @@ bool ExecuteWalletToolFunc(const ArgsManager& args, const std::string& command)\n             tfm::format(std::cerr, \"%s\\n\", error.original);\n         }\n         return ret;\n+    } else if (command == \"importfromcoldcard\") {\n+        std::string filename = gArgs.GetArg(\"-dumpfile\", \"\");\n+        if (filename.empty()) {\n+            tfm::format(std::cerr, \"To use importfromcoldcard, -dumpfile=<filename> must be provided.\\n\");\n+            return false;\n+        }\n+\n+        const fs::path import_file_path{fs::absolute(fs::PathFromString(filename))};\n+        if (!fs::exists(import_file_path)) {\n+            tfm::format(std::cerr, \"File %s does not exist.\\n\", fs::PathToString(import_file_path));\n+            return false;\n+        }\n+\n+        UniValue descriptors;\n+        if (!ReadAndParseColdcardFile(import_file_path, descriptors)) {\n+            return false;\n+        }\n+\n+        DatabaseOptions options;\n+        options.require_create = true;\n+        options.create_flags |= WALLET_FLAG_DESCRIPTORS;\n+        options.create_flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        options.create_flags |= WALLET_FLAG_BLANK_WALLET;\n+        options.require_format = DatabaseFormat::SQLITE;\n+        std::shared_ptr<CWallet> wallet_instance = MakeWallet(name, path, options);\n+        if (!wallet_instance) {\n+            return false;\n+        }\n+\n+        LOCK(wallet_instance->cs_wallet);\n+        for (const UniValue& descriptor : descriptors.getValues()) {\n+            const UniValue result = ::ProcessDescriptorImport(*wallet_instance, descriptor, 0);\n+            tfm::format(std::cerr, \"%s\\n\", result.write(2));\n+        }\n+\n+        WalletShowInfo(wallet_instance.get());\n+        wallet_instance->Close();\n     } else {\n         tfm::format(std::cerr, \"Invalid command: %s\\n\", command);\n         return false;"
      }
    ]
  }
]