DrahtBot,2020-01-17 14:57:43,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-575659408,575659408,
practicalswift,2020-01-17 16:13:22,"Concept ACK\n\nIn addition to binary bloat reduction I assume this can't hurt from a deterministic builds perspective too.\n\nFWIW: Chromium builds with `-fno-ident` IIRC.",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-575691007,575691007,
laanwj,2020-01-17 16:25:27,"ACK on passing this for the gitian / distributed binaries.\n\nI'm less sure this is something that always needs to be passed by the build system, even for builds from sources and distro packages (which will have their own policy in regard to this).",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-575695882,575695882,
practicalswift,2020-01-18 12:26:02,"> I'm less sure this is something that always needs to be passed by the build system, even for builds from sources and distro packages (which will have their own policy in regard to this).\n\nWhat could be the drawback? Just curious :)",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-575894174,575894174,
DrahtBot,2020-01-18 17:50:14,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit a654626f076a72416a3d354218d7107571d6caaf<br>(master) | commit 24a38f4e743547dbf25167106b3e470080bbf300<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`7895a840c95d5b33...`](https://drahtbot.space/gitian/bitcoin/bitcoin/a654626f076a72416a3d354218d7107571d6caaf/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-575922651,575922651,
laanwj,2020-01-20 19:52:13,"> What could be the drawback? Just curious :)\n\nWhat if someone is building from source for some platform and wants these idents in the binary for some reason? There's no way to enable them.\n\nHaving done embedded development where the intent is to compile all the software with the same set of compiler flags, I (personally) dislike it if projects provide unnecessary (it doesn't fix a bug or ",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-576410512,576410512,
dongcarl,2020-01-21 16:29:36,"> What if someone is building from source for some platform and wants these idents in the binary for some reason? There's no way to enable them.\n\nTrue, this is worthwhile addition, but let's do that thru gitian descriptors.\n\n> I think we could also add the same flag to our depends hosts; looking for Concept ACK/NACKs on that.\n\nIf we're just doing this for release, then perhaps this is ",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-576763848,576763848,
sipa,2020-01-21 16:32:15,"It's unclear to me what the goal is. Do we care about the 100 bytes or so this adds to our binary, or is this intended to improve some form of privacy?",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-576765072,576765072,
MarcoFalke,2020-01-21 18:12:40,"Agree with @sipa. I don't see the danger of having these strings in the gitian/guix binary. Especially if this is going to be conditionally applied to only gitian builds, it might lead to further issues and build file code complexity.",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-576809135,576809135,
fanquake,2020-01-21 23:41:50,"> 100 bytes or so this adds to our binary\n\nThis currently adds > 3600 bytes to the Windows binaries. \n\n> I don't see the danger of having these strings in the gitian/guix binary.\n\nI don't see a reason for us to be shipping around 1000s of bytes of useless data. Can you elaborate on the build system issues / complexity you foresee? We are already applying certain flags conditionally dur",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-576938870,576938870,
sipa,2020-01-21 23:45:28,I think even 3600 bytes compared to a multi-megabyte binary is negligible.,https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-576939863,576939863,
luke-jr,2020-01-27 16:00:55,"Agree with @laanwj: Fine for the gitian binaries, but leave normal builds alone. If the user wants `-fno-ident`, he can specify it or even make it a default option.",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-578817342,578817342,
DrahtBot,2020-02-10 12:03:26,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-584090654,584090654,
fanquake,2020-02-13 10:25:36,"Rebased, updated to just pass `-fno-ident` in the Windows gitian descriptor and added additional info to the PR description. Comparing two depends builds, this removes > 6000 bytes from the binary.",https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-585656377,585656377,
practicalswift,2020-02-13 11:03:03,ACK 530d02addbfea01ab24a2acd17af456a1e7b798a,https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-585671096,585671096,
DrahtBot,2020-02-17 02:19:39,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 2a2631fb0dc781504df0f3fe8b42f21cbdb6f20d<br>(master) | commit 85aa65d030fe540d87a29436af180124f64bb3da<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`51392e3413128845...`](https://drahtbot.space/gitian/bitcoin/bitcoin/2a2631fb0dc781504df0f3fe8b42f21cbdb6f20d/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-586790349,586790349,
laanwj,2020-02-17 11:05:35,ACK 530d02addbfea01ab24a2acd17af456a1e7b798a,https://github.com/bitcoin/bitcoin/pull/17948#issuecomment-586940460,586940460,
