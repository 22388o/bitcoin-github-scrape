[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855381333",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#issuecomment-855381333",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22167",
    "id": 855381333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTM4MTMzMw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-06T11:10:34Z",
    "updated_at": "2021-06-06T11:10:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK: as we all know by know explicit is better than implicit :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855381333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855409202",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#issuecomment-855409202",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22167",
    "id": 855409202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTQwOTIwMg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-06T14:34:48Z",
    "updated_at": "2021-11-03T06:15:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22981](https://github.com/bitcoin/bitcoin/pull/22981) (doc: Fix incorrect C++ named args by MarcoFalke)\n* [#19690](https://github.com/bitcoin/bitcoin/pull/19690) (util: improve FindByte() performance by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855409202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855562050",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#issuecomment-855562050",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22167",
    "id": 855562050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTU2MjA1MA==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-07T04:14:57Z",
    "updated_at": "2021-06-07T04:14:57Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855562050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864086143",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#issuecomment-864086143",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22167",
    "id": 864086143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDA4NjE0Mw==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-18T14:38:04Z",
    "updated_at": "2021-06-18T14:38:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864086143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/957882022",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#issuecomment-957882022",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22167",
    "id": 957882022,
    "node_id": "IC_kwDOABII5845GB6m",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T16:03:56Z",
    "updated_at": "2021-11-02T16:03:56Z",
    "author_association": "MEMBER",
    "body": "Added a commit to  remove MakeUCharSpan where not needed ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/957882022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/957914034",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#issuecomment-957914034",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22167",
    "id": 957914034,
    "node_id": "IC_kwDOABII5845GJuy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T16:22:15Z",
    "updated_at": "2021-11-02T16:22:15Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, though I wonder if this alternative approach isn't better:\r\n\r\nC++20 `std::span` has `std::as_bytes` and `std::as_writable_bytes` functions to convert spans to equivalent spans-to-byte-representation. While we don't have `std::byte` yet, we could introduce equivalent operations that use `unsigned char` instead.\r\n\r\nIf the stream write/read functions were changed to take `Span<(const) unsigned char>`, many of the cases here could very naturally be written as `s.write(AsWritableUChar(Span{arg}));` for example.\r\n\r\nThat needs more invasive changes than what you're aiming for here, but perhaps ones we want to aim for anyway?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/957914034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/960936147",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#issuecomment-960936147",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22167",
    "id": 960936147,
    "node_id": "IC_kwDOABII5845RrjT",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T13:32:24Z",
    "updated_at": "2021-11-04T13:32:24Z",
    "author_association": "MEMBER",
    "body": "> If the stream write/read functions were changed to take Span<(const) unsigned char>, many of the cases here could very naturally be written as s.write(AsWritableUChar(Span{arg})); for example.\r\n\r\nOk, will do that instead. It will require changing twice as many lines of code, but given that we are starting to use spans consistently, it will likely happen anyway at some point. Combining this Span change with std::byte is \"free\" (doesn't require a larger diff).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/960936147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646259193",
    "pull_request_review_id": 676974594,
    "id": 646259193,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjI1OTE5Mw==",
    "diff_hunk": "@@ -47,87 +48,85 @@ static const unsigned int MAX_VECTOR_ALLOCATE = 5000000;\n struct deserialize_type {};\n constexpr deserialize_type deserialize {};\n \n-//! Safely convert odd char pointer types to standard ones.\n-inline char* CharCast(char* c) { return c; }\n-inline char* CharCast(unsigned char* c) { return (char*)c; }\n-inline const char* CharCast(const char* c) { return c; }\n-inline const char* CharCast(const unsigned char* c) { return (const char*)c; }\n+//! Safely convert a data pointer to a uint8_t data pointer.\n+inline uint8_t* Uint8Ptr(void* data) { return reinterpret_cast<uint8_t*>(data); }\n+inline const uint8_t* Uint8Ptr(const void* data) { return reinterpret_cast<const uint8_t*>(data); }\n \n /*\n  * Lowest-level serialization and conversion.\n  * @note Sizes of these types are verified in the tests\n  */\n template<typename Stream> inline void ser_writedata8(Stream &s, uint8_t obj)\n {\n-    s.write((char*)&obj, 1);",
    "path": "src/serialize.h",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa1db77edfcb1a004845cd69e45fe7f1074b1e71",
    "original_commit_id": "fa2e0230f117570efa8d957d7ccec7bb8f0abbed",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `Uint8Ptr` unnecessary as this is already `uint8_t*`",
    "created_at": "2021-06-07T04:12:58Z",
    "updated_at": "2021-06-07T04:12:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r646259193",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646259193"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r646259193"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646259193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 62,
    "original_line": 62,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646323210",
    "pull_request_review_id": 677054953,
    "id": 646323210,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjMyMzIxMA==",
    "diff_hunk": "@@ -47,87 +48,85 @@ static const unsigned int MAX_VECTOR_ALLOCATE = 5000000;\n struct deserialize_type {};\n constexpr deserialize_type deserialize {};\n \n-//! Safely convert odd char pointer types to standard ones.\n-inline char* CharCast(char* c) { return c; }\n-inline char* CharCast(unsigned char* c) { return (char*)c; }\n-inline const char* CharCast(const char* c) { return c; }\n-inline const char* CharCast(const unsigned char* c) { return (const char*)c; }\n+//! Safely convert a data pointer to a uint8_t data pointer.\n+inline uint8_t* Uint8Ptr(void* data) { return reinterpret_cast<uint8_t*>(data); }\n+inline const uint8_t* Uint8Ptr(const void* data) { return reinterpret_cast<const uint8_t*>(data); }\n \n /*\n  * Lowest-level serialization and conversion.\n  * @note Sizes of these types are verified in the tests\n  */\n template<typename Stream> inline void ser_writedata8(Stream &s, uint8_t obj)\n {\n-    s.write((char*)&obj, 1);",
    "path": "src/serialize.h",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa1db77edfcb1a004845cd69e45fe7f1074b1e71",
    "original_commit_id": "fa2e0230f117570efa8d957d7ccec7bb8f0abbed",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think I'll keep this as is for symmetry with the other helpers.",
    "created_at": "2021-06-07T07:08:15Z",
    "updated_at": "2021-06-07T07:08:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r646323210",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646323210"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r646323210"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/646323210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 62,
    "original_line": 62,
    "side": "LEFT",
    "in_reply_to_id": 646259193
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741249026",
    "pull_request_review_id": 795625807,
    "id": 741249026,
    "node_id": "PRRC_kwDOABII584sLpAC",
    "diff_hunk": "@@ -17,7 +17,7 @@\n static void DeserializeBlockTest(benchmark::Bench& bench)\n {\n     CDataStream stream(benchmark::data::block413567, SER_NETWORK, PROTOCOL_VERSION);\n-    char a = '\\0';\n+    uint8_t a{'\\0'};",
    "path": "src/bench/checkblock.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "fa1db77edfcb1a004845cd69e45fe7f1074b1e71",
    "original_commit_id": "fa4238e70ff7f1055044a746c1729e756be9a38e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: for something that looks like an integer type, I find initializing with 0 (`uint8_t a{0};`) more naturally looking than a char literal.",
    "created_at": "2021-11-02T16:08:31Z",
    "updated_at": "2021-11-02T16:08:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r741249026",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741249026"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r741249026"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741249026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 20,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741253294",
    "pull_request_review_id": 795631566,
    "id": 741253294,
    "node_id": "PRRC_kwDOABII584sLqCu",
    "diff_hunk": "@@ -196,7 +195,7 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     FORMATTER_METHODS(cls, obj)\n \n #ifndef CHAR_EQUALS_INT8\n-template<typename Stream> inline void Serialize(Stream& s, char a    ) { ser_writedata8(s, a); } // TODO Get rid of bare char\n+template<typename Stream> void Serialize(Stream&, char) { static_assert(ALWAYS_FALSE<Stream>, \"char serialization forbidden use uint8_t or int8_t\"); }",
    "path": "src/serialize.h",
    "position": 117,
    "original_position": 117,
    "commit_id": "fa1db77edfcb1a004845cd69e45fe7f1074b1e71",
    "original_commit_id": "fa4238e70ff7f1055044a746c1729e756be9a38e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this can be written more simply as `template<typename Stream> void Serialize(Stream&, char) = delete;` (though perhaps with a slightly less clear error message).",
    "created_at": "2021-11-02T16:13:03Z",
    "updated_at": "2021-11-02T16:13:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r741253294",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741253294"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22167#discussion_r741253294"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22167"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741253294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 198,
    "original_line": 198,
    "side": "RIGHT"
  }
]