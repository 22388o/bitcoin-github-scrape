[
  {
    "sha": "fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTBiM2RhMzZjZDdjZjBhYWRhMjJmMmQ0NTkyOTZiODEyNzRjMmY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-30T20:22:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-30T20:22:42Z"
      },
      "message": "Squashed 'src/univalue/' changes from 7890db99d6..5a58a46671\n\n5a58a46671 Merge #21: Remove hand-coded UniValue destructor.\nb4cdfc4f47 Remove hand-coded UniValue destructor.\n7fba60b5ad Merge #17: [docs] Update readme\n4577454e7e Merge #13: Fix typo\nac7e73cda8 [docs] Update readme\n4a4964729b Fix typo\n\ngit-subtree-dir: src/univalue\ngit-subtree-split: 5a58a46671d3c1711e93d2fc7961085515c8c7a7",
      "tree": {
        "sha": "861eba80062c81139528c3ee7ebfbdece3bda5e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/861eba80062c81139528c3ee7ebfbdece3bda5e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0b3da36cd7cf0aada22f2d459296b81274c2f9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc287c98f8b33576f3c71db02a232106ef0e57d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc287c98f8b33576f3c71db02a232106ef0e57d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc287c98f8b33576f3c71db02a232106ef0e57d9"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 6,
      "deletions": 18
    },
    "files": [
      {
        "sha": "7c62c33970532edee0337d3c9521633187772eca",
        "filename": "README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 16,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0b3da36cd7cf0aada22f2d459296b81274c2f9/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0b3da36cd7cf0aada22f2d459296b81274c2f9/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
        "patch": "@@ -12,21 +12,10 @@ an arbitrary depth.\n This class is aligned with the JSON standard, [RFC\n 7159](https://tools.ietf.org/html/rfc7159.html).\n \n-## Installation\n+## Library usage\n \n-This project is a standard GNU\n-[autotools](https://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html)\n-project.  Build and install instructions are available in the `INSTALL`\n-file provided with GNU autotools.\n-\n-```\n-$ ./autogen.sh\n-$ ./configure\n-$ make\n-```\n-\n-## Design\n-\n-UniValue provides a single dynamic RAII C++ object class,\n-and minimizes template use (contra json_spirit).\n+This is a fork of univalue used by Bitcoin Core. It is not maintained for usage\n+by other projects. Notably, the API may break in non-backward-compatible ways.\n \n+Other projects looking for a maintained library should use the upstream\n+univalue at https://github.com/jgarzik/univalue."
      },
      {
        "sha": "608051635335b8cd81a148d87bf2ce8bec62d28a",
        "filename": "include/univalue.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0b3da36cd7cf0aada22f2d459296b81274c2f9/include/univalue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0b3da36cd7cf0aada22f2d459296b81274c2f9/include/univalue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/include/univalue.h?ref=fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
        "patch": "@@ -47,7 +47,6 @@ class UniValue {\n         std::string s(val_);\n         setStr(s);\n     }\n-    ~UniValue() {}\n \n     void clear();\n "
      },
      {
        "sha": "0ad61465452eed37eca2cd5a4f14daa6f6989eac",
        "filename": "lib/univalue_get.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0b3da36cd7cf0aada22f2d459296b81274c2f9/lib/univalue_get.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0b3da36cd7cf0aada22f2d459296b81274c2f9/lib/univalue_get.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/lib/univalue_get.cpp?ref=fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
        "patch": "@@ -35,7 +35,7 @@ bool ParseInt32(const std::string& str, int32_t *out)\n     errno = 0; // strtol will not set errno if valid\n     long int n = strtol(str.c_str(), &endp, 10);\n     if(out) *out = (int32_t)n;\n-    // Note that strtol returns a *long int*, so even if strtol doesn't report a over/underflow\n+    // Note that strtol returns a *long int*, so even if strtol doesn't report an over/underflow\n     // we still have to check that the returned value is within the range of an *int32_t*. On 64-bit\n     // platforms the size of these types may be different.\n     return endp && *endp == 0 && !errno &&"
      }
    ]
  },
  {
    "sha": "fa439e88af944082875e1fdb1cd8bb5a74b88b56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQzOWU4OGFmOTQ0MDgyODc1ZTFmZGIxY2Q4YmI1YTc0Yjg4YjU2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-30T20:27:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-30T20:24:02Z"
      },
      "message": "Update univalue subtree",
      "tree": {
        "sha": "d17749e400e5be1dba10d2d6b6c8ad79ac02fdba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d17749e400e5be1dba10d2d6b6c8ad79ac02fdba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa439e88af944082875e1fdb1cd8bb5a74b88b56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhSVAv/X/IHhKugGZB8FA3yHYKDTBXZ6KUKgSIJJRZ91AhR0nQmJqwN2e5xjf1/\niKOO9VaJ4AmQ8r7VSMfkHEDgYWwHaMBS4tB9uA5D6UFn6xXG/0Gno/wB+pS1kju6\nWIjZTXhtiguxda1wNA1YoDS0bHMSVJ4Xd+CwOitMY6P2FKvSSeo4quj+ahk3KVUP\ncqdd6WFUj3Olltz32N7v1ANPDEd51RbAjRJB4q06Tul7xvvI0wxDiRdm06gW3Hlg\nR/3q4jKYSCMRTtFFJWk5TuemBipJ7NcHxFGa5Mb8BZUfpJCV3uxYFWFhPTuEMf0d\nXfUMdseTbmGwkAz9H+iF9DgCFaPPGP3BGRACYr1biP1/6jX/3uTuOkXDtLrXs47B\nSA61kz2SeRuSXBWPvsVnvvvXlR7c8CkNo5aWJoao6oxG6aCmARZllEBAudifL39/\n4khJ1Q7N7+JYu51uK+xvKK+fxxEI3Q57nP1n22MrMSbyfd+5i/AUWN11WjJZ2F/s\nFiIFYmG0\n=CnIp\n-----END PGP SIGNATURE-----",
        "payload": "tree d17749e400e5be1dba10d2d6b6c8ad79ac02fdba\nparent 341e8d355d1a74aadb3a88a12a58cfda6ca262bc\nparent fa0b3da36cd7cf0aada22f2d459296b81274c2f9\nauthor MarcoFalke <falke.marco@gmail.com> 1572467247 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1572467042 -0400\n\nUpdate univalue subtree\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa439e88af944082875e1fdb1cd8bb5a74b88b56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa439e88af944082875e1fdb1cd8bb5a74b88b56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa439e88af944082875e1fdb1cd8bb5a74b88b56/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "341e8d355d1a74aadb3a88a12a58cfda6ca262bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/341e8d355d1a74aadb3a88a12a58cfda6ca262bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/341e8d355d1a74aadb3a88a12a58cfda6ca262bc"
      },
      {
        "sha": "fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0b3da36cd7cf0aada22f2d459296b81274c2f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0b3da36cd7cf0aada22f2d459296b81274c2f9"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 6,
      "deletions": 18
    },
    "files": [
      {
        "sha": "7c62c33970532edee0337d3c9521633187772eca",
        "filename": "src/univalue/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 16,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa439e88af944082875e1fdb1cd8bb5a74b88b56/src/univalue/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa439e88af944082875e1fdb1cd8bb5a74b88b56/src/univalue/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/README.md?ref=fa439e88af944082875e1fdb1cd8bb5a74b88b56",
        "patch": "@@ -12,21 +12,10 @@ an arbitrary depth.\n This class is aligned with the JSON standard, [RFC\n 7159](https://tools.ietf.org/html/rfc7159.html).\n \n-## Installation\n+## Library usage\n \n-This project is a standard GNU\n-[autotools](https://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html)\n-project.  Build and install instructions are available in the `INSTALL`\n-file provided with GNU autotools.\n-\n-```\n-$ ./autogen.sh\n-$ ./configure\n-$ make\n-```\n-\n-## Design\n-\n-UniValue provides a single dynamic RAII C++ object class,\n-and minimizes template use (contra json_spirit).\n+This is a fork of univalue used by Bitcoin Core. It is not maintained for usage\n+by other projects. Notably, the API may break in non-backward-compatible ways.\n \n+Other projects looking for a maintained library should use the upstream\n+univalue at https://github.com/jgarzik/univalue."
      },
      {
        "sha": "608051635335b8cd81a148d87bf2ce8bec62d28a",
        "filename": "src/univalue/include/univalue.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa439e88af944082875e1fdb1cd8bb5a74b88b56/src/univalue/include/univalue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa439e88af944082875e1fdb1cd8bb5a74b88b56/src/univalue/include/univalue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/include/univalue.h?ref=fa439e88af944082875e1fdb1cd8bb5a74b88b56",
        "patch": "@@ -47,7 +47,6 @@ class UniValue {\n         std::string s(val_);\n         setStr(s);\n     }\n-    ~UniValue() {}\n \n     void clear();\n "
      },
      {
        "sha": "0ad61465452eed37eca2cd5a4f14daa6f6989eac",
        "filename": "src/univalue/lib/univalue_get.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa439e88af944082875e1fdb1cd8bb5a74b88b56/src/univalue/lib/univalue_get.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa439e88af944082875e1fdb1cd8bb5a74b88b56/src/univalue/lib/univalue_get.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_get.cpp?ref=fa439e88af944082875e1fdb1cd8bb5a74b88b56",
        "patch": "@@ -35,7 +35,7 @@ bool ParseInt32(const std::string& str, int32_t *out)\n     errno = 0; // strtol will not set errno if valid\n     long int n = strtol(str.c_str(), &endp, 10);\n     if(out) *out = (int32_t)n;\n-    // Note that strtol returns a *long int*, so even if strtol doesn't report a over/underflow\n+    // Note that strtol returns a *long int*, so even if strtol doesn't report an over/underflow\n     // we still have to check that the returned value is within the range of an *int32_t*. On 64-bit\n     // platforms the size of these types may be different.\n     return endp && *endp == 0 && !errno &&"
      }
    ]
  }
]