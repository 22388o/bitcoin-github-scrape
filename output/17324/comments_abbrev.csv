MarcoFalke,2019-10-30 20:27:04,The last update was more than a year ago: https://github.com/bitcoin/bitcoin/pull/14164#issue-213911287,https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548097609,548097609,
laanwj,2019-10-31 08:25:36,"There have also been some changes last year in https://github.com/jgarzik/univalue/commits/master, do we want to include them?",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548262520,548262520,
jnewbery,2019-10-31 13:34:26,ACK fa439e88af944082875e1fdb1cd8bb5a74b88b56,https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548377376,548377376,
MarcoFalke,2019-10-31 14:20:50,"> There have also been some changes last year in https://github.com/jgarzik/univalue/commits/master, do we want to include them?\n\nWe check the return value of `Univalue::read` everywhere, so I'd rather not add some clumsy `goto`. I'd prefer a nodiscard attribute.",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548398533,548398533,
jgarzik,2019-10-31 14:39:35,"> > There have also been some changes last year in https://github.com/jgarzik/univalue/commits/master, do we want to include them?\n> \n> We check the return value of `Univalue::read` everywhere, so I'd rather not add some clumsy `goto`. I'd prefer a nodiscard attribute.\n\nCan you specify which commit or line of code this refers to?   Bitcoin Core is a major user of univalue, and we want to a",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548407318,548407318,
DrahtBot,2019-10-31 18:26:56,"### Bench\n\n![microbenches](https://user-images.githubusercontent.com/39886733/67975419-66600a80-fbea-11e9-8e54-306fe999d12a.png)\n\n\n#### Bench config\n\nBitcoinperf commit e671f5d5dfd49724af3b234ebfd1076345822e92\nOS: Ubuntu Eoan\nYML:\n\n```\n---\n\n# Cache a built bitcoin src directory and restore it from the cache on\n# subsequent runs.\ncache_build: false\n\n# If true, th",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548508728,548508728,
DrahtBot,2019-10-31 23:26:41,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 08e29473126d5cc4df6d2b3f368c6f6f641c0bd8<br>(master) | commit b6dee2867e03b1b6d5c3a5524bdaf0d383e23cee<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`00b1465b4199e5a9...`](https://drahtbot.space/gitian/bitcoin/bitcoin/08e29473126d5cc4df6d2b3f368c6f6f641c0bd8/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548607819,548607819,
laanwj,2019-11-01 10:21:34,"> We check the return value of Univalue::read everywhere, so I'd rather not add some clumsy goto. I'd prefer a nodiscard attribute.\n\nOk. Thanks for the explanation It's useful to document why we're not taking certain changes from upstream.\n\nACK fa439e88af944082875e1fdb1cd8bb5a74b88b56",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548739088,548739088,
jgarzik,2019-11-01 11:25:15,"> > We check the return value of Univalue::read everywhere, so I'd rather not add some clumsy goto. I'd prefer a nodiscard attribute.\n> \n> Ok. Thanks for the explanation It's useful to document why we're not taking certain changes from upstream.\n\nIt would be better for the trees not to diverge.  Will look at removing ""clumsy goto"" related code, and work to eliminate this code-divergence is",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-548755384,548755384,
luke-jr,2019-11-05 18:22:45,"The so-called ""clumsy goto"" in this case looks like pretty reasonable use of goto...",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-549953172,549953172,
MarcoFalke,2019-11-05 18:26:32,We don't use `goto ` anywhere else in the code base and this case can be replaced with a one line helper function that clears the Univalue and returns false.,https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-549954804,549954804,
laanwj,2019-11-05 21:20:36,"Also, while it has definite uses in C, the use of `goto` is generally unnecessary in modern C++.",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-550025569,550025569,
MarcoFalke,2019-11-12 23:03:08,"Speedup for gcc: https://codespeed.bitcoinperf.com/timeline/?exe=3%2C4%2C2%2C1%2C5&base=1%2B23&ben=micro.gcc.RpcMempool&env=1&revs=50&equid=off&quarts=on&extr=on\nand: https://codespeed.bitcoinperf.com/timeline/?exe=3%2C4%2C2%2C1%2C5&base=1%2B23&ben=micro.gcc.BlockToJsonVerbose&env=1&revs=50&equid=off&quarts=on&extr=on\n\n\nNo speedup for clang: https://codespeed.bitcoinperf.com/timeline/?exe=",https://github.com/bitcoin/bitcoin/pull/17324#issuecomment-553157638,553157638,
