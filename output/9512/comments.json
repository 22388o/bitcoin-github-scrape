[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271950266",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-271950266",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 271950266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTk1MDI2Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T18:19:23Z",
    "updated_at": "2017-01-11T18:19:23Z",
    "author_association": "MEMBER",
    "body": "I measure a 1.5% slowdown from these changes for the SHA256_32b benchmark (i7-6820HQ CPU @ 2.70GHz).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271950266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272011414",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272011414",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 272011414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjAxMTQxNA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T22:09:33Z",
    "updated_at": "2017-01-11T22:09:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa it's frustrating that the compiler doesn't recognize that pattern and peephole optimize it on platforms that support unaligned reads.  At the same time, we really should be using platform optimized SIMD sha256 on our primary platforms, so the performance of this code won't matter once we do.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272011414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272132864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272132864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 272132864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjEzMjg2NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T10:50:06Z",
    "updated_at": "2017-01-12T10:50:06Z",
    "author_association": "MEMBER",
    "body": "Specifying &0xff for an unsigned char operation will just be ignored by the compiler (this is a no-brainer optimization). I doubt that is the cause of the slowdown.\r\n\r\nI wonder, isn't there some compiler intrinsic for \"non-aligned read of larger type\" that could be detected by autoconf and used if available?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272132864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272275259",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272275259",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 272275259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjI3NTI1OQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T20:32:34Z",
    "updated_at": "2017-01-12T20:32:34Z",
    "author_association": "MEMBER",
    "body": "Updated to use a different approach to avoiding unaligned access, which seems as fast as master for the SHA256_32b benchmark (or even faster, I consistently across different runs see a minimum duration speedup of 0.02-0.025%).\r\n\r\nI've also added a commit to remove the use of boost::dynamic_bitset (which ubsan complains about, though I can't see exactly how or why).\r\n\r\nNow all unit tests and rpc tests run succesfully with `-fsanitize=address -fsanitize=undefined -fsanitize=leak` in GCC 6.2.0.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272275259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272334094",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272334094",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 272334094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjMzNDA5NA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T01:14:52Z",
    "updated_at": "2017-01-13T01:17:11Z",
    "author_association": "MEMBER",
    "body": "utACK individual commits: 5a0b7e4106bc97a7a67bda6bf6fbd7f26d892420 99f001eb52dda703bd326833430054b108de35a1\r\n\r\nNote: I will edit this post as I go, the list with 2 will hopefully grow, maybe up to 6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272334094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272370488",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-272370488",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 272370488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjM3MDQ4OA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-13T06:22:07Z",
    "updated_at": "2017-01-13T06:22:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272370488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273180085",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-273180085",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 273180085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE4MDA4NQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T14:28:19Z",
    "updated_at": "2017-01-17T14:28:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273180085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273181786",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#issuecomment-273181786",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9512",
    "id": 273181786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE4MTc4Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T14:31:42Z",
    "updated_at": "2017-01-17T14:31:42Z",
    "author_association": "MEMBER",
    "body": "utACK 82e8baa",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/273181786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95488219",
    "pull_request_review_id": 16044458,
    "id": 95488219,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NDg4MjE5",
    "diff_hunk": "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
    "path": "src/test/scriptnum_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "4fde6a8b8ba6806054e2ab4add32cc301624c300",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "maybe define these constants ourselves rather than inlining them?",
    "created_at": "2017-01-11T00:17:23Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95488219",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95488219"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95488219"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95488219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571569",
    "pull_request_review_id": 16129835,
    "id": 95571569,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NTcxNTY5",
    "diff_hunk": "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |",
    "path": "src/crypto/common.h",
    "position": null,
    "original_position": 31,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "4fde6a8b8ba6806054e2ab4add32cc301624c300",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Interesting. This would also have failed on CPUs that don't support non-aligned reads (though I know of no such instances reported).",
    "created_at": "2017-01-11T12:47:51Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571569",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571569"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571569"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 26,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571816",
    "pull_request_review_id": 16130087,
    "id": 95571816,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NTcxODE2",
    "diff_hunk": "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
    "path": "src/test/scriptnum_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "4fde6a8b8ba6806054e2ab4add32cc301624c300",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What is the problem that sanitize reports here? I don't understand the rationale for using \"40\" here.",
    "created_at": "2017-01-11T12:49:41Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571816",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571816"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95571816"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95571816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624023",
    "pull_request_review_id": 16185633,
    "id": 95624023,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjI0MDIz",
    "diff_hunk": "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
    "path": "src/test/scriptnum_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "4fde6a8b8ba6806054e2ab4add32cc301624c300",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've just replaced them with integer constants and added a comment.",
    "created_at": "2017-01-11T17:05:22Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624023",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624023"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624023"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624023/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT",
    "in_reply_to_id": 95488219
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624120",
    "pull_request_review_id": 16185729,
    "id": 95624120,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjI0MTIw",
    "diff_hunk": "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |",
    "path": "src/crypto/common.h",
    "position": null,
    "original_position": 31,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "4fde6a8b8ba6806054e2ab4add32cc301624c300",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Seems ARM supports unaligned reads pretty much since the architecture we support.",
    "created_at": "2017-01-11T17:05:48Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624120",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624120"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624120"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 26,
    "side": "RIGHT",
    "in_reply_to_id": 95571569
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624410",
    "pull_request_review_id": 16186024,
    "id": 95624410,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjI0NDEw",
    "diff_hunk": "@@ -13,7 +13,7 @@\n BOOST_FIXTURE_TEST_SUITE(scriptnum_tests, BasicTestingSetup)\n \n static const int64_t values[] = \\\n-{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, LONG_MIN, LONG_MAX };\n+{ 0, 1, CHAR_MIN, CHAR_MAX, UCHAR_MAX, SHRT_MIN, USHRT_MAX, INT_MIN, INT_MAX, UINT_MAX, (1LL << 40), (1LL << 40) - 1, -(1LL << 40), 1 - (1LL << 40)};",
    "path": "src/test/scriptnum_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "4fde6a8b8ba6806054e2ab4add32cc301624c300",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Overflow of signed integers is undefined behaviour. These numbers are added/subtracted from eachother, so that behaviour triggers. However, it doesn't matter in practice, as we only use scriptnums up to 4 bytes (which can turn into 5 bytes after arithmetic).",
    "created_at": "2017-01-11T17:07:07Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624410",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624410"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95624410"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95624410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT",
    "in_reply_to_id": 95571816
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661490",
    "pull_request_review_id": 16224887,
    "id": 95661490,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjYxNDkw",
    "diff_hunk": "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;",
    "path": "src/crypto/common.h",
    "position": null,
    "original_position": 45,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "c6400a5ff590ac6f006fa992988101bbfd2005fa",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
    "created_at": "2017-01-11T20:11:55Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661490",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661490"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661490"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 39,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661679",
    "pull_request_review_id": 16224887,
    "id": 95661679,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjYxNjc5",
    "diff_hunk": "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;",
    "path": "src/crypto/common.h",
    "position": null,
    "original_position": 54,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "c6400a5ff590ac6f006fa992988101bbfd2005fa",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
    "created_at": "2017-01-11T20:12:56Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661679",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661679"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661679"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661756",
    "pull_request_review_id": 16224887,
    "id": 95661756,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjYxNzU2",
    "diff_hunk": "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n }\n \n void static inline WriteLE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htole64(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n+    ptr[4] = (x >> 32) & 0xFF;\n+    ptr[5] = (x >> 40) & 0xFF;\n+    ptr[6] = (x >> 48) & 0xFF;\n+    ptr[7] = (x >> 56) & 0xFF;",
    "path": "src/crypto/common.h",
    "position": null,
    "original_position": 67,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "c6400a5ff590ac6f006fa992988101bbfd2005fa",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
    "created_at": "2017-01-11T20:13:23Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661756",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661756"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95661756"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95661756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 59,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662046",
    "pull_request_review_id": 16224887,
    "id": 95662046,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjYyMDQ2",
    "diff_hunk": "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n }\n \n void static inline WriteLE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htole64(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n+    ptr[4] = (x >> 32) & 0xFF;\n+    ptr[5] = (x >> 40) & 0xFF;\n+    ptr[6] = (x >> 48) & 0xFF;\n+    ptr[7] = (x >> 56) & 0xFF;\n }\n \n uint32_t static inline ReadBE32(const unsigned char* ptr)\n {\n-    return be32toh(*((uint32_t*)ptr));\n+    return (((uint32_t)(ptr[0])) << 24) |\n+           (((uint32_t)(ptr[1])) << 16) |\n+           (((uint32_t)(ptr[2])) << 8) |\n+           ((uint32_t)(ptr[3]));\n }\n \n uint64_t static inline ReadBE64(const unsigned char* ptr)\n {\n-    return be64toh(*((uint64_t*)ptr));\n+    return (((uint64_t)(ptr[0])) << 56) |\n+           (((uint64_t)(ptr[1])) << 48) |\n+           (((uint64_t)(ptr[2])) << 40) |\n+           (((uint64_t)(ptr[3])) << 32) |\n+           (((uint64_t)(ptr[4])) << 24) |\n+           (((uint64_t)(ptr[5])) << 16) |\n+           (((uint64_t)(ptr[6])) << 8) |\n+           ((uint64_t)(ptr[7]));\n }\n \n void static inline WriteBE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htobe32(x);\n+    ptr[0] = (x >> 24) & 0xFF;",
    "path": "src/crypto/common.h",
    "position": null,
    "original_position": 95,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "c6400a5ff590ac6f006fa992988101bbfd2005fa",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
    "created_at": "2017-01-11T20:14:55Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662046",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662046"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662046"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662129",
    "pull_request_review_id": 16224887,
    "id": 95662129,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjYyMTI5",
    "diff_hunk": "@@ -5,62 +5,98 @@\n #ifndef BITCOIN_CRYPTO_COMMON_H\n #define BITCOIN_CRYPTO_COMMON_H\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #include <stdint.h>\n \n-#include \"compat/endian.h\"\n-\n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {\n-    return le16toh(*((uint16_t*)ptr));\n+    return ((uint16_t)(ptr[0])) |\n+           (((uint16_t)(ptr[1])) << 8);\n }\n \n uint32_t static inline ReadLE32(const unsigned char* ptr)\n {\n-    return le32toh(*((uint32_t*)ptr));\n+    return ((uint32_t)(ptr[0])) |\n+           (((uint32_t)(ptr[1])) << 8) |\n+           (((uint32_t)(ptr[2])) << 16) |\n+           (((uint32_t)(ptr[3])) << 24);\n }\n \n uint64_t static inline ReadLE64(const unsigned char* ptr)\n {\n-    return le64toh(*((uint64_t*)ptr));\n+    return ((uint64_t)(ptr[0])) |\n+           (((uint64_t)(ptr[1])) << 8) |\n+           (((uint64_t)(ptr[2])) << 16) |\n+           (((uint64_t)(ptr[3])) << 24) |\n+           (((uint64_t)(ptr[4])) << 32) |\n+           (((uint64_t)(ptr[5])) << 40) |\n+           (((uint64_t)(ptr[6])) << 48) |\n+           (((uint64_t)(ptr[7])) << 56);\n }\n \n void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n {\n-    *((uint16_t*)ptr) = htole16(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n }\n \n void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htole32(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n }\n \n void static inline WriteLE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htole64(x);\n+    ptr[0] = x & 0xFF;\n+    ptr[1] = (x >> 8) & 0xFF;\n+    ptr[2] = (x >> 16) & 0xFF;\n+    ptr[3] = (x >> 24) & 0xFF;\n+    ptr[4] = (x >> 32) & 0xFF;\n+    ptr[5] = (x >> 40) & 0xFF;\n+    ptr[6] = (x >> 48) & 0xFF;\n+    ptr[7] = (x >> 56) & 0xFF;\n }\n \n uint32_t static inline ReadBE32(const unsigned char* ptr)\n {\n-    return be32toh(*((uint32_t*)ptr));\n+    return (((uint32_t)(ptr[0])) << 24) |\n+           (((uint32_t)(ptr[1])) << 16) |\n+           (((uint32_t)(ptr[2])) << 8) |\n+           ((uint32_t)(ptr[3]));\n }\n \n uint64_t static inline ReadBE64(const unsigned char* ptr)\n {\n-    return be64toh(*((uint64_t*)ptr));\n+    return (((uint64_t)(ptr[0])) << 56) |\n+           (((uint64_t)(ptr[1])) << 48) |\n+           (((uint64_t)(ptr[2])) << 40) |\n+           (((uint64_t)(ptr[3])) << 32) |\n+           (((uint64_t)(ptr[4])) << 24) |\n+           (((uint64_t)(ptr[5])) << 16) |\n+           (((uint64_t)(ptr[6])) << 8) |\n+           ((uint64_t)(ptr[7]));\n }\n \n void static inline WriteBE32(unsigned char* ptr, uint32_t x)\n {\n-    *((uint32_t*)ptr) = htobe32(x);\n+    ptr[0] = (x >> 24) & 0xFF;\n+    ptr[1] = (x >> 16) & 0xFF;\n+    ptr[2] = (x >> 8) & 0xFF;\n+    ptr[3] = x & 0xFF;\n }\n \n void static inline WriteBE64(unsigned char* ptr, uint64_t x)\n {\n-    *((uint64_t*)ptr) = htobe64(x);\n+    ptr[0] = (x >> 56) & 0xFF;",
    "path": "src/crypto/common.h",
    "position": null,
    "original_position": 104,
    "commit_id": "82e8baab3caaadb1d923d1332c577fb91b9c5747",
    "original_commit_id": "c6400a5ff590ac6f006fa992988101bbfd2005fa",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the & 0xFF is redundant here, no? Unless you think there is some pipelining advantage...",
    "created_at": "2017-01-11T20:15:16Z",
    "updated_at": "2017-01-12T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662129",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662129"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9512#discussion_r95662129"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9512"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95662129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 92,
    "side": "RIGHT"
  }
]