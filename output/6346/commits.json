[
  {
    "sha": "d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzA3ODUzM2ViZDMyYmI1MDcxZjRkYmE4ZTNkOWM1YTNiMWYwZDRj",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-06-29T18:14:02Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-08-06T18:27:52Z"
      },
      "message": "Add OP_RETURN support in createrawtransaction RPC call, add tests.",
      "tree": {
        "sha": "af9075aee4ac16bfbf12e7dd47e11210bfde6832",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af9075aee4ac16bfbf12e7dd47e11210bfde6832"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4fe57da6207c1e5691a1e843d22db571f3f0186",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4fe57da6207c1e5691a1e843d22db571f3f0186",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4fe57da6207c1e5691a1e843d22db571f3f0186"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 45,
      "deletions": 16
    },
    "files": [
      {
        "sha": "9eeca5b7d922d03f3c43f219c8f9f0d894530288",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 16,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
        "patch": "@@ -318,8 +318,9 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n-            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,...}\\n\"\n-            \"\\nCreate a transaction spending the given inputs and sending to the given addresses.\\n\"\n+            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...}\\n\"\n+            \"\\nCreate a transaction spending the given inputs and creating new outputs.\\n\"\n+            \"Outputs can be addresses or data.\\n\"\n             \"Returns hex-encoded raw transaction.\\n\"\n             \"Note that the transaction's inputs are not signed, and\\n\"\n             \"it is not stored in the wallet or transmitted to the network.\\n\"\n@@ -328,23 +329,25 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n             \"1. \\\"transactions\\\"        (string, required) A json array of json objects\\n\"\n             \"     [\\n\"\n             \"       {\\n\"\n-            \"         \\\"txid\\\":\\\"id\\\",  (string, required) The transaction id\\n\"\n+            \"         \\\"txid\\\":\\\"id\\\",    (string, required) The transaction id\\n\"\n             \"         \\\"vout\\\":n        (numeric, required) The output number\\n\"\n             \"       }\\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n-            \"2. \\\"addresses\\\"           (string, required) a json object with addresses as keys and amounts as values\\n\"\n+            \"2. \\\"outputs\\\"             (string, required) a json object with outputs\\n\"\n             \"    {\\n\"\n             \"      \\\"address\\\": x.xxx   (numeric, required) The key is the bitcoin address, the value is the \" + CURRENCY_UNIT + \" amount\\n\"\n-            \"      ,...\\n\"\n+            \"      \\\"data\\\": \\\"hex\\\",     (string, required) The key is \\\"data\\\", the value is hex encoded data\\n\"\n+            \"      ...\\n\"\n             \"    }\\n\"\n-\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"            (string) hex string of the transaction\\n\"\n \n             \"\\nExamples\\n\"\n             + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"address\\\\\\\":0.01}\\\"\")\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"data\\\\\\\":\\\\\\\"00010203\\\\\\\"}\\\"\")\n             + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"address\\\\\\\":0.01}\\\"\")\n+            + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"data\\\\\\\":\\\\\\\"00010203\\\\\\\"}\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -375,19 +378,27 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n     set<CBitcoinAddress> setAddress;\n     vector<string> addrList = sendTo.getKeys();\n     BOOST_FOREACH(const string& name_, addrList) {\n-        CBitcoinAddress address(name_);\n-        if (!address.IsValid())\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+name_);\n \n-        if (setAddress.count(address))\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+name_);\n-        setAddress.insert(address);\n+        if (name_ == \"data\") {\n+            std::vector<unsigned char> data = ParseHexV(sendTo[name_].getValStr(),\"Data\");\n+\n+            CTxOut out(0, CScript() << OP_RETURN << data);\n+            rawTx.vout.push_back(out);\n+        } else {\n+            CBitcoinAddress address(name_);\n+            if (!address.IsValid())\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+name_);\n \n-        CScript scriptPubKey = GetScriptForDestination(address.Get());\n-        CAmount nAmount = AmountFromValue(sendTo[name_]);\n+            if (setAddress.count(address))\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+name_);\n+            setAddress.insert(address);\n \n-        CTxOut out(nAmount, scriptPubKey);\n-        rawTx.vout.push_back(out);\n+            CScript scriptPubKey = GetScriptForDestination(address.Get());\n+            CAmount nAmount = AmountFromValue(sendTo[name_]);\n+\n+            CTxOut out(nAmount, scriptPubKey);\n+            rawTx.vout.push_back(out);\n+        }\n     }\n \n     return EncodeHexTx(rawTx);"
      },
      {
        "sha": "a65572e6f685a0b56df691e33cfcf46ddc4f5f39",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
        "patch": "@@ -110,6 +110,24 @@ BOOST_AUTO_TEST_CASE(rpc_rawsign)\n     BOOST_CHECK(find_value(r.get_obj(), \"complete\").get_bool() == true);\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_createraw_op_return)\n+{\n+    BOOST_CHECK_NO_THROW(CallRPC(\"createrawtransaction [{\\\"txid\\\":\\\"a3b807410df0b60fcb9736768df5823938b2f838694939ba45f3c0a1bff150ed\\\",\\\"vout\\\":0}] {\\\"data\\\":\\\"68656c6c6f776f726c64\\\"}\"));\n+\n+    // Allow more than one data transaction output\n+    BOOST_CHECK_NO_THROW(CallRPC(\"createrawtransaction [{\\\"txid\\\":\\\"a3b807410df0b60fcb9736768df5823938b2f838694939ba45f3c0a1bff150ed\\\",\\\"vout\\\":0}] {\\\"data\\\":\\\"68656c6c6f776f726c64\\\",\\\"data\\\":\\\"68656c6c6f776f726c64\\\"}\"));\n+\n+    // Key not \"data\" (bad address)\n+    BOOST_CHECK_THROW(CallRPC(\"createrawtransaction [{\\\"txid\\\":\\\"a3b807410df0b60fcb9736768df5823938b2f838694939ba45f3c0a1bff150ed\\\",\\\"vout\\\":0}] {\\\"somedata\\\":\\\"68656c6c6f776f726c64\\\"}\"), runtime_error);\n+\n+    // Bad hex encoding of data output\n+    BOOST_CHECK_THROW(CallRPC(\"createrawtransaction [{\\\"txid\\\":\\\"a3b807410df0b60fcb9736768df5823938b2f838694939ba45f3c0a1bff150ed\\\",\\\"vout\\\":0}] {\\\"data\\\":\\\"12345\\\"}\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"createrawtransaction [{\\\"txid\\\":\\\"a3b807410df0b60fcb9736768df5823938b2f838694939ba45f3c0a1bff150ed\\\",\\\"vout\\\":0}] {\\\"data\\\":\\\"12345g\\\"}\"), runtime_error);\n+\n+    // Data 81 bytes long\n+    BOOST_CHECK_NO_THROW(CallRPC(\"createrawtransaction [{\\\"txid\\\":\\\"a3b807410df0b60fcb9736768df5823938b2f838694939ba45f3c0a1bff150ed\\\",\\\"vout\\\":0}] {\\\"data\\\":\\\"010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081\\\"}\"));\n+}\n+\n BOOST_AUTO_TEST_CASE(rpc_format_monetary_values)\n {\n     BOOST_CHECK(ValueFromAmount(0LL).write() == \"0.00000000\");"
      }
    ]
  },
  {
    "sha": "627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Mjc0NjhkMmVhMWY0ZDVkZWE5NTYxZmU3N2FhZjUzZjNhODNiNGQy",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-06-29T18:14:43Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2015-08-06T18:27:52Z"
      },
      "message": "Add support for data-based outputs (OP_RETURN) to bitcoin-tx.",
      "tree": {
        "sha": "1e2af78a2c73dcf4e7a15c6f1eb921f205a623fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e2af78a2c73dcf4e7a15c6f1eb921f205a623fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7078533ebd32bb5071f4dba8e3d9c5a3b1f0d4c"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 66,
      "deletions": 0
    },
    "files": [
      {
        "sha": "82891989598f7ea83152121d7b1a5567b69232d2",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
        "patch": "@@ -15,6 +15,8 @@ EXTRA_DIST += \\\n \ttest/data/tx394b54bb.hex \\\n \ttest/data/txcreate1.hex \\\n \ttest/data/txcreate2.hex \\\n+\ttest/data/txcreatedata1.hex \\\n+\ttest/data/txcreatedata2.hex \\\n \ttest/data/txcreatesign.hex\n \n JSON_TEST_FILES = \\"
      },
      {
        "sha": "97a073174d1084094f312a9e67f0674f3d17ad15",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
        "patch": "@@ -70,6 +70,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n         strUsage += HelpMessageOpt(\"locktime=N\", _(\"Set TX lock time to N\"));\n         strUsage += HelpMessageOpt(\"nversion=N\", _(\"Set TX version to N\"));\n         strUsage += HelpMessageOpt(\"outaddr=VALUE:ADDRESS\", _(\"Add address-based output to TX\"));\n+        strUsage += HelpMessageOpt(\"outdata=[VALUE:]DATA\", _(\"Add data-based output to TX\"));\n         strUsage += HelpMessageOpt(\"outscript=VALUE:SCRIPT\", _(\"Add raw script output to TX\"));\n         strUsage += HelpMessageOpt(\"sign=SIGHASH-FLAGS\", _(\"Add zero or more signatures to transaction\") + \". \" +\n             _(\"This command requires JSON registers:\") +\n@@ -231,6 +232,35 @@ static void MutateTxAddOutAddr(CMutableTransaction& tx, const string& strInput)\n     tx.vout.push_back(txout);\n }\n \n+static void MutateTxAddOutData(CMutableTransaction& tx, const string& strInput)\n+{\n+    CAmount value = 0;\n+\n+    // separate [VALUE:]DATA in string\n+    size_t pos = strInput.find(':');\n+\n+    if (pos==0)\n+        throw runtime_error(\"TX output value not specified\");\n+\n+    if (pos != string::npos) {\n+        // extract and validate VALUE\n+        string strValue = strInput.substr(0, pos);\n+        if (!ParseMoney(strValue, value))\n+            throw runtime_error(\"invalid TX output value\");\n+    }\n+\n+    // extract and validate DATA\n+    string strData = strInput.substr(pos + 1, string::npos);\n+\n+    if (!IsHex(strData))\n+        throw runtime_error(\"invalid TX output data\");\n+\n+    std::vector<unsigned char> data = ParseHex(strData);\n+\n+    CTxOut txout(value, CScript() << OP_RETURN << data);\n+    tx.vout.push_back(txout);\n+}\n+\n static void MutateTxAddOutScript(CMutableTransaction& tx, const string& strInput)\n {\n     // separate VALUE:SCRIPT in string\n@@ -470,6 +500,8 @@ static void MutateTx(CMutableTransaction& tx, const string& command,\n         MutateTxDelOutput(tx, commandVal);\n     else if (command == \"outaddr\")\n         MutateTxAddOutAddr(tx, commandVal);\n+    else if (command == \"outdata\")\n+        MutateTxAddOutData(tx, commandVal);\n     else if (command == \"outscript\")\n         MutateTxAddOutScript(tx, commandVal);\n "
      },
      {
        "sha": "3bf80ca4348a23074f76b71a944a63bac00e4753",
        "filename": "src/test/data/bitcoin-util-test.json",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/test/data/bitcoin-util-test.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/test/data/bitcoin-util-test.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/bitcoin-util-test.json?ref=627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
        "patch": "@@ -56,5 +56,35 @@\n      \"sign=ALL\",\n      \"outaddr=0.001:193P6LtvS4nCnkDvM9uXn1gsSRqh4aDAz7\"],\n     \"output_cmp\": \"txcreatesign.hex\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0\",\n+     \"outdata=4:badhexdata\"],\n+    \"return_code\": 1\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0\",\n+     \"outdata=badhexdata\"],\n+    \"return_code\": 1\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0\",\n+     \"outaddr=0.18:13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\",\n+     \"outdata=4:54686973204f505f52455455524e207472616e73616374696f6e206f7574707574207761732063726561746564206279206d6f646966696564206372656174657261777472616e73616374696f6e2e\"],\n+    \"output_cmp\": \"txcreatedata1.hex\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0\",\n+     \"outaddr=0.18:13tuJJDR2RgArmgfv6JScSdreahzgc4T6o\",\n+     \"outdata=54686973204f505f52455455524e207472616e73616374696f6e206f7574707574207761732063726561746564206279206d6f646966696564206372656174657261777472616e73616374696f6e2e\"],\n+    \"output_cmp\": \"txcreatedata2.hex\"\n   }\n ]"
      },
      {
        "sha": "eccc7604e6f811da521420f7d3b3079b8e4a84df",
        "filename": "src/test/data/txcreatedata1.hex",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/test/data/txcreatedata1.hex",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/test/data/txcreatedata1.hex",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/txcreatedata1.hex?ref=627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
        "patch": "@@ -0,0 +1 @@\n+01000000011f5c38dfcf6f1a5f5a87c416076d392c87e6d41970d5ad5e477a02d66bde97580000000000ffffffff0280a81201000000001976a9141fc11f39be1729bf973a7ab6a615ca4729d6457488ac0084d71700000000526a4c4f54686973204f505f52455455524e207472616e73616374696f6e206f7574707574207761732063726561746564206279206d6f646966696564206372656174657261777472616e73616374696f6e2e00000000"
      },
      {
        "sha": "3c7644c297bf580bcb267a8ad5cdc53be8d69644",
        "filename": "src/test/data/txcreatedata2.hex",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/test/data/txcreatedata2.hex",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2/src/test/data/txcreatedata2.hex",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/txcreatedata2.hex?ref=627468d2ea1f4d5dea9561fe77aaf53f3a83b4d2",
        "patch": "@@ -0,0 +1 @@\n+01000000011f5c38dfcf6f1a5f5a87c416076d392c87e6d41970d5ad5e477a02d66bde97580000000000ffffffff0280a81201000000001976a9141fc11f39be1729bf973a7ab6a615ca4729d6457488ac0000000000000000526a4c4f54686973204f505f52455455524e207472616e73616374696f6e206f7574707574207761732063726561746564206279206d6f646966696564206372656174657261777472616e73616374696f6e2e00000000"
      }
    ]
  }
]