[
  {
    "sha": "05c10953887bd78af2e21ef6d3c07f90dd885572",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWMxMDk1Mzg4N2JkNzhhZjJlMjFlZjZkM2MwN2Y5MGRkODg1NTcy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-23T11:57:08Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-24T08:36:48Z"
      },
      "message": "test: Add testing of ParseInt/ParseUInt edge cases with leading +/-/0:s",
      "tree": {
        "sha": "894b2dc7a7616bbc203d6628200e77534c4edb12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/894b2dc7a7616bbc203d6628200e77534c4edb12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05c10953887bd78af2e21ef6d3c07f90dd885572",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05c10953887bd78af2e21ef6d3c07f90dd885572",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05c10953887bd78af2e21ef6d3c07f90dd885572",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05c10953887bd78af2e21ef6d3c07f90dd885572/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "555b5d1bf940646a728499cfa1005bcb61383c20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/555b5d1bf940646a728499cfa1005bcb61383c20",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/555b5d1bf940646a728499cfa1005bcb61383c20"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "36fa1a029955f26652927268b3d8561447832176",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05c10953887bd78af2e21ef6d3c07f90dd885572/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05c10953887bd78af2e21ef6d3c07f90dd885572/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=05c10953887bd78af2e21ef6d3c07f90dd885572",
        "patch": "@@ -1423,10 +1423,18 @@ BOOST_AUTO_TEST_CASE(test_ParseInt32)\n     BOOST_CHECK(ParseInt32(\"2147483647\", &n) && n == 2147483647);\n     BOOST_CHECK(ParseInt32(\"-2147483648\", &n) && n == (-2147483647 - 1)); // (-2147483647 - 1) equals INT_MIN\n     BOOST_CHECK(ParseInt32(\"-1234\", &n) && n == -1234);\n+    BOOST_CHECK(ParseInt32(\"00000000000000001234\", &n) && n == 1234);\n+    BOOST_CHECK(ParseInt32(\"-00000000000000001234\", &n) && n == -1234);\n+    BOOST_CHECK(ParseInt32(\"00000000000000000000\", &n) && n == 0);\n+    BOOST_CHECK(ParseInt32(\"-00000000000000000000\", &n) && n == 0);\n     // Invalid values\n     BOOST_CHECK(!ParseInt32(\"\", &n));\n     BOOST_CHECK(!ParseInt32(\" 1\", &n)); // no padding inside\n     BOOST_CHECK(!ParseInt32(\"1 \", &n));\n+    BOOST_CHECK(!ParseInt32(\"++1\", &n));\n+    BOOST_CHECK(!ParseInt32(\"+-1\", &n));\n+    BOOST_CHECK(!ParseInt32(\"-+1\", &n));\n+    BOOST_CHECK(!ParseInt32(\"--1\", &n));\n     BOOST_CHECK(!ParseInt32(\"1a\", &n));\n     BOOST_CHECK(!ParseInt32(\"aap\", &n));\n     BOOST_CHECK(!ParseInt32(\"0x1\", &n)); // no hex\n@@ -1482,10 +1490,19 @@ BOOST_AUTO_TEST_CASE(test_ParseUInt32)\n     BOOST_CHECK(ParseUInt32(\"2147483647\", &n) && n == 2147483647);\n     BOOST_CHECK(ParseUInt32(\"2147483648\", &n) && n == (uint32_t)2147483648);\n     BOOST_CHECK(ParseUInt32(\"4294967295\", &n) && n == (uint32_t)4294967295);\n+    BOOST_CHECK(ParseUInt32(\"+1234\", &n) && n == 1234);\n+    BOOST_CHECK(ParseUInt32(\"00000000000000001234\", &n) && n == 1234);\n+    BOOST_CHECK(ParseUInt32(\"00000000000000000000\", &n) && n == 0);\n     // Invalid values\n+    BOOST_CHECK(!ParseUInt32(\"-00000000000000000000\", &n));\n     BOOST_CHECK(!ParseUInt32(\"\", &n));\n     BOOST_CHECK(!ParseUInt32(\" 1\", &n)); // no padding inside\n     BOOST_CHECK(!ParseUInt32(\" -1\", &n));\n+    BOOST_CHECK(!ParseUInt32(\"++1\", &n));\n+    BOOST_CHECK(!ParseUInt32(\"+-1\", &n));\n+    BOOST_CHECK(!ParseUInt32(\"-+1\", &n));\n+    BOOST_CHECK(!ParseUInt32(\"--1\", &n));\n+    BOOST_CHECK(!ParseUInt32(\"-1\", &n));\n     BOOST_CHECK(!ParseUInt32(\"1 \", &n));\n     BOOST_CHECK(!ParseUInt32(\"1a\", &n));\n     BOOST_CHECK(!ParseUInt32(\"aap\", &n));"
      }
    ]
  }
]