NicolasDorier,2016-07-17T03:12:42Z,"CheckTxInputs should return true; if it is a coinbase. (agree that in theory it should not happen, but I prefer that we don't change the semantic by mistake)\n",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233162743,233162743,
jtimon,2016-07-17T09:18:54Z,"@NicolasDorier I'm doing that later in https://github.com/jtimon/bitcoin/commits/0.12.99-consensus , but since you refuse to review that branch...Little steps first, preparations, remember?\n",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233172937,233172937,
jtimon,2016-07-17T11:44:37Z,Updated solving @paveljanik 's nit as suggested by @MarcoFalke . Didn't squashed the commit yet though.\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233178030,233178030,
NicolasDorier,2016-07-17T15:35:59Z,"@jtimon just saying the returns true if coinbase should be part of this commit, not later.\nAnyway, not blocking for me ACK fa3e82563db63c6e601ccb440a11ad4ba66c9a5b\n\nEDIT: oh I think you were responding to the first comment I made and deleted shortly before you replied. Don't take note to what I said before, my only complain on this commit is that CheckTxInputs should returns true if it is a coi",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233187873,233187873,
jtimon,2016-07-17T15:40:35Z,I'm not sure I understand. Which return true if coinbase?\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233188073,233188073,
NicolasDorier,2016-07-17T15:41:17Z,CheckTxInputs should returns true if it is a coinbase.\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233188109,233188109,
NicolasDorier,2016-07-17T15:41:33Z,as the main::CheckInputs was doing.\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233188125,233188125,
jtimon,2016-07-18T14:27:13Z,Updated with more fixes and after squashing.\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233344454,233344454,
instagibbs,2016-07-18T14:32:00Z,utACK https://github.com/bitcoin/bitcoin/pull/8346/commits/00b4943c2794fecf93c21d3db814ea7b2e362087\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-233345969,233345969,
NicolasDorier,2016-07-21T12:56:52Z,utACK 00b4943\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-234245002,234245002,
btcdrak,2016-07-21T12:56:55Z,utACK 00b4943\n\nNice proof of work commit there :-p \n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-234245012,234245012,
MarcoFalke,2016-07-21T13:17:54Z,utACK 00b4943c2794fecf93c21d3db814ea7b2e362087\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-234250051,234250051,
NicolasDorier,2016-07-28T20:52:06Z,"I confirm this one can get merged before #8259. I'll need to backport to 0.13 #8259 which does not have this PR, but that's trivial change.\n",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236021444,236021444,
sipa,2016-07-28T21:30:04Z,I'm not a fan of having the code in main.cpp while the header is in consensus.h. What is the plan afterwards? Will CheckTxInputs move to consesus/consensus.cpp as well? Will that mean that CCoinsViewCache (on which it depends) also moves to consensus?\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236031145,236031145,
NicolasDorier,2016-07-28T21:35:43Z,"@sipa most likely in the future for libconsensus, we'll need to make an interface and replace CCoinsViewCache dependencies by such interface. CCoinsViewCache would stay out of consensuslib.\n\nThe implementation of the interface in libconsensus will use user provided callbacks, while bitcoin core's implementation would use CCoinViewCache under the hood.\n",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236032474,236032474,
sipa,2016-07-28T21:36:38Z,@NicolasDorier I mean in the immediate future. It's not a nice state that the definition for a function is inside a module where the code can't actually move yet.\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236032695,236032695,
NicolasDorier,2016-07-28T21:40:42Z,"@sipa ah yes, I also think so.\nI'm not against moving before, but I would prefer moving the declaration after as well.\n",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236033684,236033684,
sipa,2016-07-28T21:43:36Z,I'd rather not move things until they can actually cleanly moved.\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236034427,236034427,
jtimon,2016-07-28T22:02:26Z,"@sipa My plan was to move it later to tx_verify as shown in #8329, but there's many other options.\nI'm happy moving the declaration to main.h (although I strongly believe the declaration doesn't belong there) or the definition to whatever place outside of main, even if it means moving the declaration outside of consensus/consensus.h.\nWhatever looks easier to merge in the short term.\n",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236038854,236038854,
jtimon,2016-07-28T22:52:01Z,"Updated with the new declaration in main.\nPlease, the sooner you nick or nack-or-at-least-nack-for-this-pr nit/NACK the new doc, the better.\n",https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236048693,236048693,
NicolasDorier,2016-07-28T23:04:20Z,utACK a6cc299\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236050928,236050928,
sipa,2016-07-28T23:04:22Z,utACK a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236050935,236050935,
paveljanik,2016-07-31T19:51:32Z,nit: commit message typo: direclty -> directly\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236452671,236452671,
paveljanik,2016-07-31T19:55:37Z,utACK https://github.com/bitcoin/bitcoin/pull/8346/commits/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2\n,https://github.com/bitcoin/bitcoin/pull/8346#issuecomment-236452876,236452876,
paveljanik,2016-07-16T20:03:40Z,"Hmm, does `CheckInputs` change `state` in `assert` in the original code (i.e. is it against our _Assertions should not have side-effects_ rule)?\n",https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71071082,71071082,src/txmempool.cpp
jtimon,2016-07-17T09:20:41Z,"I didn't know we had just a rule, is there a place where those ""rules"" are documented?\nIf we do, I suggest we change that rule to at least not apply to CValidationState.\nIn any case, this is not a change in this PR: there's no change in functionality here, it was doing the same before.\n",https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71079312,71079312,src/txmempool.cpp
MarcoFalke,2016-07-17T09:22:46Z,â€‹\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#general-c\n,https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71079335,71079335,src/txmempool.cpp
jtimon,2016-07-17T11:03:16Z,"Thanks. \nSo, yes, it seems these asserts were not complying with that rule. Neither before not after my change.\nIf there's an easy fix to add here, I'm all for it.\nShould I launch an exception instead ?\nIt doesn't seem right the way CTxMemPool::check is written...\nMaybe it's enough to rename the offending state local variables to dummyState ?\n",https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71080614,71080614,src/txmempool.cpp
MarcoFalke,2016-07-17T11:05:15Z,Assign the result to a local scope bool and assert the value of the bool?\n,https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71080635,71080635,src/txmempool.cpp
jtimon,2016-07-17T11:14:25Z,"Oh, yeah, is as simple as that. Happy to code and squash that.\n",https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71080748,71080748,src/txmempool.cpp
MarcoFalke,2016-07-17T11:47:17Z,Would be better to move this into the smaller else {} scopes\n,https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71081086,71081086,src/txmempool.cpp
jtimon,2016-07-17T12:19:07Z,"Sorry, I actually moved the state out. I thought this would be clearer. I will change it back and declare the bool twice in their smaller scopes. Reusing the bool actually takes one extra line.\n",https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71081504,71081504,src/txmempool.cpp
NicolasDorier,2016-07-17T15:49:59Z,"here, either you should add\n\n```\nfCheckResult = Consensus::CheckTxInputs(tx, state, mempoolDuplicate, nSpendHeight) || tx.IsCoinbase;\n```\n\nOr better, CheckTxInputs should do it internally.\n",https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71084537,71084537,src/txmempool.cpp
jtimon,2016-07-18T14:20:00Z,"Oh, yeah again lost in re-write. it's even stated in the Preconditions of Consensus::CheckTxInputs in the doc I'm adding just now!\n",https://github.com/bitcoin/bitcoin/pull/8346#discussion_r71155136,71155136,src/txmempool.cpp
