[
  {
    "sha": "a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmNjMjk5NTQxZmM5ZGY1YWYwMTBjZTYzZWIxZGQzNGQ4YzRiNmUy",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T18:57:42Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-28T22:48:20Z"
      },
      "message": "Mempool: Use Consensus::CheckTxInputs direclty over main::CheckInputs",
      "tree": {
        "sha": "f52ef4c884de78f70d3bd008dfd5fb58521870f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f52ef4c884de78f70d3bd008dfd5fb58521870f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "304eff3c614aa18f4d5d5d367024b0dbbb4dce4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/304eff3c614aa18f4d5d5d367024b0dbbb4dce4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/304eff3c614aa18f4d5d5d367024b0dbbb4dce4e"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 20,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b60bb05e187f669f0efdb29f2ce1e92ae4d75c90",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2",
        "patch": "@@ -351,9 +351,22 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n /** Apply the effects of this transaction on the UTXO set represented by view */\n void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight);\n \n+/** Transaction validation functions */\n+\n /** Context-independent validity checks */\n bool CheckTransaction(const CTransaction& tx, CValidationState& state);\n \n+namespace Consensus {\n+\n+/**\n+ * Check whether all inputs of this transaction are valid (no double spends and amounts)\n+ * This does not modify the UTXO set. This does not check scripts and sigs.\n+ * Preconditions: tx.IsCoinBase() is false.\n+ */\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+\n+} // namespace Consensus\n+\n /**\n  * Check if transaction is final and can be included in a block with the\n  * specified height and time. Consensus critical."
      },
      {
        "sha": "b30022bd66714a1fb359b0f3947a2a9e83d38ce8",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=a6cc299541fc9df5af010ce63eb1dd34d8c4b6e2",
        "patch": "@@ -657,6 +657,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     uint64_t innerUsage = 0;\n \n     CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n+    const int64_t nSpendHeight = GetSpendHeight(mempoolDuplicate);\n \n     LOCK(cs);\n     list<const CTxMemPoolEntry*> waitingOnDependants;\n@@ -737,7 +738,9 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n             waitingOnDependants.push_back(&(*it));\n         else {\n             CValidationState state;\n-            assert(CheckInputs(tx, state, mempoolDuplicate, false, 0, false, NULL));\n+            bool fCheckResult = tx.IsCoinBase() ||\n+                Consensus::CheckTxInputs(tx, state, mempoolDuplicate, nSpendHeight);\n+            assert(fCheckResult);\n             UpdateCoins(tx, mempoolDuplicate, 1000000);\n         }\n     }\n@@ -751,7 +754,9 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n             stepsSinceLastRemove++;\n             assert(stepsSinceLastRemove < waitingOnDependants.size());\n         } else {\n-            assert(CheckInputs(entry->GetTx(), state, mempoolDuplicate, false, 0, false, NULL));\n+            bool fCheckResult = entry->GetTx().IsCoinBase() ||\n+                Consensus::CheckTxInputs(entry->GetTx(), state, mempoolDuplicate, nSpendHeight);\n+            assert(fCheckResult);\n             UpdateCoins(entry->GetTx(), mempoolDuplicate, 1000000);\n             stepsSinceLastRemove = 0;\n         }"
      }
    ]
  }
]