MarcoFalke,2019-10-16 19:50:42,"Concept ACK. SPV nodes use dns seeders to get addresses, so they can filter for service bits.\n\nSide-note: The memory savings aren't substantial (https://github.com/bitcoin/bitcoin/pull/17164#issuecomment-542862195)",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-542863596,542863596,
laanwj,2019-10-17 08:43:49,Concept ACK. I think ideally there should have been separate node / capability flags for this instead of piggybacking on `NODE_NETWORK` / `NODE_NETWORK_LIMITED`. But that bridge was already crossed with `MayHaveUsefulAddressDB`.,https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543072194,543072194,
sipa,2019-10-17 17:47:25,"I'm unconvinced that we shouldn't relay IP addresses to lightweight nodes entirely; there is no reason why they can't do their own IP address management, or shouldn't hear about this information from the network. If it's the case that currently none of them care because they 100% rely on DNS seeds, that sounds like a flaw of theirs, and not something to encourage further by making it harder to use",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543286996,543286996,
naumenkogs,2019-10-17 17:54:05,"Now after Pieter's comment I'm leaning towards allowing them to learn, but not choosing them to forward addr messages.\n\nI'll wait a bit for other opinions, and if everyone agrees there — I'll re-implement it according to what I said above. Should be an easy clean change.",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543289502,543289502,
sipa,2019-10-17 17:54:27,"Unrelatedly, should we discard/discount addr messages coming in on incoming connections? ",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543289676,543289676,
MarcoFalke,2019-10-17 17:54:32,I think address management is resource expensive when done correctly. At the very least your SPV wallet would need to connect to the node and check the version message for service bits. Then maybe it should also ask for a block or txs to identify obvious spy nodes. This seems to not fit in well where SPV nodes are deployed (mobile wallets).,https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543289713,543289713,
sipa,2019-10-17 18:02:16,"@MarcoFalke If wallets rely solely on DNS seeds, that's a scary thing. If we're going to go as far as codifying that as the only option, and giving up the hope that they'll ever do something sane, I will probably stop running a DNS seed.",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543292758,543292758,
luke-jr,2019-10-17 18:05:34,"My gut response is to agree with @sipa... but light wallets are also trust-based, so they should only be used in tandem with your own node anyway. I'm not sure doing their own address management makes sense, in that context.\n\nIn other words, the ""sane"" thing isn't doing their own address management *nor* relying solely on DNS seeds - it's peering with the user's own full node. And not sharing ",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543294062,543294062,
naumenkogs,2019-10-17 18:20:55,">@sipa: Unrelatedly, should we discard/discount addr messages coming in on incoming connections?\n\nIf we do what you're suggesting, then\n1. Older nodes are very likely to forward their <10 addr messages in the blackhole (ok, that's fixable with work-arounds)\n2. I believe forwarding <10 addr messages would substantially degrade. Like, it's very likely that this ""stem"" will end up at a privat",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543300247,543300247,
DrahtBot,2019-10-17 18:53:59,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17164](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17164.html) (p2p: Avoid allocating memory for addrKnown ",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543313347,543313347,
naumenkogs,2019-10-18 20:23:22,"Closed in favor of [17194](https://github.com/bitcoin/bitcoin/pull/17194)\n\nI should have kept this code to let reviewers see the difference, but it's too late I guess.\n\nThis PR suggested also not responding to SPV's GETADDR. [17194](https://github.com/bitcoin/bitcoin/pull/17194) allows SPVs to request addresses, but avoids unsolicited forwarding addresses to them.",https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543925581,543925581,
MarcoFalke,2019-10-18 20:32:17,The previous branch was 989e85aecfc59ef0778d188cbcfed7c4f1878485,https://github.com/bitcoin/bitcoin/pull/17163#issuecomment-543930098,543930098,
dongcarl,2019-10-16 19:23:43,"I believe that since this is the constructor, `nServices` is always `NODE_NONE` here",https://github.com/bitcoin/bitcoin/pull/17163#discussion_r335664639,335664639,src/net.cpp
naumenkogs,2019-10-16 21:12:22,"Yeah, will fix soon.",https://github.com/bitcoin/bitcoin/pull/17163#discussion_r335711136,335711136,src/net.cpp
MarcoFalke,2019-10-17 12:37:26,"```suggestion\n    bool IsAddrRelayPeer() const { return m_addr_relay_peer; }\n```\n\nThis can be `const`, just as it was before.",https://github.com/bitcoin/bitcoin/pull/17163#discussion_r335977823,335977823,src/net.h
