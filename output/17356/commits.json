[
  {
    "sha": "3088302b07e918de08ff15d7e1b8bfcf8562928a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDg4MzAyYjA3ZTkxOGRlMDhmZjE1ZDdlMWI4YmZjZjg1NjI5Mjhh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-10-31T17:45:15Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T18:26:40Z"
      },
      "message": "RPC: Change transformNamedArguments to deal with UniValue params objects instead of entire JSONRPCRequests",
      "tree": {
        "sha": "d3ffaf505e7d3855e4b771751a3c19559087b40a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3ffaf505e7d3855e4b771751a3c19559087b40a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3088302b07e918de08ff15d7e1b8bfcf8562928a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3088302b07e918de08ff15d7e1b8bfcf8562928a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3088302b07e918de08ff15d7e1b8bfcf8562928a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3088302b07e918de08ff15d7e1b8bfcf8562928a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9b30126545d6ddd8772363e4079d1e4908ad117",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9b30126545d6ddd8772363e4079d1e4908ad117",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9b30126545d6ddd8772363e4079d1e4908ad117"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 13,
      "deletions": 7
    },
    "files": [
      {
        "sha": "0ca5c129d80371645b8f2ebeb8d4f45530135075",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3088302b07e918de08ff15d7e1b8bfcf8562928a/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3088302b07e918de08ff15d7e1b8bfcf8562928a/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=3088302b07e918de08ff15d7e1b8bfcf8562928a",
        "patch": "@@ -388,14 +388,13 @@ std::string JSONRPCExecBatch(const JSONRPCRequest& jreq, const UniValue& vReq)\n  * Process named arguments into a vector of positional arguments, based on the\n  * passed-in specification for the RPC call's arguments.\n  */\n-static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+static inline UniValue transformNamedArguments(const UniValue& in, const std::vector<std::string>& argNames)\n {\n-    JSONRPCRequest out = in;\n-    out.params = UniValue(UniValue::VARR);\n+    UniValue out(UniValue::VARR);\n     // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n     // there is an unknown one.\n-    const std::vector<std::string>& keys = in.params.getKeys();\n-    const std::vector<UniValue>& values = in.params.getValues();\n+    const std::vector<std::string>& keys = in.getKeys();\n+    const std::vector<UniValue>& values = in.getValues();\n     std::unordered_map<std::string, const UniValue*> argsIn;\n     for (size_t i=0; i<keys.size(); ++i) {\n         argsIn[keys[i]] = &values[i];\n@@ -417,10 +416,10 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n                 // Fill hole between specified parameters with JSON nulls,\n                 // but not at the end (for backwards compatibility with calls\n                 // that act based on number of specified parameters).\n-                out.params.push_back(UniValue());\n+                out.push_back(UniValue());\n             }\n             hole = 0;\n-            out.params.push_back(*fr->second);\n+            out.push_back(*fr->second);\n             argsIn.erase(fr);\n         } else {\n             hole += 1;\n@@ -434,6 +433,13 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = transformNamedArguments(in.params, argNames);\n+    return out;\n+}\n+\n UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n {\n     // Return immediately if in warmup"
      }
    ]
  },
  {
    "sha": "a9b42ba184f57345e01ee7642341de8cfdab2012",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWI0MmJhMTg0ZjU3MzQ1ZTAxZWU3NjQyMzQxZGU4Y2ZkYWIyMDEy",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T18:28:35Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T18:28:35Z"
      },
      "message": "RPC: Support using named params internally",
      "tree": {
        "sha": "7203bc6693242b73eb585de6a5bcb7bf4e8c8168",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7203bc6693242b73eb585de6a5bcb7bf4e8c8168"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9b42ba184f57345e01ee7642341de8cfdab2012",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9b42ba184f57345e01ee7642341de8cfdab2012",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9b42ba184f57345e01ee7642341de8cfdab2012",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9b42ba184f57345e01ee7642341de8cfdab2012/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3088302b07e918de08ff15d7e1b8bfcf8562928a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3088302b07e918de08ff15d7e1b8bfcf8562928a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3088302b07e918de08ff15d7e1b8bfcf8562928a"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 42,
      "deletions": 10
    },
    "files": [
      {
        "sha": "9dd043b9de14a589477dd35554a78b545744b278",
        "filename": "src/rpc/request.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9b42ba184f57345e01ee7642341de8cfdab2012/src/rpc/request.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9b42ba184f57345e01ee7642341de8cfdab2012/src/rpc/request.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/request.h?ref=a9b42ba184f57345e01ee7642341de8cfdab2012",
        "patch": "@@ -34,19 +34,21 @@ class JSONRPCRequest\n     UniValue id;\n     std::string strMethod;\n     UniValue params;\n+    UniValue m_params;\n+    bool m_used_positional_args;\n     bool fHelp;\n     std::string URI;\n     std::string authUser;\n     std::string peerAddr;\n     const util::Ref& context;\n \n-    JSONRPCRequest(const util::Ref& context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}\n+    JSONRPCRequest(const util::Ref& context) : id(NullUniValue), params(NullUniValue), m_params(NullUniValue), m_used_positional_args(false), fHelp(false), context(context) {}\n \n     //! Initializes request information from another request object and the\n     //! given context. The implementation should be updated if any members are\n     //! added or removed above.\n     JSONRPCRequest(const JSONRPCRequest& other, const util::Ref& context)\n-        : id(other.id), strMethod(other.strMethod), params(other.params), fHelp(other.fHelp), URI(other.URI),\n+        : id(other.id), strMethod(other.strMethod), params(other.params), m_params(other.m_params), m_used_positional_args(other.m_used_positional_args), fHelp(other.fHelp), URI(other.URI),\n           authUser(other.authUser), peerAddr(other.peerAddr), context(context)\n     {\n     }"
      },
      {
        "sha": "117d63f94aca7bced98146b14730ba550141715b",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 8,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9b42ba184f57345e01ee7642341de8cfdab2012/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9b42ba184f57345e01ee7642341de8cfdab2012/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=a9b42ba184f57345e01ee7642341de8cfdab2012",
        "patch": "@@ -433,10 +433,44 @@ static inline UniValue transformNamedArguments(const UniValue& in, const std::ve\n     return out;\n }\n \n-static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline UniValue transformPositionalArguments(const UniValue& in, const std::vector<std::string>& argNames)\n {\n-    JSONRPCRequest out = in;\n-    out.params = transformNamedArguments(in.params, argNames);\n+    assert(in.size() <= argNames.size());\n+    UniValue out(UniValue::VOBJ);\n+    for (size_t i = 0; i < in.size(); ++i) {\n+        const UniValue &val = in[i];\n+        const std::string &argNamePattern = argNames[i];\n+        std::vector<std::string> vargNames;\n+        boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+        for (const std::string & argName : vargNames) {\n+            out.pushKV(argName, val);\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    auto out = in;\n+    if (in.params.isObject()) {\n+        out.m_used_positional_args = false;\n+        out.m_params = in.params;\n+        out.params = transformNamedArguments(in.params, argNames);\n+    } else {\n+        out.m_used_positional_args = true;\n+        if (in.params.size() > argNames.size()) {\n+            // Too many params, so just trigger help\n+            out.fHelp = true;\n+            return out;\n+        }\n+        out.m_params = transformPositionalArguments(in.params, argNames);\n+    }\n+\n     return out;\n }\n \n@@ -468,11 +502,7 @@ static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& req\n     {\n         RPCCommandExecution execution(request.strMethod);\n         // Execute, convert arguments to array if necessary\n-        if (request.params.isObject()) {\n-            return command.actor(transformNamedArguments(request, command.argNames), result, last_handler);\n-        } else {\n-            return command.actor(request, result, last_handler);\n-        }\n+        return command.actor(transformArguments(request, command.argNames), result, last_handler);\n     }\n     catch (const std::exception& e)\n     {"
      }
    ]
  },
  {
    "sha": "da4653a5025a5f397261af862e7542b5b1c0a5b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTQ2NTNhNTAyNWE1ZjM5NzI2MWFmODYyZTc1NDJiNWIxYzBhNWIw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-11-02T19:29:31Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T18:28:40Z"
      },
      "message": "RPC/Net: Use internal named params for setban RPC",
      "tree": {
        "sha": "d029c0638889e2aa17fe4db7f1789f043c5a7880",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d029c0638889e2aa17fe4db7f1789f043c5a7880"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da4653a5025a5f397261af862e7542b5b1c0a5b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da4653a5025a5f397261af862e7542b5b1c0a5b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da4653a5025a5f397261af862e7542b5b1c0a5b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da4653a5025a5f397261af862e7542b5b1c0a5b0/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9b42ba184f57345e01ee7642341de8cfdab2012",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9b42ba184f57345e01ee7642341de8cfdab2012",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9b42ba184f57345e01ee7642341de8cfdab2012"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b0be4a747c7616c2e90d798236fa44ac23ed3436",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da4653a5025a5f397261af862e7542b5b1c0a5b0/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da4653a5025a5f397261af862e7542b5b1c0a5b0/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=da4653a5025a5f397261af862e7542b5b1c0a5b0",
        "patch": "@@ -574,8 +574,9 @@ static UniValue setban(const JSONRPCRequest& request)\n                 },\n     };\n     std::string strCommand;\n-    if (!request.params[1].isNull())\n-        strCommand = request.params[1].get_str();\n+    if (!request.m_params[\"command\"].isNull()) {\n+        strCommand = request.m_params[\"command\"].get_str();\n+    }\n     if (request.fHelp || !help.IsValidNumArgs(request.params.size()) || (strCommand != \"add\" && strCommand != \"remove\")) {\n         throw std::runtime_error(help.ToString());\n     }\n@@ -588,16 +589,17 @@ static UniValue setban(const JSONRPCRequest& request)\n     CNetAddr netAddr;\n     bool isSubnet = false;\n \n-    if (request.params[0].get_str().find('/') != std::string::npos)\n+    if (request.m_params[\"subnet\"].get_str().find('/') != std::string::npos) {\n         isSubnet = true;\n+    }\n \n     if (!isSubnet) {\n         CNetAddr resolved;\n-        LookupHost(request.params[0].get_str(), resolved, false);\n+        LookupHost(request.m_params[\"subnet\"].get_str(), resolved, false);\n         netAddr = resolved;\n     }\n     else\n-        LookupSubNet(request.params[0].get_str(), subNet);\n+        LookupSubNet(request.m_params[\"subnet\"].get_str(), subNet);\n \n     if (! (isSubnet ? subNet.IsValid() : netAddr.IsValid()) )\n         throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Invalid IP/Subnet\");\n@@ -609,12 +611,14 @@ static UniValue setban(const JSONRPCRequest& request)\n         }\n \n         int64_t banTime = 0; //use standard bantime if not specified\n-        if (!request.params[2].isNull())\n-            banTime = request.params[2].get_int64();\n+        if (!request.m_params[\"bantime\"].isNull()) {\n+            banTime = request.m_params[\"bantime\"].get_int64();\n+        }\n \n         bool absolute = false;\n-        if (request.params[3].isTrue())\n+        if (request.m_params[\"absolute\"].isTrue()) {\n             absolute = true;\n+        }\n \n         if (isSubnet) {\n             node.banman->Ban(subNet, banTime, absolute);"
      }
    ]
  },
  {
    "sha": "f47bd9896b6146e30390e81ed32389b267c2de6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDdiZDk4OTZiNjE0NmUzMDM5MGU4MWVkMzIzODliMjY3YzJkZTZi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-11-04T17:41:40Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T18:28:40Z"
      },
      "message": "QA/GUI: Give rpcNestedTest parameters names\n\nWith internal named parameters, all parameters MUST have names",
      "tree": {
        "sha": "124453e1baeace8480b679b160d413f63b38d518",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/124453e1baeace8480b679b160d413f63b38d518"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f47bd9896b6146e30390e81ed32389b267c2de6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f47bd9896b6146e30390e81ed32389b267c2de6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f47bd9896b6146e30390e81ed32389b267c2de6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f47bd9896b6146e30390e81ed32389b267c2de6b/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da4653a5025a5f397261af862e7542b5b1c0a5b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da4653a5025a5f397261af862e7542b5b1c0a5b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da4653a5025a5f397261af862e7542b5b1c0a5b0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cb63f227c187d8551fd3814b6861748e81ca9924",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f47bd9896b6146e30390e81ed32389b267c2de6b/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f47bd9896b6146e30390e81ed32389b267c2de6b/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=f47bd9896b6146e30390e81ed32389b267c2de6b",
        "patch": "@@ -24,7 +24,7 @@ static UniValue rpcNestedTest_rpc(const JSONRPCRequest& request)\n \n static const CRPCCommand vRPCCommands[] =\n {\n-    { \"test\", \"rpcNestedTest\", &rpcNestedTest_rpc, {} },\n+    { \"test\", \"rpcNestedTest\", &rpcNestedTest_rpc, {\"a\", \"b\", \"c\"} },\n };\n \n void RPCNestedTests::rpcNestedTests()"
      }
    ]
  }
]