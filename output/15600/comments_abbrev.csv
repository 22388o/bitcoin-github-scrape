luke-jr,2019-05-05T04:46:44Z,"No apparent reviewer interest, and it seems to break `-daemon` with no obvious solution.",https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-489389726,489389726,
luke-jr,2020-03-04T20:16:58Z,"Reopened due to renewed interest, and removed the `DONTFORK` part that was broken",https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-594812152,594812152,
practicalswift,2020-03-04T23:07:26Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-594919257,594919257,
DrahtBot,2020-03-05T14:05:57Z,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit a71c34742c24245a0d642e68f9e61f46cc7573fb<br>(master) | commit 2d320372aa2aba3512512d30e2e6b5c4483cd5c0<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`263dd4df65588db4...`](https://drahtbot.space/gitian/bitcoin/bitcoin/a71c34742c24245a0d642e68f9e61f46cc7573fb/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-595246379,595246379,
laanwj,2020-03-05T19:16:22Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-595399041,595399041,
practicalswift,2020-03-05T20:12:20Z,"Code review ACK d831831822885717e9841f1ff67c19add566fa45 -- patch looks correct\n\nPlease note that I have not verified that the desired end result is achieved.\n\nThat should be done before merge :)",https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-595424717,595424717,
laanwj,2020-03-25T15:35:23Z,"I checked the manual page for `madvise` and I think the usage is correct.\n\nNot checking the return value is okay in this case because if it fails, there's no problem.  The function is not marked as ""warn_unused_result"" so this won't result in compiler warnings either.\n\n`/usr/include/x86_64-linux-gnu/sys/mman.h`:\n```c++\nextern int madvise (void *__addr, size_t __len, int __advice) __THR",https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-603910300,603910300,
jonatack,2020-03-25T15:38:30Z,"Agree.\n\n`/usr/include/x86_64-linux-gnu/sys/mman.h`:\n```c\n#ifdef __USE_MISC\n/* Advise the system about particular usage patterns the program follows\n   for the region starting at ADDR and extending LEN bytes.  */\nextern int madvise (void *__addr, size_t __len, int __advice) __THROW;\n#endif\n```",https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-603912082,603912082,
jonatack,2020-03-25T23:33:27Z,"@vasild thanks for the interesting tests! Good idea. Here are similar steps I took to reproduce them:\n\n<details>\n<summary>test that without madvise string is present in core dump</summary>\n<p>\n\n```\n(pr/15600)$ uname -a\nLinux 4.19.0-5-amd64 #1 SMP Debian 4.19.37-5+deb10u2 (2019-08-08) x86_64 GNU/Linux\n(pr/15600)$ ulimit -c unlimited && git diff && make\n```\n```diff\n--- a/src/",https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-604144041,604144041,
laanwj,2020-03-26T15:55:20Z,I'm going ahead to merge this. Let's add FreeBSD support in a new PR.,https://github.com/bitcoin/bitcoin/pull/15600#issuecomment-604511997,604511997,
vasild,2020-03-25T15:08:55Z,"FreeBSD has the same functionality under a different name `MADV_NOCORE`:\n\n```suggestion\n#if defined(MADV_DONTDUMP) // Linux\n        madvise(addr, len, MADV_DONTDUMP);\n#elif defined(MADV_NOCORE) // FreeBSD\n        madvise(addr, len, MADV_NOCORE);\n#endif\n```",https://github.com/bitcoin/bitcoin/pull/15600#discussion_r397930274,397930274,src/support/lockedpool.cpp
jonatack,2020-03-25T15:30:10Z,should the return value be used to signal success/failure to the user?,https://github.com/bitcoin/bitcoin/pull/15600#discussion_r397947327,397947327,src/support/lockedpool.cpp
