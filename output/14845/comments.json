[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443040200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#issuecomment-443040200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14845",
    "id": 443040200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzA0MDIwMA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T00:02:54Z",
    "updated_at": "2018-11-30T00:02:54Z",
    "author_association": "MEMBER",
    "body": "> more focused test cases\r\n\r\n:+1:",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443040200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443045267",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#issuecomment-443045267",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14845",
    "id": 443045267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzA0NTI2Nw==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T00:27:58Z",
    "updated_at": "2018-11-30T00:27:58Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443045267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443240822",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#issuecomment-443240822",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14845",
    "id": 443240822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzI0MDgyMg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T15:34:18Z",
    "updated_at": "2018-11-30T15:34:18Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review @kallewoof and @practicalswift !\r\n\r\n> A little confused by \"getbalance with a minconf incorrectly excludes coins that have been spent more recently than the minconf blocks ago\". Isn't it supposed to ignore balance for UTXOs whose confirmations < minconf?\r\n\r\nYes, there's currently a bug when getbalance is called with minconf=0, that it checks for UTXO creation, but not UTXO spending. That's fixed in this commit: https://github.com/bitcoin/bitcoin/pull/14602/commits/cfa948da1c5a283fe8f5a80cc0c0dda055408783, but there's more work to be done before that PR is ready for merge.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443240822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443255111",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#issuecomment-443255111",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14845",
    "id": 443255111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzI1NTExMQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T16:16:36Z",
    "updated_at": "2018-11-30T16:17:08Z",
    "author_association": "MEMBER",
    "body": "utACK c1825b9d398b31967887c459c0fad9cf56cf95c6 (Also checked that the test passes on 0.17, which qualifies it for backport)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443255111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443262703",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#issuecomment-443262703",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14845",
    "id": 443262703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzI2MjcwMw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T16:40:30Z",
    "updated_at": "2018-11-30T16:40:30Z",
    "author_association": "MEMBER",
    "body": "Backported in #14852",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443262703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783145",
    "pull_request_review_id": 180165950,
    "id": 237783145,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzc4MzE0NQ==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 2,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2018? Or is this based on existing stuff?",
    "created_at": "2018-11-30T08:47:54Z",
    "updated_at": "2018-11-30T15:28:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237783145",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783145"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237783145"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783830",
    "pull_request_review_id": 180165950,
    "id": 237783830,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzc4MzgzMA==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the wallet balance RPC methods.\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+RANDOM_COINBASE_ADDRESS = 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ'\n+\n+class WalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_transactions(self, node, address, amt, fees):\n+        # Create and sign raw transactions from node to address for amt.\n+        # Creates a transaction for each fee and returns an array\n+        # of the raw transactions.\n+        utxos = node.listunspent(0)\n+\n+        # Create transactions\n+        inputs = []\n+        ins_total = 0\n+        for utxo in utxos:\n+            inputs.append({\"txid\": utxo[\"txid\"], \"vout\": utxo[\"vout\"]})\n+            ins_total += utxo['amount']\n+            if ins_total > amt:\n+                break\n+\n+        txs = []\n+        for fee in fees:\n+            outputs = {address: amt, node.getrawchangeaddress(): ins_total - amt - fee}\n+            raw_tx = node.createrawtransaction(inputs, outputs, 0, True)\n+            raw_tx = node.signrawtransactionwithwallet(raw_tx)\n+            txs.append(raw_tx)\n+\n+        return txs\n+\n+    def run_test(self):\n+        # Check that nodes don't own any UTXOs\n+        assert_equal(len(self.nodes[0].listunspent()), 0)\n+        assert_equal(len(self.nodes[1].listunspent()), 0)\n+\n+        self.log.info(\"Mining one block for each node\")\n+\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        self.nodes[1].generate(1)\n+        self.nodes[1].generatetoaddress(100, RANDOM_COINBASE_ADDRESS)\n+        self.sync_all()\n+\n+        assert_equal(self.nodes[0].getbalance(), 50)\n+        assert_equal(self.nodes[1].getbalance(), 50)\n+\n+        self.log.info(\"Test getbalance with different arguments\")\n+        assert_equal(self.nodes[0].getbalance(\"*\"), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n+        assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n+\n+        # Send 40 BTC from 0 to 1 and 60 BTC from 1 to 0.\n+        txs = self.create_transactions(self.nodes[0], self.nodes[1].getnewaddress(), 40, [Decimal('0.01')])\n+        self.nodes[0].sendrawtransaction(txs[0]['hex'])\n+        self.nodes[1].sendrawtransaction(txs[0]['hex'])  # sending on both nodes is faster than waiting for propogation\n+\n+        self.sync_all()\n+        txs = self.create_transactions(self.nodes[1], self.nodes[0].getnewaddress(), 60, [Decimal('0.01'), Decimal('0.02')])\n+        self.nodes[1].sendrawtransaction(txs[0]['hex'])\n+        self.nodes[0].sendrawtransaction(txs[0]['hex'])  # sending on both nodes is faster than waiting for propogation",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 78,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`propagation`",
    "created_at": "2018-11-30T08:50:35Z",
    "updated_at": "2018-11-30T15:28:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237783830",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783830"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237783830"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783874",
    "pull_request_review_id": 180165950,
    "id": 237783874,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzc4Mzg3NA==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the wallet balance RPC methods.\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+RANDOM_COINBASE_ADDRESS = 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ'\n+\n+class WalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_transactions(self, node, address, amt, fees):\n+        # Create and sign raw transactions from node to address for amt.\n+        # Creates a transaction for each fee and returns an array\n+        # of the raw transactions.\n+        utxos = node.listunspent(0)\n+\n+        # Create transactions\n+        inputs = []\n+        ins_total = 0\n+        for utxo in utxos:\n+            inputs.append({\"txid\": utxo[\"txid\"], \"vout\": utxo[\"vout\"]})\n+            ins_total += utxo['amount']\n+            if ins_total > amt:\n+                break\n+\n+        txs = []\n+        for fee in fees:\n+            outputs = {address: amt, node.getrawchangeaddress(): ins_total - amt - fee}\n+            raw_tx = node.createrawtransaction(inputs, outputs, 0, True)\n+            raw_tx = node.signrawtransactionwithwallet(raw_tx)\n+            txs.append(raw_tx)\n+\n+        return txs\n+\n+    def run_test(self):\n+        # Check that nodes don't own any UTXOs\n+        assert_equal(len(self.nodes[0].listunspent()), 0)\n+        assert_equal(len(self.nodes[1].listunspent()), 0)\n+\n+        self.log.info(\"Mining one block for each node\")\n+\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        self.nodes[1].generate(1)\n+        self.nodes[1].generatetoaddress(100, RANDOM_COINBASE_ADDRESS)\n+        self.sync_all()\n+\n+        assert_equal(self.nodes[0].getbalance(), 50)\n+        assert_equal(self.nodes[1].getbalance(), 50)\n+\n+        self.log.info(\"Test getbalance with different arguments\")\n+        assert_equal(self.nodes[0].getbalance(\"*\"), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n+        assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n+\n+        # Send 40 BTC from 0 to 1 and 60 BTC from 1 to 0.\n+        txs = self.create_transactions(self.nodes[0], self.nodes[1].getnewaddress(), 40, [Decimal('0.01')])\n+        self.nodes[0].sendrawtransaction(txs[0]['hex'])\n+        self.nodes[1].sendrawtransaction(txs[0]['hex'])  # sending on both nodes is faster than waiting for propogation",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 73,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`propagation`",
    "created_at": "2018-11-30T08:50:47Z",
    "updated_at": "2018-11-30T15:28:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237783874",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783874"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237783874"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237783874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237787146",
    "pull_request_review_id": 180171057,
    "id": 237787146,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzc4NzE0Ng==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the wallet balance RPC methods.\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+RANDOM_COINBASE_ADDRESS = 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ'\n+\n+class WalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_transactions(self, node, address, amt, fees):",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 24,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`create_transactions` is not using `self` and could thus be a function instead of a method?",
    "created_at": "2018-11-30T09:03:28Z",
    "updated_at": "2018-11-30T15:28:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237787146",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237787146"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237787146"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237787146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898432",
    "pull_request_review_id": 180315124,
    "id": 237898432,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzg5ODQzMg==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 2,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "no, this should be 2018",
    "created_at": "2018-11-30T15:28:16Z",
    "updated_at": "2018-11-30T15:28:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898432",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898432"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898432"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 237783145
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898487",
    "pull_request_review_id": 180315191,
    "id": 237898487,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzg5ODQ4Nw==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the wallet balance RPC methods.\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+RANDOM_COINBASE_ADDRESS = 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ'\n+\n+class WalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_transactions(self, node, address, amt, fees):\n+        # Create and sign raw transactions from node to address for amt.\n+        # Creates a transaction for each fee and returns an array\n+        # of the raw transactions.\n+        utxos = node.listunspent(0)\n+\n+        # Create transactions\n+        inputs = []\n+        ins_total = 0\n+        for utxo in utxos:\n+            inputs.append({\"txid\": utxo[\"txid\"], \"vout\": utxo[\"vout\"]})\n+            ins_total += utxo['amount']\n+            if ins_total > amt:\n+                break\n+\n+        txs = []\n+        for fee in fees:\n+            outputs = {address: amt, node.getrawchangeaddress(): ins_total - amt - fee}\n+            raw_tx = node.createrawtransaction(inputs, outputs, 0, True)\n+            raw_tx = node.signrawtransactionwithwallet(raw_tx)\n+            txs.append(raw_tx)\n+\n+        return txs\n+\n+    def run_test(self):\n+        # Check that nodes don't own any UTXOs\n+        assert_equal(len(self.nodes[0].listunspent()), 0)\n+        assert_equal(len(self.nodes[1].listunspent()), 0)\n+\n+        self.log.info(\"Mining one block for each node\")\n+\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        self.nodes[1].generate(1)\n+        self.nodes[1].generatetoaddress(100, RANDOM_COINBASE_ADDRESS)\n+        self.sync_all()\n+\n+        assert_equal(self.nodes[0].getbalance(), 50)\n+        assert_equal(self.nodes[1].getbalance(), 50)\n+\n+        self.log.info(\"Test getbalance with different arguments\")\n+        assert_equal(self.nodes[0].getbalance(\"*\"), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n+        assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n+\n+        # Send 40 BTC from 0 to 1 and 60 BTC from 1 to 0.\n+        txs = self.create_transactions(self.nodes[0], self.nodes[1].getnewaddress(), 40, [Decimal('0.01')])\n+        self.nodes[0].sendrawtransaction(txs[0]['hex'])\n+        self.nodes[1].sendrawtransaction(txs[0]['hex'])  # sending on both nodes is faster than waiting for propogation\n+\n+        self.sync_all()\n+        txs = self.create_transactions(self.nodes[1], self.nodes[0].getnewaddress(), 60, [Decimal('0.01'), Decimal('0.02')])\n+        self.nodes[1].sendrawtransaction(txs[0]['hex'])\n+        self.nodes[0].sendrawtransaction(txs[0]['hex'])  # sending on both nodes is faster than waiting for propogation",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 78,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed. Thanks",
    "created_at": "2018-11-30T15:28:24Z",
    "updated_at": "2018-11-30T15:28:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898487",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898487"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898487"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 78,
    "side": "RIGHT",
    "in_reply_to_id": 237783830
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898508",
    "pull_request_review_id": 180315221,
    "id": 237898508,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzg5ODUwOA==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the wallet balance RPC methods.\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+RANDOM_COINBASE_ADDRESS = 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ'\n+\n+class WalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_transactions(self, node, address, amt, fees):\n+        # Create and sign raw transactions from node to address for amt.\n+        # Creates a transaction for each fee and returns an array\n+        # of the raw transactions.\n+        utxos = node.listunspent(0)\n+\n+        # Create transactions\n+        inputs = []\n+        ins_total = 0\n+        for utxo in utxos:\n+            inputs.append({\"txid\": utxo[\"txid\"], \"vout\": utxo[\"vout\"]})\n+            ins_total += utxo['amount']\n+            if ins_total > amt:\n+                break\n+\n+        txs = []\n+        for fee in fees:\n+            outputs = {address: amt, node.getrawchangeaddress(): ins_total - amt - fee}\n+            raw_tx = node.createrawtransaction(inputs, outputs, 0, True)\n+            raw_tx = node.signrawtransactionwithwallet(raw_tx)\n+            txs.append(raw_tx)\n+\n+        return txs\n+\n+    def run_test(self):\n+        # Check that nodes don't own any UTXOs\n+        assert_equal(len(self.nodes[0].listunspent()), 0)\n+        assert_equal(len(self.nodes[1].listunspent()), 0)\n+\n+        self.log.info(\"Mining one block for each node\")\n+\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        self.nodes[1].generate(1)\n+        self.nodes[1].generatetoaddress(100, RANDOM_COINBASE_ADDRESS)\n+        self.sync_all()\n+\n+        assert_equal(self.nodes[0].getbalance(), 50)\n+        assert_equal(self.nodes[1].getbalance(), 50)\n+\n+        self.log.info(\"Test getbalance with different arguments\")\n+        assert_equal(self.nodes[0].getbalance(\"*\"), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n+        assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n+\n+        # Send 40 BTC from 0 to 1 and 60 BTC from 1 to 0.\n+        txs = self.create_transactions(self.nodes[0], self.nodes[1].getnewaddress(), 40, [Decimal('0.01')])\n+        self.nodes[0].sendrawtransaction(txs[0]['hex'])\n+        self.nodes[1].sendrawtransaction(txs[0]['hex'])  # sending on both nodes is faster than waiting for propogation",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 73,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed. Thanks",
    "created_at": "2018-11-30T15:28:27Z",
    "updated_at": "2018-11-30T15:28:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898508",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898508"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898508"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 237783874
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898562",
    "pull_request_review_id": 180315294,
    "id": 237898562,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzg5ODU2Mg==",
    "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the wallet balance RPC methods.\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+RANDOM_COINBASE_ADDRESS = 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ'\n+\n+class WalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def create_transactions(self, node, address, amt, fees):",
    "path": "test/functional/wallet_balance.py",
    "position": null,
    "original_position": 24,
    "commit_id": "c1825b9d398b31967887c459c0fad9cf56cf95c6",
    "original_commit_id": "b31985d8c9a1cac749250a8f976fa6ccc2095b1e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point. Changed to a function.",
    "created_at": "2018-11-30T15:28:38Z",
    "updated_at": "2018-11-30T15:28:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898562",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898562"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14845#discussion_r237898562"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14845"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237898562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 237787146
  }
]