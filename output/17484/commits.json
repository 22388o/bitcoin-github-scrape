[
  {
    "sha": "693bbc613310f49373d058b9d630543f6edcaa65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTNiYmM2MTMzMTBmNDkzNzNkMDU4YjlkNjMwNTQzZjZlZGNhYTY1",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-11-14T20:44:06Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2020-06-03T23:58:25Z"
      },
      "message": "[interfaces] Extend Chain::Notifications::updatedBlockTip with bool is_ibd\n\nThis is only used in next commit.",
      "tree": {
        "sha": "775156f33591d52b947278bdb62c248c5739a748",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/775156f33591d52b947278bdb62c248c5739a748"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/693bbc613310f49373d058b9d630543f6edcaa65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/693bbc613310f49373d058b9d630543f6edcaa65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/693bbc613310f49373d058b9d630543f6edcaa65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/693bbc613310f49373d058b9d630543f6edcaa65/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "a1c0e5fce13911252a135bdce4ffc09c24d23791",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1c0e5fce13911252a135bdce4ffc09c24d23791",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1c0e5fce13911252a135bdce4ffc09c24d23791"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "bb19f940230f9db9993547c1f768125ecf838e4c",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/693bbc613310f49373d058b9d630543f6edcaa65/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/693bbc613310f49373d058b9d630543f6edcaa65/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=693bbc613310f49373d058b9d630543f6edcaa65",
        "patch": "@@ -77,7 +77,7 @@ class NotificationsProxy : public CValidationInterface\n     }\n     void UpdatedBlockTip(const CBlockIndex* index, const CBlockIndex* fork_index, bool is_ibd) override\n     {\n-        m_notifications->updatedBlockTip();\n+        m_notifications->updatedBlockTip(is_ibd);\n     }\n     void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->chainStateFlushed(locator); }\n     std::shared_ptr<Chain::Notifications> m_notifications;"
      },
      {
        "sha": "901f9b846d4aa16e9e52537e5b94b8138c3ee5ef",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/693bbc613310f49373d058b9d630543f6edcaa65/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/693bbc613310f49373d058b9d630543f6edcaa65/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=693bbc613310f49373d058b9d630543f6edcaa65",
        "patch": "@@ -243,7 +243,7 @@ class Chain\n         virtual void transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) {}\n         virtual void blockConnected(const CBlock& block, int height) {}\n         virtual void blockDisconnected(const CBlock& block, int height) {}\n-        virtual void updatedBlockTip() {}\n+        virtual void updatedBlockTip(bool is_ibd) {}\n         virtual void chainStateFlushed(const CBlockLocator& locator) {}\n     };\n "
      },
      {
        "sha": "e00eed1bbadf4e399fdbe69db6755fbe721c495c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/693bbc613310f49373d058b9d630543f6edcaa65/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/693bbc613310f49373d058b9d630543f6edcaa65/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=693bbc613310f49373d058b9d630543f6edcaa65",
        "patch": "@@ -1177,7 +1177,7 @@ void CWallet::blockDisconnected(const CBlock& block, int height)\n     }\n }\n \n-void CWallet::updatedBlockTip()\n+void CWallet::updatedBlockTip(bool is_ibd)\n {\n     m_best_block_time = GetTime();\n }"
      },
      {
        "sha": "bd38f4e1ffc3daa3b934a18730d7cff3862d8470",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/693bbc613310f49373d058b9d630543f6edcaa65/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/693bbc613310f49373d058b9d630543f6edcaa65/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=693bbc613310f49373d058b9d630543f6edcaa65",
        "patch": "@@ -902,7 +902,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void transactionAddedToMempool(const CTransactionRef& tx) override;\n     void blockConnected(const CBlock& block, int height) override;\n     void blockDisconnected(const CBlock& block, int height) override;\n-    void updatedBlockTip() override;\n+    void updatedBlockTip(bool is_ibd) override;\n     int64_t RescanFromTime(int64_t startTime, const WalletRescanReserver& reserver, bool update);\n \n     struct ScanResult {"
      }
    ]
  },
  {
    "sha": "797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTdlYzlkYzJiNGMxYjRmYmYyYWMzMzc3YTNjNDdmNDA2MzgzMjQ4",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-11-14T20:46:30Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2020-06-04T00:47:21Z"
      },
      "message": "[wallet] Add m_is_ibd in CWallet",
      "tree": {
        "sha": "a97cf58d3279173578f42ddb73062b20c1bd3dc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a97cf58d3279173578f42ddb73062b20c1bd3dc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "693bbc613310f49373d058b9d630543f6edcaa65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/693bbc613310f49373d058b9d630543f6edcaa65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/693bbc613310f49373d058b9d630543f6edcaa65"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 15,
      "deletions": 5
    },
    "files": [
      {
        "sha": "23b1ac796b98c4b66ec4531948eed21f9a8481cd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
        "patch": "@@ -1180,6 +1180,8 @@ void CWallet::blockDisconnected(const CBlock& block, int height)\n void CWallet::updatedBlockTip(bool is_ibd)\n {\n     m_best_block_time = GetTime();\n+    LOCK(cs_wallet);\n+    m_is_ibd = is_ibd;\n }\n \n \n@@ -2014,6 +2016,8 @@ void CWallet::ResendWalletTransactions()\n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n+        if (m_is_ibd) return;\n+\n         // Relay transactions\n         for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n             CWalletTx& wtx = item.second;\n@@ -2587,9 +2591,9 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n-static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, const uint256& block_hash)\n+static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, bool is_ibd, const uint256& block_hash)\n {\n-    if (chain.isInitialBlockDownload()) {\n+    if (is_ibd) {\n         return false;\n     }\n     constexpr int64_t MAX_ANTI_FEE_SNIPING_TIP_AGE = 8 * 60 * 60; // in seconds\n@@ -2605,7 +2609,7 @@ static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, const uint256&\n  * Return a height-based locktime for new transactions (uses the height of the\n  * current chain tip unless we are not synced with the current chain\n  */\n-static uint32_t GetLocktimeForNewTransaction(interfaces::Chain& chain, const uint256& block_hash, int block_height)\n+static uint32_t GetLocktimeForNewTransaction(interfaces::Chain& chain, bool is_ibd, const uint256& block_hash, int block_height)\n {\n     uint32_t locktime;\n     // Discourage fee sniping.\n@@ -2628,7 +2632,7 @@ static uint32_t GetLocktimeForNewTransaction(interfaces::Chain& chain, const uin\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n-    if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n+    if (IsCurrentForAntiFeeSniping(chain, is_ibd, block_hash)) {\n         locktime = block_height;\n \n         // Secondly occasionally randomly pick a nLockTime even further back, so\n@@ -2707,7 +2711,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n     {\n         std::set<CInputCoin> setCoins;\n         LOCK(cs_wallet);\n-        txNew.nLockTime = GetLocktimeForNewTransaction(chain(), GetLastBlockHash(), GetLastBlockHeight());\n+        txNew.nLockTime = GetLocktimeForNewTransaction(chain(), m_is_ibd, GetLastBlockHash(), GetLastBlockHeight());\n         {\n             std::vector<COutput> vAvailableCoins;\n             AvailableCoins(vAvailableCoins, true, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);"
      },
      {
        "sha": "b85ff9f0e7471fb75325066ef3ddac0c8a0514fc",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
        "patch": "@@ -723,6 +723,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     // ScriptPubKeyMan::GetID. In many cases it will be the hash of an internal structure\n     std::map<uint256, std::unique_ptr<ScriptPubKeyMan>> m_spk_managers;\n \n+    /* Flag to indicate chain is still in initial block download. Initialized to false,\n+     * latched to updateBlockTip if node evaluates being out of IBD. This method MUST be\n+     * called by rescanning code while boostraping the wallet.\n+     */\n+    bool m_is_ibd GUARDED_BY(cs_wallet) = false;\n+\n public:\n     /*\n      * Main wallet lock."
      }
    ]
  },
  {
    "sha": "20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMGViMGRhY2RkNmQ2OThiMDJkNWIxNTFkZDJjYTdmOWJmYmE0Zjhj",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-11-14T21:02:07Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2020-06-04T00:47:35Z"
      },
      "message": "[interfaces] Remove Chain::isReadyToBroadcast",
      "tree": {
        "sha": "cf6ad308ab14f2741310cab474ab38fdec787562",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf6ad308ab14f2741310cab474ab38fdec787562"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/797ec9dc2b4c1b4fbf2ac3377a3c47f406383248"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "68c6042a1be9c3b6c48b68c8b016feff55ccf230",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c",
        "patch": "@@ -339,8 +339,7 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return ::fHavePruned;\n     }\n-    bool isReadyToBroadcast() override { return !::fImporting && !::fReindex && !isInitialBlockDownload(); }\n-    bool isInitialBlockDownload() override { return ::ChainstateActive().IsInitialBlockDownload(); }\n+    bool isReadyToBroadcast() override { return !::fImporting && !::fReindex; }\n     bool shutdownRequested() override { return ShutdownRequested(); }\n     int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }"
      },
      {
        "sha": "487f4550f7d33c6c27637cc08afdfcd21f3556a4",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c",
        "patch": "@@ -213,9 +213,6 @@ class Chain\n     //! Check if the node is ready to broadcast transactions.\n     virtual bool isReadyToBroadcast() = 0;\n \n-    //! Check if in IBD.\n-    virtual bool isInitialBlockDownload() = 0;\n-\n     //! Check if shutdown requested.\n     virtual bool shutdownRequested() = 0;\n "
      }
    ]
  }
]