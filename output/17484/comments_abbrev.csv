achow101,2019-11-15 00:08:16,"> It let call `sethseed` while being disconnected, which may be blameworthty but as `createwallet` let you already generate a HD wallet without checking for IBD, we should go either way or the other, i.e can generate HD-seed without out-of-IBD or can't generate HD-seed without out-of-IBD. Thoughts ?\n\nThe reason that you had to be out of IBD in order to set an HD seed is because by setting a ne",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-554144937,554144937,
DrahtBot,2019-11-15 00:52:05,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18354 (Use shared pointers only in validation interface by bvbfan)\n* #14582 (wallet: always do avoid partial spends if f",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-554157612,554157612,
ariard,2019-11-15 02:26:57,">  So if there were a transaction that involved a key that hadn't been generated yet and was in a block after where you were currently synced\n\nYou're talking about a key derived from the old seed here ? I didn't dig in code but if I understand when we set a new seed we discard checking keys for old one right ? Node is getting out of IBD at tip N - DEFAULT_TIP_AGE(~144), which means you can set",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-554181307,554181307,
achow101,2019-11-15 20:25:36,"> You're talking about a key derived from the old seed here ? I didn't dig in code but if I understand when we set a new seed we discard checking keys for old one right ?\n\nYes, I'm talking about keys derived from the old seed. Any key that has already been derived and added to the wallet (i.e. it was in the keypool or already marked as used) will still be checked for. Setting a new seed doesn'",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-554515006,554515006,
ariard,2019-11-19 17:22:36,"Thanks @achow101 for your insights, I'm going to hold-on this PR once the wallet init its state asynchronously like thanks to change here https://github.com/ariard/bitcoin/commits/2019-08-rescan-index-refactor so it would avoid behavior change on the point you raised.\n\nThanks for your review @jonatack, will fix comments once PR gets Concept ACK.",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-555615147,555615147,
jnewbery,2019-11-25 21:10:12,"Concept ACK.\n\n@achow101 to be clear, is the failure scenario as follows:\n\n1. user has an HD wallet\n2. user makes a backup from the wallet\n3. user hands out more keys then they have in their keypool (currently 1000, previously 100) and receives payments to keys handed out after the initial keypool was drained\n4. user restores original backup wallet on unsync'ed node, then calls `sethd",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-558341261,558341261,
achow101,2019-11-25 22:27:34,"For some context about the IBD and `sethdseed` stuff: https://github.com/bitcoin/bitcoin/pull/12560#issuecomment-377567454\n\n>  is the failure scenario as follows:\n\nYes.",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-558369059,558369059,
jnewbery,2019-11-25 22:53:56,"@achow101 Thanks for the cross-reference :pray: \n\n> can we either check that we're fully synced before allowing an HD master rotate or keep around old HD keys for key derivation? I'd prefer the second\n\nKeeping the old key for key derivation definitely seems like the correct fix. How complex is that (and does descriptor wallets do that automatically?)",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-558377305,558377305,
achow101,2019-11-25 23:35:42,"> Keeping the old key for key derivation definitely seems like the correct fix. How complex is that\n\nI don't think it would be too complex. Although I think it would be a fairly large change. We would need to keep track of the old hd seeds and keep track of where we've derived up to for a particular seed. And a bunch of things that do things on the seed would need to be changed to do things on",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-558390026,558390026,
ariard,2019-11-26 22:52:30,"@jnewbery \n\n> is it possible to change this so m_is_ibd initializes to true and then call Chain::isInitialBlockDownload() once on wallet start-up?\n\nYes but that removes PR interest of drying up the Chain interface. I think best it to wait wallet registering its sync state with the Chain::interface (https://github.com/ariard/bitcoin/commits/2019-08-rescan-index-refactor) at start-up so afte",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-558851799,558851799,
ryanofsky,2019-12-02 23:06:50,"> Reading https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Class-Structure-Changes, best option is to have multiple Scri[tPubKeyMan or one with multiple hdChain ?\n\nI think you could have separate LegacyScriptPubKeyMan instances for each hdseed, but this would probably be more work than necessary, and not very related to what this PR is trying to do.\n\nI think the minimal fix to p",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-560845316,560845316,
achow101,2019-12-05 21:54:59,I've dealt with the `sethdseed` stuff in #17681 ,https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-562336013,562336013,
ariard,2019-12-05 23:58:54,"Whoa awesome, will review #17681 !",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-562371933,562371933,
ariard,2020-05-07 09:29:24,Thanks @ryanofsky for call-up on this and #17443! I will rebase them tomorrow-ish but I think for this one it would be better for achow one to get first.,https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-625140350,625140350,
fjahr,2020-05-23 12:17:36,"Concept ACK, will do full review when this is rebased.",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-633041278,633041278,
ariard,2020-06-04 00:52:43,"Rebased the PR but this is not worthy to review now, after thinking a bit more I want to avoid behavior changes and for so, it would be better to get #15719 and its follow-up first to always ensure we are in-sync with node wrt to IBD after wallet startup.\n\nThis current PR may provoke issue if a privacy leak if user broadcast a transaction without being at tip.\n\nUpdated PR description in co",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-638535575,638535575,
DrahtBot,2020-08-17 05:35:59,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/17484#issuecomment-674665975,674665975,
jonatack,2019-11-18 12:05:57,naming: perhaps `isInitialBlockDownload` if you want to follow the current convention,https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347344035,347344035,src/wallet/wallet.h
jonatack,2019-11-18 12:08:12,"perhaps: ""Whether or not the chain is in initial block download.""",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347344871,347344871,src/wallet/wallet.h
jonatack,2019-11-18 12:10:54,naming: perhaps `m_is_in_ibd`,https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347345851,347345851,src/wallet/wallet.h
jonatack,2019-11-18 12:12:54,naming: perhaps `is_in_ibd`,https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347346608,347346608,src/interfaces/chain.cpp
jonatack,2019-11-18 12:23:07,"Thanks for adding this documentation. Suggestion (if I understand correctly that _othersaid_ means _autrement dit_, which translates to _in other words_):\n```diff\n-    /* Flag to indicate chain is still in initial block download. Set it to\n-     * false to let wallet generating new seed without being connected to a node.\n-     * Othersaid, a wallet evaluates chain being out of initial bloc",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347350877,347350877,src/wallet/wallet.h
jonatack,2019-11-18 12:36:35,"Perhaps make this change in the last commit where the other removals of `isInitialBlockDownload` take place? \n\nIIUC, the commit is misnamed and could better be called something like ""Remove Chain::isInitialBlockDownload`",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347356227,347356227,src/wallet/rpcwallet.cpp
jonatack,2019-11-18 12:38:36,"Perhaps make this change in the commit ""Add m_is_ibd in CWallet` (or merge the two commits, IIUC)",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347356956,347356956,src/wallet/wallet.cpp
ryanofsky,2020-05-01 02:06:27,"In commit ""Add m_is_ibd in CWallet"" (dca4246dac0f4fa6369a71ee787b2bf1f6415c6d)\n\nCalling chain lock not unnecessary here (but harmless)",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r418384945,418384945,src/wallet/wallet.cpp
ryanofsky,2020-05-01 02:27:32,"In commit ""Remove Chain::isReadyToBroadcast method"" (a5a674857d0ae6d535e4725337968492c821c635)\n\nImplementation and meaning of isReadyToBroadcast method is changing a lot, so I would rename it to something like ""isInitializing"" or ""isLoading"" and update the comment.\n\nAlso commit title could be changed to mention removing isInitialBlockDownload",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r418389172,418389172,src/interfaces/chain.h
ryanofsky,2020-05-01 02:34:18,"re: https://github.com/bitcoin/bitcoin/pull/17484#discussion_r347356956\n\nIn commit ""Remove Chain::isReadyToBroadcast method"" (a5a674857d0ae6d535e4725337968492c821c635)\n\n> Perhaps make this change in the commit ""Add m_is_ibd in CWallet` (or merge the two commits, IIUC)\n\nChange does make sense (and is necessary) in this commit due to isReadyToBroadcast call a few lines up. But it would b",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r418390573,418390573,src/wallet/wallet.cpp
ryanofsky,2020-05-01 02:42:25,"In commit ""Add m_is_ibd in CWallet"" (dca4246dac0f4fa6369a71ee787b2bf1f6415c6d)\n\nIs the commit message correct? It says there is a behavior change here, but there doesn't seem to be one if this is still raising an error.\n\n",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r418392128,418392128,src/wallet/rpcwallet.cpp
ryanofsky,2020-06-12 02:52:58,"In commit ""[wallet] Add m_is_ibd in CWallet"" (797ec9dc2b4c1b4fbf2ac3377a3c47f406383248)\n\nI do think it would be helpful to have comment here saying this is skipped during ibd to avoid spam.\n\nAlso the comment above for isReadyToBroadcast() is incorrect after commit ""[interfaces] Remove Chain::isReadyToBroadcast"" (20eb0dacdd6d698b02d5b151dd2ca7f9bfba4f8c), and should be updated to not mentio",https://github.com/bitcoin/bitcoin/pull/17484#discussion_r439179496,439179496,src/wallet/wallet.cpp
