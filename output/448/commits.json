[
  {
    "sha": "4d2ef6e5b6298a502d1fd9a50e093b7206aa2834",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDJlZjZlNWI2Mjk4YTUwMmQxZmQ5YTUwZTA5M2I3MjA2YWEyODM0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-08-03T11:00:27Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-08-03T11:01:09Z"
      },
      "message": "avoid strAddress + validity checks\n\nAvoid references to addresses using strings, and use CBitcoinAddress\nas much as possible. Also added some validity checks on addresses\nentered using RPC.",
      "tree": {
        "sha": "2a0b35f56395ab9ec0f0abe373b95172464b66d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a0b35f56395ab9ec0f0abe373b95172464b66d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d2ef6e5b6298a502d1fd9a50e093b7206aa2834",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d2ef6e5b6298a502d1fd9a50e093b7206aa2834",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d2ef6e5b6298a502d1fd9a50e093b7206aa2834",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d2ef6e5b6298a502d1fd9a50e093b7206aa2834/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce364b2d7aba6b7802471a30148f221b26a4ab38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce364b2d7aba6b7802471a30148f221b26a4ab38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce364b2d7aba6b7802471a30148f221b26a4ab38"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "a4deece6b2cc1f473e989a792a0d09593cd70ed5",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d2ef6e5b6298a502d1fd9a50e093b7206aa2834/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d2ef6e5b6298a502d1fd9a50e093b7206aa2834/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=4d2ef6e5b6298a502d1fd9a50e093b7206aa2834",
        "patch": "@@ -342,21 +342,19 @@ Value getnewaddress(const Array& params, bool fHelp)\n         strAccount = AccountFromValue(params[0]);\n \n     // Generate a new key that is added to wallet\n-    string strAddress = CBitcoinAddress(pwalletMain->GetOrReuseKeyFromPool()).ToString();\n+    CBitcoinAddress address(pwalletMain->GetOrReuseKeyFromPool());\n \n     // This could be done in the same main CS as GetKeyFromKeyPool.\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n-       pwalletMain->SetAddressBookName(strAddress, strAccount);\n+       pwalletMain->SetAddressBookName(address, strAccount);\n \n-    return strAddress;\n+    return address.ToString();\n }\n \n \n // requires cs_main, cs_mapWallet, cs_mapAddressBook locks\n CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n {\n-    string strAddress;\n-\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n \n     CAccount account;\n@@ -393,8 +391,7 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n             else\n             {\n                 account.vchPubKey = pwalletMain->GetOrReuseKeyFromPool();\n-                string strAddress = CBitcoinAddress(account.vchPubKey).ToString();\n-                pwalletMain->SetAddressBookName(strAddress, strAccount);\n+                pwalletMain->SetAddressBookName(CBitcoinAddress(account.vchPubKey), strAccount);\n                 walletdb.WriteAccount(strAccount, account);\n             }\n         }\n@@ -434,8 +431,7 @@ Value setaccount(const Array& params, bool fHelp)\n             \"setaccount <bitcoinaddress> <account>\\n\"\n             \"Sets the account associated with the given address.\");\n \n-    string strAddress = params[0].get_str();\n-    CBitcoinAddress address(strAddress);\n+    CBitcoinAddress address(params[0].get_str());\n     if (!address.IsValid())\n         throw JSONRPCError(-5, \"Invalid bitcoin address\");\n \n@@ -456,7 +452,7 @@ Value setaccount(const Array& params, bool fHelp)\n                 GetAccountAddress(strOldAccount, true);\n         }\n \n-        pwalletMain->SetAddressBookName(strAddress, strAccount);\n+        pwalletMain->SetAddressBookName(address, strAccount);\n     }\n \n     return Value::null;\n@@ -470,8 +466,9 @@ Value getaccount(const Array& params, bool fHelp)\n             \"getaccount <bitcoinaddress>\\n\"\n             \"Returns the account associated with the given address.\");\n \n-    string strAddress = params[0].get_str();\n-    CBitcoinAddress address(strAddress);\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(-5, \"Invalid bitcoin address\");\n \n     string strAccount;\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n@@ -536,7 +533,9 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             \"sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\\n\"\n             \"<amount> is a real and is rounded to the nearest 0.00000001\");\n \n-    string strAddress = params[0].get_str();\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(-5, \"Invalid bitcoin address\");\n \n     // Amount\n     int64 nAmount = AmountFromValue(params[1]);\n@@ -554,7 +553,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n         if(pwalletMain->IsLocked())\n             throw JSONRPCError(-14, \"Error: The wallet passphrase entered was incorrect.\");\n \n-        string strError = pwalletMain->SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n+        string strError = pwalletMain->SendMoneyToBitcoinAddress(address, nAmount, wtx);\n         if (strError != \"\")\n             throw JSONRPCError(-4, strError);\n     }\n@@ -807,7 +806,9 @@ Value sendfrom(const Array& params, bool fHelp)\n             \"<amount> is a real and is rounded to the nearest 0.00000001\");\n \n     string strAccount = AccountFromValue(params[0]);\n-    string strAddress = params[1].get_str();\n+    CBitcoinAddress address(params[1].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(-5, \"Invalid bitcoin address\");\n     int64 nAmount = AmountFromValue(params[2]);\n     int nMinDepth = 1;\n     if (params.size() > 3)\n@@ -833,7 +834,7 @@ Value sendfrom(const Array& params, bool fHelp)\n             throw JSONRPCError(-6, \"Account has insufficient funds\");\n \n         // Send\n-        string strError = pwalletMain->SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n+        string strError = pwalletMain->SendMoneyToBitcoinAddress(address, nAmount, wtx);\n         if (strError != \"\")\n             throw JSONRPCError(-4, strError);\n     }\n@@ -1538,8 +1539,7 @@ Value validateaddress(const Array& params, bool fHelp)\n             \"validateaddress <bitcoinaddress>\\n\"\n             \"Return information about <bitcoinaddress>.\");\n \n-    string strAddress = params[0].get_str();\n-    CBitcoinAddress address(strAddress);\n+    CBitcoinAddress address(params[0].get_str());\n     bool isValid = address.IsValid();\n \n     Object ret;"
      }
    ]
  }
]