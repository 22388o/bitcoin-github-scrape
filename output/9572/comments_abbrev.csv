sdaftuar,2017-01-18T18:29:34Z,"Concept ACK (I vaguely recall from when we introduced PrecomputedTransactionData that it was  non-negligible performance impact, I can re-check).  \n\nI'm not sure about this approach though, because `SignatureHash` assumes that if the cache passed in is non-NULL, then the precomputed hashes are correct, which will no longer be necessarily true. \n\nIn particular, if we wrote signing code that",https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-273559233,273559233,
jl2012,2017-01-19T08:14:52Z,"@sdaftuar added a bool to indicate whether the cache is ready so it becomes fail-safe. If we want to use the cache in signing code (which is currently not), an argument could be added to PrecomputedTransactionData::PrecomputedTransactionData to request for that.",https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-273708407,273708407,
jl2012,2017-01-19T08:21:30Z,"And I believe it's non-negligible. Assuming a block is full of non-witness txs (which all currently are), around 0.35MB of hashing is needed. For 100,000 blocks that'd be 35GB, which should take a few minutes at least.",https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-273709598,273709598,
gmaxwell,2017-01-19T20:30:16Z,"Concept ACK.  Probably the most important performance measure is connectTip latency at runtime, and I think this could quite possibly dominate that figure.",https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-273889607,273889607,
sipa,2017-04-09T16:07:58Z,utACK 0da49b5926b678b2ec35fabe37034f3d2e8385f4,https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-292795000,292795000,
jl2012,2017-09-25T14:35:21Z,@sdaftuar @gmaxwell does it look ok?,https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-331901234,331901234,
sdaftuar,2017-09-29T13:43:39Z,utACK,https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-333129894,333129894,
TheBlueMatt,2017-09-29T15:12:13Z,utACK 0da49b5926b678b2ec35fabe37034f3d2e8385f4 (in the future we really need to figure out a way to move this into our CTransactionRef stuff so that this gets calculated once upon mempool-add and then not recalculated when we get a block containing the same transaction).,https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-333153858,333153858,
theuni,2017-10-04T20:39:08Z,"I'd be a little more comfortable with this if PrecomputedTransactionData were passed around as const, so nobody's tempted to mess with ""ready"" for some crazy reason. But that can always be done later.\n\nutACK 0da49b5926b678b2ec35fabe37034f3d2e8385f4",https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-334282408,334282408,
laanwj,2017-10-05T17:49:11Z,"Looks correct to me, utACK 0da49b5",https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-334541133,334541133,
sipa,2017-10-05T17:52:05Z,utACK 0da49b5926b678b2ec35fabe37034f3d2e8385f4,https://github.com/bitcoin/bitcoin/pull/9572#issuecomment-334541904,334541904,
