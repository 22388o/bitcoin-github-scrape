[
  {
    "sha": "9404990490ab209e73bbcbb14b1ab26de0499818",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDA0OTkwNDkwYWIyMDllNzNiYmNiYjE0YjFhYjI2ZGUwNDk5ODE4",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-01T16:14:48Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-01T16:14:48Z"
      },
      "message": "wallet: Don't write BDB logs\n\nWe don't use BDB logs so it's pointless to keep them around. These log\nfiles are also what has locked us into BDB 4.8. We can just not write\nthem by settting DbEnv flag DB_LOG_IN_MEMORY and Db flag\nDB_TXN_NOT_DURABLE. The creation of the db log dir and other log\nsettings have been removed. Removing/moving the log is still kept around\nto remove/move the log files produced previously.",
      "tree": {
        "sha": "eac1e28b1745bd8bea808f2c4969545c5a22fc29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eac1e28b1745bd8bea808f2c4969545c5a22fc29"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9404990490ab209e73bbcbb14b1ab26de0499818",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9404990490ab209e73bbcbb14b1ab26de0499818",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9404990490ab209e73bbcbb14b1ab26de0499818",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9404990490ab209e73bbcbb14b1ab26de0499818/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "608359b071dac82a9cf33a6c9e01f87abfcb90eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/608359b071dac82a9cf33a6c9e01f87abfcb90eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/608359b071dac82a9cf33a6c9e01f87abfcb90eb"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 8,
      "deletions": 9
    },
    "files": [
      {
        "sha": "0b6c37d73c8be9ee716e3c4225a868d71fad4131",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9404990490ab209e73bbcbb14b1ab26de0499818/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9404990490ab209e73bbcbb14b1ab26de0499818/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=9404990490ab209e73bbcbb14b1ab26de0499818",
        "patch": "@@ -177,25 +177,20 @@ bool BerkeleyEnvironment::Open(bool retry)\n         return false;\n     }\n \n-    fs::path pathLogDir = pathIn / \"database\";\n-    TryCreateDirectories(pathLogDir);\n     fs::path pathErrorFile = pathIn / \"db.log\";\n-    LogPrintf(\"BerkeleyEnvironment::Open: LogDir=%s ErrorFile=%s\\n\", pathLogDir.string(), pathErrorFile.string());\n+    LogPrintf(\"BerkeleyEnvironment::Open: ErrorFile=%s\\n\", pathErrorFile.string());\n \n     unsigned int nEnvFlags = 0;\n     if (gArgs.GetBoolArg(\"-privdb\", DEFAULT_WALLET_PRIVDB))\n         nEnvFlags |= DB_PRIVATE;\n \n-    dbenv->set_lg_dir(pathLogDir.string().c_str());\n     dbenv->set_cachesize(0, 0x100000, 1); // 1 MiB should be enough for just the wallet\n-    dbenv->set_lg_bsize(0x10000);\n-    dbenv->set_lg_max(1048576);\n     dbenv->set_lk_max_locks(40000);\n     dbenv->set_lk_max_objects(40000);\n     dbenv->set_errfile(fsbridge::fopen(pathErrorFile, \"a\")); /// debug\n     dbenv->set_flags(DB_AUTO_COMMIT, 1);\n     dbenv->set_flags(DB_TXN_WRITE_NOSYNC, 1);\n-    dbenv->log_set_config(DB_LOG_AUTO_REMOVE, 1);\n+    dbenv->log_set_config(DB_LOG_IN_MEMORY, 1);\n     int ret = dbenv->open(strPath.c_str(),\n                          DB_CREATE |\n                              DB_INIT_LOCK |\n@@ -214,8 +209,9 @@ bool BerkeleyEnvironment::Open(bool retry)\n         }\n         Reset();\n         if (retry) {\n-            // try moving the database env out of the way\n+            // try moving the database env out of the way. Note we don't make this anymore, but old wallets might still have it\n             fs::path pathDatabaseBak = pathIn / strprintf(\"database.%d.bak\", GetTime());\n+            fs::path pathLogDir = pathIn / \"database\";\n             try {\n                 fs::rename(pathLogDir, pathDatabaseBak);\n                 LogPrintf(\"Moved old %s to %s. Retrying.\\n\", pathLogDir.string(), pathDatabaseBak.string());\n@@ -359,6 +355,7 @@ bool BerkeleyBatch::Recover(const fs::path& file_path, void *callbackDataIn, boo\n     LogPrintf(\"Salvage(aggressive) found %u records\\n\", salvagedData.size());\n \n     std::unique_ptr<Db> pdbCopy = MakeUnique<Db>(env->dbenv.get(), 0);\n+    pdbCopy->set_flags(DB_TXN_NOT_DURABLE);\n     int ret = pdbCopy->open(nullptr,               // Txn pointer\n                             filename.c_str(),   // Filename\n                             \"main\",             // Logical db name\n@@ -537,6 +534,7 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n         if (pdb == nullptr) {\n             int ret;\n             std::unique_ptr<Db> pdb_temp = MakeUnique<Db>(env->dbenv.get(), 0);\n+            pdb_temp->set_flags(DB_TXN_NOT_DURABLE);\n \n             bool fMockDb = env->IsMock();\n             if (fMockDb) {\n@@ -694,7 +692,7 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                 { // surround usage of db with extra {}\n                     BerkeleyBatch db(database, \"r\");\n                     std::unique_ptr<Db> pdbCopy = MakeUnique<Db>(env->dbenv.get(), 0);\n-\n+                    pdbCopy->set_flags(DB_TXN_NOT_DURABLE);\n                     int ret = pdbCopy->open(nullptr,               // Txn pointer\n                                             strFileRes.c_str(), // Filename\n                                             \"main\",             // Logical db name\n@@ -795,6 +793,7 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n                 dbenv->log_archive(&listp, DB_ARCH_REMOVE);\n                 Close();\n                 if (!fMockDb) {\n+                    // Remove the previous log dir. We don't create this anymore, but it might still be around from previous versions\n                     fs::remove_all(fs::path(strPath) / \"database\");\n                 }\n             }"
      }
    ]
  },
  {
    "sha": "44e42094fcda0e0515fda50901b39cf351a1f7f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGU0MjA5NGZjZGEwZTA1MTVmZGE1MDkwMWIzOWNmMzUxYTFmN2Y1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-01T17:33:00Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-01T17:35:40Z"
      },
      "message": "build: remove --with-incompatible-bdb and locking to BDB 4.8",
      "tree": {
        "sha": "3e052721fb4f779fe492ff2cee36af87b70519b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e052721fb4f779fe492ff2cee36af87b70519b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44e42094fcda0e0515fda50901b39cf351a1f7f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44e42094fcda0e0515fda50901b39cf351a1f7f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44e42094fcda0e0515fda50901b39cf351a1f7f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44e42094fcda0e0515fda50901b39cf351a1f7f5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9404990490ab209e73bbcbb14b1ab26de0499818",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9404990490ab209e73bbcbb14b1ab26de0499818",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9404990490ab209e73bbcbb14b1ab26de0499818"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 4,
      "deletions": 23
    },
    "files": [
      {
        "sha": "f781383103091814f774b0c76ad3d02959b3f287",
        "filename": "build-aux/m4/bitcoin_find_bdb.m4",
        "status": "renamed",
        "additions": 3,
        "deletions": 22,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44e42094fcda0e0515fda50901b39cf351a1f7f5/build-aux/m4/bitcoin_find_bdb.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44e42094fcda0e0515fda50901b39cf351a1f7f5/build-aux/m4/bitcoin_find_bdb.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb.m4?ref=44e42094fcda0e0515fda50901b39cf351a1f7f5",
        "patch": "@@ -2,15 +2,14 @@ dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n+AC_DEFUN([BITCOIN_FIND_BDB],[\n   AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n   AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n \n   if test \"x$BDB_CFLAGS\" = \"x\"; then\n     AC_MSG_CHECKING([for Berkeley DB C++ headers])\n     BDB_CPPFLAGS=\n     bdbpath=X\n-    bdb48path=X\n     bdbdirlist=\n     for _vn in 4.8 48 4 5 5.3 ''; do\n       for _pfx in b lib ''; do\n@@ -32,30 +31,12 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n       ],[\n         continue\n       ])\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-          #error \"failed to find bdb 4.8\"\n-        #endif\n-      ]])],[\n-        bdb48path=\"${searchpath}\"\n-        break\n-      ],[])\n     done\n     if test \"x$bdbpath\" = \"xX\"; then\n       AC_MSG_RESULT([no])\n       AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    elif test \"x$bdb48path\" = \"xX\"; then\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-      ],[\n-        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-      ])\n     else\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-      bdbpath=\"${bdb48path}\"\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n     fi\n   else\n     BDB_CPPFLAGS=${BDB_CFLAGS}\n@@ -64,7 +45,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n \n   if test \"x$BDB_LIBS\" = \"x\"; then\n     # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n+    for searchlib in db_cxx-5.3 db_cxx db5_cxx; do\n       AC_CHECK_LIB([$searchlib],[main],[\n         BDB_LIBS=\"-l${searchlib}\"\n         break",
        "previous_filename": "build-aux/m4/bitcoin_find_bdb48.m4"
      },
      {
        "sha": "0b1e60011beed67184c46a8ce89da1242324a80f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44e42094fcda0e0515fda50901b39cf351a1f7f5/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44e42094fcda0e0515fda50901b39cf351a1f7f5/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=44e42094fcda0e0515fda50901b39cf351a1f7f5",
        "patch": "@@ -1132,7 +1132,7 @@ fi\n \n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n+    BITCOIN_FIND_BDB\n fi\n \n dnl Check for libminiupnpc (optional)"
      }
    ]
  },
  {
    "sha": "cb29c3872706c55bf33806457024cc2c6a9a29de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjI5YzM4NzI3MDZjNTViZjMzODA2NDU3MDI0Y2MyYzZhOWEyOWRl",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-01T17:33:07Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-01T17:35:42Z"
      },
      "message": "depends: Bump BDB to 5.3.28",
      "tree": {
        "sha": "de6ecef853861d42a9907917c4fe7aeb0999ee99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de6ecef853861d42a9907917c4fe7aeb0999ee99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb29c3872706c55bf33806457024cc2c6a9a29de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb29c3872706c55bf33806457024cc2c6a9a29de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb29c3872706c55bf33806457024cc2c6a9a29de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb29c3872706c55bf33806457024cc2c6a9a29de/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44e42094fcda0e0515fda50901b39cf351a1f7f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44e42094fcda0e0515fda50901b39cf351a1f7f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44e42094fcda0e0515fda50901b39cf351a1f7f5"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "30655792e7d3ff97a76c2ea0a4f50d25d75b2a2b",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb29c3872706c55bf33806457024cc2c6a9a29de/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb29c3872706c55bf33806457024cc2c6a9a29de/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=cb29c3872706c55bf33806457024cc2c6a9a29de",
        "patch": "@@ -1,8 +1,8 @@\n package=bdb\n-$(package)_version=4.8.30\n+$(package)_version=5.3.28\n $(package)_download_path=https://download.oracle.com/berkeley-db\n $(package)_file_name=db-$($(package)_version).NC.tar.gz\n-$(package)_sha256_hash=12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef\n+$(package)_sha256_hash=76a25560d9e52a198d37a31440fd07632b5f1f8f9f2b6d5438f4bc3e7c9013ef\n $(package)_build_subdir=build_unix\n \n define $(package)_set_vars\n@@ -14,8 +14,8 @@ $(package)_cppflags_mingw32=-DUNICODE -D_UNICODE\n endef\n \n define $(package)_preprocess_cmds\n-  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h && \\\n-  sed -i.old 's/atomic_init/atomic_init_db/' dbinc/atomic.h mp/mp_region.c mp/mp_mvcc.c mp/mp_fget.c mutex/mut_method.c mutex/mut_tas.c && \\\n+  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' src/dbinc/atomic.h && \\\n+  sed -i.old 's/atomic_init/atomic_init_db/' src/dbinc/atomic.h src/mp/mp_region.c src/mp/mp_mvcc.c src/mp/mp_fget.c src/mutex/mut_method.c src/mutex/mut_tas.c && \\\n   cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub dist\n endef\n \n@@ -24,7 +24,7 @@ define $(package)_config_cmds\n endef\n \n define $(package)_build_cmds\n-  $(MAKE) libdb_cxx-4.8.a libdb-4.8.a\n+  $(MAKE) libdb_cxx-5.3.a libdb-5.3.a\n endef\n \n define $(package)_stage_cmds"
      }
    ]
  }
]