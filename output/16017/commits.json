[
  {
    "sha": "fe319648313d7e26e32db73ed36d2266a2613451",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTMxOTY0ODMxM2Q3ZTI2ZTMyZGI3M2VkMzZkMjI2NmEyNjEzNDUx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-05-13T14:07:13Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-05-13T14:54:22Z"
      },
      "message": "rpc: Drop -rpcuser and -rpcpassword from server",
      "tree": {
        "sha": "2f95a3b6ef3583846b57ca193c76faff3f42ffdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f95a3b6ef3583846b57ca193c76faff3f42ffdd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe319648313d7e26e32db73ed36d2266a2613451",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe319648313d7e26e32db73ed36d2266a2613451",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe319648313d7e26e32db73ed36d2266a2613451",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe319648313d7e26e32db73ed36d2266a2613451/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e79bbb73e08e3f191e97d3b67a2fbb510c5545ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e79bbb73e08e3f191e97d3b67a2fbb510c5545ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e79bbb73e08e3f191e97d3b67a2fbb510c5545ff"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 10,
      "deletions": 15
    },
    "files": [
      {
        "sha": "eae9c52434c4f3c9590d1b681a671016d49bd911",
        "filename": "doc/release-notes-16017.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe319648313d7e26e32db73ed36d2266a2613451/doc/release-notes-16017.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe319648313d7e26e32db73ed36d2266a2613451/doc/release-notes-16017.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16017.md?ref=fe319648313d7e26e32db73ed36d2266a2613451",
        "patch": "@@ -0,0 +1,4 @@\n+RPC changes\n+-----------\n+The server options `-rpcuser` and `-rpcpassword` were removed. The configuration\n+must be updated to use `-rpcauth` instead."
      },
      {
        "sha": "1785da369910fd2614af95853e75174edb474f6f",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 12,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe319648313d7e26e32db73ed36d2266a2613451/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe319648313d7e26e32db73ed36d2266a2613451/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=fe319648313d7e26e32db73ed36d2266a2613451",
        "patch": "@@ -214,18 +214,11 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n \n static bool InitRPCAuthentication()\n {\n-    if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n-    {\n-        LogPrintf(\"No rpcpassword set - using random cookie authentication.\\n\");\n-        if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n-            uiInterface.ThreadSafeMessageBox(\n-                _(\"Error: A fatal internal error occurred, see debug.log for details\"), // Same message as AbortNode\n-                \"\", CClientUIInterface::MSG_ERROR);\n-            return false;\n-        }\n-    } else {\n-        LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\n-        strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n+    if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n+        uiInterface.ThreadSafeMessageBox(\n+            _(\"Error: A fatal internal error occurred, see debug.log for details\"), // Same message as AbortNode\n+            \"\", CClientUIInterface::MSG_ERROR);\n+        return false;\n     }\n     if (gArgs.GetArg(\"-rpcauth\",\"\") != \"\")\n     {"
      },
      {
        "sha": "22b64607fcf81d736c779d854d7bcfed95338dc0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe319648313d7e26e32db73ed36d2266a2613451/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe319648313d7e26e32db73ed36d2266a2613451/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fe319648313d7e26e32db73ed36d2266a2613451",
        "patch": "@@ -541,12 +541,10 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-rpcauth=<userpw>\", \"Username and HMAC-SHA-256 hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcauth. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. Do not expose the RPC server to untrusted networks such as the public internet! This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", false, OptionsCategory::RPC);\n-    gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcserialversion\", strprintf(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\", DEFAULT_RPC_SERIALIZE_VERSION), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT), true, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcthreads=<n>\", strprintf(\"Set the number of threads to service RPC calls (default: %d)\", DEFAULT_HTTP_THREADS), false, OptionsCategory::RPC);\n-    gArgs.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE), true, OptionsCategory::RPC);\n     gArgs.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", false, OptionsCategory::RPC);\n "
      },
      {
        "sha": "257c2bb88b63e8c6524a5a6d409384e3a543865c",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe319648313d7e26e32db73ed36d2266a2613451/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe319648313d7e26e32db73ed36d2266a2613451/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=fe319648313d7e26e32db73ed36d2266a2613451",
        "patch": "@@ -314,7 +314,7 @@ std::string HelpMessageGroup(const std::string& message);\n /**\n  * Format a string to be used as option description in help messages\n  *\n- * @param option Option message (e.g. \"-rpcuser=<user>\")\n+ * @param option Option message (e.g. \"-rpcauth=<userpw>\")\n  * @param message Option description (e.g. \"Username for JSON-RPC connections\")\n  * @return the formatted string\n  */"
      }
    ]
  }
]