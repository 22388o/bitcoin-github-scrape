[
  {
    "sha": "d321740169ca396f78c58f4c230c2857050893a0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzIxNzQwMTY5Y2EzOTZmNzhjNThmNGMyMzBjMjg1NzA1MDg5M2Ew",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-05-16T22:49:20Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-05-17T01:22:44Z"
      },
      "message": "Simplify ProcessGetBlockData execution by removing send flag.\n\nSetting the send flag to false can be replaced by simply returning.",
      "tree": {
        "sha": "da3a11b47f0ca0d5dfbf19b136e1132c371aec14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da3a11b47f0ca0d5dfbf19b136e1132c371aec14"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d321740169ca396f78c58f4c230c2857050893a0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d321740169ca396f78c58f4c230c2857050893a0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d321740169ca396f78c58f4c230c2857050893a0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d321740169ca396f78c58f4c230c2857050893a0/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4cfe17c3382ba750131cdc8703b2978132822070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cfe17c3382ba750131cdc8703b2978132822070",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4cfe17c3382ba750131cdc8703b2978132822070"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "6d75f593b11b02599d82446022818b94bfc08ddf",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d321740169ca396f78c58f4c230c2857050893a0/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d321740169ca396f78c58f4c230c2857050893a0/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d321740169ca396f78c58f4c230c2857050893a0",
        "patch": "@@ -1072,7 +1072,6 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman* connma\n \n void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensusParams, const CInv& inv, CConnman* connman, const std::atomic<bool>& interruptMsgProc)\n {\n-    bool send = false;\n     std::shared_ptr<const CBlock> a_recent_block;\n     std::shared_ptr<const CBlockHeaderAndShortTxIDs> a_recent_compact_block;\n     bool fWitnessesPresentInARecentCompactBlock;\n@@ -1108,36 +1107,37 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n \n     LOCK(cs_main);\n     const CBlockIndex* pindex = LookupBlockIndex(inv.hash);\n-    if (pindex) {\n-        send = BlockRequestAllowed(pindex, consensusParams);\n-        if (!send) {\n-            LogPrint(BCLog::NET, \"%s: ignoring request from peer=%i for old block that isn't in the main chain\\n\", __func__, pfrom->GetId());\n-        }\n+    if (!pindex) {\n+        return;\n+    }\n+    if (!BlockRequestAllowed(pindex, consensusParams)) {\n+        LogPrint(BCLog::NET, \"%s: ignoring request from peer=%i for old block that isn't in the main chain\\n\", __func__, pfrom->GetId());\n+        return;\n     }\n     const CNetMsgMaker msgMaker(pfrom->GetSendVersion());\n     // disconnect node in case we have reached the outbound limit for serving historical blocks\n     // never disconnect whitelisted nodes\n-    if (send && connman->OutboundTargetReached(true) && ( ((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() > HISTORICAL_BLOCK_AGE)) || inv.type == MSG_FILTERED_BLOCK) && !pfrom->fWhitelisted)\n+    if (connman->OutboundTargetReached(true) && ( ((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() > HISTORICAL_BLOCK_AGE)) || inv.type == MSG_FILTERED_BLOCK) && !pfrom->fWhitelisted)\n     {\n         LogPrint(BCLog::NET, \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n \n         //disconnect node\n         pfrom->fDisconnect = true;\n-        send = false;\n+        return;\n     }\n     // Avoid leaking prune-height by never sending blocks below the NODE_NETWORK_LIMITED threshold\n-    if (send && !pfrom->fWhitelisted && (\n+    if (!pfrom->fWhitelisted && (\n             (((pfrom->GetLocalServices() & NODE_NETWORK_LIMITED) == NODE_NETWORK_LIMITED) && ((pfrom->GetLocalServices() & NODE_NETWORK) != NODE_NETWORK) && (chainActive.Tip()->nHeight - pindex->nHeight > (int)NODE_NETWORK_LIMITED_MIN_BLOCKS + 2 /* add two blocks buffer extension for possible races */) )\n        )) {\n         LogPrint(BCLog::NET, \"Ignore block request below NODE_NETWORK_LIMITED threshold from peer=%d\\n\", pfrom->GetId());\n \n         //disconnect node and prevent it from stalling (would otherwise wait for the missing block)\n         pfrom->fDisconnect = true;\n-        send = false;\n+        return;\n     }\n     // Pruned nodes may have deleted the block, so check whether\n     // it's available before trying to send.\n-    if (send && (pindex->nStatus & BLOCK_HAVE_DATA))\n+    if (pindex->nStatus & BLOCK_HAVE_DATA)\n     {\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {"
      }
    ]
  },
  {
    "sha": "dd5ee7fd3aa71629298ba4c32e4e136643fae1cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDVlZTdmZDNhYTcxNjI5Mjk4YmE0YzMyZTRlMTM2NjQzZmFlMWNm",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-05-17T01:22:59Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2018-05-19T23:49:22Z"
      },
      "message": "Functional test of receipt of invalid getdata request.",
      "tree": {
        "sha": "840d464838019666ef762debabc67bd5fd136cd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/840d464838019666ef762debabc67bd5fd136cd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d321740169ca396f78c58f4c230c2857050893a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d321740169ca396f78c58f4c230c2857050893a0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d321740169ca396f78c58f4c230c2857050893a0"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "55d74af7ef0e9654a3b847e43e8c525f93432348",
        "filename": "test/functional/p2p_invalid_getdata.py",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf/test/functional/p2p_invalid_getdata.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf/test/functional/p2p_invalid_getdata.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_getdata.py?ref=dd5ee7fd3aa71629298ba4c32e4e136643fae1cf",
        "patch": "@@ -0,0 +1,34 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Request non-existent block.\n+\"\"\"\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+# TestP2PConn: A peer we use to send messages to bitcoind, and store responses.\n+class TestP2PConn(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+\n+class InvalidGetDataTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.\n+        self.test_node = self.nodes[0].add_p2p_connection(TestP2PConn())\n+\n+        network_thread_start()\n+\n+        self.test_node.wait_for_verack()\n+\n+        self.test_node.send_message(msg_getdata(inv=[CInv(2, 0)]))\n+\n+if __name__ == '__main__':\n+    InvalidGetDataTest().main()\n+"
      },
      {
        "sha": "2b254459a32cad5da9d81eefe54111867b0071da",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd5ee7fd3aa71629298ba4c32e4e136643fae1cf/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=dd5ee7fd3aa71629298ba4c32e4e136643fae1cf",
        "patch": "@@ -113,6 +113,7 @@\n     'mining_prioritisetransaction.py',\n     'p2p_invalid_block.py',\n     'p2p_invalid_tx.py',\n+    'p2p_invalid_getdata.py',\n     'feature_versionbits_warning.py',\n     'rpc_preciousblock.py',\n     'wallet_importprunedfunds.py',"
      }
    ]
  }
]