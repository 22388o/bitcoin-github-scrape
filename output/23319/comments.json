[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947945962",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-947945962",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 947945962,
    "node_id": "IC_kwDOABII5844gIHq",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T18:52:54Z",
    "updated_at": "2021-10-20T18:52:54Z",
    "author_association": "MEMBER",
    "body": "I think this has been said on IRC already: Shouldn't this be hidden behind a flag like the RPC it is copied from?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947945962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947946201",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-947946201",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 947946201,
    "node_id": "IC_kwDOABII5844gILZ",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T18:53:13Z",
    "updated_at": "2021-10-20T18:53:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Concept ACK.\r\n> \r\n> It would be interesting to add a functional test case.\r\n\r\nAgreed, wanted to discuss the implementation before diving in. \r\nAnything special I should know about testing `./test/functional/rpc_rawtransaction.py` ? This is my 1st time doing functional test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947946201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947957710",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-947957710",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 947957710,
    "node_id": "IC_kwDOABII5844gK_O",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T19:08:55Z",
    "updated_at": "2021-10-20T19:08:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think this has been said on IRC already: Shouldn't this be hidden behind a flag like the RPC it is copied from?\r\n\r\nTo confirm we want the second (hybrid) parameter to have three verbosity levels:\r\n\r\n* `0`  or `false` - hex encoded\r\n*  `1` or `true`  - returns an Object with information about txid\r\n* `2` -  adds fee field to Object",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947957710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947959148",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-947959148",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 947959148,
    "node_id": "IC_kwDOABII5844gLVs",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T19:11:07Z",
    "updated_at": "2021-10-20T19:11:07Z",
    "author_association": "MEMBER",
    "body": "Yes, if that is the behavior of the other RPC, it makes sense to copy it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947959148/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947963375",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-947963375",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 947963375,
    "node_id": "IC_kwDOABII5844gMXv",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-20T19:17:00Z",
    "updated_at": "2021-10-20T19:17:00Z",
    "author_association": "MEMBER",
    "body": "You might want to also add the UTXOs being spent by the transaction. You're looking those up anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947963375/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/948513873",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-948513873",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 948513873,
    "node_id": "IC_kwDOABII5844iSxR",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-21T11:22:58Z",
    "updated_at": "2021-10-21T11:22:58Z",
    "author_association": "MEMBER",
    "body": "The tests can also be taken from the other RPC: https://github.com/bitcoin/bitcoin/pull/22918/files",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/948513873/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951216484",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-951216484",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 951216484,
    "node_id": "IC_kwDOABII5844smlk",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-25T18:59:59Z",
    "updated_at": "2021-11-30T22:59:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23599](https://github.com/bitcoin/bitcoin/pull/23599) (Tidy up RPCTxSerializationFlags by MarcoFalke)\n* [#23507](https://github.com/bitcoin/bitcoin/pull/23507) (Refactor: Improve API design of `ScriptToUniv`, `TxToUniv` etc to return the `UniValue` instead of mutating a parameter/reference by mjdietzx)\n* [#23497](https://github.com/bitcoin/bitcoin/pull/23497) (Add `src/node/` and `src/wallet/` code to `node::` and `wallet::` namespaces by ryanofsky)\n* [#22924](https://github.com/bitcoin/bitcoin/pull/22924) (refactor: cleanup/followup of Remove -deprecatedrpc=addresses flag by mjdietzx)\n* [#22698](https://github.com/bitcoin/bitcoin/pull/22698) (Implement RBF inherited signaling and fix getmempoolentry returned bip125-replaceable status by mjdietzx)\n* [#22689](https://github.com/bitcoin/bitcoin/pull/22689) (rpc: deprecate top-level fee fields in getmempool RPCs by josibake)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951216484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954076159",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-954076159",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 954076159,
    "node_id": "IC_kwDOABII58443gv_",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T18:02:06Z",
    "updated_at": "2021-10-28T18:02:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> You might want to also add the UTXOs being spent by the transaction. You're looking those up anyway.\r\n\r\n@sipa Can you clarify a bit more on `add the UTXOs being spent` ? Specifically, what you like to add to the response body?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954076159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954089224",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-954089224",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 954089224,
    "node_id": "IC_kwDOABII58443j8I",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-28T18:20:00Z",
    "updated_at": "2021-10-28T18:20:00Z",
    "author_association": "MEMBER",
    "body": "@dougEfresh The scriptPubKey and amount being spent for each input (together with information about the scriptPubKey like the output already has).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954089224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954580846",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-954580846",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 954580846,
    "node_id": "IC_kwDOABII58445b9u",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-29T09:11:03Z",
    "updated_at": "2021-10-29T09:11:03Z",
    "author_association": "MEMBER",
    "body": "Showing the utxos being spent is also being done by the other RPC. Any questions you might have should be answered by looking at the code changes of https://github.com/bitcoin/bitcoin/pull/22918/files",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954580846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954678983",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-954678983",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 954678983,
    "node_id": "IC_kwDOABII58445z7H",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-29T11:48:53Z",
    "updated_at": "2021-10-29T11:48:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Showing the utxos being spent is also being done by the other RPC. Any questions you might have should be answered by looking at the code changes of https://github.com/bitcoin/bitcoin/pull/22918/files\r\n\r\nthanks, added utxos with  `TxVerbosity::SHOW_DETAILS_AND_PREVOUT`\r\n\r\nMy latest change includes \r\n\r\n* test for prevout (utxo)\r\n* release documentation\r\n* consolidate if statement in ./src/rpc/rawtransaction.cpp  getrawtransaction\r\n  ```\r\n  if (verbosity == 1 || !blockindex || IsBlockPruned(blockindex) ....\r\n  ```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954678983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968372084",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-968372084",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 968372084,
    "node_id": "IC_kwDOABII5845uC90",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-14T22:04:20Z",
    "updated_at": "2021-11-14T22:04:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Initial concept ACK. This is really helpful for wallets trying to sync with core rpc out there, and it will reduce get calls by half for input fetching. Thanks for working on this.\r\n> \r\n> Below are few minor nits.\r\n> \r\n> Will review in more detail later.\r\n\r\n@rajarshimaitra thanks for feedback. The test I  added  could use a good review. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/968372084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/971406958",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-971406958",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 971406958,
    "node_id": "IC_kwDOABII58455n5u",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-17T09:43:48Z",
    "updated_at": "2021-11-17T09:43:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Review ACK [fb2f153](https://github.com/bitcoin/bitcoin/commit/fb2f153136dc14921cb7f249fe224919cb7094bb)\r\n> \r\n> I am not sure why, but I am hitting this weird error in the test\r\n> \r\n> ```\r\n> $ ./test/functional/rpc_rawtransaction.py \r\n\r\nI saw that as well, I'm fixing. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/971406958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974628126",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-974628126",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 974628126,
    "node_id": "IC_kwDOABII5846F6Ue",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-20T10:21:47Z",
    "updated_at": "2021-11-20T10:21:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Re ACK [eaf10aa](https://github.com/bitcoin/bitcoin/commit/eaf10aacddfd32c0722414a3f040d3fae2b51cf7).\r\n> \r\n> I think the commits can be rearranged a bit, consolidating all file specific changes. Would be easier for new reviewers.\r\n\r\nShould I just squash into one commit ?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974628126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974663889",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-974663889",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 974663889,
    "node_id": "IC_kwDOABII5846GDDR",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?u=3bb306a343c601258749dbbd03dbe66d0e9d82b4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-20T15:15:47Z",
    "updated_at": "2021-11-20T15:15:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Should I just squash into one commit ?\r\n\r\nI think the best thing to do here is to put one commit for each file, and order them logically (ex: `client.cpp` changes should come before `rawtransaction.cpp`, functional test commit should be the last, etc). For more details on commit structuring refer https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#committing-patches",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974663889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974769534",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-974769534",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 974769534,
    "node_id": "IC_kwDOABII5846Gc1-",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T07:38:18Z",
    "updated_at": "2021-11-21T07:38:18Z",
    "author_association": "MEMBER",
    "body": "I think it is also fine to have just one commit, since this is just one feature. And it is fine to add tests in the same commit that adds features.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974769534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974781343",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#issuecomment-974781343",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23319",
    "id": 974781343,
    "node_id": "IC_kwDOABII5846Gfuf",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?u=c505319a46b0edc7db0d0b5410d811f12e47e848&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-21T09:19:50Z",
    "updated_at": "2021-11-21T09:19:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think it is also fine to have just one commit, since this is just one feature. And it is fine to add tests in the same commit that adds features.\r\n\r\nsquashed to one commit ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974781343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732469998",
    "pull_request_review_id": 784071729,
    "id": 732469998,
    "node_id": "PRRC_kwDOABII584rqJru",
    "diff_hunk": "@@ -211,8 +213,28 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (!blockindex) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);\n+\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2730b680d250a5e258c38e9d638baf36e78bc17e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "wouldn't it make sense to combine the `!blockindex` check here?",
    "created_at": "2021-10-20T07:03:19Z",
    "updated_at": "2021-10-20T07:04:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732469998",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732469998"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732469998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732469998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 225,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732470233",
    "pull_request_review_id": 784071729,
    "id": 732470233,
    "node_id": "PRRC_kwDOABII584rqJvZ",
    "diff_hunk": "@@ -97,6 +98,7 @@ static RPCHelpMan getrawtransaction()\n                          {\n                              {RPCResult::Type::BOOL, \"in_active_chain\", /* optional */ true, \"Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\"},\n                              {RPCResult::Type::STR_HEX, \"hex\", \"The serialized, hex-encoded data for 'txid'\"},\n+                             {RPCResult::Type::STR_AMOUNT, \"fee\", \"transaction fee in \" + CURRENCY_UNIT},",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2730b680d250a5e258c38e9d638baf36e78bc17e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "it is optional?",
    "created_at": "2021-10-20T07:03:46Z",
    "updated_at": "2021-10-20T07:04:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732470233",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732470233"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732470233"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732470233/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 101,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732734970",
    "pull_request_review_id": 784429612,
    "id": 732734970,
    "node_id": "PRRC_kwDOABII584rrKX6",
    "diff_hunk": "@@ -211,8 +213,28 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (!blockindex) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);\n+\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2730b680d250a5e258c38e9d638baf36e78bc17e",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yes, and moved",
    "created_at": "2021-10-20T12:42:53Z",
    "updated_at": "2021-10-20T12:42:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732734970",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732734970"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732734970"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732734970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 225,
    "side": "RIGHT",
    "in_reply_to_id": 732469998
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732741166",
    "pull_request_review_id": 784437933,
    "id": 732741166,
    "node_id": "PRRC_kwDOABII584rrL4u",
    "diff_hunk": "@@ -211,8 +213,24 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "25989832aacc77dc362410debf7df718e48b5852",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this is an unrelated behavior change",
    "created_at": "2021-10-20T12:49:52Z",
    "updated_at": "2021-10-20T12:49:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732741166",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732741166"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732741166"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732741166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 226,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732779544",
    "pull_request_review_id": 784490365,
    "id": 732779544,
    "node_id": "PRRC_kwDOABII584rrVQY",
    "diff_hunk": "@@ -211,8 +213,24 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "25989832aacc77dc362410debf7df718e48b5852",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "right. good catch. ",
    "created_at": "2021-10-20T13:30:32Z",
    "updated_at": "2021-10-20T13:30:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732779544",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732779544"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732779544"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732779544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 226,
    "side": "RIGHT",
    "in_reply_to_id": 732741166
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732823420",
    "pull_request_review_id": 784552225,
    "id": 732823420,
    "node_id": "PRRC_kwDOABII584rrf98",
    "diff_hunk": "@@ -211,8 +213,24 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "25989832aacc77dc362410debf7df718e48b5852",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I mean why are you changing this at all? Seems unrelated and the existing code should work fine.",
    "created_at": "2021-10-20T14:14:00Z",
    "updated_at": "2021-10-20T14:14:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732823420",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732823420"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732823420"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732823420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 226,
    "side": "RIGHT",
    "in_reply_to_id": 732741166
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732827529",
    "pull_request_review_id": 784557989,
    "id": 732827529,
    "node_id": "PRRC_kwDOABII584rrg-J",
    "diff_hunk": "@@ -211,8 +213,24 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "25989832aacc77dc362410debf7df718e48b5852",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "you said \"wouldn't it make sense to combine the !blockindex check here?\"\r\nin your inital review, i thought you meant combine !blockindex with my new if statement ",
    "created_at": "2021-10-20T14:18:01Z",
    "updated_at": "2021-10-20T14:18:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732827529",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732827529"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732827529"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732827529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 226,
    "side": "RIGHT",
    "in_reply_to_id": 732741166
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732832020",
    "pull_request_review_id": 784564260,
    "id": 732832020,
    "node_id": "PRRC_kwDOABII584rriEU",
    "diff_hunk": "@@ -211,8 +213,24 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "25989832aacc77dc362410debf7df718e48b5852",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, but the blockindex check can stay as-is. Also, I think it makes more sense to clarify the condition on when the field is existing/missing.\r\n\r\n```\r\nif (a) pushKV();\r\n```\r\n\r\nis clearer than\r\n\r\n```\r\nif (something)\r\n  if (a) pushKV();\r\n  return\r\npushKV();",
    "created_at": "2021-10-20T14:22:23Z",
    "updated_at": "2021-10-20T14:22:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732832020",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732832020"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r732832020"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732832020/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 226,
    "side": "RIGHT",
    "in_reply_to_id": 732741166
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733057279",
    "pull_request_review_id": 784876223,
    "id": 733057279,
    "node_id": "PRRC_kwDOABII584rsZD_",
    "diff_hunk": "@@ -211,8 +213,24 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    result.pushKV(\"in_active_chain\", in_active_chain);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "25989832aacc77dc362410debf7df718e48b5852",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Gotcha, Hopefully now it looks better",
    "created_at": "2021-10-20T18:50:48Z",
    "updated_at": "2021-10-20T18:50:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r733057279",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733057279"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r733057279"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733057279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 226,
    "side": "RIGHT",
    "in_reply_to_id": 732741166
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738608678",
    "pull_request_review_id": 792171748,
    "id": 738608678,
    "node_id": "PRRC_kwDOABII584sBkYm",
    "diff_hunk": "@@ -206,13 +213,35 @@ static RPCHelpMan getrawtransaction()\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n     }\n \n-    if (!fVerbose) {\n+    if (verbosity == 0) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (blockindex) {\n+        result.pushKV(\"in_active_chain\", in_active_chain);\n+    }\n+    if (verbosity == 1) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 93,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "83e5f6c5844892da4c4f9290d6c20fbaee2ae295",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is there a reason you don't add `verbosity == 1` to this conjunction instead of duplicating the same `TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate()); return result;` above?",
    "created_at": "2021-10-28T17:31:40Z",
    "updated_at": "2021-10-28T17:32:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r738608678",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738608678"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r738608678"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738608678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 232,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738622797",
    "pull_request_review_id": 792191018,
    "id": 738622797,
    "node_id": "PRRC_kwDOABII584sBn1N",
    "diff_hunk": "@@ -206,13 +213,35 @@ static RPCHelpMan getrawtransaction()\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n     }\n \n-    if (!fVerbose) {\n+    if (verbosity == 0) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (blockindex) {\n+        result.pushKV(\"in_active_chain\", in_active_chain);\n+    }\n+    if (verbosity == 1) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 93,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "83e5f6c5844892da4c4f9290d6c20fbaee2ae295",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I guess mostly to prevent unneeded allocation of \r\n```\r\n    std::optional<size_t>  opt_tx_position{std::nullopt};\r\n    CBlockUndo blockUndo;\r\n    CBlock block;\r\n```\r\n I can move it to the `if (!blockindex || IsBlockPruned(blockindex)...`  if you like. \r\n",
    "created_at": "2021-10-28T17:51:28Z",
    "updated_at": "2021-10-28T17:51:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r738622797",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738622797"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r738622797"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738622797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 232,
    "side": "RIGHT",
    "in_reply_to_id": 738608678
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739162422",
    "pull_request_review_id": 792936962,
    "id": 739162422,
    "node_id": "PRRC_kwDOABII584sDrk2",
    "diff_hunk": "@@ -206,13 +213,35 @@ static RPCHelpMan getrawtransaction()\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n     }\n \n-    if (!fVerbose) {\n+    if (verbosity == 0) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (blockindex) {\n+        result.pushKV(\"in_active_chain\", in_active_chain);\n+    }\n+    if (verbosity == 1) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+\n+    std::optional<size_t>  opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (!blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 93,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "83e5f6c5844892da4c4f9290d6c20fbaee2ae295",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For code clarity, I moved `verbosity == 1`  to the if block. \r\n\r\nThe performance impact is marginal ",
    "created_at": "2021-10-29T11:43:32Z",
    "updated_at": "2021-10-29T11:43:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739162422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739162422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739162422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739162422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 232,
    "side": "RIGHT",
    "in_reply_to_id": 738608678
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739167913",
    "pull_request_review_id": 792944260,
    "id": 739167913,
    "node_id": "PRRC_kwDOABII584sDs6p",
    "diff_hunk": "@@ -79,13 +80,14 @@ static RPCHelpMan getrawtransaction()\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n                 \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"\\nHint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbose is 0, 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\"\n+                \"If verbose is 1 or 'true', returns an Object with information about 'txid'.\\n\"\n+                \"If verbose is 2, returns an Object with information about 'txid', including fees and prevout information for inputs(only for unpruned blocks in the current best chain).\\n\",",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I will add a space between ` inputs(only` after review by others.",
    "created_at": "2021-10-29T11:52:34Z",
    "updated_at": "2021-10-29T11:54:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739167913",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739167913"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739167913"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739167913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 87,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739381944",
    "pull_request_review_id": 793244895,
    "id": 739381944,
    "node_id": "PRRC_kwDOABII584sEhK4",
    "diff_hunk": "@@ -79,13 +80,14 @@ static RPCHelpMan getrawtransaction()\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n                 \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"\\nHint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbose is 0, 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "verbos*ity*",
    "created_at": "2021-10-29T16:29:57Z",
    "updated_at": "2021-10-29T16:29:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739381944",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739381944"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739381944"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739381944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 85,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739382479",
    "pull_request_review_id": 793245669,
    "id": 739382479,
    "node_id": "PRRC_kwDOABII584sEhTP",
    "diff_hunk": "@@ -79,13 +80,14 @@ static RPCHelpMan getrawtransaction()\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n                 \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"\\nHint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbose is 0, 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\"\n+                \"If verbose is 1 or 'true', returns an Object with information about 'txid'.\\n\"\n+                \"If verbose is 2, returns an Object with information about 'txid', including fees and prevout information for inputs(only for unpruned blocks in the current best chain).\\n\",\n                 {\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n-                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"If false, return a string, otherwise return a json object\"},\n+                    {\"verbosity|verbose\", RPCArg::Type::NUM, RPCArg::Default{0}, \"0|false for hex-encoded data, 1|true for a json object, and 2 for json object with fee\"},",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Stick to just the numbers in docs. (bool is essentially just backwards compat)",
    "created_at": "2021-10-29T16:30:52Z",
    "updated_at": "2021-10-29T16:30:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739382479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739382479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739382479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739382479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 90,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739601931",
    "pull_request_review_id": 793532825,
    "id": 739601931,
    "node_id": "PRRC_kwDOABII584sFW4L",
    "diff_hunk": "@@ -141,21 +143,35 @@ def getrawtransaction_tests(self):\n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n             # We should be able to get the raw transaction by providing the correct block\n-            gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True, blockhash=block1)\n-            assert_equal(gottx['txid'], tx)\n-            assert_equal(gottx['in_active_chain'], True)\n-            if n == 0:\n-                self.log.info(\"Test getrawtransaction with -txindex, without blockhash: 'in_active_chain' should be absent\")\n-                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True)\n+            for v in [1, 2]: # verbosity level\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n                 assert_equal(gottx['txid'], tx)\n-                assert 'in_active_chain' not in gottx\n-            else:\n-                self.log.info(\"Test getrawtransaction without -txindex, without blockhash: expect the call to raise\")\n-                err_msg = (\n-                    \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n-                    \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n-                )\n-                assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid=tx, verbose=True)\n+                assert_equal(gottx['in_active_chain'], True)\n+                if v == 2:\n+                    # fee is in verbosity 2 only\n+                    assert_equal(gottx['fee'], Decimal('0.00002820'))",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 55,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What is supposed to guarantee this is correct?",
    "created_at": "2021-10-30T03:22:40Z",
    "updated_at": "2021-10-30T03:22:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739601931",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739601931"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739601931"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739601931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 146,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739621037",
    "pull_request_review_id": 793546313,
    "id": 739621037,
    "node_id": "PRRC_kwDOABII584sFbit",
    "diff_hunk": "@@ -141,21 +143,35 @@ def getrawtransaction_tests(self):\n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n             # We should be able to get the raw transaction by providing the correct block\n-            gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True, blockhash=block1)\n-            assert_equal(gottx['txid'], tx)\n-            assert_equal(gottx['in_active_chain'], True)\n-            if n == 0:\n-                self.log.info(\"Test getrawtransaction with -txindex, without blockhash: 'in_active_chain' should be absent\")\n-                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True)\n+            for v in [1, 2]: # verbosity level\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n                 assert_equal(gottx['txid'], tx)\n-                assert 'in_active_chain' not in gottx\n-            else:\n-                self.log.info(\"Test getrawtransaction without -txindex, without blockhash: expect the call to raise\")\n-                err_msg = (\n-                    \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n-                    \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n-                )\n-                assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid=tx, verbose=True)\n+                assert_equal(gottx['in_active_chain'], True)\n+                if v == 2:\n+                    # fee is in verbosity 2 only\n+                    assert_equal(gottx['fee'], Decimal('0.00002820'))",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 55,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The value of fee is not important. I want to see that the field fee exists. Change it to `assert('fee' in gottxt)` ?\r\n\r\nThere are another tests (outside the scope of this PR) which validate the fee amount. ",
    "created_at": "2021-10-30T07:28:40Z",
    "updated_at": "2021-10-30T07:29:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739621037",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739621037"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739621037"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739621037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 739601931
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739668657",
    "pull_request_review_id": 793581717,
    "id": 739668657,
    "node_id": "PRRC_kwDOABII584sFnKx",
    "diff_hunk": "@@ -141,21 +143,35 @@ def getrawtransaction_tests(self):\n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n             # We should be able to get the raw transaction by providing the correct block\n-            gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True, blockhash=block1)\n-            assert_equal(gottx['txid'], tx)\n-            assert_equal(gottx['in_active_chain'], True)\n-            if n == 0:\n-                self.log.info(\"Test getrawtransaction with -txindex, without blockhash: 'in_active_chain' should be absent\")\n-                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True)\n+            for v in [1, 2]: # verbosity level\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n                 assert_equal(gottx['txid'], tx)\n-                assert 'in_active_chain' not in gottx\n-            else:\n-                self.log.info(\"Test getrawtransaction without -txindex, without blockhash: expect the call to raise\")\n-                err_msg = (\n-                    \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n-                    \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n-                )\n-                assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid=tx, verbose=True)\n+                assert_equal(gottx['in_active_chain'], True)\n+                if v == 2:\n+                    # fee is in verbosity 2 only\n+                    assert_equal(gottx['fee'], Decimal('0.00002820'))",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 55,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe do `tx_fee = -self.nodes[2].gettransaction(tx)['fee']` immediately after sending and compare to that?",
    "created_at": "2021-10-30T15:59:47Z",
    "updated_at": "2021-10-30T15:59:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739668657",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739668657"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r739668657"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739668657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 739601931
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/740920756",
    "pull_request_review_id": 795143842,
    "id": 740920756,
    "node_id": "PRRC_kwDOABII584sKY20",
    "diff_hunk": "@@ -141,21 +143,35 @@ def getrawtransaction_tests(self):\n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n             # We should be able to get the raw transaction by providing the correct block\n-            gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True, blockhash=block1)\n-            assert_equal(gottx['txid'], tx)\n-            assert_equal(gottx['in_active_chain'], True)\n-            if n == 0:\n-                self.log.info(\"Test getrawtransaction with -txindex, without blockhash: 'in_active_chain' should be absent\")\n-                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True)\n+            for v in [1, 2]: # verbosity level\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n                 assert_equal(gottx['txid'], tx)\n-                assert 'in_active_chain' not in gottx\n-            else:\n-                self.log.info(\"Test getrawtransaction without -txindex, without blockhash: expect the call to raise\")\n-                err_msg = (\n-                    \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n-                    \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n-                )\n-                assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid=tx, verbose=True)\n+                assert_equal(gottx['in_active_chain'], True)\n+                if v == 2:\n+                    # fee is in verbosity 2 only\n+                    assert_equal(gottx['fee'], Decimal('0.00002820'))",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 55,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No fee field in `gettransaction` . \r\nI added `assert('fee' in gottxt)`  but kept `assert_equal(gottx['fee'], Decimal('0.00002820'))` \r\n",
    "created_at": "2021-11-02T10:26:54Z",
    "updated_at": "2021-11-02T10:26:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r740920756",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/740920756"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r740920756"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/740920756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 739601931
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748786334",
    "pull_request_review_id": 805417766,
    "id": 748786334,
    "node_id": "PRRC_kwDOABII584soZKe",
    "diff_hunk": "@@ -206,13 +214,31 @@ static RPCHelpMan getrawtransaction()\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n     }\n \n-    if (!fVerbose) {\n+    if (verbosity == 0) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (blockindex) {\n+        result.pushKV(\"in_active_chain\", in_active_chain);\n+    }\n+\n+    std::optional<size_t> opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (verbosity == 1 || !blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransactionRef t = block.vtx.at(i);\n+        if (*t == *tx) {\n+            // blockundo does not have coinbase tx\n+            opt_tx_position = std::optional<size_t>{i-1};\n+            break;",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 157,
    "original_position": 106,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "amovfx",
      "id": 45839100,
      "node_id": "MDQ6VXNlcjQ1ODM5MTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45839100?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amovfx",
      "html_url": "https://github.com/amovfx",
      "followers_url": "https://api.github.com/users/amovfx/followers",
      "following_url": "https://api.github.com/users/amovfx/following{/other_user}",
      "gists_url": "https://api.github.com/users/amovfx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amovfx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amovfx/subscriptions",
      "organizations_url": "https://api.github.com/users/amovfx/orgs",
      "repos_url": "https://api.github.com/users/amovfx/repos",
      "events_url": "https://api.github.com/users/amovfx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amovfx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm just studying for the pr review club. \r\n\r\n There was a question about the performance implications of this loop. I was digging through the code and I was perhaps thinking that CBlockUndo could maybe benefit from a faster data structure to find a transaction? Maybe a method that returns the data faster.\r\n\r\nPerhaps that is a later improvement and off topic?",
    "created_at": "2021-11-14T01:52:37Z",
    "updated_at": "2021-11-14T01:52:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748786334",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748786334"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748786334"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748786334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 261,
    "original_start_line": 233,
    "start_side": "RIGHT",
    "line": 266,
    "original_line": 266,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748868321",
    "pull_request_review_id": 805483976,
    "id": 748868321,
    "node_id": "PRRC_kwDOABII584sotLh",
    "diff_hunk": "@@ -99,6 +99,11 @@ Updated RPCs\n   causes the lock to be written persistently to the wallet database. This\n   allows UTXOs to remain locked even after node restarts or crashes. (#23065)\n \n+- `getrawtransaction` RPC verbose argument changed to verbosity levels: 0, 1 and 2 (backwards compatible).\n+  Verbosity 0 and 1 correspond to previous (verbose) argument's values `false` and `true`.\n+  Verbosity `3` contains an optional `fee` field and optional `prevout` subfield\n+  describing the spent output. See `getblock` RPC for `prevout` details.",
    "path": "doc/release-notes.md",
    "position": null,
    "original_position": 7,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably I am missing something, but I am not finding any `prevout` reference in the `getblock` help doc. Is it referring to it's internal implementation? Maybe this line could be made a little more clear? ",
    "created_at": "2021-11-14T15:13:55Z",
    "updated_at": "2021-11-14T18:06:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748868321",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748868321"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748868321"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748868321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748871612",
    "pull_request_review_id": 805483976,
    "id": 748871612,
    "node_id": "PRRC_kwDOABII584sot-8",
    "diff_hunk": "@@ -79,13 +80,14 @@ static RPCHelpMan getrawtransaction()\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n                 \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"\\nHint: Use gettransaction for wallet transactions.\\n\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To keep parity with lines below, maybe also remove leading `\\n` from here? ",
    "created_at": "2021-11-14T15:40:45Z",
    "updated_at": "2021-11-14T18:06:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748871612",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748871612"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748871612"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748871612/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748873364",
    "pull_request_review_id": 805483976,
    "id": 748873364,
    "node_id": "PRRC_kwDOABII584souaU",
    "diff_hunk": "@@ -79,13 +80,14 @@ static RPCHelpMan getrawtransaction()\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n                 \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"\\nHint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbosity is 0 or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\"\n+                \"If verbosity is 1, returns an Object with information about 'txid'.\\n\"\n+                \"If verbosity is 2, returns an Object with information about 'txid', including fees and prevout information for inputs (only for unpruned blocks in the current best chain).\\n\",",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the framing can be improved a bit.\r\n1. Using \"transaction\" instead of \"txid\". They are not in general replaceable with each other for all contexts. It's clearer to say \"details of transaction\" than \"details of txid\".\r\n2. The verbosity 2 comment can feel a little confusing for users on the \"prevout for inputs\" part. It might sound at first glance as the prevout for the tx containing inputs of the given tx. I think keeping it simple like \" ... , including fee and prevout information ... \" only is clear enough. The only structure related to prevout in a transaction is inputs, so its redundant to explicitly specify.    ",
    "created_at": "2021-11-14T15:55:36Z",
    "updated_at": "2021-11-14T18:06:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748873364",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748873364"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748873364"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748873364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 85,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 87,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748884982",
    "pull_request_review_id": 805483976,
    "id": 748884982,
    "node_id": "PRRC_kwDOABII584soxP2",
    "diff_hunk": "@@ -150,6 +153,7 @@ static RPCHelpMan getrawtransaction()\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" 2 \\\"myblockhash\\\"\")",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 105,
    "original_position": 56,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am not entirely sure, should we still keep the previous usage in the examples above this line?\r\n\r\nEven though the `bool` values are still accepted, the help doc doesn't include it anymore, so it might be confusing to users.  ",
    "created_at": "2021-11-14T17:31:17Z",
    "updated_at": "2021-11-14T18:06:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748884982",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748884982"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748884982"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748884982/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 182,
    "original_line": 182,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914552",
    "pull_request_review_id": 805521248,
    "id": 748914552,
    "node_id": "PRRC_kwDOABII584so4d4",
    "diff_hunk": "@@ -79,13 +80,14 @@ static RPCHelpMan getrawtransaction()\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n                 \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"\\nHint: Use gettransaction for wallet transactions.\\n\\n\"",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I moved the \\n(s)",
    "created_at": "2021-11-14T21:47:42Z",
    "updated_at": "2021-11-14T21:54:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914552",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914552"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914552"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 748871612
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914657",
    "pull_request_review_id": 805521248,
    "id": 748914657,
    "node_id": "PRRC_kwDOABII584so4fh",
    "diff_hunk": "@@ -150,6 +153,7 @@ static RPCHelpMan getrawtransaction()\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" 2 \\\"myblockhash\\\"\")",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 105,
    "original_position": 56,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agreed and changed",
    "created_at": "2021-11-14T21:48:36Z",
    "updated_at": "2021-11-14T21:54:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914657",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914657"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914657"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 182,
    "original_line": 182,
    "side": "RIGHT",
    "in_reply_to_id": 748884982
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914824",
    "pull_request_review_id": 805521248,
    "id": 748914824,
    "node_id": "PRRC_kwDOABII584so4iI",
    "diff_hunk": "@@ -79,13 +80,14 @@ static RPCHelpMan getrawtransaction()\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n                 \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"\\nHint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbosity is 0 or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\"\n+                \"If verbosity is 1, returns an Object with information about 'txid'.\\n\"\n+                \"If verbosity is 2, returns an Object with information about 'txid', including fees and prevout information for inputs (only for unpruned blocks in the current best chain).\\n\",",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See latest latest changes\r\nI added  separate RPC  documentation for `verbosity=2` \r\n```\r\nResult (for verbosity = 2):\r\n{                               (json object)\r\n  ...,                          Same output as verbosity = 1\r\n  \"fee\" : n,                    (numeric, optional) transaction fee in BTC, omitted if block undo data is not available\r\n  \"vin\" : [                     (json array)\r\n    {                           (json object, optional) utxo being spent, omitted if block undo data is not available\r\n      ...,                      Same output as verbosity = 1\r\n      \"prevout\" : {             (json object)\r\n        \"value\" : n,            (numeric) The value in BTC\r\n        \"height\" : n,           (numeric) previous block height\r\n        \"scriptPubKey\" : {      (json object)\r\n          \"asm\" : \"str\",        (string) the asm\r\n          \"hex\" : \"str\",        (string) the hex\r\n          \"type\" : \"str\",       (string) The type, eg 'pubkeyhash'\r\n          \"address\" : \"str\"     (string, optional) The Bitcoin address (only if a well-defined address exists)\r\n        }\r\n      }\r\n    },\r\n    ...\r\n  ]\r\n}\r\n```",
    "created_at": "2021-11-14T21:50:02Z",
    "updated_at": "2021-11-14T21:54:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914824",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914824"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914824"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 85,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 87,
    "side": "RIGHT",
    "in_reply_to_id": 748873364
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914964",
    "pull_request_review_id": 805521248,
    "id": 748914964,
    "node_id": "PRRC_kwDOABII584so4kU",
    "diff_hunk": "@@ -99,6 +99,11 @@ Updated RPCs\n   causes the lock to be written persistently to the wallet database. This\n   allows UTXOs to remain locked even after node restarts or crashes. (#23065)\n \n+- `getrawtransaction` RPC verbose argument changed to verbosity levels: 0, 1 and 2 (backwards compatible).\n+  Verbosity 0 and 1 correspond to previous (verbose) argument's values `false` and `true`.\n+  Verbosity `3` contains an optional `fee` field and optional `prevout` subfield\n+  describing the spent output. See `getblock` RPC for `prevout` details.",
    "path": "doc/release-notes.md",
    "position": null,
    "original_position": 7,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was referring to the `getblock` in the above paragraph of the release notes. \r\nI updated to explicitly reference the above paragraph. ",
    "created_at": "2021-11-14T21:51:26Z",
    "updated_at": "2021-11-14T21:54:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914964",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914964"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748914964"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748914964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT",
    "in_reply_to_id": 748868321
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748915529",
    "pull_request_review_id": 805522072,
    "id": 748915529,
    "node_id": "PRRC_kwDOABII584so4tJ",
    "diff_hunk": "@@ -206,13 +214,31 @@ static RPCHelpMan getrawtransaction()\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n     }\n \n-    if (!fVerbose) {\n+    if (verbosity == 0) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (blockindex) {\n+        result.pushKV(\"in_active_chain\", in_active_chain);\n+    }\n+\n+    std::optional<size_t> opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (verbosity == 1 || !blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransactionRef t = block.vtx.at(i);\n+        if (*t == *tx) {\n+            // blockundo does not have coinbase tx\n+            opt_tx_position = std::optional<size_t>{i-1};\n+            break;",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 157,
    "original_position": 106,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "f30f007c829547e44cac4214c04a0fa7d0ddc3c2",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Someone did suggest a more performant  solution, I can't find it at the moment though. ",
    "created_at": "2021-11-14T21:56:02Z",
    "updated_at": "2021-11-14T21:56:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748915529",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748915529"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r748915529"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748915529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 261,
    "original_start_line": 233,
    "start_side": "RIGHT",
    "line": 266,
    "original_line": 266,
    "side": "RIGHT",
    "in_reply_to_id": 748786334
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/749529909",
    "pull_request_review_id": 806345918,
    "id": 749529909,
    "node_id": "PRRC_kwDOABII584srOs1",
    "diff_hunk": "@@ -206,13 +240,31 @@ static RPCHelpMan getrawtransaction()\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n     }\n \n-    if (!fVerbose) {\n+    if (verbosity == 0) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (blockindex) {\n+        result.pushKV(\"in_active_chain\", in_active_chain);\n+    }\n+\n+    std::optional<size_t> opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (verbosity == 1 || !blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransactionRef t = block.vtx.at(i);\n+        if (*t == *tx) {\n+            // blockundo does not have coinbase tx\n+            opt_tx_position = std::optional<size_t>{i-1};",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 156,
    "original_position": 154,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fb2f153136dc14921cb7f249fe224919cb7094bb",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following{/other_user}",
      "gists_url": "https://api.github.com/users/stickies-v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This overflows in the case of coinbase transaction (i==0). To bring it in line with `getblock` (where the coinbase transaction is serialized without fees/prevouts when `verbosity` is set to `3`), you could add another OR clause on [#255](https://github.com/bitcoin/bitcoin/pull/23319/files#diff-a58e7bb9d9a8a0287c0b7281d99da4e79b6f8c2a5780c24c6d76c14212c48640R255) to also check for `tx->IsCoinBase()`, for example?",
    "created_at": "2021-11-15T17:16:22Z",
    "updated_at": "2021-11-17T23:14:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r749529909",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/749529909"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r749529909"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/749529909/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 265,
    "original_line": 265,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/749620834",
    "pull_request_review_id": 806345918,
    "id": 749620834,
    "node_id": "PRRC_kwDOABII584srk5i",
    "diff_hunk": "@@ -43,14 +44,14 @@\n \n #include <univalue.h>\n \n-static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry, CChainState& active_chainstate)\n+static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry, CChainState& active_chainstate, const CTxUndo* txundo = nullptr)\n {\n     // Call into TxToUniv() in bitcoin-common to decode the transaction hex.\n     //\n     // Blockchain contextual information (confirmations and blocktime) is not\n     // available to code in bitcoin-common, so we query them here and push the\n     // data into the returned UniValue.\n-    TxToUniv(tx, uint256(), entry, true, RPCSerializationFlags());\n+    TxToUniv(tx, uint256(), entry, true, RPCSerializationFlags(), txundo, TxVerbosity::SHOW_DETAILS_AND_PREVOUT);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fb2f153136dc14921cb7f249fe224919cb7094bb",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following{/other_user}",
      "gists_url": "https://api.github.com/users/stickies-v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I understand that functionally this works fine, but it feels unnecessarily confusing to always pass `TxVerbosity::SHOW_DETAILS_AND_PREVOUT` even in the case when in actuality we're trying to get `TxVerbosity::SHOW_DETAILS` but relying on `txundo` being null to achieve that. Would it not be more prudent to instead add `verbosity` as an optional argument to `TxToJSON` and simply pass that along?",
    "created_at": "2021-11-15T19:29:44Z",
    "updated_at": "2021-11-15T19:41:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r749620834",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/749620834"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r749620834"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/749620834/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750119538",
    "pull_request_review_id": 807097996,
    "id": 750119538,
    "node_id": "PRRC_kwDOABII584stepy",
    "diff_hunk": "@@ -206,13 +240,31 @@ static RPCHelpMan getrawtransaction()\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n     }\n \n-    if (!fVerbose) {\n+    if (verbosity == 0) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    if (blockindex) {\n+        result.pushKV(\"in_active_chain\", in_active_chain);\n+    }\n+\n+    std::optional<size_t> opt_tx_position{std::nullopt};\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+    if (verbosity == 1 || !blockindex || IsBlockPruned(blockindex) || !(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+        return result;\n+    }\n+    for (size_t i = 0; i < block.vtx.size(); ++i) {\n+        const CTransactionRef t = block.vtx.at(i);\n+        if (*t == *tx) {\n+            // blockundo does not have coinbase tx\n+            opt_tx_position = std::optional<size_t>{i-1};",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 156,
    "original_position": 154,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fb2f153136dc14921cb7f249fe224919cb7094bb",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks @stickies-v \r\n  I'll also add a function test to catch this condition",
    "created_at": "2021-11-16T10:20:08Z",
    "updated_at": "2021-11-16T10:20:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r750119538",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750119538"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r750119538"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750119538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 265,
    "original_line": 265,
    "side": "RIGHT",
    "in_reply_to_id": 749529909
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750396075",
    "pull_request_review_id": 807471671,
    "id": 750396075,
    "node_id": "PRRC_kwDOABII584suiKr",
    "diff_hunk": "@@ -141,21 +143,35 @@ def getrawtransaction_tests(self):\n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n             # We should be able to get the raw transaction by providing the correct block\n-            gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True, blockhash=block1)\n-            assert_equal(gottx['txid'], tx)\n-            assert_equal(gottx['in_active_chain'], True)\n-            if n == 0:\n-                self.log.info(\"Test getrawtransaction with -txindex, without blockhash: 'in_active_chain' should be absent\")\n-                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True)\n+            for v in [1, 2]: # verbosity level\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n                 assert_equal(gottx['txid'], tx)\n-                assert 'in_active_chain' not in gottx\n-            else:\n-                self.log.info(\"Test getrawtransaction without -txindex, without blockhash: expect the call to raise\")\n-                err_msg = (\n-                    \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n-                    \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n-                )\n-                assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid=tx, verbose=True)\n+                assert_equal(gottx['in_active_chain'], True)\n+                if v == 2:\n+                    # fee is in verbosity 2 only\n+                    assert_equal(gottx['fee'], Decimal('0.00002820'))",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 55,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "2c56d72acac277babad758dbc6eefb38264cb0ed",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is `fee` in getransaction. see https://developer.bitcoin.org/reference/rpc/gettransaction.html\r\n\r\nI also agree with @luke-jr . There is no guarantee that fee calculation will always remain same, and thus better not to assert against hard coded values.",
    "created_at": "2021-11-16T15:33:47Z",
    "updated_at": "2021-11-16T16:29:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r750396075",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750396075"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r750396075"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750396075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 739601931
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750449024",
    "pull_request_review_id": 807471671,
    "id": 750449024,
    "node_id": "PRRC_kwDOABII584suvGA",
    "diff_hunk": "@@ -141,21 +142,35 @@ def getrawtransaction_tests(self):\n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n             # We should be able to get the raw transaction by providing the correct block\n-            gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True, blockhash=block1)\n-            assert_equal(gottx['txid'], tx)\n-            assert_equal(gottx['in_active_chain'], True)\n-            if n == 0:\n-                self.log.info(\"Test getrawtransaction with -txindex, without blockhash: 'in_active_chain' should be absent\")\n-                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=True)\n+            for v in [1, 2]: # verbosity level\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n                 assert_equal(gottx['txid'], tx)\n-                assert 'in_active_chain' not in gottx\n-            else:\n-                self.log.info(\"Test getrawtransaction without -txindex, without blockhash: expect the call to raise\")\n-                err_msg = (\n-                    \"No such mempool transaction. Use -txindex or provide a block hash to enable\"\n-                    \" blockchain transaction queries. Use gettransaction for wallet transactions.\"\n-                )\n-                assert_raises_rpc_error(-5, err_msg, self.nodes[n].getrawtransaction, txid=tx, verbose=True)\n+                assert_equal(gottx['in_active_chain'], True)\n+                if v == 2:\n+                    # fee is in verbosity 2 only\n+                    assert('fee' in gottx)\n+                    assert_equal(gottx['fee'], Decimal('0.00002820'))\n+                    # verify transacion has prevout field\n+                    assert('vin' in gottx)\n+                    assert(len(gottx['vin']) > 0)\n+                    assert('prevout' in gottx['vin'][0])\n+                    assert_equal(False, gottx['vin'][0]['prevout']['generated'])",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 59,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fb2f153136dc14921cb7f249fe224919cb7094bb",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe it would be good to add few more data checks in `prevout` to ensure nothing changes in at the field level? ",
    "created_at": "2021-11-16T16:25:43Z",
    "updated_at": "2021-11-16T16:29:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r750449024",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750449024"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r750449024"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750449024/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 151,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752101675",
    "pull_request_review_id": 809731554,
    "id": 752101675,
    "node_id": "PRRC_kwDOABII584s1Ckr",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": 54,
    "original_position": 40,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added a separate test to validate output fields, only that they exists, not their values. \r\nIs this worth having?",
    "created_at": "2021-11-18T10:25:27Z",
    "updated_at": "2021-11-18T10:27:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752101675",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752101675"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752101675"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752101675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 178,
    "original_line": 178,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752102684",
    "pull_request_review_id": 809731554,
    "id": 752102684,
    "node_id": "PRRC_kwDOABII584s1C0c",
    "diff_hunk": "@@ -73,26 +74,27 @@ static RPCHelpMan getrawtransaction()\n {\n     return RPCHelpMan{\n                 \"getrawtransaction\",\n-                \"\\nReturn the raw transaction data.\\n\"\n+                \"\\nReturn the raw transaction data.\\n\\n\"\n \n-                \"\\nBy default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n+                \"By default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n-                \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"the specified block is available and the transaction is in that block.\\n\\n\"\n+                \"Hint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbosity is 0 or omitted, returns a string that is serialized, hex-encoded data for transaction.\\n\"\n+                \"If verbosity is 1, returns an Object with information about transaction.\\n\"\n+                \"If verbosity is 2, returns an Object with information about transaction, including fees and prevout information.\\n\",\n                 {\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n-                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"If false, return a string, otherwise return a json object\"},\n+                    {\"verbosity|verbose\", RPCArg::Type::NUM, RPCArg::Default{0}, \"0 for hex-encoded data, 1 for a json object, and 2 for json object with fee and prevout\"},",
    "path": "src/rpc/rawtransaction.cpp",
    "position": 49,
    "original_position": 49,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The function test, `./test/functional/rpc_rawtransaction.py`, uses named paramaters, so `verbose` must be here, unless we want to change the functional test.\r\n",
    "created_at": "2021-11-18T10:26:43Z",
    "updated_at": "2021-11-18T10:27:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752102684",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752102684"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752102684"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752102684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 90,
    "original_line": 90,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752429948",
    "pull_request_review_id": 810184027,
    "id": 752429948,
    "node_id": "PRRC_kwDOABII584s2St8",
    "diff_hunk": "@@ -113,21 +114,23 @@ def getrawtransaction_tests(self):\n             assert_equal(self.nodes[n].getrawtransaction(txId, False), rawTxSigned['hex'])\n \n             # 4. valid parameters - supply txid and 1 for verbose.\n-            # We only check the \"hex\" field of the output so we don't need to update this test every time the output format changes.\n+            # We only check the \"hex\" field of the output, getrawtransaction_verbosity_tests checks output",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 13,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "maybe this a little more clear?\r\n```suggestion\r\n            # We only check the \"hex\" field of the output, getrawtransaction_verbosity_tests checks remaining fields\r\n```",
    "created_at": "2021-11-18T16:44:11Z",
    "updated_at": "2021-11-18T17:01:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752429948",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752429948"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752429948"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752429948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752437160",
    "pull_request_review_id": 810184027,
    "id": 752437160,
    "node_id": "PRRC_kwDOABII584s2Ueo",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 42,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do we need 2 blocks here? ",
    "created_at": "2021-11-18T16:51:35Z",
    "updated_at": "2021-11-18T17:01:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752437160",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752437160"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752437160"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752437160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 179,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752439208",
    "pull_request_review_id": 810184027,
    "id": 752439208,
    "node_id": "PRRC_kwDOABII584s2U-o",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test[{n}] getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 73,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Internal node numbers are in general not printed in the test log as they don't really convey any meaningful information.",
    "created_at": "2021-11-18T16:53:35Z",
    "updated_at": "2021-11-18T17:01:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752439208",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752439208"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752439208"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752439208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752440784",
    "pull_request_review_id": 810184027,
    "id": 752440784,
    "node_id": "PRRC_kwDOABII584s2VXQ",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test[{n}] getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 74,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To keep parity with previous tests, an `without blockhash` test segment would be nice. ",
    "created_at": "2021-11-18T16:55:20Z",
    "updated_at": "2021-11-18T17:01:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752440784",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752440784"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752440784"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752440784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 211,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752441923",
    "pull_request_review_id": 810184027,
    "id": 752441923,
    "node_id": "PRRC_kwDOABII584s2VpD",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test[{n}] getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n+                for f in fields:\n+                    if f not in gottx:\n+                        raise AssertionError(f\"field {f} is not in transaction\")\n+                    if v == 1:\n+                        assert('fee' not in gottx)\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' not in gottx['vin'][0])\n+                    if v == 2:\n+                        assert('fee' in gottx)\n+                        assert(isinstance(gottx['fee'], Decimal))\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' in gottx['vin'][0])\n+                        prevout = gottx['vin'][0]['prevout']\n+                        for prevout_field in prevout_fields:\n+                            if prevout_field not in prevout:\n+                                raise AssertionError(f\"field {prevout_field} is not in transaction prevout {prevout}\")\n+                        script_pub_key = prevout['scriptPubKey']\n+                        for script_field in script_pub_key_fields:\n+                            if script_field not in script_pub_key:\n+                                raise AssertionError(f\"field {script_field} is not in transaction scriptPubKey {script_pub_key}\")\n+\n+        # check that coinbase has no fee or throws any errors for verbosity 2",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 96,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: \r\n```suggestion\r\n        # check that coinbase has no fee or doesn't throw any errors for verbosity 2\r\n```",
    "created_at": "2021-11-18T16:56:37Z",
    "updated_at": "2021-11-18T17:01:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752441923",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752441923"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752441923"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752441923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752525733",
    "pull_request_review_id": 810318041,
    "id": 752525733,
    "node_id": "PRRC_kwDOABII584s2qGl",
    "diff_hunk": "@@ -113,21 +114,23 @@ def getrawtransaction_tests(self):\n             assert_equal(self.nodes[n].getrawtransaction(txId, False), rawTxSigned['hex'])\n \n             # 4. valid parameters - supply txid and 1 for verbose.\n-            # We only check the \"hex\" field of the output so we don't need to update this test every time the output format changes.\n+            # We only check the \"hex\" field of the output, getrawtransaction_verbosity_tests checks output",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 13,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> \r\n> But I am still unsure why the tests needs to be separated (or how it is related to previous test failure).\r\n> \r\n\r\nMostly clarity, I felt the `getrawtransaction_tests` was a bit confusing to follow, especially as I added the `verbosity=2` test cases.  Having a separate test for verbosity fields instead of smashing everything in one test block made reading more clear as well was intent. \r\n\r\n\r\n",
    "created_at": "2021-11-18T18:42:33Z",
    "updated_at": "2021-11-18T18:42:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752525733",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752525733"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752525733"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752525733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 752429948
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923357",
    "pull_request_review_id": 810867810,
    "id": 752923357,
    "node_id": "PRRC_kwDOABII584s4LLd",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test[{n}] getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)\n+                for f in fields:\n+                    if f not in gottx:\n+                        raise AssertionError(f\"field {f} is not in transaction\")\n+                    if v == 1:\n+                        assert('fee' not in gottx)\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' not in gottx['vin'][0])\n+                    if v == 2:\n+                        assert('fee' in gottx)\n+                        assert(isinstance(gottx['fee'], Decimal))\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' in gottx['vin'][0])\n+                        prevout = gottx['vin'][0]['prevout']\n+                        for prevout_field in prevout_fields:\n+                            if prevout_field not in prevout:\n+                                raise AssertionError(f\"field {prevout_field} is not in transaction prevout {prevout}\")\n+                        script_pub_key = prevout['scriptPubKey']\n+                        for script_field in script_pub_key_fields:\n+                            if script_field not in script_pub_key:\n+                                raise AssertionError(f\"field {script_field} is not in transaction scriptPubKey {script_pub_key}\")\n+\n+        # check that coinbase has no fee or throws any errors for verbosity 2",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 96,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "changed",
    "created_at": "2021-11-19T07:42:31Z",
    "updated_at": "2021-11-19T07:42:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752923357",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923357"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752923357"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 233,
    "side": "RIGHT",
    "in_reply_to_id": 752441923
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923484",
    "pull_request_review_id": 810868222,
    "id": 752923484,
    "node_id": "PRRC_kwDOABII584s4LNc",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test[{n}] getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 73,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed",
    "created_at": "2021-11-19T07:42:48Z",
    "updated_at": "2021-11-19T07:42:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752923484",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923484"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752923484"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 752439208
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923550",
    "pull_request_review_id": 810868464,
    "id": 752923550,
    "node_id": "PRRC_kwDOABII584s4LOe",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 42,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nope!",
    "created_at": "2021-11-19T07:42:56Z",
    "updated_at": "2021-11-19T07:42:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752923550",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923550"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752923550"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752923550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 179,
    "side": "RIGHT",
    "in_reply_to_id": 752437160
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752932303",
    "pull_request_review_id": 810894348,
    "id": 752932303,
    "node_id": "PRRC_kwDOABII584s4NXP",
    "diff_hunk": "@@ -171,6 +174,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, _ = self.generate(self.nodes[2], 2)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test[{n}] getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbose=v, blockhash=block1)",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 74,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added `without blockhash` verbosity=2 test in `getrawtransaction_tests`",
    "created_at": "2021-11-19T07:59:08Z",
    "updated_at": "2021-11-19T07:59:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752932303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752932303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r752932303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752932303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 211,
    "side": "RIGHT",
    "in_reply_to_id": 752440784
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753202059",
    "pull_request_review_id": 811221450,
    "id": 753202059,
    "node_id": "PRRC_kwDOABII584s5POL",
    "diff_hunk": "@@ -113,21 +114,23 @@ def getrawtransaction_tests(self):\n             assert_equal(self.nodes[n].getrawtransaction(txId, False), rawTxSigned['hex'])\n \n             # 4. valid parameters - supply txid and 1 for verbose.\n-            # We only check the \"hex\" field of the output so we don't need to update this test every time the output format changes.\n+            # We only check the \"hex\" field of the output, getrawtransaction_verbosity_tests checks output",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 13,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fee0b82aca8f9c8eba4b0bff3e6ec3ddbb7208ae",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fair enough.. That makes sense.. ",
    "created_at": "2021-11-19T13:45:47Z",
    "updated_at": "2021-11-19T13:45:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753202059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753202059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753202059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753202059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 752429948
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753206108",
    "pull_request_review_id": 811227117,
    "id": 753206108,
    "node_id": "PRRC_kwDOABII584s5QNc",
    "diff_hunk": "@@ -171,6 +175,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        [block1] = self.generate(self.nodes[2], 1)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbosity=v, blockhash=block1)\n+                for f in fields:\n+                    if f not in gottx:\n+                        raise AssertionError(f\"field {f} is not in transaction\")\n+                    if v == 1:\n+                        assert('fee' not in gottx)\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' not in gottx['vin'][0])\n+                    if v == 2:\n+                        assert('fee' in gottx)\n+                        assert(isinstance(gottx['fee'], Decimal))\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' in gottx['vin'][0])\n+                        prevout = gottx['vin'][0]['prevout']\n+                        for prevout_field in prevout_fields:\n+                            if prevout_field not in prevout:\n+                                raise AssertionError(f\"field {prevout_field} is not in transaction prevout {prevout}\")\n+                        script_pub_key = prevout['scriptPubKey']\n+                        for script_field in script_pub_key_fields:\n+                            if script_field not in script_pub_key:\n+                                raise AssertionError(f\"field {script_field} is not in transaction scriptPubKey {script_pub_key}\")\n+\n+        # check that coinbase has no fee or does not throws any errors for verbosity 2",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 110,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "eaf10aacddfd32c0722414a3f040d3fae2b51cf7",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: \r\n```suggestion\r\n        # check that coinbase has no fee or does not throw any errors for verbosity 2\r\n```",
    "created_at": "2021-11-19T13:51:21Z",
    "updated_at": "2021-11-19T14:32:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753206108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753206108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753206108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753206108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 234,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753225045",
    "pull_request_review_id": 811227117,
    "id": 753225045,
    "node_id": "PRRC_kwDOABII584s5U1V",
    "diff_hunk": "@@ -73,26 +74,27 @@ static RPCHelpMan getrawtransaction()\n {\n     return RPCHelpMan{\n                 \"getrawtransaction\",\n-                \"\\nReturn the raw transaction data.\\n\"\n+                \"\\nReturn the raw transaction data.\\n\\n\"\n \n-                \"\\nBy default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n+                \"By default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n-                \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"the specified block is available and the transaction is in that block.\\n\\n\"\n+                \"Hint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbosity is 0 or omitted, returns a string that is serialized, hex-encoded data for transaction.\\n\"\n+                \"If verbosity is 1, returns an Object with information about transaction.\\n\"\n+                \"If verbosity is 2, returns an Object with information about transaction, including fees and prevout information.\\n\",\n                 {\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n-                    {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"If false, return a string, otherwise return a json object\"},\n+                    {\"verbosity|verbose\", RPCArg::Type::NUM, RPCArg::Default{0}, \"0 for hex-encoded data, 1 for a json object, and 2 for json object with fee and prevout\"},\n                     {\"blockhash\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED_NAMED_ARG, \"The block in which to look for the transaction\"},\n                 },\n                 {\n-                    RPCResult{\"if verbose is not set or set to false\",\n+                    RPCResult{\"if verbose is not set or set to 0\",",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "eaf10aacddfd32c0722414a3f040d3fae2b51cf7",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                    RPCResult{\"if verbosity is not set or set to 0\",\r\n```",
    "created_at": "2021-11-19T14:16:34Z",
    "updated_at": "2021-11-19T14:32:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753225045",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753225045"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753225045"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753225045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 94,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753225691",
    "pull_request_review_id": 811227117,
    "id": 753225691,
    "node_id": "PRRC_kwDOABII584s5U_b",
    "diff_hunk": "@@ -73,26 +74,27 @@ static RPCHelpMan getrawtransaction()\n {\n     return RPCHelpMan{\n                 \"getrawtransaction\",\n-                \"\\nReturn the raw transaction data.\\n\"\n+                \"\\nReturn the raw transaction data.\\n\\n\"\n \n-                \"\\nBy default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n+                \"By default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n                 \"If a blockhash argument is passed, it will return the transaction if\\n\"\n-                \"the specified block is available and the transaction is in that block.\\n\"\n-                \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n+                \"the specified block is available and the transaction is in that block.\\n\\n\"\n+                \"Hint: Use gettransaction for wallet transactions.\\n\\n\"\n \n-                \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\"\n-                \"If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\\n\",\n+                \"If verbosity is 0 or omitted, returns a string that is serialized, hex-encoded data for transaction.\\n\"\n+                \"If verbosity is 1, returns an Object with information about transaction.\\n\"\n+                \"If verbosity is 2, returns an Object with information about transaction, including fees and prevout information.\\n\",",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "eaf10aacddfd32c0722414a3f040d3fae2b51cf7",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                \"If verbosity is 2, returns an Object with information about transaction, including fee and prevout information.\\n\",\r\n```",
    "created_at": "2021-11-19T14:17:25Z",
    "updated_at": "2021-11-19T14:32:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753225691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753225691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r753225691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753225691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 87,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754302688",
    "pull_request_review_id": 812565601,
    "id": 754302688,
    "node_id": "PRRC_kwDOABII584s9b7g",
    "diff_hunk": "@@ -43,14 +44,14 @@\n \n #include <univalue.h>\n \n-static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry, CChainState& active_chainstate)\n+static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry, CChainState& active_chainstate, const CTxUndo* txundo = nullptr)\n {\n     // Call into TxToUniv() in bitcoin-common to decode the transaction hex.\n     //\n     // Blockchain contextual information (confirmations and blocktime) is not\n     // available to code in bitcoin-common, so we query them here and push the\n     // data into the returned UniValue.\n-    TxToUniv(tx, uint256(), entry, true, RPCSerializationFlags());\n+    TxToUniv(tx, uint256(), entry, true, RPCSerializationFlags(), txundo, TxVerbosity::SHOW_DETAILS_AND_PREVOUT);",
    "path": "src/rpc/rawtransaction.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "fb2f153136dc14921cb7f249fe224919cb7094bb",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added an arg for explicit `TxVerbosity` in `TxToJSON`",
    "created_at": "2021-11-22T13:57:30Z",
    "updated_at": "2021-11-22T13:57:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r754302688",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754302688"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r754302688"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754302688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT",
    "in_reply_to_id": 749620834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755066106",
    "pull_request_review_id": 813580620,
    "id": 755066106,
    "node_id": "PRRC_kwDOABII584tAWT6",
    "diff_hunk": "@@ -171,6 +175,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        [block1] = self.generate(self.nodes[2], 1)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbosity=v, blockhash=block1)\n+                for f in fields:\n+                    if f not in gottx:\n+                        raise AssertionError(f\"field {f} is not in transaction\")\n+                    if v == 1:\n+                        assert('fee' not in gottx)\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' not in gottx['vin'][0])\n+                    if v == 2:\n+                        assert('fee' in gottx)\n+                        assert(isinstance(gottx['fee'], Decimal))\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' in gottx['vin'][0])\n+                        prevout = gottx['vin'][0]['prevout']\n+                        for prevout_field in prevout_fields:\n+                            if prevout_field not in prevout:\n+                                raise AssertionError(f\"field {prevout_field} is not in transaction prevout {prevout}\")\n+                        script_pub_key = prevout['scriptPubKey']\n+                        for script_field in script_pub_key_fields:\n+                            if script_field not in script_pub_key:\n+                                raise AssertionError(f\"field {script_field} is not in transaction scriptPubKey {script_pub_key}\")\n+\n+        # check that coinbase has no fee or does not throws any errors for verbosity 2",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 110,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "eaf10aacddfd32c0722414a3f040d3fae2b51cf7",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this change is still pending.. ",
    "created_at": "2021-11-23T12:15:30Z",
    "updated_at": "2021-11-23T12:15:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r755066106",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755066106"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r755066106"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755066106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 234,
    "side": "RIGHT",
    "in_reply_to_id": 753206108
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755401364",
    "pull_request_review_id": 814036550,
    "id": 755401364,
    "node_id": "PRRC_kwDOABII584tBoKU",
    "diff_hunk": "@@ -171,6 +175,67 @@ def getrawtransaction_tests(self):\n         block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n         assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n \n+    def getrawtransaction_verbosity_tests(self):\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        [block1] = self.generate(self.nodes[2], 1)\n+        fields = [\n+            'blockhash',\n+            'blocktime',\n+            'confirmations',\n+            'hash',\n+            'hex',\n+            'in_active_chain',\n+            'locktime',\n+            'size',\n+            'time',\n+            'txid',\n+            'vin',\n+            'vout',\n+            'vsize',\n+            'weight'\n+        ]\n+        prevout_fields = [\n+            'generated',\n+            'height',\n+            'value',\n+            'scriptPubKey'\n+        ]\n+        script_pub_key_fields = [\n+            'address',\n+            'asm',\n+            'hex',\n+            'type'\n+        ]\n+        for n in [0, 3]:\n+            for v in [1,2]:\n+                self.log.info(f\"Test getrawtransaction_verbosity {v} {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n+                gottx = self.nodes[n].getrawtransaction(txid=tx, verbosity=v, blockhash=block1)\n+                for f in fields:\n+                    if f not in gottx:\n+                        raise AssertionError(f\"field {f} is not in transaction\")\n+                    if v == 1:\n+                        assert('fee' not in gottx)\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' not in gottx['vin'][0])\n+                    if v == 2:\n+                        assert('fee' in gottx)\n+                        assert(isinstance(gottx['fee'], Decimal))\n+                        assert(len(gottx['vin']) > 0)\n+                        assert('prevout' in gottx['vin'][0])\n+                        prevout = gottx['vin'][0]['prevout']\n+                        for prevout_field in prevout_fields:\n+                            if prevout_field not in prevout:\n+                                raise AssertionError(f\"field {prevout_field} is not in transaction prevout {prevout}\")\n+                        script_pub_key = prevout['scriptPubKey']\n+                        for script_field in script_pub_key_fields:\n+                            if script_field not in script_pub_key:\n+                                raise AssertionError(f\"field {script_field} is not in transaction scriptPubKey {script_pub_key}\")\n+\n+        # check that coinbase has no fee or does not throws any errors for verbosity 2",
    "path": "test/functional/rpc_rawtransaction.py",
    "position": null,
    "original_position": 110,
    "commit_id": "46c9cfe65526997e6043d4fdbaace32b4eb580df",
    "original_commit_id": "eaf10aacddfd32c0722414a3f040d3fae2b51cf7",
    "user": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I think this change is still pending..\r\n\r\nFixed",
    "created_at": "2021-11-23T18:25:33Z",
    "updated_at": "2021-11-23T18:25:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r755401364",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755401364"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23319#discussion_r755401364"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23319"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/755401364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 234,
    "side": "RIGHT",
    "in_reply_to_id": 753206108
  }
]