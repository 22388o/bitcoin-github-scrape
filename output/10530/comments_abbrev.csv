pavlosantoniou,2017-06-07T17:24:07Z,Reopened with addition of static_assert for BITS value.,https://github.com/bitcoin/bitcoin/pull/10530#issuecomment-306865775,306865775,
sipa,2017-06-11T19:00:50Z,utACK,https://github.com/bitcoin/bitcoin/pull/10530#issuecomment-307649343,307649343,
laanwj,2017-06-05T14:01:21Z,"As I see it, this code can cause an out-of-bounds access only in the case of WIDTH=0, which would be pointless.\nOr am I missing something?\nI do agree that this change makes the code somewhat more readable.",https://github.com/bitcoin/bitcoin/pull/10530#discussion_r120114149,120114149,src/arith_uint256.h
pavlosantoniou,2017-06-05T16:57:44Z,"Yes, the out-of-bounds access occurs in the edge case of WIDTH == 0.\nThis template class can, although it probably won't, be instantiated with BITS < 32, something that would lead to WIDTH == 0. \nI was mainly interested in ensuring the out-of-bounds-check before array access regardless of such assumptions.\nMaking it easier to follow the code logic is an extra gain.",https://github.com/bitcoin/bitcoin/pull/10530#discussion_r120155431,120155431,src/arith_uint256.h
laanwj,2017-06-06T09:52:57Z,"> This template class can, although it probably won't, be instantiated with BITS < 32\n\nIndeed - as the code throughout the entire class is implemented, it can only be instantiated for a positive multiple of 32. Might make sense to add a compile-time assertion for that.",https://github.com/bitcoin/bitcoin/pull/10530#discussion_r120310092,120310092,src/arith_uint256.h
pavlosantoniou,2017-06-07T07:34:45Z,"Do you think adding:\n`static_assert(BITS/32 > 0 && BITS%32 == 0, ""Template parameter BITS must be a positive multiple of 32."");`\nin the class constructor would be fine?",https://github.com/bitcoin/bitcoin/pull/10530#discussion_r120553052,120553052,src/arith_uint256.h
laanwj,2017-06-07T15:11:36Z,"Yes, that'd be nice!",https://github.com/bitcoin/bitcoin/pull/10530#discussion_r120654602,120654602,src/arith_uint256.h
pavlosantoniou,2017-06-10T09:54:06Z,"I have added the assertions, is there something more I can do for this PR?",https://github.com/bitcoin/bitcoin/pull/10530#discussion_r121253748,121253748,src/arith_uint256.h
