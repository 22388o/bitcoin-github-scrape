DrahtBot,2020-02-21 17:27:59,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18432 (util: Make our stringstream usage locale independent by practicalswift)\n* #9245 (Drop IO priority to idle while r",https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-589752889,589752889,
practicalswift,2020-03-09 15:13:21,Rebased :),https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-596591553,596591553,
practicalswift,2020-03-09 19:24:31,Rebased again :),https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-596734555,596734555,
practicalswift,2020-03-18 22:17:45,Rebased again :),https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-600886725,600886725,
practicalswift,2020-03-24 12:27:49,@MarcoFalke Would you mind reviewing? :),https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-603209850,603209850,
practicalswift,2020-04-06 14:14:22,@MarcoFalke Feedback addressed. Ready for merge? :),https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-609821159,609821159,
practicalswift,2020-04-20 11:32:26,Anything left to do here? Would be nice to have fuzzing coverage for `GolombRiceEncode`/`GolombRiceDecode` and as an added bonus that would bump fuzzing line coverage above the magical 50% mark :),https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-616492959,616492959,
practicalswift,2020-04-20 11:56:22,@MarcoFalke Feedback addressed! Please re-review :),https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-616504922,616504922,
MarcoFalke,2020-04-20 12:58:00,Can't merge with red travis,https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-616535661,616535661,
practicalswift,2020-04-20 14:58:28,"@MarcoFalke Oh, thanks! Header guard now updated after `util/` move :)",https://github.com/bitcoin/bitcoin/pull/18190#issuecomment-616608815,616608815,
jeandudey,2020-02-27 18:00:25,"It might not be seeing the obvious (and I know this PR doesn't touches this), but what's the point of `~0ULL`? Seems confusing at a first glance.\n\n \n```suggestion\n        bitwriter.Write(0xFFFFFFFFFFFFFFFFULL, nbits);\n```",https://github.com/bitcoin/bitcoin/pull/18190#discussion_r385276994,385276994,src/blockfilter.h
practicalswift,2020-02-27 18:24:06,"Yes, I agree that `~0` feels non-idiomatic. Personally I prefer `std::numeric_limits<uint64_t>::max()` :)\n\nBut as you note this PR does not touch that code -- it only moves it. Thus leaving the comment without action.",https://github.com/bitcoin/bitcoin/pull/18190#discussion_r385289313,385289313,src/blockfilter.h
laanwj,2020-03-05 15:39:23,I don't really like moving these functions to the public interface of `blockfilter` and adding the `stream.h` header dependency here. Maybe move this to a new header that is only included in the two places it's needed?,https://github.com/bitcoin/bitcoin/pull/18190#discussion_r388375471,388375471,src/blockfilter.h
practicalswift,2020-03-06 16:46:05,Good point. Now moved to `golombrice.h`. Please re-review :),https://github.com/bitcoin/bitcoin/pull/18190#discussion_r389015508,389015508,src/blockfilter.h
MarcoFalke,2020-04-05 02:37:13,"```suggestion\ntest_fuzz_golomb_rice_SOURCES = test/fuzz/golomb_rice.cpp\n```\n\nNeeds rebase",https://github.com/bitcoin/bitcoin/pull/18190#discussion_r403639896,403639896,src/Makefile.test.include
practicalswift,2020-04-06 14:14:05,Fixed!,https://github.com/bitcoin/bitcoin/pull/18190#discussion_r404123997,404123997,src/Makefile.test.include
MarcoFalke,2020-04-20 11:37:25,Should probably be in `util/`?,https://github.com/bitcoin/bitcoin/pull/18190#discussion_r411307138,411307138,src/Makefile.am
practicalswift,2020-04-20 11:56:05,Done! :),https://github.com/bitcoin/bitcoin/pull/18190#discussion_r411317776,411317776,src/Makefile.am
