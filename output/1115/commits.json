[
  {
    "sha": "4941aad6574c85d7c4cdf80a7faef48bc46add5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTQxYWFkNjU3NGM4NWQ3YzRjZGY4MGE3ZmFlZjQ4YmM0NmFkZDVm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-04-16T09:46:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-04-17T16:27:55Z"
      },
      "message": "Add forgotten initializer",
      "tree": {
        "sha": "644e2734c935a7e3693f4496d18f2e6f9e5ebe79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/644e2734c935a7e3693f4496d18f2e6f9e5ebe79"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4941aad6574c85d7c4cdf80a7faef48bc46add5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4941aad6574c85d7c4cdf80a7faef48bc46add5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4941aad6574c85d7c4cdf80a7faef48bc46add5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4941aad6574c85d7c4cdf80a7faef48bc46add5f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a5452ffb3075c0c2604a76e8e82c2c84a24e62e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a5452ffb3075c0c2604a76e8e82c2c84a24e62e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a5452ffb3075c0c2604a76e8e82c2c84a24e62e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "84578b33225a17c2c5b391b18ceefa28394f42f0",
        "filename": "src/qt/csvmodelwriter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4941aad6574c85d7c4cdf80a7faef48bc46add5f/src/qt/csvmodelwriter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4941aad6574c85d7c4cdf80a7faef48bc46add5f/src/qt/csvmodelwriter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/csvmodelwriter.cpp?ref=4941aad6574c85d7c4cdf80a7faef48bc46add5f",
        "patch": "@@ -6,7 +6,7 @@\n \n CSVModelWriter::CSVModelWriter(const QString &filename, QObject *parent) :\n     QObject(parent),\n-    filename(filename)\n+    filename(filename), model(0)\n {\n }\n "
      }
    ]
  },
  {
    "sha": "7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZmEzYWQ4M2E5MDYwZDRlYmRiMjlmMzllNDhlZWM3ZWEyMjIwZDk4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-04-16T09:44:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-04-17T16:28:02Z"
      },
      "message": "Remove unused and unreachable code",
      "tree": {
        "sha": "a878c696d4b0c3d080cfbbe4960e44d63891f6a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a878c696d4b0c3d080cfbbe4960e44d63891f6a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4941aad6574c85d7c4cdf80a7faef48bc46add5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4941aad6574c85d7c4cdf80a7faef48bc46add5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4941aad6574c85d7c4cdf80a7faef48bc46add5f"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 0,
      "deletions": 58
    },
    "files": [
      {
        "sha": "2f3b29cc970cb9fc7f542d42790ea9d00f47b497",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98",
        "patch": "@@ -146,12 +146,6 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                 //\n                 // Mixed debit transaction, can't break down payees\n                 //\n-                bool fAllMine = true;\n-                BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-                    fAllMine = fAllMine && wallet->IsMine(txout);\n-                BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n-                    fAllMine = fAllMine && wallet->IsMine(txin);\n-\n                 parts.append(TransactionRecord(hash, nTime, TransactionRecord::Other, \"\", nNet, 0));\n             }\n         }"
      },
      {
        "sha": "802dcf22541ca24c2a258c049005809187ac814a",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98",
        "patch": "@@ -276,48 +276,6 @@ class CFlatData\n     }\n };\n \n-\n-\n-/** string stored as a fixed length field */\n-template<std::size_t LEN>\n-class CFixedFieldString\n-{\n-protected:\n-    const std::string* pcstr;\n-    std::string* pstr;\n-public:\n-    explicit CFixedFieldString(const std::string& str) : pcstr(&str), pstr(NULL) { }\n-    explicit CFixedFieldString(std::string& str) : pcstr(&str), pstr(&str) { }\n-\n-    unsigned int GetSerializeSize(int, int=0) const\n-    {\n-        return LEN;\n-    }\n-\n-    template<typename Stream>\n-    void Serialize(Stream& s, int, int=0) const\n-    {\n-        char pszBuf[LEN];\n-        strncpy(pszBuf, pcstr->c_str(), LEN);\n-        s.write(pszBuf, LEN);\n-    }\n-\n-    template<typename Stream>\n-    void Unserialize(Stream& s, int, int=0)\n-    {\n-        if (pstr == NULL)\n-            throw std::ios_base::failure(\"CFixedFieldString::Unserialize : trying to unserialize to const string\");\n-        char pszBuf[LEN+1];\n-        s.read(pszBuf, LEN);\n-        pszBuf[LEN] = '\\0';\n-        *pstr = pszBuf;\n-    }\n-};\n-\n-\n-\n-\n-\n //\n // Forward declarations\n //\n@@ -479,10 +437,6 @@ inline void Serialize(Stream& os, const std::vector<T, A>& v, int nType, int nVe\n template<typename Stream, typename T, typename A>\n void Unserialize_impl(Stream& is, std::vector<T, A>& v, int nType, int nVersion, const boost::true_type&)\n {\n-    //unsigned int nSize = ReadCompactSize(is);\n-    //v.resize(nSize);\n-    //is.read((char*)&v[0], nSize * sizeof(T));\n-\n     // Limit size per read so bogus size value won't cause out of memory\n     v.clear();\n     unsigned int nSize = ReadCompactSize(is);\n@@ -499,11 +453,6 @@ void Unserialize_impl(Stream& is, std::vector<T, A>& v, int nType, int nVersion,\n template<typename Stream, typename T, typename A>\n void Unserialize_impl(Stream& is, std::vector<T, A>& v, int nType, int nVersion, const boost::false_type&)\n {\n-    //unsigned int nSize = ReadCompactSize(is);\n-    //v.resize(nSize);\n-    //for (std::vector<T, A>::iterator vi = v.begin(); vi != v.end(); ++vi)\n-    //    Unserialize(is, (*vi), nType, nVersion);\n-\n     v.clear();\n     unsigned int nSize = ReadCompactSize(is);\n     unsigned int i = 0;"
      },
      {
        "sha": "c1e3c5a8066c2c133ae653d3ab101b924cd48fbd",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=7fa3ad83a9060d4ebdb29f39e48eec7ea2220d98",
        "patch": "@@ -301,7 +301,6 @@ bool error(const char *format, ...)\n     va_end(arg_ptr);\n     if (ret < 0 || ret >= limit)\n     {\n-        ret = limit - 1;\n         buffer[limit-1] = 0;\n     }\n     printf(\"ERROR: %s\\n\", buffer);"
      }
    ]
  }
]