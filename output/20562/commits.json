[
  {
    "sha": "773c42b265fb2212b5cb8785b7226a206d063543",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzNjNDJiMjY1ZmIyMjEyYjVjYjg3ODViNzIyNmEyMDZkMDYzNTQz",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-12-03T19:43:03Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-12-03T20:53:58Z"
      },
      "message": "tests: Test that a fully signed tx given to signrawtx is unchanged\n\nTests that a fully signed transaction given to\nsignrawtransactionwithwallet is both unchanged and marked as complete.\nThis tests for a regression in 0.20 where the transaction would not be\nmarked as complete.",
      "tree": {
        "sha": "22c20c7bbb049e42e4847cf87dfad98ba77dcb5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22c20c7bbb049e42e4847cf87dfad98ba77dcb5b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/773c42b265fb2212b5cb8785b7226a206d063543",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/773c42b265fb2212b5cb8785b7226a206d063543",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/773c42b265fb2212b5cb8785b7226a206d063543",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/773c42b265fb2212b5cb8785b7226a206d063543/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0489f3472f3799dc1ece32a59556fd239c4c14b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0489f3472f3799dc1ece32a59556fd239c4c14b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0489f3472f3799dc1ece32a59556fd239c4c14b"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2fbbdbbdf0da4894181e140304a907cf771b9b5c",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/773c42b265fb2212b5cb8785b7226a206d063543/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/773c42b265fb2212b5cb8785b7226a206d063543/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=773c42b265fb2212b5cb8785b7226a206d063543",
        "patch": "@@ -151,6 +151,19 @@ def script_verification_error_test(self):\n         assert_equal(rawTxSigned['errors'][1]['witness'], [\"304402203609e17b84f6a7d30c80bfa610b5b4542f32a8a0d5447a12fb1366d7f01cc44a0220573a954c4518331561406f90300e8f3358f51928d43c212a8caed02de67eebee01\", \"025476c2e83188368da1ff3e292e7acafcdb3566bb0ad253f62fc70f07aeee6357\"])\n         assert not rawTxSigned['errors'][0]['witness']\n \n+    def test_fully_signed_tx(self):\n+        self.log.info(\"Test signing a fully signed transaction does nothing\")\n+        self.nodes[0].walletpassphrase(\"password\", 9999)\n+        self.nodes[0].generate(101)\n+        rawtx = self.nodes[0].createrawtransaction([], [{self.nodes[0].getnewaddress(): 10}])\n+        fundedtx = self.nodes[0].fundrawtransaction(rawtx)\n+        signedtx = self.nodes[0].signrawtransactionwithwallet(fundedtx[\"hex\"])\n+        assert_equal(signedtx[\"complete\"], True)\n+        signedtx2 = self.nodes[0].signrawtransactionwithwallet(signedtx[\"hex\"])\n+        assert_equal(signedtx2[\"complete\"], True)\n+        assert_equal(signedtx[\"hex\"], signedtx2[\"hex\"])\n+        self.nodes[0].walletlock()\n+\n     def witness_script_test(self):\n         self.log.info(\"Test signing transaction to P2SH-P2WSH addresses without wallet\")\n         # Create a new P2SH-P2WSH 1-of-1 multisig address:\n@@ -231,6 +244,7 @@ def run_test(self):\n         self.witness_script_test()\n         self.OP_1NEGATE_test()\n         self.test_with_lock_outputs()\n+        self.test_fully_signed_tx()\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]