sipa,2016-05-05T16:09:45Z,utACK 2a4338c5054906b664e027b1b4bb9c6b4ed50f05\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-217197247,217197247,
dcousens,2016-05-06T02:14:44Z,utACK 2a4338c\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-217331872,217331872,
kazcw,2016-05-07T21:49:47Z,Force-pushed a new head commit: I just noticed that `minFeeFilter` is actually only accessed in the message handling thread and doesn't need any kind of synchronization.\n\nThe `IsInitialBlockChanges` commit is unmodified.\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-217670807,217670807,
sipa,2016-05-07T22:02:03Z,"@kazcw I prefer seeing correct synchronization, even for variables that are only accessed from one thread. There are probably several such violations already, but over time, I think we'll want multiple message handler threads.\n",https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-217671252,217671252,
arowser,2016-05-25T08:43:44Z,Can one of the admins verify this patch?\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-221510464,221510464,
sipa,2016-05-26T13:07:51Z,@kazcw Can you add some form of synchronization back to CNode::minFeeFilter?\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-221865373,221865373,
kazcw,2016-05-29T18:00:26Z,"Sure, I popped off the `minFeeFilter` commit.\n",https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-222373802,222373802,
laanwj,2016-05-30T10:54:19Z,Is there any advantage to making this boolean thread-local instead of atomic?\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-222467175,222467175,
sipa,2016-05-31T17:33:08Z,@laanwj I assume a thread-local is slightly faster as it doesn't need memory synchronization (but that's a pure guess).\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-222761463,222761463,
sipa,2016-06-01T16:27:03Z,"On the other hand, an atomic would be nice to guarantee monotonicity...\n",https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-223048226,223048226,
kazcw,2016-06-01T17:34:00Z,"@laanwj I'd thought it was a little simpler to avoid the need for cross-thread reasoning, but I'm not so sure; an atomic seems to map more directly to the intent here. I'd also made a similar performance assumption to @sipa, but looking in to it now there are apparently some thorny thread-local storage implementations in the wild. So, I've reimplemented it with an atomic for clarity and consistent",https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-223067338,223067338,
sipa,2016-06-01T17:41:35Z,utACK b07b3f9c1a4b1a0b5f7189f9a0e45cf7547582cf\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-223069516,223069516,
paveljanik,2016-06-02T06:04:58Z,utACK https://github.com/bitcoin/bitcoin/pull/8007/commits/a91c89795f1555d526e6634581c769e4705aa1dc\nPlease squash and fix the typo.\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-223203336,223203336,
kazcw,2016-06-05T05:20:11Z,Squashed & fixed comment\n,https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-223793850,223793850,
laanwj,2016-06-06T13:44:15Z,"utACK https://github.com/bitcoin/bitcoin/commit/b07b3f9c1a4b1a0b5f7189f9a0e45cf7547582cf\n\n> but looking in to it now there are apparently some thorny thread-local storage implementations in the wild. So, I've reimplemented it with an atomic for clarity and consistent performance.\n\nRight. On hardware that natively supports atomic operations (which are most modern CPUs), I'd expect an atomic to ",https://github.com/bitcoin/bitcoin/pull/8007#issuecomment-223962779,223962779,
paveljanik,2016-06-02T05:49:30Z,IIBD -> IBD\n,https://github.com/bitcoin/bitcoin/pull/8007#discussion_r65487039,65487039,src/main.cpp
