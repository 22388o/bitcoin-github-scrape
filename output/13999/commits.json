[
  {
    "sha": "6d25a325e7ccaf789bb78396add890dc553d7a6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDI1YTMyNWU3Y2NhZjc4OWJiNzgzOTZhZGQ4OTBkYzU1M2Q3YTZi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-08-17T21:34:06Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-08-17T21:34:06Z"
      },
      "message": "dedicated --virtualization option\n\nIntroduced '--virtualization' option.\r\nRemoved '--kvm' and '--docker' options.\r\n*all* gitian-builder USE_* environment variables are set explicitly (also fix wrong global settings).",
      "tree": {
        "sha": "fbda1938a6a877af55238b17dc1dd7a5c1f3002c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbda1938a6a877af55238b17dc1dd7a5c1f3002c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d25a325e7ccaf789bb78396add890dc553d7a6b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdz9OCRBK7hj4Ov3rIwAAdHIIAGKpD7U/IcIQTD7qaZFPO6NG\n5RyOYBz/xp/rMEVa0KpsXCdiWji5PPg1eAf1LeJT1277YUV9dkAnTODzN5S40OOz\ngb4pnD2x5Uu7sFm5OgJ/Kl+zW1vOe5MPZYroFA8KSGg8Idk96UPRqhS7CPsPIzPb\nLTWX2ZxpTS49H7g3KQfQ9zXq3U5AqfeX4ACUi2nybUXGd5toaXw24i5wwgoBOGzw\n3u/kHB9xIJUFH/9iX7n4fJcOzDOaxMOEDJEnsETQ+vmO7h4/zJuuGda1m7jIMwtf\nmW3YKj6P/E6uksuXhOh5QaqJPl/k9c1f7lEPc5Xhye8wU/iawrB+ReCJidvwwN4=\n=7kaK\n-----END PGP SIGNATURE-----\n",
        "payload": "tree fbda1938a6a877af55238b17dc1dd7a5c1f3002c\nparent f87d0a9d75b366445f880041c56c725f8196364e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1534541646 +0300\ncommitter GitHub <noreply@github.com> 1534541646 +0300\n\ndedicated --virtualization option\n\nIntroduced '--virtualization' option.\r\nRemoved '--kvm' and '--docker' options.\r\n*all* gitian-builder USE_* environment variables are set explicitly (also fix wrong global settings)."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d25a325e7ccaf789bb78396add890dc553d7a6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d25a325e7ccaf789bb78396add890dc553d7a6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d25a325e7ccaf789bb78396add890dc553d7a6b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f87d0a9d75b366445f880041c56c725f8196364e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f87d0a9d75b366445f880041c56c725f8196364e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f87d0a9d75b366445f880041c56c725f8196364e"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 15,
      "deletions": 9
    },
    "files": [
      {
        "sha": "af099b7d3710f6d5ed74888d5f298727a6fa64f9",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d25a325e7ccaf789bb78396add890dc553d7a6b/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d25a325e7ccaf789bb78396add890dc553d7a6b/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=6d25a325e7ccaf789bb78396add890dc553d7a6b",
        "patch": "@@ -143,9 +143,8 @@ def main():\n     parser.add_argument('-o', '--os', dest='os', default='lwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, w for Windows, m for MacOS')\n     parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')\n     parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')\n-    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')\n-    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')\n-    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Uses LXC. If you want to use KVM, use the --kvm option. Only works on Debian-based systems (Ubuntu, Debian)')\n+    parser.add_argument('-V', '--virtualization', dest='virtualization', default='lxc', help='Specify virtualization technology to use: lxc for LXC, kvm for KVM, docker for Docker. Default is %(default)s')\n+    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Only works on Debian-based systems (Ubuntu, Debian)')\n     parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')\n     parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')\n     parser.add_argument('signer', help='GPG signer to sign each build assert file')\n@@ -164,16 +163,23 @@ def main():\n         args.build=True\n         args.sign=True\n \n-    if args.kvm and args.docker:\n-        raise Exception('Error: cannot have both kvm and docker')\n-\n     args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n \n-    # Set enviroment variable USE_LXC or USE_DOCKER, let gitian-builder know that we use lxc or docker\n-    if args.docker:\n+    args.lxc = 'lxc' in args.virtualization # not used, for uniformity only\n+    args.kvm = 'kvm' in args.virtualization\n+    args.docker = 'docker' in args.virtualization\n+\n+    # Set environment variables for gitian-builder: USE_LXC, USE_DOCKER and USE_VBOX\n+    os.environ['USE_VBOX'] = ''\n+    if args.kvm:\n+        os.environ['USE_LXC'] = ''\n+        os.environ['USE_DOCKER'] = ''\n+    elif args.docker:\n+        os.environ['USE_LXC'] = ''\n         os.environ['USE_DOCKER'] = '1'\n-    elif not args.kvm:\n+    else: # default = lxc\n         os.environ['USE_LXC'] = '1'\n+        os.environ['USE_DOCKER'] = ''\n         if not 'GITIAN_HOST_IP' in os.environ.keys():\n             os.environ['GITIAN_HOST_IP'] = '10.0.3.1'\n         if not 'LXC_GUEST_IP' in os.environ.keys():"
      }
    ]
  }
]