paveljanik,2015-02-04T08:22:31Z,"There will a war about the width of the terminal... 80, 132, ...\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-72808124,72808124,
laanwj,2015-02-04T08:29:49Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-72808929,72808929,
luke-jr,2015-02-04T08:36:06Z,"Indeed, 79 or 80 are the only reasonable const widths I think. I suggest using COLUMNS environment var when defined, [detecting it](http://rosettacode.org/wiki/Terminal_control/Dimensions#C), and finally failing back to unformatted.\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-72809573,72809573,
paveljanik,2015-02-04T08:38:46Z,Travis fails with:\n\ninit.cpp:323:17: error: expected ‘)’ before ‘_’\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-72809824,72809824,
laanwj,2015-02-04T08:43:36Z,"OK - let's behave like adults here and NOT have an argument about what width to use. The code is general enough to work with any width. Let's first get it right, then later (as in, in a later pull) it can be improved to e.g. detect the screen width.\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-72810334,72810334,
jonasschnelli,2015-02-04T08:47:47Z,I also see this as a improvement.\nReading COLUMNS would be nice but feels like a luxury version.\nThe screen size probably should be 80.\nIMO it's less painful running a 80 output on a large terminal then vice versa.\n\nconceptual ACK.\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-72810813,72810813,
lucayepa,2015-02-08T08:25:10Z,"@paveljanik @luke-jr @laanwj @jonasschnelli\n\nI looked at well known projects to better understand what is the standard. I found that 79 chars is considered the standard. And it does not change if COLUMNS changes, nor if xterm changes. Our problem is that the descriptions are long and do not fit in the screen together with the option. Thus I will put the description on the next line of the option",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-73401834,73401834,
paveljanik,2015-02-08T08:27:32Z,@lucayepa Thanks for investigation. Looks good!\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-73401887,73401887,
jonasschnelli,2015-02-08T09:17:08Z,Just tested this on OSX 10.10.3 and Windows 7.\nIt doesn't look optimized on a 79x30 terminal.\n\nBinaries to test are here:\nhttps://builds.jonasschnelli.ch/pulls/5749/\n\nSee screenshot:\n![bildschirmfoto 2015-02-08 um 10 11 48](https://cloud.githubusercontent.com/assets/178464/6096023/0a0bd9f0-af7b-11e4-987c-c1f8e62386b6.png)\n\n![bildschirmfoto 2015-02-08 um 10 15 49](https://cloud.githubuserc,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-73403172,73403172,
paveljanik,2015-02-08T09:27:22Z,"@jonasschnelli IIUIC, ""Thus I will put the description on the next line of the option."" is not yet implemented.\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-73403433,73403433,
laanwj,2015-02-09T13:05:44Z,New style of options help looks good to me.\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-73505128,73505128,
laanwj,2015-02-10T11:25:41Z,"The screenshot shows a different situation from the code. If you're working on reworking this and it shouldn't be merged as-is, can you please close the pull in the mean time?\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-73684400,73684400,
lucayepa,2015-02-15T05:01:13Z,@jonasschnelli @laanwj @paveljanik In fact it was still not implemented. Now it is. Please test it with Windows and OsX.\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74404266,74404266,
paveljanik,2015-02-15T08:49:23Z,"Please squash the commits to one so it can be compared in the Github UI to the master code.\n\nI like this approach.\n\nCan we get rid of the spaces in the option description? E.g.:\n\n``` c\nstrUsage += HelpMessageOpt(""delin=N                "", _(""Delete input N from TX""));\n```\n\nThe spaces after `delin=N` can probably be deleted (and the formatting function fixed accordingly). There are lot of",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74409237,74409237,
lucayepa,2015-02-15T19:57:07Z,"@paveljanik I removed the spaces. The idea is not to touch the translation, thus I did not touch the ':'. Maybe there should be a policy about when to touch the translation (at the start of a new version, or something like that).\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74433707,74433707,
lucayepa,2015-02-15T20:37:08Z,@paveljanik I squashed the 6 commits in a single one.\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74435563,74435563,
laanwj,2015-02-16T12:38:46Z,"Screenshot looks very good to me.\n\n> The text ""Start Bitcoin Core Daemon"" looks a bit strange there\n\nMeh. It is consistent with bitcoin-cli's output.\n\n```\n  bitcoin-cli [options] <command> [params]  Send command to Bitcoin Core\n  bitcoin-cli [options] help                List commands\n  bitcoin-cli [options] help <command>      Get help for a command\n```\n\nExcept that bitcoind happens t",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74502460,74502460,
laanwj,2015-02-16T12:53:47Z,"Looks like this breaks `bitcoin-qt --help` at the moment:\n\n```\n(5749)orion@amethyst:~/projects/bitcoin/bitcoin$ src/qt/bitcoin-qt --help\n(no output)\n```\n\nAlso when selecting ""command line options"" in the help menu, there is a clear distinction between UI options and the core options:\n![options](https://cloud.githubusercontent.com/assets/126646/6212225/912d88f6-b5da-11e4-988f-bfe1b65bc358.p",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74503974,74503974,
fanquake,2015-02-16T12:56:42Z,"This is how it currently looks on OSX, and bitcoin-qt --help is indeed broken.\n![screen shot](https://cloud.githubusercontent.com/assets/863730/6212269/1328fdfc-b61e-11e4-8ba5-307f55283a93.png)\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74504298,74504298,
laanwj,2015-02-16T12:59:29Z,"@fanquake that doesn't look like the most recent version of this code, option and text are still on the same line there\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74504581,74504581,
fanquake,2015-02-16T13:17:58Z,"@laanwj Right, forgot the merge script doesn't actually build after merging. Change look fine now. Although there's still the issue with bitcoin-qt.\n![screen shot 1](https://cloud.githubusercontent.com/assets/863730/6212478/c3027076-b620-11e4-8815-db2ccab35240.png)\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74506712,74506712,
lucayepa,2015-02-17T05:11:25Z,"@laanwj @fanquake @zander The issue about bitcoin-qt not displaying the help message, seems to be there since commit e179eb3d9bfec7e67908242c71c87b716a41c97c.\n\nIf you agree, I think that the right workflow should be to revert e179eb3d9bfec7e67908242c71c87b716a41c97c, if possible, and then I will rebase my commit and try to fix the qt help message.\n\nThen I think it should be better to use only ",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74617976,74617976,
zander,2015-02-17T06:35:26Z,"wow, I only heard now for the first time my commit caused a regressions. Not nice to wake up to the suggestion to get it reverted. Please give me a chance to understand the issue before you revert anything.\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74623372,74623372,
zander,2015-02-17T06:54:52Z,@lucayepa to say that my commit (e179eb3) introduced a bug is not really true. It does the best it can with unstructured data.  With your change in the unstructured data it no longer works.\n\nMaybe the best solution is to make the data actually structured. Which means that instead of building a large string in the core and then using heuristics to split stuff again in the GUI (so it can be put in,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74624995,74624995,
lucayepa,2015-02-17T07:32:21Z,"@zander I'll check your solution, but, in order to be sure that we are on the same page, please build e179eb3d9bfec7e67908242c71c87b716a41c97c, then write on the command line:\n\n```\nbitcoin-qt --help\n```\n\nThen build e5153095ea410dd07770c0327447856488bfd137 and do the same.\n\nThe bug is not about structured data, but about the fact that there is no output at all.\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-74627754,74627754,
laanwj,2015-02-19T10:51:04Z,"Well in any case if that was already broken beforehand, it is not the responsibility of this pull to fix it. Seemingly no one tested `bitcoin-qt --help` in the mean time.\n\nSo the only thing here that remains to be fixed is the help message dialog, which now shows the output in two styles.\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-75032927,75032927,
jtimon,2015-02-23T19:38:02Z,"Maybe it is better to declare the new functions in utilstrencodings.h instead of util.h?\nThat way policy can use them without depending on util.o (see #5595).\n@luke-jr @theuni thoughts?\nBeyond that little nit, ut ACK.\n",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-75615305,75615305,
laanwj,2015-03-06T14:40:05Z,@jtimon util.cpp seems the appropriate place due to their link with other option management functions which are there too. Is there any reason you need to use these functions and not Get*Arg?\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-77568569,77568569,
lucayepa,2015-03-09T09:56:07Z,"@jtimon @laanwj @luke-jr @theuni As suggested, I left the new functions in util.h\n\n@zander @laanwj @fanquake I resolved the bug from e179eb3d9bfec7e67908242c71c87b716a41c97c . Now ""bitcoin-qt -help"" returns the correct output.\n\n@paveljanik @jonasschnelli I put all the options in a single place (init.cpp). There were already other options qt-related in init.cpp. Having all the options in a sing",https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-77825976,77825976,
lucayepa,2015-03-11T05:23:23Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/5749#issuecomment-78206884,78206884,
laanwj,2015-02-04T08:32:53Z,"Let's use type-safe constants and inline functions. I'd like to avoid C-style macros unless there is no other choice. e.g.\n\n```\nstatic const int screenWidth = 132;\n....\nstatic inline std::string opt(const std::string &option, const std::string &message)\n{\n    return option + FormatParagraph(...) + ""\n"";\n}\n```\n",https://github.com/bitcoin/bitcoin/pull/5749#discussion_r24068924,24068924,src/bitcoin-cli.cpp
