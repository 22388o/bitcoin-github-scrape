[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18883041",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-18883041",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733",
    "id": 18883041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODgzMDQx",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T00:50:22Z",
    "updated_at": "2013-06-04T00:50:22Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab139c964e32b3ec5279eea0e749e0fe4a31a2dd for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/18883041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19498612",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-19498612",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733",
    "id": 19498612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDk4NjEy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-15T15:55:08Z",
    "updated_at": "2013-06-15T15:55:08Z",
    "author_association": "MEMBER",
    "body": "Would you mind if I rewrote this a bit, by simultaneously changing how keys are stored in the wallet file (using a serialized CKey, instead of CPrivKey, and combining it with the new CKeyMeta)?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19498612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19502773",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-19502773",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733",
    "id": 19502773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTAyNzcz",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?u=871eabd15ac87d37f1b4d2b927fa8f33e3ad7fe3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-15T20:17:50Z",
    "updated_at": "2013-06-15T20:17:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "That sounds like a good idea.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/19502773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/20493830",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#issuecomment-20493830",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/2733",
    "id": 20493830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDkzODMw",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?u=871eabd15ac87d37f1b4d2b927fa8f33e3ad7fe3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-04T21:19:47Z",
    "updated_at": "2013-07-04T21:19:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm closing this pull request.\n\nsipa's suggestion is a better long term solution.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/20493830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4515605",
    "pull_request_review_id": null,
    "id": 4515605,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU2MDU=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Looks like ctx and point are memory leaked in the return true case...\n",
    "created_at": "2013-06-04T04:34:25Z",
    "updated_at": "2013-06-04T04:34:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4515605",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4515605"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4515605"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4515605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4517050",
    "pull_request_review_id": null,
    "id": 4517050,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNTA=",
    "diff_hunk": "@@ -278,14 +283,29 @@ void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountin\n                 ssValue >> wkey;\n                 pkey = wkey.vchPrivKey;\n             }\n-            if (!key.SetPrivKey(pkey, vchPubKey.IsCompressed()))\n+            \n+            try\n             {\n-                strErr = \"Error reading wallet database: CPrivKey corrupt\";\n-                return false;\n+                ssValue >> hash;\n+            }\n+            catch(...){}\n+            \n+            bool fSkipCheck = false;\n+            \n+            if (hash != 0)\n+            {\n+                if (Hash(pkey.begin(), pkey.end()) != hash)",
    "path": "src/walletdb.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The hash should be calculated over both private and public key, as the reason for the test is guaranteeing that we have matching keypairs.\n",
    "created_at": "2013-06-04T07:41:05Z",
    "updated_at": "2013-06-04T07:41:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4517050",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4517050"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4517050"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4517050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 297,
    "original_line": 297,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4521470",
    "pull_request_review_id": null,
    "id": 4521470,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0NzA=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "vinniefalco",
      "id": 1503976,
      "node_id": "MDQ6VXNlcjE1MDM5NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vinniefalco",
      "html_url": "https://github.com/vinniefalco",
      "followers_url": "https://api.github.com/users/vinniefalco/followers",
      "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}",
      "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
      "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
      "repos_url": "https://api.github.com/users/vinniefalco/repos",
      "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do I need my glasses or is that a \"goto\" statement?\n",
    "created_at": "2013-06-04T12:53:01Z",
    "updated_at": "2013-06-04T12:53:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4521470",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4521470"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4521470"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4521470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522013",
    "pull_request_review_id": null,
    "id": 4522013,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwMTM=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"goto\" use is just fine.  It is efficient for both the compiler and human eyes.\n",
    "created_at": "2013-06-04T13:25:11Z",
    "updated_at": "2013-06-04T13:25:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522013",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522013"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522013"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522049",
    "pull_request_review_id": null,
    "id": 4522049,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwNDk=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "vinniefalco",
      "id": 1503976,
      "node_id": "MDQ6VXNlcjE1MDM5NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vinniefalco",
      "html_url": "https://github.com/vinniefalco",
      "followers_url": "https://api.github.com/users/vinniefalco/followers",
      "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}",
      "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
      "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
      "repos_url": "https://api.github.com/users/vinniefalco/repos",
      "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, goto is not okay.\nhttp://stackoverflow.com/questions/46586/goto-still-considered-harmful\n\nIt's true that there are exceedingly rare cases where a goto is useful but this is not one of them. Especially this case, error handling.\n",
    "created_at": "2013-06-04T13:27:56Z",
    "updated_at": "2013-06-04T13:28:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522049",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522049"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522049"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522089",
    "pull_request_review_id": null,
    "id": 4522089,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwODk=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is code that I assume was copied from the OpenSSL sources, which uses such error handling extensively. Without RAII-like features (as it was copied from C), I also know of no less contrived way of dealing with this.\n",
    "created_at": "2013-06-04T13:31:12Z",
    "updated_at": "2013-06-04T13:31:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522089",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522089"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522089"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522250",
    "pull_request_review_id": null,
    "id": 4522250,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIyNTA=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "vinniefalco",
      "id": 1503976,
      "node_id": "MDQ6VXNlcjE1MDM5NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vinniefalco",
      "html_url": "https://github.com/vinniefalco",
      "followers_url": "https://api.github.com/users/vinniefalco/followers",
      "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}",
      "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
      "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
      "repos_url": "https://api.github.com/users/vinniefalco/repos",
      "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Then roll a quick RAII wrapper (don't add more dependence on boost). Here's one for you http://codepad.org/gr8M2LE6\n\nLook at how easy it was to introduce a memory leak. I know that you guys know better than this!\n",
    "created_at": "2013-06-04T13:39:14Z",
    "updated_at": "2013-06-04T13:39:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522250",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522250"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522250"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522441",
    "pull_request_review_id": null,
    "id": 4522441,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0NDE=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "~90 LOC just to avoid a goto?\n\nI think that speaks for itself :)\n",
    "created_at": "2013-06-04T13:47:37Z",
    "updated_at": "2013-06-04T13:47:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522441",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522441"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522441"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522566",
    "pull_request_review_id": null,
    "id": 4522566,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1NjY=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "vinniefalco",
      "id": 1503976,
      "node_id": "MDQ6VXNlcjE1MDM5NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1503976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vinniefalco",
      "html_url": "https://github.com/vinniefalco",
      "followers_url": "https://api.github.com/users/vinniefalco/followers",
      "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}",
      "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions",
      "organizations_url": "https://api.github.com/users/vinniefalco/orgs",
      "repos_url": "https://api.github.com/users/vinniefalco/repos",
      "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vinniefalco/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "90 LOC to have the right tool. Note, you could use boost::auto_ptr or whatever RAII wrapper they have around dynamically created objects. I prefer not to create additional dependencies on boost. That Bitcoin source code is sloppy and breaks numerous \"best practices\" endorsed by luminaries of C++ should not even be up for debate - I know that you guys know better! The attitude needs to change or else it will remain a difficult to maintain mess, becoming progressively harder to implement changes without breaking things and tons of extra work.\n",
    "created_at": "2013-06-04T13:52:48Z",
    "updated_at": "2013-06-04T13:52:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522566",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522566"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4522566"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4522566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523261",
    "pull_request_review_id": null,
    "id": 4523261,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjE=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "NAK that logic\n",
    "created_at": "2013-06-04T14:19:41Z",
    "updated_at": "2013-06-04T14:19:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4523261",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523261"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4523261"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523428",
    "pull_request_review_id": null,
    "id": 4523428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM0Mjg=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Goto is fine in C code (in many cases the only sane way to do error\nhandling with proper cleanup), but in C++ we can indeed do better with RAII.\nUsing boost would be preferable to rolling our own RAII wrappers.\n",
    "created_at": "2013-06-04T14:24:31Z",
    "updated_at": "2013-06-04T14:24:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4523428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4523428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4523428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4681882",
    "pull_request_review_id": null,
    "id": 4681882,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4ODI=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "ValleZ",
      "id": 905759,
      "node_id": "MDQ6VXNlcjkwNTc1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/905759?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ValleZ",
      "html_url": "https://github.com/ValleZ",
      "followers_url": "https://api.github.com/users/ValleZ/followers",
      "following_url": "https://api.github.com/users/ValleZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/ValleZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ValleZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ValleZ/subscriptions",
      "organizations_url": "https://api.github.com/users/ValleZ/orgs",
      "repos_url": "https://api.github.com/users/ValleZ/repos",
      "events_url": "https://api.github.com/users/ValleZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ValleZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not a c++ guy, but I believe there are RuntimeExceptions, right? And maybe they allows to pass description of error. It would be much better than to use goto.\n",
    "created_at": "2013-06-13T15:47:09Z",
    "updated_at": "2013-06-13T15:47:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4681882",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4681882"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r4681882"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/4681882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5003860",
    "pull_request_review_id": null,
    "id": 5003860,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4NjA=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "GilesBathgate",
      "id": 444143,
      "node_id": "MDQ6VXNlcjQ0NDE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/444143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GilesBathgate",
      "html_url": "https://github.com/GilesBathgate",
      "followers_url": "https://api.github.com/users/GilesBathgate/followers",
      "following_url": "https://api.github.com/users/GilesBathgate/following{/other_user}",
      "gists_url": "https://api.github.com/users/GilesBathgate/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GilesBathgate/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GilesBathgate/subscriptions",
      "organizations_url": "https://api.github.com/users/GilesBathgate/orgs",
      "repos_url": "https://api.github.com/users/GilesBathgate/repos",
      "events_url": "https://api.github.com/users/GilesBathgate/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GilesBathgate/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rather than creating 90 Lines of RAII wrappers, You could probably just rewrite it like this:\n\n``` c++\nbool SetPrivKeyCleanup(BN_CTX *ctx,EC_POINT *point)\n{\n if (ctx   != NULL)\n  BN_CTX_free(ctx);\n if (point != NULL)\n  EC_POINT_free(point);\n return false;\n}\n```\n\nThen just ammend:\n\n``` c++\n            if (!pkey || !group || !pub_key || !priv_key)\n                return SetPrivKeyCleanup(ctx,point);\n\n            order = BN_new();\n\n            if ((ctx = BN_CTX_new()) == NULL)\n                return SetPrivKeyCleanup(ctx,point);\n\n            if (!EC_GROUP_get_order(group, order, ctx))\n                return SetPrivKeyCleanup(ctx,point);\n\n            // check if generator * priv_key == pub_key \n            if (BN_cmp(priv_key, order) >= 0)\n                return SetPrivKeyCleanup(ctx,point);\n\n            if ((point = EC_POINT_new(group)) == NULL)\n                return SetPrivKeyCleanup(ctx,point);\n\n            if (!EC_POINT_mul(group, point, priv_key, NULL, NULL, ctx))\n                return SetPrivKeyCleanup(ctx,point);\n\n            if (EC_POINT_cmp(group, point, pub_key, ctx) != 0)\n                return SetPrivKeyCleanup(ctx,point);\n\n            return true;\n```\n\nSince I didn't test this there is probably a good reason why it wouldn't work, but you get the basic idea.\n",
    "created_at": "2013-07-03T08:14:04Z",
    "updated_at": "2013-07-03T08:15:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5003860",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5003860"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5003860"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5003860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5004340",
    "pull_request_review_id": null,
    "id": 5004340,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNDA=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I still prefer RAII. Make the compiler do the work of making it leak proof.\nSafer _and_ more convenient.\n",
    "created_at": "2013-07-03T08:51:24Z",
    "updated_at": "2013-07-03T08:51:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5004340",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5004340"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5004340"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5004340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5005718",
    "pull_request_review_id": null,
    "id": 5005718,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3MTg=",
    "diff_hunk": "@@ -164,13 +168,56 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n-            if (EC_KEY_check_key(pkey))\n+            \n+            if (fSkipCheck)\n                 return true;\n+            \n+            const EC_GROUP *group = EC_KEY_get0_group(pkey);\n+            const EC_POINT *pub_key = EC_KEY_get0_public_key(pkey);\n+            const BIGNUM *priv_key = EC_KEY_get0_private_key(pkey);\n+\n+            BN_CTX\t*ctx = NULL;\n+            BIGNUM\t*order  = NULL;\n+            EC_POINT *point = NULL;\n+\n+            if (!pkey || !group || !pub_key || !priv_key)\n+                goto err;\n+            \n+            order = BN_new();\n+            \n+            if ((ctx = BN_CTX_new()) == NULL)",
    "path": "src/key.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "original_commit_id": "ab139c964e32b3ec5279eea0e749e0fe4a31a2dd",
    "user": {
      "login": "GilesBathgate",
      "id": 444143,
      "node_id": "MDQ6VXNlcjQ0NDE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/444143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GilesBathgate",
      "html_url": "https://github.com/GilesBathgate",
      "followers_url": "https://api.github.com/users/GilesBathgate/followers",
      "following_url": "https://api.github.com/users/GilesBathgate/following{/other_user}",
      "gists_url": "https://api.github.com/users/GilesBathgate/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GilesBathgate/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GilesBathgate/subscriptions",
      "organizations_url": "https://api.github.com/users/GilesBathgate/orgs",
      "repos_url": "https://api.github.com/users/GilesBathgate/repos",
      "events_url": "https://api.github.com/users/GilesBathgate/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GilesBathgate/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed making an EC_POINT class that implements EC_POINT_new in the constructor and EC_POINT_free in the destructor, as well as operator overloads for EC_POINT_mul and EC_POINT_cmp, is much more in the spirit of C++. I was really just addressing the comment:\n\n> Do I need my glasses or is that a \"goto\" statement?\n\nIts not really an issue worth making a fuss about really. Perhaps I should have kept quiet.\n",
    "created_at": "2013-07-03T10:17:16Z",
    "updated_at": "2013-07-03T10:17:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5005718",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5005718"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/2733#discussion_r5005718"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/2733"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/5005718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  }
]