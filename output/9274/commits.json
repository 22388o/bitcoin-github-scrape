[
  {
    "sha": "fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJlY2M0OGZiODRmNWQ3NDgwN2FjYjE2MmI0NmNjZWNlNmY0Y2Fh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-04T15:16:11Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-04T20:30:20Z"
      },
      "message": "[qa] pruning: Use cached utxo set to run faster",
      "tree": {
        "sha": "5177a77b79e94c44bea535280722f0b49292b2ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5177a77b79e94c44bea535280722f0b49292b2ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e4bb312e6958d2baa309ba670e5eed1523c6f47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e4bb312e6958d2baa309ba670e5eed1523c6f47",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e4bb312e6958d2baa309ba670e5eed1523c6f47"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 24,
      "deletions": 13
    },
    "files": [
      {
        "sha": "154ae59c26a2728b216730a25ef24ec73b0fd5c0",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
        "patch": "@@ -26,7 +26,7 @@ def __init__(self):\n \n     def run_test(self):\n         txids = []\n-        utxos = create_confirmed_utxos(self.relayfee, self.nodes[0], 90)\n+        utxos = create_confirmed_utxos(self.relayfee, self.nodes[0], 91)\n \n         #create a mempool tx that will be evicted\n         us0 = utxos.pop()\n@@ -41,9 +41,9 @@ def run_test(self):\n \n         relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n         base_fee = relayfee*100\n-        for i in range (4):\n+        for i in range (3):\n             txids.append([])\n-            txids[i] = create_lots_of_big_transactions(self.nodes[0], self.txouts, utxos[30*i:30*i+30], (i+1)*base_fee)\n+            txids[i] = create_lots_of_big_transactions(self.nodes[0], self.txouts, utxos[30*i:30*i+30], 30, (i+1)*base_fee)\n \n         # by now, the tx should be evicted, check confirmation state\n         assert(txid not in self.nodes[0].getrawmempool())"
      },
      {
        "sha": "b7459c80cbdfc748d26e2d10cf2a6ee1a374e97f",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
        "patch": "@@ -39,7 +39,7 @@ def run_test(self):\n             txids.append([])\n             start_range = i * range_size\n             end_range = start_range + range_size\n-            txids[i] = create_lots_of_big_transactions(self.nodes[0], self.txouts, utxos[start_range:end_range], (i+1)*base_fee)\n+            txids[i] = create_lots_of_big_transactions(self.nodes[0], self.txouts, utxos[start_range:end_range], end_range - start_range, (i+1)*base_fee)\n \n         # Make sure that the size of each group of transactions exceeds\n         # MAX_BLOCK_BASE_SIZE -- otherwise the test needs to be revised to create"
      },
      {
        "sha": "78b8938e4a9f60193b858e400e2452282de28be1",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
        "patch": "@@ -13,6 +13,9 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n+import time\n+import os\n+\n \n def calc_usage(blockdir):\n     return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(blockdir+f)) / (1024. * 1024.)\n@@ -24,6 +27,10 @@ def __init__(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 3\n \n+        # Cache for utxos, as the listunspent may take a long time later in the test\n+        self.utxo_cache_0 = []\n+        self.utxo_cache_1 = []\n+\n     def setup_network(self):\n         self.nodes = []\n         self.is_network_split = False\n@@ -48,7 +55,7 @@ def create_big_chain(self):\n         self.nodes[0].generate(150)\n         # Then mine enough full blocks to create more than 550MiB of data\n         for i in range(645):\n-            mine_large_block(self.nodes[0])\n+            mine_large_block(self.nodes[0], self.utxo_cache_0)\n \n         sync_blocks(self.nodes[0:3])\n \n@@ -60,7 +67,7 @@ def test_height_min(self):\n         print(\"Mining 25 more blocks should cause the first block file to be pruned\")\n         # Pruning doesn't run until we're allocating another chunk, 20 full blocks past the height cutoff will ensure this\n         for i in range(25):\n-            mine_large_block(self.nodes[0])\n+            mine_large_block(self.nodes[0], self.utxo_cache_0)\n \n         waitstart = time.time()\n         while os.path.isfile(self.prunedir+\"blk00000.dat\"):\n@@ -87,13 +94,13 @@ def create_chain_with_staleblocks(self):\n             # Mine 24 blocks in node 1\n             for i in range(24):\n                 if j == 0:\n-                    mine_large_block(self.nodes[1])\n+                    mine_large_block(self.nodes[1], self.utxo_cache_1)\n                 else:\n                     self.nodes[1].generate(1) #tx's already in mempool from previous disconnects\n \n             # Reorg back with 25 block chain from node 0\n             for i in range(25):\n-                mine_large_block(self.nodes[0])\n+                mine_large_block(self.nodes[0], self.utxo_cache_0)\n \n             # Create connections in the order so both nodes can see the reorg at the same time\n             connect_nodes(self.nodes[1], 0)"
      },
      {
        "sha": "85898d9f32de13af43487ce79c671af2bf7388d9",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2ecc48fb84f5d74807acb162b46ccece6f4caa/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
        "patch": "@@ -654,10 +654,10 @@ def create_tx(node, coinbase, to_address, amount):\n \n # Create a spend of each passed-in utxo, splicing in \"txouts\" to each raw\n # transaction to make it large.  See gen_return_txouts() above.\n-def create_lots_of_big_transactions(node, txouts, utxos, fee):\n+def create_lots_of_big_transactions(node, txouts, utxos, num, fee):\n     addr = node.getnewaddress()\n     txids = []\n-    for _ in range(len(utxos)):\n+    for _ in range(num):\n         t = utxos.pop()\n         inputs=[{ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]}]\n         outputs = {}\n@@ -672,13 +672,17 @@ def create_lots_of_big_transactions(node, txouts, utxos, fee):\n         txids.append(txid)\n     return txids\n \n-def mine_large_block(node):\n+def mine_large_block(node, utxos=None):\n     # generate a 66k transaction,\n     # and 14 of them is close to the 1MB block limit\n+    num = 14\n     txouts = gen_return_txouts()\n-    utxos = node.listunspent()[:14]\n+    utxos = utxos if utxos is not None else []\n+    if len(utxos) < num:\n+        utxos.clear()\n+        utxos.extend(node.listunspent())\n     fee = 100 * node.getnetworkinfo()[\"relayfee\"]\n-    create_lots_of_big_transactions(node, txouts, utxos, fee=fee)\n+    create_lots_of_big_transactions(node, txouts, utxos, num, fee=fee)\n     node.generate(1)\n \n def get_bip9_status(node, key):"
      }
    ]
  },
  {
    "sha": "fab1af31d43f0db58f590992d1cc5e302f1133f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWIxYWYzMWQ0M2YwZGI1OGY1OTA5OTJkMWNjNWUzMDJmMTEzM2Y4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-04T23:27:47Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-12-04T23:31:10Z"
      },
      "message": "[qa] maxuploadtarget: Use cached utxo set",
      "tree": {
        "sha": "4536479a72e1226030139340e1c62bfebb69b970",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4536479a72e1226030139340e1c62bfebb69b970"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab1af31d43f0db58f590992d1cc5e302f1133f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab1af31d43f0db58f590992d1cc5e302f1133f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab1af31d43f0db58f590992d1cc5e302f1133f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab1af31d43f0db58f590992d1cc5e302f1133f8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ecc48fb84f5d74807acb162b46ccece6f4caa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2ecc48fb84f5d74807acb162b46ccece6f4caa"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9340e899ebc7ad44d693744e554d231b9bcec7e9",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab1af31d43f0db58f590992d1cc5e302f1133f8/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab1af31d43f0db58f590992d1cc5e302f1133f8/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=fab1af31d43f0db58f590992d1cc5e302f1133f8",
        "patch": "@@ -86,6 +86,9 @@ def __init__(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n \n+        # Cache for utxos, as the listunspent may take a long time later in the test\n+        self.utxo_cache = []\n+\n     def setup_network(self):\n         # Start a node with maxuploadtarget of 200 MB (/24h)\n         self.nodes = []\n@@ -118,7 +121,7 @@ def run_test(self):\n         # Test logic begins here\n \n         # Now mine a big block\n-        mine_large_block(self.nodes[0])\n+        mine_large_block(self.nodes[0], self.utxo_cache)\n \n         # Store the hash; we'll request this later\n         big_old_block = self.nodes[0].getbestblockhash()\n@@ -129,7 +132,7 @@ def run_test(self):\n         self.nodes[0].setmocktime(int(time.time()) - 2*60*60*24)\n \n         # Mine one more block, so that the prior block looks old\n-        mine_large_block(self.nodes[0])\n+        mine_large_block(self.nodes[0], self.utxo_cache)\n \n         # We'll be requesting this new block too\n         big_new_block = self.nodes[0].getbestblockhash()"
      }
    ]
  }
]