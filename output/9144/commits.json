[
  {
    "sha": "e3c4f7e18246f0872c816358d4013d229261bbcf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2M0ZjdlMTgyNDZmMDg3MmM4MTYzNThkNDAxM2QyMjkyNjFiYmNm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2016-11-12T12:27:36Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2016-11-24T11:50:07Z"
      },
      "message": "Correct help output for waitfor RPC commands",
      "tree": {
        "sha": "3782c70d216b50cd1aed1e23177f57a4f6c5010f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3782c70d216b50cd1aed1e23177f57a4f6c5010f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3c4f7e18246f0872c816358d4013d229261bbcf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJYNtPvAAoJEC7rn1zAlSbBM5UP/1GAT//mPsJWRCiPRmmpvkbw\n+gIGAPgNQVP+uWJwYzyzB+foMPbhc3ZJHkj1nVgdkntRKBNW2/Y5rQ/LXDR6ZZkX\niRPTVXoAALe5FXxjq+zgvquA/bC8kKySxGcGUZjWTZSbpZlaYDy4m9v+QeZiPU12\njcKnyCk1AP+nBse3zWYsKMw/BnYVjDBpHaVEc59FlibxhrRAU2Im/a/MA8vXQTEj\nb7nq0s0FUBZ3Zs4gKA0bm3ytvnqTeJYSPGZhxmgrwy55u0qLdzuNtlfuSWHky245\n+dVFHR/1IvfIwYjM+dJPw2PlhEDKpzRLUqK3kYlMy0XVxOCmLT2qPywaLmzDMriP\n2zNhpmKovYO2PO8gvsP8F8Gsvhjr0hwUCTpo38PJP2QEcApynfbmxvG9JpsJxjoB\n+a9j10Baxbfui4/0K2FV3s8xH6KupzzBjFKCt77PIfhwZAquAaNlYVoqqJ3lb7RD\nIdCUBUBTnV/yBsCkqAYMiqk+yx0NhD/kbeQhb7zwSEqjX/faLm1j7KMpAmcYlgyA\nBKD6UVPu/VtQGFQ8nfoiFTdMTylpjfIzpf7iO+hH4PzzB47laQ3Y4NzgZNZVs9vQ\nfnaYgBacBPJKE43sR4++O88Mwza+Ayxd4cvL3sM4xQpssC2eRd5Ivd2ThRgEs4ka\nqrfiN4Ll4OEqyVz94j+q\n=oER6\n-----END PGP SIGNATURE-----",
        "payload": "tree 3782c70d216b50cd1aed1e23177f57a4f6c5010f\nparent db5e22e0537ae262270660201519c5c20f30951a\nauthor fanquake <fanquake@gmail.com> 1478953656 +0800\ncommitter fanquake <fanquake@gmail.com> 1479988207 +0800\n\nCorrect help output for waitfor RPC commands\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3c4f7e18246f0872c816358d4013d229261bbcf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3c4f7e18246f0872c816358d4013d229261bbcf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3c4f7e18246f0872c816358d4013d229261bbcf/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db5e22e0537ae262270660201519c5c20f30951a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db5e22e0537ae262270660201519c5c20f30951a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db5e22e0537ae262270660201519c5c20f30951a"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "733d14d24e2ab25e6cea15efdc417a658df6a5ed",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3c4f7e18246f0872c816358d4013d229261bbcf/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3c4f7e18246f0872c816358d4013d229261bbcf/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=e3c4f7e18246f0872c816358d4013d229261bbcf",
        "patch": "@@ -194,12 +194,12 @@ UniValue waitfornewblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n         throw runtime_error(\n-            \"waitfornewblock\\n\"\n+            \"waitfornewblock (timeout)\\n\"\n             \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. timeout (milliseconds) (int, optional, default=false)\\n\"\n-            \"\\nResult::\\n\"\n+            \"1. timeout (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n+            \"\\nResult:\\n\"\n             \"{                           (json object)\\n\"\n             \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n             \"  \\\"height\\\" : {     (int) Block height\\n\"\n@@ -232,13 +232,13 @@ UniValue waitforblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw runtime_error(\n-            \"waitforblock\\n\"\n+            \"waitforblock <blockhash> (timeout)\\n\"\n             \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. blockhash to wait for (string)\\n\"\n-            \"2. timeout (milliseconds) (int, optional, default=false)\\n\"\n-            \"\\nResult::\\n\"\n+            \"2. timeout (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n+            \"\\nResult:\\n\"\n             \"{                           (json object)\\n\"\n             \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n             \"  \\\"height\\\" : {     (int) Block height\\n\"\n@@ -274,14 +274,14 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw runtime_error(\n-            \"waitforblock\\n\"\n+            \"waitforblockheight <blockheight> (timeout)\\n\"\n             \"\\nWaits for (at least) block height and returns the height and hash\\n\"\n-            \"\\nof the current tip.\\n\"\n+            \"of the current tip.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. block height to wait for (int)\\n\"\n-            \"2. timeout (milliseconds) (int, optional, default=false)\\n\"\n-            \"\\nResult::\\n\"\n+            \"2. timeout (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n+            \"\\nResult:\\n\"\n             \"{                           (json object)\\n\"\n             \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n             \"  \\\"height\\\" : {     (int) Block height\\n\""
      }
    ]
  }
]