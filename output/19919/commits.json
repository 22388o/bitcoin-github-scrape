[
  {
    "sha": "8b39a875581bed1c2f40a7d9616bdb7cc642bf59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjM5YTg3NTU4MWJlZDFjMmY0MGE3ZDk2MTZiZGI3Y2M2NDJiZjU5",
    "commit": {
      "author": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2020-09-08T16:11:20Z"
      },
      "committer": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2020-09-09T15:47:31Z"
      },
      "message": "bugfix: make LoadWallet assigns status always\n\nAlthough loadwallet() in rpcwallet.cpp assumes LoadWallet() always\nassign some value to the 'status', but LoadWallet() does not do so\nin some situation.\n\nThis fixes above and prevends loadwallet() returns ambiguous error code.",
      "tree": {
        "sha": "def8d93649f86b2e396f5426dad27b89cd0728b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/def8d93649f86b2e396f5426dad27b89cd0728b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b39a875581bed1c2f40a7d9616bdb7cc642bf59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b39a875581bed1c2f40a7d9616bdb7cc642bf59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b39a875581bed1c2f40a7d9616bdb7cc642bf59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b39a875581bed1c2f40a7d9616bdb7cc642bf59/comments",
    "author": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "564e1ab0f3dc573bd3ea60a80f6649c361243df9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/564e1ab0f3dc573bd3ea60a80f6649c361243df9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/564e1ab0f3dc573bd3ea60a80f6649c361243df9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "617ed4614129428259f452799ce3a86f2182d9b0",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b39a875581bed1c2f40a7d9616bdb7cc642bf59/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b39a875581bed1c2f40a7d9616bdb7cc642bf59/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=8b39a875581bed1c2f40a7d9616bdb7cc642bf59",
        "patch": "@@ -212,6 +212,7 @@ enum class DatabaseStatus {\n     FAILED_ALREADY_EXISTS,\n     FAILED_NOT_FOUND,\n     FAILED_CREATE,\n+    FAILED_LOAD,\n     FAILED_VERIFY,\n     FAILED_ENCRYPT,\n };"
      },
      {
        "sha": "73e11a5b523229ddac09f1dcf69c6bc2d515de7a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b39a875581bed1c2f40a7d9616bdb7cc642bf59/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b39a875581bed1c2f40a7d9616bdb7cc642bf59/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8b39a875581bed1c2f40a7d9616bdb7cc642bf59",
        "patch": "@@ -212,6 +212,7 @@ std::shared_ptr<CWallet> LoadWalletInternal(interfaces::Chain& chain, const std:\n         std::shared_ptr<CWallet> wallet = CWallet::Create(chain, name, std::move(database), options.create_flags, error, warnings);\n         if (!wallet) {\n             error = Untranslated(\"Wallet loading failed.\") + Untranslated(\" \") + error;\n+            status = DatabaseStatus::FAILED_LOAD;\n             return nullptr;\n         }\n         AddWallet(wallet);\n@@ -223,6 +224,7 @@ std::shared_ptr<CWallet> LoadWalletInternal(interfaces::Chain& chain, const std:\n         return wallet;\n     } catch (const std::runtime_error& e) {\n         error = Untranslated(e.what());\n+        status = DatabaseStatus::FAILED_LOAD;\n         return nullptr;\n     }\n }\n@@ -233,6 +235,7 @@ std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string&\n     auto result = WITH_LOCK(g_loading_wallet_mutex, return g_loading_wallet_set.insert(name));\n     if (!result.second) {\n         error = Untranslated(\"Wallet already being loading.\");\n+        status = DatabaseStatus::FAILED_LOAD;\n         return nullptr;\n     }\n     auto wallet = LoadWalletInternal(chain, name, load_on_start, options, status, error, warnings);"
      }
    ]
  }
]