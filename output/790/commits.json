[
  {
    "sha": "177dbcaace432f46b191add5c26226dbaac2c81c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzdkYmNhYWNlNDMyZjQ2YjE5MWFkZDVjMjYyMjZkYmFhYzJjODFj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-01-31T22:36:25Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-01-31T22:42:15Z"
      },
      "message": "Fix UPnP by reannouncing every 20 minutes.",
      "tree": {
        "sha": "86cb53e2cae8cbe5443608fd3920a0351e4468a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86cb53e2cae8cbe5443608fd3920a0351e4468a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/177dbcaace432f46b191add5c26226dbaac2c81c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/177dbcaace432f46b191add5c26226dbaac2c81c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/177dbcaace432f46b191add5c26226dbaac2c81c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/177dbcaace432f46b191add5c26226dbaac2c81c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c52296a73e5222628bf6a03eaf727622594bf464",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c52296a73e5222628bf6a03eaf727622594bf464",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c52296a73e5222628bf6a03eaf727622594bf464"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 22,
      "deletions": 2
    },
    "files": [
      {
        "sha": "66c9218cd01227a954dd00a460ffd4dc355bd935",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 2,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/177dbcaace432f46b191add5c26226dbaac2c81c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/177dbcaace432f46b191add5c26226dbaac2c81c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=177dbcaace432f46b191add5c26226dbaac2c81c",
        "patch": "@@ -967,11 +967,11 @@ void ThreadMapPort2(void* parg)\n     {\n         string strDesc = \"Bitcoin \" + FormatFullVersion();\n #ifndef UPNPDISCOVER_SUCCESS\n-    /* miniupnpc 1.5 */\n+        /* miniupnpc 1.5 */\n         r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n                             port, port, lanaddr, strDesc.c_str(), \"TCP\", 0);\n #else\n-    /* miniupnpc 1.6 */\n+        /* miniupnpc 1.6 */\n         r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n                             port, port, lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n #endif\n@@ -981,6 +981,7 @@ void ThreadMapPort2(void* parg)\n                 port, port, lanaddr, r, strupnperror(r));\n         else\n             printf(\"UPnP Port Mapping successful.\\n\");\n+        int i = 1;\n         loop {\n             if (fShutdown || !fUseUPnP)\n             {\n@@ -990,7 +991,26 @@ void ThreadMapPort2(void* parg)\n                 FreeUPNPUrls(&urls);\n                 return;\n             }\n+            if (i % 600 == 0) // Refresh every 20 minutes\n+            {\n+#ifndef UPNPDISCOVER_SUCCESS\n+                /* miniupnpc 1.5 */\n+                r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n+                                    port, port, lanaddr, strDesc.c_str(), \"TCP\", 0);\n+#else\n+                /* miniupnpc 1.6 */\n+                r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n+                                    port, port, lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+#endif\n+\n+                if(r!=UPNPCOMMAND_SUCCESS)\n+                    printf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n+                        port, port, lanaddr, r, strupnperror(r));\n+                else\n+                    printf(\"UPnP Port Mapping successful.\\n\");;\n+            }\n             Sleep(2000);\n+            i++;\n         }\n     } else {\n         printf(\"No valid UPnP IGDs found\\n\");"
      }
    ]
  }
]