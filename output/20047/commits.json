[
  {
    "sha": "136d96b71f94bde2c7471ed852d447ec008e3a30",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzZkOTZiNzFmOTRiZGUyYzc0NzFlZDg1MmQ0NDdlYzAwOGUzYTMw",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-09-30T14:48:04Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-09-30T14:48:04Z"
      },
      "message": "test: use wait_for_{block,header} helpers in p2p_fingerprint.py",
      "tree": {
        "sha": "de8d21399cbd03fd5652824de4103b02611299f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de8d21399cbd03fd5652824de4103b02611299f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/136d96b71f94bde2c7471ed852d447ec008e3a30",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/136d96b71f94bde2c7471ed852d447ec008e3a30",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/136d96b71f94bde2c7471ed852d447ec008e3a30",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/136d96b71f94bde2c7471ed852d447ec008e3a30/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72affcb16cad45bd9e08ca163b2147fd01b84b70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72affcb16cad45bd9e08ca163b2147fd01b84b70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72affcb16cad45bd9e08ca163b2147fd01b84b70"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "332f1ca0503909905fb67d1a8c681b51278171f1",
        "filename": "test/functional/p2p_fingerprint.py",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/136d96b71f94bde2c7471ed852d447ec008e3a30/test/functional/p2p_fingerprint.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/136d96b71f94bde2c7471ed852d447ec008e3a30/test/functional/p2p_fingerprint.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_fingerprint.py?ref=136d96b71f94bde2c7471ed852d447ec008e3a30",
        "patch": "@@ -101,13 +101,11 @@ def run_test(self):\n \n         # Check that getdata request for stale block succeeds\n         self.send_block_request(stale_hash, node0)\n-        test_function = lambda: self.last_block_equals(stale_hash, node0)\n-        self.wait_until(test_function, timeout=3)\n+        node0.wait_for_block(stale_hash, timeout=3)\n \n         # Check that getheader request for stale block header succeeds\n         self.send_header_request(stale_hash, node0)\n-        test_function = lambda: self.last_header_equals(stale_hash, node0)\n-        self.wait_until(test_function, timeout=3)\n+        node0.wait_for_header(hex(stale_hash), timeout=3)\n \n         # Longest chain is extended so stale is much older than chain tip\n         self.nodes[0].setmocktime(0)\n@@ -137,12 +135,10 @@ def run_test(self):\n         node0.sync_with_ping()\n \n         self.send_block_request(block_hash, node0)\n-        test_function = lambda: self.last_block_equals(block_hash, node0)\n-        self.wait_until(test_function, timeout=3)\n+        node0.wait_for_block(block_hash, timeout=3)\n \n         self.send_header_request(block_hash, node0)\n-        test_function = lambda: self.last_header_equals(block_hash, node0)\n-        self.wait_until(test_function, timeout=3)\n+        node0.wait_for_header(hex(block_hash), timeout=3)\n \n if __name__ == '__main__':\n     P2PFingerprintTest().main()"
      }
    ]
  },
  {
    "sha": "6b56c1f4d0d5857d9d61a81dc96db1b603c368b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjU2YzFmNGQwZDU4NTdkOWQ2MWE4MWRjOTZkYjFiNjAzYzM2OGI1",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-04T12:19:15Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-21T13:31:24Z"
      },
      "message": "test: remove last_{block,header}_equals() in p2p_fingerprint.py\n\nTesting that requests to very old blocks / block headers fail can simply be\ndone by checking that the node doesn't respond with any \"blocks\" / \"headers\"\nmessage at all.\nAlso removes unnecessary sending of block/header requests and replaces\ntime.sleep(3) with node0.sync_with_ping().",
      "tree": {
        "sha": "20ddf0f105d065a06b605fb53644547e7cedef4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20ddf0f105d065a06b605fb53644547e7cedef4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b56c1f4d0d5857d9d61a81dc96db1b603c368b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b56c1f4d0d5857d9d61a81dc96db1b603c368b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b56c1f4d0d5857d9d61a81dc96db1b603c368b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b56c1f4d0d5857d9d61a81dc96db1b603c368b5/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "136d96b71f94bde2c7471ed852d447ec008e3a30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/136d96b71f94bde2c7471ed852d447ec008e3a30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/136d96b71f94bde2c7471ed852d447ec008e3a30"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 10,
      "deletions": 22
    },
    "files": [
      {
        "sha": "f60eba2dbfd6ee01d9bfd16229c51a8f721b53d5",
        "filename": "test/functional/p2p_fingerprint.py",
        "status": "modified",
        "additions": 10,
        "deletions": 22,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b56c1f4d0d5857d9d61a81dc96db1b603c368b5/test/functional/p2p_fingerprint.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b56c1f4d0d5857d9d61a81dc96db1b603c368b5/test/functional/p2p_fingerprint.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_fingerprint.py?ref=6b56c1f4d0d5857d9d61a81dc96db1b603c368b5",
        "patch": "@@ -18,6 +18,7 @@\n     msg_block,\n     msg_getdata,\n     msg_getheaders,\n+    p2p_lock,\n )\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n@@ -57,18 +58,6 @@ def send_header_request(self, block_hash, node):\n         msg.hashstop = block_hash\n         node.send_message(msg)\n \n-    # Check whether last block received from node has a given hash\n-    def last_block_equals(self, expected_hash, node):\n-        block_msg = node.last_message.get(\"block\")\n-        return block_msg and block_msg.block.rehash() == expected_hash\n-\n-    # Check whether last block header received from node has a given hash\n-    def last_header_equals(self, expected_hash, node):\n-        headers_msg = node.last_message.get(\"headers\")\n-        return (headers_msg and\n-                headers_msg.headers and\n-                headers_msg.headers[0].rehash() == expected_hash)\n-\n     # Checks that stale blocks timestamped more than a month ago are not served\n     # by the node while recent stale blocks and old active chain blocks are.\n     # This does not currently test that stale blocks timestamped within the\n@@ -109,24 +98,23 @@ def run_test(self):\n \n         # Longest chain is extended so stale is much older than chain tip\n         self.nodes[0].setmocktime(0)\n-        tip = self.nodes[0].generatetoaddress(1, self.nodes[0].get_deterministic_priv_key().address)[0]\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].get_deterministic_priv_key().address)\n         assert_equal(self.nodes[0].getblockcount(), 14)\n-\n-        # Send getdata & getheaders to refresh last received getheader message\n-        block_hash = int(tip, 16)\n-        self.send_block_request(block_hash, node0)\n-        self.send_header_request(block_hash, node0)\n         node0.sync_with_ping()\n \n         # Request for very old stale block should now fail\n+        with p2p_lock:\n+            node0.last_message.pop(\"block\", None)\n         self.send_block_request(stale_hash, node0)\n-        time.sleep(3)\n-        assert not self.last_block_equals(stale_hash, node0)\n+        node0.sync_with_ping()\n+        assert \"block\" not in node0.last_message\n \n         # Request for very old stale block header should now fail\n+        with p2p_lock:\n+            node0.last_message.pop(\"headers\", None)\n         self.send_header_request(stale_hash, node0)\n-        time.sleep(3)\n-        assert not self.last_header_equals(stale_hash, node0)\n+        node0.sync_with_ping()\n+        assert \"headers\" not in node0.last_message\n \n         # Verify we can fetch very old blocks and headers on the active chain\n         block_hash = int(block_hashes[2], 16)"
      }
    ]
  }
]