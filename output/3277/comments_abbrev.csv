brandondahler,2013-11-30T06:43:40Z,"I see no problems with the implementation, but I would suggest changing\n\n```\nclass CAutoFile\n```\n\nto \n\n```\nclass CAutoFile : protected std::fstream\n```\n\nMaking this change will require the removal of the fstream file member variable, likewise that will cause you to have to replace all instances of ""file."" with ""fstream::"" .\n\nThis allows the underlying fstream to be used in spite of b",https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-29547002,29547002,
Diapolo,2013-12-01T13:36:26Z,"@brandondahler Thanks for that suggestion, I'm going to update this pull. Have you got a nice idea, how I could add back the FileCommit() whilst beeing compatible to sdt::fstream? I guess a ::flush() is not enough...\n",https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-29573817,29573817,
BitcoinPullTester,2013-12-01T14:36:24Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5ee9baec85bcc972853af954967ee6b24bdeff2c for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-29574729,29574729,
brandondahler,2013-12-01T16:53:46Z,"@Diapolo I've researched this for some other changes to move everything to fstream.  It appears that there is no easy way to get the fileno from a c++ fstream, and likewise there's no way to directly request the OS flush the data to the disk.\n\nThe best bet that I've found is doing:\n\n```\n::rdbuf().pubsync()\n```\n\n---\n\nThat being said, I question the need to request/force the OS to flush th",https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-29577374,29577374,
sipa,2013-12-01T20:22:27Z,Being able to flush block files to disk is essential for consistency of on-disk structures (you don't want to make a database update that refers to a block being on disk before knowing that block is actually on disk).\n,https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-29582135,29582135,
jgarzik,2013-12-13T00:08:36Z,This does not look like an improvement.\n,https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-30475296,30475296,
laanwj,2013-12-13T04:22:56Z,"I have a slight preference of the low-level file functions to fstream implementations here, because the warts of those are a little bit more apparent to me than those of particular C++ libraries.\n\nAnd this change did not help with fixing the MacOSX corruption either.\n",https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-30485511,30485511,
Diapolo,2013-12-13T07:42:52Z,AFAIK no one ever tried this anyway...\n\n@brandondahler Isn't `::rdbuf().pubsync()` for reading from files?\n,https://github.com/bitcoin/bitcoin/pull/3277#issuecomment-30491875,30491875,
