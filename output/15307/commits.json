[
  {
    "sha": "2aa31110824bbf9fd445229f8903268f5c1dec14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYWEzMTExMDgyNGJiZjlmZDQ0NTIyOWY4OTAzMjY4ZjVjMWRlYzE0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-01-31T22:32:39Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-01-31T22:32:44Z"
      },
      "message": "[tool] Add salvage and zaptxs commands to bitcoin-wallet",
      "tree": {
        "sha": "47e8df13c6dea9ccdd9be1fd641d06fc69bff40b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47e8df13c6dea9ccdd9be1fd641d06fc69bff40b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2aa31110824bbf9fd445229f8903268f5c1dec14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aa31110824bbf9fd445229f8903268f5c1dec14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2aa31110824bbf9fd445229f8903268f5c1dec14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aa31110824bbf9fd445229f8903268f5c1dec14/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b19d8e341a5234c3e41f59f7b3de8febfc51c21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b19d8e341a5234c3e41f59f7b3de8febfc51c21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b19d8e341a5234c3e41f59f7b3de8febfc51c21"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 43,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9cff2839a8d34a22863c87a733be69efac40ed3e",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aa31110824bbf9fd445229f8903268f5c1dec14/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aa31110824bbf9fd445229f8903268f5c1dec14/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=2aa31110824bbf9fd445229f8903268f5c1dec14",
        "patch": "@@ -30,6 +30,8 @@ static void SetupWalletToolArgs()\n \n     gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n     gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n \n     // Hidden\n     gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);"
      },
      {
        "sha": "57797aef75ee44f0083b5720183d5ade81ba0107",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aa31110824bbf9fd445229f8903268f5c1dec14/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aa31110824bbf9fd445229f8903268f5c1dec14/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=2aa31110824bbf9fd445229f8903268f5c1dec14",
        "patch": "@@ -129,6 +129,45 @@ bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n         if (!wallet_instance) return false;\n         WalletShowInfo(wallet_instance.get());\n         wallet_instance->Flush();\n+    } else if (command == \"salvage\") {\n+        if (!fs::exists(path)) {\n+            fprintf(stderr, \"Error: no wallet file at %s\\n\", name.c_str());\n+            return false;\n+        }\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        // dummy chain interface\n+        auto chain = interfaces::MakeChain();\n+        CWallet dummyWallet(*chain, WalletLocation(\"dummy\"), WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        // TODO, set wallets best block to genesis to enforce a rescan\n+        fprintf(stdout, \"Salvage successful. Please rescan your wallet.\\n\");\n+    } else if (command == \"zaptxs\") {\n+        if (!fs::exists(path)) {\n+            fprintf(stderr, \"Error: no wallet file at %s\\n\", name.c_str());\n+            return false;\n+        }\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n+        // dummy chain interface\n+        auto chain = interfaces::MakeChain();\n+        std::shared_ptr<CWallet> tempWallet = MakeUnique<CWallet>(*chain, WalletLocation(name), WalletDatabase::Create(path));\n+        DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n+        if (nZapWalletRet != DBErrors::LOAD_OK) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return false;\n+        }\n+        fprintf(stdout, \"Zaptxs successful executed. Please rescan your wallet.\\n\");\n     } else {\n         fprintf(stderr, \"Invalid command: %s\\n\", command.c_str());\n         return false;"
      },
      {
        "sha": "8f09feaf36b3bd421e14a71b90559441792a1646",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aa31110824bbf9fd445229f8903268f5c1dec14/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aa31110824bbf9fd445229f8903268f5c1dec14/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=2aa31110824bbf9fd445229f8903268f5c1dec14",
        "patch": "@@ -45,6 +45,8 @@ def run_test(self):\n         self.assert_raises_tool_error('Error parsing command line arguments: Invalid parameter -foo', '-foo')\n         self.assert_raises_tool_error('Error loading wallet.dat. Is wallet being used by other process?', '-wallet=wallet.dat', 'info')\n         self.assert_raises_tool_error('Error: no wallet file at nonexistent.dat', '-wallet=nonexistent.dat', 'info')\n+        self.assert_raises_tool_error('Error: no wallet file at nonexistent.dat', '-wallet=nonexistent.dat', 'zaptxs')\n+        self.assert_raises_tool_error('Error: no wallet file at nonexistent.dat', '-wallet=nonexistent.dat', 'salvage')\n \n         # stop the node to close the wallet to call info command\n         self.stop_node(0)"
      }
    ]
  }
]