[
  {
    "sha": "6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31",
    "node_id": "C_kwDOABII59oAKDY5MTFhYjk1ZjE5ZDJiMWY2MGYyZDBiMmYzOTYxZmE2NjM5ZDRmMzE",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-10-21T14:03:03Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-10-21T14:26:50Z"
      },
      "message": "wallet: fix segfault by avoiding invalid default-ctored `external_spk_managers` entry\n\nIn the method `CWallet::LoadActiveScriptPubKeyMan`, the map\n`external_spk_managers` (or `internal_spk_managers`, if parameter\n`internal` is false) is accessed via std::map::operator[], which means\nthat a default-ctored entry is created with a null-pointer as value, if\nthe key doesn't exist.  As soon as this value is dereferenced, a\nsegmentation fault occurs, e.g. in `CWallet::KeypoolCountExternalKeys`.\n\nThe bevaviour can be reproduced by the following steps (starting with empty regtest datadir):\n\n$ ./src/bitcoind -regtest -daemon\n$ ./src/bitcoin-cli -regtest -named createwallet_name=wallet descriptors=true blank=true\n$ cat regtest-descriptors.txt\n[\n  {\n    \"desc\": \"tr([e4445899/49'/1'/0']tprv8ZgxMBicQKsPd8jCeBWsYLEoWxbVgzJDatJ7XkwQ6G3uF4FsHuaziHQ5JZAW4K515nj6kVVwPaNWZSMEcR7aFCwL4tQqTcaoprMKTTtm6Zg/1/*)#mr3llm7f\",\n    \"timestamp\": 1634652324,\n    \"active\": true,\n    \"internal\": true,\n    \"range\": [\n      0,\n      999\n    ],\n    \"next\": 0\n  }\n]\n$ ./src/bitcoin-cli -regtest importdescriptors \"$(cat regtest-descriptors.txt)\"\n[\n  {\n    \"success\": true\n  }\n]\n$ ./src/bitcoin-cli -regtest getwalletinfo\nerror: timeout on transient error: Could not connect to the server 127.0.0.1:18443 (error code 1 - \"EOF reached\")\n\nBug reported by Josef Vondrlik (josef-v).",
      "tree": {
        "sha": "7e911d1ce9af6a42d6206cc39ffafa86de06ab7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e911d1ce9af6a42d6206cc39ffafa86de06ab7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88fc7950f8db5f13a6b259819aced2e3db7ff4d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88fc7950f8db5f13a6b259819aced2e3db7ff4d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88fc7950f8db5f13a6b259819aced2e3db7ff4d8"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "803e88cda21f6d6c515ff5a8c457aa64b82ed1d7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6911ab95f19d2b1f60f2d0b2f3961fa6639d4f31",
        "patch": "@@ -3235,7 +3235,8 @@ void CWallet::LoadActiveScriptPubKeyMan(uint256 id, OutputType type, bool intern\n     auto spk_man = m_spk_managers.at(id).get();\n     spk_mans[type] = spk_man;\n \n-    if (spk_mans_other[type] == spk_man) {\n+    const auto it = spk_mans_other.find(type);\n+    if (it != spk_mans_other.end() && it->second == spk_man) {\n         spk_mans_other.erase(type);\n     }\n "
      }
    ]
  }
]