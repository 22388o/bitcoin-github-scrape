[
  {
    "sha": "29e983386b0aecf99cdb7d0e08ba6b450bed313e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWU5ODMzODZiMGFlY2Y5OWNkYjdkMGUwOGJhNmI0NTBiZWQzMTNl",
    "commit": {
      "author": {
        "name": "Shorya",
        "email": "shoryak@iitk.ac.in",
        "date": "2021-09-01T16:30:05Z"
      },
      "committer": {
        "name": "Shorya",
        "email": "shoryak@iitk.ac.in",
        "date": "2021-09-04T12:47:43Z"
      },
      "message": "Fixes Bug in Transaction generation in ComplexMempool benchmark\n\nAvailable in line 59 is made a reference , so contents of the coin can be modified\n\nWhile generating transactions we select ancestors from available_coins ,in case we exhaust all the outputs of an entry in available_coins\nthen we need to remove it from available_coins before the next iteration of choosing a potential ancestor , it is now implemented with\nthis patch by ,As the index of the entry is randomly chosen from available_coins , In order to remove it from the vector if index of the\nselected entry is not at the end of available_coins vector, it is swapped with the entry at the back of the vector , then the entry at the\nend of available_coins is popped out.\n\nCode generating outputs for the transaction is moved out of the loop, as it needs to be done only once before adding the transaction to ordered_coins",
      "tree": {
        "sha": "3335c99d24695a2882068313dc3d221e82e0f892",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3335c99d24695a2882068313dc3d221e82e0f892"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29e983386b0aecf99cdb7d0e08ba6b450bed313e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29e983386b0aecf99cdb7d0e08ba6b450bed313e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29e983386b0aecf99cdb7d0e08ba6b450bed313e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29e983386b0aecf99cdb7d0e08ba6b450bed313e/comments",
    "author": {
      "login": "shoryak",
      "id": 60062252,
      "node_id": "MDQ6VXNlcjYwMDYyMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/60062252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoryak",
      "html_url": "https://github.com/shoryak",
      "followers_url": "https://api.github.com/users/shoryak/followers",
      "following_url": "https://api.github.com/users/shoryak/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoryak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoryak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoryak/subscriptions",
      "organizations_url": "https://api.github.com/users/shoryak/orgs",
      "repos_url": "https://api.github.com/users/shoryak/repos",
      "events_url": "https://api.github.com/users/shoryak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoryak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shoryak",
      "id": 60062252,
      "node_id": "MDQ6VXNlcjYwMDYyMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/60062252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoryak",
      "html_url": "https://github.com/shoryak",
      "followers_url": "https://api.github.com/users/shoryak/followers",
      "following_url": "https://api.github.com/users/shoryak/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoryak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoryak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoryak/subscriptions",
      "organizations_url": "https://api.github.com/users/shoryak/orgs",
      "repos_url": "https://api.github.com/users/shoryak/repos",
      "events_url": "https://api.github.com/users/shoryak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoryak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83daf47898f8a79cb20d20316c64becd564cf54c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83daf47898f8a79cb20d20316c64becd564cf54c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83daf47898f8a79cb20d20316c64becd564cf54c"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "653a2630fc9de3b22c0a058fb1598d3480b712df",
        "filename": "src/bench/mempool_stress.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29e983386b0aecf99cdb7d0e08ba6b450bed313e/src/bench/mempool_stress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29e983386b0aecf99cdb7d0e08ba6b450bed313e/src/bench/mempool_stress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_stress.cpp?ref=29e983386b0aecf99cdb7d0e08ba6b450bed313e",
        "patch": "@@ -56,7 +56,7 @@ static void ComplexMemPool(benchmark::Bench& bench)\n         size_t n_ancestors = det_rand.randrange(10)+1;\n         for (size_t ancestor = 0; ancestor < n_ancestors && !available_coins.empty(); ++ancestor){\n             size_t idx = det_rand.randrange(available_coins.size());\n-            Available coin = available_coins[idx];\n+            Available& coin = available_coins[idx];\n             uint256 hash = coin.ref->GetHash();\n             // biased towards taking just one ancestor, but maybe more\n             size_t n_to_take = det_rand.randrange(2) == 0 ? 1 : 1+det_rand.randrange(coin.ref->vout.size() - coin.vin_left);\n@@ -66,15 +66,17 @@ static void ComplexMemPool(benchmark::Bench& bench)\n                 tx.vin.back().scriptSig = CScript() << coin.tx_count;\n                 tx.vin.back().scriptWitness.stack.push_back(CScriptNum(coin.tx_count).getvch());\n             }\n-            if (coin.vin_left == coin.ref->vin.size()) {\n-                coin = available_coins.back();\n+            if (coin.vin_left == coin.ref->vout.size()) {\n+                if(available_coins.size()-1!=idx){ // if idx is not the last index swap it with the end index\n+                   std::swap(available_coins[idx], available_coins.back());\n+                }\n                 available_coins.pop_back();\n             }\n-            tx.vout.resize(det_rand.randrange(10)+2);\n-            for (auto& out : tx.vout) {\n-                out.scriptPubKey = CScript() << CScriptNum(tx_counter) << OP_EQUAL;\n-                out.nValue = 10 * COIN;\n-            }\n+        }\n+        tx.vout.resize(det_rand.randrange(10)+2);\n+        for (auto& out : tx.vout) {\n+            out.scriptPubKey = CScript() << CScriptNum(tx_counter) << OP_EQUAL;\n+            out.nValue = 10 * COIN;\n         }\n         ordered_coins.emplace_back(MakeTransactionRef(tx));\n         available_coins.emplace_back(ordered_coins.back(), tx_counter++);"
      }
    ]
  }
]