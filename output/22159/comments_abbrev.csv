practicalswift,2021-06-05 16:59:35,"Concept ACK\n\nVery nice to see! Let's kill the use of uninitialized memory (UUM) bug class! :)",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-855266817,855266817,
DrahtBot,2021-06-05 18:27:47,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-855277805,855277805,
laanwj,2021-06-07 14:12:32,"I'm honestly not sure why this warrants adding another build system configuration flag. For new people buildng from source having so many options only vaguely related to bitcoin's application is confusing. Why not pass it in through `*FLAGS` when needed?\n\nAlternatively maybe we can group these kind of ""warning: testing only"" options together and have a single option. But I don't like having a ",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-855964823,855964823,
MarcoFalke,2021-06-07 15:22:28,"I agree that it is stupid to wrap each compiler option into a config option. While using CXXFLAGS is certainly possible, it is not straightforward, because it comes with some unexpected downsides, like disabling `-g`.\n\nCompare the default CXXFLAGS:\n\n```\n  CXXFLAGS        =  -fdebug-prefix-map=$(abs_srcdir)=.  -fstack-reuse=none -Wstack-protector -fstack-protector-all -fcf-protection=full",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-856030877,856030877,
fanquake,2021-06-09 03:30:05,"I slightly misunderstood the intent when [first reviewing](https://github.com/bitcoin/bitcoin/pull/22159#pullrequestreview-676762024), and agree with @laanwj here. Adding a new configuration option just to turn on a single compiler option is overkill. If it's not possible to achieve what you'd like, without downsides, when using CXXFLAGS, that seems like something we need to fix.",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-857343957,857343957,
laanwj,2021-06-09 06:48:18,"> If it's not possible to achieve what you'd like, without downsides, when using CXXFLAGS, that seems like something we need to fix.\n\nAgree, if CXXFLAGS as a mechanism to pass arbitrary options in is broken, that's what we need to fix. Alternatively, if that is not possible, to add a method to pass arbitrary options that actually works. Wrapping every option in its own configure option is a no",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-857432056,857432056,
MarcoFalke,2021-06-10 09:24:46,Tried to addressed feedback,https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-858463346,858463346,
practicalswift,2021-07-08 22:09:32,"cr ACK fa14c6818f4094669584a110a517fa1347f1f36e\n\nNice not having to repeat the defaults.\n\nNice not having to repeat the defaults.",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-876777675,876777675,
laanwj,2021-08-18 15:05:14,"But if we start doing this for cxxflags, where does it stop. I still disagree with this, it's a non-standard convention, It saves so little effort. But whatever if everyone else thinks it is a good idea.",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-901192290,901192290,
MarcoFalke,2021-08-18 17:20:14,"Yeah, it would be nice if build systems were a bit more user friendly.\n\nI guess I'll just keep typing ""-g -O2"" every time.",https://github.com/bitcoin/bitcoin/pull/22159#issuecomment-901290628,901290628,
fanquake,2021-06-05 08:22:38,"```suggestion\nif test x$use_trivial_auto_var_init_pattern != xno; then\n  AX_CHECK_COMPILE_FLAG([-ftrivial-auto-var-init=$use_trivial_auto_var_init_pattern],[CXXFLAGS=""$CXXFLAGS -ftrivial-auto-var-init=$use_trivial_auto_var_init_pattern""],,[[$CXXFLAG_WERROR]])\n```",https://github.com/bitcoin/bitcoin/pull/22159#discussion_r645961281,645961281,configure.ac
MarcoFalke,2021-06-05 08:43:07,"I avoided that because the only options are `uninitialized` (already default), `zero` (needs `-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang`), `pattern` (can be enabled with the new boolean option).\n\nHappy to apply your patch, but I think it also needs `-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang`, which again will throw a warning if used",https://github.com/bitcoin/bitcoin/pull/22159#discussion_r645963347,645963347,configure.ac
